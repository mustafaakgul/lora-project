

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Feb 06 15:38:36 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,delta=1
   155                           	psect	text136,global,reloc=2,class=CODE,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,delta=1
   158                           	psect	text139,global,reloc=2,class=CODE,delta=1
   159                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   162                           	dabs	1,0x400,48,_BDT
   163                           	dabs	1,0x500,64,_cdc_data_tx
   164                           	dabs	1,0x438,8,_CtrlTrfData
   165                           	dabs	1,0x430,8,_SetupPkt
   166                           	dabs	1,0x540,64,_cdc_data_rx
   167  0000                     
   168                           	psect	idataBANK0
   169  005F0C                     __pidataBANK0:
   170                           	opt stack 0
   171                           
   172                           ;initializer for _Contrast_level
   173  005F0C  13                 	db	19
   174                           
   175                           ;initializer for _dataRateSelection
   176  005F0D  02                 	db	2
   177                           
   178                           ;initializer for _dataRateValue
   179  005F0E  02                 	db	2
   180                           
   181                           ;initializer for _exitUSB
   182  005F0F  01                 	db	1
   183                           
   184                           ;initializer for _menuTimeout
   185  005F10  01                 	db	1
   186                           
   187                           ;initializer for _moteState
   188  005F11  01                 	db	1
   189                           
   190                           ;initializer for _periodicState
   191  005F12  03                 	db	3
   192                           
   193                           ;initializer for _periodicTimerValue
   194  005F13  03                 	db	3
   195                           
   196                           ;initializer for _periodicUpValue
   197  005F14  03                 	db	3
   198                           
   199                           	psect	idataBANK1
   200  005F60                     __pidataBANK1:
   201                           	opt stack 0
   202                           
   203                           ;initializer for _selectedFont
   204  005F60  01                 	db	low _OledFont0
   205  005F61  76                 	db	high _OledFont0
   206                           
   207                           	psect	mediumconst
   208  0075F8                     __pmediumconst:
   209                           	opt stack 0
   210  0075F8  00                 	db	0
   211  0075F9                     _USB_SD_Ptr:
   212                           	opt stack 0
   213  0075F9  BE                 	db	low _sd000
   214  0075FA  79                 	db	high _sd000
   215  0075FB  44                 	db	low _sd001
   216  0075FC  79                 	db	high _sd001
   217  0075FD  78                 	db	low _sd002
   218  0075FE  79                 	db	high _sd002
   219  0075FF                     __end_of_USB_SD_Ptr:
   220                           	opt stack 0
   221  0075FF                     _USB_CD_Ptr:
   222                           	opt stack 0
   223  0075FF  01                 	db	low _configDescriptor1
   224  007600  79                 	db	high _configDescriptor1
   225  007601                     __end_of_USB_CD_Ptr:
   226                           	opt stack 0
   227  007601                     _OledFont0:
   228                           	opt stack 0
   229  007601  00                 	db	0
   230  007602  00                 	db	0
   231  007603  00                 	db	0
   232  007604  00                 	db	0
   233  007605  00                 	db	0
   234  007606  00                 	db	0
   235  007607  00                 	db	0
   236  007608  00                 	db	0
   237  007609  00                 	db	0
   238  00760A  00                 	db	0
   239  00760B  00                 	db	0
   240  00760C  5F                 	db	95
   241  00760D  00                 	db	0
   242  00760E  00                 	db	0
   243  00760F  00                 	db	0
   244  007610  00                 	db	0
   245  007611  00                 	db	0
   246  007612  00                 	db	0
   247  007613  03                 	db	3
   248  007614  00                 	db	0
   249  007615  03                 	db	3
   250  007616  00                 	db	0
   251  007617  00                 	db	0
   252  007618  00                 	db	0
   253  007619  64                 	db	100
   254  00761A  3C                 	db	60
   255  00761B  26                 	db	38
   256  00761C  64                 	db	100
   257  00761D  3C                 	db	60
   258  00761E  26                 	db	38
   259  00761F  24                 	db	36
   260  007620  00                 	db	0
   261  007621  26                 	db	38
   262  007622  49                 	db	73
   263  007623  49                 	db	73
   264  007624  7F                 	db	127
   265  007625  49                 	db	73
   266  007626  49                 	db	73
   267  007627  32                 	db	50
   268  007628  00                 	db	0
   269  007629  42                 	db	66
   270  00762A  25                 	db	37
   271  00762B  12                 	db	18
   272  00762C  08                 	db	8
   273  00762D  24                 	db	36
   274  00762E  52                 	db	82
   275  00762F  21                 	db	33
   276  007630  00                 	db	0
   277  007631  20                 	db	32
   278  007632  50                 	db	80
   279  007633  4E                 	db	78
   280  007634  55                 	db	85
   281  007635  22                 	db	34
   282  007636  58                 	db	88
   283  007637  28                 	db	40
   284  007638  00                 	db	0
   285  007639  00                 	db	0
   286  00763A  00                 	db	0
   287  00763B  00                 	db	0
   288  00763C  03                 	db	3
   289  00763D  00                 	db	0
   290  00763E  00                 	db	0
   291  00763F  00                 	db	0
   292  007640  00                 	db	0
   293  007641  00                 	db	0
   294  007642  00                 	db	0
   295  007643  1C                 	db	28
   296  007644  22                 	db	34
   297  007645  41                 	db	65
   298  007646  00                 	db	0
   299  007647  00                 	db	0
   300  007648  00                 	db	0
   301  007649  00                 	db	0
   302  00764A  00                 	db	0
   303  00764B  00                 	db	0
   304  00764C  41                 	db	65
   305  00764D  22                 	db	34
   306  00764E  1C                 	db	28
   307  00764F  00                 	db	0
   308  007650  00                 	db	0
   309  007651  00                 	db	0
   310  007652  15                 	db	21
   311  007653  15                 	db	21
   312  007654  0E                 	db	14
   313  007655  0E                 	db	14
   314  007656  15                 	db	21
   315  007657  15                 	db	21
   316  007658  00                 	db	0
   317  007659  00                 	db	0
   318  00765A  08                 	db	8
   319  00765B  08                 	db	8
   320  00765C  3E                 	db	62
   321  00765D  08                 	db	8
   322  00765E  08                 	db	8
   323  00765F  00                 	db	0
   324  007660  00                 	db	0
   325  007661  00                 	db	0
   326  007662  00                 	db	0
   327  007663  00                 	db	0
   328  007664  50                 	db	80
   329  007665  30                 	db	48
   330  007666  00                 	db	0
   331  007667  00                 	db	0
   332  007668  00                 	db	0
   333  007669  00                 	db	0
   334  00766A  08                 	db	8
   335  00766B  08                 	db	8
   336  00766C  08                 	db	8
   337  00766D  08                 	db	8
   338  00766E  08                 	db	8
   339  00766F  00                 	db	0
   340  007670  00                 	db	0
   341  007671  00                 	db	0
   342  007672  00                 	db	0
   343  007673  00                 	db	0
   344  007674  40                 	db	64
   345  007675  00                 	db	0
   346  007676  00                 	db	0
   347  007677  00                 	db	0
   348  007678  00                 	db	0
   349  007679  40                 	db	64
   350  00767A  20                 	db	32
   351  00767B  10                 	db	16
   352  00767C  08                 	db	8
   353  00767D  04                 	db	4
   354  00767E  02                 	db	2
   355  00767F  01                 	db	1
   356  007680  00                 	db	0
   357  007681  00                 	db	0
   358  007682  3E                 	db	62
   359  007683  41                 	db	65
   360  007684  41                 	db	65
   361  007685  41                 	db	65
   362  007686  3E                 	db	62
   363  007687  00                 	db	0
   364  007688  00                 	db	0
   365  007689  00                 	db	0
   366  00768A  00                 	db	0
   367  00768B  41                 	db	65
   368  00768C  7F                 	db	127
   369  00768D  40                 	db	64
   370  00768E  00                 	db	0
   371  00768F  00                 	db	0
   372  007690  00                 	db	0
   373  007691  00                 	db	0
   374  007692  42                 	db	66
   375  007693  61                 	db	97
   376  007694  51                 	db	81
   377  007695  49                 	db	73
   378  007696  6E                 	db	110
   379  007697  00                 	db	0
   380  007698  00                 	db	0
   381  007699  00                 	db	0
   382  00769A  22                 	db	34
   383  00769B  41                 	db	65
   384  00769C  49                 	db	73
   385  00769D  49                 	db	73
   386  00769E  36                 	db	54
   387  00769F  00                 	db	0
   388  0076A0  00                 	db	0
   389  0076A1  00                 	db	0
   390  0076A2  18                 	db	24
   391  0076A3  14                 	db	20
   392  0076A4  12                 	db	18
   393  0076A5  7F                 	db	127
   394  0076A6  10                 	db	16
   395  0076A7  00                 	db	0
   396  0076A8  00                 	db	0
   397  0076A9  00                 	db	0
   398  0076AA  27                 	db	39
   399  0076AB  49                 	db	73
   400  0076AC  49                 	db	73
   401  0076AD  49                 	db	73
   402  0076AE  71                 	db	113
   403  0076AF  00                 	db	0
   404  0076B0  00                 	db	0
   405  0076B1  00                 	db	0
   406  0076B2  3C                 	db	60
   407  0076B3  4A                 	db	74
   408  0076B4  49                 	db	73
   409  0076B5  48                 	db	72
   410  0076B6  70                 	db	112
   411  0076B7  00                 	db	0
   412  0076B8  00                 	db	0
   413  0076B9  00                 	db	0
   414  0076BA  43                 	db	67
   415  0076BB  21                 	db	33
   416  0076BC  11                 	db	17
   417  0076BD  0D                 	db	13
   418  0076BE  03                 	db	3
   419  0076BF  00                 	db	0
   420  0076C0  00                 	db	0
   421  0076C1  00                 	db	0
   422  0076C2  36                 	db	54
   423  0076C3  49                 	db	73
   424  0076C4  49                 	db	73
   425  0076C5  49                 	db	73
   426  0076C6  36                 	db	54
   427  0076C7  00                 	db	0
   428  0076C8  00                 	db	0
   429  0076C9  00                 	db	0
   430  0076CA  06                 	db	6
   431  0076CB  09                 	db	9
   432  0076CC  49                 	db	73
   433  0076CD  29                 	db	41
   434  0076CE  1E                 	db	30
   435  0076CF  00                 	db	0
   436  0076D0  00                 	db	0
   437  0076D1  00                 	db	0
   438  0076D2  00                 	db	0
   439  0076D3  00                 	db	0
   440  0076D4  12                 	db	18
   441  0076D5  00                 	db	0
   442  0076D6  00                 	db	0
   443  0076D7  00                 	db	0
   444  0076D8  00                 	db	0
   445  0076D9  00                 	db	0
   446  0076DA  00                 	db	0
   447  0076DB  00                 	db	0
   448  0076DC  52                 	db	82
   449  0076DD  30                 	db	48
   450  0076DE  00                 	db	0
   451  0076DF  00                 	db	0
   452  0076E0  00                 	db	0
   453  0076E1  00                 	db	0
   454  0076E2  00                 	db	0
   455  0076E3  08                 	db	8
   456  0076E4  14                 	db	20
   457  0076E5  14                 	db	20
   458  0076E6  22                 	db	34
   459  0076E7  00                 	db	0
   460  0076E8  00                 	db	0
   461  0076E9  00                 	db	0
   462  0076EA  14                 	db	20
   463  0076EB  14                 	db	20
   464  0076EC  14                 	db	20
   465  0076ED  14                 	db	20
   466  0076EE  14                 	db	20
   467  0076EF  14                 	db	20
   468  0076F0  00                 	db	0
   469  0076F1  00                 	db	0
   470  0076F2  00                 	db	0
   471  0076F3  22                 	db	34
   472  0076F4  14                 	db	20
   473  0076F5  14                 	db	20
   474  0076F6  08                 	db	8
   475  0076F7  00                 	db	0
   476  0076F8  00                 	db	0
   477  0076F9  00                 	db	0
   478  0076FA  02                 	db	2
   479  0076FB  01                 	db	1
   480  0076FC  59                 	db	89
   481  0076FD  05                 	db	5
   482  0076FE  02                 	db	2
   483  0076FF  00                 	db	0
   484  007700  00                 	db	0
   485  007701  3E                 	db	62
   486  007702  41                 	db	65
   487  007703  5D                 	db	93
   488  007704  55                 	db	85
   489  007705  4D                 	db	77
   490  007706  51                 	db	81
   491  007707  2E                 	db	46
   492  007708  00                 	db	0
   493  007709  40                 	db	64
   494  00770A  7C                 	db	124
   495  00770B  4A                 	db	74
   496  00770C  09                 	db	9
   497  00770D  4A                 	db	74
   498  00770E  7C                 	db	124
   499  00770F  40                 	db	64
   500  007710  00                 	db	0
   501  007711  41                 	db	65
   502  007712  7F                 	db	127
   503  007713  49                 	db	73
   504  007714  49                 	db	73
   505  007715  49                 	db	73
   506  007716  49                 	db	73
   507  007717  36                 	db	54
   508  007718  00                 	db	0
   509  007719  1C                 	db	28
   510  00771A  22                 	db	34
   511  00771B  41                 	db	65
   512  00771C  41                 	db	65
   513  00771D  41                 	db	65
   514  00771E  41                 	db	65
   515  00771F  22                 	db	34
   516  007720  00                 	db	0
   517  007721  41                 	db	65
   518  007722  7F                 	db	127
   519  007723  41                 	db	65
   520  007724  41                 	db	65
   521  007725  41                 	db	65
   522  007726  22                 	db	34
   523  007727  1C                 	db	28
   524  007728  00                 	db	0
   525  007729  41                 	db	65
   526  00772A  7F                 	db	127
   527  00772B  49                 	db	73
   528  00772C  49                 	db	73
   529  00772D  5D                 	db	93
   530  00772E  41                 	db	65
   531  00772F  63                 	db	99
   532  007730  00                 	db	0
   533  007731  41                 	db	65
   534  007732  7F                 	db	127
   535  007733  49                 	db	73
   536  007734  09                 	db	9
   537  007735  1D                 	db	29
   538  007736  01                 	db	1
   539  007737  03                 	db	3
   540  007738  00                 	db	0
   541  007739  1C                 	db	28
   542  00773A  22                 	db	34
   543  00773B  41                 	db	65
   544  00773C  49                 	db	73
   545  00773D  49                 	db	73
   546  00773E  3A                 	db	58
   547  00773F  08                 	db	8
   548  007740  00                 	db	0
   549  007741  41                 	db	65
   550  007742  7F                 	db	127
   551  007743  08                 	db	8
   552  007744  08                 	db	8
   553  007745  08                 	db	8
   554  007746  7F                 	db	127
   555  007747  41                 	db	65
   556  007748  00                 	db	0
   557  007749  00                 	db	0
   558  00774A  41                 	db	65
   559  00774B  41                 	db	65
   560  00774C  7F                 	db	127
   561  00774D  41                 	db	65
   562  00774E  41                 	db	65
   563  00774F  00                 	db	0
   564  007750  00                 	db	0
   565  007751  30                 	db	48
   566  007752  40                 	db	64
   567  007753  41                 	db	65
   568  007754  41                 	db	65
   569  007755  3F                 	db	63
   570  007756  01                 	db	1
   571  007757  01                 	db	1
   572  007758  00                 	db	0
   573  007759  41                 	db	65
   574  00775A  7F                 	db	127
   575  00775B  08                 	db	8
   576  00775C  0C                 	db	12
   577  00775D  12                 	db	18
   578  00775E  61                 	db	97
   579  00775F  41                 	db	65
   580  007760  00                 	db	0
   581  007761  41                 	db	65
   582  007762  7F                 	db	127
   583  007763  41                 	db	65
   584  007764  40                 	db	64
   585  007765  40                 	db	64
   586  007766  40                 	db	64
   587  007767  60                 	db	96
   588  007768  00                 	db	0
   589  007769  41                 	db	65
   590  00776A  7F                 	db	127
   591  00776B  42                 	db	66
   592  00776C  0C                 	db	12
   593  00776D  42                 	db	66
   594  00776E  7F                 	db	127
   595  00776F  41                 	db	65
   596  007770  00                 	db	0
   597  007771  41                 	db	65
   598  007772  7F                 	db	127
   599  007773  42                 	db	66
   600  007774  0C                 	db	12
   601  007775  11                 	db	17
   602  007776  7F                 	db	127
   603  007777  01                 	db	1
   604  007778  00                 	db	0
   605  007779  1C                 	db	28
   606  00777A  22                 	db	34
   607  00777B  41                 	db	65
   608  00777C  41                 	db	65
   609  00777D  41                 	db	65
   610  00777E  22                 	db	34
   611  00777F  1C                 	db	28
   612  007780  00                 	db	0
   613  007781  41                 	db	65
   614  007782  7F                 	db	127
   615  007783  49                 	db	73
   616  007784  09                 	db	9
   617  007785  09                 	db	9
   618  007786  09                 	db	9
   619  007787  06                 	db	6
   620  007788  00                 	db	0
   621  007789  0C                 	db	12
   622  00778A  12                 	db	18
   623  00778B  21                 	db	33
   624  00778C  21                 	db	33
   625  00778D  61                 	db	97
   626  00778E  52                 	db	82
   627  00778F  4C                 	db	76
   628  007790  00                 	db	0
   629  007791  41                 	db	65
   630  007792  7F                 	db	127
   631  007793  09                 	db	9
   632  007794  09                 	db	9
   633  007795  19                 	db	25
   634  007796  69                 	db	105
   635  007797  46                 	db	70
   636  007798  00                 	db	0
   637  007799  66                 	db	102
   638  00779A  49                 	db	73
   639  00779B  49                 	db	73
   640  00779C  49                 	db	73
   641  00779D  49                 	db	73
   642  00779E  49                 	db	73
   643  00779F  33                 	db	51
   644  0077A0  00                 	db	0
   645  0077A1  03                 	db	3
   646  0077A2  01                 	db	1
   647  0077A3  41                 	db	65
   648  0077A4  7F                 	db	127
   649  0077A5  41                 	db	65
   650  0077A6  01                 	db	1
   651  0077A7  03                 	db	3
   652  0077A8  00                 	db	0
   653  0077A9  01                 	db	1
   654  0077AA  3F                 	db	63
   655  0077AB  41                 	db	65
   656  0077AC  40                 	db	64
   657  0077AD  41                 	db	65
   658  0077AE  3F                 	db	63
   659  0077AF  01                 	db	1
   660  0077B0  00                 	db	0
   661  0077B1  01                 	db	1
   662  0077B2  0F                 	db	15
   663  0077B3  31                 	db	49
   664  0077B4  40                 	db	64
   665  0077B5  31                 	db	49
   666  0077B6  0F                 	db	15
   667  0077B7  01                 	db	1
   668  0077B8  00                 	db	0
   669  0077B9  01                 	db	1
   670  0077BA  1F                 	db	31
   671  0077BB  61                 	db	97
   672  0077BC  14                 	db	20
   673  0077BD  61                 	db	97
   674  0077BE  1F                 	db	31
   675  0077BF  01                 	db	1
   676  0077C0  00                 	db	0
   677  0077C1  41                 	db	65
   678  0077C2  41                 	db	65
   679  0077C3  36                 	db	54
   680  0077C4  08                 	db	8
   681  0077C5  36                 	db	54
   682  0077C6  41                 	db	65
   683  0077C7  41                 	db	65
   684  0077C8  00                 	db	0
   685  0077C9  01                 	db	1
   686  0077CA  03                 	db	3
   687  0077CB  44                 	db	68
   688  0077CC  78                 	db	120
   689  0077CD  44                 	db	68
   690  0077CE  03                 	db	3
   691  0077CF  01                 	db	1
   692  0077D0  00                 	db	0
   693  0077D1  43                 	db	67
   694  0077D2  61                 	db	97
   695  0077D3  51                 	db	81
   696  0077D4  49                 	db	73
   697  0077D5  45                 	db	69
   698  0077D6  43                 	db	67
   699  0077D7  61                 	db	97
   700  0077D8  00                 	db	0
   701  0077D9  00                 	db	0
   702  0077DA  00                 	db	0
   703  0077DB  7F                 	db	127
   704  0077DC  41                 	db	65
   705  0077DD  41                 	db	65
   706  0077DE  00                 	db	0
   707  0077DF  00                 	db	0
   708  0077E0  00                 	db	0
   709  0077E1  01                 	db	1
   710  0077E2  02                 	db	2
   711  0077E3  04                 	db	4
   712  0077E4  08                 	db	8
   713  0077E5  10                 	db	16
   714  0077E6  20                 	db	32
   715  0077E7  40                 	db	64
   716  0077E8  00                 	db	0
   717  0077E9  00                 	db	0
   718  0077EA  00                 	db	0
   719  0077EB  41                 	db	65
   720  0077EC  41                 	db	65
   721  0077ED  7F                 	db	127
   722  0077EE  00                 	db	0
   723  0077EF  00                 	db	0
   724  0077F0  00                 	db	0
   725  0077F1  00                 	db	0
   726  0077F2  04                 	db	4
   727  0077F3  02                 	db	2
   728  0077F4  01                 	db	1
   729  0077F5  01                 	db	1
   730  0077F6  02                 	db	2
   731  0077F7  04                 	db	4
   732  0077F8  00                 	db	0
   733  0077F9  00                 	db	0
   734  0077FA  40                 	db	64
   735  0077FB  40                 	db	64
   736  0077FC  40                 	db	64
   737  0077FD  40                 	db	64
   738  0077FE  40                 	db	64
   739  0077FF  40                 	db	64
   740  007800  00                 	db	0
   741  007801  00                 	db	0
   742  007802  01                 	db	1
   743  007803  02                 	db	2
   744  007804  00                 	db	0
   745  007805  00                 	db	0
   746  007806  00                 	db	0
   747  007807  00                 	db	0
   748  007808  00                 	db	0
   749  007809  00                 	db	0
   750  00780A  34                 	db	52
   751  00780B  4A                 	db	74
   752  00780C  4A                 	db	74
   753  00780D  4A                 	db	74
   754  00780E  3C                 	db	60
   755  00780F  40                 	db	64
   756  007810  00                 	db	0
   757  007811  00                 	db	0
   758  007812  41                 	db	65
   759  007813  3F                 	db	63
   760  007814  48                 	db	72
   761  007815  48                 	db	72
   762  007816  48                 	db	72
   763  007817  30                 	db	48
   764  007818  00                 	db	0
   765  007819  00                 	db	0
   766  00781A  3C                 	db	60
   767  00781B  42                 	db	66
   768  00781C  42                 	db	66
   769  00781D  42                 	db	66
   770  00781E  24                 	db	36
   771  00781F  00                 	db	0
   772  007820  00                 	db	0
   773  007821  00                 	db	0
   774  007822  30                 	db	48
   775  007823  48                 	db	72
   776  007824  48                 	db	72
   777  007825  49                 	db	73
   778  007826  3F                 	db	63
   779  007827  40                 	db	64
   780  007828  00                 	db	0
   781  007829  00                 	db	0
   782  00782A  3C                 	db	60
   783  00782B  4A                 	db	74
   784  00782C  4A                 	db	74
   785  00782D  4A                 	db	74
   786  00782E  2C                 	db	44
   787  00782F  00                 	db	0
   788  007830  00                 	db	0
   789  007831  00                 	db	0
   790  007832  00                 	db	0
   791  007833  48                 	db	72
   792  007834  7E                 	db	126
   793  007835  49                 	db	73
   794  007836  09                 	db	9
   795  007837  00                 	db	0
   796  007838  00                 	db	0
   797  007839  00                 	db	0
   798  00783A  26                 	db	38
   799  00783B  49                 	db	73
   800  00783C  49                 	db	73
   801  00783D  49                 	db	73
   802  00783E  3F                 	db	63
   803  00783F  01                 	db	1
   804  007840  00                 	db	0
   805  007841  41                 	db	65
   806  007842  7F                 	db	127
   807  007843  48                 	db	72
   808  007844  04                 	db	4
   809  007845  44                 	db	68
   810  007846  78                 	db	120
   811  007847  40                 	db	64
   812  007848  00                 	db	0
   813  007849  00                 	db	0
   814  00784A  00                 	db	0
   815  00784B  44                 	db	68
   816  00784C  7D                 	db	125
   817  00784D  40                 	db	64
   818  00784E  00                 	db	0
   819  00784F  00                 	db	0
   820  007850  00                 	db	0
   821  007851  00                 	db	0
   822  007852  00                 	db	0
   823  007853  40                 	db	64
   824  007854  44                 	db	68
   825  007855  3D                 	db	61
   826  007856  00                 	db	0
   827  007857  00                 	db	0
   828  007858  00                 	db	0
   829  007859  41                 	db	65
   830  00785A  7F                 	db	127
   831  00785B  10                 	db	16
   832  00785C  18                 	db	24
   833  00785D  24                 	db	36
   834  00785E  42                 	db	66
   835  00785F  42                 	db	66
   836  007860  00                 	db	0
   837  007861  00                 	db	0
   838  007862  40                 	db	64
   839  007863  41                 	db	65
   840  007864  7F                 	db	127
   841  007865  40                 	db	64
   842  007866  40                 	db	64
   843  007867  00                 	db	0
   844  007868  00                 	db	0
   845  007869  42                 	db	66
   846  00786A  7E                 	db	126
   847  00786B  02                 	db	2
   848  00786C  7C                 	db	124
   849  00786D  02                 	db	2
   850  00786E  7E                 	db	126
   851  00786F  40                 	db	64
   852  007870  00                 	db	0
   853  007871  42                 	db	66
   854  007872  7E                 	db	126
   855  007873  44                 	db	68
   856  007874  02                 	db	2
   857  007875  42                 	db	66
   858  007876  7C                 	db	124
   859  007877  40                 	db	64
   860  007878  00                 	db	0
   861  007879  00                 	db	0
   862  00787A  3C                 	db	60
   863  00787B  42                 	db	66
   864  00787C  42                 	db	66
   865  00787D  42                 	db	66
   866  00787E  3C                 	db	60
   867  00787F  00                 	db	0
   868  007880  00                 	db	0
   869  007881  00                 	db	0
   870  007882  41                 	db	65
   871  007883  7F                 	db	127
   872  007884  49                 	db	73
   873  007885  09                 	db	9
   874  007886  09                 	db	9
   875  007887  06                 	db	6
   876  007888  00                 	db	0
   877  007889  00                 	db	0
   878  00788A  06                 	db	6
   879  00788B  09                 	db	9
   880  00788C  09                 	db	9
   881  00788D  49                 	db	73
   882  00788E  7F                 	db	127
   883  00788F  41                 	db	65
   884  007890  00                 	db	0
   885  007891  00                 	db	0
   886  007892  42                 	db	66
   887  007893  7E                 	db	126
   888  007894  44                 	db	68
   889  007895  02                 	db	2
   890  007896  02                 	db	2
   891  007897  04                 	db	4
   892  007898  00                 	db	0
   893  007899  00                 	db	0
   894  00789A  64                 	db	100
   895  00789B  4A                 	db	74
   896  00789C  4A                 	db	74
   897  00789D  4A                 	db	74
   898  00789E  36                 	db	54
   899  00789F  00                 	db	0
   900  0078A0  00                 	db	0
   901  0078A1  00                 	db	0
   902  0078A2  04                 	db	4
   903  0078A3  3F                 	db	63
   904  0078A4  44                 	db	68
   905  0078A5  44                 	db	68
   906  0078A6  20                 	db	32
   907  0078A7  00                 	db	0
   908  0078A8  00                 	db	0
   909  0078A9  00                 	db	0
   910  0078AA  02                 	db	2
   911  0078AB  3E                 	db	62
   912  0078AC  40                 	db	64
   913  0078AD  40                 	db	64
   914  0078AE  22                 	db	34
   915  0078AF  7E                 	db	126
   916  0078B0  40                 	db	64
   917  0078B1  02                 	db	2
   918  0078B2  0E                 	db	14
   919  0078B3  32                 	db	50
   920  0078B4  40                 	db	64
   921  0078B5  32                 	db	50
   922  0078B6  0E                 	db	14
   923  0078B7  02                 	db	2
   924  0078B8  00                 	db	0
   925  0078B9  02                 	db	2
   926  0078BA  1E                 	db	30
   927  0078BB  62                 	db	98
   928  0078BC  18                 	db	24
   929  0078BD  62                 	db	98
   930  0078BE  1E                 	db	30
   931  0078BF  02                 	db	2
   932  0078C0  00                 	db	0
   933  0078C1  42                 	db	66
   934  0078C2  62                 	db	98
   935  0078C3  14                 	db	20
   936  0078C4  08                 	db	8
   937  0078C5  14                 	db	20
   938  0078C6  62                 	db	98
   939  0078C7  42                 	db	66
   940  0078C8  00                 	db	0
   941  0078C9  01                 	db	1
   942  0078CA  43                 	db	67
   943  0078CB  45                 	db	69
   944  0078CC  38                 	db	56
   945  0078CD  05                 	db	5
   946  0078CE  03                 	db	3
   947  0078CF  01                 	db	1
   948  0078D0  00                 	db	0
   949  0078D1  00                 	db	0
   950  0078D2  46                 	db	70
   951  0078D3  62                 	db	98
   952  0078D4  52                 	db	82
   953  0078D5  4A                 	db	74
   954  0078D6  46                 	db	70
   955  0078D7  62                 	db	98
   956  0078D8  00                 	db	0
   957  0078D9  00                 	db	0
   958  0078DA  00                 	db	0
   959  0078DB  08                 	db	8
   960  0078DC  36                 	db	54
   961  0078DD  41                 	db	65
   962  0078DE  00                 	db	0
   963  0078DF  00                 	db	0
   964  0078E0  00                 	db	0
   965  0078E1  00                 	db	0
   966  0078E2  00                 	db	0
   967  0078E3  00                 	db	0
   968  0078E4  7F                 	db	127
   969  0078E5  00                 	db	0
   970  0078E6  00                 	db	0
   971  0078E7  00                 	db	0
   972  0078E8  00                 	db	0
   973  0078E9  00                 	db	0
   974  0078EA  00                 	db	0
   975  0078EB  00                 	db	0
   976  0078EC  41                 	db	65
   977  0078ED  36                 	db	54
   978  0078EE  08                 	db	8
   979  0078EF  00                 	db	0
   980  0078F0  00                 	db	0
   981  0078F1  00                 	db	0
   982  0078F2  18                 	db	24
   983  0078F3  08                 	db	8
   984  0078F4  08                 	db	8
   985  0078F5  10                 	db	16
   986  0078F6  10                 	db	16
   987  0078F7  18                 	db	24
   988  0078F8  00                 	db	0
   989  0078F9  AA                 	db	170
   990  0078FA  55                 	db	85
   991  0078FB  AA                 	db	170
   992  0078FC  55                 	db	85
   993  0078FD  AA                 	db	170
   994  0078FE  55                 	db	85
   995  0078FF  AA                 	db	170
   996  007900  55                 	db	85
   997  007901                     __end_of_OledFont0:
   998                           	opt stack 0
   999  007901                     _configDescriptor1:
  1000                           	opt stack 0
  1001  007901  09                 	db	9
  1002  007902  02                 	db	2
  1003  007903  43                 	db	67
  1004  007904  00                 	db	0
  1005  007905  02                 	db	2
  1006  007906  01                 	db	1
  1007  007907  00                 	db	0
  1008  007908  C0                 	db	192
  1009  007909  32                 	db	50
  1010  00790A  09                 	db	9
  1011  00790B  04                 	db	4
  1012  00790C  00                 	db	0
  1013  00790D  00                 	db	0
  1014  00790E  01                 	db	1
  1015  00790F  02                 	db	2
  1016  007910  02                 	db	2
  1017  007911  01                 	db	1
  1018  007912  00                 	db	0
  1019  007913  05                 	db	5
  1020  007914  24                 	db	36
  1021  007915  00                 	db	0
  1022  007916  10                 	db	16
  1023  007917  01                 	db	1
  1024  007918  04                 	db	4
  1025  007919  24                 	db	36
  1026  00791A  02                 	db	2
  1027  00791B  02                 	db	2
  1028  00791C  05                 	db	5
  1029  00791D  24                 	db	36
  1030  00791E  06                 	db	6
  1031  00791F  00                 	db	0
  1032  007920  01                 	db	1
  1033  007921  05                 	db	5
  1034  007922  24                 	db	36
  1035  007923  01                 	db	1
  1036  007924  00                 	db	0
  1037  007925  01                 	db	1
  1038  007926  07                 	db	7
  1039  007927  05                 	db	5
  1040  007928  81                 	db	129
  1041  007929  03                 	db	3
  1042  00792A  08                 	db	8
  1043  00792B  00                 	db	0
  1044  00792C  02                 	db	2
  1045  00792D  09                 	db	9
  1046  00792E  04                 	db	4
  1047  00792F  01                 	db	1
  1048  007930  00                 	db	0
  1049  007931  02                 	db	2
  1050  007932  0A                 	db	10
  1051  007933  00                 	db	0
  1052  007934  00                 	db	0
  1053  007935  00                 	db	0
  1054  007936  07                 	db	7
  1055  007937  05                 	db	5
  1056  007938  02                 	db	2
  1057  007939  02                 	db	2
  1058  00793A  40                 	db	64
  1059  00793B  00                 	db	0
  1060  00793C  00                 	db	0
  1061  00793D  07                 	db	7
  1062  00793E  05                 	db	5
  1063  00793F  82                 	db	130
  1064  007940  02                 	db	2
  1065  007941  40                 	db	64
  1066  007942  00                 	db	0
  1067  007943  00                 	db	0
  1068  007944                     __end_of_configDescriptor1:
  1069                           	opt stack 0
  1070  007944                     _sd001:
  1071                           	opt stack 0
  1072  007944  34                 	db	52
  1073  007945  03                 	db	3
  1074  007946  004D               	dw	77
  1075  007948  0069               	dw	105
  1076  00794A  0063               	dw	99
  1077  00794C  0072               	dw	114
  1078  00794E  006F               	dw	111
  1079  007950  0063               	dw	99
  1080  007952  0068               	dw	104
  1081  007954  0069               	dw	105
  1082  007956  0070               	dw	112
  1083  007958  0020               	dw	32
  1084  00795A  0054               	dw	84
  1085  00795C  0065               	dw	101
  1086  00795E  0063               	dw	99
  1087  007960  0068               	dw	104
  1088  007962  006E               	dw	110
  1089  007964  006F               	dw	111
  1090  007966  006C               	dw	108
  1091  007968  006F               	dw	111
  1092  00796A  0067               	dw	103
  1093  00796C  0079               	dw	121
  1094  00796E  0020               	dw	32
  1095  007970  0049               	dw	73
  1096  007972  006E               	dw	110
  1097  007974  0063               	dw	99
  1098  007976  002E               	dw	46
  1099  007978                     __end_of_sd001:
  1100                           	opt stack 0
  1101  007978                     _sd002:
  1102                           	opt stack 0
  1103  007978  34                 	db	52
  1104  007979  03                 	db	3
  1105  00797A  0043               	dw	67
  1106  00797C  0044               	dw	68
  1107  00797E  0043               	dw	67
  1108  007980  0020               	dw	32
  1109  007982  0052               	dw	82
  1110  007984  0053               	dw	83
  1111  007986  002D               	dw	45
  1112  007988  0032               	dw	50
  1113  00798A  0033               	dw	51
  1114  00798C  0032               	dw	50
  1115  00798E  0020               	dw	32
  1116  007990  0045               	dw	69
  1117  007992  006D               	dw	109
  1118  007994  0075               	dw	117
  1119  007996  006C               	dw	108
  1120  007998  0061               	dw	97
  1121  00799A  0074               	dw	116
  1122  00799C  0069               	dw	105
  1123  00799E  006F               	dw	111
  1124  0079A0  006E               	dw	110
  1125  0079A2  0020               	dw	32
  1126  0079A4  0044               	dw	68
  1127  0079A6  0065               	dw	101
  1128  0079A8  006D               	dw	109
  1129  0079AA  006F               	dw	111
  1130  0079AC                     __end_of_sd002:
  1131                           	opt stack 0
  1132  0079AC                     _device_dsc:
  1133                           	opt stack 0
  1134  0079AC  12                 	db	18
  1135  0079AD  01                 	db	1
  1136  0079AE  0200               	dw	512
  1137  0079B0  02                 	db	2
  1138  0079B1  00                 	db	0
  1139  0079B2  00                 	db	0
  1140  0079B3  08                 	db	8
  1141  0079B4  04D8               	dw	1240
  1142  0079B6  000A               	dw	10
  1143  0079B8  0100               	dw	256
  1144  0079BA  01                 	db	1
  1145  0079BB  02                 	db	2
  1146  0079BC  00                 	db	0
  1147  0079BD  01                 	db	1
  1148  0079BE                     __end_of_device_dsc:
  1149                           	opt stack 0
  1150  0079BE                     _sd000:
  1151                           	opt stack 0
  1152  0079BE  04                 	db	4
  1153  0079BF  03                 	db	3
  1154  0079C0  0409               	dw	1033
  1155  0079C2                     __end_of_sd000:
  1156                           	opt stack 0
  1157  0000                     _ANSELAbits	set	3931
  1158  0000                     _ANSELCbits	set	3933
  1159  0000                     _TMR3	set	4018
  1160  0000                     _ACTCON	set	4021
  1161  0000                     _ADCON0	set	4034
  1162  0000                     _ADCON0bits	set	4034
  1163  0000                     _ADCON1	set	4033
  1164  0000                     _ADCON2	set	4032
  1165  0000                     _ADRESH	set	4036
  1166  0000                     _ADRESL	set	4035
  1167  0000                     _BAUDCON	set	4024
  1168  0000                     _CM1CON0	set	3992
  1169  0000                     _CM1CON0bits	set	3992
  1170  0000                     _CM2CON1bits	set	3994
  1171  0000                     _EEADR	set	4009
  1172  0000                     _EECON1bits	set	4006
  1173  0000                     _EECON2	set	4007
  1174  0000                     _EEDATA	set	4008
  1175  0000                     _INTCON3bits	set	4080
  1176  0000                     _INTCONbits	set	4082
  1177  0000                     _IOCCbits	set	3975
  1178  0000                     _IPR3bits	set	4005
  1179  0000                     _LATAbits	set	3977
  1180  0000                     _LATBbits	set	3978
  1181  0000                     _LATCbits	set	3979
  1182  0000                     _LATD	set	3980
  1183  0000                     _LATEbits	set	3981
  1184  0000                     _OSCCON	set	4051
  1185  0000                     _OSCCON2	set	4050
  1186  0000                     _OSCCON2bits	set	4050
  1187  0000                     _OSCTUNE	set	3995
  1188  0000                     _PIE1bits	set	3997
  1189  0000                     _PIE2bits	set	4000
  1190  0000                     _PIE3bits	set	4003
  1191  0000                     _PIR1bits	set	3998
  1192  0000                     _PIR2bits	set	4001
  1193  0000                     _PIR3bits	set	4004
  1194  0000                     _PORTAbits	set	3968
  1195  0000                     _PORTBbits	set	3969
  1196  0000                     _PORTCbits	set	3970
  1197  0000                     _PR2	set	4027
  1198  0000                     _RCONbits	set	4048
  1199  0000                     _RCREG	set	4014
  1200  0000                     _RCSTA	set	4011
  1201  0000                     _RCSTAbits	set	4011
  1202  0000                     _SPBRG	set	4015
  1203  0000                     _SPBRGH	set	4016
  1204  0000                     _SSP1ADD	set	4040
  1205  0000                     _SSP1CON1	set	4038
  1206  0000                     _SSP1CON1bits	set	4038
  1207  0000                     _SSP1STAT	set	4039
  1208  0000                     _SSP1STATbits	set	4039
  1209  0000                     _SSPBUF	set	4041
  1210  0000                     _T1CON	set	4045
  1211  0000                     _T1CONbits	set	4045
  1212  0000                     _T1GCON	set	4044
  1213  0000                     _T1GCONbits	set	4044
  1214  0000                     _T2CON	set	4026
  1215  0000                     _T2CONbits	set	4026
  1216  0000                     _T3CON	set	4017
  1217  0000                     _T3CONbits	set	4017
  1218  0000                     _T3GCON	set	4020
  1219  0000                     _T3GCONbits	set	4020
  1220  0000                     _TABLAT	set	4085
  1221  0000                     _TBLPTRH	set	4087
  1222  0000                     _TBLPTRL	set	4086
  1223  0000                     _TBLPTRU	set	4088
  1224  0000                     _TMR1H	set	4047
  1225  0000                     _TMR1L	set	4046
  1226  0000                     _TMR2	set	4028
  1227  0000                     _TMR3H	set	4019
  1228  0000                     _TMR3L	set	4018
  1229  0000                     _TRISAbits	set	3986
  1230  0000                     _TRISBbits	set	3987
  1231  0000                     _TRISCbits	set	3988
  1232  0000                     _TRISD	set	3989
  1233  0000                     _TRISEbits	set	3990
  1234  0000                     _TXREG	set	4013
  1235  0000                     _TXSTA	set	4012
  1236  0000                     _TXSTAbits	set	4012
  1237  0000                     _UADDR	set	3939
  1238  0000                     _UCFG	set	3938
  1239  0000                     _UCON	set	3936
  1240  0000                     _UCONbits	set	3936
  1241  0000                     _UEIE	set	3942
  1242  0000                     _UEIR	set	3943
  1243  0000                     _UEP0bits	set	3946
  1244  0000                     _UIE	set	3940
  1245  0000                     _UIEbits	set	3940
  1246  0000                     _UIR	set	3941
  1247  0000                     _UIRbits	set	3941
  1248  0000                     _USTAT	set	3937
  1249  0000                     _VREFCON0	set	3965
  1250  0000                     _VREFCON0bits	set	3965
  1251  0000                     _WDTCONbits	set	4049
  1252  0000                     _UEP0	set	3946
  1253  0000                     _UEP1	set	3947
  1254  0000                     _CKE	set	32318
  1255  0000                     _CKP	set	32308
  1256  0000                     _GIE	set	32663
  1257  0000                     _PEIE	set	32662
  1258  0079C2                     STR_184:
  1259  0079C2  73                 	db	115	;'s'
  1260  0079C3  79                 	db	121	;'y'
  1261  0079C4  73                 	db	115	;'s'
  1262  0079C5  20                 	db	32
  1263  0079C6  73                 	db	115	;'s'
  1264  0079C7  65                 	db	101	;'e'
  1265  0079C8  74                 	db	116	;'t'
  1266  0079C9  20                 	db	32
  1267  0079CA  70                 	db	112	;'p'
  1268  0079CB  69                 	db	105	;'i'
  1269  0079CC  6E                 	db	110	;'n'
  1270  0079CD  6D                 	db	109	;'m'
  1271  0079CE  6F                 	db	111	;'o'
  1272  0079CF  64                 	db	100	;'d'
  1273  0079D0  65                 	db	101	;'e'
  1274  0079D1  20                 	db	32
  1275  0079D2  47                 	db	71	;'G'
  1276  0079D3  50                 	db	80	;'P'
  1277  0079D4  49                 	db	73	;'I'
  1278  0079D5  4F                 	db	79	;'O'
  1279  0079D6  31                 	db	49	;'1'
  1280  0079D7  32                 	db	50	;'2'
  1281  0079D8  20                 	db	32
  1282  0079D9  61                 	db	97	;'a'
  1283  0079DA  6E                 	db	110	;'n'
  1284  0079DB  61                 	db	97	;'a'
  1285  0079DC  00                 	db	0
  1286  0079DD                     STR_183:
  1287  0079DD  73                 	db	115	;'s'
  1288  0079DE  79                 	db	121	;'y'
  1289  0079DF  73                 	db	115	;'s'
  1290  0079E0  20                 	db	32
  1291  0079E1  73                 	db	115	;'s'
  1292  0079E2  65                 	db	101	;'e'
  1293  0079E3  74                 	db	116	;'t'
  1294  0079E4  20                 	db	32
  1295  0079E5  70                 	db	112	;'p'
  1296  0079E6  69                 	db	105	;'i'
  1297  0079E7  6E                 	db	110	;'n'
  1298  0079E8  6D                 	db	109	;'m'
  1299  0079E9  6F                 	db	111	;'o'
  1300  0079EA  64                 	db	100	;'d'
  1301  0079EB  65                 	db	101	;'e'
  1302  0079EC  20                 	db	32
  1303  0079ED  47                 	db	71	;'G'
  1304  0079EE  50                 	db	80	;'P'
  1305  0079EF  49                 	db	73	;'I'
  1306  0079F0  4F                 	db	79	;'O'
  1307  0079F1  31                 	db	49	;'1'
  1308  0079F2  33                 	db	51	;'3'
  1309  0079F3  20                 	db	32
  1310  0079F4  61                 	db	97	;'a'
  1311  0079F5  6E                 	db	110	;'n'
  1312  0079F6  61                 	db	97	;'a'
  1313  0079F7  00                 	db	0
  1314  0079F8                     STR_177:
  1315  0079F8  73                 	db	115	;'s'
  1316  0079F9  79                 	db	121	;'y'
  1317  0079FA  73                 	db	115	;'s'
  1318  0079FB  20                 	db	32
  1319  0079FC  73                 	db	115	;'s'
  1320  0079FD  65                 	db	101	;'e'
  1321  0079FE  74                 	db	116	;'t'
  1322  0079FF  20                 	db	32
  1323  007A00  70                 	db	112	;'p'
  1324  007A01  69                 	db	105	;'i'
  1325  007A02  6E                 	db	110	;'n'
  1326  007A03  64                 	db	100	;'d'
  1327  007A04  69                 	db	105	;'i'
  1328  007A05  67                 	db	103	;'g'
  1329  007A06  20                 	db	32
  1330  007A07  47                 	db	71	;'G'
  1331  007A08  50                 	db	80	;'P'
  1332  007A09  49                 	db	73	;'I'
  1333  007A0A  4F                 	db	79	;'O'
  1334  007A0B  31                 	db	49	;'1'
  1335  007A0C  30                 	db	48	;'0'
  1336  007A0D  20                 	db	32
  1337  007A0E  30                 	db	48	;'0'
  1338  007A0F  0D                 	db	13
  1339  007A10  0A                 	db	10
  1340  007A11  00                 	db	0
  1341  007A12                     STR_178:
  1342  007A12  73                 	db	115	;'s'
  1343  007A13  79                 	db	121	;'y'
  1344  007A14  73                 	db	115	;'s'
  1345  007A15  20                 	db	32
  1346  007A16  73                 	db	115	;'s'
  1347  007A17  65                 	db	101	;'e'
  1348  007A18  74                 	db	116	;'t'
  1349  007A19  20                 	db	32
  1350  007A1A  70                 	db	112	;'p'
  1351  007A1B  69                 	db	105	;'i'
  1352  007A1C  6E                 	db	110	;'n'
  1353  007A1D  64                 	db	100	;'d'
  1354  007A1E  69                 	db	105	;'i'
  1355  007A1F  67                 	db	103	;'g'
  1356  007A20  20                 	db	32
  1357  007A21  47                 	db	71	;'G'
  1358  007A22  50                 	db	80	;'P'
  1359  007A23  49                 	db	73	;'I'
  1360  007A24  4F                 	db	79	;'O'
  1361  007A25  31                 	db	49	;'1'
  1362  007A26  31                 	db	49	;'1'
  1363  007A27  20                 	db	32
  1364  007A28  30                 	db	48	;'0'
  1365  007A29  0D                 	db	13
  1366  007A2A  0A                 	db	10
  1367  007A2B  00                 	db	0
  1368  007A2C                     STR_175:
  1369  007A2C  73                 	db	115	;'s'
  1370  007A2D  79                 	db	121	;'y'
  1371  007A2E  73                 	db	115	;'s'
  1372  007A2F  20                 	db	32
  1373  007A30  73                 	db	115	;'s'
  1374  007A31  65                 	db	101	;'e'
  1375  007A32  74                 	db	116	;'t'
  1376  007A33  20                 	db	32
  1377  007A34  70                 	db	112	;'p'
  1378  007A35  69                 	db	105	;'i'
  1379  007A36  6E                 	db	110	;'n'
  1380  007A37  64                 	db	100	;'d'
  1381  007A38  69                 	db	105	;'i'
  1382  007A39  67                 	db	103	;'g'
  1383  007A3A  20                 	db	32
  1384  007A3B  47                 	db	71	;'G'
  1385  007A3C  50                 	db	80	;'P'
  1386  007A3D  49                 	db	73	;'I'
  1387  007A3E  4F                 	db	79	;'O'
  1388  007A3F  31                 	db	49	;'1'
  1389  007A40  30                 	db	48	;'0'
  1390  007A41  20                 	db	32
  1391  007A42  31                 	db	49	;'1'
  1392  007A43  0D                 	db	13
  1393  007A44  0A                 	db	10
  1394  007A45  00                 	db	0
  1395  007A46                     STR_176:
  1396  007A46  73                 	db	115	;'s'
  1397  007A47  79                 	db	121	;'y'
  1398  007A48  73                 	db	115	;'s'
  1399  007A49  20                 	db	32
  1400  007A4A  73                 	db	115	;'s'
  1401  007A4B  65                 	db	101	;'e'
  1402  007A4C  74                 	db	116	;'t'
  1403  007A4D  20                 	db	32
  1404  007A4E  70                 	db	112	;'p'
  1405  007A4F  69                 	db	105	;'i'
  1406  007A50  6E                 	db	110	;'n'
  1407  007A51  64                 	db	100	;'d'
  1408  007A52  69                 	db	105	;'i'
  1409  007A53  67                 	db	103	;'g'
  1410  007A54  20                 	db	32
  1411  007A55  47                 	db	71	;'G'
  1412  007A56  50                 	db	80	;'P'
  1413  007A57  49                 	db	73	;'I'
  1414  007A58  4F                 	db	79	;'O'
  1415  007A59  31                 	db	49	;'1'
  1416  007A5A  31                 	db	49	;'1'
  1417  007A5B  20                 	db	32
  1418  007A5C  31                 	db	49	;'1'
  1419  007A5D  0D                 	db	13
  1420  007A5E  0A                 	db	10
  1421  007A5F  00                 	db	0
  1422  007A60                     STR_74:
  1423  007A60  6D                 	db	109	;'m'
  1424  007A61  61                 	db	97	;'a'
  1425  007A62  63                 	db	99	;'c'
  1426  007A63  20                 	db	32
  1427  007A64  74                 	db	116	;'t'
  1428  007A65  78                 	db	120	;'x'
  1429  007A66  20                 	db	32
  1430  007A67  75                 	db	117	;'u'
  1431  007A68  6E                 	db	110	;'n'
  1432  007A69  63                 	db	99	;'c'
  1433  007A6A  6E                 	db	110	;'n'
  1434  007A6B  66                 	db	102	;'f'
  1435  007A6C  20                 	db	32
  1436  007A6D  35                 	db	53	;'5'
  1437  007A6E  36                 	db	54	;'6'
  1438  007A6F  20                 	db	32
  1439  007A70  36                 	db	54	;'6'
  1440  007A71  38                 	db	56	;'8'
  1441  007A72  36                 	db	54	;'6'
  1442  007A73  35                 	db	53	;'5'
  1443  007A74  36                 	db	54	;'6'
  1444  007A75  63                 	db	99	;'c'
  1445  007A76  36                 	db	54	;'6'
  1446  007A77  63                 	db	99	;'c'
  1447  007A78  00                 	db	0
  1448  007A79                     STR_185:
  1449  007A79  73                 	db	115	;'s'
  1450  007A7A  79                 	db	121	;'y'
  1451  007A7B  73                 	db	115	;'s'
  1452  007A7C  20                 	db	32
  1453  007A7D  67                 	db	103	;'g'
  1454  007A7E  65                 	db	101	;'e'
  1455  007A7F  74                 	db	116	;'t'
  1456  007A80  20                 	db	32
  1457  007A81  70                 	db	112	;'p'
  1458  007A82  69                 	db	105	;'i'
  1459  007A83  6E                 	db	110	;'n'
  1460  007A84  61                 	db	97	;'a'
  1461  007A85  6E                 	db	110	;'n'
  1462  007A86  61                 	db	97	;'a'
  1463  007A87  20                 	db	32
  1464  007A88  47                 	db	71	;'G'
  1465  007A89  50                 	db	80	;'P'
  1466  007A8A  49                 	db	73	;'I'
  1467  007A8B  4F                 	db	79	;'O'
  1468  007A8C  31                 	db	49	;'1'
  1469  007A8D  32                 	db	50	;'2'
  1470  007A8E  00                 	db	0
  1471  007A8F                     STR_186:
  1472  007A8F  73                 	db	115	;'s'
  1473  007A90  79                 	db	121	;'y'
  1474  007A91  73                 	db	115	;'s'
  1475  007A92  20                 	db	32
  1476  007A93  67                 	db	103	;'g'
  1477  007A94  65                 	db	101	;'e'
  1478  007A95  74                 	db	116	;'t'
  1479  007A96  20                 	db	32
  1480  007A97  70                 	db	112	;'p'
  1481  007A98  69                 	db	105	;'i'
  1482  007A99  6E                 	db	110	;'n'
  1483  007A9A  61                 	db	97	;'a'
  1484  007A9B  6E                 	db	110	;'n'
  1485  007A9C  61                 	db	97	;'a'
  1486  007A9D  20                 	db	32
  1487  007A9E  47                 	db	71	;'G'
  1488  007A9F  50                 	db	80	;'P'
  1489  007AA0  49                 	db	73	;'I'
  1490  007AA1  4F                 	db	79	;'O'
  1491  007AA2  31                 	db	49	;'1'
  1492  007AA3  33                 	db	51	;'3'
  1493  007AA4  00                 	db	0
  1494  007AA5                     STR_22:
  1495  007AA5  73                 	db	115	;'s'
  1496  007AA6  79                 	db	121	;'y'
  1497  007AA7  73                 	db	115	;'s'
  1498  007AA8  20                 	db	32
  1499  007AA9  73                 	db	115	;'s'
  1500  007AAA  6C                 	db	108	;'l'
  1501  007AAB  65                 	db	101	;'e'
  1502  007AAC  65                 	db	101	;'e'
  1503  007AAD  70                 	db	112	;'p'
  1504  007AAE  20                 	db	32
  1505  007AAF  39                 	db	57	;'9'
  1506  007AB0  39                 	db	57	;'9'
  1507  007AB1  39                 	db	57	;'9'
  1508  007AB2  39                 	db	57	;'9'
  1509  007AB3  39                 	db	57	;'9'
  1510  007AB4  39                 	db	57	;'9'
  1511  007AB5  39                 	db	57	;'9'
  1512  007AB6  39                 	db	57	;'9'
  1513  007AB7  39                 	db	57	;'9'
  1514  007AB8  00                 	db	0
  1515  007AB9                     STR_96:
  1516  007AB9  4D                 	db	77	;'M'
  1517  007ABA  61                 	db	97	;'a'
  1518  007ABB  63                 	db	99	;'c'
  1519  007ABC  20                 	db	32
  1520  007ABD  45                 	db	69	;'E'
  1521  007ABE  72                 	db	114	;'r'
  1522  007ABF  72                 	db	114	;'r'
  1523  007AC0  6F                 	db	111	;'o'
  1524  007AC1  72                 	db	114	;'r'
  1525  007AC2  20                 	db	32
  1526  007AC3  4F                 	db	79	;'O'
  1527  007AC4  63                 	db	99	;'c'
  1528  007AC5  63                 	db	99	;'c'
  1529  007AC6  75                 	db	117	;'u'
  1530  007AC7  72                 	db	114	;'r'
  1531  007AC8  72                 	db	114	;'r'
  1532  007AC9  65                 	db	101	;'e'
  1533  007ACA  64                 	db	100	;'d'
  1534  007ACB  00                 	db	0
  1535  007ACC                     STR_83:
  1536  007ACC  28                 	db	40
  1537  007ACD  55                 	db	85	;'U'
  1538  007ACE  4E                 	db	78	;'N'
  1539  007ACF  43                 	db	67	;'C'
  1540  007AD0  4E                 	db	78	;'N'
  1541  007AD1  46                 	db	70	;'F'
  1542  007AD2  29                 	db	41
  1543  007AD3  20                 	db	32
  1544  007AD4  20                 	db	32
  1545  007AD5  20                 	db	32
  1546  007AD6  20                 	db	32
  1547  007AD7  28                 	db	40
  1548  007AD8  43                 	db	67	;'C'
  1549  007AD9  4E                 	db	78	;'N'
  1550  007ADA  46                 	db	70	;'F'
  1551  007ADB  29                 	db	41
  1552  007ADC  20                 	db	32
  1553  007ADD  00                 	db	0
  1554  007ADE                     STR_40:
  1555  007ADE  20                 	db	32
  1556  007ADF  20                 	db	32
  1557  007AE0  28                 	db	40
  1558  007AE1  53                 	db	83	;'S'
  1559  007AE2  32                 	db	50	;'2'
  1560  007AE3  29                 	db	41
  1561  007AE4  20                 	db	32
  1562  007AE5  20                 	db	32
  1563  007AE6  20                 	db	32
  1564  007AE7  20                 	db	32
  1565  007AE8  20                 	db	32
  1566  007AE9  20                 	db	32
  1567  007AEA  20                 	db	32
  1568  007AEB  20                 	db	32
  1569  007AEC  20                 	db	32
  1570  007AED  20                 	db	32
  1571  007AEE  00                 	db	0
  1572  007AEF                     STR_92:
  1573  007AEF  20                 	db	32
  1574  007AF0  20                 	db	32
  1575  007AF1  20                 	db	32
  1576  007AF2  20                 	db	32
  1577  007AF3  52                 	db	82	;'R'
  1578  007AF4  65                 	db	101	;'e'
  1579  007AF5  63                 	db	99	;'c'
  1580  007AF6  65                 	db	101	;'e'
  1581  007AF7  69                 	db	105	;'i'
  1582  007AF8  76                 	db	118	;'v'
  1583  007AF9  65                 	db	101	;'e'
  1584  007AFA  64                 	db	100	;'d'
  1585  007AFB  20                 	db	32
  1586  007AFC  20                 	db	32
  1587  007AFD  20                 	db	32
  1588  007AFE  20                 	db	32
  1589  007AFF  00                 	db	0
  1590  007B00                     STR_42:
  1591  007B00  20                 	db	32
  1592  007B01  20                 	db	32
  1593  007B02  20                 	db	32
  1594  007B03  20                 	db	32
  1595  007B04  20                 	db	32
  1596  007B05  20                 	db	32
  1597  007B06  20                 	db	32
  1598  007B07  20                 	db	32
  1599  007B08  20                 	db	32
  1600  007B09  28                 	db	40
  1601  007B0A  53                 	db	83	;'S'
  1602  007B0B  33                 	db	51	;'3'
  1603  007B0C  29                 	db	41
  1604  007B0D  20                 	db	32
  1605  007B0E  20                 	db	32
  1606  007B0F  20                 	db	32
  1607  007B10  00                 	db	0
  1608  007B11                     STR_34:
  1609  007B11  20                 	db	32
  1610  007B12  20                 	db	32
  1611  007B13  28                 	db	40
  1612  007B14  53                 	db	83	;'S'
  1613  007B15  32                 	db	50	;'2'
  1614  007B16  29                 	db	41
  1615  007B17  20                 	db	32
  1616  007B18  20                 	db	32
  1617  007B19  20                 	db	32
  1618  007B1A  28                 	db	40
  1619  007B1B  53                 	db	83	;'S'
  1620  007B1C  33                 	db	51	;'3'
  1621  007B1D  29                 	db	41
  1622  007B1E  20                 	db	32
  1623  007B1F  20                 	db	32
  1624  007B20  20                 	db	32
  1625  007B21  00                 	db	0
  1626  007B22                     STR_79:
  1627  007B22  20                 	db	32
  1628  007B23  20                 	db	32
  1629  007B24  4C                 	db	76	;'L'
  1630  007B25  61                 	db	97	;'a'
  1631  007B26  73                 	db	115	;'s'
  1632  007B27  74                 	db	116	;'t'
  1633  007B28  20                 	db	32
  1634  007B29  4D                 	db	77	;'M'
  1635  007B2A  65                 	db	101	;'e'
  1636  007B2B  73                 	db	115	;'s'
  1637  007B2C  73                 	db	115	;'s'
  1638  007B2D  61                 	db	97	;'a'
  1639  007B2E  67                 	db	103	;'g'
  1640  007B2F  65                 	db	101	;'e'
  1641  007B30  20                 	db	32
  1642  007B31  20                 	db	32
  1643  007B32  00                 	db	0
  1644  007B33                     STR_78:
  1645  007B33  20                 	db	32
  1646  007B34  56                 	db	86	;'V'
  1647  007B35  69                 	db	105	;'i'
  1648  007B36  65                 	db	101	;'e'
  1649  007B37  77                 	db	119	;'w'
  1650  007B38  20                 	db	32
  1651  007B39  44                 	db	68	;'D'
  1652  007B3A  6F                 	db	111	;'o'
  1653  007B3B  77                 	db	119	;'w'
  1654  007B3C  6E                 	db	110	;'n'
  1655  007B3D  6C                 	db	108	;'l'
  1656  007B3E  69                 	db	105	;'i'
  1657  007B3F  6E                 	db	110	;'n'
  1658  007B40  6B                 	db	107	;'k'
  1659  007B41  20                 	db	32
  1660  007B42  20                 	db	32
  1661  007B43  00                 	db	0
  1662  007B44                     STR_75:
  1663  007B44  20                 	db	32
  1664  007B45  20                 	db	32
  1665  007B46  49                 	db	73	;'I'
  1666  007B47  73                 	db	115	;'s'
  1667  007B48  73                 	db	115	;'s'
  1668  007B49  75                 	db	117	;'u'
  1669  007B4A  65                 	db	101	;'e'
  1670  007B4B  20                 	db	32
  1671  007B4C  55                 	db	85	;'U'
  1672  007B4D  70                 	db	112	;'p'
  1673  007B4E  6C                 	db	108	;'l'
  1674  007B4F  69                 	db	105	;'i'
  1675  007B50  6E                 	db	110	;'n'
  1676  007B51  6B                 	db	107	;'k'
  1677  007B52  20                 	db	32
  1678  007B53  20                 	db	32
  1679  007B54  00                 	db	0
  1680  007B55                     STR_29:
  1681  007B55  20                 	db	32
  1682  007B56  28                 	db	40
  1683  007B57  53                 	db	83	;'S'
  1684  007B58  32                 	db	50	;'2'
  1685  007B59  29                 	db	41
  1686  007B5A  20                 	db	32
  1687  007B5B  20                 	db	32
  1688  007B5C  20                 	db	32
  1689  007B5D  20                 	db	32
  1690  007B5E  20                 	db	32
  1691  007B5F  20                 	db	32
  1692  007B60  28                 	db	40
  1693  007B61  53                 	db	83	;'S'
  1694  007B62  33                 	db	51	;'3'
  1695  007B63  29                 	db	41
  1696  007B64  20                 	db	32
  1697  007B65  00                 	db	0
  1698  007B66                     STR_32:
  1699  007B66  20                 	db	32
  1700  007B67  4A                 	db	74	;'J'
  1701  007B68  6F                 	db	111	;'o'
  1702  007B69  69                 	db	105	;'i'
  1703  007B6A  6E                 	db	110	;'n'
  1704  007B6B  69                 	db	105	;'i'
  1705  007B6C  6E                 	db	110	;'n'
  1706  007B6D  67                 	db	103	;'g'
  1707  007B6E  20                 	db	32
  1708  007B6F  4D                 	db	77	;'M'
  1709  007B70  65                 	db	101	;'e'
  1710  007B71  74                 	db	116	;'t'
  1711  007B72  68                 	db	104	;'h'
  1712  007B73  6F                 	db	111	;'o'
  1713  007B74  64                 	db	100	;'d'
  1714  007B75  20                 	db	32
  1715  007B76  00                 	db	0
  1716  007B77                     STR_91:
  1717  007B77  53                 	db	83	;'S'
  1718  007B78  65                 	db	101	;'e'
  1719  007B79  72                 	db	114	;'r'
  1720  007B7A  76                 	db	118	;'v'
  1721  007B7B  65                 	db	101	;'e'
  1722  007B7C  72                 	db	114	;'r'
  1723  007B7D  20                 	db	32
  1724  007B7E  52                 	db	82	;'R'
  1725  007B7F  65                 	db	101	;'e'
  1726  007B80  73                 	db	115	;'s'
  1727  007B81  70                 	db	112	;'p'
  1728  007B82  6F                 	db	111	;'o'
  1729  007B83  6E                 	db	110	;'n'
  1730  007B84  73                 	db	115	;'s'
  1731  007B85  65                 	db	101	;'e'
  1732  007B86  20                 	db	32
  1733  007B87  00                 	db	0
  1734  007B88                     STR_120:
  1735  007B88  54                 	db	84	;'T'
  1736  007B89  78                 	db	120	;'x'
  1737  007B8A  20                 	db	32
  1738  007B8B  45                 	db	69	;'E'
  1739  007B8C  76                 	db	118	;'v'
  1740  007B8D  65                 	db	101	;'e'
  1741  007B8E  6E                 	db	110	;'n'
  1742  007B8F  74                 	db	116	;'t'
  1743  007B90  20                 	db	32
  1744  007B91  54                 	db	84	;'T'
  1745  007B92  69                 	db	105	;'i'
  1746  007B93  6D                 	db	109	;'m'
  1747  007B94  69                 	db	105	;'i'
  1748  007B95  6E                 	db	110	;'n'
  1749  007B96  67                 	db	103	;'g'
  1750  007B97  20                 	db	32
  1751  007B98  00                 	db	0
  1752  007B99                     STR_119:
  1753  007B99  50                 	db	80	;'P'
  1754  007B9A  65                 	db	101	;'e'
  1755  007B9B  72                 	db	114	;'r'
  1756  007B9C  69                 	db	105	;'i'
  1757  007B9D  6F                 	db	111	;'o'
  1758  007B9E  64                 	db	100	;'d'
  1759  007B9F  69                 	db	105	;'i'
  1760  007BA0  63                 	db	99	;'c'
  1761  007BA1  20                 	db	32
  1762  007BA2  55                 	db	85	;'U'
  1763  007BA3  70                 	db	112	;'p'
  1764  007BA4  6C                 	db	108	;'l'
  1765  007BA5  69                 	db	105	;'i'
  1766  007BA6  6E                 	db	110	;'n'
  1767  007BA7  6B                 	db	107	;'k'
  1768  007BA8  20                 	db	32
  1769  007BA9  00                 	db	0
  1770  007BAA                     STR_76:
  1771  007BAA  20                 	db	32
  1772  007BAB  4C                 	db	76	;'L'
  1773  007BAC  6F                 	db	111	;'o'
  1774  007BAD  52                 	db	82	;'R'
  1775  007BAE  61                 	db	97	;'a'
  1776  007BAF  57                 	db	87	;'W'
  1777  007BB0  41                 	db	65	;'A'
  1778  007BB1  4E                 	db	78	;'N'
  1779  007BB2  20                 	db	32
  1780  007BB3  50                 	db	80	;'P'
  1781  007BB4  61                 	db	97	;'a'
  1782  007BB5  63                 	db	99	;'c'
  1783  007BB6  6B                 	db	107	;'k'
  1784  007BB7  65                 	db	101	;'e'
  1785  007BB8  74                 	db	116	;'t'
  1786  007BB9  20                 	db	32
  1787  007BBA  00                 	db	0
  1788  007BBB                     STR_33:
  1789  007BBB  3C                 	db	60	;'<'
  1790  007BBC  2D                 	db	45
  1791  007BBD  20                 	db	32
  1792  007BBE  41                 	db	65	;'A'
  1793  007BBF  42                 	db	66	;'B'
  1794  007BC0  50                 	db	80	;'P'
  1795  007BC1  20                 	db	32
  1796  007BC2  20                 	db	32
  1797  007BC3  20                 	db	32
  1798  007BC4  4F                 	db	79	;'O'
  1799  007BC5  54                 	db	84	;'T'
  1800  007BC6  41                 	db	65	;'A'
  1801  007BC7  41                 	db	65	;'A'
  1802  007BC8  20                 	db	32
  1803  007BC9  2D                 	db	45
  1804  007BCA  3E                 	db	62	;'>'
  1805  007BCB  00                 	db	0
  1806  007BCC                     STR_26:
  1807  007BCC  52                 	db	82	;'R'
  1808  007BCD  65                 	db	101	;'e'
  1809  007BCE  52                 	db	82	;'R'
  1810  007BCF  75                 	db	117	;'u'
  1811  007BD0  6E                 	db	110	;'n'
  1812  007BD1  20                 	db	32
  1813  007BD2  50                 	db	80	;'P'
  1814  007BD3  77                 	db	119	;'w'
  1815  007BD4  72                 	db	114	;'r'
  1816  007BD5  54                 	db	84	;'T'
  1817  007BD6  73                 	db	115	;'s'
  1818  007BD7  74                 	db	116	;'t'
  1819  007BD8  3C                 	db	60	;'<'
  1820  007BD9  53                 	db	83	;'S'
  1821  007BDA  32                 	db	50	;'2'
  1822  007BDB  3E                 	db	62	;'>'
  1823  007BDC  00                 	db	0
  1824  007BDD                     STR_94:
  1825  007BDD  44                 	db	68	;'D'
  1826  007BDE  61                 	db	97	;'a'
  1827  007BDF  74                 	db	116	;'t'
  1828  007BE0  61                 	db	97	;'a'
  1829  007BE1  20                 	db	32
  1830  007BE2  54                 	db	84	;'T'
  1831  007BE3  72                 	db	114	;'r'
  1832  007BE4  61                 	db	97	;'a'
  1833  007BE5  6E                 	db	110	;'n'
  1834  007BE6  73                 	db	115	;'s'
  1835  007BE7  6D                 	db	109	;'m'
  1836  007BE8  69                 	db	105	;'i'
  1837  007BE9  74                 	db	116	;'t'
  1838  007BEA  74                 	db	116	;'t'
  1839  007BEB  65                 	db	101	;'e'
  1840  007BEC  64                 	db	100	;'d'
  1841  007BED  00                 	db	0
  1842  007BEE                     STR_151:
  1843  007BEE  45                 	db	69	;'E'
  1844  007BEF  6E                 	db	110	;'n'
  1845  007BF0  74                 	db	116	;'t'
  1846  007BF1  65                 	db	101	;'e'
  1847  007BF2  72                 	db	114	;'r'
  1848  007BF3  20                 	db	32
  1849  007BF4  53                 	db	83	;'S'
  1850  007BF5  6C                 	db	108	;'l'
  1851  007BF6  65                 	db	101	;'e'
  1852  007BF7  65                 	db	101	;'e'
  1853  007BF8  70                 	db	112	;'p'
  1854  007BF9  20                 	db	32
  1855  007BFA  4D                 	db	77	;'M'
  1856  007BFB  6F                 	db	111	;'o'
  1857  007BFC  64                 	db	100	;'d'
  1858  007BFD  65                 	db	101	;'e'
  1859  007BFE  00                 	db	0
  1860  007BFF                     STR_81:
  1861  007BFF  55                 	db	85	;'U'
  1862  007C00  70                 	db	112	;'p'
  1863  007C01  6C                 	db	108	;'l'
  1864  007C02  69                 	db	105	;'i'
  1865  007C03  6E                 	db	110	;'n'
  1866  007C04  6B                 	db	107	;'k'
  1867  007C05  20                 	db	32
  1868  007C06  50                 	db	80	;'P'
  1869  007C07  63                 	db	99	;'c'
  1870  007C08  6B                 	db	107	;'k'
  1871  007C09  74                 	db	116	;'t'
  1872  007C0A  20                 	db	32
  1873  007C0B  54                 	db	84	;'T'
  1874  007C0C  79                 	db	121	;'y'
  1875  007C0D  70                 	db	112	;'p'
  1876  007C0E  65                 	db	101	;'e'
  1877  007C0F  00                 	db	0
  1878  007C10                     STR_135:
  1879  007C10  53                 	db	83	;'S'
  1880  007C11  65                 	db	101	;'e'
  1881  007C12  6C                 	db	108	;'l'
  1882  007C13  65                 	db	101	;'e'
  1883  007C14  63                 	db	99	;'c'
  1884  007C15  74                 	db	116	;'t'
  1885  007C16  20                 	db	32
  1886  007C17  44                 	db	68	;'D'
  1887  007C18  61                 	db	97	;'a'
  1888  007C19  74                 	db	116	;'t'
  1889  007C1A  61                 	db	97	;'a'
  1890  007C1B  20                 	db	32
  1891  007C1C  52                 	db	82	;'R'
  1892  007C1D  61                 	db	97	;'a'
  1893  007C1E  74                 	db	116	;'t'
  1894  007C1F  65                 	db	101	;'e'
  1895  007C20  00                 	db	0
  1896  007C21                     STR_27:
  1897  007C21  4D                 	db	77	;'M'
  1898  007C22  6F                 	db	111	;'o'
  1899  007C23  62                 	db	98	;'b'
  1900  007C24  69                 	db	105	;'i'
  1901  007C25  6C                 	db	108	;'l'
  1902  007C26  65                 	db	101	;'e'
  1903  007C27  20                 	db	32
  1904  007C28  4D                 	db	77	;'M'
  1905  007C29  6F                 	db	111	;'o'
  1906  007C2A  74                 	db	116	;'t'
  1907  007C2B  65                 	db	101	;'e'
  1908  007C2C  20                 	db	32
  1909  007C2D  2D                 	db	45
  1910  007C2E  41                 	db	65	;'A'
  1911  007C2F  70                 	db	112	;'p'
  1912  007C30  70                 	db	112	;'p'
  1913  007C31  00                 	db	0
  1914  007C32                     STR_28:
  1915  007C32  4E                 	db	78	;'N'
  1916  007C33  61                 	db	97	;'a'
  1917  007C34  76                 	db	118	;'v'
  1918  007C35  69                 	db	105	;'i'
  1919  007C36  67                 	db	103	;'g'
  1920  007C37  61                 	db	97	;'a'
  1921  007C38  74                 	db	116	;'t'
  1922  007C39  65                 	db	101	;'e'
  1923  007C3A  20                 	db	32
  1924  007C3B  20                 	db	32
  1925  007C3C  53                 	db	83	;'S'
  1926  007C3D  65                 	db	101	;'e'
  1927  007C3E  6C                 	db	108	;'l'
  1928  007C3F  65                 	db	101	;'e'
  1929  007C40  63                 	db	99	;'c'
  1930  007C41  74                 	db	116	;'t'
  1931  007C42  00                 	db	0
  1932  007C43                     STR_111:
  1933  007C43  4D                 	db	77	;'M'
  1934  007C44  65                 	db	101	;'e'
  1935  007C45  6E                 	db	110	;'n'
  1936  007C46  75                 	db	117	;'u'
  1937  007C47  20                 	db	32
  1938  007C48  48                 	db	72	;'H'
  1939  007C49  61                 	db	97	;'a'
  1940  007C4A  73                 	db	115	;'s'
  1941  007C4B  20                 	db	32
  1942  007C4C  54                 	db	84	;'T'
  1943  007C4D  69                 	db	105	;'i'
  1944  007C4E  6D                 	db	109	;'m'
  1945  007C4F  65                 	db	101	;'e'
  1946  007C50  6F                 	db	111	;'o'
  1947  007C51  75                 	db	117	;'u'
  1948  007C52  74                 	db	116	;'t'
  1949  007C53  00                 	db	0
  1950  007C54                     STR_71:
  1951  007C54  53                 	db	83	;'S'
  1952  007C55  65                 	db	101	;'e'
  1953  007C56  6E                 	db	110	;'n'
  1954  007C57  64                 	db	100	;'d'
  1955  007C58  20                 	db	32
  1956  007C59  50                 	db	80	;'P'
  1957  007C5A  65                 	db	101	;'e'
  1958  007C5B  72                 	db	114	;'r'
  1959  007C5C  69                 	db	105	;'i'
  1960  007C5D  6F                 	db	111	;'o'
  1961  007C5E  64                 	db	100	;'d'
  1962  007C5F  69                 	db	105	;'i'
  1963  007C60  63                 	db	99	;'c'
  1964  007C61  20                 	db	32
  1965  007C62  54                 	db	84	;'T'
  1966  007C63  78                 	db	120	;'x'
  1967  007C64  00                 	db	0
  1968  007C65                     STR_105:
  1969  007C65  44                 	db	68	;'D'
  1970  007C66  6F                 	db	111	;'o'
  1971  007C67  77                 	db	119	;'w'
  1972  007C68  6E                 	db	110	;'n'
  1973  007C69  6C                 	db	108	;'l'
  1974  007C6A  69                 	db	105	;'i'
  1975  007C6B  6E                 	db	110	;'n'
  1976  007C6C  6B                 	db	107	;'k'
  1977  007C6D  20                 	db	32
  1978  007C6E  44                 	db	68	;'D'
  1979  007C6F  69                 	db	105	;'i'
  1980  007C70  73                 	db	115	;'s'
  1981  007C71  70                 	db	112	;'p'
  1982  007C72  6C                 	db	108	;'l'
  1983  007C73  61                 	db	97	;'a'
  1984  007C74  79                 	db	121	;'y'
  1985  007C75  00                 	db	0
  1986  007C76                     STR_103:
  1987  007C76  20                 	db	32
  1988  007C77  20                 	db	32
  1989  007C78  20                 	db	32
  1990  007C79  20                 	db	32
  1991  007C7A  44                 	db	68	;'D'
  1992  007C7B  69                 	db	105	;'i'
  1993  007C7C  73                 	db	115	;'s'
  1994  007C7D  70                 	db	112	;'p'
  1995  007C7E  6C                 	db	108	;'l'
  1996  007C7F  61                 	db	97	;'a'
  1997  007C80  79                 	db	121	;'y'
  1998  007C81  20                 	db	32
  1999  007C82  20                 	db	32
  2000  007C83  20                 	db	32
  2001  007C84  20                 	db	32
  2002  007C85  00                 	db	0
  2003  007C86                     STR_102:
  2004  007C86  20                 	db	32
  2005  007C87  20                 	db	32
  2006  007C88  53                 	db	83	;'S'
  2007  007C89  65                 	db	101	;'e'
  2008  007C8A  6E                 	db	110	;'n'
  2009  007C8B  73                 	db	115	;'s'
  2010  007C8C  6F                 	db	111	;'o'
  2011  007C8D  72                 	db	114	;'r'
  2012  007C8E  20                 	db	32
  2013  007C8F  44                 	db	68	;'D'
  2014  007C90  61                 	db	97	;'a'
  2015  007C91  74                 	db	116	;'t'
  2016  007C92  61                 	db	97	;'a'
  2017  007C93  20                 	db	32
  2018  007C94  20                 	db	32
  2019  007C95  00                 	db	0
  2020  007C96                     STR_114:
  2021  007C96  28                 	db	40
  2022  007C97  4E                 	db	78	;'N'
  2023  007C98  41                 	db	65	;'A'
  2024  007C99  56                 	db	86	;'V'
  2025  007C9A  29                 	db	41
  2026  007C9B  20                 	db	32
  2027  007C9C  20                 	db	32
  2028  007C9D  20                 	db	32
  2029  007C9E  20                 	db	32
  2030  007C9F  28                 	db	40
  2031  007CA0  43                 	db	67	;'C'
  2032  007CA1  4E                 	db	78	;'N'
  2033  007CA2  47                 	db	71	;'G'
  2034  007CA3  29                 	db	41
  2035  007CA4  20                 	db	32
  2036  007CA5  00                 	db	0
  2037  007CA6                     STR_77:
  2038  007CA6  28                 	db	40
  2039  007CA7  4E                 	db	78	;'N'
  2040  007CA8  41                 	db	65	;'A'
  2041  007CA9  56                 	db	86	;'V'
  2042  007CAA  29                 	db	41
  2043  007CAB  20                 	db	32
  2044  007CAC  20                 	db	32
  2045  007CAD  20                 	db	32
  2046  007CAE  20                 	db	32
  2047  007CAF  28                 	db	40
  2048  007CB0  53                 	db	83	;'S'
  2049  007CB1  45                 	db	69	;'E'
  2050  007CB2  4C                 	db	76	;'L'
  2051  007CB3  29                 	db	41
  2052  007CB4  20                 	db	32
  2053  007CB5  00                 	db	0
  2054  007CB6                     STR_152:
  2055  007CB6  28                 	db	40
  2056  007CB7  4E                 	db	78	;'N'
  2057  007CB8  41                 	db	65	;'A'
  2058  007CB9  56                 	db	86	;'V'
  2059  007CBA  29                 	db	41
  2060  007CBB  20                 	db	32
  2061  007CBC  20                 	db	32
  2062  007CBD  20                 	db	32
  2063  007CBE  20                 	db	32
  2064  007CBF  28                 	db	40
  2065  007CC0  53                 	db	83	;'S'
  2066  007CC1  4C                 	db	76	;'L'
  2067  007CC2  50                 	db	80	;'P'
  2068  007CC3  29                 	db	41
  2069  007CC4  20                 	db	32
  2070  007CC5  00                 	db	0
  2071  007CC6                     STR_163:
  2072  007CC6  6D                 	db	109	;'m'
  2073  007CC7  61                 	db	97	;'a'
  2074  007CC8  63                 	db	99	;'c'
  2075  007CC9  20                 	db	32
  2076  007CCA  73                 	db	115	;'s'
  2077  007CCB  65                 	db	101	;'e'
  2078  007CCC  74                 	db	116	;'t'
  2079  007CCD  20                 	db	32
  2080  007CCE  61                 	db	97	;'a'
  2081  007CCF  64                 	db	100	;'d'
  2082  007CD0  72                 	db	114	;'r'
  2083  007CD1  20                 	db	32
  2084  007CD2  6F                 	db	111	;'o'
  2085  007CD3  66                 	db	102	;'f'
  2086  007CD4  66                 	db	102	;'f'
  2087  007CD5  00                 	db	0
  2088  007CD6                     STR_98:
  2089  007CD6  4E                 	db	78	;'N'
  2090  007CD7  6F                 	db	111	;'o'
  2091  007CD8  20                 	db	32
  2092  007CD9  46                 	db	70	;'F'
  2093  007CDA  72                 	db	114	;'r'
  2094  007CDB  65                 	db	101	;'e'
  2095  007CDC  65                 	db	101	;'e'
  2096  007CDD  20                 	db	32
  2097  007CDE  43                 	db	67	;'C'
  2098  007CDF  68                 	db	104	;'h'
  2099  007CE0  61                 	db	97	;'a'
  2100  007CE1  6E                 	db	110	;'n'
  2101  007CE2  6E                 	db	110	;'n'
  2102  007CE3  65                 	db	101	;'e'
  2103  007CE4  6C                 	db	108	;'l'
  2104  007CE5  00                 	db	0
  2105  007CE6                     STR_7:
  2106  007CE6  42                 	db	66	;'B'
  2107  007CE7  75                 	db	117	;'u'
  2108  007CE8  69                 	db	105	;'i'
  2109  007CE9  6C                 	db	108	;'l'
  2110  007CEA  64                 	db	100	;'d'
  2111  007CEB  20                 	db	32
  2112  007CEC  44                 	db	68	;'D'
  2113  007CED  61                 	db	97	;'a'
  2114  007CEE  74                 	db	116	;'t'
  2115  007CEF  65                 	db	101	;'e'
  2116  007CF0  2F                 	db	47
  2117  007CF1  54                 	db	84	;'T'
  2118  007CF2  69                 	db	105	;'i'
  2119  007CF3  6D                 	db	109	;'m'
  2120  007CF4  65                 	db	101	;'e'
  2121  007CF5  00                 	db	0
  2122  007CF6                     STR_112:
  2123  007CF6  20                 	db	32
  2124  007CF7  20                 	db	32
  2125  007CF8  20                 	db	32
  2126  007CF9  20                 	db	32
  2127  007CFA  45                 	db	69	;'E'
  2128  007CFB  6E                 	db	110	;'n'
  2129  007CFC  61                 	db	97	;'a'
  2130  007CFD  62                 	db	98	;'b'
  2131  007CFE  6C                 	db	108	;'l'
  2132  007CFF  65                 	db	101	;'e'
  2133  007D00  64                 	db	100	;'d'
  2134  007D01  20                 	db	32
  2135  007D02  20                 	db	32
  2136  007D03  20                 	db	32
  2137  007D04  00                 	db	0
  2138  007D05                     STR_113:
  2139  007D05  20                 	db	32
  2140  007D06  20                 	db	32
  2141  007D07  20                 	db	32
  2142  007D08  20                 	db	32
  2143  007D09  44                 	db	68	;'D'
  2144  007D0A  69                 	db	105	;'i'
  2145  007D0B  73                 	db	115	;'s'
  2146  007D0C  61                 	db	97	;'a'
  2147  007D0D  62                 	db	98	;'b'
  2148  007D0E  6C                 	db	108	;'l'
  2149  007D0F  65                 	db	101	;'e'
  2150  007D10  64                 	db	100	;'d'
  2151  007D11  20                 	db	32
  2152  007D12  20                 	db	32
  2153  007D13  00                 	db	0
  2154  007D14                     STR_172:
  2155  007D14  6D                 	db	109	;'m'
  2156  007D15  61                 	db	97	;'a'
  2157  007D16  63                 	db	99	;'c'
  2158  007D17  20                 	db	32
  2159  007D18  73                 	db	115	;'s'
  2160  007D19  65                 	db	101	;'e'
  2161  007D1A  74                 	db	116	;'t'
  2162  007D1B  20                 	db	32
  2163  007D1C  61                 	db	97	;'a'
  2164  007D1D  64                 	db	100	;'d'
  2165  007D1E  72                 	db	114	;'r'
  2166  007D1F  20                 	db	32
  2167  007D20  6F                 	db	111	;'o'
  2168  007D21  6E                 	db	110	;'n'
  2169  007D22  00                 	db	0
  2170  007D23                     STR_2:
  2171  007D23  20                 	db	32
  2172  007D24  20                 	db	32
  2173  007D25  20                 	db	32
  2174  007D26  4C                 	db	76	;'L'
  2175  007D27  6F                 	db	111	;'o'
  2176  007D28  52                 	db	82	;'R'
  2177  007D29  61                 	db	97	;'a'
  2178  007D2A  20                 	db	32
  2179  007D2B  63                 	db	99	;'c'
  2180  007D2C  6F                 	db	111	;'o'
  2181  007D2D  6E                 	db	110	;'n'
  2182  007D2E  79                 	db	121	;'y'
  2183  007D2F  20                 	db	32
  2184  007D30  20                 	db	32
  2185  007D31  00                 	db	0
  2186  007D32                     STR_43:
  2187  007D32  6D                 	db	109	;'m'
  2188  007D33  61                 	db	97	;'a'
  2189  007D34  63                 	db	99	;'c'
  2190  007D35  20                 	db	32
  2191  007D36  6A                 	db	106	;'j'
  2192  007D37  6F                 	db	111	;'o'
  2193  007D38  69                 	db	105	;'i'
  2194  007D39  6E                 	db	110	;'n'
  2195  007D3A  20                 	db	32
  2196  007D3B  6F                 	db	111	;'o'
  2197  007D3C  74                 	db	116	;'t'
  2198  007D3D  61                 	db	97	;'a'
  2199  007D3E  61                 	db	97	;'a'
  2200  007D3F  00                 	db	0
  2201  007D40                     STR_57:
  2202  007D40  69                 	db	105	;'i'
  2203  007D41  6E                 	db	110	;'n'
  2204  007D42  76                 	db	118	;'v'
  2205  007D43  61                 	db	97	;'a'
  2206  007D44  6C                 	db	108	;'l'
  2207  007D45  69                 	db	105	;'i'
  2208  007D46  64                 	db	100	;'d'
  2209  007D47  5F                 	db	95	;'_'
  2210  007D48  70                 	db	112	;'p'
  2211  007D49  61                 	db	97	;'a'
  2212  007D4A  72                 	db	114	;'r'
  2213  007D4B  61                 	db	97	;'a'
  2214  007D4C  6D                 	db	109	;'m'
  2215  007D4D  00                 	db	0
  2216  007D4E                     STR_45:
  2217  007D4E  6B                 	db	107	;'k'
  2218  007D4F  65                 	db	101	;'e'
  2219  007D50  79                 	db	121	;'y'
  2220  007D51  73                 	db	115	;'s'
  2221  007D52  5F                 	db	95	;'_'
  2222  007D53  6E                 	db	110	;'n'
  2223  007D54  6F                 	db	111	;'o'
  2224  007D55  74                 	db	116	;'t'
  2225  007D56  5F                 	db	95	;'_'
  2226  007D57  69                 	db	105	;'i'
  2227  007D58  6E                 	db	110	;'n'
  2228  007D59  69                 	db	105	;'i'
  2229  007D5A  74                 	db	116	;'t'
  2230  007D5B  00                 	db	0
  2231  007D5C                     STR_82:
  2232  007D5C  54                 	db	84	;'T'
  2233  007D5D  68                 	db	104	;'h'
  2234  007D5E  72                 	db	114	;'r'
  2235  007D5F  6F                 	db	111	;'o'
  2236  007D60  75                 	db	117	;'u'
  2237  007D61  20                 	db	32
  2238  007D62  50                 	db	80	;'P'
  2239  007D63  6F                 	db	111	;'o'
  2240  007D64  72                 	db	114	;'r'
  2241  007D65  74                 	db	116	;'t'
  2242  007D66  23                 	db	35
  2243  007D67  20                 	db	32
  2244  007D68  00                 	db	0
  2245  007D69                     STR_73:
  2246  007D69  4C                 	db	76	;'L'
  2247  007D6A  3A                 	db	58	;':'
  2248  007D6B  20                 	db	32
  2249  007D6C  20                 	db	32
  2250  007D6D  20                 	db	32
  2251  007D6E  20                 	db	32
  2252  007D6F  20                 	db	32
  2253  007D70  20                 	db	32
  2254  007D71  20                 	db	32
  2255  007D72  54                 	db	84	;'T'
  2256  007D73  3A                 	db	58	;':'
  2257  007D74  20                 	db	32
  2258  007D75  00                 	db	0
  2259  007D76                     STR_164:
  2260  007D76  6D                 	db	109	;'m'
  2261  007D77  61                 	db	97	;'a'
  2262  007D78  63                 	db	99	;'c'
  2263  007D79  20                 	db	32
  2264  007D7A  73                 	db	115	;'s'
  2265  007D7B  65                 	db	101	;'e'
  2266  007D7C  74                 	db	116	;'t'
  2267  007D7D  20                 	db	32
  2268  007D7E  64                 	db	100	;'d'
  2269  007D7F  72                 	db	114	;'r'
  2270  007D80  20                 	db	32
  2271  007D81  30                 	db	48	;'0'
  2272  007D82  00                 	db	0
  2273  007D83                     STR_165:
  2274  007D83  6D                 	db	109	;'m'
  2275  007D84  61                 	db	97	;'a'
  2276  007D85  63                 	db	99	;'c'
  2277  007D86  20                 	db	32
  2278  007D87  73                 	db	115	;'s'
  2279  007D88  65                 	db	101	;'e'
  2280  007D89  74                 	db	116	;'t'
  2281  007D8A  20                 	db	32
  2282  007D8B  64                 	db	100	;'d'
  2283  007D8C  72                 	db	114	;'r'
  2284  007D8D  20                 	db	32
  2285  007D8E  31                 	db	49	;'1'
  2286  007D8F  00                 	db	0
  2287  007D90                     STR_166:
  2288  007D90  6D                 	db	109	;'m'
  2289  007D91  61                 	db	97	;'a'
  2290  007D92  63                 	db	99	;'c'
  2291  007D93  20                 	db	32
  2292  007D94  73                 	db	115	;'s'
  2293  007D95  65                 	db	101	;'e'
  2294  007D96  74                 	db	116	;'t'
  2295  007D97  20                 	db	32
  2296  007D98  64                 	db	100	;'d'
  2297  007D99  72                 	db	114	;'r'
  2298  007D9A  20                 	db	32
  2299  007D9B  32                 	db	50	;'2'
  2300  007D9C  00                 	db	0
  2301  007D9D                     STR_167:
  2302  007D9D  6D                 	db	109	;'m'
  2303  007D9E  61                 	db	97	;'a'
  2304  007D9F  63                 	db	99	;'c'
  2305  007DA0  20                 	db	32
  2306  007DA1  73                 	db	115	;'s'
  2307  007DA2  65                 	db	101	;'e'
  2308  007DA3  74                 	db	116	;'t'
  2309  007DA4  20                 	db	32
  2310  007DA5  64                 	db	100	;'d'
  2311  007DA6  72                 	db	114	;'r'
  2312  007DA7  20                 	db	32
  2313  007DA8  33                 	db	51	;'3'
  2314  007DA9  00                 	db	0
  2315  007DAA                     STR_168:
  2316  007DAA  6D                 	db	109	;'m'
  2317  007DAB  61                 	db	97	;'a'
  2318  007DAC  63                 	db	99	;'c'
  2319  007DAD  20                 	db	32
  2320  007DAE  73                 	db	115	;'s'
  2321  007DAF  65                 	db	101	;'e'
  2322  007DB0  74                 	db	116	;'t'
  2323  007DB1  20                 	db	32
  2324  007DB2  64                 	db	100	;'d'
  2325  007DB3  72                 	db	114	;'r'
  2326  007DB4  20                 	db	32
  2327  007DB5  34                 	db	52	;'4'
  2328  007DB6  00                 	db	0
  2329  007DB7                     STR_169:
  2330  007DB7  6D                 	db	109	;'m'
  2331  007DB8  61                 	db	97	;'a'
  2332  007DB9  63                 	db	99	;'c'
  2333  007DBA  20                 	db	32
  2334  007DBB  73                 	db	115	;'s'
  2335  007DBC  65                 	db	101	;'e'
  2336  007DBD  74                 	db	116	;'t'
  2337  007DBE  20                 	db	32
  2338  007DBF  64                 	db	100	;'d'
  2339  007DC0  72                 	db	114	;'r'
  2340  007DC1  20                 	db	32
  2341  007DC2  35                 	db	53	;'5'
  2342  007DC3  00                 	db	0
  2343  007DC4                     STR_170:
  2344  007DC4  6D                 	db	109	;'m'
  2345  007DC5  61                 	db	97	;'a'
  2346  007DC6  63                 	db	99	;'c'
  2347  007DC7  20                 	db	32
  2348  007DC8  73                 	db	115	;'s'
  2349  007DC9  65                 	db	101	;'e'
  2350  007DCA  74                 	db	116	;'t'
  2351  007DCB  20                 	db	32
  2352  007DCC  64                 	db	100	;'d'
  2353  007DCD  72                 	db	114	;'r'
  2354  007DCE  20                 	db	32
  2355  007DCF  36                 	db	54	;'6'
  2356  007DD0  00                 	db	0
  2357  007DD1                     STR_171:
  2358  007DD1  6D                 	db	109	;'m'
  2359  007DD2  61                 	db	97	;'a'
  2360  007DD3  63                 	db	99	;'c'
  2361  007DD4  20                 	db	32
  2362  007DD5  73                 	db	115	;'s'
  2363  007DD6  65                 	db	101	;'e'
  2364  007DD7  74                 	db	116	;'t'
  2365  007DD8  20                 	db	32
  2366  007DD9  64                 	db	100	;'d'
  2367  007DDA  72                 	db	114	;'r'
  2368  007DDB  20                 	db	32
  2369  007DDC  37                 	db	55	;'7'
  2370  007DDD  00                 	db	0
  2371  007DDE                     STR_41:
  2372  007DDE  6D                 	db	109	;'m'
  2373  007DDF  61                 	db	97	;'a'
  2374  007DE0  63                 	db	99	;'c'
  2375  007DE1  20                 	db	32
  2376  007DE2  6A                 	db	106	;'j'
  2377  007DE3  6F                 	db	111	;'o'
  2378  007DE4  69                 	db	105	;'i'
  2379  007DE5  6E                 	db	110	;'n'
  2380  007DE6  20                 	db	32
  2381  007DE7  61                 	db	97	;'a'
  2382  007DE8  62                 	db	98	;'b'
  2383  007DE9  70                 	db	112	;'p'
  2384  007DEA  00                 	db	0
  2385  007DEB                     STR_10:
  2386  007DEB  42                 	db	66	;'B'
  2387  007DEC  75                 	db	117	;'u'
  2388  007DED  74                 	db	116	;'t'
  2389  007DEE  74                 	db	116	;'t'
  2390  007DEF  6F                 	db	111	;'o'
  2391  007DF0  6E                 	db	110	;'n'
  2392  007DF1  20                 	db	32
  2393  007DF2  54                 	db	84	;'T'
  2394  007DF3  65                 	db	101	;'e'
  2395  007DF4  73                 	db	115	;'s'
  2396  007DF5  74                 	db	116	;'t'
  2397  007DF6  3A                 	db	58	;':'
  2398  007DF7  00                 	db	0
  2399  007DF8                     STR_13:
  2400  007DF8  42                 	db	66	;'B'
  2401  007DF9  75                 	db	117	;'u'
  2402  007DFA  74                 	db	116	;'t'
  2403  007DFB  74                 	db	116	;'t'
  2404  007DFC  6F                 	db	111	;'o'
  2405  007DFD  6E                 	db	110	;'n'
  2406  007DFE  31                 	db	49	;'1'
  2407  007DFF  20                 	db	32
  2408  007E00  50                 	db	80	;'P'
  2409  007E01  41                 	db	65	;'A'
  2410  007E02  53                 	db	83	;'S'
  2411  007E03  53                 	db	83	;'S'
  2412  007E04  00                 	db	0
  2413  007E05                     STR_14:
  2414  007E05  42                 	db	66	;'B'
  2415  007E06  75                 	db	117	;'u'
  2416  007E07  74                 	db	116	;'t'
  2417  007E08  74                 	db	116	;'t'
  2418  007E09  6F                 	db	111	;'o'
  2419  007E0A  6E                 	db	110	;'n'
  2420  007E0B  32                 	db	50	;'2'
  2421  007E0C  20                 	db	32
  2422  007E0D  50                 	db	80	;'P'
  2423  007E0E  41                 	db	65	;'A'
  2424  007E0F  53                 	db	83	;'S'
  2425  007E10  53                 	db	83	;'S'
  2426  007E11  00                 	db	0
  2427  007E12                     STR_12:
  2428  007E12  50                 	db	80	;'P'
  2429  007E13  72                 	db	114	;'r'
  2430  007E14  65                 	db	101	;'e'
  2431  007E15  73                 	db	115	;'s'
  2432  007E16  73                 	db	115	;'s'
  2433  007E17  20                 	db	32
  2434  007E18  42                 	db	66	;'B'
  2435  007E19  75                 	db	117	;'u'
  2436  007E1A  74                 	db	116	;'t'
  2437  007E1B  74                 	db	116	;'t'
  2438  007E1C  6F                 	db	111	;'o'
  2439  007E1D  6E                 	db	110	;'n'
  2440  007E1E  00                 	db	0
  2441  007E1F                     STR_189:
  2442  007E1F  55                 	db	85	;'U'
  2443  007E20  53                 	db	83	;'S'
  2444  007E21  42                 	db	66	;'B'
  2445  007E22  20                 	db	32
  2446  007E23  48                 	db	72	;'H'
  2447  007E24  61                 	db	97	;'a'
  2448  007E25  6E                 	db	110	;'n'
  2449  007E26  64                 	db	100	;'d'
  2450  007E27  6C                 	db	108	;'l'
  2451  007E28  65                 	db	101	;'e'
  2452  007E29  72                 	db	114	;'r'
  2453  007E2A  00                 	db	0
  2454  007E2B                     STR_72:
  2455  007E2B  4F                 	db	79	;'O'
  2456  007E2C  6E                 	db	110	;'n'
  2457  007E2D  20                 	db	32
  2458  007E2E  50                 	db	80	;'P'
  2459  007E2F  6F                 	db	111	;'o'
  2460  007E30  72                 	db	114	;'r'
  2461  007E31  74                 	db	116	;'t'
  2462  007E32  20                 	db	32
  2463  007E33  23                 	db	35
  2464  007E34  3A                 	db	58	;':'
  2465  007E35  20                 	db	32
  2466  007E36  00                 	db	0
  2467  007E37                     STR_87:
  2468  007E37  54                 	db	84	;'T'
  2469  007E38  78                 	db	120	;'x'
  2470  007E39  20                 	db	32
  2471  007E3A  50                 	db	80	;'P'
  2472  007E3B  6F                 	db	111	;'o'
  2473  007E3C  72                 	db	114	;'r'
  2474  007E3D  74                 	db	116	;'t'
  2475  007E3E  20                 	db	32
  2476  007E3F  23                 	db	35
  2477  007E40  3A                 	db	58	;':'
  2478  007E41  20                 	db	32
  2479  007E42  00                 	db	0
  2480  007E43                     STR_86:
  2481  007E43  53                 	db	83	;'S'
  2482  007E44  65                 	db	101	;'e'
  2483  007E45  6E                 	db	110	;'n'
  2484  007E46  74                 	db	116	;'t'
  2485  007E47  20                 	db	32
  2486  007E48  44                 	db	68	;'D'
  2487  007E49  61                 	db	97	;'a'
  2488  007E4A  74                 	db	116	;'t'
  2489  007E4B  61                 	db	97	;'a'
  2490  007E4C  3A                 	db	58	;':'
  2491  007E4D  20                 	db	32
  2492  007E4E  00                 	db	0
  2493  007E4F                     STR_136:
  2494  007E4F  44                 	db	68	;'D'
  2495  007E50  61                 	db	97	;'a'
  2496  007E51  74                 	db	116	;'t'
  2497  007E52  61                 	db	97	;'a'
  2498  007E53  20                 	db	32
  2499  007E54  52                 	db	82	;'R'
  2500  007E55  61                 	db	97	;'a'
  2501  007E56  74                 	db	116	;'t'
  2502  007E57  65                 	db	101	;'e'
  2503  007E58  3A                 	db	58	;':'
  2504  007E59  20                 	db	32
  2505  007E5A  00                 	db	0
  2506  007E5B                     STR_8:
  2507  007E5B  46                 	db	70	;'F'
  2508  007E5C  65                 	db	101	;'e'
  2509  007E5D  62                 	db	98	;'b'
  2510  007E5E  20                 	db	32
  2511  007E5F  30                 	db	48	;'0'
  2512  007E60  35                 	db	53	;'5'
  2513  007E61  20                 	db	32
  2514  007E62  32                 	db	50	;'2'
  2515  007E63  30                 	db	48	;'0'
  2516  007E64  32                 	db	50	;'2'
  2517  007E65  30                 	db	48	;'0'
  2518  007E66  00                 	db	0
  2519  007E67                     STR_11:
  2520  007E67  42                 	db	66	;'B'
  2521  007E68  75                 	db	117	;'u'
  2522  007E69  74                 	db	116	;'t'
  2523  007E6A  74                 	db	116	;'t'
  2524  007E6B  6F                 	db	111	;'o'
  2525  007E6C  6E                 	db	110	;'n'
  2526  007E6D  20                 	db	32
  2527  007E6E  46                 	db	70	;'F'
  2528  007E6F  41                 	db	65	;'A'
  2529  007E70  49                 	db	73	;'I'
  2530  007E71  4C                 	db	76	;'L'
  2531  007E72  00                 	db	0
  2532  007E73                     STR_61:
  2533  007E73  4F                 	db	79	;'O'
  2534  007E74  54                 	db	84	;'T'
  2535  007E75  41                 	db	65	;'A'
  2536  007E76  41                 	db	65	;'A'
  2537  007E77  20                 	db	32
  2538  007E78  4A                 	db	74	;'J'
  2539  007E79  6F                 	db	111	;'o'
  2540  007E7A  69                 	db	105	;'i'
  2541  007E7B  6E                 	db	110	;'n'
  2542  007E7C  20                 	db	32
  2543  007E7D  00                 	db	0
  2544  007E7E                     STR_59:
  2545  007E7E  6E                 	db	110	;'n'
  2546  007E7F  6F                 	db	111	;'o'
  2547  007E80  5F                 	db	95	;'_'
  2548  007E81  66                 	db	102	;'f'
  2549  007E82  72                 	db	114	;'r'
  2550  007E83  65                 	db	101	;'e'
  2551  007E84  65                 	db	101	;'e'
  2552  007E85  5F                 	db	95	;'_'
  2553  007E86  63                 	db	99	;'c'
  2554  007E87  68                 	db	104	;'h'
  2555  007E88  00                 	db	0
  2556  007E89                     STR_51:
  2557  007E89  53                 	db	83	;'S'
  2558  007E8A  75                 	db	117	;'u'
  2559  007E8B  63                 	db	99	;'c'
  2560  007E8C  63                 	db	99	;'c'
  2561  007E8D  65                 	db	101	;'e'
  2562  007E8E  73                 	db	115	;'s'
  2563  007E8F  73                 	db	115	;'s'
  2564  007E90  66                 	db	102	;'f'
  2565  007E91  75                 	db	117	;'u'
  2566  007E92  6C                 	db	108	;'l'
  2567  007E93  00                 	db	0
  2568  007E94                     STR_68:
  2569  007E94  6D                 	db	109	;'m'
  2570  007E95  61                 	db	97	;'a'
  2571  007E96  63                 	db	99	;'c'
  2572  007E97  20                 	db	32
  2573  007E98  67                 	db	103	;'g'
  2574  007E99  65                 	db	101	;'e'
  2575  007E9A  74                 	db	116	;'t'
  2576  007E9B  20                 	db	32
  2577  007E9C  64                 	db	100	;'d'
  2578  007E9D  72                 	db	114	;'r'
  2579  007E9E  00                 	db	0
  2580  007E9F                     STR_46:
  2581  007E9F  56                 	db	86	;'V'
  2582  007EA0  61                 	db	97	;'a'
  2583  007EA1  6C                 	db	108	;'l'
  2584  007EA2  69                 	db	105	;'i'
  2585  007EA3  64                 	db	100	;'d'
  2586  007EA4  20                 	db	32
  2587  007EA5  4B                 	db	75	;'K'
  2588  007EA6  65                 	db	101	;'e'
  2589  007EA7  79                 	db	121	;'y'
  2590  007EA8  73                 	db	115	;'s'
  2591  007EA9  00                 	db	0
  2592  007EAA                     STR_15:
  2593  007EAA  43                 	db	67	;'C'
  2594  007EAB  6F                 	db	111	;'o'
  2595  007EAC  6D                 	db	109	;'m'
  2596  007EAD  6D                 	db	109	;'m'
  2597  007EAE  20                 	db	32
  2598  007EAF  54                 	db	84	;'T'
  2599  007EB0  65                 	db	101	;'e'
  2600  007EB1  73                 	db	115	;'s'
  2601  007EB2  74                 	db	116	;'t'
  2602  007EB3  3A                 	db	58	;':'
  2603  007EB4  00                 	db	0
  2604  007EB5                     STR_3:
  2605  007EB5  20                 	db	32
  2606  007EB6  49                 	db	73	;'I'
  2607  007EB7  4F                 	db	79	;'O'
  2608  007EB8  54                 	db	84	;'T'
  2609  007EB9  20                 	db	32
  2610  007EBA  43                 	db	67	;'C'
  2611  007EBB  6F                 	db	111	;'o'
  2612  007EBC  64                 	db	100	;'d'
  2613  007EBD  65                 	db	101	;'e'
  2614  007EBE  20                 	db	32
  2615  007EBF  00                 	db	0
  2616  007EC0                     STR_106:
  2617  007EC0  52                 	db	82	;'R'
  2618  007EC1  78                 	db	120	;'x'
  2619  007EC2  20                 	db	32
  2620  007EC3  50                 	db	80	;'P'
  2621  007EC4  6F                 	db	111	;'o'
  2622  007EC5  72                 	db	114	;'r'
  2623  007EC6  74                 	db	116	;'t'
  2624  007EC7  23                 	db	35
  2625  007EC8  20                 	db	32
  2626  007EC9  00                 	db	0
  2627  007ECA                     STR_50:
  2628  007ECA  41                 	db	65	;'A'
  2629  007ECB  42                 	db	66	;'B'
  2630  007ECC  50                 	db	80	;'P'
  2631  007ECD  20                 	db	32
  2632  007ECE  4A                 	db	74	;'J'
  2633  007ECF  6F                 	db	111	;'o'
  2634  007ED0  69                 	db	105	;'i'
  2635  007ED1  6E                 	db	110	;'n'
  2636  007ED2  20                 	db	32
  2637  007ED3  00                 	db	0
  2638  007ED4                     STR_24:
  2639  007ED4  4D                 	db	77	;'M'
  2640  007ED5  4F                 	db	79	;'O'
  2641  007ED6  54                 	db	84	;'T'
  2642  007ED7  45                 	db	69	;'E'
  2643  007ED8  20                 	db	32
  2644  007ED9  4D                 	db	77	;'M'
  2645  007EDA  6F                 	db	111	;'o'
  2646  007EDB  64                 	db	100	;'d'
  2647  007EDC  65                 	db	101	;'e'
  2648  007EDD  00                 	db	0
  2649  007EDE                     STR_64:
  2650  007EDE  4F                 	db	79	;'O'
  2651  007EDF  54                 	db	84	;'T'
  2652  007EE0  41                 	db	65	;'A'
  2653  007EE1  41                 	db	65	;'A'
  2654  007EE2  20                 	db	32
  2655  007EE3  4A                 	db	74	;'J'
  2656  007EE4  6F                 	db	111	;'o'
  2657  007EE5  69                 	db	105	;'i'
  2658  007EE6  6E                 	db	110	;'n'
  2659  007EE7  00                 	db	0
  2660  007EE8                     STR_52:
  2661  007EE8  6D                 	db	109	;'m'
  2662  007EE9  61                 	db	97	;'a'
  2663  007EEA  63                 	db	99	;'c'
  2664  007EEB  20                 	db	32
  2665  007EEC  72                 	db	114	;'r'
  2666  007EED  65                 	db	101	;'e'
  2667  007EEE  73                 	db	115	;'s'
  2668  007EEF  65                 	db	101	;'e'
  2669  007EF0  74                 	db	116	;'t'
  2670  007EF1  00                 	db	0
  2671  007EF2                     STR_30:
  2672  007EF2  73                 	db	115	;'s'
  2673  007EF3  79                 	db	121	;'y'
  2674  007EF4  73                 	db	115	;'s'
  2675  007EF5  20                 	db	32
  2676  007EF6  72                 	db	114	;'r'
  2677  007EF7  65                 	db	101	;'e'
  2678  007EF8  73                 	db	115	;'s'
  2679  007EF9  65                 	db	101	;'e'
  2680  007EFA  74                 	db	116	;'t'
  2681  007EFB  00                 	db	0
  2682  007EFC                     STR_16:
  2683  007EFC  4C                 	db	76	;'L'
  2684  007EFD  45                 	db	69	;'E'
  2685  007EFE  44                 	db	68	;'D'
  2686  007EFF  20                 	db	32
  2687  007F00  54                 	db	84	;'T'
  2688  007F01  65                 	db	101	;'e'
  2689  007F02  73                 	db	115	;'s'
  2690  007F03  74                 	db	116	;'t'
  2691  007F04  3A                 	db	58	;':'
  2692  007F05  00                 	db	0
  2693  007F06                     STR_1:
  2694  007F06  6B                 	db	107	;'k'
  2695  007F07  6F                 	db	111	;'o'
  2696  007F08  6E                 	db	110	;'n'
  2697  007F09  74                 	db	116	;'t'
  2698  007F0A  6F                 	db	111	;'o'
  2699  007F0B  6C                 	db	108	;'l'
  2700  007F0C  20                 	db	32
  2701  007F0D  69                 	db	105	;'i'
  2702  007F0E  20                 	db	32
  2703  007F0F  00                 	db	0
  2704  007F10                     STR_187:
  2705  007F10  43                 	db	67	;'C'
  2706  007F11  44                 	db	68	;'D'
  2707  007F12  43                 	db	67	;'C'
  2708  007F13  20                 	db	32
  2709  007F14  4D                 	db	77	;'M'
  2710  007F15  6F                 	db	111	;'o'
  2711  007F16  64                 	db	100	;'d'
  2712  007F17  65                 	db	101	;'e'
  2713  007F18  00                 	db	0
  2714  007F19                     STR_47:
  2715  007F19  52                 	db	82	;'R'
  2716  007F1A  65                 	db	101	;'e'
  2717  007F1B  71                 	db	113	;'q'
  2718  007F1C  75                 	db	117	;'u'
  2719  007F1D  69                 	db	105	;'i'
  2720  007F1E  72                 	db	114	;'r'
  2721  007F1F  65                 	db	101	;'e'
  2722  007F20  64                 	db	100	;'d'
  2723  007F21  00                 	db	0
  2724  007F22                     STR_49:
  2725  007F22  61                 	db	97	;'a'
  2726  007F23  63                 	db	99	;'c'
  2727  007F24  63                 	db	99	;'c'
  2728  007F25  65                 	db	101	;'e'
  2729  007F26  70                 	db	112	;'p'
  2730  007F27  74                 	db	116	;'t'
  2731  007F28  65                 	db	101	;'e'
  2732  007F29  64                 	db	100	;'d'
  2733  007F2A  00                 	db	0
  2734  007F2B                     STR_173:
  2735  007F2B  6D                 	db	109	;'m'
  2736  007F2C  61                 	db	97	;'a'
  2737  007F2D  63                 	db	99	;'c'
  2738  007F2E  20                 	db	32
  2739  007F2F  73                 	db	115	;'s'
  2740  007F30  61                 	db	97	;'a'
  2741  007F31  76                 	db	118	;'v'
  2742  007F32  65                 	db	101	;'e'
  2743  007F33  00                 	db	0
  2744  007F34                     STR_25:
  2745  007F34  53                 	db	83	;'S'
  2746  007F35  74                 	db	116	;'t'
  2747  007F36  61                 	db	97	;'a'
  2748  007F37  72                 	db	114	;'r'
  2749  007F38  74                 	db	116	;'t'
  2750  007F39  69                 	db	105	;'i'
  2751  007F3A  6E                 	db	110	;'n'
  2752  007F3B  67                 	db	103	;'g'
  2753  007F3C  00                 	db	0
  2754  007F3D                     STR_4:
  2755  007F3D  4D                 	db	77	;'M'
  2756  007F3E  6F                 	db	111	;'o'
  2757  007F3F  54                 	db	84	;'T'
  2758  007F40  65                 	db	101	;'e'
  2759  007F41  20                 	db	32
  2760  007F42  76                 	db	118	;'v'
  2761  007F43  20                 	db	32
  2762  007F44  2E                 	db	46
  2763  007F45  00                 	db	0
  2764  007F46                     STR_9:
  2765  007F46  31                 	db	49	;'1'
  2766  007F47  35                 	db	53	;'5'
  2767  007F48  3A                 	db	58	;':'
  2768  007F49  32                 	db	50	;'2'
  2769  007F4A  30                 	db	48	;'0'
  2770  007F4B  3A                 	db	58	;':'
  2771  007F4C  30                 	db	48	;'0'
  2772  007F4D  38                 	db	56	;'8'
  2773  007F4E  00                 	db	0
  2774  007F4F  52                 	db	82	;'R'
  2775  007F50  46                 	db	70	;'F'
  2776  007F51  20                 	db	32
  2777  007F52  54                 	db	84	;'T'
  2778  007F53  65                 	db	101	;'e'
  2779  007F54  73                 	db	115	;'s'
  2780  007F55  74                 	db	116	;'t'
  2781  007F56  3A                 	db	58	;':'
  2782  007F57  00                 	db	0
  2783  007F58                     STR_17:
  2784  007F58  41                 	db	65	;'A'
  2785  007F59  44                 	db	68	;'D'
  2786  007F5A  43                 	db	67	;'C'
  2787  007F5B  20                 	db	32
  2788  007F5C  54                 	db	84	;'T'
  2789  007F5D  65                 	db	101	;'e'
  2790  007F5E  73                 	db	115	;'s'
  2791  007F5F  74                 	db	116	;'t'
  2792  007F60  00                 	db	0
  2793  007F61                     STR_188:
  2794  007F61  43                 	db	67	;'C'
  2795  007F62  6F                 	db	111	;'o'
  2796  007F63  6D                 	db	109	;'m'
  2797  007F64  6D                 	db	109	;'m'
  2798  007F65  61                 	db	97	;'a'
  2799  007F66  6E                 	db	110	;'n'
  2800  007F67  64                 	db	100	;'d'
  2801  007F68  00                 	db	0
  2802  007F69                     STR_18:
  2803  007F69  54                 	db	84	;'T'
  2804  007F6A  65                 	db	101	;'e'
  2805  007F6B  6D                 	db	109	;'m'
  2806  007F6C  70                 	db	112	;'p'
  2807  007F6D  20                 	db	32
  2808  007F6E  20                 	db	32
  2809  007F6F  3D                 	db	61	;'='
  2810  007F70  00                 	db	0
  2811  007F71                     STR_19:
  2812  007F71  4C                 	db	76	;'L'
  2813  007F72  69                 	db	105	;'i'
  2814  007F73  67                 	db	103	;'g'
  2815  007F74  68                 	db	104	;'h'
  2816  007F75  74                 	db	116	;'t'
  2817  007F76  20                 	db	32
  2818  007F77  3D                 	db	61	;'='
  2819  007F78  00                 	db	0
  2820  007F79                     STR_117:
  2821  007F79  54                 	db	84	;'T'
  2822  007F7A  65                 	db	101	;'e'
  2823  007F7B  6D                 	db	109	;'m'
  2824  007F7C  70                 	db	112	;'p'
  2825  007F7D  20                 	db	32
  2826  007F7E  3A                 	db	58	;':'
  2827  007F7F  00                 	db	0
  2828  007F80                     STR_116:
  2829  007F80  4C                 	db	76	;'L'
  2830  007F81  69                 	db	105	;'i'
  2831  007F82  67                 	db	103	;'g'
  2832  007F83  68                 	db	104	;'h'
  2833  007F84  74                 	db	116	;'t'
  2834  007F85  3A                 	db	58	;':'
  2835  007F86  00                 	db	0
  2836  007F87                     STR_121:
  2837  007F87  45                 	db	69	;'E'
  2838  007F88  76                 	db	118	;'v'
  2839  007F89  65                 	db	101	;'e'
  2840  007F8A  72                 	db	114	;'r'
  2841  007F8B  79                 	db	121	;'y'
  2842  007F8C  3A                 	db	58	;':'
  2843  007F8D  00                 	db	0
  2844  007F8E                     STR_65:
  2845  007F8E  44                 	db	68	;'D'
  2846  007F8F  65                 	db	101	;'e'
  2847  007F90  6E                 	db	110	;'n'
  2848  007F91  69                 	db	105	;'i'
  2849  007F92  65                 	db	101	;'e'
  2850  007F93  64                 	db	100	;'d'
  2851  007F94  00                 	db	0
  2852  007F95                     STR_63:
  2853  007F95  64                 	db	100	;'d'
  2854  007F96  65                 	db	101	;'e'
  2855  007F97  6E                 	db	110	;'n'
  2856  007F98  69                 	db	105	;'i'
  2857  007F99  65                 	db	101	;'e'
  2858  007F9A  64                 	db	100	;'d'
  2859  007F9B  00                 	db	0
  2860  007F9C                     STR_97:
  2861  007F9C  6E                 	db	110	;'n'
  2862  007F9D  6F                 	db	111	;'o'
  2863  007F9E  5F                 	db	95	;'_'
  2864  007F9F  66                 	db	102	;'f'
  2865  007FA0  72                 	db	114	;'r'
  2866  007FA1  65                 	db	101	;'e'
  2867  007FA2  00                 	db	0
  2868  007FA3                     STR_95:
  2869  007FA3  6D                 	db	109	;'m'
  2870  007FA4  61                 	db	97	;'a'
  2871  007FA5  63                 	db	99	;'c'
  2872  007FA6  5F                 	db	95	;'_'
  2873  007FA7  65                 	db	101	;'e'
  2874  007FA8  72                 	db	114	;'r'
  2875  007FA9  00                 	db	0
  2876  007FAA                     STR_90:
  2877  007FAA  6D                 	db	109	;'m'
  2878  007FAB  61                 	db	97	;'a'
  2879  007FAC  63                 	db	99	;'c'
  2880  007FAD  5F                 	db	95	;'_'
  2881  007FAE  72                 	db	114	;'r'
  2882  007FAF  78                 	db	120	;'x'
  2883  007FB0  00                 	db	0
  2884  007FB1                     STR_93:
  2885  007FB1  6D                 	db	109	;'m'
  2886  007FB2  61                 	db	97	;'a'
  2887  007FB3  63                 	db	99	;'c'
  2888  007FB4  5F                 	db	95	;'_'
  2889  007FB5  74                 	db	116	;'t'
  2890  007FB6  78                 	db	120	;'x'
  2891  007FB7  00                 	db	0
  2892  007FB8                     STR_31:
  2893  007FB8  52                 	db	82	;'R'
  2894  007FB9  4E                 	db	78	;'N'
  2895  007FBA  32                 	db	50	;'2'
  2896  007FBB  34                 	db	52	;'4'
  2897  007FBC  00                 	db	0
  2898  007FBD                     STR_35:
  2899  007FBD  52                 	db	82	;'R'
  2900  007FBE  4E                 	db	78	;'N'
  2901  007FBF  32                 	db	50	;'2'
  2902  007FC0  39                 	db	57	;'9'
  2903  007FC1  00                 	db	0
  2904  007FC2                     STR_122:
  2905  007FC2  4D                 	db	77	;'M'
  2906  007FC3  69                 	db	105	;'i'
  2907  007FC4  6E                 	db	110	;'n'
  2908  007FC5  73                 	db	115	;'s'
  2909  007FC6  00                 	db	0
  2910  007FC7                     STR_138:
  2911  007FC7  20                 	db	32
  2912  007FC8  30                 	db	48	;'0'
  2913  007FC9  20                 	db	32
  2914  007FCA  00                 	db	0
  2915  007FCB                     STR_139:
  2916  007FCB  20                 	db	32
  2917  007FCC  31                 	db	49	;'1'
  2918  007FCD  20                 	db	32
  2919  007FCE  00                 	db	0
  2920  007FCF                     STR_140:
  2921  007FCF  20                 	db	32
  2922  007FD0  32                 	db	50	;'2'
  2923  007FD1  20                 	db	32
  2924  007FD2  00                 	db	0
  2925  007FD3                     STR_141:
  2926  007FD3  20                 	db	32
  2927  007FD4  33                 	db	51	;'3'
  2928  007FD5  20                 	db	32
  2929  007FD6  00                 	db	0
  2930  007FD7                     STR_142:
  2931  007FD7  20                 	db	32
  2932  007FD8  34                 	db	52	;'4'
  2933  007FD9  20                 	db	32
  2934  007FDA  00                 	db	0
  2935  007FDB                     STR_143:
  2936  007FDB  20                 	db	32
  2937  007FDC  35                 	db	53	;'5'
  2938  007FDD  20                 	db	32
  2939  007FDE  00                 	db	0
  2940  007FDF                     STR_146:
  2941  007FDF  20                 	db	32
  2942  007FE0  31                 	db	49	;'1'
  2943  007FE1  30                 	db	48	;'0'
  2944  007FE2  00                 	db	0
  2945  007FE3                     STR_148:
  2946  007FE3  20                 	db	32
  2947  007FE4  33                 	db	51	;'3'
  2948  007FE5  30                 	db	48	;'0'
  2949  007FE6  00                 	db	0
  2950  007FE7                     STR_149:
  2951  007FE7  20                 	db	32
  2952  007FE8  36                 	db	54	;'6'
  2953  007FE9  30                 	db	48	;'0'
  2954  007FEA  00                 	db	0
  2955  007FEB                     STR_147:
  2956  007FEB  20                 	db	32
  2957  007FEC  31                 	db	49	;'1'
  2958  007FED  35                 	db	53	;'5'
  2959  007FEE  00                 	db	0
  2960  007FEF                     STR_128:
  2961  007FEF  4F                 	db	79	;'O'
  2962  007FF0  46                 	db	70	;'F'
  2963  007FF1  46                 	db	70	;'F'
  2964  007FF2  00                 	db	0
  2965  007FF3                     STR_144:
  2966  007FF3  41                 	db	65	;'A'
  2967  007FF4  44                 	db	68	;'D'
  2968  007FF5  52                 	db	82	;'R'
  2969  007FF6  00                 	db	0
  2970  007FF7                     STR_44:
  2971  007FF7  6F                 	db	111	;'o'
  2972  007FF8  6B                 	db	107	;'k'
  2973  007FF9  00                 	db	0
  2974  007FFA                     STR_118:
  2975  007FFA  43                 	db	67	;'C'
  2976  007FFB  00                 	db	0
  2977  007FFC                     STR_21:
  2978  007FFC  7A                 	db	122	;'z'
  2979  007FFD  00                 	db	0
  2980  0000                     
  2981                           ; #config settings
  2982  007FFE  00                 	db	0	; dummy byte at the end
  2983  0000                     
  2984                           	psect	cinit
  2985  0050DC                     __pcinit:
  2986                           	opt stack 0
  2987  0050DC                     start_initialization:
  2988                           	opt stack 0
  2989  0050DC                     __initialization:
  2990                           	opt stack 0
  2991                           
  2992                           ; Clear objects allocated to BANK2 (160 bytes)
  2993  0050DC  EE02  F000         	lfsr	0,__pbssBANK2
  2994  0050E0  0EA0               	movlw	160
  2995  0050E2                     clear_0:
  2996  0050E2  6AEE               	clrf	postinc0,c
  2997  0050E4  06E8               	decf	wreg,f,c
  2998  0050E6  E1FD               	bnz	clear_0
  2999                           
  3000                           ; Clear objects allocated to BANK1 (251 bytes)
  3001  0050E8  EE01  F000         	lfsr	0,__pbssBANK1
  3002  0050EC  0EFB               	movlw	251
  3003  0050EE                     clear_1:
  3004  0050EE  6AEE               	clrf	postinc0,c
  3005  0050F0  06E8               	decf	wreg,f,c
  3006  0050F2  E1FD               	bnz	clear_1
  3007                           
  3008                           ; Clear objects allocated to BANK0 (79 bytes)
  3009  0050F4  EE00  F060         	lfsr	0,__pbssBANK0
  3010  0050F8  0E4F               	movlw	79
  3011  0050FA                     clear_2:
  3012  0050FA  6AEE               	clrf	postinc0,c
  3013  0050FC  06E8               	decf	wreg,f,c
  3014  0050FE  E1FD               	bnz	clear_2
  3015                           
  3016                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3017  005100  6A5A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3018                           
  3019                           ; Clear objects allocated to COMRAM (44 bytes)
  3020  005102  EE00  F02E         	lfsr	0,__pbssCOMRAM
  3021  005106  0E2C               	movlw	44
  3022  005108                     clear_3:
  3023  005108  6AEE               	clrf	postinc0,c
  3024  00510A  06E8               	decf	wreg,f,c
  3025  00510C  E1FD               	bnz	clear_3
  3026                           
  3027                           ; Initialize objects allocated to BANK1 (2 bytes)
  3028                           ; load TBLPTR registers with __pidataBANK1
  3029  00510E  0E60               	movlw	low __pidataBANK1
  3030  005110  6EF6               	movwf	tblptrl,c
  3031  005112  0E5F               	movlw	high __pidataBANK1
  3032  005114  6EF7               	movwf	tblptrh,c
  3033  005116  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3034  005118  6EF8               	movwf	tblptru,c
  3035  00511A  0009               	tblrd		*+	;fetch initializer
  3036  00511C  CFF5 F1FB          	movff	tablat,__pdataBANK1
  3037  005120  0009               	tblrd		*+	;fetch initializer
  3038  005122  CFF5 F1FC          	movff	tablat,__pdataBANK1+1
  3039                           
  3040                           ; Initialize objects allocated to BANK0 (9 bytes)
  3041                           ; load TBLPTR registers with __pidataBANK0
  3042  005126  0E0C               	movlw	low __pidataBANK0
  3043  005128  6EF6               	movwf	tblptrl,c
  3044  00512A  0E5F               	movlw	high __pidataBANK0
  3045  00512C  6EF7               	movwf	tblptrh,c
  3046  00512E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3047  005130  6EF8               	movwf	tblptru,c
  3048  005132  EE00  F0F6         	lfsr	0,__pdataBANK0
  3049  005136  EE10 F009          	lfsr	1,9
  3050  00513A                     copy_data0:
  3051  00513A  0009               	tblrd		*+
  3052  00513C  CFF5 FFEE          	movff	tablat,postinc0
  3053  005140  50E5               	movf	postdec1,w,c
  3054  005142  50E1               	movf	fsr1l,w,c
  3055  005144  E1FA               	bnz	copy_data0
  3056  005146                     end_of_initialization:
  3057                           	opt stack 0
  3058  005146                     __end_of__initialization:
  3059                           	opt stack 0
  3060  005146  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3061  005148  6EF8               	movwf	tblptru,c
  3062  00514A  0100               	movlb	0
  3063  00514C  EF2C  F016         	goto	_main	;jump to C main() function
  3064                           tblptru	equ	0xFF8
  3065                           tblptrh	equ	0xFF7
  3066                           tblptrl	equ	0xFF6
  3067                           tablat	equ	0xFF5
  3068                           postinc0	equ	0xFEE
  3069                           wreg	equ	0xFE8
  3070                           postdec1	equ	0xFE5
  3071                           fsr1l	equ	0xFE1
  3072                           
  3073                           	psect	bitbssCOMRAM
  3074  0002D0                     __pbitbssCOMRAM:
  3075                           	opt stack 0
  3076  0002D0                     _log:
  3077                           	opt stack 0
  3078  0002D0                     	ds	1
  3079                           tblptru	equ	0xFF8
  3080                           tblptrh	equ	0xFF7
  3081                           tblptrl	equ	0xFF6
  3082                           tablat	equ	0xFF5
  3083                           postinc0	equ	0xFEE
  3084                           wreg	equ	0xFE8
  3085                           postdec1	equ	0xFE5
  3086                           fsr1l	equ	0xFE1
  3087                           
  3088                           	psect	bssCOMRAM
  3089  00002E                     __pbssCOMRAM:
  3090                           	opt stack 0
  3091  00002E                     _outPipes:
  3092                           	opt stack 0
  3093  00002E                     	ds	8
  3094  000036                     _pBDTEntryIn:
  3095                           	opt stack 0
  3096  000036                     	ds	6
  3097  00003C                     USBapp_LEDUpdateStatus@ledCount:
  3098                           	opt stack 0
  3099  00003C                     	ds	2
  3100  00003E                     _pBDTEntryEP0OutCurrent:
  3101                           	opt stack 0
  3102  00003E                     	ds	2
  3103  000040                     _pBDTEntryEP0OutNext:
  3104                           	opt stack 0
  3105  000040                     	ds	2
  3106  000042                     _timer1ReloadVal:
  3107                           	opt stack 0
  3108  000042                     	ds	2
  3109  000044                     _LastRS232Out:
  3110                           	opt stack 0
  3111  000044                     	ds	1
  3112  000045                     _NextUSBOut:
  3113                           	opt stack 0
  3114  000045                     	ds	1
  3115  000046                     _RS232_Out_Data_Rdy:
  3116                           	opt stack 0
  3117  000046                     	ds	1
  3118  000047                     _RS232cp:
  3119                           	opt stack 0
  3120  000047                     	ds	1
  3121  000048                     _USBDeferStatusStagePacket:
  3122                           	opt stack 0
  3123  000048                     	ds	1
  3124  000049                     _USBStatusStageTimeoutCounter:
  3125                           	opt stack 0
  3126  000049                     	ds	1
  3127  00004A                     _cdc_trf_state:
  3128                           	opt stack 0
  3129  00004A                     	ds	1
  3130  00004B                     _controlTransferState:
  3131                           	opt stack 0
  3132  00004B                     	ds	1
  3133  00004C                     _endpoint_number:
  3134                           	opt stack 0
  3135  00004C                     	ds	1
  3136  00004D                     _eusartRxCount:
  3137                           	opt stack 0
  3138  00004D                     	ds	1
  3139  00004E                     _eusartTxBufferRemaining:
  3140                           	opt stack 0
  3141  00004E                     	ds	1
  3142  00004F                     _moduleBufferIndex:
  3143                           	opt stack 0
  3144  00004F                     	ds	1
  3145  000050                     _rxByteFlag:
  3146                           	opt stack 0
  3147  000050                     	ds	1
  3148  000051                     _shortPacketStatus:
  3149                           	opt stack 0
  3150  000051                     	ds	1
  3151  000052                     _inPipes:
  3152                           	opt stack 0
  3153  000052                     	ds	6
  3154  000058                     _USBActiveConfiguration:
  3155                           	opt stack 0
  3156  000058                     	ds	1
  3157  000059                     _USTATcopy:
  3158                           	opt stack 0
  3159  000059                     	ds	1
  3160                           tblptru	equ	0xFF8
  3161                           tblptrh	equ	0xFF7
  3162                           tblptrl	equ	0xFF6
  3163                           tablat	equ	0xFF5
  3164                           postinc0	equ	0xFEE
  3165                           wreg	equ	0xFE8
  3166                           postdec1	equ	0xFE5
  3167                           fsr1l	equ	0xFE1
  3168                           
  3169                           	psect	bssBANK0
  3170  000060                     __pbssBANK0:
  3171                           	opt stack 0
  3172  000060                     _pBDTEntryOut:
  3173                           	opt stack 0
  3174  000060                     	ds	6
  3175  000066                     _ep_data_in:
  3176                           	opt stack 0
  3177  000066                     	ds	3
  3178  000069                     _ep_data_out:
  3179                           	opt stack 0
  3180  000069                     	ds	3
  3181  00006C                     _pCDCDst:
  3182                           	opt stack 0
  3183  00006C                     	ds	3
  3184  00006F                     _pCDCSrc:
  3185                           	opt stack 0
  3186  00006F                     	ds	3
  3187  000072                     _CDCDataInHandle:
  3188                           	opt stack 0
  3189  000072                     	ds	2
  3190  000074                     _CDCDataOutHandle:
  3191                           	opt stack 0
  3192  000074                     	ds	2
  3193  000076                     _light:
  3194                           	opt stack 0
  3195  000076                     	ds	2
  3196  000078                     _m10SecTicker:
  3197                           	opt stack 0
  3198  000078                     	ds	2
  3199  00007A                     _pDst:
  3200                           	opt stack 0
  3201  00007A                     	ds	2
  3202  00007C                     _temperature:
  3203                           	opt stack 0
  3204  00007C                     	ds	2
  3205  00007E                     _timer3ReloadVal:
  3206                           	opt stack 0
  3207  00007E                     	ds	2
  3208  000080                     _timerMinTickCount:
  3209                           	opt stack 0
  3210  000080                     	ds	2
  3211  000082                     _timerMsTickCount:
  3212                           	opt stack 0
  3213  000082                     	ds	2
  3214  000084                     _BothEP0OutUOWNsSet:
  3215                           	opt stack 0
  3216  000084                     	ds	1
  3217  000085                     _RemoteWakeup:
  3218                           	opt stack 0
  3219  000085                     	ds	1
  3220  000086                     _USBBusIsSuspended:
  3221                           	opt stack 0
  3222  000086                     	ds	1
  3223  000087                     _USBDeferINDataStagePackets:
  3224                           	opt stack 0
  3225  000087                     	ds	1
  3226  000088                     _USBDeferOUTDataStagePackets:
  3227                           	opt stack 0
  3228  000088                     	ds	1
  3229  000089                     _USBDeviceState:
  3230                           	opt stack 0
  3231  000089                     	ds	1
  3232  00008A                     _USBStatusStageEnabledFlag1:
  3233                           	opt stack 0
  3234  00008A                     	ds	1
  3235  00008B                     _USBStatusStageEnabledFlag2:
  3236                           	opt stack 0
  3237  00008B                     	ds	1
  3238  00008C                     _activeState:
  3239                           	opt stack 0
  3240  00008C                     	ds	1
  3241  00008D                     _appState:
  3242                           	opt stack 0
  3243  00008D                     	ds	1
  3244  00008E                     _appTimer:
  3245                           	opt stack 0
  3246  00008E                     	ds	1
  3247  00008F                     _cdc_mem_type:
  3248                           	opt stack 0
  3249  00008F                     	ds	1
  3250  000090                     _cdc_rx_len:
  3251                           	opt stack 0
  3252  000090                     	ds	1
  3253  000091                     _cdc_tx_len:
  3254                           	opt stack 0
  3255  000091                     	ds	1
  3256  000092                     _control_signal_bitmap:
  3257                           	opt stack 0
  3258  000092                     	ds	1
  3259  000093                     	ds	1
  3260  000094                     	ds	1
  3261  000095                     	ds	1
  3262  000096                     _eusartRxHead:
  3263                           	opt stack 0
  3264  000096                     	ds	1
  3265  000097                     _eusartRxTail:
  3266                           	opt stack 0
  3267  000097                     	ds	1
  3268  000098                     _eusartTxHead:
  3269                           	opt stack 0
  3270  000098                     	ds	1
  3271  000099                     _eusartTxTail:
  3272                           	opt stack 0
  3273  000099                     	ds	1
  3274  00009A                     _lightStringSize:
  3275                           	opt stack 0
  3276  00009A                     	ds	1
  3277  00009B                     _mainState:
  3278                           	opt stack 0
  3279  00009B                     	ds	1
  3280  00009C                     	ds	1
  3281  00009D                     _minTicker:
  3282                           	opt stack 0
  3283  00009D                     	ds	1
  3284  00009E                     _moteModeState:
  3285                           	opt stack 0
  3286  00009E                     	ds	1
  3287  00009F                     _operationType:
  3288                           	opt stack 0
  3289  00009F                     	ds	1
  3290  0000A0                     _powerOnStatus:
  3291                           	opt stack 0
  3292  0000A0                     	ds	1
  3293  0000A1                     _randomPortNum:
  3294                           	opt stack 0
  3295  0000A1                     	ds	1
  3296  0000A2                     _responseReady:
  3297                           	opt stack 0
  3298  0000A2                     	ds	1
  3299  0000A3                     	ds	1
  3300  0000A4                     _rnModule:
  3301                           	opt stack 0
  3302  0000A4                     	ds	1
  3303  0000A5                     _runningState:
  3304                           	opt stack 0
  3305  0000A5                     	ds	1
  3306  0000A6                     _secTicker:
  3307                           	opt stack 0
  3308  0000A6                     	ds	1
  3309  0000A7                     _sleepTicker:
  3310                           	opt stack 0
  3311  0000A7                     	ds	1
  3312  0000A8                     _usbState:
  3313                           	opt stack 0
  3314  0000A8                     	ds	1
  3315  0000A9                     service_pushbutton@Release_Timer:
  3316                           	opt stack 0
  3317  0000A9                     	ds	1
  3318  0000AA                     _responsePortNum:
  3319                           	opt stack 0
  3320  0000AA                     	ds	3
  3321  0000AD                     _USBAlternateInterface:
  3322                           	opt stack 0
  3323  0000AD                     	ds	2
  3324                           tblptru	equ	0xFF8
  3325                           tblptrh	equ	0xFF7
  3326                           tblptrl	equ	0xFF6
  3327                           tablat	equ	0xFF5
  3328                           postinc0	equ	0xFEE
  3329                           wreg	equ	0xFE8
  3330                           postdec1	equ	0xFE5
  3331                           fsr1l	equ	0xFE1
  3332                           
  3333                           	psect	dataBANK0
  3334  0000F6                     __pdataBANK0:
  3335                           	opt stack 0
  3336  0000F6                     _Contrast_level:
  3337                           	opt stack 0
  3338  0000F6                     	ds	1
  3339  0000F7                     	ds	1
  3340  0000F8                     _dataRateValue:
  3341                           	opt stack 0
  3342  0000F8                     	ds	1
  3343  0000F9                     _exitUSB:
  3344                           	opt stack 0
  3345  0000F9                     	ds	1
  3346  0000FA                     _menuTimeout:
  3347                           	opt stack 0
  3348  0000FA                     	ds	1
  3349  0000FB                     _moteState:
  3350                           	opt stack 0
  3351  0000FB                     	ds	1
  3352  0000FC                     _periodicState:
  3353                           	opt stack 0
  3354  0000FC                     	ds	1
  3355  0000FD                     _periodicTimerValue:
  3356                           	opt stack 0
  3357  0000FD                     	ds	1
  3358  0000FE                     _periodicUpValue:
  3359                           	opt stack 0
  3360  0000FE                     	ds	1
  3361                           tblptru	equ	0xFF8
  3362                           tblptrh	equ	0xFF7
  3363                           tblptrl	equ	0xFF6
  3364                           tablat	equ	0xFF5
  3365                           postinc0	equ	0xFEE
  3366                           wreg	equ	0xFE8
  3367                           postdec1	equ	0xFE5
  3368                           fsr1l	equ	0xFE1
  3369                           
  3370                           	psect	bssBANK1
  3371  000100                     __pbssBANK1:
  3372                           	opt stack 0
  3373  000100                     	ds	16
  3374  000110                     _dataBuffer:
  3375                           	opt stack 0
  3376  000110                     	ds	16
  3377  000120                     _responseId:
  3378                           	opt stack 0
  3379  000120                     	ds	16
  3380  000130                     _BaudRateGen:
  3381                           	opt stack 0
  3382  000130                     	ds	4
  3383  000134                     service_pushbutton@PB_Timer:
  3384                           	opt stack 0
  3385  000134                     	ds	4
  3386  000138                     _USB_Buffer:
  3387                           	opt stack 0
  3388  000138                     	ds	64
  3389  000178                     _moduleResonseBuffer:
  3390                           	opt stack 0
  3391  000178                     	ds	64
  3392  0001B8                     _responseData:
  3393                           	opt stack 0
  3394  0001B8                     	ds	32
  3395  0001D8                     _cdc_notice:
  3396                           	opt stack 0
  3397  0001D8                     	ds	10
  3398  0001E2                     _dummy_encapsulated_cmd_response:
  3399                           	opt stack 0
  3400  0001E2                     	ds	8
  3401  0001EA                     _line_coding:
  3402                           	opt stack 0
  3403  0001EA                     	ds	7
  3404  0001F1                     _clearLight:
  3405                           	opt stack 0
  3406  0001F1                     	ds	5
  3407  0001F6                     _storedLight:
  3408                           	opt stack 0
  3409  0001F6                     	ds	5
  3410                           tblptru	equ	0xFF8
  3411                           tblptrh	equ	0xFF7
  3412                           tblptrl	equ	0xFF6
  3413                           tablat	equ	0xFF5
  3414                           postinc0	equ	0xFEE
  3415                           wreg	equ	0xFE8
  3416                           postdec1	equ	0xFE5
  3417                           fsr1l	equ	0xFE1
  3418                           
  3419                           	psect	dataBANK1
  3420  0001FB                     __pdataBANK1:
  3421                           	opt stack 0
  3422  0001FB                     _selectedFont:
  3423                           	opt stack 0
  3424  0001FB                     	ds	2
  3425                           tblptru	equ	0xFF8
  3426                           tblptrh	equ	0xFF7
  3427                           tblptrl	equ	0xFF6
  3428                           tablat	equ	0xFF5
  3429                           postinc0	equ	0xFEE
  3430                           wreg	equ	0xFE8
  3431                           postdec1	equ	0xFE5
  3432                           fsr1l	equ	0xFE1
  3433                           
  3434                           	psect	bssBANK2
  3435  000200                     __pbssBANK2:
  3436                           	opt stack 0
  3437  000200                     _eusartRxBuffer:
  3438                           	opt stack 0
  3439  000200                     	ds	64
  3440  000240                     _eusartTxBuffer:
  3441                           	opt stack 0
  3442  000240                     	ds	64
  3443  000280                     	ds	32
  3444                           tblptru	equ	0xFF8
  3445                           tblptrh	equ	0xFF7
  3446                           tblptrl	equ	0xFF6
  3447                           tablat	equ	0xFF5
  3448                           postinc0	equ	0xFEE
  3449                           wreg	equ	0xFE8
  3450                           postdec1	equ	0xFE5
  3451                           fsr1l	equ	0xFE1
  3452                           
  3453                           	psect	cstackBANK2
  3454  0002A0                     __pcstackBANK2:
  3455                           	opt stack 0
  3456  0002A0                     moteHandler@gotoSleep:
  3457                           	opt stack 0
  3458                           
  3459                           ; 1 bytes @ 0x0
  3460  0002A0                     	ds	1
  3461  0002A1                     moteHandler@gotoNextState:
  3462                           	opt stack 0
  3463                           
  3464                           ; 1 bytes @ 0x1
  3465  0002A1                     	ds	1
  3466  0002A2                     moteHandler@s2Button:
  3467                           	opt stack 0
  3468                           
  3469                           ; 1 bytes @ 0x2
  3470  0002A2                     	ds	1
  3471  0002A3                     moteHandler@buttonPress:
  3472                           	opt stack 0
  3473                           
  3474                           ; 1 bytes @ 0x3
  3475  0002A3                     	ds	1
  3476  0002A4                     moteHandler@readMessage:
  3477                           	opt stack 0
  3478                           
  3479                           ; 1 bytes @ 0x4
  3480  0002A4                     	ds	1
  3481                           tblptru	equ	0xFF8
  3482                           tblptrh	equ	0xFF7
  3483                           tblptrl	equ	0xFF6
  3484                           tablat	equ	0xFF5
  3485                           postinc0	equ	0xFEE
  3486                           wreg	equ	0xFE8
  3487                           postdec1	equ	0xFE5
  3488                           fsr1l	equ	0xFE1
  3489                           
  3490                           	psect	cstackBANK0
  3491  0000AF                     __pcstackBANK0:
  3492                           	opt stack 0
  3493  0000AF                     ??_TMR1_Initialize:
  3494  0000AF                     ?_strncmp:
  3495                           	opt stack 0
  3496  0000AF                     ?_strcmp:
  3497                           	opt stack 0
  3498  0000AF                     ?_moteApp_getLightString:
  3499                           	opt stack 0
  3500  0000AF                     ?_USBTransferOnePacket:
  3501                           	opt stack 0
  3502  0000AF                     ?___wmul:
  3503                           	opt stack 0
  3504  0000AF                     ?___awmod:
  3505                           	opt stack 0
  3506  0000AF                     ?___lwmod:
  3507                           	opt stack 0
  3508  0000AF                     ?___flpack:
  3509                           	opt stack 0
  3510  0000AF                     ?___almod:
  3511                           	opt stack 0
  3512  0000AF                     ?___fltol:
  3513                           	opt stack 0
  3514  0000AF                     MOTEapp_handlerState@state:
  3515                           	opt stack 0
  3516  0000AF                     MOTEapp_TimerBasedTask@timerTask:
  3517                           	opt stack 0
  3518  0000AF                     moteApp_clearBuffers@counter:
  3519                           	opt stack 0
  3520  0000AF                     USBapp_handlerState@state:
  3521                           	opt stack 0
  3522  0000AF                     USBapp_exitCDCState@usbState:
  3523                           	opt stack 0
  3524  0000AF                     service_pushbutton@bs:
  3525                           	opt stack 0
  3526  0000AF                     oled_writeCommand@command:
  3527                           	opt stack 0
  3528  0000AF                     oled_writeData@data:
  3529                           	opt stack 0
  3530  0000AF                     EUSART_Read@readValue:
  3531                           	opt stack 0
  3532  0000AF                     EUSART_Write@txData:
  3533                           	opt stack 0
  3534  0000AF                     EUSART_FlushBuffer@index:
  3535                           	opt stack 0
  3536  0000AF                     DATAEE_WriteByte@bData:
  3537                           	opt stack 0
  3538  0000AF                     DATAEE_ReadByte@bAdd:
  3539                           	opt stack 0
  3540  0000AF                     TMR2_ReadTimer@readVal:
  3541                           	opt stack 0
  3542  0000AF                     USBTransferOnePacket@dir:
  3543                           	opt stack 0
  3544  0000AF                     ___lbdiv@divisor:
  3545                           	opt stack 0
  3546  0000AF                     delayms@t:
  3547                           	opt stack 0
  3548  0000AF                     moteApp_delayms@length:
  3549                           	opt stack 0
  3550  0000AF                     oled_setFont@font:
  3551                           	opt stack 0
  3552  0000AF                     putUSBUSART@data:
  3553                           	opt stack 0
  3554  0000AF                     ___wmul@multiplier:
  3555                           	opt stack 0
  3556  0000AF                     ___awmod@dividend:
  3557                           	opt stack 0
  3558  0000AF                     ___lwmod@dividend:
  3559                           	opt stack 0
  3560  0000AF                     memcpy@d1:
  3561                           	opt stack 0
  3562  0000AF                     memset@p1:
  3563                           	opt stack 0
  3564  0000AF                     strcmp@s1:
  3565                           	opt stack 0
  3566  0000AF                     strncmp@s1:
  3567                           	opt stack 0
  3568  0000AF                     moteApp_addToDataBuffer@string:
  3569                           	opt stack 0
  3570  0000AF                     ___almod@dividend:
  3571                           	opt stack 0
  3572  0000AF                     ___flpack@arg:
  3573                           	opt stack 0
  3574  0000AF                     ___fltol@f1:
  3575                           	opt stack 0
  3576                           
  3577                           ; 4 bytes @ 0x0
  3578  0000AF                     	ds	1
  3579  0000B0                     MOTEapp_getModuleResponse@terminatorReceived:
  3580                           	opt stack 0
  3581  0000B0                     moteApp_clearBuffers@counter_1904:
  3582                           	opt stack 0
  3583  0000B0                     Set_Page_Address@address:
  3584                           	opt stack 0
  3585  0000B0                     Set_Column_Address@address:
  3586                           	opt stack 0
  3587  0000B0                     oled_setDisplay@displayType:
  3588                           	opt stack 0
  3589  0000B0                     oled_setContrastControlRegister@mod:
  3590                           	opt stack 0
  3591  0000B0                     oled_initialDispayLine@line:
  3592                           	opt stack 0
  3593  0000B0                     oled_powerControl@vol:
  3594                           	opt stack 0
  3595  0000B0                     oled_regulorResistorSelect@r:
  3596                           	opt stack 0
  3597  0000B0                     DATAEE_WriteByte@bAdd:
  3598                           	opt stack 0
  3599  0000B0                     ___lbdiv@dividend:
  3600                           	opt stack 0
  3601  0000B0                     MOTEapp@sendCommand@string:
  3602                           	opt stack 0
  3603  0000B0                     USBTransferOnePacket@data:
  3604                           	opt stack 0
  3605                           
  3606                           ; 2 bytes @ 0x1
  3607  0000B0                     	ds	1
  3608  0000B1                     ??_moteApp_delayms:
  3609  0000B1                     ??_oled_devInit:
  3610  0000B1                     ??_delayms:
  3611  0000B1                     MOTEapp_getModuleResponse@bufferByte:
  3612                           	opt stack 0
  3613  0000B1                     moteApp_clearBuffers@counter_1905:
  3614                           	opt stack 0
  3615  0000B1                     oled_putChar@station_dot:
  3616                           	opt stack 0
  3617  0000B1                     DATAEE_WriteByte@GIEBitValue:
  3618                           	opt stack 0
  3619  0000B1                     putUSBUSART@length:
  3620                           	opt stack 0
  3621  0000B1                     ___lbdiv@counter:
  3622                           	opt stack 0
  3623  0000B1                     ___wmul@multiplicand:
  3624                           	opt stack 0
  3625  0000B1                     ___awmod@divisor:
  3626                           	opt stack 0
  3627  0000B1                     ___lwmod@divisor:
  3628                           	opt stack 0
  3629  0000B1                     memcpy@s1:
  3630                           	opt stack 0
  3631  0000B1                     memset@c:
  3632                           	opt stack 0
  3633  0000B1                     strcmp@s2:
  3634                           	opt stack 0
  3635  0000B1                     strncmp@s2:
  3636                           	opt stack 0
  3637                           
  3638                           ; 2 bytes @ 0x2
  3639  0000B1                     	ds	1
  3640  0000B2                     ??_moteApp_toggleLeds:
  3641  0000B2                     ??_MOTEapp_SetDataRateSetting:
  3642  0000B2                     ??_moduleSleep:
  3643  0000B2                     ?_moteApp_getTempValue:
  3644                           	opt stack 0
  3645  0000B2                     moteApp_clearBuffers@counter_1906:
  3646                           	opt stack 0
  3647  0000B2                     moteApp_addToDataBuffer@bufferLocation:
  3648                           	opt stack 0
  3649  0000B2                     oled_putChar@start_page:
  3650                           	opt stack 0
  3651  0000B2                     USBTransferOnePacket@len:
  3652                           	opt stack 0
  3653  0000B2                     ___lbdiv@quotient:
  3654                           	opt stack 0
  3655  0000B2                     delayms@i:
  3656                           	opt stack 0
  3657  0000B2                     moteApp_delayms@counter:
  3658                           	opt stack 0
  3659                           
  3660                           ; 2 bytes @ 0x3
  3661  0000B2                     	ds	1
  3662  0000B3                     ??_oled_putChar:
  3663  0000B3                     ??_strcmp:
  3664  0000B3                     ??___fltol:
  3665  0000B3                     MOTEapp_SetDataRateSetting@dr:
  3666                           	opt stack 0
  3667  0000B3                     moteApp_toggleLeds@state:
  3668                           	opt stack 0
  3669  0000B3                     moteApp_addToDataBuffer@index:
  3670                           	opt stack 0
  3671  0000B3                     USBTransferOnePacket@ep:
  3672                           	opt stack 0
  3673  0000B3                     ___awmod@counter:
  3674                           	opt stack 0
  3675  0000B3                     ___flpack@exp:
  3676                           	opt stack 0
  3677  0000B3                     ___lwmod@counter:
  3678                           	opt stack 0
  3679  0000B3                     ___wmul@product:
  3680                           	opt stack 0
  3681  0000B3                     memcpy@n:
  3682                           	opt stack 0
  3683  0000B3                     memset@n:
  3684                           	opt stack 0
  3685  0000B3                     strncmp@len:
  3686                           	opt stack 0
  3687  0000B3                     ___almod@divisor:
  3688                           	opt stack 0
  3689                           
  3690                           ; 4 bytes @ 0x4
  3691  0000B3                     	ds	1
  3692  0000B4                     ___awmod@sign:
  3693                           	opt stack 0
  3694  0000B4                     ___flpack@sign:
  3695                           	opt stack 0
  3696  0000B4                     strcmp@r:
  3697                           	opt stack 0
  3698  0000B4                     moduleResync@escapeCounter:
  3699                           	opt stack 0
  3700  0000B4                     moteApp_setSensorsInput@escapeCounter:
  3701                           	opt stack 0
  3702  0000B4                     moteApp_getTempValue@escapeCounter:
  3703                           	opt stack 0
  3704  0000B4                     USBTransferOnePacket@handle:
  3705                           	opt stack 0
  3706                           
  3707                           ; 2 bytes @ 0x5
  3708  0000B4                     	ds	1
  3709  0000B5                     ??_strncmp:
  3710  0000B5                     ??___flpack:
  3711  0000B5                     moteApp_add8bToDataBuffer@bufferLocation:
  3712                           	opt stack 0
  3713  0000B5                     memcpy@d:
  3714                           	opt stack 0
  3715  0000B5                     memset@p:
  3716                           	opt stack 0
  3717                           
  3718                           ; 2 bytes @ 0x6
  3719  0000B5                     	ds	1
  3720  0000B6                     ??_moteApp_add8bToDataBuffer:
  3721  0000B6                     ??_CDCTxService:
  3722  0000B6                     moduleResync@escapeEvent:
  3723                           	opt stack 0
  3724  0000B6                     getsUSBUSART@buffer:
  3725                           	opt stack 0
  3726                           
  3727                           ; 2 bytes @ 0x7
  3728  0000B6                     	ds	1
  3729  0000B7                     USBDeviceInit@i:
  3730                           	opt stack 0
  3731  0000B7                     ___almod@counter:
  3732                           	opt stack 0
  3733  0000B7                     ___fltol@sign1:
  3734                           	opt stack 0
  3735  0000B7                     _CDCTxService$6486:
  3736                           	opt stack 0
  3737  0000B7                     memcpy@s:
  3738                           	opt stack 0
  3739                           
  3740                           ; 2 bytes @ 0x8
  3741  0000B7                     	ds	1
  3742  0000B8                     moteApp_add8bToDataBuffer@number:
  3743                           	opt stack 0
  3744  0000B8                     getsUSBUSART@len:
  3745                           	opt stack 0
  3746  0000B8                     ___almod@sign:
  3747                           	opt stack 0
  3748  0000B8                     ___fltol@exp1:
  3749                           	opt stack 0
  3750                           
  3751                           ; 1 bytes @ 0x9
  3752  0000B8                     	ds	1
  3753  0000B9                     ??_getsUSBUSART:
  3754  0000B9                     ?___fladd:
  3755                           	opt stack 0
  3756  0000B9                     ?___lbtofl:
  3757                           	opt stack 0
  3758  0000B9                     oled_putChar@k:
  3759                           	opt stack 0
  3760  0000B9                     CDCTxService@i:
  3761                           	opt stack 0
  3762  0000B9                     moteApp_setLightString@lightString:
  3763                           	opt stack 0
  3764  0000B9                     ___fladd@f1:
  3765                           	opt stack 0
  3766                           
  3767                           ; 4 bytes @ 0xA
  3768  0000B9                     	ds	1
  3769  0000BA                     oled_putChar@index:
  3770                           	opt stack 0
  3771  0000BA                     CDCTxService@byte_to_send:
  3772                           	opt stack 0
  3773  0000BA                     _getsUSBUSART$6438:
  3774                           	opt stack 0
  3775                           
  3776                           ; 2 bytes @ 0xB
  3777  0000BA                     	ds	1
  3778  0000BB                     moteApp_setLightString@stingPos:
  3779                           	opt stack 0
  3780  0000BB                     oled_clearRow@page:
  3781                           	opt stack 0
  3782                           
  3783                           ; 1 bytes @ 0xC
  3784  0000BB                     	ds	1
  3785  0000BC                     ??_USBapp_DeviceCdcEmulatorHandler:
  3786  0000BC                     ?_moteApp_getLightValue:
  3787                           	opt stack 0
  3788  0000BC                     oled_clearRow@index:
  3789                           	opt stack 0
  3790                           
  3791                           ; 1 bytes @ 0xD
  3792  0000BC                     	ds	1
  3793  0000BD                     moteApp_GoToSleep@status:
  3794                           	opt stack 0
  3795  0000BD                     ___lbtofl@c:
  3796                           	opt stack 0
  3797  0000BD                     ___fladd@f2:
  3798                           	opt stack 0
  3799                           
  3800                           ; 4 bytes @ 0xE
  3801  0000BD                     	ds	1
  3802  0000BE                     moteApp_getLightValue@escapeCounter:
  3803                           	opt stack 0
  3804                           
  3805                           ; 2 bytes @ 0xF
  3806  0000BE                     	ds	2
  3807  0000C0                     ?_moteApp_convertSensorValue:
  3808                           	opt stack 0
  3809  0000C0                     moteApp_convertSensorValue@string:
  3810                           	opt stack 0
  3811  0000C0                     oled_putString@string:
  3812                           	opt stack 0
  3813                           
  3814                           ; 2 bytes @ 0x11
  3815  0000C0                     	ds	1
  3816  0000C1                     ??___fladd:
  3817                           
  3818                           ; 0 bytes @ 0x12
  3819  0000C1                     	ds	1
  3820  0000C2                     ??_moteApp_convertSensorValue:
  3821  0000C2                     oled_putString@station_dot:
  3822                           	opt stack 0
  3823  0000C2                     ___fladd@sign:
  3824                           	opt stack 0
  3825                           
  3826                           ; 1 bytes @ 0x13
  3827  0000C2                     	ds	1
  3828  0000C3                     oled_putString@start_page:
  3829                           	opt stack 0
  3830  0000C3                     ___fladd@exp2:
  3831                           	opt stack 0
  3832                           
  3833                           ; 1 bytes @ 0x14
  3834  0000C3                     	ds	1
  3835  0000C4                     oled_putString@index:
  3836                           	opt stack 0
  3837  0000C4                     ___fladd@exp1:
  3838                           	opt stack 0
  3839                           
  3840                           ; 1 bytes @ 0x15
  3841  0000C4                     	ds	1
  3842  0000C5                     ??_test_switch:
  3843  0000C5                     ?___flmul:
  3844                           	opt stack 0
  3845  0000C5                     moteJoiningProcess@changeStates:
  3846                           	opt stack 0
  3847  0000C5                     moteApp_convertSensorValue@index:
  3848                           	opt stack 0
  3849  0000C5                     USBapp_Handler@buttonPress:
  3850                           	opt stack 0
  3851  0000C5                     oled_putUint8@station_dot:
  3852                           	opt stack 0
  3853  0000C5                     oled_putint8@station_dot:
  3854                           	opt stack 0
  3855  0000C5                     ___flmul@f1:
  3856                           	opt stack 0
  3857                           
  3858                           ; 4 bytes @ 0x16
  3859  0000C5                     	ds	1
  3860  0000C6                     moteJoiningProcess@selectButton:
  3861                           	opt stack 0
  3862  0000C6                     oled_putUint8@start_page:
  3863                           	opt stack 0
  3864  0000C6                     oled_putint8@start_page:
  3865                           	opt stack 0
  3866  0000C6                     test_switch@timeout:
  3867                           	opt stack 0
  3868  0000C6                     moteApp_convertSensorValue@convertedValue:
  3869                           	opt stack 0
  3870                           
  3871                           ; 2 bytes @ 0x17
  3872  0000C6                     	ds	1
  3873  0000C7                     ??_moteJoiningProcess:
  3874  0000C7                     oled_putUint8@number:
  3875                           	opt stack 0
  3876  0000C7                     oled_putint8@negative:
  3877                           	opt stack 0
  3878                           
  3879                           ; 1 bytes @ 0x18
  3880  0000C7                     	ds	1
  3881  0000C8                     test_switch@buttonCheck:
  3882                           	opt stack 0
  3883  0000C8                     moteJoiningProcess@readDataRate:
  3884                           	opt stack 0
  3885  0000C8                     oled_putUint8@numData:
  3886                           	opt stack 0
  3887  0000C8                     oled_putint8@numData:
  3888                           	opt stack 0
  3889                           
  3890                           ; 6 bytes @ 0x19
  3891  0000C8                     	ds	1
  3892  0000C9                     moteJoiningProcess@joiningComplete:
  3893                           	opt stack 0
  3894  0000C9                     ___flmul@f2:
  3895                           	opt stack 0
  3896                           
  3897                           ; 4 bytes @ 0x1A
  3898  0000C9                     	ds	1
  3899  0000CA                     moteJoiningProcess@messageReady:
  3900                           	opt stack 0
  3901                           
  3902                           ; 1 bytes @ 0x1B
  3903  0000CA                     	ds	3
  3904  0000CD                     ___flmul@exp:
  3905                           	opt stack 0
  3906                           
  3907                           ; 1 bytes @ 0x1E
  3908  0000CD                     	ds	1
  3909  0000CE                     oled_putint8@number:
  3910                           	opt stack 0
  3911  0000CE                     ___flmul@f3_as_product:
  3912                           	opt stack 0
  3913                           
  3914                           ; 4 bytes @ 0x1F
  3915  0000CE                     	ds	4
  3916  0000D2                     ___flmul@cntr:
  3917                           	opt stack 0
  3918                           
  3919                           ; 1 bytes @ 0x23
  3920  0000D2                     	ds	1
  3921  0000D3                     ___flmul@sign:
  3922                           	opt stack 0
  3923                           
  3924                           ; 1 bytes @ 0x24
  3925  0000D3                     	ds	1
  3926  0000D4                     ?___fldiv:
  3927                           	opt stack 0
  3928  0000D4                     ___fldiv@f1:
  3929                           	opt stack 0
  3930                           
  3931                           ; 4 bytes @ 0x25
  3932  0000D4                     	ds	4
  3933  0000D8                     ___fldiv@f2:
  3934                           	opt stack 0
  3935                           
  3936                           ; 4 bytes @ 0x29
  3937  0000D8                     	ds	4
  3938  0000DC                     ___fldiv@f3:
  3939                           	opt stack 0
  3940                           
  3941                           ; 4 bytes @ 0x2D
  3942  0000DC                     	ds	4
  3943  0000E0                     ___fldiv@cntr:
  3944                           	opt stack 0
  3945                           
  3946                           ; 1 bytes @ 0x31
  3947  0000E0                     	ds	1
  3948  0000E1                     ___fldiv@exp:
  3949                           	opt stack 0
  3950                           
  3951                           ; 1 bytes @ 0x32
  3952  0000E1                     	ds	1
  3953  0000E2                     ___fldiv@sign:
  3954                           	opt stack 0
  3955                           
  3956                           ; 1 bytes @ 0x33
  3957  0000E2                     	ds	1
  3958  0000E3                     ADC_TempConversion@tempRaw:
  3959                           	opt stack 0
  3960                           
  3961                           ; 1 bytes @ 0x34
  3962  0000E3                     	ds	1
  3963  0000E4                     ADC_TempConversion@temp:
  3964                           	opt stack 0
  3965                           
  3966                           ; 1 bytes @ 0x35
  3967  0000E4                     	ds	1
  3968  0000E5                     ADC_TempConversion@val:
  3969                           	opt stack 0
  3970                           
  3971                           ; 4 bytes @ 0x36
  3972  0000E5                     	ds	4
  3973  0000E9                     ??_moteApp_testSensors:
  3974  0000E9                     moteRunningProcess@selectButton:
  3975                           	opt stack 0
  3976                           
  3977                           ; 1 bytes @ 0x3A
  3978  0000E9                     	ds	1
  3979  0000EA                     moteRunningProcess@messageReady:
  3980                           	opt stack 0
  3981                           
  3982                           ; 1 bytes @ 0x3B
  3983  0000EA                     	ds	1
  3984  0000EB                     moteRunningProcess@sleepEvent:
  3985                           	opt stack 0
  3986                           
  3987                           ; 1 bytes @ 0x3C
  3988  0000EB                     	ds	1
  3989  0000EC                     ??_moteRunningProcess:
  3990                           
  3991                           ; 0 bytes @ 0x3D
  3992  0000EC                     	ds	3
  3993  0000EF                     moteRunningProcess@readByte:
  3994                           	opt stack 0
  3995                           
  3996                           ; 1 bytes @ 0x40
  3997  0000EF                     	ds	1
  3998  0000F0                     moteRunningProcess@sizeOfUpdate:
  3999                           	opt stack 0
  4000                           
  4001                           ; 1 bytes @ 0x41
  4002  0000F0                     	ds	1
  4003  0000F1                     moteRunningProcess@sizeOfUpdate_1692:
  4004                           	opt stack 0
  4005                           
  4006                           ; 1 bytes @ 0x42
  4007  0000F1                     	ds	1
  4008  0000F2                     moteRunningProcess@counter:
  4009                           	opt stack 0
  4010                           
  4011                           ; 1 bytes @ 0x43
  4012  0000F2                     	ds	1
  4013  0000F3                     moteRunningProcess@bufferReadPos:
  4014                           	opt stack 0
  4015                           
  4016                           ; 1 bytes @ 0x44
  4017  0000F3                     	ds	1
  4018  0000F4                     moteRunningProcess@changeStates:
  4019                           	opt stack 0
  4020                           
  4021                           ; 1 bytes @ 0x45
  4022  0000F4                     	ds	1
  4023  0000F5                     ??_moteHandler:
  4024                           
  4025                           ; 0 bytes @ 0x46
  4026  0000F5                     	ds	1
  4027  0000F6                     tblptru	equ	0xFF8
  4028                           tblptrh	equ	0xFF7
  4029                           tblptrl	equ	0xFF6
  4030                           tablat	equ	0xFF5
  4031                           postinc0	equ	0xFEE
  4032                           wreg	equ	0xFE8
  4033                           postdec1	equ	0xFE5
  4034                           fsr1l	equ	0xFE1
  4035                           
  4036                           ; 0 bytes @ 0x47
  4037                           
  4038                           	psect	cstackCOMRAM
  4039  000001                     __pcstackCOMRAM:
  4040                           	opt stack 0
  4041  000001                     ??_USBStdGetDscHandler:
  4042  000001                     ??_USBStdGetStatusHandler:
  4043  000001                     ?i2_USBTransferOnePacket:
  4044                           	opt stack 0
  4045  000001                     ?___lldiv:
  4046                           	opt stack 0
  4047  000001                     USBConfigureEndpoint@direction:
  4048                           	opt stack 0
  4049  000001                     USBCtrlTrfTxService@byteToSend:
  4050                           	opt stack 0
  4051  000001                     i2USBTransferOnePacket@dir:
  4052                           	opt stack 0
  4053  000001                     i2memset@p1:
  4054                           	opt stack 0
  4055  000001                     ___lldiv@dividend:
  4056                           	opt stack 0
  4057                           
  4058                           ; 4 bytes @ 0x0
  4059  000001                     	ds	1
  4060  000002                     ??_USBConfigureEndpoint:
  4061  000002                     USBStdGetStatusHandler@p:
  4062                           	opt stack 0
  4063  000002                     i2USBTransferOnePacket@data:
  4064                           	opt stack 0
  4065                           
  4066                           ; 2 bytes @ 0x1
  4067  000002                     	ds	1
  4068  000003                     i2memset@c:
  4069                           	opt stack 0
  4070                           
  4071                           ; 2 bytes @ 0x2
  4072  000003                     	ds	1
  4073  000004                     i2USBTransferOnePacket@len:
  4074                           	opt stack 0
  4075                           
  4076                           ; 1 bytes @ 0x3
  4077  000004                     	ds	1
  4078  000005                     i2USBTransferOnePacket@ep:
  4079                           	opt stack 0
  4080  000005                     i2memset@n:
  4081                           	opt stack 0
  4082  000005                     ___lldiv@divisor:
  4083                           	opt stack 0
  4084                           
  4085                           ; 4 bytes @ 0x4
  4086  000005                     	ds	1
  4087  000006                     USBConfigureEndpoint@EPNum:
  4088                           	opt stack 0
  4089  000006                     i2USBTransferOnePacket@handle:
  4090                           	opt stack 0
  4091                           
  4092                           ; 2 bytes @ 0x5
  4093  000006                     	ds	1
  4094  000007                     USBConfigureEndpoint@handle:
  4095                           	opt stack 0
  4096  000007                     i2memset@p:
  4097                           	opt stack 0
  4098                           
  4099                           ; 2 bytes @ 0x6
  4100  000007                     	ds	2
  4101  000009                     USBEnableEndpoint@options:
  4102                           	opt stack 0
  4103  000009                     i2USBDeviceInit@i:
  4104                           	opt stack 0
  4105  000009                     ___lldiv@quotient:
  4106                           	opt stack 0
  4107                           
  4108                           ; 4 bytes @ 0x8
  4109  000009                     	ds	1
  4110  00000A                     USBEnableEndpoint@p:
  4111                           	opt stack 0
  4112                           
  4113                           ; 2 bytes @ 0x9
  4114  00000A                     	ds	2
  4115  00000C                     USBEnableEndpoint@ep:
  4116                           	opt stack 0
  4117                           
  4118                           ; 1 bytes @ 0xB
  4119  00000C                     	ds	1
  4120  00000D                     USBapp_CdcEmulatorInitialize@i:
  4121                           	opt stack 0
  4122  00000D                     ___lldiv@counter:
  4123                           	opt stack 0
  4124                           
  4125                           ; 1 bytes @ 0xC
  4126  00000D                     	ds	1
  4127  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4128                           	opt stack 0
  4129  00000E                     USART_mySetLineCodingHandler@dwBaud:
  4130                           	opt stack 0
  4131                           
  4132                           ; 4 bytes @ 0xD
  4133  00000E                     	ds	2
  4134  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4135                           	opt stack 0
  4136                           
  4137                           ; 2 bytes @ 0xF
  4138  000010                     	ds	2
  4139  000012                     USBCtrlTrfRxService@i:
  4140                           	opt stack 0
  4141  000012                     USBCtrlTrfInHandler@lastDTS:
  4142                           	opt stack 0
  4143  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4144                           	opt stack 0
  4145                           
  4146                           ; 2 bytes @ 0x11
  4147  000012                     	ds	1
  4148  000013                     USBCtrlTrfRxService@byteToRead:
  4149                           	opt stack 0
  4150                           
  4151                           ; 1 bytes @ 0x12
  4152  000013                     	ds	1
  4153  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4154                           
  4155                           ; 0 bytes @ 0x13
  4156  000014                     	ds	2
  4157  000016                     ??_USBStdFeatureReqHandler:
  4158  000016                     USBStdSetCfgHandler@i:
  4159                           	opt stack 0
  4160                           
  4161                           ; 1 bytes @ 0x15
  4162  000016                     	ds	1
  4163  000017                     USBStdFeatureReqHandler@pUEP:
  4164                           	opt stack 0
  4165                           
  4166                           ; 2 bytes @ 0x16
  4167  000017                     	ds	2
  4168  000019                     USBStdFeatureReqHandler@current_ep_data:
  4169                           	opt stack 0
  4170                           
  4171                           ; 1 bytes @ 0x18
  4172  000019                     	ds	1
  4173  00001A                     USBStdFeatureReqHandler@p:
  4174                           	opt stack 0
  4175                           
  4176                           ; 2 bytes @ 0x19
  4177  00001A                     	ds	2
  4178  00001C                     ??_USBCtrlEPService:
  4179  00001C                     
  4180                           ; 0 bytes @ 0x1B
  4181  00001C                     	ds	2
  4182  00001E                     USBCtrlEPService@setup_cnt:
  4183                           	opt stack 0
  4184                           
  4185                           ; 1 bytes @ 0x1D
  4186  00001E                     	ds	1
  4187  00001F                     USBDeviceTasks@i:
  4188                           	opt stack 0
  4189                           
  4190                           ; 1 bytes @ 0x1E
  4191  00001F                     	ds	1
  4192  000020                     ??_INTERRUPT_InterruptManager:
  4193                           
  4194                           ; 0 bytes @ 0x1F
  4195  000020                     	ds	14
  4196                           tblptru	equ	0xFF8
  4197                           tblptrh	equ	0xFF7
  4198                           tblptrl	equ	0xFF6
  4199                           tablat	equ	0xFF5
  4200                           postinc0	equ	0xFEE
  4201                           wreg	equ	0xFE8
  4202                           postdec1	equ	0xFE5
  4203                           fsr1l	equ	0xFE1
  4204                           
  4205 ;;
  4206 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4207 ;;
  4208 ;; *************** function _main *****************
  4209 ;; Defined at:
  4210 ;;		line 89 in file "main.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;		None               void
  4217 ;; Registers used:
  4218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4227 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4228 ;;Total ram usage:        0 bytes
  4229 ;; Hardware stack levels required when called:   20
  4230 ;; This function calls:
  4231 ;;		_DATAEE_ReadByte
  4232 ;;		_DATAEE_WriteByte
  4233 ;;		_MOTEapp_handlerState
  4234 ;;		_SYSTEM_Initialize
  4235 ;;		_USBDeviceAttach
  4236 ;;		_USBDeviceInit
  4237 ;;		_USBapp_Handler
  4238 ;;		_USBapp_handlerState
  4239 ;;		_moduleResync
  4240 ;;		_moteApp_clearCommand
  4241 ;;		_moteApp_delayms
  4242 ;;		_moteHandler
  4243 ;;		_oled_clear
  4244 ;;		_oled_init
  4245 ;;		_oled_putString
  4246 ;;		_test_powerup
  4247 ;; This function is called by:
  4248 ;;		Startup code after reset
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text0
  4253  002C58                     __ptext0:
  4254                           	opt stack 0
  4255  002C58                     _main:
  4256                           	opt stack 11
  4257                           
  4258                           ;main.c: 92: SYSTEM_Initialize();
  4259                           
  4260                           ;incstack = 0
  4261  002C58  EC75  F02E         	call	_SYSTEM_Initialize	;wreg free
  4262                           
  4263                           ;main.c: 94: oled_init();
  4264  002C5C  ECAB  F02D         	call	_oled_init	;wreg free
  4265                           
  4266                           ;main.c: 95: USBDeviceInit();
  4267  002C60  EC99  F013         	call	_USBDeviceInit	;wreg free
  4268                           
  4269                           ;main.c: 97: USBDeviceAttach();
  4270  002C64  EC76  F02D         	call	_USBDeviceAttach	;wreg free
  4271                           
  4272                           ;main.c: 99: LATBbits.LATB5 = 1;
  4273  002C68  8A8A               	bsf	3978,5,c	;volatile
  4274                           
  4275                           ;main.c: 100: moteApp_delayms(50);
  4276  002C6A  0E00               	movlw	0
  4277  002C6C  0100               	movlb	0	; () banked
  4278  002C6E  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4279  002C70  0E32               	movlw	50
  4280  002C72  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4281  002C74  ECB1  F02C         	call	_moteApp_delayms	;wreg free
  4282                           
  4283                           ;main.c: 101: LATBbits.LATB5 = 0;
  4284  002C78  9A8A               	bcf	3978,5,c	;volatile
  4285                           
  4286                           ;main.c: 102: moteApp_delayms(500);
  4287  002C7A  0E01               	movlw	1
  4288  002C7C  0100               	movlb	0	; () banked
  4289  002C7E  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4290  002C80  0EF4               	movlw	244
  4291  002C82  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4292  002C84  ECB1  F02C         	call	_moteApp_delayms	;wreg free
  4293                           
  4294                           ;main.c: 104: PEIE = 1;
  4295  002C88  8CF2               	bsf	intcon,6,c	;volatile
  4296                           
  4297                           ;main.c: 105: GIE = 1;
  4298  002C8A  8EF2               	bsf	intcon,7,c	;volatile
  4299                           
  4300                           ;main.c: 107: moduleResync();
  4301  002C8C  EC1B  F026         	call	_moduleResync	;wreg free
  4302                           
  4303                           ;main.c: 108: moteApp_delayms(20);
  4304  002C90  0E00               	movlw	0
  4305  002C92  0100               	movlb	0	; () banked
  4306  002C94  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4307  002C96  0E14               	movlw	20
  4308  002C98  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4309  002C9A  ECB1  F02C         	call	_moteApp_delayms	;wreg free
  4310                           
  4311                           ;main.c: 109: moteApp_clearCommand();
  4312  002C9E  EC4A  F02F         	call	_moteApp_clearCommand	;wreg free
  4313                           
  4314                           ;main.c: 110: moteApp_delayms(20);
  4315  002CA2  0E00               	movlw	0
  4316  002CA4  0100               	movlb	0	; () banked
  4317  002CA6  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4318  002CA8  0E14               	movlw	20
  4319  002CAA  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4320  002CAC  ECB1  F02C         	call	_moteApp_delayms	;wreg free
  4321                           
  4322                           ;main.c: 112: powerOnStatus = DATAEE_ReadByte(0x00);
  4323  002CB0  0E00               	movlw	0
  4324  002CB2  EC0D  F02F         	call	_DATAEE_ReadByte
  4325  002CB6  0100               	movlb	0	; () banked
  4326  002CB8  6FA0               	movwf	_powerOnStatus& (0+255),b
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;main.c: 113: if ( powerOnStatus != 0x55)
  4330  002CBA  0E55               	movlw	85
  4331  002CBC  0100               	movlb	0	; () banked
  4332  002CBE  19A0               	xorwf	_powerOnStatus& (0+255),w,b
  4333  002CC0  B4D8               	btfsc	status,2,c
  4334  002CC2  D009               	goto	l13651
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;main.c: 114: {
  4338                           ;main.c: 115: test_powerup();
  4339  002CC4  ECA8  F028         	call	_test_powerup	;wreg free
  4340                           
  4341                           ;main.c: 116: DATAEE_WriteByte(0x00, 0x55);
  4342  002CC8  0E55               	movlw	85
  4343  002CCA  0100               	movlb	0	; () banked
  4344  002CCC  6FAF               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4345  002CCE  0E00               	movlw	0
  4346  002CD0  EC37  F02C         	call	_DATAEE_WriteByte
  4347  002CD4  D000               	goto	l13651
  4348  002CD6                     l13651:
  4349                           
  4350                           ;main.c: 117: }
  4351                           ;main.c: 120: operationType = USB;
  4352  002CD6  0E00               	movlw	0
  4353  002CD8  0100               	movlb	0	; () banked
  4354  002CDA  6F9F               	movwf	_operationType& (0+255),b
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;main.c: 121: USBapp_handlerState(USB_STARTUP);
  4358  002CDC  0E00               	movlw	0
  4359  002CDE  EC7C  F02F         	call	_USBapp_handlerState
  4360                           
  4361                           ;main.c: 123: oled_clear();
  4362  002CE2  ECB6  F02E         	call	_oled_clear	;wreg free
  4363                           
  4364                           ;main.c: 124: oled_putString("kontol i ",0,0);
  4365  002CE6  0E06               	movlw	low STR_1
  4366  002CE8  0100               	movlb	0	; () banked
  4367  002CEA  6FC0               	movwf	oled_putString@string& (0+255),b
  4368  002CEC  0E7F               	movlw	high STR_1
  4369  002CEE  0100               	movlb	0	; () banked
  4370  002CF0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4371  002CF2  0E00               	movlw	0
  4372  002CF4  0100               	movlb	0	; () banked
  4373  002CF6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4374  002CF8  0E00               	movlw	0
  4375  002CFA  0100               	movlb	0	; () banked
  4376  002CFC  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4377  002CFE  EC30  F028         	call	_oled_putString	;wreg free
  4378                           
  4379                           ;main.c: 125: oled_putString("   LoRa cony  ",0,1);
  4380  002D02  0E23               	movlw	low STR_2
  4381  002D04  0100               	movlb	0	; () banked
  4382  002D06  6FC0               	movwf	oled_putString@string& (0+255),b
  4383  002D08  0E7D               	movlw	high STR_2
  4384  002D0A  0100               	movlb	0	; () banked
  4385  002D0C  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4386  002D0E  0E00               	movlw	0
  4387  002D10  0100               	movlb	0	; () banked
  4388  002D12  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4389  002D14  0E01               	movlw	1
  4390  002D16  0100               	movlb	0	; () banked
  4391  002D18  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4392  002D1A  EC30  F028         	call	_oled_putString	;wreg free
  4393                           
  4394                           ;main.c: 126: oled_putString(" IOT Code ",0,3);
  4395  002D1E  0EB5               	movlw	low STR_3
  4396  002D20  0100               	movlb	0	; () banked
  4397  002D22  6FC0               	movwf	oled_putString@string& (0+255),b
  4398  002D24  0E7E               	movlw	high STR_3
  4399  002D26  0100               	movlb	0	; () banked
  4400  002D28  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4401  002D2A  0E00               	movlw	0
  4402  002D2C  0100               	movlb	0	; () banked
  4403  002D2E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4404  002D30  0E03               	movlw	3
  4405  002D32  0100               	movlb	0	; () banked
  4406  002D34  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4407  002D36  EC30  F028         	call	_oled_putString	;wreg free
  4408                           
  4409                           ;main.c: 127: moteApp_delayms(10000);
  4410  002D3A  0E27               	movlw	39
  4411  002D3C  0100               	movlb	0	; () banked
  4412  002D3E  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4413  002D40  0E10               	movlw	16
  4414  002D42  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4415  002D44  ECB1  F02C         	call	_moteApp_delayms	;wreg free
  4416                           
  4417                           ;main.c: 131: {
  4418                           ;main.c: 135: switch (operationType)
  4419                           
  4420                           ;main.c: 130: while(1)
  4421  002D48  D017               	goto	l13679
  4422  002D4A  D7FF               	goto	l71
  4423                           
  4424                           ;main.c: 139: break;
  4425  002D4C  D015               	goto	l13679
  4426  002D4E                     l13665:
  4427                           
  4428                           ;main.c: 141: USBapp_Handler();
  4429  002D4E  EC82  F020         	call	_USBapp_Handler	;wreg free
  4430                           
  4431                           ;main.c: 143: operationType = MOTE;
  4432  002D52  0E01               	movlw	1
  4433  002D54  0100               	movlb	0	; () banked
  4434  002D56  6F9F               	movwf	_operationType& (0+255),b
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;main.c: 144: MOTEapp_handlerState(MOTE_STARTUP);
  4438  002D58  0E01               	movlw	1
  4439  002D5A  EC81  F02F         	call	_MOTEapp_handlerState
  4440                           
  4441                           ;main.c: 145: break;
  4442  002D5E  D00C               	goto	l13679
  4443  002D60                     l13671:
  4444                           
  4445                           ;main.c: 147: if (moteHandler() == MOTE_SWAP)
  4446  002D60  EC29  F00E         	call	_moteHandler	;wreg free
  4447  002D64  0A04               	xorlw	4
  4448  002D66  A4D8               	btfss	status,2,c
  4449  002D68  D007               	goto	l13679
  4450                           
  4451                           ;main.c: 148: {
  4452                           ;main.c: 150: operationType = USB;
  4453  002D6A  0E00               	movlw	0
  4454  002D6C  0100               	movlb	0	; () banked
  4455  002D6E  6F9F               	movwf	_operationType& (0+255),b
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;main.c: 151: USBapp_handlerState(USB_STARTUP);
  4459  002D70  0E00               	movlw	0
  4460  002D72  EC7C  F02F         	call	_USBapp_handlerState
  4461                           
  4462                           ;main.c: 154: }
  4463                           
  4464                           ;main.c: 152: }
  4465                           ;main.c: 153: break;
  4466  002D76  D000               	goto	l13679
  4467  002D78                     l13679:
  4468  002D78  0100               	movlb	0	; () banked
  4469  002D7A  519F               	movf	_operationType& (0+255),w,b
  4470                           
  4471                           ; Switch size 1, requested type "space"
  4472                           ; Number of cases is 2, Range of values is 0 to 1
  4473                           ; switch strategies available:
  4474                           ; Name         Instructions Cycles
  4475                           ; simple_byte            7     4 (average)
  4476                           ;	Chosen strategy is simple_byte
  4477  002D7C  0A00               	xorlw	0	; case 0
  4478  002D7E  B4D8               	btfsc	status,2,c
  4479  002D80  D7E6               	goto	l13665
  4480  002D82  0A01               	xorlw	1	; case 1
  4481  002D84  B4D8               	btfsc	status,2,c
  4482  002D86  D7EC               	goto	l13671
  4483  002D88  D7E0               	goto	l71
  4484                           
  4485                           ; BSR set to: 0
  4486                           
  4487                           ; BSR set to: 0
  4488  002D8A  D7F6               	goto	l13679
  4489                           
  4490                           ; BSR set to: 0
  4491                           
  4492                           ; BSR set to: 0
  4493  002D8C  EF62  F000         	goto	start
  4494  002D90                     __end_of_main:
  4495                           	opt stack 0
  4496                           tblptru	equ	0xFF8
  4497                           tblptrh	equ	0xFF7
  4498                           tblptrl	equ	0xFF6
  4499                           tablat	equ	0xFF5
  4500                           intcon	equ	0xFF2
  4501                           postinc0	equ	0xFEE
  4502                           wreg	equ	0xFE8
  4503                           postdec1	equ	0xFE5
  4504                           fsr1l	equ	0xFE1
  4505                           status	equ	0xFD8
  4506                           
  4507 ;; *************** function _test_powerup *****************
  4508 ;; Defined at:
  4509 ;;		line 62 in file "../Includes/Board/poweruptest.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;		None
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;		None
  4514 ;; Return value:  Size  Location     Type
  4515 ;;		None               void
  4516 ;; Registers used:
  4517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4523 ;;      Params:         0       0       0       0       0       0       0       0       0
  4524 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4526 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4527 ;;Total ram usage:        0 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:   17
  4530 ;; This function calls:
  4531 ;;		_EUSART_FlushBuffer
  4532 ;;		_moteApp_delayms
  4533 ;;		_moteApp_testSensors
  4534 ;;		_oled_clear
  4535 ;;		_test_comms
  4536 ;;		_test_leds
  4537 ;;		_test_oled
  4538 ;;		_test_switch
  4539 ;; This function is called by:
  4540 ;;		_main
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text1
  4545  005150                     __ptext1:
  4546                           	opt stack 0
  4547  005150                     _test_powerup:
  4548                           	opt stack 13
  4549                           
  4550                           ;poweruptest.c: 65: test_oled();
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;incstack = 0
  4554  005150  ECE6  F023         	call	_test_oled	;wreg free
  4555                           
  4556                           ;poweruptest.c: 66: moteApp_delayms(20);
  4557  005154  0E00               	movlw	0
  4558  005156  0100               	movlb	0	; () banked
  4559  005158  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4560  00515A  0E14               	movlw	20
  4561  00515C  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4562  00515E  ECB1  F02C         	call	_moteApp_delayms	;wreg free
  4563                           
  4564                           ;poweruptest.c: 68: test_switch();
  4565  005162  ECA3  F019         	call	_test_switch	;wreg free
  4566                           
  4567                           ;poweruptest.c: 70: oled_clear();
  4568  005166  ECB6  F02E         	call	_oled_clear	;wreg free
  4569                           
  4570                           ;poweruptest.c: 71: moteApp_delayms(20);
  4571  00516A  0E00               	movlw	0
  4572  00516C  0100               	movlb	0	; () banked
  4573  00516E  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4574  005170  0E14               	movlw	20
  4575  005172  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4576  005174  ECB1  F02C         	call	_moteApp_delayms	;wreg free
  4577                           
  4578                           ;poweruptest.c: 72: test_comms();
  4579  005178  ECE1  F028         	call	_test_comms	;wreg free
  4580                           
  4581                           ;poweruptest.c: 73: moteApp_delayms(20);
  4582  00517C  0E00               	movlw	0
  4583  00517E  0100               	movlb	0	; () banked
  4584  005180  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4585  005182  0E14               	movlw	20
  4586  005184  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4587  005186  ECB1  F02C         	call	_moteApp_delayms	;wreg free
  4588                           
  4589                           ;poweruptest.c: 75: test_leds();
  4590  00518A  ECB9  F029         	call	_test_leds	;wreg free
  4591                           
  4592                           ;poweruptest.c: 78: moteApp_delayms(20);
  4593  00518E  0E00               	movlw	0
  4594  005190  0100               	movlb	0	; () banked
  4595  005192  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4596  005194  0E14               	movlw	20
  4597  005196  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4598  005198  ECB1  F02C         	call	_moteApp_delayms	;wreg free
  4599                           
  4600                           ;poweruptest.c: 79: EUSART_FlushBuffer();
  4601  00519C  EC5C  F02B         	call	_EUSART_FlushBuffer	;wreg free
  4602                           
  4603                           ;poweruptest.c: 80: moteApp_delayms(20);
  4604  0051A0  0E00               	movlw	0
  4605  0051A2  0100               	movlb	0	; () banked
  4606  0051A4  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4607  0051A6  0E14               	movlw	20
  4608  0051A8  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4609  0051AA  ECB1  F02C         	call	_moteApp_delayms	;wreg free
  4610                           
  4611                           ;poweruptest.c: 81: moteApp_testSensors();
  4612  0051AE  EC14  F01C         	call	_moteApp_testSensors	;wreg free
  4613                           
  4614                           ;poweruptest.c: 82: moteApp_delayms(3000);
  4615  0051B2  0E0B               	movlw	11
  4616  0051B4  0100               	movlb	0	; () banked
  4617  0051B6  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4618  0051B8  0EB8               	movlw	184
  4619  0051BA  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4620  0051BC  ECB1  F02C         	call	_moteApp_delayms	;wreg free
  4621  0051C0  0012               	return		;funcret
  4622  0051C2                     __end_of_test_powerup:
  4623                           	opt stack 0
  4624                           tblptru	equ	0xFF8
  4625                           tblptrh	equ	0xFF7
  4626                           tblptrl	equ	0xFF6
  4627                           tablat	equ	0xFF5
  4628                           intcon	equ	0xFF2
  4629                           postinc0	equ	0xFEE
  4630                           wreg	equ	0xFE8
  4631                           postdec1	equ	0xFE5
  4632                           fsr1l	equ	0xFE1
  4633                           status	equ	0xFD8
  4634                           
  4635 ;; *************** function _test_switch *****************
  4636 ;; Defined at:
  4637 ;;		line 99 in file "../Includes/Board/poweruptest.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;		None
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  timeout         2   23[BANK0 ] unsigned int 
  4642 ;;  buttonCheck     1   25[BANK0 ] unsigned char 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;		None               void
  4645 ;; Registers used:
  4646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4652 ;;      Params:         0       0       0       0       0       0       0       0       0
  4653 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4654 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4655 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4656 ;;Total ram usage:        4 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:   16
  4659 ;; This function calls:
  4660 ;;		_oled_clear
  4661 ;;		_oled_putString
  4662 ;; This function is called by:
  4663 ;;		_test_powerup
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text2
  4668  003346                     __ptext2:
  4669                           	opt stack 0
  4670  003346                     _test_switch:
  4671                           	opt stack 13
  4672                           
  4673                           ;poweruptest.c: 101: uint16_t timeout = 500;
  4674                           
  4675                           ;incstack = 0
  4676  003346  0E01               	movlw	1
  4677  003348  0100               	movlb	0	; () banked
  4678  00334A  6FC7               	movwf	(test_switch@timeout+1)& (0+255),b
  4679  00334C  0EF4               	movlw	244
  4680  00334E  6FC6               	movwf	test_switch@timeout& (0+255),b
  4681                           
  4682                           ;poweruptest.c: 102: uint8_t buttonCheck = 0x00;
  4683  003350  0E00               	movlw	0
  4684  003352  0100               	movlb	0	; () banked
  4685  003354  6FC8               	movwf	test_switch@buttonCheck& (0+255),b
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;poweruptest.c: 103: oled_clear();
  4689  003356  ECB6  F02E         	call	_oled_clear	;wreg free
  4690                           
  4691                           ;poweruptest.c: 104: oled_putString("Button Test:",0,0);
  4692  00335A  0EEB               	movlw	low STR_10
  4693  00335C  0100               	movlb	0	; () banked
  4694  00335E  6FC0               	movwf	oled_putString@string& (0+255),b
  4695  003360  0E7D               	movlw	high STR_10
  4696  003362  0100               	movlb	0	; () banked
  4697  003364  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4698  003366  0E00               	movlw	0
  4699  003368  0100               	movlb	0	; () banked
  4700  00336A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4701  00336C  0E00               	movlw	0
  4702  00336E  0100               	movlb	0	; () banked
  4703  003370  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4704  003372  EC30  F028         	call	_oled_putString	;wreg free
  4705                           
  4706                           ;poweruptest.c: 106: if( (PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
  4707  003376  A281               	btfss	3969,1,c	;volatile
  4708  003378  D002               	goto	l12305
  4709  00337A  B081               	btfsc	3969,0,c	;volatile
  4710  00337C  D00F               	goto	l12307
  4711  00337E                     l12305:
  4712                           
  4713                           ;poweruptest.c: 107: {
  4714                           ;poweruptest.c: 108: oled_putString("Button FAIL",0,3);
  4715  00337E  0E67               	movlw	low STR_11
  4716  003380  0100               	movlb	0	; () banked
  4717  003382  6FC0               	movwf	oled_putString@string& (0+255),b
  4718  003384  0E7E               	movlw	high STR_11
  4719  003386  0100               	movlb	0	; () banked
  4720  003388  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4721  00338A  0E00               	movlw	0
  4722  00338C  0100               	movlb	0	; () banked
  4723  00338E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4724  003390  0E03               	movlw	3
  4725  003392  0100               	movlb	0	; () banked
  4726  003394  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4727  003396  EC30  F028         	call	_oled_putString	;wreg free
  4728                           
  4729                           ;poweruptest.c: 109: }
  4730  00339A  D04C               	goto	l12325
  4731  00339C                     l12307:
  4732                           
  4733                           ;poweruptest.c: 110: else
  4734                           ;poweruptest.c: 111: {
  4735                           ;poweruptest.c: 112: oled_putString("Press Button",0,1);
  4736  00339C  0E12               	movlw	low STR_12
  4737  00339E  0100               	movlb	0	; () banked
  4738  0033A0  6FC0               	movwf	oled_putString@string& (0+255),b
  4739  0033A2  0E7E               	movlw	high STR_12
  4740  0033A4  0100               	movlb	0	; () banked
  4741  0033A6  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4742  0033A8  0E00               	movlw	0
  4743  0033AA  0100               	movlb	0	; () banked
  4744  0033AC  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4745  0033AE  0E01               	movlw	1
  4746  0033B0  0100               	movlb	0	; () banked
  4747  0033B2  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4748  0033B4  EC30  F028         	call	_oled_putString	;wreg free
  4749                           
  4750                           ;poweruptest.c: 113: }
  4751                           ;poweruptest.c: 114: while(timeout--)
  4752  0033B8  D03D               	goto	l12325
  4753  0033BA                     l137:
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;poweruptest.c: 115: {
  4757                           ;poweruptest.c: 116: if(PORTBbits.RB1 == 0)
  4758  0033BA  B281               	btfsc	3969,1,c	;volatile
  4759  0033BC  D014               	goto	l12313
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;poweruptest.c: 117: {
  4763                           ;poweruptest.c: 118: oled_putString("Button1 PASS",0,2);
  4764  0033BE  0EF8               	movlw	low STR_13
  4765  0033C0  0100               	movlb	0	; () banked
  4766  0033C2  6FC0               	movwf	oled_putString@string& (0+255),b
  4767  0033C4  0E7D               	movlw	high STR_13
  4768  0033C6  0100               	movlb	0	; () banked
  4769  0033C8  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4770  0033CA  0E00               	movlw	0
  4771  0033CC  0100               	movlb	0	; () banked
  4772  0033CE  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4773  0033D0  0E02               	movlw	2
  4774  0033D2  0100               	movlb	0	; () banked
  4775  0033D4  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4776  0033D6  EC30  F028         	call	_oled_putString	;wreg free
  4777                           
  4778                           ;poweruptest.c: 119: buttonCheck = buttonCheck + 0x08;
  4779  0033DA  0100               	movlb	0	; () banked
  4780  0033DC  51C8               	movf	test_switch@buttonCheck& (0+255),w,b
  4781  0033DE  0F08               	addlw	8
  4782  0033E0  0100               	movlb	0	; () banked
  4783  0033E2  6FC8               	movwf	test_switch@buttonCheck& (0+255),b
  4784  0033E4  D000               	goto	l12313
  4785  0033E6                     l12313:
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;poweruptest.c: 120: }
  4789                           ;poweruptest.c: 121: if(PORTBbits.RB0 == 0)
  4790  0033E6  B081               	btfsc	3969,0,c	;volatile
  4791  0033E8  D014               	goto	l12319
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;poweruptest.c: 122: {
  4795                           ;poweruptest.c: 123: oled_putString("Button2 PASS",0,3);
  4796  0033EA  0E05               	movlw	low STR_14
  4797  0033EC  0100               	movlb	0	; () banked
  4798  0033EE  6FC0               	movwf	oled_putString@string& (0+255),b
  4799  0033F0  0E7E               	movlw	high STR_14
  4800  0033F2  0100               	movlb	0	; () banked
  4801  0033F4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4802  0033F6  0E00               	movlw	0
  4803  0033F8  0100               	movlb	0	; () banked
  4804  0033FA  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4805  0033FC  0E03               	movlw	3
  4806  0033FE  0100               	movlb	0	; () banked
  4807  003400  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4808  003402  EC30  F028         	call	_oled_putString	;wreg free
  4809                           
  4810                           ;poweruptest.c: 124: buttonCheck = buttonCheck + 0x80;
  4811  003406  0100               	movlb	0	; () banked
  4812  003408  51C8               	movf	test_switch@buttonCheck& (0+255),w,b
  4813  00340A  0F80               	addlw	128
  4814  00340C  0100               	movlb	0	; () banked
  4815  00340E  6FC8               	movwf	test_switch@buttonCheck& (0+255),b
  4816  003410  D000               	goto	l12319
  4817  003412                     l12319:
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;poweruptest.c: 125: }
  4821                           ;poweruptest.c: 126: if (buttonCheck == 0x88)
  4822  003412  0E88               	movlw	136
  4823  003414  0100               	movlb	0	; () banked
  4824  003416  19C8               	xorwf	test_switch@buttonCheck& (0+255),w,b
  4825  003418  B4D8               	btfsc	status,2,c
  4826  00341A  0012               	return	
  4827  00341C  D001               	goto	l12323
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;poweruptest.c: 127: {
  4831                           ;poweruptest.c: 128: break;
  4832  00341E  0012               	return	
  4833  003420                     l12323:
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;poweruptest.c: 129: }
  4837                           ;poweruptest.c: 130: _delay((unsigned long)((10)*(48000000/4000.0)));
  4838  003420  0E9C               	movlw	156
  4839  003422  0100               	movlb	0	; () banked
  4840  003424  6FC5               	movwf	??_test_switch& (0+255),b
  4841  003426  0ED7               	movlw	215
  4842  003428                     u12437:
  4843  003428  2EE8               	decfsz	wreg,f,c
  4844  00342A  D7FE               	goto	u12437
  4845  00342C  2FC5               	decfsz	??_test_switch& (0+255),f,b
  4846  00342E  D7FC               	goto	u12437
  4847  003430  F000               	nop	
  4848  003432  D000               	goto	l12325
  4849  003434                     l12325:
  4850  003434  0100               	movlb	0	; () banked
  4851  003436  07C6               	decf	test_switch@timeout& (0+255),f,b
  4852  003438  A0D8               	btfss	status,0,c
  4853  00343A  07C7               	decf	(test_switch@timeout+1)& (0+255),f,b
  4854  00343C  0100               	movlb	0	; () banked
  4855  00343E  29C6               	incf	test_switch@timeout& (0+255),w,b
  4856  003440  E1BC               	bnz	l137
  4857  003442  0100               	movlb	0	; () banked
  4858  003444  29C7               	incf	(test_switch@timeout+1)& (0+255),w,b
  4859  003446  A4D8               	btfss	status,2,c
  4860  003448  D7B8               	goto	l137
  4861                           
  4862                           ; BSR set to: 0
  4863                           
  4864                           ; BSR set to: 0
  4865  00344A  0012               	return		;funcret
  4866  00344C                     __end_of_test_switch:
  4867                           	opt stack 0
  4868                           tblptru	equ	0xFF8
  4869                           tblptrh	equ	0xFF7
  4870                           tblptrl	equ	0xFF6
  4871                           tablat	equ	0xFF5
  4872                           intcon	equ	0xFF2
  4873                           postinc0	equ	0xFEE
  4874                           wreg	equ	0xFE8
  4875                           postdec1	equ	0xFE5
  4876                           fsr1l	equ	0xFE1
  4877                           status	equ	0xFD8
  4878                           
  4879 ;; *************** function _test_oled *****************
  4880 ;; Defined at:
  4881 ;;		line 86 in file "../Includes/Board/poweruptest.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;		None
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;		None
  4886 ;; Return value:  Size  Location     Type
  4887 ;;		None               void
  4888 ;; Registers used:
  4889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4895 ;;      Params:         0       0       0       0       0       0       0       0       0
  4896 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4898 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4899 ;;Total ram usage:        0 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:   16
  4902 ;; This function calls:
  4903 ;;		_oled_clear
  4904 ;;		_oled_putString
  4905 ;; This function is called by:
  4906 ;;		_test_powerup
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text3
  4911  0047CC                     __ptext3:
  4912                           	opt stack 0
  4913  0047CC                     _test_oled:
  4914                           	opt stack 13
  4915                           
  4916                           ;poweruptest.c: 88: oled_clear();
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;incstack = 0
  4920  0047CC  ECB6  F02E         	call	_oled_clear	;wreg free
  4921                           
  4922                           ;poweruptest.c: 90: oled_putString("MoTe v .",0,0);
  4923  0047D0  0E3D               	movlw	low STR_4
  4924  0047D2  0100               	movlb	0	; () banked
  4925  0047D4  6FC0               	movwf	oled_putString@string& (0+255),b
  4926  0047D6  0E7F               	movlw	high STR_4
  4927  0047D8  0100               	movlb	0	; () banked
  4928  0047DA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4929  0047DC  0E00               	movlw	0
  4930  0047DE  0100               	movlb	0	; () banked
  4931  0047E0  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4932  0047E2  0E00               	movlw	0
  4933  0047E4  0100               	movlb	0	; () banked
  4934  0047E6  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4935  0047E8  EC30  F028         	call	_oled_putString	;wreg free
  4936                           
  4937                           ;poweruptest.c: 91: oled_putString("0",0,6);
  4938  0047EC  0E81               	movlw	low (STR_164+11)
  4939  0047EE  0100               	movlb	0	; () banked
  4940  0047F0  6FC0               	movwf	oled_putString@string& (0+255),b
  4941  0047F2  0E7D               	movlw	high (STR_164+11)
  4942  0047F4  0100               	movlb	0	; () banked
  4943  0047F6  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4944  0047F8  0E00               	movlw	0
  4945  0047FA  0100               	movlb	0	; () banked
  4946  0047FC  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4947  0047FE  0E06               	movlw	6
  4948  004800  0100               	movlb	0	; () banked
  4949  004802  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4950  004804  EC30  F028         	call	_oled_putString	;wreg free
  4951                           
  4952                           ;poweruptest.c: 92: oled_putString("1",0,8);
  4953  004808  0E8E               	movlw	low (STR_165+11)
  4954  00480A  0100               	movlb	0	; () banked
  4955  00480C  6FC0               	movwf	oled_putString@string& (0+255),b
  4956  00480E  0E7D               	movlw	high (STR_165+11)
  4957  004810  0100               	movlb	0	; () banked
  4958  004812  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4959  004814  0E00               	movlw	0
  4960  004816  0100               	movlb	0	; () banked
  4961  004818  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4962  00481A  0E08               	movlw	8
  4963  00481C  0100               	movlb	0	; () banked
  4964  00481E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4965  004820  EC30  F028         	call	_oled_putString	;wreg free
  4966                           
  4967                           ;poweruptest.c: 93: oled_putString("Build Date/Time",0,1);
  4968  004824  0EE6               	movlw	low STR_7
  4969  004826  0100               	movlb	0	; () banked
  4970  004828  6FC0               	movwf	oled_putString@string& (0+255),b
  4971  00482A  0E7C               	movlw	high STR_7
  4972  00482C  0100               	movlb	0	; () banked
  4973  00482E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4974  004830  0E00               	movlw	0
  4975  004832  0100               	movlb	0	; () banked
  4976  004834  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4977  004836  0E01               	movlw	1
  4978  004838  0100               	movlb	0	; () banked
  4979  00483A  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4980  00483C  EC30  F028         	call	_oled_putString	;wreg free
  4981                           
  4982                           ;poweruptest.c: 94: oled_putString("Feb 05 2020",0,2);
  4983  004840  0E5B               	movlw	low STR_8
  4984  004842  0100               	movlb	0	; () banked
  4985  004844  6FC0               	movwf	oled_putString@string& (0+255),b
  4986  004846  0E7E               	movlw	high STR_8
  4987  004848  0100               	movlb	0	; () banked
  4988  00484A  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4989  00484C  0E00               	movlw	0
  4990  00484E  0100               	movlb	0	; () banked
  4991  004850  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4992  004852  0E02               	movlw	2
  4993  004854  0100               	movlb	0	; () banked
  4994  004856  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4995  004858  EC30  F028         	call	_oled_putString	;wreg free
  4996                           
  4997                           ;poweruptest.c: 95: oled_putString("15:20:08",0,3);
  4998  00485C  0E46               	movlw	low STR_9
  4999  00485E  0100               	movlb	0	; () banked
  5000  004860  6FC0               	movwf	oled_putString@string& (0+255),b
  5001  004862  0E7F               	movlw	high STR_9
  5002  004864  0100               	movlb	0	; () banked
  5003  004866  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  5004  004868  0E00               	movlw	0
  5005  00486A  0100               	movlb	0	; () banked
  5006  00486C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5007  00486E  0E03               	movlw	3
  5008  004870  0100               	movlb	0	; () banked
  5009  004872  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5010  004874  EC30  F028         	call	_oled_putString	;wreg free
  5011  004878  0012               	return		;funcret
  5012  00487A                     __end_of_test_oled:
  5013                           	opt stack 0
  5014                           tblptru	equ	0xFF8
  5015                           tblptrh	equ	0xFF7
  5016                           tblptrl	equ	0xFF6
  5017                           tablat	equ	0xFF5
  5018                           intcon	equ	0xFF2
  5019                           postinc0	equ	0xFEE
  5020                           wreg	equ	0xFE8
  5021                           postdec1	equ	0xFE5
  5022                           fsr1l	equ	0xFE1
  5023                           status	equ	0xFD8
  5024                           
  5025 ;; *************** function _test_leds *****************
  5026 ;; Defined at:
  5027 ;;		line 147 in file "../Includes/Board/poweruptest.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;		None
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;		None               void
  5034 ;; Registers used:
  5035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5041 ;;      Params:         0       0       0       0       0       0       0       0       0
  5042 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5044 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5045 ;;Total ram usage:        0 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:   15
  5048 ;; This function calls:
  5049 ;;		_delayms
  5050 ;;		_oled_putString
  5051 ;; This function is called by:
  5052 ;;		_test_powerup
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text4
  5057  005372                     __ptext4:
  5058                           	opt stack 0
  5059  005372                     _test_leds:
  5060                           	opt stack 14
  5061                           
  5062                           ;poweruptest.c: 149: oled_putString("LED Test:",0,1);
  5063                           
  5064                           ;incstack = 0
  5065  005372  0EFC               	movlw	low STR_16
  5066  005374  0100               	movlb	0	; () banked
  5067  005376  6FC0               	movwf	oled_putString@string& (0+255),b
  5068  005378  0E7E               	movlw	high STR_16
  5069  00537A  0100               	movlb	0	; () banked
  5070  00537C  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  5071  00537E  0E00               	movlw	0
  5072  005380  0100               	movlb	0	; () banked
  5073  005382  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5074  005384  0E01               	movlw	1
  5075  005386  0100               	movlb	0	; () banked
  5076  005388  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5077  00538A  EC30  F028         	call	_oled_putString	;wreg free
  5078                           
  5079                           ;poweruptest.c: 151: LATAbits.LATA6 = 1;
  5080  00538E  8C89               	bsf	3977,6,c	;volatile
  5081                           
  5082                           ;poweruptest.c: 152: LATAbits.LATA7 = 1;
  5083  005390  8E89               	bsf	3977,7,c	;volatile
  5084                           
  5085                           ;poweruptest.c: 153: delayms(500);
  5086  005392  0E01               	movlw	1
  5087  005394  0100               	movlb	0	; () banked
  5088  005396  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5089  005398  0EF4               	movlw	244
  5090  00539A  6FAF               	movwf	delayms@t& (0+255),b
  5091  00539C  EC94  F02C         	call	_delayms	;wreg free
  5092                           
  5093                           ;poweruptest.c: 154: LATAbits.LATA6 = 0;
  5094  0053A0  9C89               	bcf	3977,6,c	;volatile
  5095                           
  5096                           ;poweruptest.c: 155: LATAbits.LATA7 = 0;
  5097  0053A2  9E89               	bcf	3977,7,c	;volatile
  5098                           
  5099                           ;poweruptest.c: 156: delayms(500);
  5100  0053A4  0E01               	movlw	1
  5101  0053A6  0100               	movlb	0	; () banked
  5102  0053A8  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5103  0053AA  0EF4               	movlw	244
  5104  0053AC  6FAF               	movwf	delayms@t& (0+255),b
  5105  0053AE  EC94  F02C         	call	_delayms	;wreg free
  5106                           
  5107                           ;poweruptest.c: 157: LATAbits.LATA6 = 1;
  5108  0053B2  8C89               	bsf	3977,6,c	;volatile
  5109                           
  5110                           ;poweruptest.c: 158: LATAbits.LATA7 = 1;
  5111  0053B4  8E89               	bsf	3977,7,c	;volatile
  5112                           
  5113                           ;poweruptest.c: 159: delayms(500);
  5114  0053B6  0E01               	movlw	1
  5115  0053B8  0100               	movlb	0	; () banked
  5116  0053BA  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5117  0053BC  0EF4               	movlw	244
  5118  0053BE  6FAF               	movwf	delayms@t& (0+255),b
  5119  0053C0  EC94  F02C         	call	_delayms	;wreg free
  5120                           
  5121                           ;poweruptest.c: 160: LATAbits.LATA6 = 0;
  5122  0053C4  9C89               	bcf	3977,6,c	;volatile
  5123                           
  5124                           ;poweruptest.c: 161: LATAbits.LATA7 = 0;
  5125  0053C6  9E89               	bcf	3977,7,c	;volatile
  5126                           
  5127                           ;poweruptest.c: 162: delayms(500);
  5128  0053C8  0E01               	movlw	1
  5129  0053CA  0100               	movlb	0	; () banked
  5130  0053CC  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5131  0053CE  0EF4               	movlw	244
  5132  0053D0  6FAF               	movwf	delayms@t& (0+255),b
  5133  0053D2  EC94  F02C         	call	_delayms	;wreg free
  5134  0053D6  0012               	return		;funcret
  5135  0053D8                     __end_of_test_leds:
  5136                           	opt stack 0
  5137                           tblptru	equ	0xFF8
  5138                           tblptrh	equ	0xFF7
  5139                           tblptrl	equ	0xFF6
  5140                           tablat	equ	0xFF5
  5141                           intcon	equ	0xFF2
  5142                           postinc0	equ	0xFEE
  5143                           wreg	equ	0xFE8
  5144                           postdec1	equ	0xFE5
  5145                           fsr1l	equ	0xFE1
  5146                           status	equ	0xFD8
  5147                           
  5148 ;; *************** function _test_comms *****************
  5149 ;; Defined at:
  5150 ;;		line 134 in file "../Includes/Board/poweruptest.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;		None
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;		None
  5155 ;; Return value:  Size  Location     Type
  5156 ;;		None               void
  5157 ;; Registers used:
  5158 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5164 ;;      Params:         0       0       0       0       0       0       0       0       0
  5165 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5167 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5168 ;;Total ram usage:        0 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:   15
  5171 ;; This function calls:
  5172 ;;		_delayms
  5173 ;;		_moteApp_toggleLeds
  5174 ;;		_oled_putString
  5175 ;; This function is called by:
  5176 ;;		_test_powerup
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text5
  5181  0051C2                     __ptext5:
  5182                           	opt stack 0
  5183  0051C2                     _test_comms:
  5184                           	opt stack 14
  5185                           
  5186                           ;poweruptest.c: 136: oled_putString("Comm Test:",0,0);
  5187                           
  5188                           ;incstack = 0
  5189  0051C2  0EAA               	movlw	low STR_15
  5190  0051C4  0100               	movlb	0	; () banked
  5191  0051C6  6FC0               	movwf	oled_putString@string& (0+255),b
  5192  0051C8  0E7E               	movlw	high STR_15
  5193  0051CA  0100               	movlb	0	; () banked
  5194  0051CC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  5195  0051CE  0E00               	movlw	0
  5196  0051D0  0100               	movlb	0	; () banked
  5197  0051D2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5198  0051D4  0E00               	movlw	0
  5199  0051D6  0100               	movlb	0	; () banked
  5200  0051D8  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5201  0051DA  EC30  F028         	call	_oled_putString	;wreg free
  5202                           
  5203                           ;poweruptest.c: 137: moteApp_toggleLeds(1);
  5204  0051DE  0E01               	movlw	1
  5205  0051E0  ECA8  F01A         	call	_moteApp_toggleLeds
  5206                           
  5207                           ;poweruptest.c: 138: delayms(500);
  5208  0051E4  0E01               	movlw	1
  5209  0051E6  0100               	movlb	0	; () banked
  5210  0051E8  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5211  0051EA  0EF4               	movlw	244
  5212  0051EC  6FAF               	movwf	delayms@t& (0+255),b
  5213  0051EE  EC94  F02C         	call	_delayms	;wreg free
  5214                           
  5215                           ;poweruptest.c: 139: moteApp_toggleLeds(0);
  5216  0051F2  0E00               	movlw	0
  5217  0051F4  ECA8  F01A         	call	_moteApp_toggleLeds
  5218                           
  5219                           ;poweruptest.c: 140: delayms(500);
  5220  0051F8  0E01               	movlw	1
  5221  0051FA  0100               	movlb	0	; () banked
  5222  0051FC  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5223  0051FE  0EF4               	movlw	244
  5224  005200  6FAF               	movwf	delayms@t& (0+255),b
  5225  005202  EC94  F02C         	call	_delayms	;wreg free
  5226                           
  5227                           ;poweruptest.c: 141: moteApp_toggleLeds(1);
  5228  005206  0E01               	movlw	1
  5229  005208  ECA8  F01A         	call	_moteApp_toggleLeds
  5230                           
  5231                           ;poweruptest.c: 142: delayms(500);
  5232  00520C  0E01               	movlw	1
  5233  00520E  0100               	movlb	0	; () banked
  5234  005210  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5235  005212  0EF4               	movlw	244
  5236  005214  6FAF               	movwf	delayms@t& (0+255),b
  5237  005216  EC94  F02C         	call	_delayms	;wreg free
  5238                           
  5239                           ;poweruptest.c: 143: moteApp_toggleLeds(0);
  5240  00521A  0E00               	movlw	0
  5241  00521C  ECA8  F01A         	call	_moteApp_toggleLeds
  5242                           
  5243                           ;poweruptest.c: 144: delayms(500);
  5244  005220  0E01               	movlw	1
  5245  005222  0100               	movlb	0	; () banked
  5246  005224  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5247  005226  0EF4               	movlw	244
  5248  005228  6FAF               	movwf	delayms@t& (0+255),b
  5249  00522A  EC94  F02C         	call	_delayms	;wreg free
  5250  00522E  0012               	return		;funcret
  5251  005230                     __end_of_test_comms:
  5252                           	opt stack 0
  5253                           tblptru	equ	0xFF8
  5254                           tblptrh	equ	0xFF7
  5255                           tblptrl	equ	0xFF6
  5256                           tablat	equ	0xFF5
  5257                           intcon	equ	0xFF2
  5258                           postinc0	equ	0xFEE
  5259                           wreg	equ	0xFE8
  5260                           postdec1	equ	0xFE5
  5261                           fsr1l	equ	0xFE1
  5262                           status	equ	0xFD8
  5263                           
  5264 ;; *************** function _moteApp_toggleLeds *****************
  5265 ;; Defined at:
  5266 ;;		line 1265 in file "../Includes/Board/MOTEapp.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;  state           1    wreg     unsigned char 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;  state           1    4[BANK0 ] unsigned char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;		None               void
  5273 ;; Registers used:
  5274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5280 ;;      Params:         0       0       0       0       0       0       0       0       0
  5281 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5282 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5283 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5284 ;;Total ram usage:        2 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:   14
  5287 ;; This function calls:
  5288 ;;		MOTEapp@sendCommand
  5289 ;; This function is called by:
  5290 ;;		_test_comms
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text6
  5295  003550                     __ptext6:
  5296                           	opt stack 0
  5297  003550                     _moteApp_toggleLeds:
  5298                           	opt stack 14
  5299                           
  5300                           ;incstack = 0
  5301                           ;moteApp_toggleLeds@state stored from wreg
  5302  003550  0100               	movlb	0	; () banked
  5303  003552  6FB3               	movwf	moteApp_toggleLeds@state& (0+255),b
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;MOTEapp.c: 1267: _delay((unsigned long)((16)*(48000000/4000.0)));
  5307  003554  0EFA               	movlw	250
  5308  003556  0100               	movlb	0	; () banked
  5309  003558  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5310  00355A  0E58               	movlw	88
  5311  00355C                     u12447:
  5312  00355C  2EE8               	decfsz	wreg,f,c
  5313  00355E  D7FE               	goto	u12447
  5314  003560  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5315  003562  D7FC               	goto	u12447
  5316  003564  D000               	nop2	
  5317                           
  5318                           ;MOTEapp.c: 1268: _delay((unsigned long)((16)*(48000000/4000.0)));
  5319  003566  0EFA               	movlw	250
  5320  003568  0100               	movlb	0	; () banked
  5321  00356A  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5322  00356C  0E58               	movlw	88
  5323  00356E                     u12457:
  5324  00356E  2EE8               	decfsz	wreg,f,c
  5325  003570  D7FE               	goto	u12457
  5326  003572  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5327  003574  D7FC               	goto	u12457
  5328  003576  D000               	nop2	
  5329                           
  5330                           ;MOTEapp.c: 1269: _delay((unsigned long)((16)*(48000000/4000.0)));
  5331  003578  0EFA               	movlw	250
  5332  00357A  0100               	movlb	0	; () banked
  5333  00357C  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5334  00357E  0E58               	movlw	88
  5335  003580                     u12467:
  5336  003580  2EE8               	decfsz	wreg,f,c
  5337  003582  D7FE               	goto	u12467
  5338  003584  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5339  003586  D7FC               	goto	u12467
  5340  003588  D000               	nop2	
  5341                           
  5342                           ;MOTEapp.c: 1270: if (state)
  5343  00358A  0100               	movlb	0	; () banked
  5344  00358C  51B3               	movf	moteApp_toggleLeds@state& (0+255),w,b
  5345  00358E  0100               	movlb	0	; () banked
  5346  003590  B4D8               	btfsc	status,2,c
  5347  003592  D02C               	goto	l11731
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;MOTEapp.c: 1271: {
  5351                           ;MOTEapp.c: 1272: sendCommand("sys set pindig GPIO10 1\r\n");
  5352  003594  0E2C               	movlw	low STR_175
  5353  003596  0100               	movlb	0	; () banked
  5354  003598  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
  5355  00359A  0E7A               	movlw	high STR_175
  5356  00359C  0100               	movlb	0	; () banked
  5357  00359E  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
  5358  0035A0  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
  5359                           
  5360                           ;MOTEapp.c: 1273: _delay((unsigned long)((16)*(48000000/4000.0)));
  5361  0035A4  0EFA               	movlw	250
  5362  0035A6  0100               	movlb	0	; () banked
  5363  0035A8  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5364  0035AA  0E58               	movlw	88
  5365  0035AC                     u12477:
  5366  0035AC  2EE8               	decfsz	wreg,f,c
  5367  0035AE  D7FE               	goto	u12477
  5368  0035B0  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5369  0035B2  D7FC               	goto	u12477
  5370  0035B4  D000               	nop2	
  5371                           
  5372                           ;MOTEapp.c: 1274: _delay((unsigned long)((16)*(48000000/4000.0)));
  5373  0035B6  0EFA               	movlw	250
  5374  0035B8  0100               	movlb	0	; () banked
  5375  0035BA  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5376  0035BC  0E58               	movlw	88
  5377  0035BE                     u12487:
  5378  0035BE  2EE8               	decfsz	wreg,f,c
  5379  0035C0  D7FE               	goto	u12487
  5380  0035C2  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5381  0035C4  D7FC               	goto	u12487
  5382  0035C6  D000               	nop2	
  5383                           
  5384                           ;MOTEapp.c: 1275: _delay((unsigned long)((16)*(48000000/4000.0)));
  5385  0035C8  0EFA               	movlw	250
  5386  0035CA  0100               	movlb	0	; () banked
  5387  0035CC  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5388  0035CE  0E58               	movlw	88
  5389  0035D0                     u12497:
  5390  0035D0  2EE8               	decfsz	wreg,f,c
  5391  0035D2  D7FE               	goto	u12497
  5392  0035D4  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5393  0035D6  D7FC               	goto	u12497
  5394  0035D8  D000               	nop2	
  5395                           
  5396                           ;MOTEapp.c: 1276: sendCommand("sys set pindig GPIO11 1\r\n");
  5397  0035DA  0E46               	movlw	low STR_176
  5398  0035DC  0100               	movlb	0	; () banked
  5399  0035DE  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
  5400  0035E0  0E7A               	movlw	high STR_176
  5401  0035E2  0100               	movlb	0	; () banked
  5402  0035E4  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
  5403  0035E6  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
  5404                           
  5405                           ;MOTEapp.c: 1277: }
  5406  0035EA  0012               	return	
  5407  0035EC                     l11731:
  5408                           
  5409                           ;MOTEapp.c: 1278: else
  5410                           ;MOTEapp.c: 1279: {
  5411                           ;MOTEapp.c: 1280: sendCommand("sys set pindig GPIO10 0\r\n");
  5412  0035EC  0EF8               	movlw	low STR_177
  5413  0035EE  0100               	movlb	0	; () banked
  5414  0035F0  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
  5415  0035F2  0E79               	movlw	high STR_177
  5416  0035F4  0100               	movlb	0	; () banked
  5417  0035F6  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
  5418  0035F8  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
  5419                           
  5420                           ;MOTEapp.c: 1281: _delay((unsigned long)((16)*(48000000/4000.0)));
  5421  0035FC  0EFA               	movlw	250
  5422  0035FE  0100               	movlb	0	; () banked
  5423  003600  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5424  003602  0E58               	movlw	88
  5425  003604                     u12507:
  5426  003604  2EE8               	decfsz	wreg,f,c
  5427  003606  D7FE               	goto	u12507
  5428  003608  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5429  00360A  D7FC               	goto	u12507
  5430  00360C  D000               	nop2	
  5431                           
  5432                           ;MOTEapp.c: 1282: _delay((unsigned long)((16)*(48000000/4000.0)));
  5433  00360E  0EFA               	movlw	250
  5434  003610  0100               	movlb	0	; () banked
  5435  003612  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5436  003614  0E58               	movlw	88
  5437  003616                     u12517:
  5438  003616  2EE8               	decfsz	wreg,f,c
  5439  003618  D7FE               	goto	u12517
  5440  00361A  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5441  00361C  D7FC               	goto	u12517
  5442  00361E  D000               	nop2	
  5443                           
  5444                           ;MOTEapp.c: 1283: _delay((unsigned long)((16)*(48000000/4000.0)));
  5445  003620  0EFA               	movlw	250
  5446  003622  0100               	movlb	0	; () banked
  5447  003624  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5448  003626  0E58               	movlw	88
  5449  003628                     u12527:
  5450  003628  2EE8               	decfsz	wreg,f,c
  5451  00362A  D7FE               	goto	u12527
  5452  00362C  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5453  00362E  D7FC               	goto	u12527
  5454  003630  D000               	nop2	
  5455                           
  5456                           ;MOTEapp.c: 1284: sendCommand("sys set pindig GPIO11 0\r\n");
  5457  003632  0E12               	movlw	low STR_178
  5458  003634  0100               	movlb	0	; () banked
  5459  003636  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
  5460  003638  0E7A               	movlw	high STR_178
  5461  00363A  0100               	movlb	0	; () banked
  5462  00363C  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
  5463  00363E  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
  5464  003642  0012               	return	
  5465  003644  0012               	return		;funcret
  5466  003646                     __end_of_moteApp_toggleLeds:
  5467                           	opt stack 0
  5468                           tblptru	equ	0xFF8
  5469                           tblptrh	equ	0xFF7
  5470                           tblptrl	equ	0xFF6
  5471                           tablat	equ	0xFF5
  5472                           intcon	equ	0xFF2
  5473                           postinc0	equ	0xFEE
  5474                           wreg	equ	0xFE8
  5475                           postdec1	equ	0xFE5
  5476                           fsr1l	equ	0xFE1
  5477                           status	equ	0xFD8
  5478                           
  5479 ;; *************** function _delayms *****************
  5480 ;; Defined at:
  5481 ;;		line 54 in file "../Includes/Board/poweruptest.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;  t               2    0[BANK0 ] unsigned int 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  i               2    3[BANK0 ] unsigned int 
  5486 ;; Return value:  Size  Location     Type
  5487 ;;		None               void
  5488 ;; Registers used:
  5489 ;;		wreg, status,2, status,0
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5495 ;;      Params:         0       2       0       0       0       0       0       0       0
  5496 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5497 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5498 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5499 ;;Total ram usage:        5 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:   11
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		_test_comms
  5506 ;;		_test_leds
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text7
  5511  005928                     __ptext7:
  5512                           	opt stack 0
  5513  005928                     _delayms:
  5514                           	opt stack 17
  5515                           
  5516                           ;poweruptest.c: 56: uint16_t i;
  5517                           ;poweruptest.c: 57: for(i = 0; i < t; i++)
  5518                           
  5519                           ;incstack = 0
  5520  005928  0E00               	movlw	0
  5521  00592A  0100               	movlb	0	; () banked
  5522  00592C  6FB3               	movwf	(delayms@i+1)& (0+255),b
  5523  00592E  0E00               	movlw	0
  5524  005930  6FB2               	movwf	delayms@i& (0+255),b
  5525  005932  D00C               	goto	l120
  5526  005934                     l11713:
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;poweruptest.c: 58: {
  5530                           ;poweruptest.c: 59: _delay((unsigned long)((1)*(48000000/4000.0)));
  5531  005934  0E10               	movlw	16
  5532  005936  0100               	movlb	0	; () banked
  5533  005938  6FB1               	movwf	??_delayms& (0+255),b
  5534  00593A  0E94               	movlw	148
  5535  00593C                     u12537:
  5536  00593C  2EE8               	decfsz	wreg,f,c
  5537  00593E  D7FE               	goto	u12537
  5538  005940  2FB1               	decfsz	??_delayms& (0+255),f,b
  5539  005942  D7FC               	goto	u12537
  5540  005944  D000               	nop2	
  5541  005946  0100               	movlb	0	; () banked
  5542  005948  4BB2               	infsnz	delayms@i& (0+255),f,b
  5543  00594A  2BB3               	incf	(delayms@i+1)& (0+255),f,b
  5544  00594C                     l120:
  5545                           
  5546                           ; BSR set to: 0
  5547  00594C  0100               	movlb	0	; () banked
  5548  00594E  51AF               	movf	delayms@t& (0+255),w,b
  5549  005950  0100               	movlb	0	; () banked
  5550  005952  5DB2               	subwf	delayms@i& (0+255),w,b
  5551  005954  0100               	movlb	0	; () banked
  5552  005956  51B0               	movf	(delayms@t+1)& (0+255),w,b
  5553  005958  0100               	movlb	0	; () banked
  5554  00595A  59B3               	subwfb	(delayms@i+1)& (0+255),w,b
  5555  00595C  A0D8               	btfss	status,0,c
  5556  00595E  D7EA               	goto	l11713
  5557                           
  5558                           ; BSR set to: 0
  5559                           
  5560                           ; BSR set to: 0
  5561  005960  0012               	return		;funcret
  5562  005962                     __end_of_delayms:
  5563                           	opt stack 0
  5564                           tblptru	equ	0xFF8
  5565                           tblptrh	equ	0xFF7
  5566                           tblptrl	equ	0xFF6
  5567                           tablat	equ	0xFF5
  5568                           intcon	equ	0xFF2
  5569                           postinc0	equ	0xFEE
  5570                           wreg	equ	0xFE8
  5571                           postdec1	equ	0xFE5
  5572                           fsr1l	equ	0xFE1
  5573                           status	equ	0xFD8
  5574                           
  5575 ;; *************** function _moteApp_testSensors *****************
  5576 ;; Defined at:
  5577 ;;		line 1369 in file "../Includes/Board/MOTEapp.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;		None
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;  dummyValue      2    0        unsigned int 
  5582 ;; Return value:  Size  Location     Type
  5583 ;;		None               void
  5584 ;; Registers used:
  5585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5591 ;;      Params:         0       0       0       0       0       0       0       0       0
  5592 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5593 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5594 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5595 ;;Total ram usage:        1 bytes
  5596 ;; Hardware stack levels used:    1
  5597 ;; Hardware stack levels required when called:   16
  5598 ;; This function calls:
  5599 ;;		_ADC_TempConversion
  5600 ;;		_moteApp_convertSensorValue
  5601 ;;		_moteApp_getLightValue
  5602 ;;		_moteApp_getTempValue
  5603 ;;		_moteApp_setSensorsInput
  5604 ;;		_oled_clear
  5605 ;;		_oled_putChar
  5606 ;;		_oled_putString
  5607 ;;		_oled_putint8
  5608 ;; This function is called by:
  5609 ;;		_test_powerup
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           	psect	text8
  5614  003828                     __ptext8:
  5615                           	opt stack 0
  5616  003828                     _moteApp_testSensors:
  5617                           	opt stack 13
  5618                           
  5619                           ;MOTEapp.c: 1372: moteApp_setSensorsInput();
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;incstack = 0
  5623  003828  ECD1  F025         	call	_moteApp_setSensorsInput	;wreg free
  5624                           
  5625                           ;MOTEapp.c: 1374: uint16_t dummyValue;
  5626                           ;MOTEapp.c: 1375: oled_clear();
  5627  00382C  ECB6  F02E         	call	_oled_clear	;wreg free
  5628                           
  5629                           ;MOTEapp.c: 1376: oled_putString("ADC Test",0,0);
  5630  003830  0E58               	movlw	low STR_17
  5631  003832  0100               	movlb	0	; () banked
  5632  003834  6FC0               	movwf	oled_putString@string& (0+255),b
  5633  003836  0E7F               	movlw	high STR_17
  5634  003838  0100               	movlb	0	; () banked
  5635  00383A  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  5636  00383C  0E00               	movlw	0
  5637  00383E  0100               	movlb	0	; () banked
  5638  003840  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5639  003842  0E00               	movlw	0
  5640  003844  0100               	movlb	0	; () banked
  5641  003846  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5642  003848  EC30  F028         	call	_oled_putString	;wreg free
  5643                           
  5644                           ;MOTEapp.c: 1377: oled_putString("Light =",0,1);
  5645  00384C  0E71               	movlw	low STR_19
  5646  00384E  0100               	movlb	0	; () banked
  5647  003850  6FC0               	movwf	oled_putString@string& (0+255),b
  5648  003852  0E7F               	movlw	high STR_19
  5649  003854  0100               	movlb	0	; () banked
  5650  003856  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  5651  003858  0E00               	movlw	0
  5652  00385A  0100               	movlb	0	; () banked
  5653  00385C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5654  00385E  0E01               	movlw	1
  5655  003860  0100               	movlb	0	; () banked
  5656  003862  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5657  003864  EC30  F028         	call	_oled_putString	;wreg free
  5658                           
  5659                           ;MOTEapp.c: 1378: oled_putString("Temp  =",0,2);
  5660  003868  0E69               	movlw	low STR_18
  5661  00386A  0100               	movlb	0	; () banked
  5662  00386C  6FC0               	movwf	oled_putString@string& (0+255),b
  5663  00386E  0E7F               	movlw	high STR_18
  5664  003870  0100               	movlb	0	; () banked
  5665  003872  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  5666  003874  0E00               	movlw	0
  5667  003876  0100               	movlb	0	; () banked
  5668  003878  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5669  00387A  0E02               	movlw	2
  5670  00387C  0100               	movlb	0	; () banked
  5671  00387E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5672  003880  EC30  F028         	call	_oled_putString	;wreg free
  5673                           
  5674                           ;MOTEapp.c: 1379: oled_putChar('C',14,2);
  5675  003884  0E0E               	movlw	14
  5676  003886  0100               	movlb	0	; () banked
  5677  003888  6FB1               	movwf	oled_putChar@station_dot& (0+255),b
  5678  00388A  0E02               	movlw	2
  5679  00388C  0100               	movlb	0	; () banked
  5680  00388E  6FB2               	movwf	oled_putChar@start_page& (0+255),b
  5681  003890  0E43               	movlw	67
  5682  003892  EC8C  F023         	call	_oled_putChar
  5683                           
  5684                           ;MOTEapp.c: 1380: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  5685  003896  EC33  F02B         	call	_moteApp_getTempValue	;wreg free
  5686  00389A  C0B2  F0C0         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  5687  00389E  C0B3  F0C1         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  5688  0038A2  ECE4  F024         	call	_moteApp_convertSensorValue	;wreg free
  5689  0038A6  C0C0  F07C         	movff	?_moteApp_convertSensorValue,_temperature
  5690  0038AA  C0C1  F07D         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  5691                           
  5692                           ;MOTEapp.c: 1381: temperature = ADC_TempConversion(temperature);
  5693  0038AE  0100               	movlb	0	; () banked
  5694  0038B0  517C               	movf	_temperature& (0+255),w,b
  5695  0038B2  EC00  F01D         	call	_ADC_TempConversion
  5696  0038B6  0100               	movlb	0	; () banked
  5697  0038B8  6FE9               	movwf	??_moteApp_testSensors& (0+255),b
  5698  0038BA  0100               	movlb	0	; () banked
  5699  0038BC  51E9               	movf	??_moteApp_testSensors& (0+255),w,b
  5700  0038BE  0100               	movlb	0	; () banked
  5701  0038C0  6F7C               	movwf	_temperature& (0+255),b
  5702  0038C2  6B7D               	clrf	(_temperature+1)& (0+255),b
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;MOTEapp.c: 1382: oled_putint8(temperature, 10, 2);
  5706  0038C4  0E0A               	movlw	10
  5707  0038C6  0100               	movlb	0	; () banked
  5708  0038C8  6FC5               	movwf	oled_putint8@station_dot& (0+255),b
  5709  0038CA  0E02               	movlw	2
  5710  0038CC  0100               	movlb	0	; () banked
  5711  0038CE  6FC6               	movwf	oled_putint8@start_page& (0+255),b
  5712  0038D0  0100               	movlb	0	; () banked
  5713  0038D2  517C               	movf	_temperature& (0+255),w,b
  5714  0038D4  EC17  F020         	call	_oled_putint8
  5715                           
  5716                           ;MOTEapp.c: 1383: __nop();
  5717  0038D8  F000               	nop	
  5718                           
  5719                           ;MOTEapp.c: 1384: oled_putString("    ", 10, 1);
  5720  0038DA  0EEA               	movlw	low (STR_40+12)
  5721  0038DC  0100               	movlb	0	; () banked
  5722  0038DE  6FC0               	movwf	oled_putString@string& (0+255),b
  5723  0038E0  0E7A               	movlw	high (STR_40+12)
  5724  0038E2  0100               	movlb	0	; () banked
  5725  0038E4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  5726  0038E6  0E0A               	movlw	10
  5727  0038E8  0100               	movlb	0	; () banked
  5728  0038EA  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5729  0038EC  0E01               	movlw	1
  5730  0038EE  0100               	movlb	0	; () banked
  5731  0038F0  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5732  0038F2  EC30  F028         	call	_oled_putString	;wreg free
  5733                           
  5734                           ;MOTEapp.c: 1385: oled_putString(moteApp_getLightValue(), 10, 1);
  5735  0038F6  ECEC  F029         	call	_moteApp_getLightValue	;wreg free
  5736  0038FA  C0BC  F0C0         	movff	?_moteApp_getLightValue,oled_putString@string
  5737  0038FE  C0BD  F0C1         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  5738  003902  0E0A               	movlw	10
  5739  003904  0100               	movlb	0	; () banked
  5740  003906  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5741  003908  0E01               	movlw	1
  5742  00390A  0100               	movlb	0	; () banked
  5743  00390C  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5744  00390E  EC30  F028         	call	_oled_putString	;wreg free
  5745  003912  0012               	return		;funcret
  5746  003914                     __end_of_moteApp_testSensors:
  5747                           	opt stack 0
  5748                           tblptru	equ	0xFF8
  5749                           tblptrh	equ	0xFF7
  5750                           tblptrl	equ	0xFF6
  5751                           tablat	equ	0xFF5
  5752                           intcon	equ	0xFF2
  5753                           postinc0	equ	0xFEE
  5754                           wreg	equ	0xFE8
  5755                           postdec1	equ	0xFE5
  5756                           fsr1l	equ	0xFE1
  5757                           status	equ	0xFD8
  5758                           
  5759 ;; *************** function _moteHandler *****************
  5760 ;; Defined at:
  5761 ;;		line 186 in file "../Includes/Board/MOTEapp.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;		None
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;  readMessage     1    4[BANK2 ] unsigned char 
  5766 ;;  buttonPress     1    3[BANK2 ] enum E7586
  5767 ;;  s2Button        1    2[BANK2 ] unsigned char 
  5768 ;;  gotoNextStat    1    1[BANK2 ] unsigned char 
  5769 ;;  gotoSleep       1    0[BANK2 ] unsigned char 
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1    wreg      enum E8549
  5772 ;; Registers used:
  5773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5779 ;;      Params:         0       0       0       0       0       0       0       0       0
  5780 ;;      Locals:         0       0       0       5       0       0       0       0       0
  5781 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5782 ;;      Totals:         0       1       0       5       0       0       0       0       0
  5783 ;;Total ram usage:        6 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; Hardware stack levels required when called:   19
  5786 ;; This function calls:
  5787 ;;		_ADC_TempConversion
  5788 ;;		_MOTEapp_TimerBasedTask
  5789 ;;		_MOTEapp_getModuleResponse
  5790 ;;		_TMRapp_ClearBitFlags
  5791 ;;		_TMRapp_Handler
  5792 ;;		_USBapp_exitCDC
  5793 ;;		_USBapp_exitCDCState
  5794 ;;		_moteApp_convertSensorValue
  5795 ;;		_moteApp_getLightValue
  5796 ;;		_moteApp_getTempValue
  5797 ;;		_moteJoiningProcess
  5798 ;;		_moteRunningProcess
  5799 ;;		_oled_clear
  5800 ;;		_oled_putString
  5801 ;;		_oled_putint8
  5802 ;;		_service_pushbutton
  5803 ;; This function is called by:
  5804 ;;		_main
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           	psect	text9
  5809  001C52                     __ptext9:
  5810                           	opt stack 0
  5811  001C52                     _moteHandler:
  5812                           	opt stack 11
  5813                           
  5814                           ;MOTEapp.c: 188: bool gotoSleep = 0;
  5815                           
  5816                           ;incstack = 0
  5817  001C52  0E00               	movlw	0
  5818  001C54  0102               	movlb	2	; () banked
  5819  001C56  6FA0               	movwf	moteHandler@gotoSleep& (0+255),b
  5820                           
  5821                           ;MOTEapp.c: 189: bool gotoNextState = 0;
  5822  001C58  0E00               	movlw	0
  5823  001C5A  0102               	movlb	2	; () banked
  5824  001C5C  6FA1               	movwf	moteHandler@gotoNextState& (0+255),b
  5825                           
  5826                           ;MOTEapp.c: 190: bool s2Button = 0;
  5827  001C5E  0E00               	movlw	0
  5828  001C60  0102               	movlb	2	; () banked
  5829  001C62  6FA2               	movwf	moteHandler@s2Button& (0+255),b
  5830                           
  5831                           ;MOTEapp.c: 191: bool readMessage = 0;
  5832  001C64  0E00               	movlw	0
  5833  001C66  0102               	movlb	2	; () banked
  5834  001C68  6FA4               	movwf	moteHandler@readMessage& (0+255),b
  5835                           
  5836                           ;MOTEapp.c: 192: buttonStates_t buttonPress = Released;
  5837  001C6A  0E03               	movlw	3
  5838  001C6C  0102               	movlb	2	; () banked
  5839  001C6E  6FA3               	movwf	moteHandler@buttonPress& (0+255),b
  5840                           
  5841                           ; BSR set to: 2
  5842                           ;MOTEapp.c: 195: if (PORTAbits.RA0)
  5843  001C70  A080               	btfss	3968,0,c	;volatile
  5844  001C72  D009               	goto	l13517
  5845                           
  5846                           ; BSR set to: 2
  5847                           ;MOTEapp.c: 196: {
  5848                           ;MOTEapp.c: 197: if (USBapp_exitCDC() == NO_USB)
  5849  001C74  EC93  F02F         	call	_USBapp_exitCDC	;wreg free
  5850  001C78  0900               	iorlw	0
  5851  001C7A  A4D8               	btfss	status,2,c
  5852  001C7C  D008               	goto	l13519
  5853                           
  5854                           ;MOTEapp.c: 198: moteState = MOTE_SWAP;
  5855  001C7E  0E04               	movlw	4
  5856  001C80  0100               	movlb	0	; () banked
  5857  001C82  6FFB               	movwf	_moteState& (0+255),b
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;MOTEapp.c: 199: } else {
  5861  001C84  D004               	goto	l13519
  5862  001C86                     l13517:
  5863                           
  5864                           ;MOTEapp.c: 200: USBapp_exitCDCState(NO_USB);
  5865  001C86  0E00               	movlw	0
  5866  001C88  EC77  F02F         	call	_USBapp_exitCDCState
  5867  001C8C  D000               	goto	l13519
  5868  001C8E                     l13519:
  5869                           
  5870                           ;MOTEapp.c: 201: }
  5871                           ;MOTEapp.c: 204: if ( appTimer.mSecTick )
  5872  001C8E  0100               	movlb	0	; () banked
  5873  001C90  A18E               	btfss	_appTimer& (0+255),0,b
  5874  001C92  D009               	goto	l13527
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;MOTEapp.c: 205: {
  5878                           ;MOTEapp.c: 207: TMRapp_ClearBitFlags();
  5879  001C94  EC97  F02F         	call	_TMRapp_ClearBitFlags	;wreg free
  5880                           
  5881                           ;MOTEapp.c: 209: TMRapp_Handler();
  5882  001C98  ECED  F014         	call	_TMRapp_Handler	;wreg free
  5883                           
  5884                           ;MOTEapp.c: 210: MOTEapp_TimerBasedTask(appTimer);
  5885  001C9C  0100               	movlb	0	; () banked
  5886  001C9E  518E               	movf	_appTimer& (0+255),w,b
  5887  001CA0  EC23  F02E         	call	_MOTEapp_TimerBasedTask
  5888  001CA4  D000               	goto	l13527
  5889  001CA6                     l13527:
  5890                           
  5891                           ;MOTEapp.c: 211: }
  5892                           ;MOTEapp.c: 214: buttonPress = service_pushbutton();
  5893  001CA6  ECED  F026         	call	_service_pushbutton	;wreg free
  5894  001CAA  0102               	movlb	2	; () banked
  5895  001CAC  6FA3               	movwf	moteHandler@buttonPress& (0+255),b
  5896                           
  5897                           ; BSR set to: 2
  5898                           ;MOTEapp.c: 215: if (buttonPress == ShortPress1)
  5899  001CAE  0102               	movlb	2	; () banked
  5900  001CB0  05A3               	decf	moteHandler@buttonPress& (0+255),w,b
  5901  001CB2  A4D8               	btfss	status,2,c
  5902  001CB4  D007               	goto	l13533
  5903                           
  5904                           ; BSR set to: 2
  5905                           ;MOTEapp.c: 216: {
  5906                           ;MOTEapp.c: 217: secTicker = 0;
  5907  001CB6  0E00               	movlw	0
  5908  001CB8  0100               	movlb	0	; () banked
  5909  001CBA  6FA6               	movwf	_secTicker& (0+255),b
  5910                           
  5911                           ;MOTEapp.c: 218: gotoNextState = 1;
  5912  001CBC  0E01               	movlw	1
  5913  001CBE  0102               	movlb	2	; () banked
  5914  001CC0  6FA1               	movwf	moteHandler@gotoNextState& (0+255),b
  5915                           
  5916                           ;MOTEapp.c: 219: }
  5917  001CC2  D00C               	goto	l13537
  5918  001CC4                     l13533:
  5919                           
  5920                           ; BSR set to: 2
  5921                           ;MOTEapp.c: 220: else if (buttonPress == ShortPress2)
  5922  001CC4  0E02               	movlw	2
  5923  001CC6  0102               	movlb	2	; () banked
  5924  001CC8  19A3               	xorwf	moteHandler@buttonPress& (0+255),w,b
  5925  001CCA  A4D8               	btfss	status,2,c
  5926  001CCC  D007               	goto	l13537
  5927                           
  5928                           ; BSR set to: 2
  5929                           ;MOTEapp.c: 221: {
  5930                           ;MOTEapp.c: 222: secTicker = 0;
  5931  001CCE  0E00               	movlw	0
  5932  001CD0  0100               	movlb	0	; () banked
  5933  001CD2  6FA6               	movwf	_secTicker& (0+255),b
  5934                           
  5935                           ;MOTEapp.c: 223: s2Button = 1;
  5936  001CD4  0E01               	movlw	1
  5937  001CD6  0102               	movlb	2	; () banked
  5938  001CD8  6FA2               	movwf	moteHandler@s2Button& (0+255),b
  5939                           
  5940                           ; BSR set to: 2
  5941  001CDA  D000               	goto	l13537
  5942  001CDC                     l13537:
  5943                           
  5944                           ; BSR set to: 2
  5945                           ;MOTEapp.c: 224: }
  5946                           ;MOTEapp.c: 227: if ( MOTEapp_getModuleResponse() )
  5947  001CDC  ECF2  F027         	call	_MOTEapp_getModuleResponse	;wreg free
  5948  001CE0  0900               	iorlw	0
  5949  001CE2  B4D8               	btfsc	status,2,c
  5950  001CE4  D002               	goto	l13541
  5951                           
  5952                           ;MOTEapp.c: 228: readMessage = 1;
  5953  001CE6  0E01               	movlw	1
  5954  001CE8  D001               	goto	L1
  5955  001CEA                     l13541:
  5956                           
  5957                           ;MOTEapp.c: 229: else
  5958                           ;MOTEapp.c: 230: readMessage = 0;
  5959  001CEA  0E00               	movlw	0
  5960  001CEC                     L1:
  5961  001CEC  0102               	movlb	2	; () banked
  5962  001CEE  6FA4               	movwf	moteHandler@readMessage& (0+255),b
  5963  001CF0  D000               	goto	l13543
  5964  001CF2                     l13543:
  5965                           
  5966                           ; BSR set to: 2
  5967                           ;MOTEapp.c: 233: if (runningState == runningSensorMenu)
  5968  001CF2  0E02               	movlw	2
  5969  001CF4  0100               	movlb	0	; () banked
  5970  001CF6  19A5               	xorwf	_runningState& (0+255),w,b
  5971  001CF8  A4D8               	btfss	status,2,c
  5972  001CFA  D04C               	goto	l13561
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;MOTEapp.c: 234: {
  5976                           ;MOTEapp.c: 236: if (m10SecTicker >= 100)
  5977  001CFC  0100               	movlb	0	; () banked
  5978  001CFE  5179               	movf	(_m10SecTicker+1)& (0+255),w,b
  5979  001D00  E105               	bnz	u12270
  5980  001D02  0E64               	movlw	100
  5981  001D04  0100               	movlb	0	; () banked
  5982  001D06  5D78               	subwf	_m10SecTicker& (0+255),w,b
  5983  001D08  A0D8               	btfss	status,0,c
  5984  001D0A  D044               	goto	l13561
  5985  001D0C                     u12270:
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;MOTEapp.c: 237: {
  5989                           ;MOTEapp.c: 238: __nop();
  5990  001D0C  F000               	nop	
  5991                           
  5992                           ;MOTEapp.c: 239: oled_putString("    ", 6, 1);
  5993  001D0E  0EEA               	movlw	low (STR_40+12)
  5994  001D10  0100               	movlb	0	; () banked
  5995  001D12  6FC0               	movwf	oled_putString@string& (0+255),b
  5996  001D14  0E7A               	movlw	high (STR_40+12)
  5997  001D16  0100               	movlb	0	; () banked
  5998  001D18  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  5999  001D1A  0E06               	movlw	6
  6000  001D1C  0100               	movlb	0	; () banked
  6001  001D1E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6002  001D20  0E01               	movlw	1
  6003  001D22  0100               	movlb	0	; () banked
  6004  001D24  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6005  001D26  EC30  F028         	call	_oled_putString	;wreg free
  6006                           
  6007                           ;MOTEapp.c: 240: oled_putString(moteApp_getLightValue(), 6, 1);
  6008  001D2A  ECEC  F029         	call	_moteApp_getLightValue	;wreg free
  6009  001D2E  C0BC  F0C0         	movff	?_moteApp_getLightValue,oled_putString@string
  6010  001D32  C0BD  F0C1         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  6011  001D36  0E06               	movlw	6
  6012  001D38  0100               	movlb	0	; () banked
  6013  001D3A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6014  001D3C  0E01               	movlw	1
  6015  001D3E  0100               	movlb	0	; () banked
  6016  001D40  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6017  001D42  EC30  F028         	call	_oled_putString	;wreg free
  6018                           
  6019                           ;MOTEapp.c: 241: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6020  001D46  EC33  F02B         	call	_moteApp_getTempValue	;wreg free
  6021  001D4A  C0B2  F0C0         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6022  001D4E  C0B3  F0C1         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6023  001D52  ECE4  F024         	call	_moteApp_convertSensorValue	;wreg free
  6024  001D56  C0C0  F07C         	movff	?_moteApp_convertSensorValue,_temperature
  6025  001D5A  C0C1  F07D         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6026                           
  6027                           ;MOTEapp.c: 242: temperature = ADC_TempConversion(temperature);
  6028  001D5E  0100               	movlb	0	; () banked
  6029  001D60  517C               	movf	_temperature& (0+255),w,b
  6030  001D62  EC00  F01D         	call	_ADC_TempConversion
  6031  001D66  0100               	movlb	0	; () banked
  6032  001D68  6FF5               	movwf	??_moteHandler& (0+255),b
  6033  001D6A  0100               	movlb	0	; () banked
  6034  001D6C  51F5               	movf	??_moteHandler& (0+255),w,b
  6035  001D6E  0100               	movlb	0	; () banked
  6036  001D70  6F7C               	movwf	_temperature& (0+255),b
  6037  001D72  6B7D               	clrf	(_temperature+1)& (0+255),b
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;MOTEapp.c: 243: oled_putint8(temperature, 6, 2);
  6041  001D74  0E06               	movlw	6
  6042  001D76  0100               	movlb	0	; () banked
  6043  001D78  6FC5               	movwf	oled_putint8@station_dot& (0+255),b
  6044  001D7A  0E02               	movlw	2
  6045  001D7C  0100               	movlb	0	; () banked
  6046  001D7E  6FC6               	movwf	oled_putint8@start_page& (0+255),b
  6047  001D80  0100               	movlb	0	; () banked
  6048  001D82  517C               	movf	_temperature& (0+255),w,b
  6049  001D84  EC17  F020         	call	_oled_putint8
  6050                           
  6051                           ;MOTEapp.c: 244: m10SecTicker = 0;
  6052  001D88  0E00               	movlw	0
  6053  001D8A  0100               	movlb	0	; () banked
  6054  001D8C  6F79               	movwf	(_m10SecTicker+1)& (0+255),b
  6055  001D8E  0E00               	movlw	0
  6056  001D90  6F78               	movwf	_m10SecTicker& (0+255),b
  6057                           
  6058                           ; BSR set to: 0
  6059  001D92  D000               	goto	l13561
  6060  001D94                     l13561:
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;MOTEapp.c: 245: }
  6064                           ;MOTEapp.c: 246: }
  6065                           ;MOTEapp.c: 248: if(secTicker)
  6066  001D94  0100               	movlb	0	; () banked
  6067  001D96  51A6               	movf	_secTicker& (0+255),w,b
  6068  001D98  B4D8               	btfsc	status,2,c
  6069  001D9A  D08B               	goto	l13599
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;MOTEapp.c: 249: {
  6073                           ;MOTEapp.c: 250: if ((secTicker >= 10) && (menuTimeout))
  6074  001D9C  0E09               	movlw	9
  6075  001D9E  0100               	movlb	0	; () banked
  6076  001DA0  65A6               	cpfsgt	_secTicker& (0+255),b
  6077  001DA2  D087               	goto	l13599
  6078                           
  6079                           ; BSR set to: 0
  6080  001DA4  0100               	movlb	0	; () banked
  6081  001DA6  51FA               	movf	_menuTimeout& (0+255),w,b
  6082  001DA8  B4D8               	btfsc	status,2,c
  6083  001DAA  D083               	goto	l13599
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;MOTEapp.c: 251: {
  6087                           ;MOTEapp.c: 252: gotoSleep = 1;
  6088  001DAC  0E01               	movlw	1
  6089  001DAE  0102               	movlb	2	; () banked
  6090  001DB0  6FA0               	movwf	moteHandler@gotoSleep& (0+255),b
  6091                           
  6092                           ;MOTEapp.c: 253: secTicker = 0;
  6093  001DB2  0E00               	movlw	0
  6094  001DB4  0100               	movlb	0	; () banked
  6095  001DB6  6FA6               	movwf	_secTicker& (0+255),b
  6096                           
  6097                           ; BSR set to: 0
  6098                           ;MOTEapp.c: 254: }
  6099                           ;MOTEapp.c: 255: }
  6100                           ;MOTEapp.c: 257: switch(moteState)
  6101                           
  6102                           ; BSR set to: 0
  6103  001DB8  D07C               	goto	l13599
  6104  001DBA  D7FF               	goto	l386
  6105                           
  6106                           ;MOTEapp.c: 261: break;
  6107  001DBC  D088               	goto	l13601
  6108  001DBE                     l13569:
  6109                           
  6110                           ;MOTEapp.c: 263: oled_clear();
  6111  001DBE  ECB6  F02E         	call	_oled_clear	;wreg free
  6112                           
  6113                           ;MOTEapp.c: 264: oled_putString("MOTE Mode",1,0);
  6114  001DC2  0ED4               	movlw	low STR_24
  6115  001DC4  0100               	movlb	0	; () banked
  6116  001DC6  6FC0               	movwf	oled_putString@string& (0+255),b
  6117  001DC8  0E7E               	movlw	high STR_24
  6118  001DCA  0100               	movlb	0	; () banked
  6119  001DCC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6120  001DCE  0E01               	movlw	1
  6121  001DD0  0100               	movlb	0	; () banked
  6122  001DD2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6123  001DD4  0E00               	movlw	0
  6124  001DD6  0100               	movlb	0	; () banked
  6125  001DD8  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6126  001DDA  EC30  F028         	call	_oled_putString	;wreg free
  6127                           
  6128                           ;MOTEapp.c: 265: oled_putString("Starting",2,1);
  6129  001DDE  0E34               	movlw	low STR_25
  6130  001DE0  0100               	movlb	0	; () banked
  6131  001DE2  6FC0               	movwf	oled_putString@string& (0+255),b
  6132  001DE4  0E7F               	movlw	high STR_25
  6133  001DE6  0100               	movlb	0	; () banked
  6134  001DE8  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6135  001DEA  0E02               	movlw	2
  6136  001DEC  0100               	movlb	0	; () banked
  6137  001DEE  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6138  001DF0  0E01               	movlw	1
  6139  001DF2  0100               	movlb	0	; () banked
  6140  001DF4  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6141  001DF6  EC30  F028         	call	_oled_putString	;wreg free
  6142                           
  6143                           ;MOTEapp.c: 266: oled_putString("ReRun PwrTst<S2>",0,3);
  6144  001DFA  0ECC               	movlw	low STR_26
  6145  001DFC  0100               	movlb	0	; () banked
  6146  001DFE  6FC0               	movwf	oled_putString@string& (0+255),b
  6147  001E00  0E7B               	movlw	high STR_26
  6148  001E02  0100               	movlb	0	; () banked
  6149  001E04  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6150  001E06  0E00               	movlw	0
  6151  001E08  0100               	movlb	0	; () banked
  6152  001E0A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6153  001E0C  0E03               	movlw	3
  6154  001E0E  0100               	movlb	0	; () banked
  6155  001E10  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6156  001E12  EC30  F028         	call	_oled_putString	;wreg free
  6157                           
  6158                           ;MOTEapp.c: 267: activeState = moteStartup;
  6159  001E16  0E00               	movlw	0
  6160  001E18  0100               	movlb	0	; () banked
  6161  001E1A  6F8C               	movwf	_activeState& (0+255),b
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;MOTEapp.c: 268: moteState = MOTE_JOINING;
  6165  001E1C  0E02               	movlw	2
  6166  001E1E  D03B               	goto	L2
  6167  001E20                     l13581:
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;MOTEapp.c: 271: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  6171  001E20  C2A1  F0C5         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  6172  001E24  C2A2  F0C6         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  6173  001E28  0102               	movlb	2	; () banked
  6174  001E2A  51A4               	movf	moteHandler@readMessage& (0+255),w,b
  6175  001E2C  EC9E  F009         	call	_moteJoiningProcess
  6176  001E30  0900               	iorlw	0
  6177  001E32  B4D8               	btfsc	status,2,c
  6178  001E34  D04C               	goto	l13601
  6179                           
  6180                           ;MOTEapp.c: 272: {
  6181                           ;MOTEapp.c: 273: oled_clear();
  6182  001E36  ECB6  F02E         	call	_oled_clear	;wreg free
  6183                           
  6184                           ;MOTEapp.c: 274: oled_putString("Mobile Mote -App",0,0);
  6185  001E3A  0E21               	movlw	low STR_27
  6186  001E3C  0100               	movlb	0	; () banked
  6187  001E3E  6FC0               	movwf	oled_putString@string& (0+255),b
  6188  001E40  0E7C               	movlw	high STR_27
  6189  001E42  0100               	movlb	0	; () banked
  6190  001E44  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6191  001E46  0E00               	movlw	0
  6192  001E48  0100               	movlb	0	; () banked
  6193  001E4A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6194  001E4C  0E00               	movlw	0
  6195  001E4E  0100               	movlb	0	; () banked
  6196  001E50  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6197  001E52  EC30  F028         	call	_oled_putString	;wreg free
  6198                           
  6199                           ;MOTEapp.c: 275: oled_putString("Navigate  Select", 0,2);
  6200  001E56  0E32               	movlw	low STR_28
  6201  001E58  0100               	movlb	0	; () banked
  6202  001E5A  6FC0               	movwf	oled_putString@string& (0+255),b
  6203  001E5C  0E7C               	movlw	high STR_28
  6204  001E5E  0100               	movlb	0	; () banked
  6205  001E60  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6206  001E62  0E00               	movlw	0
  6207  001E64  0100               	movlb	0	; () banked
  6208  001E66  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6209  001E68  0E02               	movlw	2
  6210  001E6A  0100               	movlb	0	; () banked
  6211  001E6C  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6212  001E6E  EC30  F028         	call	_oled_putString	;wreg free
  6213                           
  6214                           ;MOTEapp.c: 276: oled_putString(" (S2)      (S3) ", 0,3);
  6215  001E72  0E55               	movlw	low STR_29
  6216  001E74  0100               	movlb	0	; () banked
  6217  001E76  6FC0               	movwf	oled_putString@string& (0+255),b
  6218  001E78  0E7B               	movlw	high STR_29
  6219  001E7A  0100               	movlb	0	; () banked
  6220  001E7C  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6221  001E7E  0E00               	movlw	0
  6222  001E80  0100               	movlb	0	; () banked
  6223  001E82  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6224  001E84  0E03               	movlw	3
  6225  001E86  0100               	movlb	0	; () banked
  6226  001E88  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6227  001E8A  EC30  F028         	call	_oled_putString	;wreg free
  6228                           
  6229                           ;MOTEapp.c: 277: runningState = runningEnter;
  6230  001E8E  0E00               	movlw	0
  6231  001E90  0100               	movlb	0	; () banked
  6232  001E92  6FA5               	movwf	_runningState& (0+255),b
  6233                           
  6234                           ; BSR set to: 0
  6235                           ;MOTEapp.c: 278: moteState = MOTE_RUNNING;
  6236  001E94  0E03               	movlw	3
  6237  001E96                     L2:
  6238  001E96  0100               	movlb	0	; () banked
  6239  001E98  6FFB               	movwf	_moteState& (0+255),b
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;MOTEapp.c: 279: }
  6243                           ;MOTEapp.c: 280: break;
  6244  001E9A  D019               	goto	l13601
  6245  001E9C                     l13595:
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;MOTEapp.c: 282: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  6249  001E9C  C2A2  F0E9         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  6250  001EA0  C2A4  F0EA         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  6251  001EA4  C2A0  F0EB         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  6252  001EA8  0102               	movlb	2	; () banked
  6253  001EAA  51A1               	movf	moteHandler@gotoNextState& (0+255),w,b
  6254  001EAC  EC64  F000         	call	_moteRunningProcess
  6255                           
  6256                           ;MOTEapp.c: 287: }
  6257                           
  6258                           ;MOTEapp.c: 286: break;
  6259                           
  6260                           ;MOTEapp.c: 284: case MOTE_SWAP:
  6261                           
  6262                           ;MOTEapp.c: 283: break;
  6263  001EB0  D00E               	goto	l13601
  6264  001EB2                     l13599:
  6265  001EB2  0100               	movlb	0	; () banked
  6266  001EB4  51FB               	movf	_moteState& (0+255),w,b
  6267                           
  6268                           ; Switch size 1, requested type "space"
  6269                           ; Number of cases is 4, Range of values is 1 to 4
  6270                           ; switch strategies available:
  6271                           ; Name         Instructions Cycles
  6272                           ; simple_byte           13     7 (average)
  6273                           ;	Chosen strategy is simple_byte
  6274  001EB6  0A01               	xorlw	1	; case 1
  6275  001EB8  B4D8               	btfsc	status,2,c
  6276  001EBA  D781               	goto	l13569
  6277  001EBC  0A03               	xorlw	3	; case 2
  6278  001EBE  B4D8               	btfsc	status,2,c
  6279  001EC0  D7AF               	goto	l13581
  6280  001EC2  0A01               	xorlw	1	; case 3
  6281  001EC4  B4D8               	btfsc	status,2,c
  6282  001EC6  D7EA               	goto	l13595
  6283  001EC8  0A07               	xorlw	7	; case 4
  6284  001ECA  A4D8               	btfss	status,2,c
  6285  001ECC  D776               	goto	l386
  6286  001ECE                     l13601:
  6287                           
  6288                           ;MOTEapp.c: 288: return moteState;
  6289  001ECE  0100               	movlb	0	; () banked
  6290  001ED0  51FB               	movf	_moteState& (0+255),w,b
  6291  001ED2  0012               	return	
  6292                           
  6293                           ; BSR set to: 0
  6294                           
  6295                           ; BSR set to: 0
  6296  001ED4  0012               	return		;funcret
  6297  001ED6                     __end_of_moteHandler:
  6298                           	opt stack 0
  6299                           tblptru	equ	0xFF8
  6300                           tblptrh	equ	0xFF7
  6301                           tblptrl	equ	0xFF6
  6302                           tablat	equ	0xFF5
  6303                           intcon	equ	0xFF2
  6304                           postinc0	equ	0xFEE
  6305                           wreg	equ	0xFE8
  6306                           postdec1	equ	0xFE5
  6307                           fsr1l	equ	0xFE1
  6308                           status	equ	0xFD8
  6309                           
  6310 ;; *************** function _moteRunningProcess *****************
  6311 ;; Defined at:
  6312 ;;		line 487 in file "../Includes/Board/MOTEapp.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;  changeStates    1    wreg     unsigned char 
  6315 ;;  selectButton    1   58[BANK0 ] unsigned char 
  6316 ;;  messageReady    1   59[BANK0 ] unsigned char 
  6317 ;;  sleepEvent      1   60[BANK0 ] unsigned char 
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;  changeStates    1   69[BANK0 ] unsigned char 
  6320 ;;  counter         1   67[BANK0 ] unsigned char 
  6321 ;;  bufferReadPo    1   68[BANK0 ] unsigned char 
  6322 ;;  sizeOfUpdate    1   66[BANK0 ] unsigned char 
  6323 ;;  sizeOfUpdate    1   65[BANK0 ] unsigned char 
  6324 ;;  readByte        1   64[BANK0 ] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      enum E7814
  6327 ;; Registers used:
  6328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6334 ;;      Params:         0       3       0       0       0       0       0       0       0
  6335 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6336 ;;      Temps:          0       3       0       0       0       0       0       0       0
  6337 ;;      Totals:         0      12       0       0       0       0       0       0       0
  6338 ;;Total ram usage:       12 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:   18
  6341 ;; This function calls:
  6342 ;;		MOTEapp@sendCommand
  6343 ;;		_ADC_TempConversion
  6344 ;;		_MOTEapp_SetDataRateSetting
  6345 ;;		_TMR2_ReadTimer
  6346 ;;		_moteApp_GoToSleep
  6347 ;;		_moteApp_add8bToDataBuffer
  6348 ;;		_moteApp_addToDataBuffer
  6349 ;;		_moteApp_clearBuffers
  6350 ;;		_moteApp_convertSensorValue
  6351 ;;		_moteApp_delayms
  6352 ;;		_moteApp_getLightString
  6353 ;;		_moteApp_getLightValue
  6354 ;;		_moteApp_getTempValue
  6355 ;;		_moteApp_lightStringSize
  6356 ;;		_moteApp_setSensorsInput
  6357 ;;		_oled_clear
  6358 ;;		_oled_putString
  6359 ;;		_oled_putUint8
  6360 ;;		_oled_putint8
  6361 ;;		_strcmp
  6362 ;;		_strncmp
  6363 ;; This function is called by:
  6364 ;;		_moteHandler
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text10
  6369  0000C8                     __ptext10:
  6370                           	opt stack 0
  6371  0000C8                     _moteRunningProcess:
  6372                           	opt stack 11
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;incstack = 0
  6376                           ;moteRunningProcess@changeStates stored from wreg
  6377  0000C8  0100               	movlb	0	; () banked
  6378  0000CA  6FF4               	movwf	moteRunningProcess@changeStates& (0+255),b
  6379                           
  6380                           ; BSR set to: 0
  6381                           ;MOTEapp.c: 489: uint8_t readByte = 0;
  6382  0000CC  0E00               	movlw	0
  6383  0000CE  0100               	movlb	0	; () banked
  6384  0000D0  6FEF               	movwf	moteRunningProcess@readByte& (0+255),b
  6385                           
  6386                           ; BSR set to: 0
  6387                           ;MOTEapp.c: 491: if ((sleepEvent) && (periodicState))
  6388  0000D2  0100               	movlb	0	; () banked
  6389  0000D4  51EB               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  6390  0000D6  0100               	movlb	0	; () banked
  6391  0000D8  B4D8               	btfsc	status,2,c
  6392  0000DA  EF6E  F009         	goto	l13215
  6393                           
  6394                           ; BSR set to: 0
  6395  0000DE  0100               	movlb	0	; () banked
  6396  0000E0  51FC               	movf	_periodicState& (0+255),w,b
  6397  0000E2  B4D8               	btfsc	status,2,c
  6398  0000E4  EF6E  F009         	goto	l13215
  6399                           
  6400                           ; BSR set to: 0
  6401                           ;MOTEapp.c: 492: {
  6402                           ;MOTEapp.c: 493: if (sleepTicker >= periodicTimerValue)
  6403  0000E8  0100               	movlb	0	; () banked
  6404  0000EA  51FD               	movf	_periodicTimerValue& (0+255),w,b
  6405  0000EC  0100               	movlb	0	; () banked
  6406  0000EE  5DA7               	subwf	_sleepTicker& (0+255),w,b
  6407  0000F0  A0D8               	btfss	status,0,c
  6408  0000F2  D0DF               	goto	l12747
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;MOTEapp.c: 494: {
  6412                           ;MOTEapp.c: 496: moteApp_clearBuffers();
  6413  0000F4  EC1B  F022         	call	_moteApp_clearBuffers	;wreg free
  6414                           
  6415                           ;MOTEapp.c: 499: light = 0;
  6416  0000F8  0E00               	movlw	0
  6417  0000FA  0100               	movlb	0	; () banked
  6418  0000FC  6F77               	movwf	(_light+1)& (0+255),b
  6419  0000FE  0E00               	movlw	0
  6420  000100  6F76               	movwf	_light& (0+255),b
  6421                           
  6422                           ; BSR set to: 0
  6423                           ;MOTEapp.c: 500: temperature = 0;
  6424  000102  0E00               	movlw	0
  6425  000104  0100               	movlb	0	; () banked
  6426  000106  6F7D               	movwf	(_temperature+1)& (0+255),b
  6427  000108  0E00               	movlw	0
  6428  00010A  6F7C               	movwf	_temperature& (0+255),b
  6429                           
  6430                           ; BSR set to: 0
  6431                           ;MOTEapp.c: 501: __nop();
  6432  00010C  F000               	nop	
  6433                           
  6434                           ;MOTEapp.c: 503: moteApp_setSensorsInput();
  6435  00010E  ECD1  F025         	call	_moteApp_setSensorsInput	;wreg free
  6436                           
  6437                           ;MOTEapp.c: 504: uint8_t sizeOfUpdate = 0;
  6438  000112  0E00               	movlw	0
  6439  000114  0100               	movlb	0	; () banked
  6440  000116  6FF0               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;MOTEapp.c: 505: light = moteApp_convertSensorValue(moteApp_getLightValue());
  6444  000118  ECEC  F029         	call	_moteApp_getLightValue	;wreg free
  6445  00011C  C0BC  F0C0         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  6446  000120  C0BD  F0C1         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  6447  000124  ECE4  F024         	call	_moteApp_convertSensorValue	;wreg free
  6448  000128  C0C0  F076         	movff	?_moteApp_convertSensorValue,_light
  6449  00012C  C0C1  F077         	movff	?_moteApp_convertSensorValue+1,_light+1
  6450                           
  6451                           ;MOTEapp.c: 506: oled_putString(moteApp_getLightString(), 6, 1);
  6452  000130  EC5C  F02F         	call	_moteApp_getLightString	;wreg free
  6453  000134  C0AF  F0C0         	movff	?_moteApp_getLightString,oled_putString@string
  6454  000138  C0B0  F0C1         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6455  00013C  0E06               	movlw	6
  6456  00013E  0100               	movlb	0	; () banked
  6457  000140  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6458  000142  0E01               	movlw	1
  6459  000144  0100               	movlb	0	; () banked
  6460  000146  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6461  000148  EC30  F028         	call	_oled_putString	;wreg free
  6462                           
  6463                           ;MOTEapp.c: 507: sizeOfUpdate = moteApp_addToDataBuffer(light, 4);
  6464  00014C  C076  F0EC         	movff	_light,??_moteRunningProcess
  6465  000150  C077  F0ED         	movff	_light+1,??_moteRunningProcess+1
  6466  000154  0100               	movlb	0	; () banked
  6467  000156  6BEE               	clrf	(??_moteRunningProcess+2)& (0+255),b
  6468  000158  C0EC  F0AF         	movff	??_moteRunningProcess,moteApp_addToDataBuffer@string
  6469  00015C  C0ED  F0B0         	movff	??_moteRunningProcess+1,moteApp_addToDataBuffer@string+1
  6470  000160  C0EE  F0B1         	movff	??_moteRunningProcess+2,moteApp_addToDataBuffer@string+2
  6471  000164  0E04               	movlw	4
  6472  000166  0100               	movlb	0	; () banked
  6473  000168  6FB2               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  6474  00016A  EC30  F027         	call	_moteApp_addToDataBuffer	;wreg free
  6475  00016E  0100               	movlb	0	; () banked
  6476  000170  6FF0               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;MOTEapp.c: 509: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6480  000172  EC33  F02B         	call	_moteApp_getTempValue	;wreg free
  6481  000176  C0B2  F0C0         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6482  00017A  C0B3  F0C1         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6483  00017E  ECE4  F024         	call	_moteApp_convertSensorValue	;wreg free
  6484  000182  C0C0  F07C         	movff	?_moteApp_convertSensorValue,_temperature
  6485  000186  C0C1  F07D         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6486                           
  6487                           ;MOTEapp.c: 510: temperature = ADC_TempConversion(temperature);
  6488  00018A  0100               	movlb	0	; () banked
  6489  00018C  517C               	movf	_temperature& (0+255),w,b
  6490  00018E  EC00  F01D         	call	_ADC_TempConversion
  6491  000192  0100               	movlb	0	; () banked
  6492  000194  6FEC               	movwf	??_moteRunningProcess& (0+255),b
  6493  000196  0100               	movlb	0	; () banked
  6494  000198  51EC               	movf	??_moteRunningProcess& (0+255),w,b
  6495  00019A  0100               	movlb	0	; () banked
  6496  00019C  6F7C               	movwf	_temperature& (0+255),b
  6497  00019E  6B7D               	clrf	(_temperature+1)& (0+255),b
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;MOTEapp.c: 511: moteApp_add8bToDataBuffer(13, 4 + moteApp_lightStringSize() + 1);
  6501  0001A0  EC8B  F02F         	call	_moteApp_lightStringSize	;wreg free
  6502  0001A4  0F05               	addlw	5
  6503  0001A6  0100               	movlb	0	; () banked
  6504  0001A8  6FB5               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6505  0001AA  0E0D               	movlw	13
  6506  0001AC  ECCA  F01E         	call	_moteApp_add8bToDataBuffer
  6507                           
  6508                           ;MOTEapp.c: 514: sleepTicker = 0;
  6509  0001B0  0E00               	movlw	0
  6510  0001B2  0100               	movlb	0	; () banked
  6511  0001B4  6FA7               	movwf	_sleepTicker& (0+255),b
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;MOTEapp.c: 515: oled_clear();
  6515  0001B6  ECB6  F02E         	call	_oled_clear	;wreg free
  6516                           
  6517                           ;MOTEapp.c: 516: oled_putString("Send Periodic Tx",0,0);
  6518  0001BA  0E54               	movlw	low STR_71
  6519  0001BC  0100               	movlb	0	; () banked
  6520  0001BE  6FC0               	movwf	oled_putString@string& (0+255),b
  6521  0001C0  0E7C               	movlw	high STR_71
  6522  0001C2  0100               	movlb	0	; () banked
  6523  0001C4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6524  0001C6  0E00               	movlw	0
  6525  0001C8  0100               	movlb	0	; () banked
  6526  0001CA  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6527  0001CC  0E00               	movlw	0
  6528  0001CE  0100               	movlb	0	; () banked
  6529  0001D0  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6530  0001D2  EC30  F028         	call	_oled_putString	;wreg free
  6531                           
  6532                           ;MOTEapp.c: 517: oled_putString("On Port #: ",0,1);
  6533  0001D6  0E2B               	movlw	low STR_72
  6534  0001D8  0100               	movlb	0	; () banked
  6535  0001DA  6FC0               	movwf	oled_putString@string& (0+255),b
  6536  0001DC  0E7E               	movlw	high STR_72
  6537  0001DE  0100               	movlb	0	; () banked
  6538  0001E0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6539  0001E2  0E00               	movlw	0
  6540  0001E4  0100               	movlb	0	; () banked
  6541  0001E6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6542  0001E8  0E01               	movlw	1
  6543  0001EA  0100               	movlb	0	; () banked
  6544  0001EC  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6545  0001EE  EC30  F028         	call	_oled_putString	;wreg free
  6546                           
  6547                           ;MOTEapp.c: 518: oled_putString("L:       T: ",0,2);
  6548  0001F2  0E69               	movlw	low STR_73
  6549  0001F4  0100               	movlb	0	; () banked
  6550  0001F6  6FC0               	movwf	oled_putString@string& (0+255),b
  6551  0001F8  0E7D               	movlw	high STR_73
  6552  0001FA  0100               	movlb	0	; () banked
  6553  0001FC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6554  0001FE  0E00               	movlw	0
  6555  000200  0100               	movlb	0	; () banked
  6556  000202  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6557  000204  0E02               	movlw	2
  6558  000206  0100               	movlb	0	; () banked
  6559  000208  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6560  00020A  EC30  F028         	call	_oled_putString	;wreg free
  6561                           
  6562                           ;MOTEapp.c: 519: oled_putString(moteApp_getLightString(), 3, 2);
  6563  00020E  EC5C  F02F         	call	_moteApp_getLightString	;wreg free
  6564  000212  C0AF  F0C0         	movff	?_moteApp_getLightString,oled_putString@string
  6565  000216  C0B0  F0C1         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6566  00021A  0E03               	movlw	3
  6567  00021C  0100               	movlb	0	; () banked
  6568  00021E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6569  000220  0E02               	movlw	2
  6570  000222  0100               	movlb	0	; () banked
  6571  000224  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6572  000226  EC30  F028         	call	_oled_putString	;wreg free
  6573                           
  6574                           ;MOTEapp.c: 520: oled_putint8(temperature,11,2);
  6575  00022A  0E0B               	movlw	11
  6576  00022C  0100               	movlb	0	; () banked
  6577  00022E  6FC5               	movwf	oled_putint8@station_dot& (0+255),b
  6578  000230  0E02               	movlw	2
  6579  000232  0100               	movlb	0	; () banked
  6580  000234  6FC6               	movwf	oled_putint8@start_page& (0+255),b
  6581  000236  0100               	movlb	0	; () banked
  6582  000238  517C               	movf	_temperature& (0+255),w,b
  6583  00023A  EC17  F020         	call	_oled_putint8
  6584                           
  6585                           ;MOTEapp.c: 522: randomPortNum = TMR2_ReadTimer();
  6586  00023E  EC6B  F02F         	call	_TMR2_ReadTimer	;wreg free
  6587  000242  0100               	movlb	0	; () banked
  6588  000244  6FA1               	movwf	_randomPortNum& (0+255),b
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;MOTEapp.c: 524: if (!randomPortNum)
  6592  000246  0100               	movlb	0	; () banked
  6593  000248  51A1               	movf	_randomPortNum& (0+255),w,b
  6594  00024A  0100               	movlb	0	; () banked
  6595  00024C  A4D8               	btfss	status,2,c
  6596  00024E  D002               	goto	l12729
  6597                           
  6598                           ; BSR set to: 0
  6599                           ;MOTEapp.c: 525: randomPortNum = 5;
  6600  000250  0E05               	movlw	5
  6601  000252  D007               	goto	L3
  6602  000254                     l12729:
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;MOTEapp.c: 526: else if (randomPortNum > 223)
  6606  000254  0EDF               	movlw	223
  6607  000256  0100               	movlb	0	; () banked
  6608  000258  65A1               	cpfsgt	_randomPortNum& (0+255),b
  6609  00025A  D006               	goto	l12733
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;MOTEapp.c: 527: randomPortNum = randomPortNum - 50;
  6613  00025C  0100               	movlb	0	; () banked
  6614  00025E  51A1               	movf	_randomPortNum& (0+255),w,b
  6615  000260  0FCE               	addlw	206
  6616  000262                     L3:
  6617  000262  0100               	movlb	0	; () banked
  6618  000264  6FA1               	movwf	_randomPortNum& (0+255),b
  6619                           
  6620                           ; BSR set to: 0
  6621  000266  D000               	goto	l12733
  6622  000268                     l12733:
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;MOTEapp.c: 529: oled_putUint8(randomPortNum,10,1);
  6626  000268  0E0A               	movlw	10
  6627  00026A  0100               	movlb	0	; () banked
  6628  00026C  6FC5               	movwf	oled_putUint8@station_dot& (0+255),b
  6629  00026E  0E01               	movlw	1
  6630  000270  0100               	movlb	0	; () banked
  6631  000272  6FC6               	movwf	oled_putUint8@start_page& (0+255),b
  6632  000274  0100               	movlb	0	; () banked
  6633  000276  51A1               	movf	_randomPortNum& (0+255),w,b
  6634  000278  EC3D  F024         	call	_oled_putUint8
  6635                           
  6636                           ;MOTEapp.c: 531: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6637  00027C  0E00               	movlw	0
  6638  00027E  0100               	movlb	0	; () banked
  6639  000280  6FB5               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6640  000282  0100               	movlb	0	; () banked
  6641  000284  51A1               	movf	_randomPortNum& (0+255),w,b
  6642  000286  ECCA  F01E         	call	_moteApp_add8bToDataBuffer
  6643                           
  6644                           ;MOTEapp.c: 532: dataBuffer[3] = 0x20;
  6645  00028A  0E20               	movlw	32
  6646  00028C  0101               	movlb	1	; () banked
  6647  00028E  6F13               	movwf	(_dataBuffer+3)& (0+255),b
  6648                           
  6649                           ; BSR set to: 1
  6650                           ;MOTEapp.c: 533: __nop();
  6651  000290  F000               	nop	
  6652                           
  6653                           ;MOTEapp.c: 535: sendCommand("mac tx uncnf 56 68656c6c");
  6654  000292  0E60               	movlw	low STR_74
  6655  000294  0100               	movlb	0	; () banked
  6656  000296  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
  6657  000298  0E7A               	movlw	high STR_74
  6658  00029A  0100               	movlb	0	; () banked
  6659  00029C  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
  6660  00029E  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
  6661                           
  6662                           ;MOTEapp.c: 536: secTicker = 10 - (10 / 3);
  6663  0002A2  0E07               	movlw	7
  6664  0002A4  0100               	movlb	0	; () banked
  6665  0002A6  6FA6               	movwf	_secTicker& (0+255),b
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;MOTEapp.c: 537: runningState = runningUplinkTransmit;
  6669  0002A8  0E08               	movlw	8
  6670  0002AA  0100               	movlb	0	; () banked
  6671  0002AC  6FA5               	movwf	_runningState& (0+255),b
  6672                           
  6673                           ;MOTEapp.c: 538: }
  6674  0002AE  EF6E  F009         	goto	l13215
  6675  0002B2                     l12747:
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;MOTEapp.c: 539: else
  6679                           ;MOTEapp.c: 540: {
  6680                           ;MOTEapp.c: 541: if (menuTimeout)
  6681  0002B2  0100               	movlb	0	; () banked
  6682  0002B4  51FA               	movf	_menuTimeout& (0+255),w,b
  6683  0002B6  B4D8               	btfsc	status,2,c
  6684  0002B8  D00A               	goto	l12755
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;MOTEapp.c: 542: {
  6688                           ;MOTEapp.c: 543: sleepTicker++;
  6689  0002BA  0100               	movlb	0	; () banked
  6690  0002BC  2BA7               	incf	_sleepTicker& (0+255),f,b
  6691                           
  6692                           ; BSR set to: 0
  6693                           ;MOTEapp.c: 544: runningState = runningSleep;
  6694  0002BE  0E0F               	movlw	15
  6695  0002C0  0100               	movlb	0	; () banked
  6696  0002C2  6FA5               	movwf	_runningState& (0+255),b
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;MOTEapp.c: 545: selectButton = 1;
  6700  0002C4  0E01               	movlw	1
  6701  0002C6  0100               	movlb	0	; () banked
  6702  0002C8  6FE9               	movwf	moteRunningProcess@selectButton& (0+255),b
  6703                           
  6704                           ;MOTEapp.c: 546: } else {
  6705  0002CA  EF6E  F009         	goto	l13215
  6706  0002CE                     l12755:
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;MOTEapp.c: 547: sleepTicker = 0;
  6710  0002CE  0E00               	movlw	0
  6711  0002D0  0100               	movlb	0	; () banked
  6712  0002D2  6FA7               	movwf	_sleepTicker& (0+255),b
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;MOTEapp.c: 548: }
  6716                           ;MOTEapp.c: 549: }
  6717                           ;MOTEapp.c: 550: }
  6718                           ;MOTEapp.c: 553: switch(runningState)
  6719                           
  6720                           ; BSR set to: 0
  6721                           
  6722                           ; BSR set to: 0
  6723  0002D4  EF6E  F009         	goto	l13215
  6724  0002D8                     
  6725                           ; BSR set to: 0
  6726  0002D8  D7FF               	goto	l476
  6727                           
  6728                           ; BSR set to: 0
  6729                           ;MOTEapp.c: 557: break;
  6730  0002DA  0012               	return	
  6731  0002DC                     l12757:
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;MOTEapp.c: 559: if ( (changeStates) || (selectButton) )
  6735  0002DC  0100               	movlb	0	; () banked
  6736  0002DE  51F4               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6737  0002E0  0100               	movlb	0	; () banked
  6738  0002E2  A4D8               	btfss	status,2,c
  6739  0002E4  D005               	goto	l12761
  6740                           
  6741                           ; BSR set to: 0
  6742  0002E6  0100               	movlb	0	; () banked
  6743  0002E8  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6744  0002EA  0100               	movlb	0	; () banked
  6745  0002EC  B4D8               	btfsc	status,2,c
  6746  0002EE  0012               	return	
  6747  0002F0                     l12761:
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;MOTEapp.c: 560: {
  6751                           ;MOTEapp.c: 561: oled_clear();
  6752  0002F0  ECB6  F02E         	call	_oled_clear	;wreg free
  6753                           
  6754                           ;MOTEapp.c: 562: oled_putString("  Issue Uplink  ",0,0);
  6755  0002F4  0E44               	movlw	low STR_75
  6756  0002F6  0100               	movlb	0	; () banked
  6757  0002F8  6FC0               	movwf	oled_putString@string& (0+255),b
  6758  0002FA  0E7B               	movlw	high STR_75
  6759  0002FC  0100               	movlb	0	; () banked
  6760  0002FE  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6761  000300  0E00               	movlw	0
  6762  000302  0100               	movlb	0	; () banked
  6763  000304  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6764  000306  0E00               	movlw	0
  6765  000308  0100               	movlb	0	; () banked
  6766  00030A  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6767  00030C  EC30  F028         	call	_oled_putString	;wreg free
  6768                           
  6769                           ;MOTEapp.c: 563: oled_putString(" LoRaWAN Packet ",0,1);
  6770  000310  0EAA               	movlw	low STR_76
  6771  000312  0100               	movlb	0	; () banked
  6772  000314  6FC0               	movwf	oled_putString@string& (0+255),b
  6773  000316  0E7B               	movlw	high STR_76
  6774  000318  0100               	movlb	0	; () banked
  6775  00031A  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6776  00031C  0E00               	movlw	0
  6777  00031E  0100               	movlb	0	; () banked
  6778  000320  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6779  000322  0E01               	movlw	1
  6780  000324  0100               	movlb	0	; () banked
  6781  000326  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6782  000328  EC30  F028         	call	_oled_putString	;wreg free
  6783                           
  6784                           ;MOTEapp.c: 564: oled_putString("(NAV)    (SEL) ",0,3);
  6785  00032C  0EA6               	movlw	low STR_77
  6786  00032E  0100               	movlb	0	; () banked
  6787  000330  6FC0               	movwf	oled_putString@string& (0+255),b
  6788  000332  0E7C               	movlw	high STR_77
  6789  000334  0100               	movlb	0	; () banked
  6790  000336  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6791  000338  0E00               	movlw	0
  6792  00033A  0100               	movlb	0	; () banked
  6793  00033C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6794  00033E  0E03               	movlw	3
  6795  000340  0100               	movlb	0	; () banked
  6796  000342  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6797  000344  EC30  F028         	call	_oled_putString	;wreg free
  6798                           
  6799                           ;MOTEapp.c: 565: runningState = runningUplink;
  6800  000348  0E06               	movlw	6
  6801  00034A  0100               	movlb	0	; () banked
  6802  00034C  6FA5               	movwf	_runningState& (0+255),b
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;MOTEapp.c: 566: }
  6806                           ;MOTEapp.c: 567: break;
  6807  00034E  0012               	return	
  6808  000350                     l12771:
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;MOTEapp.c: 569: if (changeStates)
  6812  000350  0100               	movlb	0	; () banked
  6813  000352  51F4               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6814  000354  0100               	movlb	0	; () banked
  6815  000356  B4D8               	btfsc	status,2,c
  6816  000358  D030               	goto	l12783
  6817                           
  6818                           ; BSR set to: 0
  6819                           ;MOTEapp.c: 570: {
  6820                           ;MOTEapp.c: 571: oled_clear();
  6821  00035A  ECB6  F02E         	call	_oled_clear	;wreg free
  6822                           
  6823                           ;MOTEapp.c: 572: oled_putString(" View Downlink  ",0,0);
  6824  00035E  0E33               	movlw	low STR_78
  6825  000360  0100               	movlb	0	; () banked
  6826  000362  6FC0               	movwf	oled_putString@string& (0+255),b
  6827  000364  0E7B               	movlw	high STR_78
  6828  000366  0100               	movlb	0	; () banked
  6829  000368  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6830  00036A  0E00               	movlw	0
  6831  00036C  0100               	movlb	0	; () banked
  6832  00036E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6833  000370  0E00               	movlw	0
  6834  000372  0100               	movlb	0	; () banked
  6835  000374  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6836  000376  EC30  F028         	call	_oled_putString	;wreg free
  6837                           
  6838                           ;MOTEapp.c: 573: oled_putString("  Last Message  ",0,1);
  6839  00037A  0E22               	movlw	low STR_79
  6840  00037C  0100               	movlb	0	; () banked
  6841  00037E  6FC0               	movwf	oled_putString@string& (0+255),b
  6842  000380  0E7B               	movlw	high STR_79
  6843  000382  0100               	movlb	0	; () banked
  6844  000384  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6845  000386  0E00               	movlw	0
  6846  000388  0100               	movlb	0	; () banked
  6847  00038A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6848  00038C  0E01               	movlw	1
  6849  00038E  0100               	movlb	0	; () banked
  6850  000390  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6851  000392  EC30  F028         	call	_oled_putString	;wreg free
  6852                           
  6853                           ;MOTEapp.c: 574: oled_putString("(NAV)    (SEL) ",0,3);
  6854  000396  0EA6               	movlw	low STR_77
  6855  000398  0100               	movlb	0	; () banked
  6856  00039A  6FC0               	movwf	oled_putString@string& (0+255),b
  6857  00039C  0E7C               	movlw	high STR_77
  6858  00039E  0100               	movlb	0	; () banked
  6859  0003A0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6860  0003A2  0E00               	movlw	0
  6861  0003A4  0100               	movlb	0	; () banked
  6862  0003A6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6863  0003A8  0E03               	movlw	3
  6864  0003AA  0100               	movlb	0	; () banked
  6865  0003AC  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6866  0003AE  EC30  F028         	call	_oled_putString	;wreg free
  6867                           
  6868                           ;MOTEapp.c: 575: runningState = runningDownlink;
  6869  0003B2  0E0A               	movlw	10
  6870  0003B4  0100               	movlb	0	; () banked
  6871  0003B6  6FA5               	movwf	_runningState& (0+255),b
  6872                           
  6873                           ;MOTEapp.c: 576: }
  6874  0003B8  0012               	return	
  6875  0003BA                     l12783:
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;MOTEapp.c: 577: else if (selectButton)
  6879  0003BA  0100               	movlb	0	; () banked
  6880  0003BC  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6881  0003BE  0100               	movlb	0	; () banked
  6882  0003C0  B4D8               	btfsc	status,2,c
  6883  0003C2  0012               	return	
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;MOTEapp.c: 578: {
  6887                           ;MOTEapp.c: 579: sleepTicker = 0;
  6888  0003C4  0E00               	movlw	0
  6889  0003C6  0100               	movlb	0	; () banked
  6890  0003C8  6FA7               	movwf	_sleepTicker& (0+255),b
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;MOTEapp.c: 581: oled_clear();
  6894  0003CA  ECB6  F02E         	call	_oled_clear	;wreg free
  6895                           
  6896                           ;MOTEapp.c: 582: oled_putString("Uplink Pckt Type",0,0);
  6897  0003CE  0EFF               	movlw	low STR_81
  6898  0003D0  0100               	movlb	0	; () banked
  6899  0003D2  6FC0               	movwf	oled_putString@string& (0+255),b
  6900  0003D4  0E7B               	movlw	high STR_81
  6901  0003D6  0100               	movlb	0	; () banked
  6902  0003D8  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6903  0003DA  0E00               	movlw	0
  6904  0003DC  0100               	movlb	0	; () banked
  6905  0003DE  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6906  0003E0  0E00               	movlw	0
  6907  0003E2  0100               	movlb	0	; () banked
  6908  0003E4  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6909  0003E6  EC30  F028         	call	_oled_putString	;wreg free
  6910                           
  6911                           ;MOTEapp.c: 583: oled_putString("Throu Port# ",0,1);
  6912  0003EA  0E5C               	movlw	low STR_82
  6913  0003EC  0100               	movlb	0	; () banked
  6914  0003EE  6FC0               	movwf	oled_putString@string& (0+255),b
  6915  0003F0  0E7D               	movlw	high STR_82
  6916  0003F2  0100               	movlb	0	; () banked
  6917  0003F4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6918  0003F6  0E00               	movlw	0
  6919  0003F8  0100               	movlb	0	; () banked
  6920  0003FA  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6921  0003FC  0E01               	movlw	1
  6922  0003FE  0100               	movlb	0	; () banked
  6923  000400  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6924  000402  EC30  F028         	call	_oled_putString	;wreg free
  6925                           
  6926                           ;MOTEapp.c: 585: oled_putString("(UNCNF)    (CNF) ",0,3);
  6927  000406  0ECC               	movlw	low STR_83
  6928  000408  0100               	movlb	0	; () banked
  6929  00040A  6FC0               	movwf	oled_putString@string& (0+255),b
  6930  00040C  0E7A               	movlw	high STR_83
  6931  00040E  0100               	movlb	0	; () banked
  6932  000410  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6933  000412  0E00               	movlw	0
  6934  000414  0100               	movlb	0	; () banked
  6935  000416  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6936  000418  0E03               	movlw	3
  6937  00041A  0100               	movlb	0	; () banked
  6938  00041C  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6939  00041E  EC30  F028         	call	_oled_putString	;wreg free
  6940                           
  6941                           ;MOTEapp.c: 587: moteApp_clearBuffers();
  6942  000422  EC1B  F022         	call	_moteApp_clearBuffers	;wreg free
  6943                           
  6944                           ;MOTEapp.c: 588: randomPortNum = TMR2_ReadTimer();
  6945  000426  EC6B  F02F         	call	_TMR2_ReadTimer	;wreg free
  6946  00042A  0100               	movlb	0	; () banked
  6947  00042C  6FA1               	movwf	_randomPortNum& (0+255),b
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;MOTEapp.c: 590: if (!randomPortNum)
  6951  00042E  0100               	movlb	0	; () banked
  6952  000430  51A1               	movf	_randomPortNum& (0+255),w,b
  6953  000432  0100               	movlb	0	; () banked
  6954  000434  A4D8               	btfss	status,2,c
  6955  000436  D002               	goto	l12803
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;MOTEapp.c: 591: randomPortNum = 5;
  6959  000438  0E05               	movlw	5
  6960  00043A  D007               	goto	L4
  6961  00043C                     l12803:
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;MOTEapp.c: 592: else if (randomPortNum > 223)
  6965  00043C  0EDF               	movlw	223
  6966  00043E  0100               	movlb	0	; () banked
  6967  000440  65A1               	cpfsgt	_randomPortNum& (0+255),b
  6968  000442  D006               	goto	l12807
  6969                           
  6970                           ; BSR set to: 0
  6971                           ;MOTEapp.c: 593: randomPortNum = randomPortNum - 50;
  6972  000444  0100               	movlb	0	; () banked
  6973  000446  51A1               	movf	_randomPortNum& (0+255),w,b
  6974  000448  0FCE               	addlw	206
  6975  00044A                     L4:
  6976  00044A  0100               	movlb	0	; () banked
  6977  00044C  6FA1               	movwf	_randomPortNum& (0+255),b
  6978                           
  6979                           ; BSR set to: 0
  6980  00044E  D000               	goto	l12807
  6981  000450                     l12807:
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;MOTEapp.c: 594: oled_putUint8(randomPortNum,12,1);
  6985  000450  0E0C               	movlw	12
  6986  000452  0100               	movlb	0	; () banked
  6987  000454  6FC5               	movwf	oled_putUint8@station_dot& (0+255),b
  6988  000456  0E01               	movlw	1
  6989  000458  0100               	movlb	0	; () banked
  6990  00045A  6FC6               	movwf	oled_putUint8@start_page& (0+255),b
  6991  00045C  0100               	movlb	0	; () banked
  6992  00045E  51A1               	movf	_randomPortNum& (0+255),w,b
  6993  000460  EC3D  F024         	call	_oled_putUint8
  6994                           
  6995                           ;MOTEapp.c: 595: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6996  000464  0E00               	movlw	0
  6997  000466  0100               	movlb	0	; () banked
  6998  000468  6FB5               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6999  00046A  0100               	movlb	0	; () banked
  7000  00046C  51A1               	movf	_randomPortNum& (0+255),w,b
  7001  00046E  ECCA  F01E         	call	_moteApp_add8bToDataBuffer
  7002                           
  7003                           ;MOTEapp.c: 596: dataBuffer[3] = 0x20;
  7004  000472  0E20               	movlw	32
  7005  000474  0101               	movlb	1	; () banked
  7006  000476  6F13               	movwf	(_dataBuffer+3)& (0+255),b
  7007                           
  7008                           ; BSR set to: 1
  7009                           ;MOTEapp.c: 598: light = 0;
  7010  000478  0E00               	movlw	0
  7011  00047A  0100               	movlb	0	; () banked
  7012  00047C  6F77               	movwf	(_light+1)& (0+255),b
  7013  00047E  0E00               	movlw	0
  7014  000480  6F76               	movwf	_light& (0+255),b
  7015                           
  7016                           ; BSR set to: 0
  7017                           ;MOTEapp.c: 599: temperature = 0;
  7018  000482  0E00               	movlw	0
  7019  000484  0100               	movlb	0	; () banked
  7020  000486  6F7D               	movwf	(_temperature+1)& (0+255),b
  7021  000488  0E00               	movlw	0
  7022  00048A  6F7C               	movwf	_temperature& (0+255),b
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;MOTEapp.c: 600: __nop();
  7026  00048C  F000               	nop	
  7027                           
  7028                           ;MOTEapp.c: 601: moteApp_setSensorsInput();
  7029  00048E  ECD1  F025         	call	_moteApp_setSensorsInput	;wreg free
  7030                           
  7031                           ;MOTEapp.c: 602: moteApp_delayms(500);
  7032  000492  0E01               	movlw	1
  7033  000494  0100               	movlb	0	; () banked
  7034  000496  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7035  000498  0EF4               	movlw	244
  7036  00049A  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  7037  00049C  ECB1  F02C         	call	_moteApp_delayms	;wreg free
  7038                           
  7039                           ;MOTEapp.c: 603: uint8_t sizeOfUpdate = 0;
  7040  0004A0  0E00               	movlw	0
  7041  0004A2  0100               	movlb	0	; () banked
  7042  0004A4  6FF1               	movwf	moteRunningProcess@sizeOfUpdate_1692& (0+255),b
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;MOTEapp.c: 604: light = moteApp_convertSensorValue(moteApp_getLightValue());
  7046  0004A6  ECEC  F029         	call	_moteApp_getLightValue	;wreg free
  7047  0004AA  C0BC  F0C0         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  7048  0004AE  C0BD  F0C1         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  7049  0004B2  ECE4  F024         	call	_moteApp_convertSensorValue	;wreg free
  7050  0004B6  C0C0  F076         	movff	?_moteApp_convertSensorValue,_light
  7051  0004BA  C0C1  F077         	movff	?_moteApp_convertSensorValue+1,_light+1
  7052                           
  7053                           ;MOTEapp.c: 605: sizeOfUpdate = moteApp_addToDataBuffer(light, 4);
  7054  0004BE  C076  F0EC         	movff	_light,??_moteRunningProcess
  7055  0004C2  C077  F0ED         	movff	_light+1,??_moteRunningProcess+1
  7056  0004C6  0100               	movlb	0	; () banked
  7057  0004C8  6BEE               	clrf	(??_moteRunningProcess+2)& (0+255),b
  7058  0004CA  C0EC  F0AF         	movff	??_moteRunningProcess,moteApp_addToDataBuffer@string
  7059  0004CE  C0ED  F0B0         	movff	??_moteRunningProcess+1,moteApp_addToDataBuffer@string+1
  7060  0004D2  C0EE  F0B1         	movff	??_moteRunningProcess+2,moteApp_addToDataBuffer@string+2
  7061  0004D6  0E04               	movlw	4
  7062  0004D8  0100               	movlb	0	; () banked
  7063  0004DA  6FB2               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  7064  0004DC  EC30  F027         	call	_moteApp_addToDataBuffer	;wreg free
  7065  0004E0  0100               	movlb	0	; () banked
  7066  0004E2  6FF1               	movwf	moteRunningProcess@sizeOfUpdate_1692& (0+255),b
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;MOTEapp.c: 606: __nop();
  7070  0004E4  F000               	nop	
  7071                           
  7072                           ;MOTEapp.c: 607: __nop();
  7073  0004E6  F000               	nop	
  7074                           
  7075                           ;MOTEapp.c: 608: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  7076  0004E8  EC33  F02B         	call	_moteApp_getTempValue	;wreg free
  7077  0004EC  C0B2  F0C0         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  7078  0004F0  C0B3  F0C1         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  7079  0004F4  ECE4  F024         	call	_moteApp_convertSensorValue	;wreg free
  7080  0004F8  C0C0  F07C         	movff	?_moteApp_convertSensorValue,_temperature
  7081  0004FC  C0C1  F07D         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  7082                           
  7083                           ;MOTEapp.c: 609: temperature = ADC_TempConversion(temperature);
  7084  000500  0100               	movlb	0	; () banked
  7085  000502  517C               	movf	_temperature& (0+255),w,b
  7086  000504  EC00  F01D         	call	_ADC_TempConversion
  7087  000508  0100               	movlb	0	; () banked
  7088  00050A  6FEC               	movwf	??_moteRunningProcess& (0+255),b
  7089  00050C  0100               	movlb	0	; () banked
  7090  00050E  51EC               	movf	??_moteRunningProcess& (0+255),w,b
  7091  000510  0100               	movlb	0	; () banked
  7092  000512  6F7C               	movwf	_temperature& (0+255),b
  7093  000514  6B7D               	clrf	(_temperature+1)& (0+255),b
  7094                           
  7095                           ; BSR set to: 0
  7096                           ;MOTEapp.c: 610: moteApp_add8bToDataBuffer(13, 4 + moteApp_lightStringSize() + 1);
  7097  000516  EC8B  F02F         	call	_moteApp_lightStringSize	;wreg free
  7098  00051A  0F05               	addlw	5
  7099  00051C  0100               	movlb	0	; () banked
  7100  00051E  6FB5               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7101  000520  0E0D               	movlw	13
  7102  000522  ECCA  F01E         	call	_moteApp_add8bToDataBuffer
  7103                           
  7104                           ;MOTEapp.c: 611: __nop();
  7105  000526  F000               	nop	
  7106                           
  7107                           ;MOTEapp.c: 613: runningState = runningUplinkSelect;
  7108  000528  0E07               	movlw	7
  7109  00052A  0100               	movlb	0	; () banked
  7110  00052C  6FA5               	movwf	_runningState& (0+255),b
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;MOTEapp.c: 614: }
  7114                           ;MOTEapp.c: 615: break;
  7115                           
  7116                           ; BSR set to: 0
  7117  00052E  0012               	return	
  7118  000530                     l12843:
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;MOTEapp.c: 617: if (changeStates)
  7122  000530  0100               	movlb	0	; () banked
  7123  000532  51F4               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7124  000534  0100               	movlb	0	; () banked
  7125  000536  B4D8               	btfsc	status,2,c
  7126  000538  D009               	goto	l12847
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;MOTEapp.c: 618: {
  7130                           ;MOTEapp.c: 620: sendCommand("mac tx uncnf 56 68656c6c");
  7131  00053A  0E60               	movlw	low STR_74
  7132  00053C  0100               	movlb	0	; () banked
  7133  00053E  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
  7134  000540  0E7A               	movlw	high STR_74
  7135  000542  0100               	movlb	0	; () banked
  7136  000544  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
  7137  000546  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
  7138  00054A  D000               	goto	l12847
  7139  00054C                     l12847:
  7140                           
  7141                           ;MOTEapp.c: 622: }
  7142                           ;MOTEapp.c: 623: if (selectButton)
  7143  00054C  0100               	movlb	0	; () banked
  7144  00054E  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7145  000550  0100               	movlb	0	; () banked
  7146  000552  B4D8               	btfsc	status,2,c
  7147  000554  D009               	goto	l12851
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;MOTEapp.c: 624: {
  7151                           ;MOTEapp.c: 626: sendCommand("mac tx uncnf 56 68656c6c");
  7152  000556  0E60               	movlw	low STR_74
  7153  000558  0100               	movlb	0	; () banked
  7154  00055A  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
  7155  00055C  0E7A               	movlw	high STR_74
  7156  00055E  0100               	movlb	0	; () banked
  7157  000560  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
  7158  000562  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
  7159  000566  D000               	goto	l12851
  7160  000568                     l12851:
  7161                           
  7162                           ;MOTEapp.c: 627: }
  7163                           ;MOTEapp.c: 629: if ( (changeStates) || (selectButton) )
  7164  000568  0100               	movlb	0	; () banked
  7165  00056A  51F4               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7166  00056C  0100               	movlb	0	; () banked
  7167  00056E  A4D8               	btfss	status,2,c
  7168  000570  D005               	goto	l12855
  7169                           
  7170                           ; BSR set to: 0
  7171  000572  0100               	movlb	0	; () banked
  7172  000574  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7173  000576  0100               	movlb	0	; () banked
  7174  000578  B4D8               	btfsc	status,2,c
  7175  00057A  0012               	return	
  7176  00057C                     l12855:
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;MOTEapp.c: 630: {
  7180                           ;MOTEapp.c: 631: oled_clear();
  7181  00057C  ECB6  F02E         	call	_oled_clear	;wreg free
  7182                           
  7183                           ;MOTEapp.c: 632: oled_putString("Sent Data: ",0,0);
  7184  000580  0E43               	movlw	low STR_86
  7185  000582  0100               	movlb	0	; () banked
  7186  000584  6FC0               	movwf	oled_putString@string& (0+255),b
  7187  000586  0E7E               	movlw	high STR_86
  7188  000588  0100               	movlb	0	; () banked
  7189  00058A  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7190  00058C  0E00               	movlw	0
  7191  00058E  0100               	movlb	0	; () banked
  7192  000590  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7193  000592  0E00               	movlw	0
  7194  000594  0100               	movlb	0	; () banked
  7195  000596  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7196  000598  EC30  F028         	call	_oled_putString	;wreg free
  7197                           
  7198                           ;MOTEapp.c: 633: oled_putString("Tx Port #: ",0,1);
  7199  00059C  0E37               	movlw	low STR_87
  7200  00059E  0100               	movlb	0	; () banked
  7201  0005A0  6FC0               	movwf	oled_putString@string& (0+255),b
  7202  0005A2  0E7E               	movlw	high STR_87
  7203  0005A4  0100               	movlb	0	; () banked
  7204  0005A6  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7205  0005A8  0E00               	movlw	0
  7206  0005AA  0100               	movlb	0	; () banked
  7207  0005AC  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7208  0005AE  0E01               	movlw	1
  7209  0005B0  0100               	movlb	0	; () banked
  7210  0005B2  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7211  0005B4  EC30  F028         	call	_oled_putString	;wreg free
  7212                           
  7213                           ;MOTEapp.c: 634: oled_putUint8(randomPortNum,12,1);
  7214  0005B8  0E0C               	movlw	12
  7215  0005BA  0100               	movlb	0	; () banked
  7216  0005BC  6FC5               	movwf	oled_putUint8@station_dot& (0+255),b
  7217  0005BE  0E01               	movlw	1
  7218  0005C0  0100               	movlb	0	; () banked
  7219  0005C2  6FC6               	movwf	oled_putUint8@start_page& (0+255),b
  7220  0005C4  0100               	movlb	0	; () banked
  7221  0005C6  51A1               	movf	_randomPortNum& (0+255),w,b
  7222  0005C8  EC3D  F024         	call	_oled_putUint8
  7223                           
  7224                           ;MOTEapp.c: 635: oled_putString("L:       T: ",0,2);
  7225  0005CC  0E69               	movlw	low STR_73
  7226  0005CE  0100               	movlb	0	; () banked
  7227  0005D0  6FC0               	movwf	oled_putString@string& (0+255),b
  7228  0005D2  0E7D               	movlw	high STR_73
  7229  0005D4  0100               	movlb	0	; () banked
  7230  0005D6  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7231  0005D8  0E00               	movlw	0
  7232  0005DA  0100               	movlb	0	; () banked
  7233  0005DC  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7234  0005DE  0E02               	movlw	2
  7235  0005E0  0100               	movlb	0	; () banked
  7236  0005E2  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7237  0005E4  EC30  F028         	call	_oled_putString	;wreg free
  7238                           
  7239                           ;MOTEapp.c: 636: oled_putString(moteApp_getLightString(), 3, 2);
  7240  0005E8  EC5C  F02F         	call	_moteApp_getLightString	;wreg free
  7241  0005EC  C0AF  F0C0         	movff	?_moteApp_getLightString,oled_putString@string
  7242  0005F0  C0B0  F0C1         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  7243  0005F4  0E03               	movlw	3
  7244  0005F6  0100               	movlb	0	; () banked
  7245  0005F8  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7246  0005FA  0E02               	movlw	2
  7247  0005FC  0100               	movlb	0	; () banked
  7248  0005FE  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7249  000600  EC30  F028         	call	_oled_putString	;wreg free
  7250                           
  7251                           ;MOTEapp.c: 637: oled_putint8(temperature,11,2);
  7252  000604  0E0B               	movlw	11
  7253  000606  0100               	movlb	0	; () banked
  7254  000608  6FC5               	movwf	oled_putint8@station_dot& (0+255),b
  7255  00060A  0E02               	movlw	2
  7256  00060C  0100               	movlb	0	; () banked
  7257  00060E  6FC6               	movwf	oled_putint8@start_page& (0+255),b
  7258  000610  0100               	movlb	0	; () banked
  7259  000612  517C               	movf	_temperature& (0+255),w,b
  7260  000614  EC17  F020         	call	_oled_putint8
  7261                           
  7262                           ;MOTEapp.c: 638: LATAbits.LATA6 = 0;
  7263  000618  9C89               	bcf	3977,6,c	;volatile
  7264                           
  7265                           ;MOTEapp.c: 639: runningState = runningUplinkTransmit;
  7266  00061A  0E08               	movlw	8
  7267  00061C  0100               	movlb	0	; () banked
  7268  00061E  6FA5               	movwf	_runningState& (0+255),b
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;MOTEapp.c: 640: }
  7272                           ;MOTEapp.c: 641: break;
  7273  000620  0012               	return	
  7274  000622                     l12873:
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;MOTEapp.c: 643: if ( messageReady )
  7278  000622  0100               	movlb	0	; () banked
  7279  000624  51EA               	movf	moteRunningProcess@messageReady& (0+255),w,b
  7280  000626  0100               	movlb	0	; () banked
  7281  000628  B4D8               	btfsc	status,2,c
  7282  00062A  D140               	goto	l12939
  7283                           
  7284                           ; BSR set to: 0
  7285                           ;MOTEapp.c: 644: {
  7286                           ;MOTEapp.c: 645: if(strcmp(moduleResonseBuffer, "ok") == 0)
  7287  00062C  0E78               	movlw	low _moduleResonseBuffer
  7288  00062E  0100               	movlb	0	; () banked
  7289  000630  6FAF               	movwf	strcmp@s1& (0+255),b
  7290  000632  0E01               	movlw	high _moduleResonseBuffer
  7291  000634  0100               	movlb	0	; () banked
  7292  000636  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
  7293  000638  0EF7               	movlw	low STR_44
  7294  00063A  0100               	movlb	0	; () banked
  7295  00063C  6FB1               	movwf	strcmp@s2& (0+255),b
  7296  00063E  0E7F               	movlw	high STR_44
  7297  000640  0100               	movlb	0	; () banked
  7298  000642  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
  7299  000644  EC4E  F02A         	call	_strcmp	;wreg free
  7300  000648  0100               	movlb	0	; () banked
  7301  00064A  51AF               	movf	?_strcmp& (0+255),w,b
  7302  00064C  0100               	movlb	0	; () banked
  7303  00064E  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
  7304  000650  A4D8               	btfss	status,2,c
  7305  000652  D005               	goto	l12881
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;MOTEapp.c: 646: {
  7309                           ;MOTEapp.c: 647: LATAbits.LATA6 = 1;
  7310  000654  8C89               	bsf	3977,6,c	;volatile
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;MOTEapp.c: 648: runningState = runningUplinkTransmit;
  7314  000656  0E08               	movlw	8
  7315  000658  0100               	movlb	0	; () banked
  7316  00065A  6FA5               	movwf	_runningState& (0+255),b
  7317  00065C  D000               	goto	l12881
  7318  00065E                     l12881:
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;MOTEapp.c: 649: }
  7322                           ;MOTEapp.c: 650: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  7323  00065E  0E78               	movlw	low _moduleResonseBuffer
  7324  000660  0100               	movlb	0	; () banked
  7325  000662  6FAF               	movwf	strncmp@s1& (0+255),b
  7326  000664  0E01               	movlw	high _moduleResonseBuffer
  7327  000666  0100               	movlb	0	; () banked
  7328  000668  6FB0               	movwf	(strncmp@s1+1)& (0+255),b
  7329  00066A  0EAA               	movlw	low STR_90
  7330  00066C  0100               	movlb	0	; () banked
  7331  00066E  6FB1               	movwf	strncmp@s2& (0+255),b
  7332  000670  0E7F               	movlw	high STR_90
  7333  000672  0100               	movlb	0	; () banked
  7334  000674  6FB2               	movwf	(strncmp@s2+1)& (0+255),b
  7335  000676  0E00               	movlw	0
  7336  000678  0100               	movlb	0	; () banked
  7337  00067A  6FB4               	movwf	(strncmp@len+1)& (0+255),b
  7338  00067C  0E06               	movlw	6
  7339  00067E  6FB3               	movwf	strncmp@len& (0+255),b
  7340  000680  EC91  F024         	call	_strncmp	;wreg free
  7341  000684  0100               	movlb	0	; () banked
  7342  000686  51AF               	movf	?_strncmp& (0+255),w,b
  7343  000688  0100               	movlb	0	; () banked
  7344  00068A  11B0               	iorwf	(?_strncmp+1)& (0+255),w,b
  7345  00068C  A4D8               	btfss	status,2,c
  7346  00068E  D08B               	goto	l12923
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;MOTEapp.c: 651: {
  7350                           ;MOTEapp.c: 652: uint8_t bufferReadPos = 7;
  7351  000690  0E07               	movlw	7
  7352  000692  0100               	movlb	0	; () banked
  7353  000694  6FF3               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;MOTEapp.c: 656: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  7357  000696  0100               	movlb	0	; () banked
  7358  000698  51F3               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7359  00069A  0D01               	mullw	1
  7360  00069C  0E78               	movlw	low _moduleResonseBuffer
  7361  00069E  24F3               	addwf	prodl,w,c
  7362  0006A0  6ED9               	movwf	fsr2l,c
  7363  0006A2  0E01               	movlw	high _moduleResonseBuffer
  7364  0006A4  20F4               	addwfc	prodh,w,c
  7365  0006A6  6EDA               	movwf	fsr2h,c
  7366  0006A8  50DF               	movf	indf2,w,c
  7367  0006AA  0100               	movlb	0	; () banked
  7368  0006AC  6FAA               	movwf	_responsePortNum& (0+255),b
  7369                           
  7370                           ; BSR set to: 0
  7371  0006AE  0100               	movlb	0	; () banked
  7372  0006B0  2BF3               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7373                           
  7374                           ; BSR set to: 0
  7375                           ;MOTEapp.c: 657: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  7376  0006B2  0100               	movlb	0	; () banked
  7377  0006B4  51F3               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7378  0006B6  0D01               	mullw	1
  7379  0006B8  0E78               	movlw	low _moduleResonseBuffer
  7380  0006BA  24F3               	addwf	prodl,w,c
  7381  0006BC  6ED9               	movwf	fsr2l,c
  7382  0006BE  0E01               	movlw	high _moduleResonseBuffer
  7383  0006C0  20F4               	addwfc	prodh,w,c
  7384  0006C2  6EDA               	movwf	fsr2h,c
  7385  0006C4  50DF               	movf	indf2,w,c
  7386  0006C6  0100               	movlb	0	; () banked
  7387  0006C8  6FAB               	movwf	(_responsePortNum+1)& (0+255),b
  7388                           
  7389                           ; BSR set to: 0
  7390  0006CA  0100               	movlb	0	; () banked
  7391  0006CC  2BF3               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7392                           
  7393                           ; BSR set to: 0
  7394                           ;MOTEapp.c: 658: if (responsePortNum[1] != ' ')
  7395  0006CE  0E20               	movlw	32
  7396  0006D0  0100               	movlb	0	; () banked
  7397  0006D2  19AB               	xorwf	(_responsePortNum+1)& (0+255),w,b
  7398  0006D4  B4D8               	btfsc	status,2,c
  7399  0006D6  D016               	goto	l12903
  7400                           
  7401                           ; BSR set to: 0
  7402                           ;MOTEapp.c: 659: {
  7403                           ;MOTEapp.c: 660: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  7404  0006D8  0100               	movlb	0	; () banked
  7405  0006DA  51F3               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7406  0006DC  0D01               	mullw	1
  7407  0006DE  0E78               	movlw	low _moduleResonseBuffer
  7408  0006E0  24F3               	addwf	prodl,w,c
  7409  0006E2  6ED9               	movwf	fsr2l,c
  7410  0006E4  0E01               	movlw	high _moduleResonseBuffer
  7411  0006E6  20F4               	addwfc	prodh,w,c
  7412  0006E8  6EDA               	movwf	fsr2h,c
  7413  0006EA  50DF               	movf	indf2,w,c
  7414  0006EC  0100               	movlb	0	; () banked
  7415  0006EE  6FAC               	movwf	(_responsePortNum+2)& (0+255),b
  7416                           
  7417                           ; BSR set to: 0
  7418  0006F0  0100               	movlb	0	; () banked
  7419  0006F2  2BF3               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7420                           
  7421                           ; BSR set to: 0
  7422                           ;MOTEapp.c: 661: if (responsePortNum[2] != ' ')
  7423  0006F4  0E20               	movlw	32
  7424  0006F6  0100               	movlb	0	; () banked
  7425  0006F8  19AC               	xorwf	(_responsePortNum+2)& (0+255),w,b
  7426  0006FA  B4D8               	btfsc	status,2,c
  7427  0006FC  D003               	goto	l12903
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;MOTEapp.c: 662: {
  7431                           ;MOTEapp.c: 663: bufferReadPos++;
  7432  0006FE  0100               	movlb	0	; () banked
  7433  000700  2BF3               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7434                           
  7435                           ; BSR set to: 0
  7436  000702  D000               	goto	l12903
  7437  000704                     l12903:
  7438                           
  7439                           ; BSR set to: 0
  7440                           ;MOTEapp.c: 664: }
  7441                           ;MOTEapp.c: 665: }
  7442                           ;MOTEapp.c: 667: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  7443  000704  0E00               	movlw	0
  7444  000706  0100               	movlb	0	; () banked
  7445  000708  6FF2               	movwf	moteRunningProcess@counter& (0+255),b
  7446  00070A  D02A               	goto	l12919
  7447                           
  7448                           ; BSR set to: 0
  7449                           
  7450                           ; BSR set to: 0
  7451  00070C  D02D               	goto	l503
  7452  00070E                     l12909:
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;MOTEapp.c: 668: {
  7456                           ;MOTEapp.c: 669: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  7457  00070E  0100               	movlb	0	; () banked
  7458  000710  51F3               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7459  000712  0D01               	mullw	1
  7460  000714  0E78               	movlw	low _moduleResonseBuffer
  7461  000716  24F3               	addwf	prodl,w,c
  7462  000718  6ED9               	movwf	fsr2l,c
  7463  00071A  0E01               	movlw	high _moduleResonseBuffer
  7464  00071C  20F4               	addwfc	prodh,w,c
  7465  00071E  6EDA               	movwf	fsr2h,c
  7466  000720  0100               	movlb	0	; () banked
  7467  000722  51F2               	movf	moteRunningProcess@counter& (0+255),w,b
  7468  000724  0D01               	mullw	1
  7469  000726  0EB8               	movlw	low _responseData
  7470  000728  24F3               	addwf	prodl,w,c
  7471  00072A  6EE1               	movwf	fsr1l,c
  7472  00072C  0E01               	movlw	high _responseData
  7473  00072E  20F4               	addwfc	prodh,w,c
  7474  000730  6EE2               	movwf	fsr1h,c
  7475  000732  CFDF FFE7          	movff	indf2,indf1
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;MOTEapp.c: 671: if (responseData[counter] != 0x00)
  7479  000736  0100               	movlb	0	; () banked
  7480  000738  51F2               	movf	moteRunningProcess@counter& (0+255),w,b
  7481  00073A  0D01               	mullw	1
  7482  00073C  0EB8               	movlw	low _responseData
  7483  00073E  24F3               	addwf	prodl,w,c
  7484  000740  6ED9               	movwf	fsr2l,c
  7485  000742  0E01               	movlw	high _responseData
  7486  000744  20F4               	addwfc	prodh,w,c
  7487  000746  6EDA               	movwf	fsr2h,c
  7488  000748  50DF               	movf	indf2,w,c
  7489  00074A  B4D8               	btfsc	status,2,c
  7490  00074C  D003               	goto	l12915
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;MOTEapp.c: 672: {
  7494                           ;MOTEapp.c: 673: bufferReadPos++;
  7495  00074E  0100               	movlb	0	; () banked
  7496  000750  2BF3               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7497                           
  7498                           ;MOTEapp.c: 674: } else {
  7499  000752  D004               	goto	l12917
  7500  000754                     l12915:
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;MOTEapp.c: 675: counter = sizeof(moduleResonseBuffer);
  7504  000754  0E40               	movlw	64
  7505  000756  0100               	movlb	0	; () banked
  7506  000758  6FF2               	movwf	moteRunningProcess@counter& (0+255),b
  7507  00075A  D000               	goto	l12917
  7508  00075C                     l12917:
  7509                           
  7510                           ; BSR set to: 0
  7511  00075C  0100               	movlb	0	; () banked
  7512  00075E  2BF2               	incf	moteRunningProcess@counter& (0+255),f,b
  7513  000760                     l12919:
  7514                           
  7515                           ; BSR set to: 0
  7516  000760  0E3F               	movlw	63
  7517  000762  0100               	movlb	0	; () banked
  7518  000764  65F2               	cpfsgt	moteRunningProcess@counter& (0+255),b
  7519  000766  D7D3               	goto	l12909
  7520  000768                     l503:
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;MOTEapp.c: 676: }
  7524                           ;MOTEapp.c: 677: }
  7525                           ;MOTEapp.c: 679: LATAbits.LATA7 = 1;
  7526  000768  8E89               	bsf	3977,7,c	;volatile
  7527                           
  7528                           ;MOTEapp.c: 680: LATAbits.LATA6 = 0;
  7529  00076A  9C89               	bcf	3977,6,c	;volatile
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;MOTEapp.c: 682: oled_putString("Server Response ",0,2);
  7533  00076C  0E77               	movlw	low STR_91
  7534  00076E  0100               	movlb	0	; () banked
  7535  000770  6FC0               	movwf	oled_putString@string& (0+255),b
  7536  000772  0E7B               	movlw	high STR_91
  7537  000774  0100               	movlb	0	; () banked
  7538  000776  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7539  000778  0E00               	movlw	0
  7540  00077A  0100               	movlb	0	; () banked
  7541  00077C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7542  00077E  0E02               	movlw	2
  7543  000780  0100               	movlb	0	; () banked
  7544  000782  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7545  000784  EC30  F028         	call	_oled_putString	;wreg free
  7546                           
  7547                           ;MOTEapp.c: 683: oled_putString("    Received    ",0,3);
  7548  000788  0EEF               	movlw	low STR_92
  7549  00078A  0100               	movlb	0	; () banked
  7550  00078C  6FC0               	movwf	oled_putString@string& (0+255),b
  7551  00078E  0E7A               	movlw	high STR_92
  7552  000790  0100               	movlb	0	; () banked
  7553  000792  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7554  000794  0E00               	movlw	0
  7555  000796  0100               	movlb	0	; () banked
  7556  000798  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7557  00079A  0E03               	movlw	3
  7558  00079C  0100               	movlb	0	; () banked
  7559  00079E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7560  0007A0  EC30  F028         	call	_oled_putString	;wreg free
  7561                           
  7562                           ;MOTEapp.c: 684: }
  7563  0007A4  D079               	goto	l12937
  7564  0007A6                     l12923:
  7565                           
  7566                           ;MOTEapp.c: 685: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  7567  0007A6  0E78               	movlw	low _moduleResonseBuffer
  7568  0007A8  0100               	movlb	0	; () banked
  7569  0007AA  6FAF               	movwf	strncmp@s1& (0+255),b
  7570  0007AC  0E01               	movlw	high _moduleResonseBuffer
  7571  0007AE  0100               	movlb	0	; () banked
  7572  0007B0  6FB0               	movwf	(strncmp@s1+1)& (0+255),b
  7573  0007B2  0EB1               	movlw	low STR_93
  7574  0007B4  0100               	movlb	0	; () banked
  7575  0007B6  6FB1               	movwf	strncmp@s2& (0+255),b
  7576  0007B8  0E7F               	movlw	high STR_93
  7577  0007BA  0100               	movlb	0	; () banked
  7578  0007BC  6FB2               	movwf	(strncmp@s2+1)& (0+255),b
  7579  0007BE  0E00               	movlw	0
  7580  0007C0  0100               	movlb	0	; () banked
  7581  0007C2  6FB4               	movwf	(strncmp@len+1)& (0+255),b
  7582  0007C4  0E06               	movlw	6
  7583  0007C6  6FB3               	movwf	strncmp@len& (0+255),b
  7584  0007C8  EC91  F024         	call	_strncmp	;wreg free
  7585  0007CC  0100               	movlb	0	; () banked
  7586  0007CE  51AF               	movf	?_strncmp& (0+255),w,b
  7587  0007D0  0100               	movlb	0	; () banked
  7588  0007D2  11B0               	iorwf	(?_strncmp+1)& (0+255),w,b
  7589  0007D4  A4D8               	btfss	status,2,c
  7590  0007D6  D010               	goto	l12929
  7591                           
  7592                           ; BSR set to: 0
  7593                           ;MOTEapp.c: 686: {
  7594                           ;MOTEapp.c: 687: LATAbits.LATA6 = 0;
  7595  0007D8  9C89               	bcf	3977,6,c	;volatile
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;MOTEapp.c: 688: oled_putString("Data Transmitted",0,3);
  7599  0007DA  0EDD               	movlw	low STR_94
  7600  0007DC  0100               	movlb	0	; () banked
  7601  0007DE  6FC0               	movwf	oled_putString@string& (0+255),b
  7602  0007E0  0E7B               	movlw	high STR_94
  7603  0007E2  0100               	movlb	0	; () banked
  7604  0007E4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7605  0007E6  0E00               	movlw	0
  7606  0007E8  0100               	movlb	0	; () banked
  7607  0007EA  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7608  0007EC  0E03               	movlw	3
  7609  0007EE  0100               	movlb	0	; () banked
  7610  0007F0  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7611  0007F2  EC30  F028         	call	_oled_putString	;wreg free
  7612                           
  7613                           ;MOTEapp.c: 689: }
  7614  0007F6  D050               	goto	l12937
  7615  0007F8                     l12929:
  7616                           
  7617                           ;MOTEapp.c: 690: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  7618  0007F8  0E78               	movlw	low _moduleResonseBuffer
  7619  0007FA  0100               	movlb	0	; () banked
  7620  0007FC  6FAF               	movwf	strncmp@s1& (0+255),b
  7621  0007FE  0E01               	movlw	high _moduleResonseBuffer
  7622  000800  0100               	movlb	0	; () banked
  7623  000802  6FB0               	movwf	(strncmp@s1+1)& (0+255),b
  7624  000804  0EA3               	movlw	low STR_95
  7625  000806  0100               	movlb	0	; () banked
  7626  000808  6FB1               	movwf	strncmp@s2& (0+255),b
  7627  00080A  0E7F               	movlw	high STR_95
  7628  00080C  0100               	movlb	0	; () banked
  7629  00080E  6FB2               	movwf	(strncmp@s2+1)& (0+255),b
  7630  000810  0E00               	movlw	0
  7631  000812  0100               	movlb	0	; () banked
  7632  000814  6FB4               	movwf	(strncmp@len+1)& (0+255),b
  7633  000816  0E06               	movlw	6
  7634  000818  6FB3               	movwf	strncmp@len& (0+255),b
  7635  00081A  EC91  F024         	call	_strncmp	;wreg free
  7636  00081E  0100               	movlb	0	; () banked
  7637  000820  51AF               	movf	?_strncmp& (0+255),w,b
  7638  000822  0100               	movlb	0	; () banked
  7639  000824  11B0               	iorwf	(?_strncmp+1)& (0+255),w,b
  7640  000826  A4D8               	btfss	status,2,c
  7641  000828  D00F               	goto	l12933
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;MOTEapp.c: 691: {
  7645                           ;MOTEapp.c: 692: oled_putString("Mac Error Occurred",0,3);
  7646  00082A  0EB9               	movlw	low STR_96
  7647  00082C  0100               	movlb	0	; () banked
  7648  00082E  6FC0               	movwf	oled_putString@string& (0+255),b
  7649  000830  0E7A               	movlw	high STR_96
  7650  000832  0100               	movlb	0	; () banked
  7651  000834  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7652  000836  0E00               	movlw	0
  7653  000838  0100               	movlb	0	; () banked
  7654  00083A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7655  00083C  0E03               	movlw	3
  7656  00083E  0100               	movlb	0	; () banked
  7657  000840  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7658  000842  EC30  F028         	call	_oled_putString	;wreg free
  7659                           
  7660                           ;MOTEapp.c: 693: }
  7661  000846  D028               	goto	l12937
  7662  000848                     l12933:
  7663                           
  7664                           ;MOTEapp.c: 694: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  7665  000848  0E78               	movlw	low _moduleResonseBuffer
  7666  00084A  0100               	movlb	0	; () banked
  7667  00084C  6FAF               	movwf	strncmp@s1& (0+255),b
  7668  00084E  0E01               	movlw	high _moduleResonseBuffer
  7669  000850  0100               	movlb	0	; () banked
  7670  000852  6FB0               	movwf	(strncmp@s1+1)& (0+255),b
  7671  000854  0E9C               	movlw	low STR_97
  7672  000856  0100               	movlb	0	; () banked
  7673  000858  6FB1               	movwf	strncmp@s2& (0+255),b
  7674  00085A  0E7F               	movlw	high STR_97
  7675  00085C  0100               	movlb	0	; () banked
  7676  00085E  6FB2               	movwf	(strncmp@s2+1)& (0+255),b
  7677  000860  0E00               	movlw	0
  7678  000862  0100               	movlb	0	; () banked
  7679  000864  6FB4               	movwf	(strncmp@len+1)& (0+255),b
  7680  000866  0E06               	movlw	6
  7681  000868  6FB3               	movwf	strncmp@len& (0+255),b
  7682  00086A  EC91  F024         	call	_strncmp	;wreg free
  7683  00086E  0100               	movlb	0	; () banked
  7684  000870  51AF               	movf	?_strncmp& (0+255),w,b
  7685  000872  0100               	movlb	0	; () banked
  7686  000874  11B0               	iorwf	(?_strncmp+1)& (0+255),w,b
  7687  000876  A4D8               	btfss	status,2,c
  7688  000878  D00F               	goto	l12937
  7689                           
  7690                           ; BSR set to: 0
  7691                           ;MOTEapp.c: 695: {
  7692                           ;MOTEapp.c: 696: oled_putString("No Free Channel",0,3);
  7693  00087A  0ED6               	movlw	low STR_98
  7694  00087C  0100               	movlb	0	; () banked
  7695  00087E  6FC0               	movwf	oled_putString@string& (0+255),b
  7696  000880  0E7C               	movlw	high STR_98
  7697  000882  0100               	movlb	0	; () banked
  7698  000884  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7699  000886  0E00               	movlw	0
  7700  000888  0100               	movlb	0	; () banked
  7701  00088A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7702  00088C  0E03               	movlw	3
  7703  00088E  0100               	movlb	0	; () banked
  7704  000890  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7705  000892  EC30  F028         	call	_oled_putString	;wreg free
  7706  000896  D000               	goto	l12937
  7707  000898                     l12937:
  7708                           
  7709                           ;MOTEapp.c: 697: }
  7710                           ;MOTEapp.c: 698: _delay((unsigned long)((16)*(48000000/4000.0)));
  7711  000898  0EFA               	movlw	250
  7712  00089A  0100               	movlb	0	; () banked
  7713  00089C  6FEC               	movwf	??_moteRunningProcess& (0+255),b
  7714  00089E  0E58               	movlw	88
  7715  0008A0                     u12547:
  7716  0008A0  2EE8               	decfsz	wreg,f,c
  7717  0008A2  D7FE               	goto	u12547
  7718  0008A4  2FEC               	decfsz	??_moteRunningProcess& (0+255),f,b
  7719  0008A6  D7FC               	goto	u12547
  7720  0008A8  D000               	nop2	
  7721  0008AA  D000               	goto	l12939
  7722  0008AC                     l12939:
  7723                           
  7724                           ;MOTEapp.c: 699: }
  7725                           ;MOTEapp.c: 700: if ( (changeStates) || (selectButton) )
  7726  0008AC  0100               	movlb	0	; () banked
  7727  0008AE  51F4               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7728  0008B0  0100               	movlb	0	; () banked
  7729  0008B2  A4D8               	btfss	status,2,c
  7730  0008B4  D005               	goto	l12943
  7731                           
  7732                           ; BSR set to: 0
  7733  0008B6  0100               	movlb	0	; () banked
  7734  0008B8  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7735  0008BA  0100               	movlb	0	; () banked
  7736  0008BC  B4D8               	btfsc	status,2,c
  7737  0008BE  0012               	return	
  7738  0008C0                     l12943:
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;MOTEapp.c: 701: {
  7742                           ;MOTEapp.c: 702: oled_clear();
  7743  0008C0  ECB6  F02E         	call	_oled_clear	;wreg free
  7744                           
  7745                           ;MOTEapp.c: 703: oled_putString("  Issue Uplink  ",0,0);
  7746  0008C4  0E44               	movlw	low STR_75
  7747  0008C6  0100               	movlb	0	; () banked
  7748  0008C8  6FC0               	movwf	oled_putString@string& (0+255),b
  7749  0008CA  0E7B               	movlw	high STR_75
  7750  0008CC  0100               	movlb	0	; () banked
  7751  0008CE  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7752  0008D0  0E00               	movlw	0
  7753  0008D2  0100               	movlb	0	; () banked
  7754  0008D4  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7755  0008D6  0E00               	movlw	0
  7756  0008D8  0100               	movlb	0	; () banked
  7757  0008DA  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7758  0008DC  EC30  F028         	call	_oled_putString	;wreg free
  7759                           
  7760                           ;MOTEapp.c: 704: oled_putString(" LoRaWAN Packet ",0,1);
  7761  0008E0  0EAA               	movlw	low STR_76
  7762  0008E2  0100               	movlb	0	; () banked
  7763  0008E4  6FC0               	movwf	oled_putString@string& (0+255),b
  7764  0008E6  0E7B               	movlw	high STR_76
  7765  0008E8  0100               	movlb	0	; () banked
  7766  0008EA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7767  0008EC  0E00               	movlw	0
  7768  0008EE  0100               	movlb	0	; () banked
  7769  0008F0  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7770  0008F2  0E01               	movlw	1
  7771  0008F4  0100               	movlb	0	; () banked
  7772  0008F6  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7773  0008F8  EC30  F028         	call	_oled_putString	;wreg free
  7774                           
  7775                           ;MOTEapp.c: 705: oled_putString("(NAV)    (SEL) ",0,3);
  7776  0008FC  0EA6               	movlw	low STR_77
  7777  0008FE  0100               	movlb	0	; () banked
  7778  000900  6FC0               	movwf	oled_putString@string& (0+255),b
  7779  000902  0E7C               	movlw	high STR_77
  7780  000904  0100               	movlb	0	; () banked
  7781  000906  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7782  000908  0E00               	movlw	0
  7783  00090A  0100               	movlb	0	; () banked
  7784  00090C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7785  00090E  0E03               	movlw	3
  7786  000910  0100               	movlb	0	; () banked
  7787  000912  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7788  000914  EC30  F028         	call	_oled_putString	;wreg free
  7789                           
  7790                           ;MOTEapp.c: 706: runningState = runningUplink;
  7791  000918  0E06               	movlw	6
  7792  00091A  0100               	movlb	0	; () banked
  7793  00091C  6FA5               	movwf	_runningState& (0+255),b
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;MOTEapp.c: 707: }
  7797                           ;MOTEapp.c: 708: break;
  7798  00091E  0012               	return	
  7799  000920                     l12953:
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;MOTEapp.c: 710: if (changeStates)
  7803  000920  0100               	movlb	0	; () banked
  7804  000922  51F4               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7805  000924  0100               	movlb	0	; () banked
  7806  000926  B4D8               	btfsc	status,2,c
  7807  000928  D030               	goto	l12965
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;MOTEapp.c: 711: {
  7811                           ;MOTEapp.c: 712: oled_clear();
  7812  00092A  ECB6  F02E         	call	_oled_clear	;wreg free
  7813                           
  7814                           ;MOTEapp.c: 713: oled_putString("  Sensor Data  ",0,0);
  7815  00092E  0E86               	movlw	low STR_102
  7816  000930  0100               	movlb	0	; () banked
  7817  000932  6FC0               	movwf	oled_putString@string& (0+255),b
  7818  000934  0E7C               	movlw	high STR_102
  7819  000936  0100               	movlb	0	; () banked
  7820  000938  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7821  00093A  0E00               	movlw	0
  7822  00093C  0100               	movlb	0	; () banked
  7823  00093E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7824  000940  0E00               	movlw	0
  7825  000942  0100               	movlb	0	; () banked
  7826  000944  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7827  000946  EC30  F028         	call	_oled_putString	;wreg free
  7828                           
  7829                           ;MOTEapp.c: 714: oled_putString("    Display    ",0,1);
  7830  00094A  0E76               	movlw	low STR_103
  7831  00094C  0100               	movlb	0	; () banked
  7832  00094E  6FC0               	movwf	oled_putString@string& (0+255),b
  7833  000950  0E7C               	movlw	high STR_103
  7834  000952  0100               	movlb	0	; () banked
  7835  000954  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7836  000956  0E00               	movlw	0
  7837  000958  0100               	movlb	0	; () banked
  7838  00095A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7839  00095C  0E01               	movlw	1
  7840  00095E  0100               	movlb	0	; () banked
  7841  000960  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7842  000962  EC30  F028         	call	_oled_putString	;wreg free
  7843                           
  7844                           ;MOTEapp.c: 715: oled_putString("(NAV)    (SEL) ",0,3);
  7845  000966  0EA6               	movlw	low STR_77
  7846  000968  0100               	movlb	0	; () banked
  7847  00096A  6FC0               	movwf	oled_putString@string& (0+255),b
  7848  00096C  0E7C               	movlw	high STR_77
  7849  00096E  0100               	movlb	0	; () banked
  7850  000970  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7851  000972  0E00               	movlw	0
  7852  000974  0100               	movlb	0	; () banked
  7853  000976  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7854  000978  0E03               	movlw	3
  7855  00097A  0100               	movlb	0	; () banked
  7856  00097C  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7857  00097E  EC30  F028         	call	_oled_putString	;wreg free
  7858                           
  7859                           ;MOTEapp.c: 716: runningState = runningSensor;
  7860  000982  0E01               	movlw	1
  7861  000984  0100               	movlb	0	; () banked
  7862  000986  6FA5               	movwf	_runningState& (0+255),b
  7863                           
  7864                           ;MOTEapp.c: 717: }
  7865  000988  0012               	return	
  7866  00098A                     l12965:
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;MOTEapp.c: 718: else if (selectButton)
  7870  00098A  0100               	movlb	0	; () banked
  7871  00098C  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7872  00098E  0100               	movlb	0	; () banked
  7873  000990  B4D8               	btfsc	status,2,c
  7874  000992  0012               	return	
  7875                           
  7876                           ; BSR set to: 0
  7877                           ;MOTEapp.c: 719: {
  7878                           ;MOTEapp.c: 721: oled_clear();
  7879  000994  ECB6  F02E         	call	_oled_clear	;wreg free
  7880                           
  7881                           ;MOTEapp.c: 723: LATAbits.LATA7 = 0;
  7882  000998  9E89               	bcf	3977,7,c	;volatile
  7883                           
  7884                           ;MOTEapp.c: 725: oled_putString("Downlink Display",0,0);
  7885  00099A  0E65               	movlw	low STR_105
  7886  00099C  0100               	movlb	0	; () banked
  7887  00099E  6FC0               	movwf	oled_putString@string& (0+255),b
  7888  0009A0  0E7C               	movlw	high STR_105
  7889  0009A2  0100               	movlb	0	; () banked
  7890  0009A4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7891  0009A6  0E00               	movlw	0
  7892  0009A8  0100               	movlb	0	; () banked
  7893  0009AA  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7894  0009AC  0E00               	movlw	0
  7895  0009AE  0100               	movlb	0	; () banked
  7896  0009B0  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7897  0009B2  EC30  F028         	call	_oled_putString	;wreg free
  7898                           
  7899                           ;MOTEapp.c: 727: oled_putString("Rx Port# ",0,1);
  7900  0009B6  0EC0               	movlw	low STR_106
  7901  0009B8  0100               	movlb	0	; () banked
  7902  0009BA  6FC0               	movwf	oled_putString@string& (0+255),b
  7903  0009BC  0E7E               	movlw	high STR_106
  7904  0009BE  0100               	movlb	0	; () banked
  7905  0009C0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7906  0009C2  0E00               	movlw	0
  7907  0009C4  0100               	movlb	0	; () banked
  7908  0009C6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7909  0009C8  0E01               	movlw	1
  7910  0009CA  0100               	movlb	0	; () banked
  7911  0009CC  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7912  0009CE  EC30  F028         	call	_oled_putString	;wreg free
  7913                           
  7914                           ;MOTEapp.c: 728: oled_putString(&responsePortNum,9,1);
  7915  0009D2  0EAA               	movlw	low _responsePortNum
  7916  0009D4  0100               	movlb	0	; () banked
  7917  0009D6  6FC0               	movwf	oled_putString@string& (0+255),b
  7918  0009D8  0E00               	movlw	high _responsePortNum
  7919  0009DA  0100               	movlb	0	; () banked
  7920  0009DC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7921  0009DE  0E09               	movlw	9
  7922  0009E0  0100               	movlb	0	; () banked
  7923  0009E2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7924  0009E4  0E01               	movlw	1
  7925  0009E6  0100               	movlb	0	; () banked
  7926  0009E8  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7927  0009EA  EC30  F028         	call	_oled_putString	;wreg free
  7928                           
  7929                           ;MOTEapp.c: 730: oled_putString("Data: ",0,2);
  7930  0009EE  0E48               	movlw	low (STR_86+5)
  7931  0009F0  0100               	movlb	0	; () banked
  7932  0009F2  6FC0               	movwf	oled_putString@string& (0+255),b
  7933  0009F4  0E7E               	movlw	high (STR_86+5)
  7934  0009F6  0100               	movlb	0	; () banked
  7935  0009F8  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7936  0009FA  0E00               	movlw	0
  7937  0009FC  0100               	movlb	0	; () banked
  7938  0009FE  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7939  000A00  0E02               	movlw	2
  7940  000A02  0100               	movlb	0	; () banked
  7941  000A04  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7942  000A06  EC30  F028         	call	_oled_putString	;wreg free
  7943                           
  7944                           ;MOTEapp.c: 731: oled_putString(&responseData[0],6,2);
  7945  000A0A  0EB8               	movlw	low _responseData
  7946  000A0C  0100               	movlb	0	; () banked
  7947  000A0E  6FC0               	movwf	oled_putString@string& (0+255),b
  7948  000A10  0E01               	movlw	high _responseData
  7949  000A12  0100               	movlb	0	; () banked
  7950  000A14  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7951  000A16  0E06               	movlw	6
  7952  000A18  0100               	movlb	0	; () banked
  7953  000A1A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7954  000A1C  0E02               	movlw	2
  7955  000A1E  0100               	movlb	0	; () banked
  7956  000A20  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7957  000A22  EC30  F028         	call	_oled_putString	;wreg free
  7958                           
  7959                           ;MOTEapp.c: 733: oled_putString(&responseData[10],0,3);
  7960  000A26  0EC2               	movlw	low (_responseData+10)
  7961  000A28  0100               	movlb	0	; () banked
  7962  000A2A  6FC0               	movwf	oled_putString@string& (0+255),b
  7963  000A2C  0E01               	movlw	high (_responseData+10)
  7964  000A2E  0100               	movlb	0	; () banked
  7965  000A30  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7966  000A32  0E00               	movlw	0
  7967  000A34  0100               	movlb	0	; () banked
  7968  000A36  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7969  000A38  0E03               	movlw	3
  7970  000A3A  0100               	movlb	0	; () banked
  7971  000A3C  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7972  000A3E  EC30  F028         	call	_oled_putString	;wreg free
  7973                           
  7974                           ;MOTEapp.c: 735: runningState = runningDownlinkDisplay;
  7975  000A42  0E0B               	movlw	11
  7976  000A44  0100               	movlb	0	; () banked
  7977  000A46  6FA5               	movwf	_runningState& (0+255),b
  7978                           
  7979                           ; BSR set to: 0
  7980                           ;MOTEapp.c: 736: }
  7981                           ;MOTEapp.c: 737: break;
  7982                           
  7983                           ; BSR set to: 0
  7984  000A48  0012               	return	
  7985  000A4A                     l12985:
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;MOTEapp.c: 739: if ( (changeStates) || (selectButton) )
  7989  000A4A  0100               	movlb	0	; () banked
  7990  000A4C  51F4               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7991  000A4E  0100               	movlb	0	; () banked
  7992  000A50  A4D8               	btfss	status,2,c
  7993  000A52  D005               	goto	l12989
  7994                           
  7995                           ; BSR set to: 0
  7996  000A54  0100               	movlb	0	; () banked
  7997  000A56  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7998  000A58  0100               	movlb	0	; () banked
  7999  000A5A  B4D8               	btfsc	status,2,c
  8000  000A5C  0012               	return	
  8001  000A5E                     l12989:
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;MOTEapp.c: 740: {
  8005                           ;MOTEapp.c: 741: oled_clear();
  8006  000A5E  ECB6  F02E         	call	_oled_clear	;wreg free
  8007                           
  8008                           ;MOTEapp.c: 742: oled_putString(" View Downlink  ",0,0);
  8009  000A62  0E33               	movlw	low STR_78
  8010  000A64  0100               	movlb	0	; () banked
  8011  000A66  6FC0               	movwf	oled_putString@string& (0+255),b
  8012  000A68  0E7B               	movlw	high STR_78
  8013  000A6A  0100               	movlb	0	; () banked
  8014  000A6C  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8015  000A6E  0E00               	movlw	0
  8016  000A70  0100               	movlb	0	; () banked
  8017  000A72  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8018  000A74  0E00               	movlw	0
  8019  000A76  0100               	movlb	0	; () banked
  8020  000A78  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8021  000A7A  EC30  F028         	call	_oled_putString	;wreg free
  8022                           
  8023                           ;MOTEapp.c: 743: oled_putString("  Last Message  ",0,1);
  8024  000A7E  0E22               	movlw	low STR_79
  8025  000A80  0100               	movlb	0	; () banked
  8026  000A82  6FC0               	movwf	oled_putString@string& (0+255),b
  8027  000A84  0E7B               	movlw	high STR_79
  8028  000A86  0100               	movlb	0	; () banked
  8029  000A88  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8030  000A8A  0E00               	movlw	0
  8031  000A8C  0100               	movlb	0	; () banked
  8032  000A8E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8033  000A90  0E01               	movlw	1
  8034  000A92  0100               	movlb	0	; () banked
  8035  000A94  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8036  000A96  EC30  F028         	call	_oled_putString	;wreg free
  8037                           
  8038                           ;MOTEapp.c: 744: oled_putString("(NAV)    (SEL) ",0,3);
  8039  000A9A  0EA6               	movlw	low STR_77
  8040  000A9C  0100               	movlb	0	; () banked
  8041  000A9E  6FC0               	movwf	oled_putString@string& (0+255),b
  8042  000AA0  0E7C               	movlw	high STR_77
  8043  000AA2  0100               	movlb	0	; () banked
  8044  000AA4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8045  000AA6  0E00               	movlw	0
  8046  000AA8  0100               	movlb	0	; () banked
  8047  000AAA  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8048  000AAC  0E03               	movlw	3
  8049  000AAE  0100               	movlb	0	; () banked
  8050  000AB0  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8051  000AB2  EC30  F028         	call	_oled_putString	;wreg free
  8052                           
  8053                           ;MOTEapp.c: 745: runningState = runningDownlink;
  8054  000AB6  0E0A               	movlw	10
  8055  000AB8  0100               	movlb	0	; () banked
  8056  000ABA  6FA5               	movwf	_runningState& (0+255),b
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;MOTEapp.c: 746: }
  8060                           ;MOTEapp.c: 747: break;
  8061  000ABC  0012               	return	
  8062  000ABE                     l12999:
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;MOTEapp.c: 749: if (changeStates)
  8066  000ABE  0100               	movlb	0	; () banked
  8067  000AC0  51F4               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8068  000AC2  0100               	movlb	0	; () banked
  8069  000AC4  B4D8               	btfsc	status,2,c
  8070  000AC6  D043               	goto	l13013
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;MOTEapp.c: 750: {
  8074                           ;MOTEapp.c: 751: oled_clear();
  8075  000AC8  ECB6  F02E         	call	_oled_clear	;wreg free
  8076                           
  8077                           ;MOTEapp.c: 752: oled_putString("Menu Has Timeout",0,0);
  8078  000ACC  0E43               	movlw	low STR_111
  8079  000ACE  0100               	movlb	0	; () banked
  8080  000AD0  6FC0               	movwf	oled_putString@string& (0+255),b
  8081  000AD2  0E7C               	movlw	high STR_111
  8082  000AD4  0100               	movlb	0	; () banked
  8083  000AD6  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8084  000AD8  0E00               	movlw	0
  8085  000ADA  0100               	movlb	0	; () banked
  8086  000ADC  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8087  000ADE  0E00               	movlw	0
  8088  000AE0  0100               	movlb	0	; () banked
  8089  000AE2  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8090  000AE4  EC30  F028         	call	_oled_putString	;wreg free
  8091                           
  8092                           ;MOTEapp.c: 753: if (menuTimeout)
  8093  000AE8  0100               	movlb	0	; () banked
  8094  000AEA  51FA               	movf	_menuTimeout& (0+255),w,b
  8095  000AEC  B4D8               	btfsc	status,2,c
  8096  000AEE  D00F               	goto	l13009
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;MOTEapp.c: 754: oled_putString("    Enabled   ", 0,2);
  8100  000AF0  0EF6               	movlw	low STR_112
  8101  000AF2  0100               	movlb	0	; () banked
  8102  000AF4  6FC0               	movwf	oled_putString@string& (0+255),b
  8103  000AF6  0E7C               	movlw	high STR_112
  8104  000AF8  0100               	movlb	0	; () banked
  8105  000AFA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8106  000AFC  0E00               	movlw	0
  8107  000AFE  0100               	movlb	0	; () banked
  8108  000B00  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8109  000B02  0E02               	movlw	2
  8110  000B04  0100               	movlb	0	; () banked
  8111  000B06  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8112  000B08  EC30  F028         	call	_oled_putString	;wreg free
  8113  000B0C  D00E               	goto	l526
  8114  000B0E                     l13009:
  8115                           
  8116                           ;MOTEapp.c: 755: else
  8117                           ;MOTEapp.c: 756: oled_putString("    Disabled  ", 0,2);
  8118  000B0E  0E05               	movlw	low STR_113
  8119  000B10  0100               	movlb	0	; () banked
  8120  000B12  6FC0               	movwf	oled_putString@string& (0+255),b
  8121  000B14  0E7D               	movlw	high STR_113
  8122  000B16  0100               	movlb	0	; () banked
  8123  000B18  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8124  000B1A  0E00               	movlw	0
  8125  000B1C  0100               	movlb	0	; () banked
  8126  000B1E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8127  000B20  0E02               	movlw	2
  8128  000B22  0100               	movlb	0	; () banked
  8129  000B24  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8130  000B26  EC30  F028         	call	_oled_putString	;wreg free
  8131  000B2A                     l526:
  8132                           
  8133                           ;MOTEapp.c: 757: oled_putString("(NAV)    (CNG) ",0,3);
  8134  000B2A  0E96               	movlw	low STR_114
  8135  000B2C  0100               	movlb	0	; () banked
  8136  000B2E  6FC0               	movwf	oled_putString@string& (0+255),b
  8137  000B30  0E7C               	movlw	high STR_114
  8138  000B32  0100               	movlb	0	; () banked
  8139  000B34  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8140  000B36  0E00               	movlw	0
  8141  000B38  0100               	movlb	0	; () banked
  8142  000B3A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8143  000B3C  0E03               	movlw	3
  8144  000B3E  0100               	movlb	0	; () banked
  8145  000B40  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8146  000B42  EC30  F028         	call	_oled_putString	;wreg free
  8147                           
  8148                           ;MOTEapp.c: 758: runningState = runningMenuTimeout;
  8149  000B46  0E0C               	movlw	12
  8150  000B48  0100               	movlb	0	; () banked
  8151  000B4A  6FA5               	movwf	_runningState& (0+255),b
  8152                           
  8153                           ;MOTEapp.c: 759: }
  8154  000B4C  0012               	return	
  8155  000B4E                     l13013:
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;MOTEapp.c: 760: else if (selectButton)
  8159  000B4E  0100               	movlb	0	; () banked
  8160  000B50  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8161  000B52  0100               	movlb	0	; () banked
  8162  000B54  B4D8               	btfsc	status,2,c
  8163  000B56  0012               	return	
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;MOTEapp.c: 761: {
  8167                           ;MOTEapp.c: 762: oled_clear();
  8168  000B58  ECB6  F02E         	call	_oled_clear	;wreg free
  8169                           
  8170                           ;MOTEapp.c: 763: oled_putString("  Sensor Data  ",0,0);
  8171  000B5C  0E86               	movlw	low STR_102
  8172  000B5E  0100               	movlb	0	; () banked
  8173  000B60  6FC0               	movwf	oled_putString@string& (0+255),b
  8174  000B62  0E7C               	movlw	high STR_102
  8175  000B64  0100               	movlb	0	; () banked
  8176  000B66  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8177  000B68  0E00               	movlw	0
  8178  000B6A  0100               	movlb	0	; () banked
  8179  000B6C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8180  000B6E  0E00               	movlw	0
  8181  000B70  0100               	movlb	0	; () banked
  8182  000B72  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8183  000B74  EC30  F028         	call	_oled_putString	;wreg free
  8184                           
  8185                           ;MOTEapp.c: 764: oled_putString("Light:",0,1);
  8186  000B78  0E80               	movlw	low STR_116
  8187  000B7A  0100               	movlb	0	; () banked
  8188  000B7C  6FC0               	movwf	oled_putString@string& (0+255),b
  8189  000B7E  0E7F               	movlw	high STR_116
  8190  000B80  0100               	movlb	0	; () banked
  8191  000B82  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8192  000B84  0E00               	movlw	0
  8193  000B86  0100               	movlb	0	; () banked
  8194  000B88  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8195  000B8A  0E01               	movlw	1
  8196  000B8C  0100               	movlb	0	; () banked
  8197  000B8E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8198  000B90  EC30  F028         	call	_oled_putString	;wreg free
  8199                           
  8200                           ;MOTEapp.c: 765: oled_putString("Temp :",0,2);
  8201  000B94  0E79               	movlw	low STR_117
  8202  000B96  0100               	movlb	0	; () banked
  8203  000B98  6FC0               	movwf	oled_putString@string& (0+255),b
  8204  000B9A  0E7F               	movlw	high STR_117
  8205  000B9C  0100               	movlb	0	; () banked
  8206  000B9E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8207  000BA0  0E00               	movlw	0
  8208  000BA2  0100               	movlb	0	; () banked
  8209  000BA4  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8210  000BA6  0E02               	movlw	2
  8211  000BA8  0100               	movlb	0	; () banked
  8212  000BAA  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8213  000BAC  EC30  F028         	call	_oled_putString	;wreg free
  8214                           
  8215                           ;MOTEapp.c: 766: oled_putString("C",10,2);
  8216  000BB0  0EFA               	movlw	low STR_118
  8217  000BB2  0100               	movlb	0	; () banked
  8218  000BB4  6FC0               	movwf	oled_putString@string& (0+255),b
  8219  000BB6  0E7F               	movlw	high STR_118
  8220  000BB8  0100               	movlb	0	; () banked
  8221  000BBA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8222  000BBC  0E0A               	movlw	10
  8223  000BBE  0100               	movlb	0	; () banked
  8224  000BC0  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8225  000BC2  0E02               	movlw	2
  8226  000BC4  0100               	movlb	0	; () banked
  8227  000BC6  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8228  000BC8  EC30  F028         	call	_oled_putString	;wreg free
  8229                           
  8230                           ;MOTEapp.c: 768: moteApp_setSensorsInput();
  8231  000BCC  ECD1  F025         	call	_moteApp_setSensorsInput	;wreg free
  8232                           
  8233                           ;MOTEapp.c: 769: runningState = runningSensorMenu;
  8234  000BD0  0E02               	movlw	2
  8235  000BD2  0100               	movlb	0	; () banked
  8236  000BD4  6FA5               	movwf	_runningState& (0+255),b
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;MOTEapp.c: 770: }
  8240                           ;MOTEapp.c: 771: break;
  8241                           
  8242                           ; BSR set to: 0
  8243  000BD6  0012               	return	
  8244  000BD8                     l13029:
  8245                           
  8246                           ; BSR set to: 0
  8247                           ;MOTEapp.c: 773: if (changeStates)
  8248  000BD8  0100               	movlb	0	; () banked
  8249  000BDA  51F4               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8250  000BDC  0100               	movlb	0	; () banked
  8251  000BDE  B4D8               	btfsc	status,2,c
  8252  000BE0  D0BD               	goto	l13061
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;MOTEapp.c: 774: {
  8256                           ;MOTEapp.c: 775: oled_clear();
  8257  000BE2  ECB6  F02E         	call	_oled_clear	;wreg free
  8258                           
  8259                           ;MOTEapp.c: 776: oled_putString("Periodic Uplink ",0,0);
  8260  000BE6  0E99               	movlw	low STR_119
  8261  000BE8  0100               	movlb	0	; () banked
  8262  000BEA  6FC0               	movwf	oled_putString@string& (0+255),b
  8263  000BEC  0E7B               	movlw	high STR_119
  8264  000BEE  0100               	movlb	0	; () banked
  8265  000BF0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8266  000BF2  0E00               	movlw	0
  8267  000BF4  0100               	movlb	0	; () banked
  8268  000BF6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8269  000BF8  0E00               	movlw	0
  8270  000BFA  0100               	movlb	0	; () banked
  8271  000BFC  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8272  000BFE  EC30  F028         	call	_oled_putString	;wreg free
  8273                           
  8274                           ;MOTEapp.c: 777: oled_putString("Tx Event Timing ",0,1);
  8275  000C02  0E88               	movlw	low STR_120
  8276  000C04  0100               	movlb	0	; () banked
  8277  000C06  6FC0               	movwf	oled_putString@string& (0+255),b
  8278  000C08  0E7B               	movlw	high STR_120
  8279  000C0A  0100               	movlb	0	; () banked
  8280  000C0C  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8281  000C0E  0E00               	movlw	0
  8282  000C10  0100               	movlb	0	; () banked
  8283  000C12  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8284  000C14  0E01               	movlw	1
  8285  000C16  0100               	movlb	0	; () banked
  8286  000C18  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8287  000C1A  EC30  F028         	call	_oled_putString	;wreg free
  8288                           
  8289                           ;MOTEapp.c: 778: oled_putString("Every:",0,2);
  8290  000C1E  0E87               	movlw	low STR_121
  8291  000C20  0100               	movlb	0	; () banked
  8292  000C22  6FC0               	movwf	oled_putString@string& (0+255),b
  8293  000C24  0E7F               	movlw	high STR_121
  8294  000C26  0100               	movlb	0	; () banked
  8295  000C28  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8296  000C2A  0E00               	movlw	0
  8297  000C2C  0100               	movlb	0	; () banked
  8298  000C2E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8299  000C30  0E02               	movlw	2
  8300  000C32  0100               	movlb	0	; () banked
  8301  000C34  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8302  000C36  EC30  F028         	call	_oled_putString	;wreg free
  8303                           
  8304                           ;MOTEapp.c: 779: oled_putString("Mins",12,2);
  8305  000C3A  0EC2               	movlw	low STR_122
  8306  000C3C  0100               	movlb	0	; () banked
  8307  000C3E  6FC0               	movwf	oled_putString@string& (0+255),b
  8308  000C40  0E7F               	movlw	high STR_122
  8309  000C42  0100               	movlb	0	; () banked
  8310  000C44  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8311  000C46  0E0C               	movlw	12
  8312  000C48  0100               	movlb	0	; () banked
  8313  000C4A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8314  000C4C  0E02               	movlw	2
  8315  000C4E  0100               	movlb	0	; () banked
  8316  000C50  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8317  000C52  EC30  F028         	call	_oled_putString	;wreg free
  8318                           
  8319                           ;MOTEapp.c: 781: switch (periodicUpValue)
  8320  000C56  D05B               	goto	l13055
  8321                           
  8322                           ;MOTEapp.c: 782: {
  8323                           ;MOTEapp.c: 783: default:
  8324  000C58  D000               	goto	l13041
  8325  000C5A                     l13041:
  8326                           
  8327                           ;MOTEapp.c: 785: oled_putString("5",7,2);
  8328  000C5A  0EC2               	movlw	low (STR_169+11)
  8329  000C5C  0100               	movlb	0	; () banked
  8330  000C5E  6FC0               	movwf	oled_putString@string& (0+255),b
  8331  000C60  0E7D               	movlw	high (STR_169+11)
  8332  000C62  0100               	movlb	0	; () banked
  8333  000C64  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8334  000C66  0E07               	movlw	7
  8335  000C68  0100               	movlb	0	; () banked
  8336  000C6A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8337  000C6C  0E02               	movlw	2
  8338  000C6E  0100               	movlb	0	; () banked
  8339  000C70  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8340  000C72  EC30  F028         	call	_oled_putString	;wreg free
  8341                           
  8342                           ;MOTEapp.c: 786: break;
  8343  000C76  D060               	goto	l13057
  8344  000C78                     l13043:
  8345                           
  8346                           ;MOTEapp.c: 788: oled_putString("10",7,2);
  8347  000C78  0EE0               	movlw	low (STR_146+1)
  8348  000C7A  0100               	movlb	0	; () banked
  8349  000C7C  6FC0               	movwf	oled_putString@string& (0+255),b
  8350  000C7E  0E7F               	movlw	high (STR_146+1)
  8351  000C80  0100               	movlb	0	; () banked
  8352  000C82  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8353  000C84  0E07               	movlw	7
  8354  000C86  0100               	movlb	0	; () banked
  8355  000C88  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8356  000C8A  0E02               	movlw	2
  8357  000C8C  0100               	movlb	0	; () banked
  8358  000C8E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8359  000C90  EC30  F028         	call	_oled_putString	;wreg free
  8360                           
  8361                           ;MOTEapp.c: 789: break;
  8362  000C94  D051               	goto	l13057
  8363  000C96                     l13045:
  8364                           
  8365                           ;MOTEapp.c: 791: oled_putString("15",7,2);
  8366  000C96  0EEC               	movlw	low (STR_147+1)
  8367  000C98  0100               	movlb	0	; () banked
  8368  000C9A  6FC0               	movwf	oled_putString@string& (0+255),b
  8369  000C9C  0E7F               	movlw	high (STR_147+1)
  8370  000C9E  0100               	movlb	0	; () banked
  8371  000CA0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8372  000CA2  0E07               	movlw	7
  8373  000CA4  0100               	movlb	0	; () banked
  8374  000CA6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8375  000CA8  0E02               	movlw	2
  8376  000CAA  0100               	movlb	0	; () banked
  8377  000CAC  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8378  000CAE  EC30  F028         	call	_oled_putString	;wreg free
  8379                           
  8380                           ;MOTEapp.c: 792: break;
  8381  000CB2  D042               	goto	l13057
  8382  000CB4                     l13047:
  8383                           
  8384                           ;MOTEapp.c: 794: oled_putString("30",7,2);
  8385  000CB4  0EE4               	movlw	low (STR_148+1)
  8386  000CB6  0100               	movlb	0	; () banked
  8387  000CB8  6FC0               	movwf	oled_putString@string& (0+255),b
  8388  000CBA  0E7F               	movlw	high (STR_148+1)
  8389  000CBC  0100               	movlb	0	; () banked
  8390  000CBE  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8391  000CC0  0E07               	movlw	7
  8392  000CC2  0100               	movlb	0	; () banked
  8393  000CC4  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8394  000CC6  0E02               	movlw	2
  8395  000CC8  0100               	movlb	0	; () banked
  8396  000CCA  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8397  000CCC  EC30  F028         	call	_oled_putString	;wreg free
  8398                           
  8399                           ;MOTEapp.c: 795: break;
  8400  000CD0  D033               	goto	l13057
  8401  000CD2                     l13049:
  8402                           
  8403                           ;MOTEapp.c: 797: oled_putString("60",7,2);
  8404  000CD2  0EE8               	movlw	low (STR_149+1)
  8405  000CD4  0100               	movlb	0	; () banked
  8406  000CD6  6FC0               	movwf	oled_putString@string& (0+255),b
  8407  000CD8  0E7F               	movlw	high (STR_149+1)
  8408  000CDA  0100               	movlb	0	; () banked
  8409  000CDC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8410  000CDE  0E07               	movlw	7
  8411  000CE0  0100               	movlb	0	; () banked
  8412  000CE2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8413  000CE4  0E02               	movlw	2
  8414  000CE6  0100               	movlb	0	; () banked
  8415  000CE8  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8416  000CEA  EC30  F028         	call	_oled_putString	;wreg free
  8417                           
  8418                           ;MOTEapp.c: 798: break;
  8419  000CEE  D024               	goto	l13057
  8420  000CF0                     l13051:
  8421                           
  8422                           ;MOTEapp.c: 800: oled_putString("OFF",7,2);
  8423  000CF0  0EEF               	movlw	low STR_128
  8424  000CF2  0100               	movlb	0	; () banked
  8425  000CF4  6FC0               	movwf	oled_putString@string& (0+255),b
  8426  000CF6  0E7F               	movlw	high STR_128
  8427  000CF8  0100               	movlb	0	; () banked
  8428  000CFA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8429  000CFC  0E07               	movlw	7
  8430  000CFE  0100               	movlb	0	; () banked
  8431  000D00  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8432  000D02  0E02               	movlw	2
  8433  000D04  0100               	movlb	0	; () banked
  8434  000D06  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8435  000D08  EC30  F028         	call	_oled_putString	;wreg free
  8436                           
  8437                           ;MOTEapp.c: 802: }
  8438                           
  8439                           ;MOTEapp.c: 801: break;
  8440  000D0C  D015               	goto	l13057
  8441  000D0E                     l13055:
  8442  000D0E  0100               	movlb	0	; () banked
  8443  000D10  51FE               	movf	_periodicUpValue& (0+255),w,b
  8444                           
  8445                           ; Switch size 1, requested type "space"
  8446                           ; Number of cases is 6, Range of values is 0 to 5
  8447                           ; switch strategies available:
  8448                           ; Name         Instructions Cycles
  8449                           ; simple_byte           19    10 (average)
  8450                           ;	Chosen strategy is simple_byte
  8451  000D12  0A00               	xorlw	0	; case 0
  8452  000D14  B4D8               	btfsc	status,2,c
  8453  000D16  D7A1               	goto	l13041
  8454  000D18  0A01               	xorlw	1	; case 1
  8455  000D1A  B4D8               	btfsc	status,2,c
  8456  000D1C  D7AD               	goto	l13043
  8457  000D1E  0A03               	xorlw	3	; case 2
  8458  000D20  B4D8               	btfsc	status,2,c
  8459  000D22  D7B9               	goto	l13045
  8460  000D24  0A01               	xorlw	1	; case 3
  8461  000D26  B4D8               	btfsc	status,2,c
  8462  000D28  D7C5               	goto	l13047
  8463  000D2A  0A07               	xorlw	7	; case 4
  8464  000D2C  B4D8               	btfsc	status,2,c
  8465  000D2E  D7D1               	goto	l13049
  8466  000D30  0A01               	xorlw	1	; case 5
  8467  000D32  B4D8               	btfsc	status,2,c
  8468  000D34  D7DD               	goto	l13051
  8469  000D36  D791               	goto	l13041
  8470  000D38                     l13057:
  8471                           
  8472                           ;MOTEapp.c: 803: oled_putString("(NAV)    (CNG) ",0,3);
  8473  000D38  0E96               	movlw	low STR_114
  8474  000D3A  0100               	movlb	0	; () banked
  8475  000D3C  6FC0               	movwf	oled_putString@string& (0+255),b
  8476  000D3E  0E7C               	movlw	high STR_114
  8477  000D40  0100               	movlb	0	; () banked
  8478  000D42  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8479  000D44  0E00               	movlw	0
  8480  000D46  0100               	movlb	0	; () banked
  8481  000D48  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8482  000D4A  0E03               	movlw	3
  8483  000D4C  0100               	movlb	0	; () banked
  8484  000D4E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8485  000D50  EC30  F028         	call	_oled_putString	;wreg free
  8486                           
  8487                           ;MOTEapp.c: 804: runningState = runningPeriodicWakeUpLength;
  8488  000D54  0E0D               	movlw	13
  8489  000D56  0100               	movlb	0	; () banked
  8490  000D58  6FA5               	movwf	_runningState& (0+255),b
  8491                           
  8492                           ;MOTEapp.c: 805: }
  8493  000D5A  0012               	return	
  8494  000D5C                     l13061:
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;MOTEapp.c: 806: else if (selectButton)
  8498  000D5C  0100               	movlb	0	; () banked
  8499  000D5E  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8500  000D60  0100               	movlb	0	; () banked
  8501  000D62  B4D8               	btfsc	status,2,c
  8502  000D64  0012               	return	
  8503                           
  8504                           ; BSR set to: 0
  8505                           ;MOTEapp.c: 807: {
  8506                           ;MOTEapp.c: 808: if (menuTimeout)
  8507  000D66  0100               	movlb	0	; () banked
  8508  000D68  51FA               	movf	_menuTimeout& (0+255),w,b
  8509  000D6A  B4D8               	btfsc	status,2,c
  8510  000D6C  D012               	goto	l13069
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;MOTEapp.c: 809: {
  8514                           ;MOTEapp.c: 810: menuTimeout = 0;
  8515  000D6E  0E00               	movlw	0
  8516  000D70  0100               	movlb	0	; () banked
  8517  000D72  6FFA               	movwf	_menuTimeout& (0+255),b
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;MOTEapp.c: 811: oled_putString("    Disabled  ", 0,2);
  8521  000D74  0E05               	movlw	low STR_113
  8522  000D76  0100               	movlb	0	; () banked
  8523  000D78  6FC0               	movwf	oled_putString@string& (0+255),b
  8524  000D7A  0E7D               	movlw	high STR_113
  8525  000D7C  0100               	movlb	0	; () banked
  8526  000D7E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8527  000D80  0E00               	movlw	0
  8528  000D82  0100               	movlb	0	; () banked
  8529  000D84  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8530  000D86  0E02               	movlw	2
  8531  000D88  0100               	movlb	0	; () banked
  8532  000D8A  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8533  000D8C  EC30  F028         	call	_oled_putString	;wreg free
  8534                           
  8535                           ;MOTEapp.c: 812: }
  8536  000D90  0012               	return	
  8537  000D92                     l13069:
  8538                           
  8539                           ;MOTEapp.c: 813: else
  8540                           ;MOTEapp.c: 814: {
  8541                           ;MOTEapp.c: 815: menuTimeout = 1;
  8542  000D92  0E01               	movlw	1
  8543  000D94  0100               	movlb	0	; () banked
  8544  000D96  6FFA               	movwf	_menuTimeout& (0+255),b
  8545                           
  8546                           ; BSR set to: 0
  8547                           ;MOTEapp.c: 816: oled_putString("    Enabled   ", 0,2);
  8548  000D98  0EF6               	movlw	low STR_112
  8549  000D9A  0100               	movlb	0	; () banked
  8550  000D9C  6FC0               	movwf	oled_putString@string& (0+255),b
  8551  000D9E  0E7C               	movlw	high STR_112
  8552  000DA0  0100               	movlb	0	; () banked
  8553  000DA2  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8554  000DA4  0E00               	movlw	0
  8555  000DA6  0100               	movlb	0	; () banked
  8556  000DA8  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8557  000DAA  0E02               	movlw	2
  8558  000DAC  0100               	movlb	0	; () banked
  8559  000DAE  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8560  000DB0  EC30  F028         	call	_oled_putString	;wreg free
  8561                           
  8562                           ;MOTEapp.c: 817: }
  8563                           ;MOTEapp.c: 818: }
  8564                           ;MOTEapp.c: 819: break;
  8565  000DB4  0012               	return	
  8566  000DB6                     l13073:
  8567                           
  8568                           ;MOTEapp.c: 822: if ( (changeStates) || (selectButton) )
  8569  000DB6  0100               	movlb	0	; () banked
  8570  000DB8  51F4               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8571  000DBA  0100               	movlb	0	; () banked
  8572  000DBC  A4D8               	btfss	status,2,c
  8573  000DBE  D005               	goto	l13077
  8574                           
  8575                           ; BSR set to: 0
  8576  000DC0  0100               	movlb	0	; () banked
  8577  000DC2  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8578  000DC4  0100               	movlb	0	; () banked
  8579  000DC6  B4D8               	btfsc	status,2,c
  8580  000DC8  0012               	return	
  8581  000DCA                     l13077:
  8582                           
  8583                           ; BSR set to: 0
  8584                           ;MOTEapp.c: 823: {
  8585                           ;MOTEapp.c: 824: oled_clear();
  8586  000DCA  ECB6  F02E         	call	_oled_clear	;wreg free
  8587                           
  8588                           ;MOTEapp.c: 825: oled_putString("  Sensor Data  ",0,0);
  8589  000DCE  0E86               	movlw	low STR_102
  8590  000DD0  0100               	movlb	0	; () banked
  8591  000DD2  6FC0               	movwf	oled_putString@string& (0+255),b
  8592  000DD4  0E7C               	movlw	high STR_102
  8593  000DD6  0100               	movlb	0	; () banked
  8594  000DD8  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8595  000DDA  0E00               	movlw	0
  8596  000DDC  0100               	movlb	0	; () banked
  8597  000DDE  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8598  000DE0  0E00               	movlw	0
  8599  000DE2  0100               	movlb	0	; () banked
  8600  000DE4  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8601  000DE6  EC30  F028         	call	_oled_putString	;wreg free
  8602                           
  8603                           ;MOTEapp.c: 826: oled_putString("    Display    ",0,1);
  8604  000DEA  0E76               	movlw	low STR_103
  8605  000DEC  0100               	movlb	0	; () banked
  8606  000DEE  6FC0               	movwf	oled_putString@string& (0+255),b
  8607  000DF0  0E7C               	movlw	high STR_103
  8608  000DF2  0100               	movlb	0	; () banked
  8609  000DF4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8610  000DF6  0E00               	movlw	0
  8611  000DF8  0100               	movlb	0	; () banked
  8612  000DFA  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8613  000DFC  0E01               	movlw	1
  8614  000DFE  0100               	movlb	0	; () banked
  8615  000E00  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8616  000E02  EC30  F028         	call	_oled_putString	;wreg free
  8617                           
  8618                           ;MOTEapp.c: 827: oled_putString("(NAV)    (SEL) ",0,3);
  8619  000E06  0EA6               	movlw	low STR_77
  8620  000E08  0100               	movlb	0	; () banked
  8621  000E0A  6FC0               	movwf	oled_putString@string& (0+255),b
  8622  000E0C  0E7C               	movlw	high STR_77
  8623  000E0E  0100               	movlb	0	; () banked
  8624  000E10  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8625  000E12  0E00               	movlw	0
  8626  000E14  0100               	movlb	0	; () banked
  8627  000E16  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8628  000E18  0E03               	movlw	3
  8629  000E1A  0100               	movlb	0	; () banked
  8630  000E1C  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8631  000E1E  EC30  F028         	call	_oled_putString	;wreg free
  8632                           
  8633                           ;MOTEapp.c: 828: runningState = runningSensor;
  8634  000E22  0E01               	movlw	1
  8635  000E24  0100               	movlb	0	; () banked
  8636  000E26  6FA5               	movwf	_runningState& (0+255),b
  8637                           
  8638                           ; BSR set to: 0
  8639                           ;MOTEapp.c: 829: }
  8640                           ;MOTEapp.c: 830: break;
  8641  000E28  0012               	return	
  8642  000E2A                     l13087:
  8643                           
  8644                           ; BSR set to: 0
  8645                           ;MOTEapp.c: 832: if (changeStates)
  8646  000E2A  0100               	movlb	0	; () banked
  8647  000E2C  51F4               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8648  000E2E  0100               	movlb	0	; () banked
  8649  000E30  B4D8               	btfsc	status,2,c
  8650  000E32  D0B3               	goto	l13117
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;MOTEapp.c: 833: {
  8654                           ;MOTEapp.c: 834: oled_clear();
  8655  000E34  ECB6  F02E         	call	_oled_clear	;wreg free
  8656                           
  8657                           ;MOTEapp.c: 835: oled_putString("Select Data Rate",0,0);
  8658  000E38  0E10               	movlw	low STR_135
  8659  000E3A  0100               	movlb	0	; () banked
  8660  000E3C  6FC0               	movwf	oled_putString@string& (0+255),b
  8661  000E3E  0E7C               	movlw	high STR_135
  8662  000E40  0100               	movlb	0	; () banked
  8663  000E42  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8664  000E44  0E00               	movlw	0
  8665  000E46  0100               	movlb	0	; () banked
  8666  000E48  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8667  000E4A  0E00               	movlw	0
  8668  000E4C  0100               	movlb	0	; () banked
  8669  000E4E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8670  000E50  EC30  F028         	call	_oled_putString	;wreg free
  8671                           
  8672                           ;MOTEapp.c: 836: oled_putString("Data Rate: ",0,2);
  8673  000E54  0E4F               	movlw	low STR_136
  8674  000E56  0100               	movlb	0	; () banked
  8675  000E58  6FC0               	movwf	oled_putString@string& (0+255),b
  8676  000E5A  0E7E               	movlw	high STR_136
  8677  000E5C  0100               	movlb	0	; () banked
  8678  000E5E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8679  000E60  0E00               	movlw	0
  8680  000E62  0100               	movlb	0	; () banked
  8681  000E64  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8682  000E66  0E02               	movlw	2
  8683  000E68  0100               	movlb	0	; () banked
  8684  000E6A  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8685  000E6C  EC30  F028         	call	_oled_putString	;wreg free
  8686                           
  8687                           ;MOTEapp.c: 837: oled_putString("(NAV)    (CNG) ",0,3);
  8688  000E70  0E96               	movlw	low STR_114
  8689  000E72  0100               	movlb	0	; () banked
  8690  000E74  6FC0               	movwf	oled_putString@string& (0+255),b
  8691  000E76  0E7C               	movlw	high STR_114
  8692  000E78  0100               	movlb	0	; () banked
  8693  000E7A  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8694  000E7C  0E00               	movlw	0
  8695  000E7E  0100               	movlb	0	; () banked
  8696  000E80  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8697  000E82  0E03               	movlw	3
  8698  000E84  0100               	movlb	0	; () banked
  8699  000E86  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8700  000E88  EC30  F028         	call	_oled_putString	;wreg free
  8701                           
  8702                           ;MOTEapp.c: 838: runningState = runningDataRateDisplay;
  8703  000E8C  0E03               	movlw	3
  8704  000E8E  0100               	movlb	0	; () banked
  8705  000E90  6FA5               	movwf	_runningState& (0+255),b
  8706                           
  8707                           ;MOTEapp.c: 841: switch (dataRateValue)
  8708  000E92  D06A               	goto	l13115
  8709                           
  8710                           ; BSR set to: 0
  8711                           
  8712                           ;MOTEapp.c: 842: {
  8713                           ;MOTEapp.c: 843: default:
  8714  000E94  D000               	goto	l13099
  8715  000E96                     l13099:
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;MOTEapp.c: 845: oled_putString(" 0 ",10,2);
  8719  000E96  0EC7               	movlw	low STR_138
  8720  000E98  0100               	movlb	0	; () banked
  8721  000E9A  6FC0               	movwf	oled_putString@string& (0+255),b
  8722  000E9C  0E7F               	movlw	high STR_138
  8723  000E9E  0100               	movlb	0	; () banked
  8724  000EA0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8725  000EA2  0E0A               	movlw	10
  8726  000EA4  0100               	movlb	0	; () banked
  8727  000EA6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8728  000EA8  0E02               	movlw	2
  8729  000EAA  0100               	movlb	0	; () banked
  8730  000EAC  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8731  000EAE  EC30  F028         	call	_oled_putString	;wreg free
  8732                           
  8733                           ;MOTEapp.c: 846: break;
  8734  000EB2  D073               	goto	l13117
  8735  000EB4                     l13101:
  8736                           
  8737                           ;MOTEapp.c: 848: oled_putString(" 1 ",10,2);
  8738  000EB4  0ECB               	movlw	low STR_139
  8739  000EB6  0100               	movlb	0	; () banked
  8740  000EB8  6FC0               	movwf	oled_putString@string& (0+255),b
  8741  000EBA  0E7F               	movlw	high STR_139
  8742  000EBC  0100               	movlb	0	; () banked
  8743  000EBE  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8744  000EC0  0E0A               	movlw	10
  8745  000EC2  0100               	movlb	0	; () banked
  8746  000EC4  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8747  000EC6  0E02               	movlw	2
  8748  000EC8  0100               	movlb	0	; () banked
  8749  000ECA  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8750  000ECC  EC30  F028         	call	_oled_putString	;wreg free
  8751                           
  8752                           ;MOTEapp.c: 849: break;
  8753  000ED0  D064               	goto	l13117
  8754  000ED2                     l13103:
  8755                           
  8756                           ;MOTEapp.c: 851: oled_putString(" 2 ",10,2);
  8757  000ED2  0ECF               	movlw	low STR_140
  8758  000ED4  0100               	movlb	0	; () banked
  8759  000ED6  6FC0               	movwf	oled_putString@string& (0+255),b
  8760  000ED8  0E7F               	movlw	high STR_140
  8761  000EDA  0100               	movlb	0	; () banked
  8762  000EDC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8763  000EDE  0E0A               	movlw	10
  8764  000EE0  0100               	movlb	0	; () banked
  8765  000EE2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8766  000EE4  0E02               	movlw	2
  8767  000EE6  0100               	movlb	0	; () banked
  8768  000EE8  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8769  000EEA  EC30  F028         	call	_oled_putString	;wreg free
  8770                           
  8771                           ;MOTEapp.c: 852: break;
  8772  000EEE  D055               	goto	l13117
  8773  000EF0                     l13105:
  8774                           
  8775                           ;MOTEapp.c: 854: oled_putString(" 3 ",10,2);
  8776  000EF0  0ED3               	movlw	low STR_141
  8777  000EF2  0100               	movlb	0	; () banked
  8778  000EF4  6FC0               	movwf	oled_putString@string& (0+255),b
  8779  000EF6  0E7F               	movlw	high STR_141
  8780  000EF8  0100               	movlb	0	; () banked
  8781  000EFA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8782  000EFC  0E0A               	movlw	10
  8783  000EFE  0100               	movlb	0	; () banked
  8784  000F00  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8785  000F02  0E02               	movlw	2
  8786  000F04  0100               	movlb	0	; () banked
  8787  000F06  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8788  000F08  EC30  F028         	call	_oled_putString	;wreg free
  8789                           
  8790                           ;MOTEapp.c: 855: break;
  8791  000F0C  D046               	goto	l13117
  8792  000F0E                     l13107:
  8793                           
  8794                           ;MOTEapp.c: 857: oled_putString(" 4 ",10,2);
  8795  000F0E  0ED7               	movlw	low STR_142
  8796  000F10  0100               	movlb	0	; () banked
  8797  000F12  6FC0               	movwf	oled_putString@string& (0+255),b
  8798  000F14  0E7F               	movlw	high STR_142
  8799  000F16  0100               	movlb	0	; () banked
  8800  000F18  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8801  000F1A  0E0A               	movlw	10
  8802  000F1C  0100               	movlb	0	; () banked
  8803  000F1E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8804  000F20  0E02               	movlw	2
  8805  000F22  0100               	movlb	0	; () banked
  8806  000F24  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8807  000F26  EC30  F028         	call	_oled_putString	;wreg free
  8808                           
  8809                           ;MOTEapp.c: 858: break;
  8810  000F2A  D037               	goto	l13117
  8811  000F2C                     l13109:
  8812                           
  8813                           ;MOTEapp.c: 860: oled_putString(" 5 ",10,2);
  8814  000F2C  0EDB               	movlw	low STR_143
  8815  000F2E  0100               	movlb	0	; () banked
  8816  000F30  6FC0               	movwf	oled_putString@string& (0+255),b
  8817  000F32  0E7F               	movlw	high STR_143
  8818  000F34  0100               	movlb	0	; () banked
  8819  000F36  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8820  000F38  0E0A               	movlw	10
  8821  000F3A  0100               	movlb	0	; () banked
  8822  000F3C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8823  000F3E  0E02               	movlw	2
  8824  000F40  0100               	movlb	0	; () banked
  8825  000F42  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8826  000F44  EC30  F028         	call	_oled_putString	;wreg free
  8827                           
  8828                           ;MOTEapp.c: 861: break;
  8829  000F48  D028               	goto	l13117
  8830  000F4A                     l13111:
  8831                           
  8832                           ;MOTEapp.c: 863: oled_putString("ADR",10,2);
  8833  000F4A  0EF3               	movlw	low STR_144
  8834  000F4C  0100               	movlb	0	; () banked
  8835  000F4E  6FC0               	movwf	oled_putString@string& (0+255),b
  8836  000F50  0E7F               	movlw	high STR_144
  8837  000F52  0100               	movlb	0	; () banked
  8838  000F54  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8839  000F56  0E0A               	movlw	10
  8840  000F58  0100               	movlb	0	; () banked
  8841  000F5A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8842  000F5C  0E02               	movlw	2
  8843  000F5E  0100               	movlb	0	; () banked
  8844  000F60  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8845  000F62  EC30  F028         	call	_oled_putString	;wreg free
  8846                           
  8847                           ;MOTEapp.c: 865: }
  8848                           
  8849                           ;MOTEapp.c: 864: break;
  8850  000F66  D019               	goto	l13117
  8851  000F68                     l13115:
  8852  000F68  0100               	movlb	0	; () banked
  8853  000F6A  51F8               	movf	_dataRateValue& (0+255),w,b
  8854                           
  8855                           ; Switch size 1, requested type "space"
  8856                           ; Number of cases is 7, Range of values is 0 to 6
  8857                           ; switch strategies available:
  8858                           ; Name         Instructions Cycles
  8859                           ; simple_byte           22    12 (average)
  8860                           ;	Chosen strategy is simple_byte
  8861  000F6C  0A00               	xorlw	0	; case 0
  8862  000F6E  B4D8               	btfsc	status,2,c
  8863  000F70  D792               	goto	l13099
  8864  000F72  0A01               	xorlw	1	; case 1
  8865  000F74  B4D8               	btfsc	status,2,c
  8866  000F76  D79E               	goto	l13101
  8867  000F78  0A03               	xorlw	3	; case 2
  8868  000F7A  B4D8               	btfsc	status,2,c
  8869  000F7C  D7AA               	goto	l13103
  8870  000F7E  0A01               	xorlw	1	; case 3
  8871  000F80  B4D8               	btfsc	status,2,c
  8872  000F82  D7B6               	goto	l13105
  8873  000F84  0A07               	xorlw	7	; case 4
  8874  000F86  B4D8               	btfsc	status,2,c
  8875  000F88  D7C2               	goto	l13107
  8876  000F8A  0A01               	xorlw	1	; case 5
  8877  000F8C  B4D8               	btfsc	status,2,c
  8878  000F8E  D7CE               	goto	l13109
  8879  000F90  0A03               	xorlw	3	; case 6
  8880  000F92  B4D8               	btfsc	status,2,c
  8881  000F94  D7DA               	goto	l13111
  8882  000F96  D77F               	goto	l13099
  8883                           
  8884                           ; BSR set to: 0
  8885  000F98  D000               	goto	l13117
  8886  000F9A                     l13117:
  8887                           
  8888                           ;MOTEapp.c: 866: }
  8889                           ;MOTEapp.c: 867: if (selectButton)
  8890  000F9A  0100               	movlb	0	; () banked
  8891  000F9C  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8892  000F9E  0100               	movlb	0	; () banked
  8893  000FA0  B4D8               	btfsc	status,2,c
  8894  000FA2  0012               	return	
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;MOTEapp.c: 868: {
  8898                           ;MOTEapp.c: 869: if (periodicUpValue < 5)
  8899  000FA4  0E05               	movlw	5
  8900  000FA6  0100               	movlb	0	; () banked
  8901  000FA8  61FE               	cpfslt	_periodicUpValue& (0+255),b
  8902  000FAA  D003               	goto	l13123
  8903                           
  8904                           ; BSR set to: 0
  8905                           ;MOTEapp.c: 870: {
  8906                           ;MOTEapp.c: 871: periodicUpValue++;
  8907  000FAC  0100               	movlb	0	; () banked
  8908  000FAE  2BFE               	incf	_periodicUpValue& (0+255),f,b
  8909                           
  8910                           ;MOTEapp.c: 872: } else {
  8911  000FB0  D070               	goto	l13149
  8912  000FB2                     l13123:
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;MOTEapp.c: 873: periodicUpValue = 0;
  8916  000FB2  0E00               	movlw	0
  8917  000FB4  0100               	movlb	0	; () banked
  8918  000FB6  6FFE               	movwf	_periodicUpValue& (0+255),b
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;MOTEapp.c: 874: }
  8922                           ;MOTEapp.c: 876: switch (periodicUpValue)
  8923  000FB8  D06C               	goto	l13149
  8924                           
  8925                           ; BSR set to: 0
  8926                           
  8927                           ;MOTEapp.c: 877: {
  8928                           ;MOTEapp.c: 878: default:
  8929  000FBA  D000               	goto	l13125
  8930  000FBC                     l13125:
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;MOTEapp.c: 880: periodicTimerValue = 9;
  8934  000FBC  0E09               	movlw	9
  8935  000FBE  0100               	movlb	0	; () banked
  8936  000FC0  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;MOTEapp.c: 881: oled_putString(" 5 ",7,2);
  8940  000FC2  0EDB               	movlw	low STR_143
  8941  000FC4  0100               	movlb	0	; () banked
  8942  000FC6  6FC0               	movwf	oled_putString@string& (0+255),b
  8943  000FC8  0E7F               	movlw	high STR_143
  8944  000FCA  0100               	movlb	0	; () banked
  8945  000FCC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8946  000FCE  0E07               	movlw	7
  8947  000FD0  0100               	movlb	0	; () banked
  8948  000FD2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8949  000FD4  0E02               	movlw	2
  8950  000FD6  0100               	movlb	0	; () banked
  8951  000FD8  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8952  000FDA  EC30  F028         	call	_oled_putString	;wreg free
  8953                           
  8954                           ;MOTEapp.c: 882: break;
  8955  000FDE  0012               	return	
  8956  000FE0                     l13129:
  8957                           
  8958                           ;MOTEapp.c: 884: periodicTimerValue = 18;
  8959  000FE0  0E12               	movlw	18
  8960  000FE2  0100               	movlb	0	; () banked
  8961  000FE4  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8962                           
  8963                           ; BSR set to: 0
  8964                           ;MOTEapp.c: 885: oled_putString(" 10",7,2);
  8965  000FE6  0EDF               	movlw	low STR_146
  8966  000FE8  0100               	movlb	0	; () banked
  8967  000FEA  6FC0               	movwf	oled_putString@string& (0+255),b
  8968  000FEC  0E7F               	movlw	high STR_146
  8969  000FEE  0100               	movlb	0	; () banked
  8970  000FF0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8971  000FF2  0E07               	movlw	7
  8972  000FF4  0100               	movlb	0	; () banked
  8973  000FF6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8974  000FF8  0E02               	movlw	2
  8975  000FFA  0100               	movlb	0	; () banked
  8976  000FFC  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8977  000FFE  EC30  F028         	call	_oled_putString	;wreg free
  8978                           
  8979                           ;MOTEapp.c: 886: break;
  8980  001002  0012               	return	
  8981  001004                     l13133:
  8982                           
  8983                           ;MOTEapp.c: 888: periodicTimerValue = 27;
  8984  001004  0E1B               	movlw	27
  8985  001006  0100               	movlb	0	; () banked
  8986  001008  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;MOTEapp.c: 889: oled_putString(" 15",7,2);
  8990  00100A  0EEB               	movlw	low STR_147
  8991  00100C  0100               	movlb	0	; () banked
  8992  00100E  6FC0               	movwf	oled_putString@string& (0+255),b
  8993  001010  0E7F               	movlw	high STR_147
  8994  001012  0100               	movlb	0	; () banked
  8995  001014  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8996  001016  0E07               	movlw	7
  8997  001018  0100               	movlb	0	; () banked
  8998  00101A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8999  00101C  0E02               	movlw	2
  9000  00101E  0100               	movlb	0	; () banked
  9001  001020  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9002  001022  EC30  F028         	call	_oled_putString	;wreg free
  9003                           
  9004                           ;MOTEapp.c: 890: break;
  9005  001026  0012               	return	
  9006  001028                     l13137:
  9007                           
  9008                           ;MOTEapp.c: 892: periodicTimerValue = 54;
  9009  001028  0E36               	movlw	54
  9010  00102A  0100               	movlb	0	; () banked
  9011  00102C  6FFD               	movwf	_periodicTimerValue& (0+255),b
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;MOTEapp.c: 893: oled_putString(" 30",7,2);
  9015  00102E  0EE3               	movlw	low STR_148
  9016  001030  0100               	movlb	0	; () banked
  9017  001032  6FC0               	movwf	oled_putString@string& (0+255),b
  9018  001034  0E7F               	movlw	high STR_148
  9019  001036  0100               	movlb	0	; () banked
  9020  001038  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9021  00103A  0E07               	movlw	7
  9022  00103C  0100               	movlb	0	; () banked
  9023  00103E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9024  001040  0E02               	movlw	2
  9025  001042  0100               	movlb	0	; () banked
  9026  001044  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9027  001046  EC30  F028         	call	_oled_putString	;wreg free
  9028                           
  9029                           ;MOTEapp.c: 894: break;
  9030  00104A  0012               	return	
  9031  00104C                     l13141:
  9032                           
  9033                           ;MOTEapp.c: 896: periodicTimerValue = 108;
  9034  00104C  0E6C               	movlw	108
  9035  00104E  0100               	movlb	0	; () banked
  9036  001050  6FFD               	movwf	_periodicTimerValue& (0+255),b
  9037                           
  9038                           ; BSR set to: 0
  9039                           ;MOTEapp.c: 897: oled_putString(" 60",7,2);
  9040  001052  0EE7               	movlw	low STR_149
  9041  001054  0100               	movlb	0	; () banked
  9042  001056  6FC0               	movwf	oled_putString@string& (0+255),b
  9043  001058  0E7F               	movlw	high STR_149
  9044  00105A  0100               	movlb	0	; () banked
  9045  00105C  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9046  00105E  0E07               	movlw	7
  9047  001060  0100               	movlb	0	; () banked
  9048  001062  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9049  001064  0E02               	movlw	2
  9050  001066  0100               	movlb	0	; () banked
  9051  001068  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9052  00106A  EC30  F028         	call	_oled_putString	;wreg free
  9053                           
  9054                           ;MOTEapp.c: 898: break;
  9055  00106E  0012               	return	
  9056  001070                     l571:
  9057                           
  9058                           ; BSR set to: 0
  9059                           ;MOTEapp.c: 900: periodicTimerValue = 255;
  9060  001070  0100               	movlb	0	; () banked
  9061  001072  69FD               	setf	_periodicTimerValue& (0+255),b
  9062                           
  9063                           ; BSR set to: 0
  9064                           ;MOTEapp.c: 901: oled_putString("OFF",7,2);
  9065  001074  0EEF               	movlw	low STR_128
  9066  001076  0100               	movlb	0	; () banked
  9067  001078  6FC0               	movwf	oled_putString@string& (0+255),b
  9068  00107A  0E7F               	movlw	high STR_128
  9069  00107C  0100               	movlb	0	; () banked
  9070  00107E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9071  001080  0E07               	movlw	7
  9072  001082  0100               	movlb	0	; () banked
  9073  001084  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9074  001086  0E02               	movlw	2
  9075  001088  0100               	movlb	0	; () banked
  9076  00108A  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9077  00108C  EC30  F028         	call	_oled_putString	;wreg free
  9078                           
  9079                           ;MOTEapp.c: 903: }
  9080                           
  9081                           ;MOTEapp.c: 902: break;
  9082  001090  0012               	return	
  9083  001092                     l13149:
  9084  001092  0100               	movlb	0	; () banked
  9085  001094  51FE               	movf	_periodicUpValue& (0+255),w,b
  9086                           
  9087                           ; Switch size 1, requested type "space"
  9088                           ; Number of cases is 6, Range of values is 0 to 5
  9089                           ; switch strategies available:
  9090                           ; Name         Instructions Cycles
  9091                           ; simple_byte           19    10 (average)
  9092                           ;	Chosen strategy is simple_byte
  9093  001096  0A00               	xorlw	0	; case 0
  9094  001098  B4D8               	btfsc	status,2,c
  9095  00109A  D790               	goto	l13125
  9096  00109C  0A01               	xorlw	1	; case 1
  9097  00109E  B4D8               	btfsc	status,2,c
  9098  0010A0  D79F               	goto	l13129
  9099  0010A2  0A03               	xorlw	3	; case 2
  9100  0010A4  B4D8               	btfsc	status,2,c
  9101  0010A6  D7AE               	goto	l13133
  9102  0010A8  0A01               	xorlw	1	; case 3
  9103  0010AA  B4D8               	btfsc	status,2,c
  9104  0010AC  D7BD               	goto	l13137
  9105  0010AE  0A07               	xorlw	7	; case 4
  9106  0010B0  B4D8               	btfsc	status,2,c
  9107  0010B2  D7CC               	goto	l13141
  9108  0010B4  0A01               	xorlw	1	; case 5
  9109  0010B6  B4D8               	btfsc	status,2,c
  9110  0010B8  D7DB               	goto	l571
  9111  0010BA  D780               	goto	l13125
  9112                           
  9113                           ; BSR set to: 0
  9114                           ;MOTEapp.c: 904: }
  9115                           ;MOTEapp.c: 905: break;
  9116                           
  9117                           ; BSR set to: 0
  9118  0010BC  0012               	return	
  9119  0010BE                     l13151:
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;MOTEapp.c: 907: if (changeStates)
  9123  0010BE  0100               	movlb	0	; () banked
  9124  0010C0  51F4               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9125  0010C2  0100               	movlb	0	; () banked
  9126  0010C4  B4D8               	btfsc	status,2,c
  9127  0010C6  D026               	goto	l13163
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;MOTEapp.c: 908: {
  9131                           ;MOTEapp.c: 910: MOTEapp_SetDataRateSetting(dataRateValue);
  9132  0010C8  0100               	movlb	0	; () banked
  9133  0010CA  51F8               	movf	_dataRateValue& (0+255),w,b
  9134  0010CC  EC29  F012         	call	_MOTEapp_SetDataRateSetting
  9135                           
  9136                           ;MOTEapp.c: 912: oled_clear();
  9137  0010D0  ECB6  F02E         	call	_oled_clear	;wreg free
  9138                           
  9139                           ;MOTEapp.c: 913: oled_putString("Enter Sleep Mode",0,0);
  9140  0010D4  0EEE               	movlw	low STR_151
  9141  0010D6  0100               	movlb	0	; () banked
  9142  0010D8  6FC0               	movwf	oled_putString@string& (0+255),b
  9143  0010DA  0E7B               	movlw	high STR_151
  9144  0010DC  0100               	movlb	0	; () banked
  9145  0010DE  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9146  0010E0  0E00               	movlw	0
  9147  0010E2  0100               	movlb	0	; () banked
  9148  0010E4  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9149  0010E6  0E00               	movlw	0
  9150  0010E8  0100               	movlb	0	; () banked
  9151  0010EA  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9152  0010EC  EC30  F028         	call	_oled_putString	;wreg free
  9153                           
  9154                           ;MOTEapp.c: 914: oled_putString("(NAV)    (SLP) ",0,3);
  9155  0010F0  0EB6               	movlw	low STR_152
  9156  0010F2  0100               	movlb	0	; () banked
  9157  0010F4  6FC0               	movwf	oled_putString@string& (0+255),b
  9158  0010F6  0E7C               	movlw	high STR_152
  9159  0010F8  0100               	movlb	0	; () banked
  9160  0010FA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9161  0010FC  0E00               	movlw	0
  9162  0010FE  0100               	movlb	0	; () banked
  9163  001100  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9164  001102  0E03               	movlw	3
  9165  001104  0100               	movlb	0	; () banked
  9166  001106  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9167  001108  EC30  F028         	call	_oled_putString	;wreg free
  9168                           
  9169                           ;MOTEapp.c: 915: runningState = runningSleep;
  9170  00110C  0E0F               	movlw	15
  9171  00110E  0100               	movlb	0	; () banked
  9172  001110  6FA5               	movwf	_runningState& (0+255),b
  9173  001112  D000               	goto	l13163
  9174  001114                     l13163:
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;MOTEapp.c: 916: }
  9178                           ;MOTEapp.c: 917: if (selectButton)
  9179  001114  0100               	movlb	0	; () banked
  9180  001116  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9181  001118  0100               	movlb	0	; () banked
  9182  00111A  B4D8               	btfsc	status,2,c
  9183  00111C  0012               	return	
  9184                           
  9185                           ; BSR set to: 0
  9186                           ;MOTEapp.c: 918: {
  9187                           ;MOTEapp.c: 919: if (dataRateValue < 6)
  9188  00111E  0E06               	movlw	6
  9189  001120  0100               	movlb	0	; () banked
  9190  001122  61F8               	cpfslt	_dataRateValue& (0+255),b
  9191  001124  D00D               	goto	l13175
  9192                           
  9193                           ; BSR set to: 0
  9194                           ;MOTEapp.c: 920: {
  9195                           ;MOTEapp.c: 921: if ((rnModule == rn2903) && (dataRateValue > 3))
  9196  001126  0100               	movlb	0	; () banked
  9197  001128  05A4               	decf	_rnModule& (0+255),w,b
  9198  00112A  A4D8               	btfss	status,2,c
  9199  00112C  D006               	goto	l13173
  9200                           
  9201                           ; BSR set to: 0
  9202  00112E  0E03               	movlw	3
  9203  001130  0100               	movlb	0	; () banked
  9204  001132  65F8               	cpfsgt	_dataRateValue& (0+255),b
  9205  001134  D002               	goto	l13173
  9206                           
  9207                           ; BSR set to: 0
  9208                           ;MOTEapp.c: 922: dataRateValue = 6;
  9209  001136  0E06               	movlw	6
  9210  001138  D004               	goto	L5
  9211  00113A                     l13173:
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;MOTEapp.c: 923: else
  9215                           ;MOTEapp.c: 924: dataRateValue++;
  9216  00113A  0100               	movlb	0	; () banked
  9217  00113C  2BF8               	incf	_dataRateValue& (0+255),f,b
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;MOTEapp.c: 925: }
  9221  00113E  D06E               	goto	l13193
  9222  001140                     l13175:
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;MOTEapp.c: 926: else {
  9226                           ;MOTEapp.c: 927: dataRateValue = 0;
  9227  001140  0E00               	movlw	0
  9228  001142                     L5:
  9229  001142  0100               	movlb	0	; () banked
  9230  001144  6FF8               	movwf	_dataRateValue& (0+255),b
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;MOTEapp.c: 928: }
  9234                           ;MOTEapp.c: 930: switch (dataRateValue)
  9235  001146  D06A               	goto	l13193
  9236                           
  9237                           ; BSR set to: 0
  9238                           
  9239                           ;MOTEapp.c: 931: {
  9240                           ;MOTEapp.c: 932: default:
  9241  001148  D000               	goto	l13177
  9242  00114A                     l13177:
  9243                           
  9244                           ; BSR set to: 0
  9245                           ;MOTEapp.c: 934: oled_putString(" 0 ",10,2);
  9246  00114A  0EC7               	movlw	low STR_138
  9247  00114C  0100               	movlb	0	; () banked
  9248  00114E  6FC0               	movwf	oled_putString@string& (0+255),b
  9249  001150  0E7F               	movlw	high STR_138
  9250  001152  0100               	movlb	0	; () banked
  9251  001154  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9252  001156  0E0A               	movlw	10
  9253  001158  0100               	movlb	0	; () banked
  9254  00115A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9255  00115C  0E02               	movlw	2
  9256  00115E  0100               	movlb	0	; () banked
  9257  001160  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9258  001162  EC30  F028         	call	_oled_putString	;wreg free
  9259                           
  9260                           ;MOTEapp.c: 935: break;
  9261  001166  0012               	return	
  9262  001168                     l13179:
  9263                           
  9264                           ;MOTEapp.c: 937: oled_putString(" 1 ",10,2);
  9265  001168  0ECB               	movlw	low STR_139
  9266  00116A  0100               	movlb	0	; () banked
  9267  00116C  6FC0               	movwf	oled_putString@string& (0+255),b
  9268  00116E  0E7F               	movlw	high STR_139
  9269  001170  0100               	movlb	0	; () banked
  9270  001172  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9271  001174  0E0A               	movlw	10
  9272  001176  0100               	movlb	0	; () banked
  9273  001178  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9274  00117A  0E02               	movlw	2
  9275  00117C  0100               	movlb	0	; () banked
  9276  00117E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9277  001180  EC30  F028         	call	_oled_putString	;wreg free
  9278                           
  9279                           ;MOTEapp.c: 938: break;
  9280  001184  0012               	return	
  9281  001186                     l13181:
  9282                           
  9283                           ;MOTEapp.c: 940: oled_putString(" 2 ",10,2);
  9284  001186  0ECF               	movlw	low STR_140
  9285  001188  0100               	movlb	0	; () banked
  9286  00118A  6FC0               	movwf	oled_putString@string& (0+255),b
  9287  00118C  0E7F               	movlw	high STR_140
  9288  00118E  0100               	movlb	0	; () banked
  9289  001190  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9290  001192  0E0A               	movlw	10
  9291  001194  0100               	movlb	0	; () banked
  9292  001196  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9293  001198  0E02               	movlw	2
  9294  00119A  0100               	movlb	0	; () banked
  9295  00119C  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9296  00119E  EC30  F028         	call	_oled_putString	;wreg free
  9297                           
  9298                           ;MOTEapp.c: 941: break;
  9299  0011A2  0012               	return	
  9300  0011A4                     l13183:
  9301                           
  9302                           ;MOTEapp.c: 943: oled_putString(" 3 ",10,2);
  9303  0011A4  0ED3               	movlw	low STR_141
  9304  0011A6  0100               	movlb	0	; () banked
  9305  0011A8  6FC0               	movwf	oled_putString@string& (0+255),b
  9306  0011AA  0E7F               	movlw	high STR_141
  9307  0011AC  0100               	movlb	0	; () banked
  9308  0011AE  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9309  0011B0  0E0A               	movlw	10
  9310  0011B2  0100               	movlb	0	; () banked
  9311  0011B4  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9312  0011B6  0E02               	movlw	2
  9313  0011B8  0100               	movlb	0	; () banked
  9314  0011BA  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9315  0011BC  EC30  F028         	call	_oled_putString	;wreg free
  9316                           
  9317                           ;MOTEapp.c: 944: break;
  9318  0011C0  0012               	return	
  9319  0011C2                     l13185:
  9320                           
  9321                           ;MOTEapp.c: 946: oled_putString(" 4 ",10,2);
  9322  0011C2  0ED7               	movlw	low STR_142
  9323  0011C4  0100               	movlb	0	; () banked
  9324  0011C6  6FC0               	movwf	oled_putString@string& (0+255),b
  9325  0011C8  0E7F               	movlw	high STR_142
  9326  0011CA  0100               	movlb	0	; () banked
  9327  0011CC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9328  0011CE  0E0A               	movlw	10
  9329  0011D0  0100               	movlb	0	; () banked
  9330  0011D2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9331  0011D4  0E02               	movlw	2
  9332  0011D6  0100               	movlb	0	; () banked
  9333  0011D8  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9334  0011DA  EC30  F028         	call	_oled_putString	;wreg free
  9335                           
  9336                           ;MOTEapp.c: 947: break;
  9337  0011DE  0012               	return	
  9338  0011E0                     l13187:
  9339                           
  9340                           ;MOTEapp.c: 949: oled_putString(" 5 ",10,2);
  9341  0011E0  0EDB               	movlw	low STR_143
  9342  0011E2  0100               	movlb	0	; () banked
  9343  0011E4  6FC0               	movwf	oled_putString@string& (0+255),b
  9344  0011E6  0E7F               	movlw	high STR_143
  9345  0011E8  0100               	movlb	0	; () banked
  9346  0011EA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9347  0011EC  0E0A               	movlw	10
  9348  0011EE  0100               	movlb	0	; () banked
  9349  0011F0  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9350  0011F2  0E02               	movlw	2
  9351  0011F4  0100               	movlb	0	; () banked
  9352  0011F6  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9353  0011F8  EC30  F028         	call	_oled_putString	;wreg free
  9354                           
  9355                           ;MOTEapp.c: 950: break;
  9356  0011FC  0012               	return	
  9357  0011FE                     l13189:
  9358                           
  9359                           ;MOTEapp.c: 952: oled_putString("ADR",10,2);
  9360  0011FE  0EF3               	movlw	low STR_144
  9361  001200  0100               	movlb	0	; () banked
  9362  001202  6FC0               	movwf	oled_putString@string& (0+255),b
  9363  001204  0E7F               	movlw	high STR_144
  9364  001206  0100               	movlb	0	; () banked
  9365  001208  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9366  00120A  0E0A               	movlw	10
  9367  00120C  0100               	movlb	0	; () banked
  9368  00120E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9369  001210  0E02               	movlw	2
  9370  001212  0100               	movlb	0	; () banked
  9371  001214  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9372  001216  EC30  F028         	call	_oled_putString	;wreg free
  9373                           
  9374                           ;MOTEapp.c: 954: }
  9375                           
  9376                           ;MOTEapp.c: 953: break;
  9377  00121A  0012               	return	
  9378  00121C                     l13193:
  9379  00121C  0100               	movlb	0	; () banked
  9380  00121E  51F8               	movf	_dataRateValue& (0+255),w,b
  9381                           
  9382                           ; Switch size 1, requested type "space"
  9383                           ; Number of cases is 7, Range of values is 0 to 6
  9384                           ; switch strategies available:
  9385                           ; Name         Instructions Cycles
  9386                           ; simple_byte           22    12 (average)
  9387                           ;	Chosen strategy is simple_byte
  9388  001220  0A00               	xorlw	0	; case 0
  9389  001222  B4D8               	btfsc	status,2,c
  9390  001224  D792               	goto	l13177
  9391  001226  0A01               	xorlw	1	; case 1
  9392  001228  B4D8               	btfsc	status,2,c
  9393  00122A  D79E               	goto	l13179
  9394  00122C  0A03               	xorlw	3	; case 2
  9395  00122E  B4D8               	btfsc	status,2,c
  9396  001230  D7AA               	goto	l13181
  9397  001232  0A01               	xorlw	1	; case 3
  9398  001234  B4D8               	btfsc	status,2,c
  9399  001236  D7B6               	goto	l13183
  9400  001238  0A07               	xorlw	7	; case 4
  9401  00123A  B4D8               	btfsc	status,2,c
  9402  00123C  D7C2               	goto	l13185
  9403  00123E  0A01               	xorlw	1	; case 5
  9404  001240  B4D8               	btfsc	status,2,c
  9405  001242  D7CE               	goto	l13187
  9406  001244  0A03               	xorlw	3	; case 6
  9407  001246  B4D8               	btfsc	status,2,c
  9408  001248  D7DA               	goto	l13189
  9409  00124A  D77F               	goto	l13177
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;MOTEapp.c: 955: }
  9413                           ;MOTEapp.c: 956: break;
  9414                           
  9415                           ; BSR set to: 0
  9416  00124C  0012               	return	
  9417  00124E                     l13195:
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;MOTEapp.c: 958: if (selectButton)
  9421  00124E  0100               	movlb	0	; () banked
  9422  001250  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9423  001252  0100               	movlb	0	; () banked
  9424  001254  B4D8               	btfsc	status,2,c
  9425  001256  D00D               	goto	l590
  9426                           
  9427                           ; BSR set to: 0
  9428                           ;MOTEapp.c: 959: {
  9429                           ;MOTEapp.c: 960: if( moteApp_GoToSleep() )
  9430  001258  EC9D  F01B         	call	_moteApp_GoToSleep	;wreg free
  9431  00125C  0900               	iorlw	0
  9432  00125E  B4D8               	btfsc	status,2,c
  9433  001260  D004               	goto	l13201
  9434                           
  9435                           ;MOTEapp.c: 961: {
  9436                           ;MOTEapp.c: 962: changeStates = 1;
  9437  001262  0E01               	movlw	1
  9438  001264  0100               	movlb	0	; () banked
  9439  001266  6FF4               	movwf	moteRunningProcess@changeStates& (0+255),b
  9440                           
  9441                           ;MOTEapp.c: 963: }
  9442  001268  D004               	goto	l590
  9443  00126A                     l13201:
  9444                           
  9445                           ;MOTEapp.c: 964: else
  9446                           ;MOTEapp.c: 965: {
  9447                           ;MOTEapp.c: 966: secTicker = 10 - 1;
  9448  00126A  0E09               	movlw	9
  9449  00126C  0100               	movlb	0	; () banked
  9450  00126E  6FA6               	movwf	_secTicker& (0+255),b
  9451  001270  D000               	goto	l590
  9452  001272                     l590:
  9453                           
  9454                           ; BSR set to: 0
  9455                           ;MOTEapp.c: 967: }
  9456                           ;MOTEapp.c: 968: }
  9457                           ;MOTEapp.c: 969: if (changeStates)
  9458  001272  0100               	movlb	0	; () banked
  9459  001274  51F4               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9460  001276  0100               	movlb	0	; () banked
  9461  001278  B4D8               	btfsc	status,2,c
  9462  00127A  0012               	return	
  9463                           
  9464                           ; BSR set to: 0
  9465                           ;MOTEapp.c: 970: {
  9466                           ;MOTEapp.c: 971: oled_clear();
  9467  00127C  ECB6  F02E         	call	_oled_clear	;wreg free
  9468                           
  9469                           ;MOTEapp.c: 972: oled_putString("  Issue Uplink  ",0,0);
  9470  001280  0E44               	movlw	low STR_75
  9471  001282  0100               	movlb	0	; () banked
  9472  001284  6FC0               	movwf	oled_putString@string& (0+255),b
  9473  001286  0E7B               	movlw	high STR_75
  9474  001288  0100               	movlb	0	; () banked
  9475  00128A  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9476  00128C  0E00               	movlw	0
  9477  00128E  0100               	movlb	0	; () banked
  9478  001290  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9479  001292  0E00               	movlw	0
  9480  001294  0100               	movlb	0	; () banked
  9481  001296  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9482  001298  EC30  F028         	call	_oled_putString	;wreg free
  9483                           
  9484                           ;MOTEapp.c: 973: oled_putString(" LoRaWAN Packet ",0,1);
  9485  00129C  0EAA               	movlw	low STR_76
  9486  00129E  0100               	movlb	0	; () banked
  9487  0012A0  6FC0               	movwf	oled_putString@string& (0+255),b
  9488  0012A2  0E7B               	movlw	high STR_76
  9489  0012A4  0100               	movlb	0	; () banked
  9490  0012A6  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9491  0012A8  0E00               	movlw	0
  9492  0012AA  0100               	movlb	0	; () banked
  9493  0012AC  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9494  0012AE  0E01               	movlw	1
  9495  0012B0  0100               	movlb	0	; () banked
  9496  0012B2  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9497  0012B4  EC30  F028         	call	_oled_putString	;wreg free
  9498                           
  9499                           ;MOTEapp.c: 974: oled_putString("(NAV)    (SEL) ",0,3);
  9500  0012B8  0EA6               	movlw	low STR_77
  9501  0012BA  0100               	movlb	0	; () banked
  9502  0012BC  6FC0               	movwf	oled_putString@string& (0+255),b
  9503  0012BE  0E7C               	movlw	high STR_77
  9504  0012C0  0100               	movlb	0	; () banked
  9505  0012C2  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9506  0012C4  0E00               	movlw	0
  9507  0012C6  0100               	movlb	0	; () banked
  9508  0012C8  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9509  0012CA  0E03               	movlw	3
  9510  0012CC  0100               	movlb	0	; () banked
  9511  0012CE  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9512  0012D0  EC30  F028         	call	_oled_putString	;wreg free
  9513                           
  9514                           ;MOTEapp.c: 975: runningState = runningUplink;
  9515  0012D4  0E06               	movlw	6
  9516  0012D6  0100               	movlb	0	; () banked
  9517  0012D8  6FA5               	movwf	_runningState& (0+255),b
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;MOTEapp.c: 978: }
  9521                           
  9522                           ; BSR set to: 0
  9523                           ;MOTEapp.c: 976: }
  9524                           ;MOTEapp.c: 977: break;
  9525  0012DA  0012               	return	
  9526  0012DC                     l13215:
  9527                           
  9528                           ; BSR set to: 0
  9529  0012DC  0100               	movlb	0	; () banked
  9530  0012DE  51A5               	movf	_runningState& (0+255),w,b
  9531                           
  9532                           ; Switch size 1, requested type "space"
  9533                           ; Number of cases is 12, Range of values is 0 to 15
  9534                           ; switch strategies available:
  9535                           ; Name         Instructions Cycles
  9536                           ; simple_byte           37    19 (average)
  9537                           ;	Chosen strategy is simple_byte
  9538  0012E0  0A00               	xorlw	0	; case 0
  9539  0012E2  B4D8               	btfsc	status,2,c
  9540  0012E4  EF6E  F001         	goto	l12757
  9541  0012E8  0A01               	xorlw	1	; case 1
  9542  0012EA  B4D8               	btfsc	status,2,c
  9543  0012EC  EF5F  F005         	goto	l12999
  9544  0012F0  0A03               	xorlw	3	; case 2
  9545  0012F2  B4D8               	btfsc	status,2,c
  9546  0012F4  D560               	goto	l13073
  9547  0012F6  0A01               	xorlw	1	; case 3
  9548  0012F8  B4D8               	btfsc	status,2,c
  9549  0012FA  D6E1               	goto	l13151
  9550  0012FC  0A05               	xorlw	5	; case 6
  9551  0012FE  B4D8               	btfsc	status,2,c
  9552  001300  EFA8  F001         	goto	l12771
  9553  001304  0A01               	xorlw	1	; case 7
  9554  001306  B4D8               	btfsc	status,2,c
  9555  001308  EF98  F002         	goto	l12843
  9556  00130C  0A0F               	xorlw	15	; case 8
  9557  00130E  B4D8               	btfsc	status,2,c
  9558  001310  EF11  F003         	goto	l12873
  9559  001314  0A02               	xorlw	2	; case 10
  9560  001316  B4D8               	btfsc	status,2,c
  9561  001318  EF90  F004         	goto	l12953
  9562  00131C  0A01               	xorlw	1	; case 11
  9563  00131E  B4D8               	btfsc	status,2,c
  9564  001320  EF25  F005         	goto	l12985
  9565  001324  0A07               	xorlw	7	; case 12
  9566  001326  B4D8               	btfsc	status,2,c
  9567  001328  D457               	goto	l13029
  9568  00132A  0A01               	xorlw	1	; case 13
  9569  00132C  B4D8               	btfsc	status,2,c
  9570  00132E  D57D               	goto	l13087
  9571  001330  0A02               	xorlw	2	; case 15
  9572  001332  B4D8               	btfsc	status,2,c
  9573  001334  D78C               	goto	l13195
  9574  001336  EF6C  F001         	goto	l476
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;MOTEapp.c: 979: return runningState;
  9578                           ;	Return value of _moteRunningProcess is never used
  9579  00133A  0012               	return		;funcret
  9580  00133C                     __end_of_moteRunningProcess:
  9581                           	opt stack 0
  9582                           tblptru	equ	0xFF8
  9583                           tblptrh	equ	0xFF7
  9584                           tblptrl	equ	0xFF6
  9585                           tablat	equ	0xFF5
  9586                           prodh	equ	0xFF4
  9587                           prodl	equ	0xFF3
  9588                           intcon	equ	0xFF2
  9589                           postinc0	equ	0xFEE
  9590                           wreg	equ	0xFE8
  9591                           indf1	equ	0xFE7
  9592                           postdec1	equ	0xFE5
  9593                           fsr1h	equ	0xFE2
  9594                           fsr1l	equ	0xFE1
  9595                           indf2	equ	0xFDF
  9596                           fsr2h	equ	0xFDA
  9597                           fsr2l	equ	0xFD9
  9598                           status	equ	0xFD8
  9599                           
  9600 ;; *************** function _oled_putint8 *****************
  9601 ;; Defined at:
  9602 ;;		line 278 in file "../Includes/Drivers/SSD1306oLED.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  number          1    wreg     unsigned char 
  9605 ;;  station_dot     1   22[BANK0 ] unsigned char 
  9606 ;;  start_page      1   23[BANK0 ] unsigned char 
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;  number          1   31[BANK0 ] unsigned char 
  9609 ;;  numData         6   25[BANK0 ] struct .
  9610 ;;  negative        1   24[BANK0 ] unsigned char 
  9611 ;; Return value:  Size  Location     Type
  9612 ;;		None               void
  9613 ;; Registers used:
  9614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9620 ;;      Params:         0       2       0       0       0       0       0       0       0
  9621 ;;      Locals:         0       8       0       0       0       0       0       0       0
  9622 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9623 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9624 ;;Total ram usage:       10 bytes
  9625 ;; Hardware stack levels used:    1
  9626 ;; Hardware stack levels required when called:   15
  9627 ;; This function calls:
  9628 ;;		___awmod
  9629 ;;		___lbdiv
  9630 ;;		_oled_putString
  9631 ;; This function is called by:
  9632 ;;		_moteHandler
  9633 ;;		_moteRunningProcess
  9634 ;;		_moteApp_testSensors
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638                           	psect	text11
  9639  00402E                     __ptext11:
  9640                           	opt stack 0
  9641  00402E                     _oled_putint8:
  9642                           	opt stack 13
  9643                           
  9644                           ;incstack = 0
  9645                           ;oled_putint8@number stored from wreg
  9646  00402E  0100               	movlb	0	; () banked
  9647  004030  6FCE               	movwf	oled_putint8@number& (0+255),b
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;SSD1306oLED.c: 280: display_data_t numData;
  9651                           ;SSD1306oLED.c: 281: bool negative = 0;
  9652  004032  0E00               	movlw	0
  9653  004034  0100               	movlb	0	; () banked
  9654  004036  6FC7               	movwf	oled_putint8@negative& (0+255),b
  9655                           
  9656                           ; BSR set to: 0
  9657                           ;SSD1306oLED.c: 283: if(number & 0x80)
  9658  004038  0100               	movlb	0	; () banked
  9659  00403A  AFCE               	btfss	oled_putint8@number& (0+255),7,b
  9660  00403C  D004               	goto	l11809
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;SSD1306oLED.c: 284: negative = 1;
  9664  00403E  0E01               	movlw	1
  9665  004040  0100               	movlb	0	; () banked
  9666  004042  6FC7               	movwf	oled_putint8@negative& (0+255),b
  9667  004044  D000               	goto	l11809
  9668  004046                     l11809:
  9669                           
  9670                           ; BSR set to: 0
  9671                           ;SSD1306oLED.c: 285: number = (number & 0x7F);
  9672  004046  0100               	movlb	0	; () banked
  9673  004048  51CE               	movf	oled_putint8@number& (0+255),w,b
  9674  00404A  0B7F               	andlw	127
  9675  00404C  0100               	movlb	0	; () banked
  9676  00404E  6FCE               	movwf	oled_putint8@number& (0+255),b
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;SSD1306oLED.c: 287: numData.d2 = '0' + (number % 10);
  9680  004050  C0CE  F0AF         	movff	oled_putint8@number,___awmod@dividend
  9681  004054  0100               	movlb	0	; () banked
  9682  004056  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
  9683  004058  0E00               	movlw	0
  9684  00405A  0100               	movlb	0	; () banked
  9685  00405C  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
  9686  00405E  0E0A               	movlw	10
  9687  004060  6FB1               	movwf	___awmod@divisor& (0+255),b
  9688  004062  EC32  F023         	call	___awmod	;wreg free
  9689  004066  0100               	movlb	0	; () banked
  9690  004068  51AF               	movf	?___awmod& (0+255),w,b
  9691  00406A  0F30               	addlw	48
  9692  00406C  0100               	movlb	0	; () banked
  9693  00406E  6FCA               	movwf	(oled_putint8@numData+2)& (0+255),b
  9694                           
  9695                           ; BSR set to: 0
  9696                           ;SSD1306oLED.c: 288: number /= 10;
  9697  004070  0E0A               	movlw	10
  9698  004072  0100               	movlb	0	; () banked
  9699  004074  6FAF               	movwf	___lbdiv@divisor& (0+255),b
  9700  004076  0100               	movlb	0	; () banked
  9701  004078  51CE               	movf	oled_putint8@number& (0+255),w,b
  9702  00407A  EC85  F029         	call	___lbdiv
  9703  00407E  0100               	movlb	0	; () banked
  9704  004080  6FCE               	movwf	oled_putint8@number& (0+255),b
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;SSD1306oLED.c: 289: numData.d1 = '0' + (number % 10);
  9708  004082  C0CE  F0AF         	movff	oled_putint8@number,___awmod@dividend
  9709  004086  0100               	movlb	0	; () banked
  9710  004088  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
  9711  00408A  0E00               	movlw	0
  9712  00408C  0100               	movlb	0	; () banked
  9713  00408E  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
  9714  004090  0E0A               	movlw	10
  9715  004092  6FB1               	movwf	___awmod@divisor& (0+255),b
  9716  004094  EC32  F023         	call	___awmod	;wreg free
  9717  004098  0100               	movlb	0	; () banked
  9718  00409A  51AF               	movf	?___awmod& (0+255),w,b
  9719  00409C  0F30               	addlw	48
  9720  00409E  0100               	movlb	0	; () banked
  9721  0040A0  6FC9               	movwf	(oled_putint8@numData+1)& (0+255),b
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;SSD1306oLED.c: 290: number /= 10;
  9725  0040A2  0E0A               	movlw	10
  9726  0040A4  0100               	movlb	0	; () banked
  9727  0040A6  6FAF               	movwf	___lbdiv@divisor& (0+255),b
  9728  0040A8  0100               	movlb	0	; () banked
  9729  0040AA  51CE               	movf	oled_putint8@number& (0+255),w,b
  9730  0040AC  EC85  F029         	call	___lbdiv
  9731  0040B0  0100               	movlb	0	; () banked
  9732  0040B2  6FCE               	movwf	oled_putint8@number& (0+255),b
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;SSD1306oLED.c: 291: numData.d0 = '0' + (number % 10);
  9736  0040B4  C0CE  F0AF         	movff	oled_putint8@number,___awmod@dividend
  9737  0040B8  0100               	movlb	0	; () banked
  9738  0040BA  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
  9739  0040BC  0E00               	movlw	0
  9740  0040BE  0100               	movlb	0	; () banked
  9741  0040C0  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
  9742  0040C2  0E0A               	movlw	10
  9743  0040C4  6FB1               	movwf	___awmod@divisor& (0+255),b
  9744  0040C6  EC32  F023         	call	___awmod	;wreg free
  9745  0040CA  0100               	movlb	0	; () banked
  9746  0040CC  51AF               	movf	?___awmod& (0+255),w,b
  9747  0040CE  0F30               	addlw	48
  9748  0040D0  0100               	movlb	0	; () banked
  9749  0040D2  6FC8               	movwf	oled_putint8@numData& (0+255),b
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;SSD1306oLED.c: 292: if(negative)
  9753  0040D4  0100               	movlb	0	; () banked
  9754  0040D6  51C7               	movf	oled_putint8@negative& (0+255),w,b
  9755  0040D8  0100               	movlb	0	; () banked
  9756  0040DA  B4D8               	btfsc	status,2,c
  9757  0040DC  D003               	goto	l1037
  9758                           
  9759                           ; BSR set to: 0
  9760                           ;SSD1306oLED.c: 293: numData.d0 = '-';
  9761  0040DE  0E2D               	movlw	45
  9762  0040E0  0100               	movlb	0	; () banked
  9763  0040E2  6FC8               	movwf	oled_putint8@numData& (0+255),b
  9764  0040E4                     l1037:
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;SSD1306oLED.c: 295: numData.b[3]=0;
  9768  0040E4  0E00               	movlw	0
  9769  0040E6  0100               	movlb	0	; () banked
  9770  0040E8  6FCB               	movwf	(oled_putint8@numData+3)& (0+255),b
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;SSD1306oLED.c: 297: oled_putString(numData.b,station_dot,start_page);
  9774  0040EA  0EC8               	movlw	low oled_putint8@numData
  9775  0040EC  0100               	movlb	0	; () banked
  9776  0040EE  6FC0               	movwf	oled_putString@string& (0+255),b
  9777  0040F0  0E00               	movlw	high oled_putint8@numData
  9778  0040F2  0100               	movlb	0	; () banked
  9779  0040F4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9780  0040F6  C0C5  F0C2         	movff	oled_putint8@station_dot,oled_putString@station_dot
  9781  0040FA  C0C6  F0C3         	movff	oled_putint8@start_page,oled_putString@start_page
  9782  0040FE  EC30  F028         	call	_oled_putString	;wreg free
  9783  004102  0012               	return		;funcret
  9784  004104                     __end_of_oled_putint8:
  9785                           	opt stack 0
  9786                           tblptru	equ	0xFF8
  9787                           tblptrh	equ	0xFF7
  9788                           tblptrl	equ	0xFF6
  9789                           tablat	equ	0xFF5
  9790                           prodh	equ	0xFF4
  9791                           prodl	equ	0xFF3
  9792                           intcon	equ	0xFF2
  9793                           postinc0	equ	0xFEE
  9794                           wreg	equ	0xFE8
  9795                           indf1	equ	0xFE7
  9796                           postdec1	equ	0xFE5
  9797                           fsr1h	equ	0xFE2
  9798                           fsr1l	equ	0xFE1
  9799                           indf2	equ	0xFDF
  9800                           fsr2h	equ	0xFDA
  9801                           fsr2l	equ	0xFD9
  9802                           status	equ	0xFD8
  9803                           
  9804 ;; *************** function _oled_putUint8 *****************
  9805 ;; Defined at:
  9806 ;;		line 264 in file "../Includes/Drivers/SSD1306oLED.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;  number          1    wreg     unsigned char 
  9809 ;;  station_dot     1   22[BANK0 ] unsigned char 
  9810 ;;  start_page      1   23[BANK0 ] unsigned char 
  9811 ;; Auto vars:     Size  Location     Type
  9812 ;;  number          1   24[BANK0 ] unsigned char 
  9813 ;;  numData         6   25[BANK0 ] struct .
  9814 ;; Return value:  Size  Location     Type
  9815 ;;		None               void
  9816 ;; Registers used:
  9817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9818 ;; Tracked objects:
  9819 ;;		On entry : 0/0
  9820 ;;		On exit  : 0/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9823 ;;      Params:         0       2       0       0       0       0       0       0       0
  9824 ;;      Locals:         0       7       0       0       0       0       0       0       0
  9825 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9826 ;;      Totals:         0       9       0       0       0       0       0       0       0
  9827 ;;Total ram usage:        9 bytes
  9828 ;; Hardware stack levels used:    1
  9829 ;; Hardware stack levels required when called:   15
  9830 ;; This function calls:
  9831 ;;		___awmod
  9832 ;;		___lbdiv
  9833 ;;		_oled_putString
  9834 ;; This function is called by:
  9835 ;;		_moteRunningProcess
  9836 ;;		_test_adc
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text12
  9841  00487A                     __ptext12:
  9842                           	opt stack 0
  9843  00487A                     _oled_putUint8:
  9844                           	opt stack 13
  9845                           
  9846                           ;incstack = 0
  9847                           ;oled_putUint8@number stored from wreg
  9848  00487A  0100               	movlb	0	; () banked
  9849  00487C  6FC7               	movwf	oled_putUint8@number& (0+255),b
  9850                           
  9851                           ; BSR set to: 0
  9852                           ;SSD1306oLED.c: 266: display_data_t numData;
  9853                           ;SSD1306oLED.c: 267: numData.d2 = '0' + (number % 10);
  9854  00487E  C0C7  F0AF         	movff	oled_putUint8@number,___awmod@dividend
  9855  004882  0100               	movlb	0	; () banked
  9856  004884  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
  9857  004886  0E00               	movlw	0
  9858  004888  0100               	movlb	0	; () banked
  9859  00488A  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
  9860  00488C  0E0A               	movlw	10
  9861  00488E  6FB1               	movwf	___awmod@divisor& (0+255),b
  9862  004890  EC32  F023         	call	___awmod	;wreg free
  9863  004894  0100               	movlb	0	; () banked
  9864  004896  51AF               	movf	?___awmod& (0+255),w,b
  9865  004898  0F30               	addlw	48
  9866  00489A  0100               	movlb	0	; () banked
  9867  00489C  6FCA               	movwf	(oled_putUint8@numData+2)& (0+255),b
  9868                           
  9869                           ;SSD1306oLED.c: 268: number /= 10;
  9870  00489E  0E0A               	movlw	10
  9871  0048A0  0100               	movlb	0	; () banked
  9872  0048A2  6FAF               	movwf	___lbdiv@divisor& (0+255),b
  9873  0048A4  0100               	movlb	0	; () banked
  9874  0048A6  51C7               	movf	oled_putUint8@number& (0+255),w,b
  9875  0048A8  EC85  F029         	call	___lbdiv
  9876  0048AC  0100               	movlb	0	; () banked
  9877  0048AE  6FC7               	movwf	oled_putUint8@number& (0+255),b
  9878                           
  9879                           ;SSD1306oLED.c: 269: numData.d1 = '0' + (number % 10);
  9880  0048B0  C0C7  F0AF         	movff	oled_putUint8@number,___awmod@dividend
  9881  0048B4  0100               	movlb	0	; () banked
  9882  0048B6  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
  9883  0048B8  0E00               	movlw	0
  9884  0048BA  0100               	movlb	0	; () banked
  9885  0048BC  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
  9886  0048BE  0E0A               	movlw	10
  9887  0048C0  6FB1               	movwf	___awmod@divisor& (0+255),b
  9888  0048C2  EC32  F023         	call	___awmod	;wreg free
  9889  0048C6  0100               	movlb	0	; () banked
  9890  0048C8  51AF               	movf	?___awmod& (0+255),w,b
  9891  0048CA  0F30               	addlw	48
  9892  0048CC  0100               	movlb	0	; () banked
  9893  0048CE  6FC9               	movwf	(oled_putUint8@numData+1)& (0+255),b
  9894                           
  9895                           ;SSD1306oLED.c: 270: number /= 10;
  9896  0048D0  0E0A               	movlw	10
  9897  0048D2  0100               	movlb	0	; () banked
  9898  0048D4  6FAF               	movwf	___lbdiv@divisor& (0+255),b
  9899  0048D6  0100               	movlb	0	; () banked
  9900  0048D8  51C7               	movf	oled_putUint8@number& (0+255),w,b
  9901  0048DA  EC85  F029         	call	___lbdiv
  9902  0048DE  0100               	movlb	0	; () banked
  9903  0048E0  6FC7               	movwf	oled_putUint8@number& (0+255),b
  9904                           
  9905                           ;SSD1306oLED.c: 271: numData.d0 = '0' + (number % 10);
  9906  0048E2  C0C7  F0AF         	movff	oled_putUint8@number,___awmod@dividend
  9907  0048E6  0100               	movlb	0	; () banked
  9908  0048E8  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
  9909  0048EA  0E00               	movlw	0
  9910  0048EC  0100               	movlb	0	; () banked
  9911  0048EE  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
  9912  0048F0  0E0A               	movlw	10
  9913  0048F2  6FB1               	movwf	___awmod@divisor& (0+255),b
  9914  0048F4  EC32  F023         	call	___awmod	;wreg free
  9915  0048F8  0100               	movlb	0	; () banked
  9916  0048FA  51AF               	movf	?___awmod& (0+255),w,b
  9917  0048FC  0F30               	addlw	48
  9918  0048FE  0100               	movlb	0	; () banked
  9919  004900  6FC8               	movwf	oled_putUint8@numData& (0+255),b
  9920                           
  9921                           ; BSR set to: 0
  9922                           ;SSD1306oLED.c: 273: numData.b[3]=0;
  9923  004902  0E00               	movlw	0
  9924  004904  0100               	movlb	0	; () banked
  9925  004906  6FCB               	movwf	(oled_putUint8@numData+3)& (0+255),b
  9926                           
  9927                           ; BSR set to: 0
  9928                           ;SSD1306oLED.c: 275: oled_putString(numData.b,station_dot,start_page);
  9929  004908  0EC8               	movlw	low oled_putUint8@numData
  9930  00490A  0100               	movlb	0	; () banked
  9931  00490C  6FC0               	movwf	oled_putString@string& (0+255),b
  9932  00490E  0E00               	movlw	high oled_putUint8@numData
  9933  004910  0100               	movlb	0	; () banked
  9934  004912  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9935  004914  C0C5  F0C2         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  9936  004918  C0C6  F0C3         	movff	oled_putUint8@start_page,oled_putString@start_page
  9937  00491C  EC30  F028         	call	_oled_putString	;wreg free
  9938  004920  0012               	return		;funcret
  9939  004922                     __end_of_oled_putUint8:
  9940                           	opt stack 0
  9941                           tblptru	equ	0xFF8
  9942                           tblptrh	equ	0xFF7
  9943                           tblptrl	equ	0xFF6
  9944                           tablat	equ	0xFF5
  9945                           prodh	equ	0xFF4
  9946                           prodl	equ	0xFF3
  9947                           intcon	equ	0xFF2
  9948                           postinc0	equ	0xFEE
  9949                           wreg	equ	0xFE8
  9950                           indf1	equ	0xFE7
  9951                           postdec1	equ	0xFE5
  9952                           fsr1h	equ	0xFE2
  9953                           fsr1l	equ	0xFE1
  9954                           indf2	equ	0xFDF
  9955                           fsr2h	equ	0xFDA
  9956                           fsr2l	equ	0xFD9
  9957                           status	equ	0xFD8
  9958                           
  9959 ;; *************** function _moteApp_setSensorsInput *****************
  9960 ;; Defined at:
  9961 ;;		line 1388 in file "../Includes/Board/MOTEapp.c"
  9962 ;; Parameters:    Size  Location     Type
  9963 ;;		None
  9964 ;; Auto vars:     Size  Location     Type
  9965 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
  9966 ;; Return value:  Size  Location     Type
  9967 ;;		None               void
  9968 ;; Registers used:
  9969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9970 ;; Tracked objects:
  9971 ;;		On entry : 0/0
  9972 ;;		On exit  : 0/0
  9973 ;;		Unchanged: 0/0
  9974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9975 ;;      Params:         0       0       0       0       0       0       0       0       0
  9976 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9978 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9979 ;;Total ram usage:        2 bytes
  9980 ;; Hardware stack levels used:    1
  9981 ;; Hardware stack levels required when called:   14
  9982 ;; This function calls:
  9983 ;;		MOTEapp@sendCommand
  9984 ;;		_MOTEapp_getModuleResponse
  9985 ;;		_moteApp_delayms
  9986 ;; This function is called by:
  9987 ;;		_moteRunningProcess
  9988 ;;		_moteApp_testSensors
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text13
  9993  004BA2                     __ptext13:
  9994                           	opt stack 0
  9995  004BA2                     _moteApp_setSensorsInput:
  9996                           	opt stack 14
  9997                           
  9998                           ;MOTEapp.c: 1390: uint16_t escapeCounter = 0;
  9999                           
 10000                           ;incstack = 0
 10001  004BA2  0E00               	movlw	0
 10002  004BA4  0100               	movlb	0	; () banked
 10003  004BA6  6FB5               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10004  004BA8  0E00               	movlw	0
 10005  004BAA  6FB4               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10006                           
 10007                           ; BSR set to: 0
 10008                           ;MOTEapp.c: 1391: sendCommand("sys set pinmode GPIO13 ana");
 10009  004BAC  0EDD               	movlw	low STR_183
 10010  004BAE  0100               	movlb	0	; () banked
 10011  004BB0  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 10012  004BB2  0E79               	movlw	high STR_183
 10013  004BB4  0100               	movlb	0	; () banked
 10014  004BB6  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 10015  004BB8  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 10016                           
 10017                           ;MOTEapp.c: 1392: while ( !MOTEapp_getModuleResponse() )
 10018  004BBC  D00E               	goto	l11913
 10019  004BBE                     l11909:
 10020                           
 10021                           ;MOTEapp.c: 1393: {
 10022                           ;MOTEapp.c: 1394: if (++escapeCounter > 50000)
 10023  004BBE  0100               	movlb	0	; () banked
 10024  004BC0  4BB4               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10025  004BC2  2BB5               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10026  004BC4  0E51               	movlw	81
 10027  004BC6  0100               	movlb	0	; () banked
 10028  004BC8  5DB4               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10029  004BCA  0EC3               	movlw	195
 10030  004BCC  0100               	movlb	0	; () banked
 10031  004BCE  59B5               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10032  004BD0  B0D8               	btfsc	status,0,c
 10033  004BD2  D008               	goto	l11915
 10034  004BD4  D002               	goto	l11913
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;MOTEapp.c: 1395: break;
 10038  004BD6  D006               	goto	l11915
 10039                           
 10040                           ; BSR set to: 0
 10041  004BD8  D000               	goto	l11913
 10042  004BDA                     l11913:
 10043  004BDA  ECF2  F027         	call	_MOTEapp_getModuleResponse	;wreg free
 10044  004BDE  0900               	iorlw	0
 10045  004BE0  B4D8               	btfsc	status,2,c
 10046  004BE2  D7ED               	goto	l11909
 10047  004BE4                     l11915:
 10048                           
 10049                           ;MOTEapp.c: 1396: }
 10050                           ;MOTEapp.c: 1397: escapeCounter = 0;
 10051  004BE4  0E00               	movlw	0
 10052  004BE6  0100               	movlb	0	; () banked
 10053  004BE8  6FB5               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10054  004BEA  0E00               	movlw	0
 10055  004BEC  6FB4               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;MOTEapp.c: 1398: sendCommand("sys set pinmode GPIO12 ana");
 10059  004BEE  0EC2               	movlw	low STR_184
 10060  004BF0  0100               	movlb	0	; () banked
 10061  004BF2  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 10062  004BF4  0E79               	movlw	high STR_184
 10063  004BF6  0100               	movlb	0	; () banked
 10064  004BF8  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 10065  004BFA  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 10066                           
 10067                           ;MOTEapp.c: 1399: while ( !MOTEapp_getModuleResponse() )
 10068  004BFE  D00E               	goto	l11923
 10069  004C00                     l11919:
 10070                           
 10071                           ;MOTEapp.c: 1400: {
 10072                           ;MOTEapp.c: 1401: if (++escapeCounter > 50000)
 10073  004C00  0100               	movlb	0	; () banked
 10074  004C02  4BB4               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10075  004C04  2BB5               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10076  004C06  0E51               	movlw	81
 10077  004C08  0100               	movlb	0	; () banked
 10078  004C0A  5DB4               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10079  004C0C  0EC3               	movlw	195
 10080  004C0E  0100               	movlb	0	; () banked
 10081  004C10  59B5               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10082  004C12  B0D8               	btfsc	status,0,c
 10083  004C14  D008               	goto	l11925
 10084  004C16  D002               	goto	l11923
 10085                           
 10086                           ; BSR set to: 0
 10087                           ;MOTEapp.c: 1402: break;
 10088  004C18  D006               	goto	l11925
 10089                           
 10090                           ; BSR set to: 0
 10091  004C1A  D000               	goto	l11923
 10092  004C1C                     l11923:
 10093  004C1C  ECF2  F027         	call	_MOTEapp_getModuleResponse	;wreg free
 10094  004C20  0900               	iorlw	0
 10095  004C22  B4D8               	btfsc	status,2,c
 10096  004C24  D7ED               	goto	l11919
 10097  004C26                     l11925:
 10098                           
 10099                           ;MOTEapp.c: 1403: }
 10100                           ;MOTEapp.c: 1404: moteApp_delayms(100);
 10101  004C26  0E00               	movlw	0
 10102  004C28  0100               	movlb	0	; () banked
 10103  004C2A  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10104  004C2C  0E64               	movlw	100
 10105  004C2E  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 10106  004C30  ECB1  F02C         	call	_moteApp_delayms	;wreg free
 10107  004C34  0012               	return		;funcret
 10108  004C36                     __end_of_moteApp_setSensorsInput:
 10109                           	opt stack 0
 10110                           tblptru	equ	0xFF8
 10111                           tblptrh	equ	0xFF7
 10112                           tblptrl	equ	0xFF6
 10113                           tablat	equ	0xFF5
 10114                           prodh	equ	0xFF4
 10115                           prodl	equ	0xFF3
 10116                           intcon	equ	0xFF2
 10117                           postinc0	equ	0xFEE
 10118                           wreg	equ	0xFE8
 10119                           indf1	equ	0xFE7
 10120                           postdec1	equ	0xFE5
 10121                           fsr1h	equ	0xFE2
 10122                           fsr1l	equ	0xFE1
 10123                           indf2	equ	0xFDF
 10124                           fsr2h	equ	0xFDA
 10125                           fsr2l	equ	0xFD9
 10126                           status	equ	0xFD8
 10127                           
 10128 ;; *************** function _moteApp_lightStringSize *****************
 10129 ;; Defined at:
 10130 ;;		line 1453 in file "../Includes/Board/MOTEapp.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;		None
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;		None
 10135 ;; Return value:  Size  Location     Type
 10136 ;;                  1    wreg      unsigned char 
 10137 ;; Registers used:
 10138 ;;		wreg, status,2
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/0
 10141 ;;		On exit  : 0/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10144 ;;      Params:         0       0       0       0       0       0       0       0       0
 10145 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10146 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10147 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10148 ;;Total ram usage:        0 bytes
 10149 ;; Hardware stack levels used:    1
 10150 ;; Hardware stack levels required when called:   11
 10151 ;; This function calls:
 10152 ;;		Nothing
 10153 ;; This function is called by:
 10154 ;;		_moteRunningProcess
 10155 ;; This function uses a non-reentrant model
 10156 ;;
 10157                           
 10158                           	psect	text14
 10159  005F16                     __ptext14:
 10160                           	opt stack 0
 10161  005F16                     _moteApp_lightStringSize:
 10162                           	opt stack 17
 10163                           
 10164                           ;MOTEapp.c: 1455: return lightStringSize;
 10165                           
 10166                           ;incstack = 0
 10167  005F16  0100               	movlb	0	; () banked
 10168  005F18  519A               	movf	_lightStringSize& (0+255),w,b
 10169  005F1A  0012               	return	
 10170                           
 10171                           ; BSR set to: 0
 10172                           
 10173                           ; BSR set to: 0
 10174  005F1C  0012               	return		;funcret
 10175  005F1E                     __end_of_moteApp_lightStringSize:
 10176                           	opt stack 0
 10177                           tblptru	equ	0xFF8
 10178                           tblptrh	equ	0xFF7
 10179                           tblptrl	equ	0xFF6
 10180                           tablat	equ	0xFF5
 10181                           prodh	equ	0xFF4
 10182                           prodl	equ	0xFF3
 10183                           intcon	equ	0xFF2
 10184                           postinc0	equ	0xFEE
 10185                           wreg	equ	0xFE8
 10186                           indf1	equ	0xFE7
 10187                           postdec1	equ	0xFE5
 10188                           fsr1h	equ	0xFE2
 10189                           fsr1l	equ	0xFE1
 10190                           indf2	equ	0xFDF
 10191                           fsr2h	equ	0xFDA
 10192                           fsr2l	equ	0xFD9
 10193                           status	equ	0xFD8
 10194                           
 10195 ;; *************** function _moteApp_getTempValue *****************
 10196 ;; Defined at:
 10197 ;;		line 1406 in file "../Includes/Board/MOTEapp.c"
 10198 ;; Parameters:    Size  Location     Type
 10199 ;;		None
 10200 ;; Auto vars:     Size  Location     Type
 10201 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10202 ;; Return value:  Size  Location     Type
 10203 ;;                  2    3[BANK0 ] PTR unsigned char 
 10204 ;; Registers used:
 10205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10206 ;; Tracked objects:
 10207 ;;		On entry : 0/0
 10208 ;;		On exit  : 0/0
 10209 ;;		Unchanged: 0/0
 10210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10211 ;;      Params:         0       2       0       0       0       0       0       0       0
 10212 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10213 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10214 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10215 ;;Total ram usage:        4 bytes
 10216 ;; Hardware stack levels used:    1
 10217 ;; Hardware stack levels required when called:   14
 10218 ;; This function calls:
 10219 ;;		MOTEapp@sendCommand
 10220 ;;		_MOTEapp_getModuleResponse
 10221 ;; This function is called by:
 10222 ;;		_moteHandler
 10223 ;;		_moteRunningProcess
 10224 ;;		_moteApp_testSensors
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text15
 10229  005666                     __ptext15:
 10230                           	opt stack 0
 10231  005666                     _moteApp_getTempValue:
 10232                           	opt stack 14
 10233                           
 10234                           ;MOTEapp.c: 1408: uint16_t escapeCounter = 0;
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;incstack = 0
 10238  005666  0E00               	movlw	0
 10239  005668  0100               	movlb	0	; () banked
 10240  00566A  6FB5               	movwf	(moteApp_getTempValue@escapeCounter+1)& (0+255),b
 10241  00566C  0E00               	movlw	0
 10242  00566E  6FB4               	movwf	moteApp_getTempValue@escapeCounter& (0+255),b
 10243                           
 10244                           ; BSR set to: 0
 10245                           ;MOTEapp.c: 1410: sendCommand("sys get pinana GPIO12");
 10246  005670  0E79               	movlw	low STR_185
 10247  005672  0100               	movlb	0	; () banked
 10248  005674  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 10249  005676  0E7A               	movlw	high STR_185
 10250  005678  0100               	movlb	0	; () banked
 10251  00567A  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 10252  00567C  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 10253                           
 10254                           ;MOTEapp.c: 1411: while ( !MOTEapp_getModuleResponse() )
 10255  005680  D00E               	goto	l11777
 10256  005682                     l11773:
 10257                           
 10258                           ;MOTEapp.c: 1412: {
 10259                           ;MOTEapp.c: 1413: if (++escapeCounter > 50000)
 10260  005682  0100               	movlb	0	; () banked
 10261  005684  4BB4               	infsnz	moteApp_getTempValue@escapeCounter& (0+255),f,b
 10262  005686  2BB5               	incf	(moteApp_getTempValue@escapeCounter+1)& (0+255),f,b
 10263  005688  0E51               	movlw	81
 10264  00568A  0100               	movlb	0	; () banked
 10265  00568C  5DB4               	subwf	moteApp_getTempValue@escapeCounter& (0+255),w,b
 10266  00568E  0EC3               	movlw	195
 10267  005690  0100               	movlb	0	; () banked
 10268  005692  59B5               	subwfb	(moteApp_getTempValue@escapeCounter+1)& (0+255),w,b
 10269  005694  B0D8               	btfsc	status,0,c
 10270  005696  D008               	goto	l11779
 10271  005698  D002               	goto	l11777
 10272                           
 10273                           ; BSR set to: 0
 10274                           ;MOTEapp.c: 1414: break;
 10275  00569A  D006               	goto	l11779
 10276                           
 10277                           ; BSR set to: 0
 10278  00569C  D000               	goto	l11777
 10279  00569E                     l11777:
 10280  00569E  ECF2  F027         	call	_MOTEapp_getModuleResponse	;wreg free
 10281  0056A2  0900               	iorlw	0
 10282  0056A4  B4D8               	btfsc	status,2,c
 10283  0056A6  D7ED               	goto	l11773
 10284  0056A8                     l11779:
 10285                           
 10286                           ;MOTEapp.c: 1415: }
 10287                           ;MOTEapp.c: 1417: return &moduleResonseBuffer;
 10288  0056A8  0E78               	movlw	low _moduleResonseBuffer
 10289  0056AA  0100               	movlb	0	; () banked
 10290  0056AC  6FB2               	movwf	?_moteApp_getTempValue& (0+255),b
 10291  0056AE  0E01               	movlw	high _moduleResonseBuffer
 10292  0056B0  0100               	movlb	0	; () banked
 10293  0056B2  6FB3               	movwf	(?_moteApp_getTempValue+1)& (0+255),b
 10294  0056B4  0012               	return	
 10295                           
 10296                           ; BSR set to: 0
 10297                           
 10298                           ; BSR set to: 0
 10299  0056B6  0012               	return		;funcret
 10300  0056B8                     __end_of_moteApp_getTempValue:
 10301                           	opt stack 0
 10302                           tblptru	equ	0xFF8
 10303                           tblptrh	equ	0xFF7
 10304                           tblptrl	equ	0xFF6
 10305                           tablat	equ	0xFF5
 10306                           prodh	equ	0xFF4
 10307                           prodl	equ	0xFF3
 10308                           intcon	equ	0xFF2
 10309                           postinc0	equ	0xFEE
 10310                           wreg	equ	0xFE8
 10311                           indf1	equ	0xFE7
 10312                           postdec1	equ	0xFE5
 10313                           fsr1h	equ	0xFE2
 10314                           fsr1l	equ	0xFE1
 10315                           indf2	equ	0xFDF
 10316                           fsr2h	equ	0xFDA
 10317                           fsr2l	equ	0xFD9
 10318                           status	equ	0xFD8
 10319                           
 10320 ;; *************** function _moteApp_getLightValue *****************
 10321 ;; Defined at:
 10322 ;;		line 1420 in file "../Includes/Board/MOTEapp.c"
 10323 ;; Parameters:    Size  Location     Type
 10324 ;;		None
 10325 ;; Auto vars:     Size  Location     Type
 10326 ;;  escapeCounte    2   15[BANK0 ] unsigned int 
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  2   13[BANK0 ] PTR unsigned char 
 10329 ;; Registers used:
 10330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10336 ;;      Params:         0       2       0       0       0       0       0       0       0
 10337 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10338 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10339 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10340 ;;Total ram usage:        4 bytes
 10341 ;; Hardware stack levels used:    1
 10342 ;; Hardware stack levels required when called:   14
 10343 ;; This function calls:
 10344 ;;		MOTEapp@sendCommand
 10345 ;;		_MOTEapp_getModuleResponse
 10346 ;;		_moteApp_setLightString
 10347 ;; This function is called by:
 10348 ;;		_moteHandler
 10349 ;;		_moteRunningProcess
 10350 ;;		_moteApp_testSensors
 10351 ;; This function uses a non-reentrant model
 10352 ;;
 10353                           
 10354                           	psect	text16
 10355  0053D8                     __ptext16:
 10356                           	opt stack 0
 10357  0053D8                     _moteApp_getLightValue:
 10358                           	opt stack 14
 10359                           
 10360                           ;MOTEapp.c: 1422: uint16_t escapeCounter = 0;
 10361                           
 10362                           ; BSR set to: 0
 10363                           ;incstack = 0
 10364  0053D8  0E00               	movlw	0
 10365  0053DA  0100               	movlb	0	; () banked
 10366  0053DC  6FBF               	movwf	(moteApp_getLightValue@escapeCounter+1)& (0+255),b
 10367  0053DE  0E00               	movlw	0
 10368  0053E0  6FBE               	movwf	moteApp_getLightValue@escapeCounter& (0+255),b
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;MOTEapp.c: 1424: sendCommand("sys get pinana GPIO13");
 10372  0053E2  0E8F               	movlw	low STR_186
 10373  0053E4  0100               	movlb	0	; () banked
 10374  0053E6  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 10375  0053E8  0E7A               	movlw	high STR_186
 10376  0053EA  0100               	movlb	0	; () banked
 10377  0053EC  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 10378  0053EE  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 10379                           
 10380                           ;MOTEapp.c: 1425: while ( !MOTEapp_getModuleResponse() )
 10381  0053F2  D00E               	goto	l11761
 10382  0053F4                     l11757:
 10383                           
 10384                           ;MOTEapp.c: 1426: {
 10385                           ;MOTEapp.c: 1427: if (++escapeCounter > 50000)
 10386  0053F4  0100               	movlb	0	; () banked
 10387  0053F6  4BBE               	infsnz	moteApp_getLightValue@escapeCounter& (0+255),f,b
 10388  0053F8  2BBF               	incf	(moteApp_getLightValue@escapeCounter+1)& (0+255),f,b
 10389  0053FA  0E51               	movlw	81
 10390  0053FC  0100               	movlb	0	; () banked
 10391  0053FE  5DBE               	subwf	moteApp_getLightValue@escapeCounter& (0+255),w,b
 10392  005400  0EC3               	movlw	195
 10393  005402  0100               	movlb	0	; () banked
 10394  005404  59BF               	subwfb	(moteApp_getLightValue@escapeCounter+1)& (0+255),w,b
 10395  005406  B0D8               	btfsc	status,0,c
 10396  005408  D008               	goto	l11763
 10397  00540A  D002               	goto	l11761
 10398                           
 10399                           ; BSR set to: 0
 10400                           ;MOTEapp.c: 1428: break;
 10401  00540C  D006               	goto	l11763
 10402                           
 10403                           ; BSR set to: 0
 10404  00540E  D000               	goto	l11761
 10405  005410                     l11761:
 10406  005410  ECF2  F027         	call	_MOTEapp_getModuleResponse	;wreg free
 10407  005414  0900               	iorlw	0
 10408  005416  B4D8               	btfsc	status,2,c
 10409  005418  D7ED               	goto	l11757
 10410  00541A                     l11763:
 10411                           
 10412                           ;MOTEapp.c: 1429: }
 10413                           ;MOTEapp.c: 1430: moteApp_setLightString(moduleResonseBuffer);
 10414  00541A  0E78               	movlw	low _moduleResonseBuffer
 10415  00541C  0100               	movlb	0	; () banked
 10416  00541E  6FB9               	movwf	moteApp_setLightString@lightString& (0+255),b
 10417  005420  0E01               	movlw	high _moduleResonseBuffer
 10418  005422  0100               	movlb	0	; () banked
 10419  005424  6FBA               	movwf	(moteApp_setLightString@lightString+1)& (0+255),b
 10420  005426  EC72  F027         	call	_moteApp_setLightString	;wreg free
 10421                           
 10422                           ;MOTEapp.c: 1431: return &moduleResonseBuffer;
 10423  00542A  0E78               	movlw	low _moduleResonseBuffer
 10424  00542C  0100               	movlb	0	; () banked
 10425  00542E  6FBC               	movwf	?_moteApp_getLightValue& (0+255),b
 10426  005430  0E01               	movlw	high _moduleResonseBuffer
 10427  005432  0100               	movlb	0	; () banked
 10428  005434  6FBD               	movwf	(?_moteApp_getLightValue+1)& (0+255),b
 10429  005436  0012               	return	
 10430                           
 10431                           ; BSR set to: 0
 10432                           
 10433                           ; BSR set to: 0
 10434  005438  0012               	return		;funcret
 10435  00543A                     __end_of_moteApp_getLightValue:
 10436                           	opt stack 0
 10437                           tblptru	equ	0xFF8
 10438                           tblptrh	equ	0xFF7
 10439                           tblptrl	equ	0xFF6
 10440                           tablat	equ	0xFF5
 10441                           prodh	equ	0xFF4
 10442                           prodl	equ	0xFF3
 10443                           intcon	equ	0xFF2
 10444                           postinc0	equ	0xFEE
 10445                           wreg	equ	0xFE8
 10446                           indf1	equ	0xFE7
 10447                           postdec1	equ	0xFE5
 10448                           fsr1h	equ	0xFE2
 10449                           fsr1l	equ	0xFE1
 10450                           indf2	equ	0xFDF
 10451                           fsr2h	equ	0xFDA
 10452                           fsr2l	equ	0xFD9
 10453                           status	equ	0xFD8
 10454                           
 10455 ;; *************** function _moteApp_setLightString *****************
 10456 ;; Defined at:
 10457 ;;		line 1438 in file "../Includes/Board/MOTEapp.c"
 10458 ;; Parameters:    Size  Location     Type
 10459 ;;  lightString     2   10[BANK0 ] PTR unsigned char 
 10460 ;;		 -> moduleResonseBuffer(64), 
 10461 ;; Auto vars:     Size  Location     Type
 10462 ;;  stingPos        1   12[BANK0 ] unsigned char 
 10463 ;; Return value:  Size  Location     Type
 10464 ;;		None               void
 10465 ;; Registers used:
 10466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10472 ;;      Params:         0       2       0       0       0       0       0       0       0
 10473 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10474 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10475 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10476 ;;Total ram usage:        3 bytes
 10477 ;; Hardware stack levels used:    1
 10478 ;; Hardware stack levels required when called:   12
 10479 ;; This function calls:
 10480 ;;		_memcpy
 10481 ;; This function is called by:
 10482 ;;		_moteApp_getLightValue
 10483 ;; This function uses a non-reentrant model
 10484 ;;
 10485                           
 10486                           	psect	text17
 10487  004EE4                     __ptext17:
 10488                           	opt stack 0
 10489  004EE4                     _moteApp_setLightString:
 10490                           	opt stack 15
 10491                           
 10492                           ;MOTEapp.c: 1440: memcpy(storedLight, clearLight, sizeof(storedLight));
 10493                           
 10494                           ; BSR set to: 0
 10495                           ;incstack = 0
 10496  004EE4  0EF6               	movlw	low _storedLight
 10497  004EE6  0100               	movlb	0	; () banked
 10498  004EE8  6FAF               	movwf	memcpy@d1& (0+255),b
 10499  004EEA  0E01               	movlw	high _storedLight
 10500  004EEC  0100               	movlb	0	; () banked
 10501  004EEE  6FB0               	movwf	(memcpy@d1+1)& (0+255),b
 10502  004EF0  0EF1               	movlw	low _clearLight
 10503  004EF2  0100               	movlb	0	; () banked
 10504  004EF4  6FB1               	movwf	memcpy@s1& (0+255),b
 10505  004EF6  0E01               	movlw	high _clearLight
 10506  004EF8  0100               	movlb	0	; () banked
 10507  004EFA  6FB2               	movwf	(memcpy@s1+1)& (0+255),b
 10508  004EFC  0E00               	movlw	0
 10509  004EFE  0100               	movlb	0	; () banked
 10510  004F00  6FB4               	movwf	(memcpy@n+1)& (0+255),b
 10511  004F02  0E05               	movlw	5
 10512  004F04  6FB3               	movwf	memcpy@n& (0+255),b
 10513  004F06  EC84  F02B         	call	_memcpy	;wreg free
 10514                           
 10515                           ;MOTEapp.c: 1441: memcpy(storedLight, lightString, sizeof(storedLight));
 10516  004F0A  0EF6               	movlw	low _storedLight
 10517  004F0C  0100               	movlb	0	; () banked
 10518  004F0E  6FAF               	movwf	memcpy@d1& (0+255),b
 10519  004F10  0E01               	movlw	high _storedLight
 10520  004F12  0100               	movlb	0	; () banked
 10521  004F14  6FB0               	movwf	(memcpy@d1+1)& (0+255),b
 10522  004F16  C0B9  F0B1         	movff	moteApp_setLightString@lightString,memcpy@s1
 10523  004F1A  C0BA  F0B2         	movff	moteApp_setLightString@lightString+1,memcpy@s1+1
 10524  004F1E  0E00               	movlw	0
 10525  004F20  0100               	movlb	0	; () banked
 10526  004F22  6FB4               	movwf	(memcpy@n+1)& (0+255),b
 10527  004F24  0E05               	movlw	5
 10528  004F26  6FB3               	movwf	memcpy@n& (0+255),b
 10529  004F28  EC84  F02B         	call	_memcpy	;wreg free
 10530                           
 10531                           ;MOTEapp.c: 1443: for (uint8_t stingPos = 0; stingPos < sizeof(storedLight); stingPos++)
 10532  004F2C  0E00               	movlw	0
 10533  004F2E  0100               	movlb	0	; () banked
 10534  004F30  6FBB               	movwf	moteApp_setLightString@stingPos& (0+255),b
 10535  004F32  D012               	goto	l11385
 10536                           
 10537                           ; BSR set to: 0
 10538                           
 10539                           ; BSR set to: 0
 10540  004F34  D015               	goto	l758
 10541  004F36                     l11379:
 10542                           
 10543                           ; BSR set to: 0
 10544                           ;MOTEapp.c: 1444: {
 10545                           ;MOTEapp.c: 1445: if (storedLight[stingPos] == 0x00)
 10546  004F36  0100               	movlb	0	; () banked
 10547  004F38  51BB               	movf	moteApp_setLightString@stingPos& (0+255),w,b
 10548  004F3A  0D01               	mullw	1
 10549  004F3C  0EF6               	movlw	low _storedLight
 10550  004F3E  24F3               	addwf	prodl,w,c
 10551  004F40  6ED9               	movwf	fsr2l,c
 10552  004F42  0E01               	movlw	high _storedLight
 10553  004F44  20F4               	addwfc	prodh,w,c
 10554  004F46  6EDA               	movwf	fsr2h,c
 10555  004F48  50DF               	movf	indf2,w,c
 10556  004F4A  A4D8               	btfss	status,2,c
 10557  004F4C  D003               	goto	l11383
 10558                           
 10559                           ; BSR set to: 0
 10560                           ;MOTEapp.c: 1446: {
 10561                           ;MOTEapp.c: 1447: lightStringSize = stingPos;
 10562  004F4E  C0BB  F09A         	movff	moteApp_setLightString@stingPos,_lightStringSize
 10563  004F52  D000               	goto	l11383
 10564  004F54                     l11383:
 10565                           
 10566                           ; BSR set to: 0
 10567  004F54  0100               	movlb	0	; () banked
 10568  004F56  2BBB               	incf	moteApp_setLightString@stingPos& (0+255),f,b
 10569  004F58                     l11385:
 10570                           
 10571                           ; BSR set to: 0
 10572  004F58  0E04               	movlw	4
 10573  004F5A  0100               	movlb	0	; () banked
 10574  004F5C  65BB               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 10575  004F5E  D7EB               	goto	l11379
 10576  004F60                     l758:
 10577                           
 10578                           ; BSR set to: 0
 10579                           ;MOTEapp.c: 1448: }
 10580                           ;MOTEapp.c: 1449: }
 10581                           ;MOTEapp.c: 1450: __nop();
 10582  004F60  F000               	nop	
 10583  004F62  0012               	return		;funcret
 10584  004F64                     __end_of_moteApp_setLightString:
 10585                           	opt stack 0
 10586                           tblptru	equ	0xFF8
 10587                           tblptrh	equ	0xFF7
 10588                           tblptrl	equ	0xFF6
 10589                           tablat	equ	0xFF5
 10590                           prodh	equ	0xFF4
 10591                           prodl	equ	0xFF3
 10592                           intcon	equ	0xFF2
 10593                           postinc0	equ	0xFEE
 10594                           wreg	equ	0xFE8
 10595                           indf1	equ	0xFE7
 10596                           postdec1	equ	0xFE5
 10597                           fsr1h	equ	0xFE2
 10598                           fsr1l	equ	0xFE1
 10599                           indf2	equ	0xFDF
 10600                           fsr2h	equ	0xFDA
 10601                           fsr2l	equ	0xFD9
 10602                           status	equ	0xFD8
 10603                           
 10604 ;; *************** function _memcpy *****************
 10605 ;; Defined at:
 10606 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memcpy.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;  d1              2    0[BANK0 ] PTR void 
 10609 ;;		 -> storedLight(5), 
 10610 ;;  s1              2    2[BANK0 ] PTR const void 
 10611 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10612 ;;  n               2    4[BANK0 ] unsigned int 
 10613 ;; Auto vars:     Size  Location     Type
 10614 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 10615 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10616 ;;  d               2    6[BANK0 ] PTR unsigned char 
 10617 ;;		 -> storedLight(5), 
 10618 ;; Return value:  Size  Location     Type
 10619 ;;                  2    0[BANK0 ] PTR void 
 10620 ;; Registers used:
 10621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10622 ;; Tracked objects:
 10623 ;;		On entry : 0/0
 10624 ;;		On exit  : 0/0
 10625 ;;		Unchanged: 0/0
 10626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10627 ;;      Params:         0       6       0       0       0       0       0       0       0
 10628 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10629 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10630 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10631 ;;Total ram usage:       10 bytes
 10632 ;; Hardware stack levels used:    1
 10633 ;; Hardware stack levels required when called:   11
 10634 ;; This function calls:
 10635 ;;		Nothing
 10636 ;; This function is called by:
 10637 ;;		_moteApp_setLightString
 10638 ;; This function uses a non-reentrant model
 10639 ;;
 10640                           
 10641                           	psect	text18
 10642  005708                     __ptext18:
 10643                           	opt stack 0
 10644  005708                     _memcpy:
 10645                           	opt stack 15
 10646                           
 10647                           ;incstack = 0
 10648  005708  C0B1  F0B7         	movff	memcpy@s1,memcpy@s
 10649  00570C  C0B2  F0B8         	movff	memcpy@s1+1,memcpy@s+1
 10650  005710  C0AF  F0B5         	movff	memcpy@d1,memcpy@d
 10651  005714  C0B0  F0B6         	movff	memcpy@d1+1,memcpy@d+1
 10652  005718  D011               	goto	l11187
 10653  00571A                     l11181:
 10654  00571A  C0B7  FFD9         	movff	memcpy@s,fsr2l
 10655  00571E  C0B8  FFDA         	movff	memcpy@s+1,fsr2h
 10656  005722  C0B5  FFE1         	movff	memcpy@d,fsr1l
 10657  005726  C0B6  FFE2         	movff	memcpy@d+1,fsr1h
 10658  00572A  CFDF FFE7          	movff	indf2,indf1
 10659  00572E  0100               	movlb	0	; () banked
 10660  005730  4BB7               	infsnz	memcpy@s& (0+255),f,b
 10661  005732  2BB8               	incf	(memcpy@s+1)& (0+255),f,b
 10662                           
 10663                           ; BSR set to: 0
 10664  005734  0100               	movlb	0	; () banked
 10665  005736  4BB5               	infsnz	memcpy@d& (0+255),f,b
 10666  005738  2BB6               	incf	(memcpy@d+1)& (0+255),f,b
 10667  00573A  D000               	goto	l11187
 10668  00573C                     l11187:
 10669  00573C  0100               	movlb	0	; () banked
 10670  00573E  07B3               	decf	memcpy@n& (0+255),f,b
 10671  005740  A0D8               	btfss	status,0,c
 10672  005742  07B4               	decf	(memcpy@n+1)& (0+255),f,b
 10673  005744  0100               	movlb	0	; () banked
 10674  005746  29B3               	incf	memcpy@n& (0+255),w,b
 10675  005748  E1E8               	bnz	l11181
 10676  00574A  0100               	movlb	0	; () banked
 10677  00574C  29B4               	incf	(memcpy@n+1)& (0+255),w,b
 10678  00574E  A4D8               	btfss	status,2,c
 10679  005750  D7E4               	goto	l11181
 10680                           
 10681                           ; BSR set to: 0
 10682                           
 10683                           ; BSR set to: 0
 10684                           ;	Return value of _memcpy is never used
 10685  005752  0012               	return		;funcret
 10686  005754                     __end_of_memcpy:
 10687                           	opt stack 0
 10688                           tblptru	equ	0xFF8
 10689                           tblptrh	equ	0xFF7
 10690                           tblptrl	equ	0xFF6
 10691                           tablat	equ	0xFF5
 10692                           prodh	equ	0xFF4
 10693                           prodl	equ	0xFF3
 10694                           intcon	equ	0xFF2
 10695                           postinc0	equ	0xFEE
 10696                           wreg	equ	0xFE8
 10697                           indf1	equ	0xFE7
 10698                           postdec1	equ	0xFE5
 10699                           fsr1h	equ	0xFE2
 10700                           fsr1l	equ	0xFE1
 10701                           indf2	equ	0xFDF
 10702                           fsr2h	equ	0xFDA
 10703                           fsr2l	equ	0xFD9
 10704                           status	equ	0xFD8
 10705                           
 10706 ;; *************** function _moteApp_getLightString *****************
 10707 ;; Defined at:
 10708 ;;		line 1457 in file "../Includes/Board/MOTEapp.c"
 10709 ;; Parameters:    Size  Location     Type
 10710 ;;		None
 10711 ;; Auto vars:     Size  Location     Type
 10712 ;;		None
 10713 ;; Return value:  Size  Location     Type
 10714 ;;                  2    0[BANK0 ] PTR unsigned char 
 10715 ;; Registers used:
 10716 ;;		wreg, status,2, status,0
 10717 ;; Tracked objects:
 10718 ;;		On entry : 0/0
 10719 ;;		On exit  : 0/0
 10720 ;;		Unchanged: 0/0
 10721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10722 ;;      Params:         0       2       0       0       0       0       0       0       0
 10723 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10724 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10725 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10726 ;;Total ram usage:        2 bytes
 10727 ;; Hardware stack levels used:    1
 10728 ;; Hardware stack levels required when called:   11
 10729 ;; This function calls:
 10730 ;;		Nothing
 10731 ;; This function is called by:
 10732 ;;		_moteRunningProcess
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736                           	psect	text19
 10737  005EB8                     __ptext19:
 10738                           	opt stack 0
 10739  005EB8                     _moteApp_getLightString:
 10740                           	opt stack 17
 10741                           
 10742                           ;MOTEapp.c: 1459: return &storedLight;
 10743                           
 10744                           ; BSR set to: 0
 10745                           ;incstack = 0
 10746  005EB8  0EF6               	movlw	low _storedLight
 10747  005EBA  0100               	movlb	0	; () banked
 10748  005EBC  6FAF               	movwf	?_moteApp_getLightString& (0+255),b
 10749  005EBE  0E01               	movlw	high _storedLight
 10750  005EC0  0100               	movlb	0	; () banked
 10751  005EC2  6FB0               	movwf	(?_moteApp_getLightString+1)& (0+255),b
 10752  005EC4  0012               	return	
 10753                           
 10754                           ; BSR set to: 0
 10755                           
 10756                           ; BSR set to: 0
 10757  005EC6  0012               	return		;funcret
 10758  005EC8                     __end_of_moteApp_getLightString:
 10759                           	opt stack 0
 10760                           tblptru	equ	0xFF8
 10761                           tblptrh	equ	0xFF7
 10762                           tblptrl	equ	0xFF6
 10763                           tablat	equ	0xFF5
 10764                           prodh	equ	0xFF4
 10765                           prodl	equ	0xFF3
 10766                           intcon	equ	0xFF2
 10767                           postinc0	equ	0xFEE
 10768                           wreg	equ	0xFE8
 10769                           indf1	equ	0xFE7
 10770                           postdec1	equ	0xFE5
 10771                           fsr1h	equ	0xFE2
 10772                           fsr1l	equ	0xFE1
 10773                           indf2	equ	0xFDF
 10774                           fsr2h	equ	0xFDA
 10775                           fsr2l	equ	0xFD9
 10776                           status	equ	0xFD8
 10777                           
 10778 ;; *************** function _moteApp_convertSensorValue *****************
 10779 ;; Defined at:
 10780 ;;		line 1348 in file "../Includes/Board/MOTEapp.c"
 10781 ;; Parameters:    Size  Location     Type
 10782 ;;  string          2   17[BANK0 ] PTR const unsigned char 
 10783 ;;		 -> moduleResonseBuffer(64), 
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;  convertedVal    2   23[BANK0 ] unsigned int 
 10786 ;;  index           1   22[BANK0 ] unsigned char 
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  2   17[BANK0 ] unsigned int 
 10789 ;; Registers used:
 10790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10796 ;;      Params:         0       2       0       0       0       0       0       0       0
 10797 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10798 ;;      Temps:          0       3       0       0       0       0       0       0       0
 10799 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10800 ;;Total ram usage:        8 bytes
 10801 ;; Hardware stack levels used:    1
 10802 ;; Hardware stack levels required when called:   12
 10803 ;; This function calls:
 10804 ;;		___wmul
 10805 ;; This function is called by:
 10806 ;;		_moteHandler
 10807 ;;		_moteRunningProcess
 10808 ;;		_moteApp_testSensors
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           	psect	text20
 10813  0049C8                     __ptext20:
 10814                           	opt stack 0
 10815  0049C8                     _moteApp_convertSensorValue:
 10816                           	opt stack 16
 10817                           
 10818                           ;MOTEapp.c: 1350: uint8_t index;
 10819                           ;MOTEapp.c: 1351: uint16_t convertedValue = 0;
 10820                           
 10821                           ; BSR set to: 0
 10822                           ;incstack = 0
 10823  0049C8  0E00               	movlw	0
 10824  0049CA  0100               	movlb	0	; () banked
 10825  0049CC  6FC7               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 10826  0049CE  0E00               	movlw	0
 10827  0049D0  6FC6               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 10828                           
 10829                           ;MOTEapp.c: 1352: for(index = 0; index < 4; index++)
 10830  0049D2  0E00               	movlw	0
 10831  0049D4  0100               	movlb	0	; () banked
 10832  0049D6  6FC5               	movwf	moteApp_convertSensorValue@index& (0+255),b
 10833  0049D8  D040               	goto	l11801
 10834                           
 10835                           ; BSR set to: 0
 10836                           
 10837                           ; BSR set to: 0
 10838  0049DA  D043               	goto	l716
 10839  0049DC                     l11789:
 10840                           
 10841                           ; BSR set to: 0
 10842                           ;MOTEapp.c: 1353: {
 10843                           ;MOTEapp.c: 1354: if (*string != 0)
 10844  0049DC  C0C0  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 10845  0049E0  C0C1  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 10846  0049E4  50DF               	movf	indf2,w,c
 10847  0049E6  B4D8               	btfsc	status,2,c
 10848  0049E8  D03C               	goto	l716
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;MOTEapp.c: 1355: {
 10852                           ;MOTEapp.c: 1356: if (index != 0)
 10853  0049EA  0100               	movlb	0	; () banked
 10854  0049EC  51C5               	movf	moteApp_convertSensorValue@index& (0+255),w,b
 10855  0049EE  0100               	movlb	0	; () banked
 10856  0049F0  B4D8               	btfsc	status,2,c
 10857  0049F2  D010               	goto	l11795
 10858                           
 10859                           ; BSR set to: 0
 10860                           ;MOTEapp.c: 1357: convertedValue = convertedValue * 10;
 10861  0049F4  C0C6  F0AF         	movff	moteApp_convertSensorValue@convertedValue,___wmul@multiplier
 10862  0049F8  C0C7  F0B0         	movff	moteApp_convertSensorValue@convertedValue+1,___wmul@multiplier+1
 10863  0049FC  0E00               	movlw	0
 10864  0049FE  0100               	movlb	0	; () banked
 10865  004A00  6FB2               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10866  004A02  0E0A               	movlw	10
 10867  004A04  6FB1               	movwf	___wmul@multiplicand& (0+255),b
 10868  004A06  EC08  F02D         	call	___wmul	;wreg free
 10869  004A0A  C0AF  F0C6         	movff	?___wmul,moteApp_convertSensorValue@convertedValue
 10870  004A0E  C0B0  F0C7         	movff	?___wmul+1,moteApp_convertSensorValue@convertedValue+1
 10871  004A12  D000               	goto	l11795
 10872  004A14                     l11795:
 10873                           
 10874                           ;MOTEapp.c: 1359: convertedValue = (*string++ - '0') + convertedValue;
 10875  004A14  C0C0  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 10876  004A18  C0C1  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 10877  004A1C  50DF               	movf	indf2,w,c
 10878  004A1E  0100               	movlb	0	; () banked
 10879  004A20  6FC2               	movwf	??_moteApp_convertSensorValue& (0+255),b
 10880  004A22  0100               	movlb	0	; () banked
 10881  004A24  51C2               	movf	??_moteApp_convertSensorValue& (0+255),w,b
 10882  004A26  0100               	movlb	0	; () banked
 10883  004A28  25C6               	addwf	moteApp_convertSensorValue@convertedValue& (0+255),w,b
 10884  004A2A  0100               	movlb	0	; () banked
 10885  004A2C  6FC3               	movwf	(??_moteApp_convertSensorValue+1)& (0+255),b
 10886  004A2E  0E00               	movlw	0
 10887  004A30  0100               	movlb	0	; () banked
 10888  004A32  21C7               	addwfc	(moteApp_convertSensorValue@convertedValue+1)& (0+255),w,b
 10889  004A34  0100               	movlb	0	; () banked
 10890  004A36  6FC4               	movwf	(??_moteApp_convertSensorValue+2)& (0+255),b
 10891  004A38  0ED0               	movlw	208
 10892  004A3A  0100               	movlb	0	; () banked
 10893  004A3C  25C3               	addwf	(??_moteApp_convertSensorValue+1)& (0+255),w,b
 10894  004A3E  0100               	movlb	0	; () banked
 10895  004A40  6FC6               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 10896  004A42  0EFF               	movlw	255
 10897  004A44  0100               	movlb	0	; () banked
 10898  004A46  21C4               	addwfc	(??_moteApp_convertSensorValue+2)& (0+255),w,b
 10899  004A48  0100               	movlb	0	; () banked
 10900  004A4A  6FC7               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 10901                           
 10902                           ; BSR set to: 0
 10903  004A4C  0100               	movlb	0	; () banked
 10904  004A4E  4BC0               	infsnz	moteApp_convertSensorValue@string& (0+255),f,b
 10905  004A50  2BC1               	incf	(moteApp_convertSensorValue@string+1)& (0+255),f,b
 10906                           
 10907                           ;MOTEapp.c: 1360: }
 10908  004A52  D001               	goto	l11799
 10909                           
 10910                           ; BSR set to: 0
 10911                           ;MOTEapp.c: 1361: else
 10912                           ;MOTEapp.c: 1362: {
 10913                           ;MOTEapp.c: 1363: break;
 10914  004A54  D006               	goto	l716
 10915  004A56                     l11799:
 10916                           
 10917                           ; BSR set to: 0
 10918  004A56  0100               	movlb	0	; () banked
 10919  004A58  2BC5               	incf	moteApp_convertSensorValue@index& (0+255),f,b
 10920  004A5A                     l11801:
 10921                           
 10922                           ; BSR set to: 0
 10923  004A5A  0E03               	movlw	3
 10924  004A5C  0100               	movlb	0	; () banked
 10925  004A5E  65C5               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 10926  004A60  D7BD               	goto	l11789
 10927  004A62                     l716:
 10928                           
 10929                           ; BSR set to: 0
 10930                           ;MOTEapp.c: 1364: }
 10931                           ;MOTEapp.c: 1365: }
 10932                           ;MOTEapp.c: 1366: return convertedValue;
 10933  004A62  C0C6  F0C0         	movff	moteApp_convertSensorValue@convertedValue,?_moteApp_convertSensorValue
 10934  004A66  C0C7  F0C1         	movff	moteApp_convertSensorValue@convertedValue+1,?_moteApp_convertSensorValue+1
 10935                           
 10936                           ; BSR set to: 0
 10937  004A6A  0012               	return		;funcret
 10938  004A6C                     __end_of_moteApp_convertSensorValue:
 10939                           	opt stack 0
 10940                           tblptru	equ	0xFF8
 10941                           tblptrh	equ	0xFF7
 10942                           tblptrl	equ	0xFF6
 10943                           tablat	equ	0xFF5
 10944                           prodh	equ	0xFF4
 10945                           prodl	equ	0xFF3
 10946                           intcon	equ	0xFF2
 10947                           postinc0	equ	0xFEE
 10948                           wreg	equ	0xFE8
 10949                           indf1	equ	0xFE7
 10950                           postdec1	equ	0xFE5
 10951                           fsr1h	equ	0xFE2
 10952                           fsr1l	equ	0xFE1
 10953                           indf2	equ	0xFDF
 10954                           fsr2h	equ	0xFDA
 10955                           fsr2l	equ	0xFD9
 10956                           status	equ	0xFD8
 10957                           
 10958 ;; *************** function ___wmul *****************
 10959 ;; Defined at:
 10960 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 10961 ;; Parameters:    Size  Location     Type
 10962 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10963 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10964 ;; Auto vars:     Size  Location     Type
 10965 ;;  product         2    4[BANK0 ] unsigned int 
 10966 ;; Return value:  Size  Location     Type
 10967 ;;                  2    0[BANK0 ] unsigned int 
 10968 ;; Registers used:
 10969 ;;		wreg, status,2, status,0, prodl, prodh
 10970 ;; Tracked objects:
 10971 ;;		On entry : 0/0
 10972 ;;		On exit  : 0/0
 10973 ;;		Unchanged: 0/0
 10974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10975 ;;      Params:         0       4       0       0       0       0       0       0       0
 10976 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10977 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10978 ;;      Totals:         0       6       0       0       0       0       0       0       0
 10979 ;;Total ram usage:        6 bytes
 10980 ;; Hardware stack levels used:    1
 10981 ;; Hardware stack levels required when called:   11
 10982 ;; This function calls:
 10983 ;;		Nothing
 10984 ;; This function is called by:
 10985 ;;		_moteApp_convertSensorValue
 10986 ;; This function uses a non-reentrant model
 10987 ;;
 10988                           
 10989                           	psect	text21
 10990  005A10                     __ptext21:
 10991                           	opt stack 0
 10992  005A10                     ___wmul:
 10993                           	opt stack 16
 10994                           
 10995                           ; BSR set to: 0
 10996                           ;incstack = 0
 10997  005A10  0100               	movlb	0	; () banked
 10998  005A12  51AF               	movf	___wmul@multiplier& (0+255),w,b
 10999  005A14  0100               	movlb	0	; () banked
 11000  005A16  03B1               	mulwf	___wmul@multiplicand& (0+255),b
 11001  005A18  CFF3 F0B3          	movff	prodl,___wmul@product
 11002  005A1C  CFF4 F0B4          	movff	prodh,___wmul@product+1
 11003  005A20  0100               	movlb	0	; () banked
 11004  005A22  51AF               	movf	___wmul@multiplier& (0+255),w,b
 11005  005A24  0100               	movlb	0	; () banked
 11006  005A26  03B2               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11007  005A28  50F3               	movf	prodl,w,c
 11008  005A2A  0100               	movlb	0	; () banked
 11009  005A2C  27B4               	addwf	(___wmul@product+1)& (0+255),f,b
 11010  005A2E  0100               	movlb	0	; () banked
 11011  005A30  51B0               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11012  005A32  0100               	movlb	0	; () banked
 11013  005A34  03B1               	mulwf	___wmul@multiplicand& (0+255),b
 11014  005A36  50F3               	movf	prodl,w,c
 11015  005A38  0100               	movlb	0	; () banked
 11016  005A3A  27B4               	addwf	(___wmul@product+1)& (0+255),f,b
 11017                           
 11018                           ; BSR set to: 0
 11019  005A3C  C0B3  F0AF         	movff	___wmul@product,?___wmul
 11020  005A40  C0B4  F0B0         	movff	___wmul@product+1,?___wmul+1
 11021  005A44  0012               	return	
 11022                           
 11023                           ; BSR set to: 0
 11024                           
 11025                           ; BSR set to: 0
 11026  005A46  0012               	return		;funcret
 11027  005A48                     __end_of___wmul:
 11028                           	opt stack 0
 11029                           tblptru	equ	0xFF8
 11030                           tblptrh	equ	0xFF7
 11031                           tblptrl	equ	0xFF6
 11032                           tablat	equ	0xFF5
 11033                           prodh	equ	0xFF4
 11034                           prodl	equ	0xFF3
 11035                           intcon	equ	0xFF2
 11036                           postinc0	equ	0xFEE
 11037                           wreg	equ	0xFE8
 11038                           indf1	equ	0xFE7
 11039                           postdec1	equ	0xFE5
 11040                           fsr1h	equ	0xFE2
 11041                           fsr1l	equ	0xFE1
 11042                           indf2	equ	0xFDF
 11043                           fsr2h	equ	0xFDA
 11044                           fsr2l	equ	0xFD9
 11045                           status	equ	0xFD8
 11046                           
 11047 ;; *************** function _moteApp_clearBuffers *****************
 11048 ;; Defined at:
 11049 ;;		line 1288 in file "../Includes/Board/MOTEapp.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;		None
 11052 ;; Auto vars:     Size  Location     Type
 11053 ;;  counter         1    3[BANK0 ] unsigned char 
 11054 ;;  counter         1    2[BANK0 ] unsigned char 
 11055 ;;  counter         1    1[BANK0 ] unsigned char 
 11056 ;;  counter         1    0[BANK0 ] unsigned char 
 11057 ;; Return value:  Size  Location     Type
 11058 ;;		None               void
 11059 ;; Registers used:
 11060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/0
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11066 ;;      Params:         0       0       0       0       0       0       0       0       0
 11067 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11068 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11069 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11070 ;;Total ram usage:        4 bytes
 11071 ;; Hardware stack levels used:    1
 11072 ;; Hardware stack levels required when called:   11
 11073 ;; This function calls:
 11074 ;;		Nothing
 11075 ;; This function is called by:
 11076 ;;		_moteRunningProcess
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080                           	psect	text22
 11081  004436                     __ptext22:
 11082                           	opt stack 0
 11083  004436                     _moteApp_clearBuffers:
 11084                           	opt stack 17
 11085                           
 11086                           ;MOTEapp.c: 1290: for (uint8_t counter = 0; counter < 3; counter++)
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;incstack = 0
 11090  004436  0E00               	movlw	0
 11091  004438  0100               	movlb	0	; () banked
 11092  00443A  6FAF               	movwf	moteApp_clearBuffers@counter& (0+255),b
 11093  00443C                     l11859:
 11094                           
 11095                           ; BSR set to: 0
 11096  00443C  0E02               	movlw	2
 11097  00443E  0100               	movlb	0	; () banked
 11098  004440  65AF               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 11099  004442  D001               	goto	l11863
 11100                           
 11101                           ; BSR set to: 0
 11102  004444  D00E               	goto	l11869
 11103  004446                     l11863:
 11104                           
 11105                           ; BSR set to: 0
 11106                           ;MOTEapp.c: 1291: {
 11107                           ;MOTEapp.c: 1292: responsePortNum[counter] = 0;
 11108  004446  0100               	movlb	0	; () banked
 11109  004448  51AF               	movf	moteApp_clearBuffers@counter& (0+255),w,b
 11110  00444A  0D01               	mullw	1
 11111  00444C  0EAA               	movlw	low _responsePortNum
 11112  00444E  24F3               	addwf	prodl,w,c
 11113  004450  6ED9               	movwf	fsr2l,c
 11114  004452  0E00               	movlw	high _responsePortNum
 11115  004454  20F4               	addwfc	prodh,w,c
 11116  004456  6EDA               	movwf	fsr2h,c
 11117  004458  0E00               	movlw	0
 11118  00445A  6EDF               	movwf	indf2,c
 11119                           
 11120                           ; BSR set to: 0
 11121  00445C  0100               	movlb	0	; () banked
 11122  00445E  2BAF               	incf	moteApp_clearBuffers@counter& (0+255),f,b
 11123  004460  D7ED               	goto	l11859
 11124  004462                     l11869:
 11125                           
 11126                           ; BSR set to: 0
 11127                           ;MOTEapp.c: 1293: }
 11128                           ;MOTEapp.c: 1294: for (uint8_t counter = 0; counter < 34; counter++)
 11129  004462  0E00               	movlw	0
 11130  004464  0100               	movlb	0	; () banked
 11131  004466  6FB0               	movwf	moteApp_clearBuffers@counter_1904& (0+255),b
 11132  004468                     l11871:
 11133                           
 11134                           ; BSR set to: 0
 11135  004468  0E21               	movlw	33
 11136  00446A  0100               	movlb	0	; () banked
 11137  00446C  65B0               	cpfsgt	moteApp_clearBuffers@counter_1904& (0+255),b
 11138  00446E  D001               	goto	l11875
 11139                           
 11140                           ; BSR set to: 0
 11141  004470  D00E               	goto	l11881
 11142  004472                     l11875:
 11143                           
 11144                           ; BSR set to: 0
 11145                           ;MOTEapp.c: 1295: {
 11146                           ;MOTEapp.c: 1296: responseId[counter] = 0;
 11147  004472  0100               	movlb	0	; () banked
 11148  004474  51B0               	movf	moteApp_clearBuffers@counter_1904& (0+255),w,b
 11149  004476  0D01               	mullw	1
 11150  004478  0E20               	movlw	low _responseId
 11151  00447A  24F3               	addwf	prodl,w,c
 11152  00447C  6ED9               	movwf	fsr2l,c
 11153  00447E  0E01               	movlw	high _responseId
 11154  004480  20F4               	addwfc	prodh,w,c
 11155  004482  6EDA               	movwf	fsr2h,c
 11156  004484  0E00               	movlw	0
 11157  004486  6EDF               	movwf	indf2,c
 11158                           
 11159                           ; BSR set to: 0
 11160  004488  0100               	movlb	0	; () banked
 11161  00448A  2BB0               	incf	moteApp_clearBuffers@counter_1904& (0+255),f,b
 11162  00448C  D7ED               	goto	l11871
 11163  00448E                     l11881:
 11164                           
 11165                           ; BSR set to: 0
 11166                           ;MOTEapp.c: 1297: }
 11167                           ;MOTEapp.c: 1298: for (uint8_t counter = 0; counter < 32; counter++)
 11168  00448E  0E00               	movlw	0
 11169  004490  0100               	movlb	0	; () banked
 11170  004492  6FB1               	movwf	moteApp_clearBuffers@counter_1905& (0+255),b
 11171  004494                     l11883:
 11172                           
 11173                           ; BSR set to: 0
 11174  004494  0E1F               	movlw	31
 11175  004496  0100               	movlb	0	; () banked
 11176  004498  65B1               	cpfsgt	moteApp_clearBuffers@counter_1905& (0+255),b
 11177  00449A  D001               	goto	l11887
 11178                           
 11179                           ; BSR set to: 0
 11180  00449C  D00E               	goto	l11893
 11181  00449E                     l11887:
 11182                           
 11183                           ; BSR set to: 0
 11184                           ;MOTEapp.c: 1299: {
 11185                           ;MOTEapp.c: 1300: responseData[counter] = 0;
 11186  00449E  0100               	movlb	0	; () banked
 11187  0044A0  51B1               	movf	moteApp_clearBuffers@counter_1905& (0+255),w,b
 11188  0044A2  0D01               	mullw	1
 11189  0044A4  0EB8               	movlw	low _responseData
 11190  0044A6  24F3               	addwf	prodl,w,c
 11191  0044A8  6ED9               	movwf	fsr2l,c
 11192  0044AA  0E01               	movlw	high _responseData
 11193  0044AC  20F4               	addwfc	prodh,w,c
 11194  0044AE  6EDA               	movwf	fsr2h,c
 11195  0044B0  0E00               	movlw	0
 11196  0044B2  6EDF               	movwf	indf2,c
 11197                           
 11198                           ; BSR set to: 0
 11199  0044B4  0100               	movlb	0	; () banked
 11200  0044B6  2BB1               	incf	moteApp_clearBuffers@counter_1905& (0+255),f,b
 11201  0044B8  D7ED               	goto	l11883
 11202  0044BA                     l11893:
 11203                           
 11204                           ; BSR set to: 0
 11205                           ;MOTEapp.c: 1301: }
 11206                           ;MOTEapp.c: 1302: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
 11207  0044BA  0E00               	movlw	0
 11208  0044BC  0100               	movlb	0	; () banked
 11209  0044BE  6FB2               	movwf	moteApp_clearBuffers@counter_1906& (0+255),b
 11210                           
 11211                           ; BSR set to: 0
 11212  0044C0  0E0F               	movlw	15
 11213  0044C2  0100               	movlb	0	; () banked
 11214  0044C4  65B2               	cpfsgt	moteApp_clearBuffers@counter_1906& (0+255),b
 11215  0044C6  D002               	goto	l11899
 11216  0044C8  0012               	return	
 11217                           
 11218                           ; BSR set to: 0
 11219  0044CA  0012               	return	
 11220  0044CC                     l11899:
 11221                           
 11222                           ; BSR set to: 0
 11223                           ;MOTEapp.c: 1303: {
 11224                           ;MOTEapp.c: 1304: dataBuffer[counter] = 0;
 11225  0044CC  0100               	movlb	0	; () banked
 11226  0044CE  51B2               	movf	moteApp_clearBuffers@counter_1906& (0+255),w,b
 11227  0044D0  0D01               	mullw	1
 11228  0044D2  0E10               	movlw	low _dataBuffer
 11229  0044D4  24F3               	addwf	prodl,w,c
 11230  0044D6  6ED9               	movwf	fsr2l,c
 11231  0044D8  0E01               	movlw	high _dataBuffer
 11232  0044DA  20F4               	addwfc	prodh,w,c
 11233  0044DC  6EDA               	movwf	fsr2h,c
 11234  0044DE  0E00               	movlw	0
 11235  0044E0  6EDF               	movwf	indf2,c
 11236                           
 11237                           ; BSR set to: 0
 11238  0044E2  0100               	movlb	0	; () banked
 11239  0044E4  2BB2               	incf	moteApp_clearBuffers@counter_1906& (0+255),f,b
 11240                           
 11241                           ; BSR set to: 0
 11242  0044E6  0E0F               	movlw	15
 11243  0044E8  0100               	movlb	0	; () banked
 11244  0044EA  65B2               	cpfsgt	moteApp_clearBuffers@counter_1906& (0+255),b
 11245  0044EC  D7EF               	goto	l11899
 11246  0044EE  0012               	return	
 11247                           
 11248                           ; BSR set to: 0
 11249                           
 11250                           ; BSR set to: 0
 11251  0044F0  0012               	return		;funcret
 11252  0044F2                     __end_of_moteApp_clearBuffers:
 11253                           	opt stack 0
 11254                           tblptru	equ	0xFF8
 11255                           tblptrh	equ	0xFF7
 11256                           tblptrl	equ	0xFF6
 11257                           tablat	equ	0xFF5
 11258                           prodh	equ	0xFF4
 11259                           prodl	equ	0xFF3
 11260                           intcon	equ	0xFF2
 11261                           postinc0	equ	0xFEE
 11262                           wreg	equ	0xFE8
 11263                           indf1	equ	0xFE7
 11264                           postdec1	equ	0xFE5
 11265                           fsr1h	equ	0xFE2
 11266                           fsr1l	equ	0xFE1
 11267                           indf2	equ	0xFDF
 11268                           fsr2h	equ	0xFDA
 11269                           fsr2l	equ	0xFD9
 11270                           status	equ	0xFD8
 11271                           
 11272 ;; *************** function _moteApp_addToDataBuffer *****************
 11273 ;; Defined at:
 11274 ;;		line 1330 in file "../Includes/Board/MOTEapp.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;  string          3    0[BANK0 ] PTR const unsigned char 
 11277 ;;		 -> ROM(32767), 
 11278 ;;  bufferLocati    1    3[BANK0 ] unsigned char 
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;  index           1    4[BANK0 ] unsigned char 
 11281 ;; Return value:  Size  Location     Type
 11282 ;;                  1    wreg      unsigned char 
 11283 ;; Registers used:
 11284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11285 ;; Tracked objects:
 11286 ;;		On entry : 0/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11290 ;;      Params:         0       4       0       0       0       0       0       0       0
 11291 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11292 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11293 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11294 ;;Total ram usage:        5 bytes
 11295 ;; Hardware stack levels used:    1
 11296 ;; Hardware stack levels required when called:   11
 11297 ;; This function calls:
 11298 ;;		Nothing
 11299 ;; This function is called by:
 11300 ;;		_moteRunningProcess
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text23
 11305  004E60                     __ptext23:
 11306                           	opt stack 0
 11307  004E60                     _moteApp_addToDataBuffer:
 11308                           	opt stack 17
 11309                           
 11310                           ;MOTEapp.c: 1332: uint8_t index;
 11311                           ;MOTEapp.c: 1333: for(index = 0; index < 6; index++)
 11312                           
 11313                           ; BSR set to: 0
 11314                           ;incstack = 0
 11315  004E60  0E00               	movlw	0
 11316  004E62  0100               	movlb	0	; () banked
 11317  004E64  6FB3               	movwf	moteApp_addToDataBuffer@index& (0+255),b
 11318  004E66                     l11933:
 11319                           
 11320                           ; BSR set to: 0
 11321  004E66  0E05               	movlw	5
 11322  004E68  0100               	movlb	0	; () banked
 11323  004E6A  65B3               	cpfsgt	moteApp_addToDataBuffer@index& (0+255),b
 11324  004E6C  D001               	goto	l11937
 11325                           
 11326                           ; BSR set to: 0
 11327  004E6E  D036               	goto	l11951
 11328  004E70                     l11937:
 11329                           
 11330                           ; BSR set to: 0
 11331                           ;MOTEapp.c: 1334: {
 11332                           ;MOTEapp.c: 1335: if (*string != 0)
 11333  004E70  C0AF  FFF6         	movff	moteApp_addToDataBuffer@string,tblptrl
 11334  004E74  C0B0  FFF7         	movff	moteApp_addToDataBuffer@string+1,tblptrh
 11335  004E78  C0B1  FFF8         	movff	moteApp_addToDataBuffer@string+2,tblptru
 11336  004E7C  0008               	tblrd		*
 11337  004E7E  50F5               	movf	tablat,w,c
 11338  004E80  0900               	iorlw	0
 11339  004E82  B4D8               	btfsc	status,2,c
 11340  004E84  D01C               	goto	l11945
 11341                           
 11342                           ; BSR set to: 0
 11343                           ;MOTEapp.c: 1336: {
 11344                           ;MOTEapp.c: 1337: dataBuffer[bufferLocation++] = *string++;
 11345  004E86  C0AF  FFF6         	movff	moteApp_addToDataBuffer@string,tblptrl
 11346  004E8A  C0B0  FFF7         	movff	moteApp_addToDataBuffer@string+1,tblptrh
 11347  004E8E  C0B1  FFF8         	movff	moteApp_addToDataBuffer@string+2,tblptru
 11348  004E92  0100               	movlb	0	; () banked
 11349  004E94  51B2               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11350  004E96  0D01               	mullw	1
 11351  004E98  0E10               	movlw	low _dataBuffer
 11352  004E9A  24F3               	addwf	prodl,w,c
 11353  004E9C  6ED9               	movwf	fsr2l,c
 11354  004E9E  0E01               	movlw	high _dataBuffer
 11355  004EA0  20F4               	addwfc	prodh,w,c
 11356  004EA2  6EDA               	movwf	fsr2h,c
 11357  004EA4  0008               	tblrd		*
 11358  004EA6  CFF5 FFDF          	movff	tablat,indf2
 11359                           
 11360                           ; BSR set to: 0
 11361  004EAA  0100               	movlb	0	; () banked
 11362  004EAC  0E01               	movlw	1
 11363  004EAE  27AF               	addwf	moteApp_addToDataBuffer@string& (0+255),f,b
 11364  004EB0  0E00               	movlw	0
 11365  004EB2  23B0               	addwfc	(moteApp_addToDataBuffer@string+1)& (0+255),f,b
 11366  004EB4  0E00               	movlw	0
 11367  004EB6  23B1               	addwfc	(moteApp_addToDataBuffer@string+2)& (0+255),f,b
 11368                           
 11369                           ; BSR set to: 0
 11370  004EB8  0100               	movlb	0	; () banked
 11371  004EBA  2BB2               	incf	moteApp_addToDataBuffer@bufferLocation& (0+255),f,b
 11372                           
 11373                           ;MOTEapp.c: 1338: }
 11374  004EBC  D00C               	goto	l11947
 11375  004EBE                     l11945:
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;MOTEapp.c: 1339: else
 11379                           ;MOTEapp.c: 1340: {
 11380                           ;MOTEapp.c: 1341: dataBuffer[bufferLocation] = 0x20;
 11381  004EBE  0100               	movlb	0	; () banked
 11382  004EC0  51B2               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11383  004EC2  0D01               	mullw	1
 11384  004EC4  0E10               	movlw	low _dataBuffer
 11385  004EC6  24F3               	addwf	prodl,w,c
 11386  004EC8  6ED9               	movwf	fsr2l,c
 11387  004ECA  0E01               	movlw	high _dataBuffer
 11388  004ECC  20F4               	addwfc	prodh,w,c
 11389  004ECE  6EDA               	movwf	fsr2h,c
 11390  004ED0  0E20               	movlw	32
 11391  004ED2  6EDF               	movwf	indf2,c
 11392                           
 11393                           ;MOTEapp.c: 1342: break;
 11394  004ED4  D003               	goto	l11951
 11395  004ED6                     l11947:
 11396                           
 11397                           ; BSR set to: 0
 11398  004ED6  0100               	movlb	0	; () banked
 11399  004ED8  2BB3               	incf	moteApp_addToDataBuffer@index& (0+255),f,b
 11400  004EDA  D7C5               	goto	l11933
 11401  004EDC                     l11951:
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;MOTEapp.c: 1343: }
 11405                           ;MOTEapp.c: 1344: }
 11406                           ;MOTEapp.c: 1345: return index;
 11407  004EDC  0100               	movlb	0	; () banked
 11408  004EDE  51B3               	movf	moteApp_addToDataBuffer@index& (0+255),w,b
 11409  004EE0  0012               	return	
 11410                           
 11411                           ; BSR set to: 0
 11412                           
 11413                           ; BSR set to: 0
 11414  004EE2  0012               	return		;funcret
 11415  004EE4                     __end_of_moteApp_addToDataBuffer:
 11416                           	opt stack 0
 11417                           tblptru	equ	0xFF8
 11418                           tblptrh	equ	0xFF7
 11419                           tblptrl	equ	0xFF6
 11420                           tablat	equ	0xFF5
 11421                           prodh	equ	0xFF4
 11422                           prodl	equ	0xFF3
 11423                           intcon	equ	0xFF2
 11424                           postinc0	equ	0xFEE
 11425                           wreg	equ	0xFE8
 11426                           indf1	equ	0xFE7
 11427                           postdec1	equ	0xFE5
 11428                           fsr1h	equ	0xFE2
 11429                           fsr1l	equ	0xFE1
 11430                           indf2	equ	0xFDF
 11431                           fsr2h	equ	0xFDA
 11432                           fsr2l	equ	0xFD9
 11433                           status	equ	0xFD8
 11434                           
 11435 ;; *************** function _moteApp_add8bToDataBuffer *****************
 11436 ;; Defined at:
 11437 ;;		line 1308 in file "../Includes/Board/MOTEapp.c"
 11438 ;; Parameters:    Size  Location     Type
 11439 ;;  number          1    wreg     unsigned char 
 11440 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;  number          1    9[BANK0 ] unsigned char 
 11443 ;; Return value:  Size  Location     Type
 11444 ;;		None               void
 11445 ;; Registers used:
 11446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11452 ;;      Params:         0       1       0       0       0       0       0       0       0
 11453 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11454 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11455 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11456 ;;Total ram usage:        4 bytes
 11457 ;; Hardware stack levels used:    1
 11458 ;; Hardware stack levels required when called:   12
 11459 ;; This function calls:
 11460 ;;		___awmod
 11461 ;;		___lbdiv
 11462 ;; This function is called by:
 11463 ;;		_moteRunningProcess
 11464 ;; This function uses a non-reentrant model
 11465 ;;
 11466                           
 11467                           	psect	text24
 11468  003D94                     __ptext24:
 11469                           	opt stack 0
 11470  003D94                     _moteApp_add8bToDataBuffer:
 11471                           	opt stack 16
 11472                           
 11473                           ; BSR set to: 0
 11474                           ;incstack = 0
 11475                           ;moteApp_add8bToDataBuffer@number stored from wreg
 11476  003D94  0100               	movlb	0	; () banked
 11477  003D96  6FB8               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11478                           
 11479                           ; BSR set to: 0
 11480                           ;MOTEapp.c: 1310: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 11481  003D98  0100               	movlb	0	; () banked
 11482  003D9A  51B5               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11483  003D9C  0100               	movlb	0	; () banked
 11484  003D9E  6FB6               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11485  003DA0  6BB7               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11486  003DA2  0E02               	movlw	2
 11487  003DA4  0100               	movlb	0	; () banked
 11488  003DA6  27B6               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11489  003DA8  0E00               	movlw	0
 11490  003DAA  23B7               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11491  003DAC  0E10               	movlw	low _dataBuffer
 11492  003DAE  0100               	movlb	0	; () banked
 11493  003DB0  25B6               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11494  003DB2  6ED9               	movwf	fsr2l,c
 11495  003DB4  0E01               	movlw	high _dataBuffer
 11496  003DB6  0100               	movlb	0	; () banked
 11497  003DB8  21B7               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11498  003DBA  6EDA               	movwf	fsr2h,c
 11499  003DBC  C0B8  F0AF         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11500  003DC0  0100               	movlb	0	; () banked
 11501  003DC2  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
 11502  003DC4  0E00               	movlw	0
 11503  003DC6  0100               	movlb	0	; () banked
 11504  003DC8  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
 11505  003DCA  0E0A               	movlw	10
 11506  003DCC  6FB1               	movwf	___awmod@divisor& (0+255),b
 11507  003DCE  EC32  F023         	call	___awmod	;wreg free
 11508  003DD2  0100               	movlb	0	; () banked
 11509  003DD4  51AF               	movf	?___awmod& (0+255),w,b
 11510  003DD6  0F30               	addlw	48
 11511  003DD8  6EDF               	movwf	indf2,c
 11512                           
 11513                           ; BSR set to: 0
 11514                           ;MOTEapp.c: 1311: number /= 10;
 11515  003DDA  0E0A               	movlw	10
 11516  003DDC  0100               	movlb	0	; () banked
 11517  003DDE  6FAF               	movwf	___lbdiv@divisor& (0+255),b
 11518  003DE0  0100               	movlb	0	; () banked
 11519  003DE2  51B8               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11520  003DE4  EC85  F029         	call	___lbdiv
 11521  003DE8  0100               	movlb	0	; () banked
 11522  003DEA  6FB8               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11523                           
 11524                           ; BSR set to: 0
 11525                           ;MOTEapp.c: 1312: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 11526  003DEC  0100               	movlb	0	; () banked
 11527  003DEE  51B5               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11528  003DF0  0100               	movlb	0	; () banked
 11529  003DF2  6FB6               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11530  003DF4  6BB7               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11531  003DF6  0E01               	movlw	1
 11532  003DF8  0100               	movlb	0	; () banked
 11533  003DFA  27B6               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11534  003DFC  0E00               	movlw	0
 11535  003DFE  23B7               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11536  003E00  0E10               	movlw	low _dataBuffer
 11537  003E02  0100               	movlb	0	; () banked
 11538  003E04  25B6               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11539  003E06  6ED9               	movwf	fsr2l,c
 11540  003E08  0E01               	movlw	high _dataBuffer
 11541  003E0A  0100               	movlb	0	; () banked
 11542  003E0C  21B7               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11543  003E0E  6EDA               	movwf	fsr2h,c
 11544  003E10  C0B8  F0AF         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11545  003E14  0100               	movlb	0	; () banked
 11546  003E16  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
 11547  003E18  0E00               	movlw	0
 11548  003E1A  0100               	movlb	0	; () banked
 11549  003E1C  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
 11550  003E1E  0E0A               	movlw	10
 11551  003E20  6FB1               	movwf	___awmod@divisor& (0+255),b
 11552  003E22  EC32  F023         	call	___awmod	;wreg free
 11553  003E26  0100               	movlb	0	; () banked
 11554  003E28  51AF               	movf	?___awmod& (0+255),w,b
 11555  003E2A  0F30               	addlw	48
 11556  003E2C  6EDF               	movwf	indf2,c
 11557                           
 11558                           ;MOTEapp.c: 1313: number /= 10;
 11559  003E2E  0E0A               	movlw	10
 11560  003E30  0100               	movlb	0	; () banked
 11561  003E32  6FAF               	movwf	___lbdiv@divisor& (0+255),b
 11562  003E34  0100               	movlb	0	; () banked
 11563  003E36  51B8               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11564  003E38  EC85  F029         	call	___lbdiv
 11565  003E3C  0100               	movlb	0	; () banked
 11566  003E3E  6FB8               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11567                           
 11568                           ; BSR set to: 0
 11569                           ;MOTEapp.c: 1314: dataBuffer[bufferLocation] = '0' + (number % 10);
 11570  003E40  0100               	movlb	0	; () banked
 11571  003E42  51B5               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11572  003E44  0D01               	mullw	1
 11573  003E46  0E10               	movlw	low _dataBuffer
 11574  003E48  24F3               	addwf	prodl,w,c
 11575  003E4A  6ED9               	movwf	fsr2l,c
 11576  003E4C  0E01               	movlw	high _dataBuffer
 11577  003E4E  20F4               	addwfc	prodh,w,c
 11578  003E50  6EDA               	movwf	fsr2h,c
 11579  003E52  C0B8  F0AF         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11580  003E56  0100               	movlb	0	; () banked
 11581  003E58  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
 11582  003E5A  0E00               	movlw	0
 11583  003E5C  0100               	movlb	0	; () banked
 11584  003E5E  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
 11585  003E60  0E0A               	movlw	10
 11586  003E62  6FB1               	movwf	___awmod@divisor& (0+255),b
 11587  003E64  EC32  F023         	call	___awmod	;wreg free
 11588  003E68  0100               	movlb	0	; () banked
 11589  003E6A  51AF               	movf	?___awmod& (0+255),w,b
 11590  003E6C  0F30               	addlw	48
 11591  003E6E  6EDF               	movwf	indf2,c
 11592                           
 11593                           ; BSR set to: 0
 11594  003E70  0012               	return		;funcret
 11595  003E72                     __end_of_moteApp_add8bToDataBuffer:
 11596                           	opt stack 0
 11597                           tblptru	equ	0xFF8
 11598                           tblptrh	equ	0xFF7
 11599                           tblptrl	equ	0xFF6
 11600                           tablat	equ	0xFF5
 11601                           prodh	equ	0xFF4
 11602                           prodl	equ	0xFF3
 11603                           intcon	equ	0xFF2
 11604                           postinc0	equ	0xFEE
 11605                           wreg	equ	0xFE8
 11606                           indf1	equ	0xFE7
 11607                           postdec1	equ	0xFE5
 11608                           fsr1h	equ	0xFE2
 11609                           fsr1l	equ	0xFE1
 11610                           indf2	equ	0xFDF
 11611                           fsr2h	equ	0xFDA
 11612                           fsr2l	equ	0xFD9
 11613                           status	equ	0xFD8
 11614                           
 11615 ;; *************** function ___lbdiv *****************
 11616 ;; Defined at:
 11617 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbdiv.c"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;  dividend        1    wreg     unsigned char 
 11620 ;;  divisor         1    0[BANK0 ] unsigned char 
 11621 ;; Auto vars:     Size  Location     Type
 11622 ;;  dividend        1    1[BANK0 ] unsigned char 
 11623 ;;  quotient        1    3[BANK0 ] unsigned char 
 11624 ;;  counter         1    2[BANK0 ] unsigned char 
 11625 ;; Return value:  Size  Location     Type
 11626 ;;                  1    wreg      unsigned char 
 11627 ;; Registers used:
 11628 ;;		wreg, status,2, status,0
 11629 ;; Tracked objects:
 11630 ;;		On entry : 0/0
 11631 ;;		On exit  : 0/0
 11632 ;;		Unchanged: 0/0
 11633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11634 ;;      Params:         0       1       0       0       0       0       0       0       0
 11635 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11636 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11637 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11638 ;;Total ram usage:        4 bytes
 11639 ;; Hardware stack levels used:    1
 11640 ;; Hardware stack levels required when called:   11
 11641 ;; This function calls:
 11642 ;;		Nothing
 11643 ;; This function is called by:
 11644 ;;		_moteApp_add8bToDataBuffer
 11645 ;;		_oled_putUint8
 11646 ;;		_oled_putint8
 11647 ;; This function uses a non-reentrant model
 11648 ;;
 11649                           
 11650                           	psect	text25
 11651  00530A                     __ptext25:
 11652                           	opt stack 0
 11653  00530A                     ___lbdiv:
 11654                           	opt stack 16
 11655                           
 11656                           ; BSR set to: 0
 11657                           ;incstack = 0
 11658                           ;___lbdiv@dividend stored from wreg
 11659  00530A  0100               	movlb	0	; () banked
 11660  00530C  6FB0               	movwf	___lbdiv@dividend& (0+255),b
 11661                           
 11662                           ; BSR set to: 0
 11663  00530E  0E00               	movlw	0
 11664  005310  0100               	movlb	0	; () banked
 11665  005312  6FB2               	movwf	___lbdiv@quotient& (0+255),b
 11666                           
 11667                           ; BSR set to: 0
 11668  005314  0100               	movlb	0	; () banked
 11669  005316  51AF               	movf	___lbdiv@divisor& (0+255),w,b
 11670  005318  0100               	movlb	0	; () banked
 11671  00531A  B4D8               	btfsc	status,2,c
 11672  00531C  D026               	goto	l11683
 11673                           
 11674                           ; BSR set to: 0
 11675  00531E  0E01               	movlw	1
 11676  005320  0100               	movlb	0	; () banked
 11677  005322  6FB1               	movwf	___lbdiv@counter& (0+255),b
 11678  005324  D006               	goto	l11671
 11679  005326                     l11667:
 11680                           
 11681                           ; BSR set to: 0
 11682  005326  0100               	movlb	0	; () banked
 11683  005328  90D8               	bcf	status,0,c
 11684  00532A  37AF               	rlcf	___lbdiv@divisor& (0+255),f,b
 11685                           
 11686                           ; BSR set to: 0
 11687  00532C  0100               	movlb	0	; () banked
 11688  00532E  2BB1               	incf	___lbdiv@counter& (0+255),f,b
 11689  005330  D000               	goto	l11671
 11690  005332                     l11671:
 11691                           
 11692                           ; BSR set to: 0
 11693  005332  0100               	movlb	0	; () banked
 11694  005334  BFAF               	btfsc	___lbdiv@divisor& (0+255),7,b
 11695  005336  D002               	goto	l11673
 11696  005338  D7F6               	goto	l11667
 11697                           
 11698                           ; BSR set to: 0
 11699  00533A  D000               	goto	l11673
 11700  00533C                     l11673:
 11701                           
 11702                           ; BSR set to: 0
 11703  00533C  0100               	movlb	0	; () banked
 11704  00533E  90D8               	bcf	status,0,c
 11705  005340  37B2               	rlcf	___lbdiv@quotient& (0+255),f,b
 11706  005342  0100               	movlb	0	; () banked
 11707  005344  51AF               	movf	___lbdiv@divisor& (0+255),w,b
 11708  005346  0100               	movlb	0	; () banked
 11709  005348  5DB0               	subwf	___lbdiv@dividend& (0+255),w,b
 11710  00534A  A0D8               	btfss	status,0,c
 11711  00534C  D007               	goto	l11679
 11712                           
 11713                           ; BSR set to: 0
 11714  00534E  0100               	movlb	0	; () banked
 11715  005350  51AF               	movf	___lbdiv@divisor& (0+255),w,b
 11716  005352  0100               	movlb	0	; () banked
 11717  005354  5FB0               	subwf	___lbdiv@dividend& (0+255),f,b
 11718                           
 11719                           ; BSR set to: 0
 11720  005356  0100               	movlb	0	; () banked
 11721  005358  81B2               	bsf	___lbdiv@quotient& (0+255),0,b
 11722  00535A  D000               	goto	l11679
 11723  00535C                     l11679:
 11724                           
 11725                           ; BSR set to: 0
 11726  00535C  0100               	movlb	0	; () banked
 11727  00535E  90D8               	bcf	status,0,c
 11728  005360  33AF               	rrcf	___lbdiv@divisor& (0+255),f,b
 11729                           
 11730                           ; BSR set to: 0
 11731  005362  0100               	movlb	0	; () banked
 11732  005364  2FB1               	decfsz	___lbdiv@counter& (0+255),f,b
 11733  005366  D7EA               	goto	l11673
 11734                           
 11735                           ; BSR set to: 0
 11736  005368  D000               	goto	l11683
 11737  00536A                     l11683:
 11738                           
 11739                           ; BSR set to: 0
 11740  00536A  0100               	movlb	0	; () banked
 11741  00536C  51B2               	movf	___lbdiv@quotient& (0+255),w,b
 11742  00536E  0012               	return	
 11743                           
 11744                           ; BSR set to: 0
 11745                           
 11746                           ; BSR set to: 0
 11747  005370  0012               	return		;funcret
 11748  005372                     __end_of___lbdiv:
 11749                           	opt stack 0
 11750                           tblptru	equ	0xFF8
 11751                           tblptrh	equ	0xFF7
 11752                           tblptrl	equ	0xFF6
 11753                           tablat	equ	0xFF5
 11754                           prodh	equ	0xFF4
 11755                           prodl	equ	0xFF3
 11756                           intcon	equ	0xFF2
 11757                           postinc0	equ	0xFEE
 11758                           wreg	equ	0xFE8
 11759                           indf1	equ	0xFE7
 11760                           postdec1	equ	0xFE5
 11761                           fsr1h	equ	0xFE2
 11762                           fsr1l	equ	0xFE1
 11763                           indf2	equ	0xFDF
 11764                           fsr2h	equ	0xFDA
 11765                           fsr2l	equ	0xFD9
 11766                           status	equ	0xFD8
 11767                           
 11768 ;; *************** function ___awmod *****************
 11769 ;; Defined at:
 11770 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;  dividend        2    0[BANK0 ] int 
 11773 ;;  divisor         2    2[BANK0 ] int 
 11774 ;; Auto vars:     Size  Location     Type
 11775 ;;  sign            1    5[BANK0 ] unsigned char 
 11776 ;;  counter         1    4[BANK0 ] unsigned char 
 11777 ;; Return value:  Size  Location     Type
 11778 ;;                  2    0[BANK0 ] int 
 11779 ;; Registers used:
 11780 ;;		wreg, status,2, status,0
 11781 ;; Tracked objects:
 11782 ;;		On entry : 0/0
 11783 ;;		On exit  : 0/0
 11784 ;;		Unchanged: 0/0
 11785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11786 ;;      Params:         0       4       0       0       0       0       0       0       0
 11787 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11788 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11789 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11790 ;;Total ram usage:        6 bytes
 11791 ;; Hardware stack levels used:    1
 11792 ;; Hardware stack levels required when called:   11
 11793 ;; This function calls:
 11794 ;;		Nothing
 11795 ;; This function is called by:
 11796 ;;		_moteApp_add8bToDataBuffer
 11797 ;;		_oled_putUint8
 11798 ;;		_oled_putint8
 11799 ;; This function uses a non-reentrant model
 11800 ;;
 11801                           
 11802                           	psect	text26
 11803  004664                     __ptext26:
 11804                           	opt stack 0
 11805  004664                     ___awmod:
 11806                           	opt stack 16
 11807                           
 11808                           ; BSR set to: 0
 11809                           ;incstack = 0
 11810  004664  0E00               	movlw	0
 11811  004666  0100               	movlb	0	; () banked
 11812  004668  6FB4               	movwf	___awmod@sign& (0+255),b
 11813                           
 11814                           ; BSR set to: 0
 11815  00466A  0100               	movlb	0	; () banked
 11816  00466C  AFB0               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11817  00466E  D009               	goto	l11589
 11818                           
 11819                           ; BSR set to: 0
 11820  004670  0100               	movlb	0	; () banked
 11821  004672  6DAF               	negf	___awmod@dividend& (0+255),b
 11822  004674  1FB0               	comf	(___awmod@dividend+1)& (0+255),f,b
 11823  004676  B0D8               	btfsc	status,0,c
 11824  004678  2BB0               	incf	(___awmod@dividend+1)& (0+255),f,b
 11825                           
 11826                           ; BSR set to: 0
 11827  00467A  0E01               	movlw	1
 11828  00467C  0100               	movlb	0	; () banked
 11829  00467E  6FB4               	movwf	___awmod@sign& (0+255),b
 11830  004680  D000               	goto	l11589
 11831  004682                     l11589:
 11832                           
 11833                           ; BSR set to: 0
 11834  004682  0100               	movlb	0	; () banked
 11835  004684  AFB2               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11836  004686  D006               	goto	l11593
 11837                           
 11838                           ; BSR set to: 0
 11839  004688  0100               	movlb	0	; () banked
 11840  00468A  6DB1               	negf	___awmod@divisor& (0+255),b
 11841  00468C  1FB2               	comf	(___awmod@divisor+1)& (0+255),f,b
 11842  00468E  B0D8               	btfsc	status,0,c
 11843  004690  2BB2               	incf	(___awmod@divisor+1)& (0+255),f,b
 11844  004692  D000               	goto	l11593
 11845  004694                     l11593:
 11846                           
 11847                           ; BSR set to: 0
 11848  004694  0100               	movlb	0	; () banked
 11849  004696  51B1               	movf	___awmod@divisor& (0+255),w,b
 11850  004698  0100               	movlb	0	; () banked
 11851  00469A  11B2               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11852  00469C  B4D8               	btfsc	status,2,c
 11853  00469E  D02B               	goto	l11609
 11854                           
 11855                           ; BSR set to: 0
 11856  0046A0  0E01               	movlw	1
 11857  0046A2  0100               	movlb	0	; () banked
 11858  0046A4  6FB3               	movwf	___awmod@counter& (0+255),b
 11859  0046A6  D007               	goto	l11599
 11860  0046A8                     l11597:
 11861                           
 11862                           ; BSR set to: 0
 11863  0046A8  0100               	movlb	0	; () banked
 11864  0046AA  90D8               	bcf	status,0,c
 11865  0046AC  37B1               	rlcf	___awmod@divisor& (0+255),f,b
 11866  0046AE  37B2               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11867  0046B0  0100               	movlb	0	; () banked
 11868  0046B2  2BB3               	incf	___awmod@counter& (0+255),f,b
 11869  0046B4  D000               	goto	l11599
 11870  0046B6                     l11599:
 11871                           
 11872                           ; BSR set to: 0
 11873  0046B6  0100               	movlb	0	; () banked
 11874  0046B8  BFB2               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 11875  0046BA  D002               	goto	l11601
 11876  0046BC  D7F5               	goto	l11597
 11877                           
 11878                           ; BSR set to: 0
 11879  0046BE  D000               	goto	l11601
 11880  0046C0                     l11601:
 11881                           
 11882                           ; BSR set to: 0
 11883  0046C0  0100               	movlb	0	; () banked
 11884  0046C2  51B1               	movf	___awmod@divisor& (0+255),w,b
 11885  0046C4  0100               	movlb	0	; () banked
 11886  0046C6  5DAF               	subwf	___awmod@dividend& (0+255),w,b
 11887  0046C8  0100               	movlb	0	; () banked
 11888  0046CA  51B2               	movf	(___awmod@divisor+1)& (0+255),w,b
 11889  0046CC  0100               	movlb	0	; () banked
 11890  0046CE  59B0               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11891  0046D0  A0D8               	btfss	status,0,c
 11892  0046D2  D009               	goto	l11605
 11893                           
 11894                           ; BSR set to: 0
 11895  0046D4  0100               	movlb	0	; () banked
 11896  0046D6  51B1               	movf	___awmod@divisor& (0+255),w,b
 11897  0046D8  0100               	movlb	0	; () banked
 11898  0046DA  5FAF               	subwf	___awmod@dividend& (0+255),f,b
 11899  0046DC  0100               	movlb	0	; () banked
 11900  0046DE  51B2               	movf	(___awmod@divisor+1)& (0+255),w,b
 11901  0046E0  0100               	movlb	0	; () banked
 11902  0046E2  5BB0               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11903  0046E4  D000               	goto	l11605
 11904  0046E6                     l11605:
 11905                           
 11906                           ; BSR set to: 0
 11907  0046E6  0100               	movlb	0	; () banked
 11908  0046E8  90D8               	bcf	status,0,c
 11909  0046EA  33B2               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11910  0046EC  33B1               	rrcf	___awmod@divisor& (0+255),f,b
 11911                           
 11912                           ; BSR set to: 0
 11913  0046EE  0100               	movlb	0	; () banked
 11914  0046F0  2FB3               	decfsz	___awmod@counter& (0+255),f,b
 11915  0046F2  D7E6               	goto	l11601
 11916                           
 11917                           ; BSR set to: 0
 11918  0046F4  D000               	goto	l11609
 11919  0046F6                     l11609:
 11920                           
 11921                           ; BSR set to: 0
 11922  0046F6  0100               	movlb	0	; () banked
 11923  0046F8  51B4               	movf	___awmod@sign& (0+255),w,b
 11924  0046FA  0100               	movlb	0	; () banked
 11925  0046FC  B4D8               	btfsc	status,2,c
 11926  0046FE  D006               	goto	l11613
 11927                           
 11928                           ; BSR set to: 0
 11929  004700  0100               	movlb	0	; () banked
 11930  004702  6DAF               	negf	___awmod@dividend& (0+255),b
 11931  004704  1FB0               	comf	(___awmod@dividend+1)& (0+255),f,b
 11932  004706  B0D8               	btfsc	status,0,c
 11933  004708  2BB0               	incf	(___awmod@dividend+1)& (0+255),f,b
 11934  00470A  D000               	goto	l11613
 11935  00470C                     l11613:
 11936                           
 11937                           ; BSR set to: 0
 11938  00470C  C0AF  F0AF         	movff	___awmod@dividend,?___awmod
 11939  004710  C0B0  F0B0         	movff	___awmod@dividend+1,?___awmod+1
 11940  004714  0012               	return	
 11941                           
 11942                           ; BSR set to: 0
 11943                           
 11944                           ; BSR set to: 0
 11945  004716  0012               	return		;funcret
 11946  004718                     __end_of___awmod:
 11947                           	opt stack 0
 11948                           tblptru	equ	0xFF8
 11949                           tblptrh	equ	0xFF7
 11950                           tblptrl	equ	0xFF6
 11951                           tablat	equ	0xFF5
 11952                           prodh	equ	0xFF4
 11953                           prodl	equ	0xFF3
 11954                           intcon	equ	0xFF2
 11955                           postinc0	equ	0xFEE
 11956                           wreg	equ	0xFE8
 11957                           indf1	equ	0xFE7
 11958                           postdec1	equ	0xFE5
 11959                           fsr1h	equ	0xFE2
 11960                           fsr1l	equ	0xFE1
 11961                           indf2	equ	0xFDF
 11962                           fsr2h	equ	0xFDA
 11963                           fsr2l	equ	0xFD9
 11964                           status	equ	0xFD8
 11965                           
 11966 ;; *************** function _moteApp_GoToSleep *****************
 11967 ;; Defined at:
 11968 ;;		line 1176 in file "../Includes/Board/MOTEapp.c"
 11969 ;; Parameters:    Size  Location     Type
 11970 ;;		None
 11971 ;; Auto vars:     Size  Location     Type
 11972 ;;  status          1   14[BANK0 ] unsigned char 
 11973 ;; Return value:  Size  Location     Type
 11974 ;;                  1    wreg      unsigned char 
 11975 ;; Registers used:
 11976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11977 ;; Tracked objects:
 11978 ;;		On entry : 0/0
 11979 ;;		On exit  : 0/0
 11980 ;;		Unchanged: 0/0
 11981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11982 ;;      Params:         0       0       0       0       0       0       0       0       0
 11983 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11984 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11985 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11986 ;;Total ram usage:        1 bytes
 11987 ;; Hardware stack levels used:    1
 11988 ;; Hardware stack levels required when called:   17
 11989 ;; This function calls:
 11990 ;;		_EUSART_FlushBuffer
 11991 ;;		_PIN_MANAGER_Initialize
 11992 ;;		_moduleResync
 11993 ;;		_moduleSleep
 11994 ;;		_moteApp_delayms
 11995 ;;		_oled_displayOff
 11996 ;;		_oled_init
 11997 ;; This function is called by:
 11998 ;;		_moteRunningProcess
 11999 ;; This function uses a non-reentrant model
 12000 ;;
 12001                           
 12002                           	psect	text27
 12003  00373A                     __ptext27:
 12004                           	opt stack 0
 12005  00373A                     _moteApp_GoToSleep:
 12006                           	opt stack 11
 12007                           
 12008                           ;MOTEapp.c: 1178: uint8_t status = 0;
 12009                           
 12010                           ; BSR set to: 0
 12011                           ;incstack = 0
 12012  00373A  0E00               	movlw	0
 12013  00373C  0100               	movlb	0	; () banked
 12014  00373E  6FBD               	movwf	moteApp_GoToSleep@status& (0+255),b
 12015                           
 12016                           ;MOTEapp.c: 1179: while (PORTBbits.RB0 == 0);
 12017  003740  D000               	goto	l672
 12018  003742                     l672:
 12019  003742  A081               	btfss	3969,0,c	;volatile
 12020  003744  D7FE               	goto	l672
 12021                           
 12022                           ;MOTEapp.c: 1180: moduleSleep();
 12023  003746  EC39  F02E         	call	_moduleSleep	;wreg free
 12024                           
 12025                           ;MOTEapp.c: 1181: oled_displayOff(1);
 12026  00374A  0E01               	movlw	1
 12027  00374C  EC8F  F02F         	call	_oled_displayOff
 12028                           
 12029                           ;MOTEapp.c: 1182: ADCON0bits.ADON = 0;
 12030  003750  90C2               	bcf	4034,0,c	;volatile
 12031                           
 12032                           ;MOTEapp.c: 1183: INTCONbits.GIE = 0;
 12033  003752  9EF2               	bcf	intcon,7,c	;volatile
 12034                           
 12035                           ;MOTEapp.c: 1184: GIE = 0;
 12036  003754  9EF2               	bcf	intcon,7,c	;volatile
 12037                           
 12038                           ;MOTEapp.c: 1185: PEIE = 0;
 12039  003756  9CF2               	bcf	intcon,6,c	;volatile
 12040                           
 12041                           ;MOTEapp.c: 1187: LATEbits.LATE2 = 0;
 12042  003758  948D               	bcf	3981,2,c	;volatile
 12043                           
 12044                           ;MOTEapp.c: 1188: PIE2bits.TMR3IE = 0;
 12045  00375A  92A0               	bcf	4000,1,c	;volatile
 12046                           
 12047                           ;MOTEapp.c: 1190: ANSELAbits.ANSA0 = 1;
 12048  00375C  010F               	movlb	15	; () banked
 12049  00375E  815B               	bsf	91,0,b	;volatile
 12050                           
 12051                           ; BSR set to: 15
 12052                           ;MOTEapp.c: 1192: PIE2bits.C1IE = 1;
 12053  003760  8CA0               	bsf	4000,6,c	;volatile
 12054                           
 12055                           ; BSR set to: 15
 12056                           ;MOTEapp.c: 1193: INTCON3bits.INT1IE = 1;
 12057  003762  86F0               	bsf	intcon3,3,c	;volatile
 12058                           
 12059                           ; BSR set to: 15
 12060                           ;MOTEapp.c: 1194: INTCONbits.INT0IE = 1;
 12061  003764  88F2               	bsf	intcon,4,c	;volatile
 12062                           
 12063                           ; BSR set to: 15
 12064                           ;MOTEapp.c: 1195: IOCCbits.IOCC2 = 1;
 12065  003766  8487               	bsf	3975,2,c	;volatile
 12066                           
 12067                           ; BSR set to: 15
 12068                           ;MOTEapp.c: 1196: INTCONbits.IOCIE = 1;
 12069  003768  86F2               	bsf	intcon,3,c	;volatile
 12070                           
 12071                           ; BSR set to: 15
 12072                           ;MOTEapp.c: 1198: status = PORTBbits.RB1;
 12073  00376A  0E00               	movlw	0
 12074  00376C  B281               	btfsc	3969,1,c	;volatile
 12075  00376E  0E01               	movlw	1
 12076  003770  0100               	movlb	0	; () banked
 12077  003772  6FBD               	movwf	moteApp_GoToSleep@status& (0+255),b
 12078                           
 12079                           ; BSR set to: 0
 12080                           ;MOTEapp.c: 1199: status = PORTBbits.RB0;
 12081  003774  0E00               	movlw	0
 12082  003776  B081               	btfsc	3969,0,c	;volatile
 12083  003778  0E01               	movlw	1
 12084  00377A  0100               	movlb	0	; () banked
 12085  00377C  6FBD               	movwf	moteApp_GoToSleep@status& (0+255),b
 12086                           
 12087                           ; BSR set to: 0
 12088                           ;MOTEapp.c: 1200: status = PORTCbits.RC2;
 12089  00377E  0E00               	movlw	0
 12090  003780  B482               	btfsc	3970,2,c	;volatile
 12091  003782  0E01               	movlw	1
 12092  003784  0100               	movlb	0	; () banked
 12093  003786  6FBD               	movwf	moteApp_GoToSleep@status& (0+255),b
 12094                           
 12095                           ; BSR set to: 0
 12096                           ;MOTEapp.c: 1202: if (periodicState)
 12097  003788  0100               	movlb	0	; () banked
 12098  00378A  51FC               	movf	_periodicState& (0+255),w,b
 12099  00378C  A4D8               	btfss	status,2,c
 12100                           
 12101                           ; BSR set to: 0
 12102                           ;MOTEapp.c: 1203: {
 12103                           ;MOTEapp.c: 1204: WDTCONbits.SWDTEN = 1;
 12104  00378E  80D1               	bsf	4049,0,c	;volatile
 12105                           
 12106                           ; BSR set to: 0
 12107                           ;MOTEapp.c: 1205: }
 12108                           ;MOTEapp.c: 1207: INTCONbits.IOCIF = 0;
 12109  003790  90F2               	bcf	intcon,0,c	;volatile
 12110                           
 12111                           ;MOTEapp.c: 1208: INTCONbits.INT0IF = 0;
 12112  003792  92F2               	bcf	intcon,1,c	;volatile
 12113                           
 12114                           ;MOTEapp.c: 1209: INTCON3bits.INT1IF = 0;
 12115  003794  90F0               	bcf	intcon3,0,c	;volatile
 12116                           
 12117                           ;MOTEapp.c: 1210: PIR2bits.C1IF = 0;
 12118  003796  9CA1               	bcf	4001,6,c	;volatile
 12119                           
 12120                           ;MOTEapp.c: 1211: __nop();
 12121  003798  F000               	nop	
 12122  00379A  0003               	sleep		;# 
 12123                           
 12124                           ;MOTEapp.c: 1213: __nop();
 12125  00379C  F000               	nop	
 12126                           
 12127                           ;MOTEapp.c: 1215: WDTCONbits.SWDTEN = 0;
 12128  00379E  90D1               	bcf	4049,0,c	;volatile
 12129                           
 12130                           ;MOTEapp.c: 1216: EUSART_FlushBuffer();
 12131  0037A0  EC5C  F02B         	call	_EUSART_FlushBuffer	;wreg free
 12132                           
 12133                           ;MOTEapp.c: 1218: INTCONbits.IOCIE = 0;
 12134  0037A4  96F2               	bcf	intcon,3,c	;volatile
 12135                           
 12136                           ;MOTEapp.c: 1219: INTCON3bits.INT1IE = 0;
 12137  0037A6  96F0               	bcf	intcon3,3,c	;volatile
 12138                           
 12139                           ;MOTEapp.c: 1220: INTCONbits.INT0IE = 0;
 12140  0037A8  98F2               	bcf	intcon,4,c	;volatile
 12141                           
 12142                           ;MOTEapp.c: 1221: IOCCbits.IOCC2 = 0;
 12143  0037AA  9487               	bcf	3975,2,c	;volatile
 12144                           
 12145                           ;MOTEapp.c: 1222: PIE2bits.C1IE = 0;
 12146  0037AC  9CA0               	bcf	4000,6,c	;volatile
 12147                           
 12148                           ;MOTEapp.c: 1223: GIE = 1;
 12149  0037AE  8EF2               	bsf	intcon,7,c	;volatile
 12150                           
 12151                           ;MOTEapp.c: 1225: PIN_MANAGER_Initialize();
 12152  0037B0  EC08  F02B         	call	_PIN_MANAGER_Initialize	;wreg free
 12153                           
 12154                           ;MOTEapp.c: 1227: if ((INTCONbits.IOCIF)||(INTCONbits.INT0IF)||(INTCON3bits.INT1IF)||(PI
      +                          R2bits.C1IF))
 12155  0037B4  A0F2               	btfss	intcon,0,c	;volatile
 12156  0037B6  B2F2               	btfsc	intcon,1,c	;volatile
 12157  0037B8  D004               	goto	l678
 12158  0037BA  B0F0               	btfsc	intcon3,0,c	;volatile
 12159  0037BC  D002               	goto	l678
 12160  0037BE  ACA1               	btfss	4001,6,c	;volatile
 12161  0037C0  D012               	goto	l12087
 12162  0037C2                     l678:
 12163                           
 12164                           ;MOTEapp.c: 1228: {
 12165                           ;MOTEapp.c: 1229: INTCONbits.IOCIF = 0;
 12166  0037C2  90F2               	bcf	intcon,0,c	;volatile
 12167                           
 12168                           ;MOTEapp.c: 1230: INTCONbits.INT0IF = 0;
 12169  0037C4  92F2               	bcf	intcon,1,c	;volatile
 12170                           
 12171                           ;MOTEapp.c: 1231: INTCON3bits.INT1IF = 0;
 12172  0037C6  90F0               	bcf	intcon3,0,c	;volatile
 12173                           
 12174                           ;MOTEapp.c: 1232: status = 1;
 12175  0037C8  0E01               	movlw	1
 12176  0037CA  0100               	movlb	0	; () banked
 12177  0037CC  6FBD               	movwf	moteApp_GoToSleep@status& (0+255),b
 12178                           
 12179                           ; BSR set to: 0
 12180                           ;MOTEapp.c: 1235: oled_displayOff(0);
 12181  0037CE  0E00               	movlw	0
 12182  0037D0  EC8F  F02F         	call	_oled_displayOff
 12183                           
 12184                           ;MOTEapp.c: 1236: oled_init();
 12185  0037D4  ECAB  F02D         	call	_oled_init	;wreg free
 12186                           
 12187                           ;MOTEapp.c: 1238: LATEbits.LATE2 = 1;
 12188  0037D8  848D               	bsf	3981,2,c	;volatile
 12189                           
 12190                           ;MOTEapp.c: 1239: TMR3H = 0xFB;
 12191  0037DA  0EFB               	movlw	251
 12192  0037DC  6EB3               	movwf	4019,c	;volatile
 12193                           
 12194                           ;MOTEapp.c: 1240: TMR3L = 0x50;
 12195  0037DE  0E50               	movlw	80
 12196  0037E0  6EB2               	movwf	4018,c	;volatile
 12197                           
 12198                           ;MOTEapp.c: 1241: PIE2bits.TMR3IE = 1;
 12199  0037E2  82A0               	bsf	4000,1,c	;volatile
 12200                           
 12201                           ;MOTEapp.c: 1242: }
 12202  0037E4  D009               	goto	l12093
 12203  0037E6                     l12087:
 12204                           
 12205                           ;MOTEapp.c: 1243: else
 12206                           ;MOTEapp.c: 1244: {
 12207                           ;MOTEapp.c: 1245: secTicker = 10;
 12208  0037E6  0E0A               	movlw	10
 12209  0037E8  0100               	movlb	0	; () banked
 12210  0037EA  6FA6               	movwf	_secTicker& (0+255),b
 12211                           
 12212                           ;MOTEapp.c: 1246: status = 0;
 12213  0037EC  0E00               	movlw	0
 12214  0037EE  0100               	movlb	0	; () banked
 12215  0037F0  6FBD               	movwf	moteApp_GoToSleep@status& (0+255),b
 12216                           
 12217                           ; BSR set to: 0
 12218                           ;MOTEapp.c: 1248: LATEbits.LATE2 = 0;
 12219  0037F2  948D               	bcf	3981,2,c	;volatile
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;MOTEapp.c: 1249: PIE2bits.TMR3IE = 0;
 12223  0037F4  92A0               	bcf	4000,1,c	;volatile
 12224  0037F6  D000               	goto	l12093
 12225  0037F8                     l12093:
 12226                           
 12227                           ;MOTEapp.c: 1250: }
 12228                           ;MOTEapp.c: 1251: ANSELAbits.ANSA0 = 0;
 12229  0037F8  010F               	movlb	15	; () banked
 12230  0037FA  915B               	bcf	91,0,b	;volatile
 12231                           
 12232                           ; BSR set to: 15
 12233                           ;MOTEapp.c: 1253: moduleResync();
 12234  0037FC  EC1B  F026         	call	_moduleResync	;wreg free
 12235                           
 12236                           ;MOTEapp.c: 1254: moteApp_delayms(40);
 12237  003800  0E00               	movlw	0
 12238  003802  0100               	movlb	0	; () banked
 12239  003804  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12240  003806  0E28               	movlw	40
 12241  003808  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 12242  00380A  ECB1  F02C         	call	_moteApp_delayms	;wreg free
 12243                           
 12244                           ;MOTEapp.c: 1255: moduleResync();
 12245  00380E  EC1B  F026         	call	_moduleResync	;wreg free
 12246                           
 12247                           ;MOTEapp.c: 1256: moteApp_delayms(40);
 12248  003812  0E00               	movlw	0
 12249  003814  0100               	movlb	0	; () banked
 12250  003816  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12251  003818  0E28               	movlw	40
 12252  00381A  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 12253  00381C  ECB1  F02C         	call	_moteApp_delayms	;wreg free
 12254                           
 12255                           ;MOTEapp.c: 1257: return status;
 12256  003820  0100               	movlb	0	; () banked
 12257  003822  51BD               	movf	moteApp_GoToSleep@status& (0+255),w,b
 12258  003824  0012               	return	
 12259                           
 12260                           ; BSR set to: 0
 12261                           
 12262                           ; BSR set to: 0
 12263  003826  0012               	return		;funcret
 12264  003828                     __end_of_moteApp_GoToSleep:
 12265                           	opt stack 0
 12266                           tblptru	equ	0xFF8
 12267                           tblptrh	equ	0xFF7
 12268                           tblptrl	equ	0xFF6
 12269                           tablat	equ	0xFF5
 12270                           prodh	equ	0xFF4
 12271                           prodl	equ	0xFF3
 12272                           intcon	equ	0xFF2
 12273                           intcon3	equ	0xFF0
 12274                           postinc0	equ	0xFEE
 12275                           wreg	equ	0xFE8
 12276                           indf1	equ	0xFE7
 12277                           postdec1	equ	0xFE5
 12278                           fsr1h	equ	0xFE2
 12279                           fsr1l	equ	0xFE1
 12280                           indf2	equ	0xFDF
 12281                           fsr2h	equ	0xFDA
 12282                           fsr2l	equ	0xFD9
 12283                           status	equ	0xFD8
 12284                           
 12285 ;; *************** function _oled_init *****************
 12286 ;; Defined at:
 12287 ;;		line 366 in file "../Includes/Drivers/SSD1306oLED.c"
 12288 ;; Parameters:    Size  Location     Type
 12289 ;;		None
 12290 ;; Auto vars:     Size  Location     Type
 12291 ;;		None
 12292 ;; Return value:  Size  Location     Type
 12293 ;;		None               void
 12294 ;; Registers used:
 12295 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12296 ;; Tracked objects:
 12297 ;;		On entry : 0/0
 12298 ;;		On exit  : 0/0
 12299 ;;		Unchanged: 0/0
 12300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12301 ;;      Params:         0       0       0       0       0       0       0       0       0
 12302 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12303 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12304 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12305 ;;Total ram usage:        0 bytes
 12306 ;; Hardware stack levels used:    1
 12307 ;; Hardware stack levels required when called:   16
 12308 ;; This function calls:
 12309 ;;		_oled_clear
 12310 ;;		_oled_devInit
 12311 ;;		_oled_setDisplay
 12312 ;;		_oled_setFont
 12313 ;; This function is called by:
 12314 ;;		_main
 12315 ;;		_moteApp_GoToSleep
 12316 ;; This function uses a non-reentrant model
 12317 ;;
 12318                           
 12319                           	psect	text28
 12320  005B56                     __ptext28:
 12321                           	opt stack 0
 12322  005B56                     _oled_init:
 12323                           	opt stack 14
 12324                           
 12325                           ;SSD1306oLED.c: 369: TRISEbits.TRISE2 = 0;
 12326                           
 12327                           ; BSR set to: 0
 12328                           ;incstack = 0
 12329  005B56  9496               	bcf	3990,2,c	;volatile
 12330                           
 12331                           ;SSD1306oLED.c: 370: LATEbits.LATE2 = 1;
 12332  005B58  848D               	bsf	3981,2,c	;volatile
 12333                           
 12334                           ;SSD1306oLED.c: 371: TRISBbits.TRISB2 = 0;
 12335  005B5A  9493               	bcf	3987,2,c	;volatile
 12336                           
 12337                           ;SSD1306oLED.c: 372: TRISBbits.TRISB3 = 0;
 12338  005B5C  9693               	bcf	3987,3,c	;volatile
 12339                           
 12340                           ;SSD1306oLED.c: 373: TRISBbits.TRISB4 = 0;
 12341  005B5E  9893               	bcf	3987,4,c	;volatile
 12342                           
 12343                           ;SSD1306oLED.c: 374: TRISCbits.TRISC0 = 0;
 12344  005B60  9094               	bcf	3988,0,c	;volatile
 12345                           
 12346                           ;SSD1306oLED.c: 375: TRISCbits.TRISC1 = 0;
 12347  005B62  9294               	bcf	3988,1,c	;volatile
 12348                           
 12349                           ;SSD1306oLED.c: 377: LATBbits.LATB3 = 1;
 12350  005B64  868A               	bsf	3978,3,c	;volatile
 12351                           
 12352                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 0;
 12353  005B66  988A               	bcf	3978,4,c	;volatile
 12354                           
 12355                           ;SSD1306oLED.c: 381: oled_devInit();
 12356  005B68  ECB2  F027         	call	_oled_devInit	;wreg free
 12357                           
 12358                           ;SSD1306oLED.c: 383: oled_setDisplay(Inverse);
 12359  005B6C  0E01               	movlw	1
 12360  005B6E  EC0D  F02E         	call	_oled_setDisplay
 12361                           
 12362                           ;SSD1306oLED.c: 384: oled_setFont(OledFont0);
 12363  005B72  0E01               	movlw	low _OledFont0
 12364  005B74  0100               	movlb	0	; () banked
 12365  005B76  6FAF               	movwf	oled_setFont@font& (0+255),b
 12366  005B78  0E76               	movlw	high _OledFont0
 12367  005B7A  0100               	movlb	0	; () banked
 12368  005B7C  6FB0               	movwf	(oled_setFont@font+1)& (0+255),b
 12369  005B7E  ECDD  F02E         	call	_oled_setFont	;wreg free
 12370                           
 12371                           ;SSD1306oLED.c: 385: oled_clear();
 12372  005B82  ECB6  F02E         	call	_oled_clear	;wreg free
 12373  005B86  0012               	return		;funcret
 12374  005B88                     __end_of_oled_init:
 12375                           	opt stack 0
 12376                           tblptru	equ	0xFF8
 12377                           tblptrh	equ	0xFF7
 12378                           tblptrl	equ	0xFF6
 12379                           tablat	equ	0xFF5
 12380                           prodh	equ	0xFF4
 12381                           prodl	equ	0xFF3
 12382                           intcon	equ	0xFF2
 12383                           intcon3	equ	0xFF0
 12384                           postinc0	equ	0xFEE
 12385                           wreg	equ	0xFE8
 12386                           indf1	equ	0xFE7
 12387                           postdec1	equ	0xFE5
 12388                           fsr1h	equ	0xFE2
 12389                           fsr1l	equ	0xFE1
 12390                           indf2	equ	0xFDF
 12391                           fsr2h	equ	0xFDA
 12392                           fsr2l	equ	0xFD9
 12393                           status	equ	0xFD8
 12394                           
 12395 ;; *************** function _oled_setFont *****************
 12396 ;; Defined at:
 12397 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
 12398 ;; Parameters:    Size  Location     Type
 12399 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 12400 ;;		 -> OledFont0(768), 
 12401 ;; Auto vars:     Size  Location     Type
 12402 ;;		None
 12403 ;; Return value:  Size  Location     Type
 12404 ;;		None               void
 12405 ;; Registers used:
 12406 ;;		wreg, status,2, status,0
 12407 ;; Tracked objects:
 12408 ;;		On entry : 0/0
 12409 ;;		On exit  : 0/0
 12410 ;;		Unchanged: 0/0
 12411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12412 ;;      Params:         0       2       0       0       0       0       0       0       0
 12413 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12414 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12415 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12416 ;;Total ram usage:        2 bytes
 12417 ;; Hardware stack levels used:    1
 12418 ;; Hardware stack levels required when called:   11
 12419 ;; This function calls:
 12420 ;;		Nothing
 12421 ;; This function is called by:
 12422 ;;		_oled_init
 12423 ;; This function uses a non-reentrant model
 12424 ;;
 12425                           
 12426                           	psect	text29
 12427  005DBA                     __ptext29:
 12428                           	opt stack 0
 12429  005DBA                     _oled_setFont:
 12430                           	opt stack 18
 12431                           
 12432                           ;SSD1306oLED.c: 258: if(font!=0)
 12433                           
 12434                           ;incstack = 0
 12435  005DBA  0100               	movlb	0	; () banked
 12436  005DBC  51AF               	movf	oled_setFont@font& (0+255),w,b
 12437  005DBE  0100               	movlb	0	; () banked
 12438  005DC0  11B0               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 12439  005DC2  B4D8               	btfsc	status,2,c
 12440  005DC4  0012               	return	
 12441                           
 12442                           ; BSR set to: 0
 12443                           ;SSD1306oLED.c: 259: {
 12444                           ;SSD1306oLED.c: 260: selectedFont=font;
 12445  005DC6  C0AF  F1FB         	movff	oled_setFont@font,_selectedFont
 12446  005DCA  C0B0  F1FC         	movff	oled_setFont@font+1,_selectedFont+1
 12447  005DCE  0012               	return	
 12448                           
 12449                           ; BSR set to: 0
 12450                           
 12451                           ; BSR set to: 0
 12452  005DD0  0012               	return		;funcret
 12453  005DD2                     __end_of_oled_setFont:
 12454                           	opt stack 0
 12455                           tblptru	equ	0xFF8
 12456                           tblptrh	equ	0xFF7
 12457                           tblptrl	equ	0xFF6
 12458                           tablat	equ	0xFF5
 12459                           prodh	equ	0xFF4
 12460                           prodl	equ	0xFF3
 12461                           intcon	equ	0xFF2
 12462                           intcon3	equ	0xFF0
 12463                           postinc0	equ	0xFEE
 12464                           wreg	equ	0xFE8
 12465                           indf1	equ	0xFE7
 12466                           postdec1	equ	0xFE5
 12467                           fsr1h	equ	0xFE2
 12468                           fsr1l	equ	0xFE1
 12469                           indf2	equ	0xFDF
 12470                           fsr2h	equ	0xFDA
 12471                           fsr2l	equ	0xFD9
 12472                           status	equ	0xFD8
 12473                           
 12474 ;; *************** function _oled_setDisplay *****************
 12475 ;; Defined at:
 12476 ;;		line 411 in file "../Includes/Drivers/SSD1306oLED.c"
 12477 ;; Parameters:    Size  Location     Type
 12478 ;;  displayType     1    wreg     enum E7618
 12479 ;; Auto vars:     Size  Location     Type
 12480 ;;  displayType     1    1[BANK0 ] enum E7618
 12481 ;; Return value:  Size  Location     Type
 12482 ;;		None               void
 12483 ;; Registers used:
 12484 ;;		wreg, status,2, cstack
 12485 ;; Tracked objects:
 12486 ;;		On entry : 0/0
 12487 ;;		On exit  : 0/0
 12488 ;;		Unchanged: 0/0
 12489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12490 ;;      Params:         0       0       0       0       0       0       0       0       0
 12491 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12492 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12493 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12494 ;;Total ram usage:        1 bytes
 12495 ;; Hardware stack levels used:    1
 12496 ;; Hardware stack levels required when called:   12
 12497 ;; This function calls:
 12498 ;;		_oled_writeCommand
 12499 ;; This function is called by:
 12500 ;;		_oled_init
 12501 ;; This function uses a non-reentrant model
 12502 ;;
 12503                           
 12504                           	psect	text30
 12505  005C1A                     __ptext30:
 12506                           	opt stack 0
 12507  005C1A                     _oled_setDisplay:
 12508                           	opt stack 17
 12509                           
 12510                           ; BSR set to: 0
 12511                           ;incstack = 0
 12512                           ;oled_setDisplay@displayType stored from wreg
 12513  005C1A  0100               	movlb	0	; () banked
 12514  005C1C  6FB0               	movwf	oled_setDisplay@displayType& (0+255),b
 12515                           
 12516                           ; BSR set to: 0
 12517                           ;SSD1306oLED.c: 413: if (displayType == Normal)
 12518  005C1E  0100               	movlb	0	; () banked
 12519  005C20  51B0               	movf	oled_setDisplay@displayType& (0+255),w,b
 12520  005C22  0100               	movlb	0	; () banked
 12521  005C24  A4D8               	btfss	status,2,c
 12522  005C26  D007               	goto	l11231
 12523                           
 12524                           ; BSR set to: 0
 12525                           ;SSD1306oLED.c: 414: {
 12526                           ;SSD1306oLED.c: 415: oled_writeCommand(0xa0);
 12527  005C28  0EA0               	movlw	160
 12528  005C2A  ECF5  F02E         	call	_oled_writeCommand
 12529                           
 12530                           ;SSD1306oLED.c: 416: oled_writeCommand(0xc8);
 12531  005C2E  0EC8               	movlw	200
 12532  005C30  ECF5  F02E         	call	_oled_writeCommand
 12533                           
 12534                           ;SSD1306oLED.c: 417: }
 12535  005C34  0012               	return	
 12536  005C36                     l11231:
 12537                           
 12538                           ;SSD1306oLED.c: 418: else
 12539                           ;SSD1306oLED.c: 419: {
 12540                           ;SSD1306oLED.c: 420: oled_writeCommand(0xa1);
 12541  005C36  0EA1               	movlw	161
 12542  005C38  ECF5  F02E         	call	_oled_writeCommand
 12543                           
 12544                           ;SSD1306oLED.c: 421: oled_writeCommand(0xc0);
 12545  005C3C  0EC0               	movlw	192
 12546  005C3E  ECF5  F02E         	call	_oled_writeCommand
 12547  005C42  0012               	return	
 12548  005C44  0012               	return		;funcret
 12549  005C46                     __end_of_oled_setDisplay:
 12550                           	opt stack 0
 12551                           tblptru	equ	0xFF8
 12552                           tblptrh	equ	0xFF7
 12553                           tblptrl	equ	0xFF6
 12554                           tablat	equ	0xFF5
 12555                           prodh	equ	0xFF4
 12556                           prodl	equ	0xFF3
 12557                           intcon	equ	0xFF2
 12558                           intcon3	equ	0xFF0
 12559                           postinc0	equ	0xFEE
 12560                           wreg	equ	0xFE8
 12561                           indf1	equ	0xFE7
 12562                           postdec1	equ	0xFE5
 12563                           fsr1h	equ	0xFE2
 12564                           fsr1l	equ	0xFE1
 12565                           indf2	equ	0xFDF
 12566                           fsr2h	equ	0xFDA
 12567                           fsr2l	equ	0xFD9
 12568                           status	equ	0xFD8
 12569                           
 12570 ;; *************** function _oled_devInit *****************
 12571 ;; Defined at:
 12572 ;;		line 388 in file "../Includes/Drivers/SSD1306oLED.c"
 12573 ;; Parameters:    Size  Location     Type
 12574 ;;		None
 12575 ;; Auto vars:     Size  Location     Type
 12576 ;;		None
 12577 ;; Return value:  Size  Location     Type
 12578 ;;		None               void
 12579 ;; Registers used:
 12580 ;;		wreg, status,2, status,0, cstack
 12581 ;; Tracked objects:
 12582 ;;		On entry : 0/0
 12583 ;;		On exit  : 0/0
 12584 ;;		Unchanged: 0/0
 12585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12586 ;;      Params:         0       0       0       0       0       0       0       0       0
 12587 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12588 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12589 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12590 ;;Total ram usage:        1 bytes
 12591 ;; Hardware stack levels used:    1
 12592 ;; Hardware stack levels required when called:   13
 12593 ;; This function calls:
 12594 ;;		_oled_initialDispayLine
 12595 ;;		_oled_powerControl
 12596 ;;		_oled_regulorResistorSelect
 12597 ;;		_oled_setContrastControlRegister
 12598 ;;		_oled_writeCommand
 12599 ;; This function is called by:
 12600 ;;		_oled_init
 12601 ;; This function uses a non-reentrant model
 12602 ;;
 12603                           
 12604                           	psect	text31
 12605  004F64                     __ptext31:
 12606                           	opt stack 0
 12607  004F64                     _oled_devInit:
 12608                           	opt stack 16
 12609                           
 12610                           ;SSD1306oLED.c: 390: oled_writeCommand(0xe2);
 12611                           
 12612                           ;incstack = 0
 12613  004F64  0EE2               	movlw	226
 12614  004F66  ECF5  F02E         	call	_oled_writeCommand
 12615                           
 12616                           ;SSD1306oLED.c: 391: LATBbits.LATB2=1;
 12617  004F6A  848A               	bsf	3978,2,c	;volatile
 12618                           
 12619                           ;SSD1306oLED.c: 392: _delay((unsigned long)((200)*(48000000/4000000.0)));
 12620  004F6C  0E04               	movlw	4
 12621  004F6E  0100               	movlb	0	; () banked
 12622  004F70  6FB1               	movwf	??_oled_devInit& (0+255),b
 12623  004F72  0E1C               	movlw	28
 12624  004F74                     u12557:
 12625  004F74  2EE8               	decfsz	wreg,f,c
 12626  004F76  D7FE               	goto	u12557
 12627  004F78  2FB1               	decfsz	??_oled_devInit& (0+255),f,b
 12628  004F7A  D7FC               	goto	u12557
 12629  004F7C  D000               	nop2	
 12630                           
 12631                           ;SSD1306oLED.c: 393: LATBbits.LATB2=0;
 12632  004F7E  948A               	bcf	3978,2,c	;volatile
 12633                           
 12634                           ;SSD1306oLED.c: 394: _delay((unsigned long)((2000)*(48000000/4000000.0)));
 12635  004F80  0E20               	movlw	32
 12636  004F82  0100               	movlb	0	; () banked
 12637  004F84  6FB1               	movwf	??_oled_devInit& (0+255),b
 12638  004F86  0E2A               	movlw	42
 12639  004F88                     u12567:
 12640  004F88  2EE8               	decfsz	wreg,f,c
 12641  004F8A  D7FE               	goto	u12567
 12642  004F8C  2FB1               	decfsz	??_oled_devInit& (0+255),f,b
 12643  004F8E  D7FC               	goto	u12567
 12644                           
 12645                           ;SSD1306oLED.c: 395: LATBbits.LATB2=1;
 12646  004F90  848A               	bsf	3978,2,c	;volatile
 12647                           
 12648                           ;SSD1306oLED.c: 396: _delay((unsigned long)((1000)*(48000000/4000000.0)));
 12649  004F92  0E10               	movlw	16
 12650  004F94  0100               	movlb	0	; () banked
 12651  004F96  6FB1               	movwf	??_oled_devInit& (0+255),b
 12652  004F98  0E94               	movlw	148
 12653  004F9A                     u12577:
 12654  004F9A  2EE8               	decfsz	wreg,f,c
 12655  004F9C  D7FE               	goto	u12577
 12656  004F9E  2FB1               	decfsz	??_oled_devInit& (0+255),f,b
 12657  004FA0  D7FC               	goto	u12577
 12658  004FA2  D000               	nop2	
 12659                           
 12660                           ;SSD1306oLED.c: 398: oled_writeCommand(0xa1);
 12661  004FA4  0EA1               	movlw	161
 12662  004FA6  ECF5  F02E         	call	_oled_writeCommand
 12663                           
 12664                           ;SSD1306oLED.c: 399: oled_writeCommand(0xc0);
 12665  004FAA  0EC0               	movlw	192
 12666  004FAC  ECF5  F02E         	call	_oled_writeCommand
 12667                           
 12668                           ;SSD1306oLED.c: 400: oled_writeCommand(0xa3);
 12669  004FB0  0EA3               	movlw	163
 12670  004FB2  ECF5  F02E         	call	_oled_writeCommand
 12671                           
 12672                           ;SSD1306oLED.c: 401: oled_powerControl(0x07);
 12673  004FB6  0E07               	movlw	7
 12674  004FB8  EC41  F02F         	call	_oled_powerControl
 12675                           
 12676                           ;SSD1306oLED.c: 402: oled_regulorResistorSelect(0x05);
 12677  004FBC  0E05               	movlw	5
 12678  004FBE  EC38  F02F         	call	_oled_regulorResistorSelect
 12679                           
 12680                           ;SSD1306oLED.c: 403: oled_setContrastControlRegister(Contrast_level);
 12681  004FC2  0100               	movlb	0	; () banked
 12682  004FC4  51F6               	movf	_Contrast_level& (0+255),w,b
 12683  004FC6  EC19  F02F         	call	_oled_setContrastControlRegister
 12684                           
 12685                           ;SSD1306oLED.c: 404: oled_initialDispayLine(0x00);
 12686  004FCA  0E00               	movlw	0
 12687  004FCC  EC24  F02F         	call	_oled_initialDispayLine
 12688                           
 12689                           ;SSD1306oLED.c: 405: oled_writeCommand(0xF8);
 12690  004FD0  0EF8               	movlw	248
 12691  004FD2  ECF5  F02E         	call	_oled_writeCommand
 12692                           
 12693                           ;SSD1306oLED.c: 406: oled_writeCommand(0x00);
 12694  004FD6  0E00               	movlw	0
 12695  004FD8  ECF5  F02E         	call	_oled_writeCommand
 12696                           
 12697                           ;SSD1306oLED.c: 407: oled_writeCommand(0xaf);
 12698  004FDC  0EAF               	movlw	175
 12699  004FDE  ECF5  F02E         	call	_oled_writeCommand
 12700  004FE2  0012               	return		;funcret
 12701  004FE4                     __end_of_oled_devInit:
 12702                           	opt stack 0
 12703                           tblptru	equ	0xFF8
 12704                           tblptrh	equ	0xFF7
 12705                           tblptrl	equ	0xFF6
 12706                           tablat	equ	0xFF5
 12707                           prodh	equ	0xFF4
 12708                           prodl	equ	0xFF3
 12709                           intcon	equ	0xFF2
 12710                           intcon3	equ	0xFF0
 12711                           postinc0	equ	0xFEE
 12712                           wreg	equ	0xFE8
 12713                           indf1	equ	0xFE7
 12714                           postdec1	equ	0xFE5
 12715                           fsr1h	equ	0xFE2
 12716                           fsr1l	equ	0xFE1
 12717                           indf2	equ	0xFDF
 12718                           fsr2h	equ	0xFDA
 12719                           fsr2l	equ	0xFD9
 12720                           status	equ	0xFD8
 12721                           
 12722 ;; *************** function _oled_setContrastControlRegister *****************
 12723 ;; Defined at:
 12724 ;;		line 454 in file "../Includes/Drivers/SSD1306oLED.c"
 12725 ;; Parameters:    Size  Location     Type
 12726 ;;  mod             1    wreg     unsigned char 
 12727 ;; Auto vars:     Size  Location     Type
 12728 ;;  mod             1    1[BANK0 ] unsigned char 
 12729 ;; Return value:  Size  Location     Type
 12730 ;;		None               void
 12731 ;; Registers used:
 12732 ;;		wreg, status,2, cstack
 12733 ;; Tracked objects:
 12734 ;;		On entry : 0/0
 12735 ;;		On exit  : 0/0
 12736 ;;		Unchanged: 0/0
 12737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12738 ;;      Params:         0       0       0       0       0       0       0       0       0
 12739 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12740 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12741 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12742 ;;Total ram usage:        1 bytes
 12743 ;; Hardware stack levels used:    1
 12744 ;; Hardware stack levels required when called:   12
 12745 ;; This function calls:
 12746 ;;		_oled_writeCommand
 12747 ;; This function is called by:
 12748 ;;		_oled_devInit
 12749 ;; This function uses a non-reentrant model
 12750 ;;
 12751                           
 12752                           	psect	text32
 12753  005E32                     __ptext32:
 12754                           	opt stack 0
 12755  005E32                     _oled_setContrastControlRegister:
 12756                           	opt stack 16
 12757                           
 12758                           ;incstack = 0
 12759                           ;oled_setContrastControlRegister@mod stored from wreg
 12760  005E32  0100               	movlb	0	; () banked
 12761  005E34  6FB0               	movwf	oled_setContrastControlRegister@mod& (0+255),b
 12762                           
 12763                           ; BSR set to: 0
 12764                           ;SSD1306oLED.c: 456: oled_writeCommand(0x81);
 12765  005E36  0E81               	movlw	129
 12766  005E38  ECF5  F02E         	call	_oled_writeCommand
 12767                           
 12768                           ;SSD1306oLED.c: 457: oled_writeCommand(mod);
 12769  005E3C  0100               	movlb	0	; () banked
 12770  005E3E  51B0               	movf	oled_setContrastControlRegister@mod& (0+255),w,b
 12771  005E40  ECF5  F02E         	call	_oled_writeCommand
 12772  005E44  0012               	return	
 12773                           
 12774                           ;SSD1306oLED.c: 458: return;
 12775  005E46  0012               	return		;funcret
 12776  005E48                     __end_of_oled_setContrastControlRegister:
 12777                           	opt stack 0
 12778                           tblptru	equ	0xFF8
 12779                           tblptrh	equ	0xFF7
 12780                           tblptrl	equ	0xFF6
 12781                           tablat	equ	0xFF5
 12782                           prodh	equ	0xFF4
 12783                           prodl	equ	0xFF3
 12784                           intcon	equ	0xFF2
 12785                           intcon3	equ	0xFF0
 12786                           postinc0	equ	0xFEE
 12787                           wreg	equ	0xFE8
 12788                           indf1	equ	0xFE7
 12789                           postdec1	equ	0xFE5
 12790                           fsr1h	equ	0xFE2
 12791                           fsr1l	equ	0xFE1
 12792                           indf2	equ	0xFDF
 12793                           fsr2h	equ	0xFDA
 12794                           fsr2l	equ	0xFD9
 12795                           status	equ	0xFD8
 12796                           
 12797 ;; *************** function _oled_regulorResistorSelect *****************
 12798 ;; Defined at:
 12799 ;;		line 482 in file "../Includes/Drivers/SSD1306oLED.c"
 12800 ;; Parameters:    Size  Location     Type
 12801 ;;  r               1    wreg     unsigned char 
 12802 ;; Auto vars:     Size  Location     Type
 12803 ;;  r               1    1[BANK0 ] unsigned char 
 12804 ;; Return value:  Size  Location     Type
 12805 ;;		None               void
 12806 ;; Registers used:
 12807 ;;		wreg, status,2, status,0, cstack
 12808 ;; Tracked objects:
 12809 ;;		On entry : 0/0
 12810 ;;		On exit  : 0/0
 12811 ;;		Unchanged: 0/0
 12812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12813 ;;      Params:         0       0       0       0       0       0       0       0       0
 12814 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12815 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12816 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12817 ;;Total ram usage:        1 bytes
 12818 ;; Hardware stack levels used:    1
 12819 ;; Hardware stack levels required when called:   12
 12820 ;; This function calls:
 12821 ;;		_oled_writeCommand
 12822 ;; This function is called by:
 12823 ;;		_oled_devInit
 12824 ;; This function uses a non-reentrant model
 12825 ;;
 12826                           
 12827                           	psect	text33
 12828  005E70                     __ptext33:
 12829                           	opt stack 0
 12830  005E70                     _oled_regulorResistorSelect:
 12831                           	opt stack 16
 12832                           
 12833                           ;incstack = 0
 12834                           ;oled_regulorResistorSelect@r stored from wreg
 12835  005E70  0100               	movlb	0	; () banked
 12836  005E72  6FB0               	movwf	oled_regulorResistorSelect@r& (0+255),b
 12837                           
 12838                           ; BSR set to: 0
 12839                           ;SSD1306oLED.c: 484: oled_writeCommand((0x20|r));
 12840  005E74  0100               	movlb	0	; () banked
 12841  005E76  51B0               	movf	oled_regulorResistorSelect@r& (0+255),w,b
 12842  005E78  0920               	iorlw	32
 12843  005E7A  ECF5  F02E         	call	_oled_writeCommand
 12844  005E7E  0012               	return	
 12845                           
 12846                           ;SSD1306oLED.c: 485: return;
 12847  005E80  0012               	return		;funcret
 12848  005E82                     __end_of_oled_regulorResistorSelect:
 12849                           	opt stack 0
 12850                           tblptru	equ	0xFF8
 12851                           tblptrh	equ	0xFF7
 12852                           tblptrl	equ	0xFF6
 12853                           tablat	equ	0xFF5
 12854                           prodh	equ	0xFF4
 12855                           prodl	equ	0xFF3
 12856                           intcon	equ	0xFF2
 12857                           intcon3	equ	0xFF0
 12858                           postinc0	equ	0xFEE
 12859                           wreg	equ	0xFE8
 12860                           indf1	equ	0xFE7
 12861                           postdec1	equ	0xFE5
 12862                           fsr1h	equ	0xFE2
 12863                           fsr1l	equ	0xFE1
 12864                           indf2	equ	0xFDF
 12865                           fsr2h	equ	0xFDA
 12866                           fsr2l	equ	0xFD9
 12867                           status	equ	0xFD8
 12868                           
 12869 ;; *************** function _oled_powerControl *****************
 12870 ;; Defined at:
 12871 ;;		line 469 in file "../Includes/Drivers/SSD1306oLED.c"
 12872 ;; Parameters:    Size  Location     Type
 12873 ;;  vol             1    wreg     unsigned char 
 12874 ;; Auto vars:     Size  Location     Type
 12875 ;;  vol             1    1[BANK0 ] unsigned char 
 12876 ;; Return value:  Size  Location     Type
 12877 ;;		None               void
 12878 ;; Registers used:
 12879 ;;		wreg, status,2, status,0, cstack
 12880 ;; Tracked objects:
 12881 ;;		On entry : 0/0
 12882 ;;		On exit  : 0/0
 12883 ;;		Unchanged: 0/0
 12884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12885 ;;      Params:         0       0       0       0       0       0       0       0       0
 12886 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12887 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12888 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12889 ;;Total ram usage:        1 bytes
 12890 ;; Hardware stack levels used:    1
 12891 ;; Hardware stack levels required when called:   12
 12892 ;; This function calls:
 12893 ;;		_oled_writeCommand
 12894 ;; This function is called by:
 12895 ;;		_oled_devInit
 12896 ;; This function uses a non-reentrant model
 12897 ;;
 12898                           
 12899                           	psect	text34
 12900  005E82                     __ptext34:
 12901                           	opt stack 0
 12902  005E82                     _oled_powerControl:
 12903                           	opt stack 16
 12904                           
 12905                           ;incstack = 0
 12906                           ;oled_powerControl@vol stored from wreg
 12907  005E82  0100               	movlb	0	; () banked
 12908  005E84  6FB0               	movwf	oled_powerControl@vol& (0+255),b
 12909                           
 12910                           ; BSR set to: 0
 12911                           ;SSD1306oLED.c: 471: oled_writeCommand((0x28|vol));
 12912  005E86  0100               	movlb	0	; () banked
 12913  005E88  51B0               	movf	oled_powerControl@vol& (0+255),w,b
 12914  005E8A  0928               	iorlw	40
 12915  005E8C  ECF5  F02E         	call	_oled_writeCommand
 12916  005E90  0012               	return	
 12917                           
 12918                           ;SSD1306oLED.c: 472: return;
 12919  005E92  0012               	return		;funcret
 12920  005E94                     __end_of_oled_powerControl:
 12921                           	opt stack 0
 12922                           tblptru	equ	0xFF8
 12923                           tblptrh	equ	0xFF7
 12924                           tblptrl	equ	0xFF6
 12925                           tablat	equ	0xFF5
 12926                           prodh	equ	0xFF4
 12927                           prodl	equ	0xFF3
 12928                           intcon	equ	0xFF2
 12929                           intcon3	equ	0xFF0
 12930                           postinc0	equ	0xFEE
 12931                           wreg	equ	0xFE8
 12932                           indf1	equ	0xFE7
 12933                           postdec1	equ	0xFE5
 12934                           fsr1h	equ	0xFE2
 12935                           fsr1l	equ	0xFE1
 12936                           indf2	equ	0xFDF
 12937                           fsr2h	equ	0xFDA
 12938                           fsr2l	equ	0xFD9
 12939                           status	equ	0xFD8
 12940                           
 12941 ;; *************** function _oled_initialDispayLine *****************
 12942 ;; Defined at:
 12943 ;;		line 462 in file "../Includes/Drivers/SSD1306oLED.c"
 12944 ;; Parameters:    Size  Location     Type
 12945 ;;  line            1    wreg     unsigned char 
 12946 ;; Auto vars:     Size  Location     Type
 12947 ;;  line            1    1[BANK0 ] unsigned char 
 12948 ;; Return value:  Size  Location     Type
 12949 ;;		None               void
 12950 ;; Registers used:
 12951 ;;		wreg, status,2, status,0, cstack
 12952 ;; Tracked objects:
 12953 ;;		On entry : 0/0
 12954 ;;		On exit  : 0/0
 12955 ;;		Unchanged: 0/0
 12956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12957 ;;      Params:         0       0       0       0       0       0       0       0       0
 12958 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12959 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12960 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12961 ;;Total ram usage:        1 bytes
 12962 ;; Hardware stack levels used:    1
 12963 ;; Hardware stack levels required when called:   12
 12964 ;; This function calls:
 12965 ;;		_oled_writeCommand
 12966 ;; This function is called by:
 12967 ;;		_oled_devInit
 12968 ;; This function uses a non-reentrant model
 12969 ;;
 12970                           
 12971                           	psect	text35
 12972  005E48                     __ptext35:
 12973                           	opt stack 0
 12974  005E48                     _oled_initialDispayLine:
 12975                           	opt stack 16
 12976                           
 12977                           ;incstack = 0
 12978                           ;oled_initialDispayLine@line stored from wreg
 12979  005E48  0100               	movlb	0	; () banked
 12980  005E4A  6FB0               	movwf	oled_initialDispayLine@line& (0+255),b
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;SSD1306oLED.c: 464: line|=0x40;
 12984  005E4C  0100               	movlb	0	; () banked
 12985  005E4E  8DB0               	bsf	oled_initialDispayLine@line& (0+255),6,b
 12986                           
 12987                           ; BSR set to: 0
 12988                           ;SSD1306oLED.c: 465: oled_writeCommand(line);
 12989  005E50  0100               	movlb	0	; () banked
 12990  005E52  51B0               	movf	oled_initialDispayLine@line& (0+255),w,b
 12991  005E54  ECF5  F02E         	call	_oled_writeCommand
 12992  005E58  0012               	return	
 12993                           
 12994                           ;SSD1306oLED.c: 466: return;
 12995  005E5A  0012               	return		;funcret
 12996  005E5C                     __end_of_oled_initialDispayLine:
 12997                           	opt stack 0
 12998                           tblptru	equ	0xFF8
 12999                           tblptrh	equ	0xFF7
 13000                           tblptrl	equ	0xFF6
 13001                           tablat	equ	0xFF5
 13002                           prodh	equ	0xFF4
 13003                           prodl	equ	0xFF3
 13004                           intcon	equ	0xFF2
 13005                           intcon3	equ	0xFF0
 13006                           postinc0	equ	0xFEE
 13007                           wreg	equ	0xFE8
 13008                           indf1	equ	0xFE7
 13009                           postdec1	equ	0xFE5
 13010                           fsr1h	equ	0xFE2
 13011                           fsr1l	equ	0xFE1
 13012                           indf2	equ	0xFDF
 13013                           fsr2h	equ	0xFDA
 13014                           fsr2l	equ	0xFD9
 13015                           status	equ	0xFD8
 13016                           
 13017 ;; *************** function _oled_displayOff *****************
 13018 ;; Defined at:
 13019 ;;		line 425 in file "../Includes/Drivers/SSD1306oLED.c"
 13020 ;; Parameters:    Size  Location     Type
 13021 ;;  state           1    wreg     unsigned char 
 13022 ;; Auto vars:     Size  Location     Type
 13023 ;;  state           1    0[COMRAM] unsigned char 
 13024 ;; Return value:  Size  Location     Type
 13025 ;;		None               void
 13026 ;; Registers used:
 13027 ;;		wreg, cstack
 13028 ;; Tracked objects:
 13029 ;;		On entry : 0/0
 13030 ;;		On exit  : 0/0
 13031 ;;		Unchanged: 0/0
 13032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13033 ;;      Params:         0       0       0       0       0       0       0       0       0
 13034 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13035 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13036 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13037 ;;Total ram usage:        0 bytes
 13038 ;; Hardware stack levels used:    1
 13039 ;; Hardware stack levels required when called:   12
 13040 ;; This function calls:
 13041 ;;		_oled_writeCommand
 13042 ;; This function is called by:
 13043 ;;		_moteApp_GoToSleep
 13044 ;; This function uses a non-reentrant model
 13045 ;;
 13046                           
 13047                           	psect	text36
 13048  005F1E                     __ptext36:
 13049                           	opt stack 0
 13050  005F1E                     _oled_displayOff:
 13051                           	opt stack 15
 13052                           
 13053                           ;SSD1306oLED.c: 427: oled_writeCommand(0xae);
 13054                           
 13055                           ;incstack = 0
 13056  005F1E  0EAE               	movlw	174
 13057  005F20  ECF5  F02E         	call	_oled_writeCommand
 13058  005F24  0012               	return		;funcret
 13059  005F26                     __end_of_oled_displayOff:
 13060                           	opt stack 0
 13061                           tblptru	equ	0xFF8
 13062                           tblptrh	equ	0xFF7
 13063                           tblptrl	equ	0xFF6
 13064                           tablat	equ	0xFF5
 13065                           prodh	equ	0xFF4
 13066                           prodl	equ	0xFF3
 13067                           intcon	equ	0xFF2
 13068                           intcon3	equ	0xFF0
 13069                           postinc0	equ	0xFEE
 13070                           wreg	equ	0xFE8
 13071                           indf1	equ	0xFE7
 13072                           postdec1	equ	0xFE5
 13073                           fsr1h	equ	0xFE2
 13074                           fsr1l	equ	0xFE1
 13075                           indf2	equ	0xFDF
 13076                           fsr2h	equ	0xFDA
 13077                           fsr2l	equ	0xFD9
 13078                           status	equ	0xFD8
 13079                           
 13080 ;; *************** function _moduleSleep *****************
 13081 ;; Defined at:
 13082 ;;		line 173 in file "../Includes/Board/MOTEapp.c"
 13083 ;; Parameters:    Size  Location     Type
 13084 ;;		None
 13085 ;; Auto vars:     Size  Location     Type
 13086 ;;		None
 13087 ;; Return value:  Size  Location     Type
 13088 ;;		None               void
 13089 ;; Registers used:
 13090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13091 ;; Tracked objects:
 13092 ;;		On entry : 0/0
 13093 ;;		On exit  : 0/0
 13094 ;;		Unchanged: 0/0
 13095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13096 ;;      Params:         0       0       0       0       0       0       0       0       0
 13097 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13098 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13099 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13100 ;;Total ram usage:        1 bytes
 13101 ;; Hardware stack levels used:    1
 13102 ;; Hardware stack levels required when called:   14
 13103 ;; This function calls:
 13104 ;;		MOTEapp@sendCommand
 13105 ;; This function is called by:
 13106 ;;		_moteApp_GoToSleep
 13107 ;; This function uses a non-reentrant model
 13108 ;;
 13109                           
 13110                           	psect	text37
 13111  005C72                     __ptext37:
 13112                           	opt stack 0
 13113  005C72                     _moduleSleep:
 13114                           	opt stack 13
 13115                           
 13116                           ;MOTEapp.c: 175: sendCommand("sys sleep 999999999");
 13117                           
 13118                           ;incstack = 0
 13119  005C72  0EA5               	movlw	low STR_22
 13120  005C74  0100               	movlb	0	; () banked
 13121  005C76  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 13122  005C78  0E7A               	movlw	high STR_22
 13123  005C7A  0100               	movlb	0	; () banked
 13124  005C7C  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 13125  005C7E  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 13126                           
 13127                           ;MOTEapp.c: 176: while(1 == PIE1bits.TXIE)
 13128  005C82  D000               	goto	l361
 13129  005C84                     l361:
 13130  005C84  B89D               	btfsc	3997,4,c	;volatile
 13131  005C86  D7FE               	goto	l361
 13132                           
 13133                           ;MOTEapp.c: 178: _delay((unsigned long)((16)*(48000000/4000.0)));
 13134  005C88  0EFA               	movlw	250
 13135  005C8A  0100               	movlb	0	; () banked
 13136  005C8C  6FB2               	movwf	??_moduleSleep& (0+255),b
 13137  005C8E  0E58               	movlw	88
 13138  005C90                     u12587:
 13139  005C90  2EE8               	decfsz	wreg,f,c
 13140  005C92  D7FE               	goto	u12587
 13141  005C94  2FB2               	decfsz	??_moduleSleep& (0+255),f,b
 13142  005C96  D7FC               	goto	u12587
 13143  005C98  D000               	nop2	
 13144  005C9A  0012               	return		;funcret
 13145  005C9C                     __end_of_moduleSleep:
 13146                           	opt stack 0
 13147                           tblptru	equ	0xFF8
 13148                           tblptrh	equ	0xFF7
 13149                           tblptrl	equ	0xFF6
 13150                           tablat	equ	0xFF5
 13151                           prodh	equ	0xFF4
 13152                           prodl	equ	0xFF3
 13153                           intcon	equ	0xFF2
 13154                           intcon3	equ	0xFF0
 13155                           postinc0	equ	0xFEE
 13156                           wreg	equ	0xFE8
 13157                           indf1	equ	0xFE7
 13158                           postdec1	equ	0xFE5
 13159                           fsr1h	equ	0xFE2
 13160                           fsr1l	equ	0xFE1
 13161                           indf2	equ	0xFDF
 13162                           fsr2h	equ	0xFDA
 13163                           fsr2l	equ	0xFD9
 13164                           status	equ	0xFD8
 13165                           
 13166 ;; *************** function _moduleResync *****************
 13167 ;; Defined at:
 13168 ;;		line 132 in file "../Includes/Board/MOTEapp.c"
 13169 ;; Parameters:    Size  Location     Type
 13170 ;;		None
 13171 ;; Auto vars:     Size  Location     Type
 13172 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 13173 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 13174 ;; Return value:  Size  Location     Type
 13175 ;;		None               void
 13176 ;; Registers used:
 13177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13178 ;; Tracked objects:
 13179 ;;		On entry : 0/0
 13180 ;;		On exit  : 0/0
 13181 ;;		Unchanged: 0/0
 13182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13183 ;;      Params:         0       0       0       0       0       0       0       0       0
 13184 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13185 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13186 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13187 ;;Total ram usage:        3 bytes
 13188 ;; Hardware stack levels used:    1
 13189 ;; Hardware stack levels required when called:   14
 13190 ;; This function calls:
 13191 ;;		MOTEapp@sendCommand
 13192 ;;		_MOTEapp_getModuleResponse
 13193 ;;		_moteApp_delayms
 13194 ;; This function is called by:
 13195 ;;		_main
 13196 ;;		_moteApp_GoToSleep
 13197 ;; This function uses a non-reentrant model
 13198 ;;
 13199                           
 13200                           	psect	text38
 13201  004C36                     __ptext38:
 13202                           	opt stack 0
 13203  004C36                     _moduleResync:
 13204                           	opt stack 13
 13205                           
 13206                           ;MOTEapp.c: 134: bool escapeEvent = 0;
 13207                           
 13208                           ;incstack = 0
 13209  004C36  0E00               	movlw	0
 13210  004C38  0100               	movlb	0	; () banked
 13211  004C3A  6FB6               	movwf	moduleResync@escapeEvent& (0+255),b
 13212                           
 13213                           ;MOTEapp.c: 135: uint16_t escapeCounter = 0;
 13214  004C3C  0E00               	movlw	0
 13215  004C3E  0100               	movlb	0	; () banked
 13216  004C40  6FB5               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 13217  004C42  0E00               	movlw	0
 13218  004C44  6FB4               	movwf	moduleResync@escapeCounter& (0+255),b
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;MOTEapp.c: 143: TXSTAbits.TXEN = 0;
 13222  004C46  9AAC               	bcf	4012,5,c	;volatile
 13223                           
 13224                           ; BSR set to: 0
 13225                           ;MOTEapp.c: 144: LATCbits.LATC6 = 0;
 13226  004C48  9C8B               	bcf	3979,6,c	;volatile
 13227                           
 13228                           ; BSR set to: 0
 13229                           ;MOTEapp.c: 145: moteApp_delayms(10);
 13230  004C4A  0E00               	movlw	0
 13231  004C4C  0100               	movlb	0	; () banked
 13232  004C4E  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13233  004C50  0E0A               	movlw	10
 13234  004C52  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 13235  004C54  ECB1  F02C         	call	_moteApp_delayms	;wreg free
 13236                           
 13237                           ;MOTEapp.c: 146: TXSTAbits.TXEN = 1;
 13238  004C58  8AAC               	bsf	4012,5,c	;volatile
 13239                           
 13240                           ;MOTEapp.c: 147: moteApp_delayms(5);
 13241  004C5A  0E00               	movlw	0
 13242  004C5C  0100               	movlb	0	; () banked
 13243  004C5E  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13244  004C60  0E05               	movlw	5
 13245  004C62  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 13246  004C64  ECB1  F02C         	call	_moteApp_delayms	;wreg free
 13247                           
 13248                           ;MOTEapp.c: 149: TXREG = 0x55;
 13249  004C68  0E55               	movlw	85
 13250  004C6A  6EAD               	movwf	4013,c	;volatile
 13251                           
 13252                           ;MOTEapp.c: 150: while (TXSTAbits.TRMT == 0)
 13253  004C6C  D000               	goto	l343
 13254  004C6E                     l343:
 13255  004C6E  A2AC               	btfss	4012,1,c	;volatile
 13256  004C70  D7FE               	goto	l343
 13257                           
 13258                           ;MOTEapp.c: 153: sendCommand("z");
 13259  004C72  0EFC               	movlw	low STR_21
 13260  004C74  0100               	movlb	0	; () banked
 13261  004C76  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 13262  004C78  0E7F               	movlw	high STR_21
 13263  004C7A  0100               	movlb	0	; () banked
 13264  004C7C  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 13265  004C7E  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 13266                           
 13267                           ;MOTEapp.c: 155: moteApp_delayms(40);
 13268  004C82  0E00               	movlw	0
 13269  004C84  0100               	movlb	0	; () banked
 13270  004C86  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13271  004C88  0E28               	movlw	40
 13272  004C8A  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 13273  004C8C  ECB1  F02C         	call	_moteApp_delayms	;wreg free
 13274                           
 13275                           ;MOTEapp.c: 156: while (escapeEvent)
 13276  004C90  D014               	goto	l346
 13277  004C92                     l11293:
 13278                           
 13279                           ;MOTEapp.c: 157: {
 13280                           ;MOTEapp.c: 158: if(MOTEapp_getModuleResponse())
 13281  004C92  ECF2  F027         	call	_MOTEapp_getModuleResponse	;wreg free
 13282  004C96  0900               	iorlw	0
 13283  004C98  A4D8               	btfss	status,2,c
 13284  004C9A  D00B               	goto	l11299
 13285                           
 13286                           ;MOTEapp.c: 160: else if (++escapeCounter > 5000)
 13287                           
 13288                           ; BSR set to: 0
 13289                           
 13290                           ;MOTEapp.c: 159: escapeEvent = 1;
 13291  004C9C  0100               	movlb	0	; () banked
 13292  004C9E  4BB4               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 13293  004CA0  2BB5               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 13294  004CA2  0E89               	movlw	137
 13295  004CA4  0100               	movlb	0	; () banked
 13296  004CA6  5DB4               	subwf	moduleResync@escapeCounter& (0+255),w,b
 13297  004CA8  0E13               	movlw	19
 13298  004CAA  0100               	movlb	0	; () banked
 13299  004CAC  59B5               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 13300  004CAE  A0D8               	btfss	status,0,c
 13301  004CB0  D004               	goto	l346
 13302  004CB2                     l11299:
 13303                           
 13304                           ; BSR set to: 0
 13305                           ;MOTEapp.c: 161: escapeEvent = 1;
 13306  004CB2  0E01               	movlw	1
 13307  004CB4  0100               	movlb	0	; () banked
 13308  004CB6  6FB6               	movwf	moduleResync@escapeEvent& (0+255),b
 13309                           
 13310                           ; BSR set to: 0
 13311  004CB8  D000               	goto	l346
 13312  004CBA                     l346:
 13313  004CBA  0100               	movlb	0	; () banked
 13314  004CBC  51B6               	movf	moduleResync@escapeEvent& (0+255),w,b
 13315  004CBE  0100               	movlb	0	; () banked
 13316  004CC0  A4D8               	btfss	status,2,c
 13317  004CC2  D7E7               	goto	l11293
 13318                           
 13319                           ; BSR set to: 0
 13320                           
 13321                           ; BSR set to: 0
 13322  004CC4  0012               	return		;funcret
 13323  004CC6                     __end_of_moduleResync:
 13324                           	opt stack 0
 13325                           tblptru	equ	0xFF8
 13326                           tblptrh	equ	0xFF7
 13327                           tblptrl	equ	0xFF6
 13328                           tablat	equ	0xFF5
 13329                           prodh	equ	0xFF4
 13330                           prodl	equ	0xFF3
 13331                           intcon	equ	0xFF2
 13332                           intcon3	equ	0xFF0
 13333                           postinc0	equ	0xFEE
 13334                           wreg	equ	0xFE8
 13335                           indf1	equ	0xFE7
 13336                           postdec1	equ	0xFE5
 13337                           fsr1h	equ	0xFE2
 13338                           fsr1l	equ	0xFE1
 13339                           indf2	equ	0xFDF
 13340                           fsr2h	equ	0xFDA
 13341                           fsr2l	equ	0xFD9
 13342                           status	equ	0xFD8
 13343                           
 13344 ;; *************** function _MOTEapp_getModuleResponse *****************
 13345 ;; Defined at:
 13346 ;;		line 1075 in file "../Includes/Board/MOTEapp.c"
 13347 ;; Parameters:    Size  Location     Type
 13348 ;;		None
 13349 ;; Auto vars:     Size  Location     Type
 13350 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 13351 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 13352 ;; Return value:  Size  Location     Type
 13353 ;;                  1    wreg      unsigned char 
 13354 ;; Registers used:
 13355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13356 ;; Tracked objects:
 13357 ;;		On entry : 0/0
 13358 ;;		On exit  : 0/0
 13359 ;;		Unchanged: 0/0
 13360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13361 ;;      Params:         0       0       0       0       0       0       0       0       0
 13362 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13363 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13364 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13365 ;;Total ram usage:        2 bytes
 13366 ;; Hardware stack levels used:    1
 13367 ;; Hardware stack levels required when called:   12
 13368 ;; This function calls:
 13369 ;;		_EUSART_Read
 13370 ;; This function is called by:
 13371 ;;		_moduleResync
 13372 ;;		_moteHandler
 13373 ;;		_moteApp_setSensorsInput
 13374 ;;		_moteApp_getTempValue
 13375 ;;		_moteApp_getLightValue
 13376 ;; This function uses a non-reentrant model
 13377 ;;
 13378                           
 13379                           	psect	text39
 13380  004FE4                     __ptext39:
 13381                           	opt stack 0
 13382  004FE4                     _MOTEapp_getModuleResponse:
 13383                           	opt stack 15
 13384                           
 13385                           ;MOTEapp.c: 1077: bool terminatorReceived = 0;
 13386                           
 13387                           ; BSR set to: 0
 13388                           ;incstack = 0
 13389  004FE4  0E00               	movlw	0
 13390  004FE6  0100               	movlb	0	; () banked
 13391  004FE8  6FB0               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13392                           
 13393                           ;MOTEapp.c: 1079: if ((eusartRxCount))
 13394  004FEA  504D               	movf	_eusartRxCount,w,c	;volatile
 13395  004FEC  B4D8               	btfsc	status,2,c
 13396  004FEE  D034               	goto	l11175
 13397                           
 13398                           ; BSR set to: 0
 13399                           ;MOTEapp.c: 1080: {
 13400                           ;MOTEapp.c: 1081: uint8_t bufferByte = 0;
 13401  004FF0  0E00               	movlw	0
 13402  004FF2  0100               	movlb	0	; () banked
 13403  004FF4  6FB1               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13404                           
 13405                           ; BSR set to: 0
 13406                           ;MOTEapp.c: 1082: bufferByte = EUSART_Read();
 13407  004FF6  ECAA  F02B         	call	_EUSART_Read	;wreg free
 13408  004FFA  0100               	movlb	0	; () banked
 13409  004FFC  6FB1               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13410                           
 13411                           ; BSR set to: 0
 13412                           ;MOTEapp.c: 1084: if (bufferByte == 0x0D)
 13413  004FFE  0E0D               	movlw	13
 13414  005000  0100               	movlb	0	; () banked
 13415  005002  19B1               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13416  005004  A4D8               	btfss	status,2,c
 13417  005006  D010               	goto	l11167
 13418                           
 13419                           ; BSR set to: 0
 13420                           ;MOTEapp.c: 1085: {
 13421                           ;MOTEapp.c: 1086: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 13422  005008  504F               	movf	_moduleBufferIndex,w,c
 13423  00500A  0D01               	mullw	1
 13424  00500C  0E78               	movlw	low _moduleResonseBuffer
 13425  00500E  24F3               	addwf	prodl,w,c
 13426  005010  6ED9               	movwf	fsr2l,c
 13427  005012  0E01               	movlw	high _moduleResonseBuffer
 13428  005014  20F4               	addwfc	prodh,w,c
 13429  005016  6EDA               	movwf	fsr2h,c
 13430  005018  0E00               	movlw	0
 13431  00501A  6EDF               	movwf	indf2,c
 13432                           
 13433                           ; BSR set to: 0
 13434                           ;MOTEapp.c: 1087: terminatorReceived = 1;
 13435  00501C  0E01               	movlw	1
 13436  00501E  0100               	movlb	0	; () banked
 13437  005020  6FB0               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13438                           
 13439                           ; BSR set to: 0
 13440                           ;MOTEapp.c: 1088: moduleBufferIndex = 0;
 13441  005022  0E00               	movlw	0
 13442  005024  6E4F               	movwf	_moduleBufferIndex,c
 13443                           
 13444                           ;MOTEapp.c: 1089: }
 13445  005026  D018               	goto	l11175
 13446  005028                     l11167:
 13447                           
 13448                           ; BSR set to: 0
 13449                           ;MOTEapp.c: 1090: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 13450  005028  0100               	movlb	0	; () banked
 13451  00502A  51B1               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13452  00502C  0100               	movlb	0	; () banked
 13453  00502E  B4D8               	btfsc	status,2,c
 13454  005030  D013               	goto	l11175
 13455                           
 13456                           ; BSR set to: 0
 13457  005032  0E0A               	movlw	10
 13458  005034  0100               	movlb	0	; () banked
 13459  005036  19B1               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13460  005038  B4D8               	btfsc	status,2,c
 13461  00503A  D00E               	goto	l11175
 13462  00503C  D001               	goto	l11171
 13463                           
 13464                           ; BSR set to: 0
 13465                           ;MOTEapp.c: 1091: {
 13466                           ;MOTEapp.c: 1093: }
 13467  00503E  D00C               	goto	l11175
 13468  005040                     l11171:
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;MOTEapp.c: 1094: else
 13472                           ;MOTEapp.c: 1095: {
 13473                           ;MOTEapp.c: 1096: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 13474  005040  504F               	movf	_moduleBufferIndex,w,c
 13475  005042  0D01               	mullw	1
 13476  005044  0E78               	movlw	low _moduleResonseBuffer
 13477  005046  24F3               	addwf	prodl,w,c
 13478  005048  6ED9               	movwf	fsr2l,c
 13479  00504A  0E01               	movlw	high _moduleResonseBuffer
 13480  00504C  20F4               	addwfc	prodh,w,c
 13481  00504E  6EDA               	movwf	fsr2h,c
 13482  005050  C0B1  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 13483                           
 13484                           ; BSR set to: 0
 13485                           ;MOTEapp.c: 1098: moduleBufferIndex++;
 13486  005054  2A4F               	incf	_moduleBufferIndex,f,c
 13487                           
 13488                           ; BSR set to: 0
 13489                           
 13490                           ; BSR set to: 0
 13491  005056  D000               	goto	l11175
 13492  005058                     l11175:
 13493                           
 13494                           ; BSR set to: 0
 13495                           ;MOTEapp.c: 1099: }
 13496                           ;MOTEapp.c: 1100: }
 13497                           ;MOTEapp.c: 1101: return terminatorReceived;
 13498  005058  0100               	movlb	0	; () banked
 13499  00505A  51B0               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 13500  00505C  0012               	return	
 13501                           
 13502                           ; BSR set to: 0
 13503                           
 13504                           ; BSR set to: 0
 13505  00505E  0012               	return		;funcret
 13506  005060                     __end_of_MOTEapp_getModuleResponse:
 13507                           	opt stack 0
 13508                           tblptru	equ	0xFF8
 13509                           tblptrh	equ	0xFF7
 13510                           tblptrl	equ	0xFF6
 13511                           tablat	equ	0xFF5
 13512                           prodh	equ	0xFF4
 13513                           prodl	equ	0xFF3
 13514                           intcon	equ	0xFF2
 13515                           intcon3	equ	0xFF0
 13516                           postinc0	equ	0xFEE
 13517                           wreg	equ	0xFE8
 13518                           indf1	equ	0xFE7
 13519                           postdec1	equ	0xFE5
 13520                           fsr1h	equ	0xFE2
 13521                           fsr1l	equ	0xFE1
 13522                           indf2	equ	0xFDF
 13523                           fsr2h	equ	0xFDA
 13524                           fsr2l	equ	0xFD9
 13525                           status	equ	0xFD8
 13526                           
 13527 ;; *************** function _EUSART_FlushBuffer *****************
 13528 ;; Defined at:
 13529 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 13530 ;; Parameters:    Size  Location     Type
 13531 ;;		None
 13532 ;; Auto vars:     Size  Location     Type
 13533 ;;  index           1    0[BANK0 ] unsigned char 
 13534 ;; Return value:  Size  Location     Type
 13535 ;;		None               void
 13536 ;; Registers used:
 13537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13538 ;; Tracked objects:
 13539 ;;		On entry : 0/0
 13540 ;;		On exit  : 0/0
 13541 ;;		Unchanged: 0/0
 13542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13543 ;;      Params:         0       0       0       0       0       0       0       0       0
 13544 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13545 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13546 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13547 ;;Total ram usage:        1 bytes
 13548 ;; Hardware stack levels used:    1
 13549 ;; Hardware stack levels required when called:   11
 13550 ;; This function calls:
 13551 ;;		Nothing
 13552 ;; This function is called by:
 13553 ;;		_test_powerup
 13554 ;;		_moteApp_GoToSleep
 13555 ;; This function uses a non-reentrant model
 13556 ;;
 13557                           
 13558                           	psect	text40
 13559  0056B8                     __ptext40:
 13560                           	opt stack 0
 13561  0056B8                     _EUSART_FlushBuffer:
 13562                           	opt stack 18
 13563                           
 13564                           ;eusart.c: 204: uint8_t index;
 13565                           ;eusart.c: 205: for (index=0; index < 64; index++)
 13566                           
 13567                           ; BSR set to: 0
 13568                           ;incstack = 0
 13569  0056B8  0E00               	movlw	0
 13570  0056BA  0100               	movlb	0	; () banked
 13571  0056BC  6FAF               	movwf	EUSART_FlushBuffer@index& (0+255),b
 13572  0056BE                     l11319:
 13573                           
 13574                           ; BSR set to: 0
 13575  0056BE  0E3F               	movlw	63
 13576  0056C0  0100               	movlb	0	; () banked
 13577  0056C2  65AF               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 13578  0056C4  D001               	goto	l11323
 13579                           
 13580                           ; BSR set to: 0
 13581  0056C6  D00E               	goto	l11329
 13582  0056C8                     l11323:
 13583                           
 13584                           ; BSR set to: 0
 13585                           ;eusart.c: 206: {
 13586                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 13587  0056C8  0100               	movlb	0	; () banked
 13588  0056CA  51AF               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 13589  0056CC  0D01               	mullw	1
 13590  0056CE  0E00               	movlw	low _eusartRxBuffer
 13591  0056D0  24F3               	addwf	prodl,w,c
 13592  0056D2  6ED9               	movwf	fsr2l,c
 13593  0056D4  0E02               	movlw	high _eusartRxBuffer
 13594  0056D6  20F4               	addwfc	prodh,w,c
 13595  0056D8  6EDA               	movwf	fsr2h,c
 13596  0056DA  0E00               	movlw	0
 13597  0056DC  6EDF               	movwf	indf2,c
 13598                           
 13599                           ; BSR set to: 0
 13600  0056DE  0100               	movlb	0	; () banked
 13601  0056E0  2BAF               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 13602  0056E2  D7ED               	goto	l11319
 13603  0056E4                     l11329:
 13604                           
 13605                           ; BSR set to: 0
 13606                           ;eusart.c: 208: }
 13607                           ;eusart.c: 209: eusartRxHead = 0;
 13608  0056E4  0E00               	movlw	0
 13609  0056E6  0100               	movlb	0	; () banked
 13610  0056E8  6F96               	movwf	_eusartRxHead& (0+255),b
 13611                           
 13612                           ;eusart.c: 210: eusartRxTail = 0;
 13613  0056EA  0E00               	movlw	0
 13614  0056EC  0100               	movlb	0	; () banked
 13615  0056EE  6F97               	movwf	_eusartRxTail& (0+255),b
 13616                           
 13617                           ;eusart.c: 211: eusartRxCount = 0;
 13618  0056F0  0E00               	movlw	0
 13619  0056F2  6E4D               	movwf	_eusartRxCount,c	;volatile
 13620                           
 13621                           ; BSR set to: 0
 13622                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 13623  0056F4  989D               	bcf	3997,4,c	;volatile
 13624                           
 13625                           ;eusart.c: 214: eusartTxHead = 0;
 13626  0056F6  0E00               	movlw	0
 13627  0056F8  0100               	movlb	0	; () banked
 13628  0056FA  6F98               	movwf	_eusartTxHead& (0+255),b
 13629                           
 13630                           ;eusart.c: 215: eusartTxTail = 0;
 13631  0056FC  0E00               	movlw	0
 13632  0056FE  0100               	movlb	0	; () banked
 13633  005700  6F99               	movwf	_eusartTxTail& (0+255),b
 13634                           
 13635                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 13636  005702  0E40               	movlw	64
 13637  005704  6E4E               	movwf	_eusartTxBufferRemaining,c	;volatile
 13638                           
 13639                           ; BSR set to: 0
 13640  005706  0012               	return		;funcret
 13641  005708                     __end_of_EUSART_FlushBuffer:
 13642                           	opt stack 0
 13643                           tblptru	equ	0xFF8
 13644                           tblptrh	equ	0xFF7
 13645                           tblptrl	equ	0xFF6
 13646                           tablat	equ	0xFF5
 13647                           prodh	equ	0xFF4
 13648                           prodl	equ	0xFF3
 13649                           intcon	equ	0xFF2
 13650                           intcon3	equ	0xFF0
 13651                           postinc0	equ	0xFEE
 13652                           wreg	equ	0xFE8
 13653                           indf1	equ	0xFE7
 13654                           postdec1	equ	0xFE5
 13655                           fsr1h	equ	0xFE2
 13656                           fsr1l	equ	0xFE1
 13657                           indf2	equ	0xFDF
 13658                           fsr2h	equ	0xFDA
 13659                           fsr2l	equ	0xFD9
 13660                           status	equ	0xFD8
 13661                           
 13662 ;; *************** function _TMR2_ReadTimer *****************
 13663 ;; Defined at:
 13664 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 13665 ;; Parameters:    Size  Location     Type
 13666 ;;		None
 13667 ;; Auto vars:     Size  Location     Type
 13668 ;;  readVal         1    0[BANK0 ] unsigned char 
 13669 ;; Return value:  Size  Location     Type
 13670 ;;                  1    wreg      unsigned char 
 13671 ;; Registers used:
 13672 ;;		wreg, status,2
 13673 ;; Tracked objects:
 13674 ;;		On entry : 0/0
 13675 ;;		On exit  : 0/0
 13676 ;;		Unchanged: 0/0
 13677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13678 ;;      Params:         0       0       0       0       0       0       0       0       0
 13679 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13680 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13681 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13682 ;;Total ram usage:        1 bytes
 13683 ;; Hardware stack levels used:    1
 13684 ;; Hardware stack levels required when called:   11
 13685 ;; This function calls:
 13686 ;;		Nothing
 13687 ;; This function is called by:
 13688 ;;		_moteRunningProcess
 13689 ;; This function uses a non-reentrant model
 13690 ;;
 13691                           
 13692                           	psect	text41
 13693  005ED6                     __ptext41:
 13694                           	opt stack 0
 13695  005ED6                     _TMR2_ReadTimer:
 13696                           	opt stack 17
 13697                           
 13698                           ;tmr2.c: 88: uint8_t readVal;
 13699                           ;tmr2.c: 90: readVal = TMR2;
 13700                           
 13701                           ; BSR set to: 0
 13702                           ;incstack = 0
 13703  005ED6  CFBC F0AF          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 13704                           
 13705                           ;tmr2.c: 92: return readVal;
 13706  005EDA  0100               	movlb	0	; () banked
 13707  005EDC  51AF               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 13708  005EDE  0012               	return	
 13709                           
 13710                           ; BSR set to: 0
 13711                           
 13712                           ; BSR set to: 0
 13713  005EE0  0012               	return		;funcret
 13714  005EE2                     __end_of_TMR2_ReadTimer:
 13715                           	opt stack 0
 13716                           tblptru	equ	0xFF8
 13717                           tblptrh	equ	0xFF7
 13718                           tblptrl	equ	0xFF6
 13719                           tablat	equ	0xFF5
 13720                           prodh	equ	0xFF4
 13721                           prodl	equ	0xFF3
 13722                           intcon	equ	0xFF2
 13723                           intcon3	equ	0xFF0
 13724                           postinc0	equ	0xFEE
 13725                           wreg	equ	0xFE8
 13726                           indf1	equ	0xFE7
 13727                           postdec1	equ	0xFE5
 13728                           fsr1h	equ	0xFE2
 13729                           fsr1l	equ	0xFE1
 13730                           indf2	equ	0xFDF
 13731                           fsr2h	equ	0xFDA
 13732                           fsr2l	equ	0xFD9
 13733                           status	equ	0xFD8
 13734                           
 13735 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 13736 ;; Defined at:
 13737 ;;		line 982 in file "../Includes/Board/MOTEapp.c"
 13738 ;; Parameters:    Size  Location     Type
 13739 ;;  dr              1    wreg     unsigned char 
 13740 ;; Auto vars:     Size  Location     Type
 13741 ;;  dr              1    4[BANK0 ] unsigned char 
 13742 ;; Return value:  Size  Location     Type
 13743 ;;		None               void
 13744 ;; Registers used:
 13745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13746 ;; Tracked objects:
 13747 ;;		On entry : 0/0
 13748 ;;		On exit  : 0/0
 13749 ;;		Unchanged: 0/0
 13750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13751 ;;      Params:         0       0       0       0       0       0       0       0       0
 13752 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13753 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13754 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13755 ;;Total ram usage:        2 bytes
 13756 ;; Hardware stack levels used:    1
 13757 ;; Hardware stack levels required when called:   14
 13758 ;; This function calls:
 13759 ;;		MOTEapp@sendCommand
 13760 ;; This function is called by:
 13761 ;;		_moteRunningProcess
 13762 ;; This function uses a non-reentrant model
 13763 ;;
 13764                           
 13765                           	psect	text42
 13766  002452                     __ptext42:
 13767                           	opt stack 0
 13768  002452                     _MOTEapp_SetDataRateSetting:
 13769                           	opt stack 14
 13770                           
 13771                           ; BSR set to: 0
 13772                           ;incstack = 0
 13773                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 13774  002452  0100               	movlb	0	; () banked
 13775  002454  6FB3               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 13776                           
 13777                           ; BSR set to: 0
 13778                           ;MOTEapp.c: 984: if (dr != 8)
 13779  002456  0E08               	movlw	8
 13780  002458  0100               	movlb	0	; () banked
 13781  00245A  19B3               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 13782  00245C  B4D8               	btfsc	status,2,c
 13783  00245E  D075               	goto	l12003
 13784                           
 13785                           ; BSR set to: 0
 13786                           ;MOTEapp.c: 985: {
 13787                           ;MOTEapp.c: 986: sendCommand("mac set adr off");
 13788  002460  0EC6               	movlw	low STR_163
 13789  002462  0100               	movlb	0	; () banked
 13790  002464  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 13791  002466  0E7C               	movlw	high STR_163
 13792  002468  0100               	movlb	0	; () banked
 13793  00246A  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 13794  00246C  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 13795                           
 13796                           ;MOTEapp.c: 987: _delay((unsigned long)((16)*(48000000/4000.0)));
 13797  002470  0EFA               	movlw	250
 13798  002472  0100               	movlb	0	; () banked
 13799  002474  6FB2               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13800  002476  0E58               	movlw	88
 13801  002478                     u12597:
 13802  002478  2EE8               	decfsz	wreg,f,c
 13803  00247A  D7FE               	goto	u12597
 13804  00247C  2FB2               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13805  00247E  D7FC               	goto	u12597
 13806  002480  D000               	nop2	
 13807                           
 13808                           ;MOTEapp.c: 988: _delay((unsigned long)((16)*(48000000/4000.0)));
 13809  002482  0EFA               	movlw	250
 13810  002484  0100               	movlb	0	; () banked
 13811  002486  6FB2               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13812  002488  0E58               	movlw	88
 13813  00248A                     u12607:
 13814  00248A  2EE8               	decfsz	wreg,f,c
 13815  00248C  D7FE               	goto	u12607
 13816  00248E  2FB2               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13817  002490  D7FC               	goto	u12607
 13818  002492  D000               	nop2	
 13819                           
 13820                           ;MOTEapp.c: 989: _delay((unsigned long)((16)*(48000000/4000.0)));
 13821  002494  0EFA               	movlw	250
 13822  002496  0100               	movlb	0	; () banked
 13823  002498  6FB2               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13824  00249A  0E58               	movlw	88
 13825  00249C                     u12617:
 13826  00249C  2EE8               	decfsz	wreg,f,c
 13827  00249E  D7FE               	goto	u12617
 13828  0024A0  2FB2               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13829  0024A2  D7FC               	goto	u12617
 13830  0024A4  D000               	nop2	
 13831                           
 13832                           ;MOTEapp.c: 990: }
 13833                           ;MOTEapp.c: 992: switch (dr)
 13834  0024A6  D051               	goto	l12003
 13835  0024A8                     l11983:
 13836                           
 13837                           ;MOTEapp.c: 995: sendCommand("mac set dr 0");
 13838  0024A8  0E76               	movlw	low STR_164
 13839  0024AA  0100               	movlb	0	; () banked
 13840  0024AC  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 13841  0024AE  0E7D               	movlw	high STR_164
 13842  0024B0  0100               	movlb	0	; () banked
 13843  0024B2  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 13844  0024B4  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 13845                           
 13846                           ;MOTEapp.c: 996: break;
 13847  0024B8  D066               	goto	l12005
 13848  0024BA                     l11985:
 13849                           
 13850                           ;MOTEapp.c: 998: sendCommand("mac set dr 1");
 13851  0024BA  0E83               	movlw	low STR_165
 13852  0024BC  0100               	movlb	0	; () banked
 13853  0024BE  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 13854  0024C0  0E7D               	movlw	high STR_165
 13855  0024C2  0100               	movlb	0	; () banked
 13856  0024C4  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 13857  0024C6  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 13858                           
 13859                           ;MOTEapp.c: 999: break;
 13860  0024CA  D05D               	goto	l12005
 13861  0024CC                     l11987:
 13862                           
 13863                           ;MOTEapp.c: 1001: sendCommand("mac set dr 2");
 13864  0024CC  0E90               	movlw	low STR_166
 13865  0024CE  0100               	movlb	0	; () banked
 13866  0024D0  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 13867  0024D2  0E7D               	movlw	high STR_166
 13868  0024D4  0100               	movlb	0	; () banked
 13869  0024D6  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 13870  0024D8  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 13871                           
 13872                           ;MOTEapp.c: 1002: break;
 13873  0024DC  D054               	goto	l12005
 13874  0024DE                     l11989:
 13875                           
 13876                           ;MOTEapp.c: 1004: sendCommand("mac set dr 3");
 13877  0024DE  0E9D               	movlw	low STR_167
 13878  0024E0  0100               	movlb	0	; () banked
 13879  0024E2  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 13880  0024E4  0E7D               	movlw	high STR_167
 13881  0024E6  0100               	movlb	0	; () banked
 13882  0024E8  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 13883  0024EA  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 13884                           
 13885                           ;MOTEapp.c: 1005: break;
 13886  0024EE  D04B               	goto	l12005
 13887  0024F0                     l11991:
 13888                           
 13889                           ;MOTEapp.c: 1007: sendCommand("mac set dr 4");
 13890  0024F0  0EAA               	movlw	low STR_168
 13891  0024F2  0100               	movlb	0	; () banked
 13892  0024F4  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 13893  0024F6  0E7D               	movlw	high STR_168
 13894  0024F8  0100               	movlb	0	; () banked
 13895  0024FA  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 13896  0024FC  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 13897                           
 13898                           ;MOTEapp.c: 1008: break;
 13899  002500  D042               	goto	l12005
 13900  002502                     l11993:
 13901                           
 13902                           ;MOTEapp.c: 1010: sendCommand("mac set dr 5");
 13903  002502  0EB7               	movlw	low STR_169
 13904  002504  0100               	movlb	0	; () banked
 13905  002506  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 13906  002508  0E7D               	movlw	high STR_169
 13907  00250A  0100               	movlb	0	; () banked
 13908  00250C  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 13909  00250E  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 13910                           
 13911                           ;MOTEapp.c: 1011: break;
 13912  002512  D039               	goto	l12005
 13913  002514                     l11995:
 13914                           
 13915                           ;MOTEapp.c: 1013: sendCommand("mac set dr 6");
 13916  002514  0EC4               	movlw	low STR_170
 13917  002516  0100               	movlb	0	; () banked
 13918  002518  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 13919  00251A  0E7D               	movlw	high STR_170
 13920  00251C  0100               	movlb	0	; () banked
 13921  00251E  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 13922  002520  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 13923                           
 13924                           ;MOTEapp.c: 1014: break;
 13925  002524  D030               	goto	l12005
 13926  002526                     l11997:
 13927                           
 13928                           ;MOTEapp.c: 1016: sendCommand("mac set dr 7");
 13929  002526  0ED1               	movlw	low STR_171
 13930  002528  0100               	movlb	0	; () banked
 13931  00252A  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 13932  00252C  0E7D               	movlw	high STR_171
 13933  00252E  0100               	movlb	0	; () banked
 13934  002530  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 13935  002532  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 13936                           
 13937                           ;MOTEapp.c: 1017: break;
 13938  002536  D027               	goto	l12005
 13939  002538                     l11999:
 13940                           
 13941                           ;MOTEapp.c: 1019: sendCommand("mac set adr on");
 13942  002538  0E14               	movlw	low STR_172
 13943  00253A  0100               	movlb	0	; () banked
 13944  00253C  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 13945  00253E  0E7D               	movlw	high STR_172
 13946  002540  0100               	movlb	0	; () banked
 13947  002542  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 13948  002544  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 13949                           
 13950                           ;MOTEapp.c: 1021: }
 13951                           
 13952                           ;MOTEapp.c: 1020: break;
 13953  002548  D01E               	goto	l12005
 13954  00254A                     l12003:
 13955  00254A  0100               	movlb	0	; () banked
 13956  00254C  51B3               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 13957                           
 13958                           ; Switch size 1, requested type "space"
 13959                           ; Number of cases is 9, Range of values is 0 to 8
 13960                           ; switch strategies available:
 13961                           ; Name         Instructions Cycles
 13962                           ; simple_byte           28    15 (average)
 13963                           ;	Chosen strategy is simple_byte
 13964  00254E  0A00               	xorlw	0	; case 0
 13965  002550  B4D8               	btfsc	status,2,c
 13966  002552  D7AA               	goto	l11983
 13967  002554  0A01               	xorlw	1	; case 1
 13968  002556  B4D8               	btfsc	status,2,c
 13969  002558  D7B0               	goto	l11985
 13970  00255A  0A03               	xorlw	3	; case 2
 13971  00255C  B4D8               	btfsc	status,2,c
 13972  00255E  D7B6               	goto	l11987
 13973  002560  0A01               	xorlw	1	; case 3
 13974  002562  B4D8               	btfsc	status,2,c
 13975  002564  D7BC               	goto	l11989
 13976  002566  0A07               	xorlw	7	; case 4
 13977  002568  B4D8               	btfsc	status,2,c
 13978  00256A  D7C2               	goto	l11991
 13979  00256C  0A01               	xorlw	1	; case 5
 13980  00256E  B4D8               	btfsc	status,2,c
 13981  002570  D7C8               	goto	l11993
 13982  002572  0A03               	xorlw	3	; case 6
 13983  002574  B4D8               	btfsc	status,2,c
 13984  002576  D7CE               	goto	l11995
 13985  002578  0A01               	xorlw	1	; case 7
 13986  00257A  B4D8               	btfsc	status,2,c
 13987  00257C  D7D4               	goto	l11997
 13988  00257E  0A0F               	xorlw	15	; case 8
 13989  002580  B4D8               	btfsc	status,2,c
 13990  002582  D7DA               	goto	l11999
 13991  002584  D000               	goto	l12005
 13992  002586                     l12005:
 13993                           
 13994                           ;MOTEapp.c: 1022: _delay((unsigned long)((16)*(48000000/4000.0)));
 13995  002586  0EFA               	movlw	250
 13996  002588  0100               	movlb	0	; () banked
 13997  00258A  6FB2               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13998  00258C  0E58               	movlw	88
 13999  00258E                     u12627:
 14000  00258E  2EE8               	decfsz	wreg,f,c
 14001  002590  D7FE               	goto	u12627
 14002  002592  2FB2               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14003  002594  D7FC               	goto	u12627
 14004  002596  D000               	nop2	
 14005                           
 14006                           ;MOTEapp.c: 1023: _delay((unsigned long)((16)*(48000000/4000.0)));
 14007  002598  0EFA               	movlw	250
 14008  00259A  0100               	movlb	0	; () banked
 14009  00259C  6FB2               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14010  00259E  0E58               	movlw	88
 14011  0025A0                     u12637:
 14012  0025A0  2EE8               	decfsz	wreg,f,c
 14013  0025A2  D7FE               	goto	u12637
 14014  0025A4  2FB2               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14015  0025A6  D7FC               	goto	u12637
 14016  0025A8  D000               	nop2	
 14017                           
 14018                           ;MOTEapp.c: 1024: _delay((unsigned long)((16)*(48000000/4000.0)));
 14019  0025AA  0EFA               	movlw	250
 14020  0025AC  0100               	movlb	0	; () banked
 14021  0025AE  6FB2               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14022  0025B0  0E58               	movlw	88
 14023  0025B2                     u12647:
 14024  0025B2  2EE8               	decfsz	wreg,f,c
 14025  0025B4  D7FE               	goto	u12647
 14026  0025B6  2FB2               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14027  0025B8  D7FC               	goto	u12647
 14028  0025BA  D000               	nop2	
 14029                           
 14030                           ;MOTEapp.c: 1025: sendCommand("mac save");
 14031  0025BC  0E2B               	movlw	low STR_173
 14032  0025BE  0100               	movlb	0	; () banked
 14033  0025C0  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 14034  0025C2  0E7F               	movlw	high STR_173
 14035  0025C4  0100               	movlb	0	; () banked
 14036  0025C6  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 14037  0025C8  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 14038  0025CC  0012               	return		;funcret
 14039  0025CE                     __end_of_MOTEapp_SetDataRateSetting:
 14040                           	opt stack 0
 14041                           tblptru	equ	0xFF8
 14042                           tblptrh	equ	0xFF7
 14043                           tblptrl	equ	0xFF6
 14044                           tablat	equ	0xFF5
 14045                           prodh	equ	0xFF4
 14046                           prodl	equ	0xFF3
 14047                           intcon	equ	0xFF2
 14048                           intcon3	equ	0xFF0
 14049                           postinc0	equ	0xFEE
 14050                           wreg	equ	0xFE8
 14051                           indf1	equ	0xFE7
 14052                           postdec1	equ	0xFE5
 14053                           fsr1h	equ	0xFE2
 14054                           fsr1l	equ	0xFE1
 14055                           indf2	equ	0xFDF
 14056                           fsr2h	equ	0xFDA
 14057                           fsr2l	equ	0xFD9
 14058                           status	equ	0xFD8
 14059                           
 14060 ;; *************** function _ADC_TempConversion *****************
 14061 ;; Defined at:
 14062 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 14063 ;; Parameters:    Size  Location     Type
 14064 ;;  tempRaw         1    wreg     enum E6650
 14065 ;; Auto vars:     Size  Location     Type
 14066 ;;  tempRaw         1   52[BANK0 ] enum E6650
 14067 ;;  val             4   54[BANK0 ] enum E6650
 14068 ;;  temp            1   53[BANK0 ] unsigned char 
 14069 ;; Return value:  Size  Location     Type
 14070 ;;                  1    wreg      unsigned char 
 14071 ;; Registers used:
 14072 ;;		wreg, status,2, status,0, cstack
 14073 ;; Tracked objects:
 14074 ;;		On entry : 0/0
 14075 ;;		On exit  : 0/0
 14076 ;;		Unchanged: 0/0
 14077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14078 ;;      Params:         0       0       0       0       0       0       0       0       0
 14079 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14080 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14081 ;;      Totals:         0       6       0       0       0       0       0       0       0
 14082 ;;Total ram usage:        6 bytes
 14083 ;; Hardware stack levels used:    1
 14084 ;; Hardware stack levels required when called:   13
 14085 ;; This function calls:
 14086 ;;		___fladd
 14087 ;;		___fldiv
 14088 ;;		___flmul
 14089 ;;		___fltol
 14090 ;;		___lbtofl
 14091 ;; This function is called by:
 14092 ;;		_moteHandler
 14093 ;;		_moteRunningProcess
 14094 ;;		_moteApp_testSensors
 14095 ;;		_test_adc
 14096 ;; This function uses a non-reentrant model
 14097 ;;
 14098                           
 14099                           	psect	text43
 14100  003A00                     __ptext43:
 14101                           	opt stack 0
 14102  003A00                     _ADC_TempConversion:
 14103                           	opt stack 15
 14104                           
 14105                           ;incstack = 0
 14106                           ;ADC_TempConversion@tempRaw stored from wreg
 14107  003A00  0100               	movlb	0	; () banked
 14108  003A02  6FE3               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 14109                           
 14110                           ; BSR set to: 0
 14111                           ;adc.c: 138: uint8_t temp;
 14112                           ;adc.c: 140: double val = ((tempRaw * 3.2)/1024);
 14113  003A04  0ECD               	movlw	205
 14114  003A06  0100               	movlb	0	; () banked
 14115  003A08  6FC9               	movwf	___flmul@f2& (0+255),b
 14116  003A0A  0ECC               	movlw	204
 14117  003A0C  6FCA               	movwf	(___flmul@f2+1)& (0+255),b
 14118  003A0E  0E4C               	movlw	76
 14119  003A10  6FCB               	movwf	(___flmul@f2+2)& (0+255),b
 14120  003A12  0E40               	movlw	64
 14121  003A14  6FCC               	movwf	(___flmul@f2+3)& (0+255),b
 14122  003A16  0100               	movlb	0	; () banked
 14123  003A18  51E3               	movf	ADC_TempConversion@tempRaw& (0+255),w,b
 14124  003A1A  EC40  F02D         	call	___lbtofl
 14125  003A1E  C0B9  F0C5         	movff	?___lbtofl,___flmul@f1
 14126  003A22  C0BA  F0C6         	movff	?___lbtofl+1,___flmul@f1+1
 14127  003A26  C0BB  F0C7         	movff	?___lbtofl+2,___flmul@f1+2
 14128  003A2A  C0BC  F0C8         	movff	?___lbtofl+3,___flmul@f1+3
 14129  003A2E  ECE7  F012         	call	___flmul	;wreg free
 14130  003A32  C0C5  F0D4         	movff	?___flmul,___fldiv@f1
 14131  003A36  C0C6  F0D5         	movff	?___flmul+1,___fldiv@f1+1
 14132  003A3A  C0C7  F0D6         	movff	?___flmul+2,___fldiv@f1+2
 14133  003A3E  C0C8  F0D7         	movff	?___flmul+3,___fldiv@f1+3
 14134  003A42  0E00               	movlw	0
 14135  003A44  0100               	movlb	0	; () banked
 14136  003A46  6FD8               	movwf	___fldiv@f2& (0+255),b
 14137  003A48  0E00               	movlw	0
 14138  003A4A  6FD9               	movwf	(___fldiv@f2+1)& (0+255),b
 14139  003A4C  0E80               	movlw	128
 14140  003A4E  6FDA               	movwf	(___fldiv@f2+2)& (0+255),b
 14141  003A50  0E44               	movlw	68
 14142  003A52  6FDB               	movwf	(___fldiv@f2+3)& (0+255),b
 14143  003A54  EC64  F017         	call	___fldiv	;wreg free
 14144  003A58  C0D4  F0E5         	movff	?___fldiv,ADC_TempConversion@val
 14145  003A5C  C0D5  F0E6         	movff	?___fldiv+1,ADC_TempConversion@val+1
 14146  003A60  C0D6  F0E7         	movff	?___fldiv+2,ADC_TempConversion@val+2
 14147  003A64  C0D7  F0E8         	movff	?___fldiv+3,ADC_TempConversion@val+3
 14148                           
 14149                           ;adc.c: 141: val = ((val - 0.5)*100);
 14150  003A68  0E00               	movlw	0
 14151  003A6A  0100               	movlb	0	; () banked
 14152  003A6C  6FBD               	movwf	___fladd@f2& (0+255),b
 14153  003A6E  0E00               	movlw	0
 14154  003A70  6FBE               	movwf	(___fladd@f2+1)& (0+255),b
 14155  003A72  0E00               	movlw	0
 14156  003A74  6FBF               	movwf	(___fladd@f2+2)& (0+255),b
 14157  003A76  0EBF               	movlw	191
 14158  003A78  6FC0               	movwf	(___fladd@f2+3)& (0+255),b
 14159  003A7A  C0E5  F0B9         	movff	ADC_TempConversion@val,___fladd@f1
 14160  003A7E  C0E6  F0BA         	movff	ADC_TempConversion@val+1,___fladd@f1+1
 14161  003A82  C0E7  F0BB         	movff	ADC_TempConversion@val+2,___fladd@f1+2
 14162  003A86  C0E8  F0BC         	movff	ADC_TempConversion@val+3,___fladd@f1+3
 14163  003A8A  EC6B  F00F         	call	___fladd	;wreg free
 14164  003A8E  C0B9  F0C5         	movff	?___fladd,___flmul@f1
 14165  003A92  C0BA  F0C6         	movff	?___fladd+1,___flmul@f1+1
 14166  003A96  C0BB  F0C7         	movff	?___fladd+2,___flmul@f1+2
 14167  003A9A  C0BC  F0C8         	movff	?___fladd+3,___flmul@f1+3
 14168  003A9E  0E00               	movlw	0
 14169  003AA0  0100               	movlb	0	; () banked
 14170  003AA2  6FC9               	movwf	___flmul@f2& (0+255),b
 14171  003AA4  0E00               	movlw	0
 14172  003AA6  6FCA               	movwf	(___flmul@f2+1)& (0+255),b
 14173  003AA8  0EC8               	movlw	200
 14174  003AAA  6FCB               	movwf	(___flmul@f2+2)& (0+255),b
 14175  003AAC  0E42               	movlw	66
 14176  003AAE  6FCC               	movwf	(___flmul@f2+3)& (0+255),b
 14177  003AB0  ECE7  F012         	call	___flmul	;wreg free
 14178  003AB4  C0C5  F0E5         	movff	?___flmul,ADC_TempConversion@val
 14179  003AB8  C0C6  F0E6         	movff	?___flmul+1,ADC_TempConversion@val+1
 14180  003ABC  C0C7  F0E7         	movff	?___flmul+2,ADC_TempConversion@val+2
 14181  003AC0  C0C8  F0E8         	movff	?___flmul+3,ADC_TempConversion@val+3
 14182                           
 14183                           ;adc.c: 142: temp = (uint8_t) val;
 14184  003AC4  C0E5  F0AF         	movff	ADC_TempConversion@val,___fltol@f1
 14185  003AC8  C0E6  F0B0         	movff	ADC_TempConversion@val+1,___fltol@f1+1
 14186  003ACC  C0E7  F0B1         	movff	ADC_TempConversion@val+2,___fltol@f1+2
 14187  003AD0  C0E8  F0B2         	movff	ADC_TempConversion@val+3,___fltol@f1+3
 14188  003AD4  EC91  F018         	call	___fltol	;wreg free
 14189  003AD8  0100               	movlb	0	; () banked
 14190  003ADA  51AF               	movf	?___fltol& (0+255),w,b
 14191  003ADC  0100               	movlb	0	; () banked
 14192  003ADE  6FE4               	movwf	ADC_TempConversion@temp& (0+255),b
 14193                           
 14194                           ; BSR set to: 0
 14195                           ;adc.c: 144: return temp;
 14196  003AE0  0100               	movlb	0	; () banked
 14197  003AE2  51E4               	movf	ADC_TempConversion@temp& (0+255),w,b
 14198  003AE4  0012               	return	
 14199                           
 14200                           ; BSR set to: 0
 14201                           
 14202                           ; BSR set to: 0
 14203  003AE6  0012               	return		;funcret
 14204  003AE8                     __end_of_ADC_TempConversion:
 14205                           	opt stack 0
 14206                           tblptru	equ	0xFF8
 14207                           tblptrh	equ	0xFF7
 14208                           tblptrl	equ	0xFF6
 14209                           tablat	equ	0xFF5
 14210                           prodh	equ	0xFF4
 14211                           prodl	equ	0xFF3
 14212                           intcon	equ	0xFF2
 14213                           intcon3	equ	0xFF0
 14214                           postinc0	equ	0xFEE
 14215                           wreg	equ	0xFE8
 14216                           indf1	equ	0xFE7
 14217                           postdec1	equ	0xFE5
 14218                           fsr1h	equ	0xFE2
 14219                           fsr1l	equ	0xFE1
 14220                           indf2	equ	0xFDF
 14221                           fsr2h	equ	0xFDA
 14222                           fsr2l	equ	0xFD9
 14223                           status	equ	0xFD8
 14224                           
 14225 ;; *************** function ___lbtofl *****************
 14226 ;; Defined at:
 14227 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtofl.c"
 14228 ;; Parameters:    Size  Location     Type
 14229 ;;  c               1    wreg     unsigned char 
 14230 ;; Auto vars:     Size  Location     Type
 14231 ;;  c               1   14[BANK0 ] unsigned char 
 14232 ;; Return value:  Size  Location     Type
 14233 ;;                  4   10[BANK0 ] unsigned char 
 14234 ;; Registers used:
 14235 ;;		wreg, status,2, status,0, cstack
 14236 ;; Tracked objects:
 14237 ;;		On entry : 0/0
 14238 ;;		On exit  : 0/0
 14239 ;;		Unchanged: 0/0
 14240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14241 ;;      Params:         0       4       0       0       0       0       0       0       0
 14242 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14243 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14244 ;;      Totals:         0       5       0       0       0       0       0       0       0
 14245 ;;Total ram usage:        5 bytes
 14246 ;; Hardware stack levels used:    1
 14247 ;; Hardware stack levels required when called:   12
 14248 ;; This function calls:
 14249 ;;		___flpack
 14250 ;; This function is called by:
 14251 ;;		_ADC_TempConversion
 14252 ;; This function uses a non-reentrant model
 14253 ;;
 14254                           
 14255                           	psect	text44
 14256  005A80                     __ptext44:
 14257                           	opt stack 0
 14258  005A80                     ___lbtofl:
 14259                           	opt stack 15
 14260                           
 14261                           ; BSR set to: 0
 14262                           ;incstack = 0
 14263                           ;___lbtofl@c stored from wreg
 14264  005A80  0100               	movlb	0	; () banked
 14265  005A82  6FBD               	movwf	___lbtofl@c& (0+255),b
 14266                           
 14267                           ; BSR set to: 0
 14268  005A84  0100               	movlb	0	; () banked
 14269  005A86  51BD               	movf	___lbtofl@c& (0+255),w,b
 14270  005A88  0100               	movlb	0	; () banked
 14271  005A8A  6FAF               	movwf	___flpack@arg& (0+255),b
 14272  005A8C  6BB0               	clrf	(___flpack@arg+1)& (0+255),b
 14273  005A8E  6BB1               	clrf	(___flpack@arg+2)& (0+255),b
 14274  005A90  6BB2               	clrf	(___flpack@arg+3)& (0+255),b
 14275  005A92  0E96               	movlw	150
 14276  005A94  0100               	movlb	0	; () banked
 14277  005A96  6FB3               	movwf	___flpack@exp& (0+255),b
 14278  005A98  0E00               	movlw	0
 14279  005A9A  0100               	movlb	0	; () banked
 14280  005A9C  6FB4               	movwf	___flpack@sign& (0+255),b
 14281  005A9E  EC69  F011         	call	___flpack	;wreg free
 14282  005AA2  C0AF  F0B9         	movff	?___flpack,?___lbtofl
 14283  005AA6  C0B0  F0BA         	movff	?___flpack+1,?___lbtofl+1
 14284  005AAA  C0B1  F0BB         	movff	?___flpack+2,?___lbtofl+2
 14285  005AAE  C0B2  F0BC         	movff	?___flpack+3,?___lbtofl+3
 14286  005AB2  0012               	return	
 14287  005AB4  0012               	return		;funcret
 14288  005AB6                     __end_of___lbtofl:
 14289                           	opt stack 0
 14290                           tblptru	equ	0xFF8
 14291                           tblptrh	equ	0xFF7
 14292                           tblptrl	equ	0xFF6
 14293                           tablat	equ	0xFF5
 14294                           prodh	equ	0xFF4
 14295                           prodl	equ	0xFF3
 14296                           intcon	equ	0xFF2
 14297                           intcon3	equ	0xFF0
 14298                           postinc0	equ	0xFEE
 14299                           wreg	equ	0xFE8
 14300                           indf1	equ	0xFE7
 14301                           postdec1	equ	0xFE5
 14302                           fsr1h	equ	0xFE2
 14303                           fsr1l	equ	0xFE1
 14304                           indf2	equ	0xFDF
 14305                           fsr2h	equ	0xFDA
 14306                           fsr2l	equ	0xFD9
 14307                           status	equ	0xFD8
 14308                           
 14309 ;; *************** function ___fltol *****************
 14310 ;; Defined at:
 14311 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fltol.c"
 14312 ;; Parameters:    Size  Location     Type
 14313 ;;  f1              4    0[BANK0 ] unsigned char 
 14314 ;; Auto vars:     Size  Location     Type
 14315 ;;  exp1            1    9[BANK0 ] unsigned char 
 14316 ;;  sign1           1    8[BANK0 ] unsigned char 
 14317 ;; Return value:  Size  Location     Type
 14318 ;;                  4    0[BANK0 ] long 
 14319 ;; Registers used:
 14320 ;;		wreg, status,2, status,0
 14321 ;; Tracked objects:
 14322 ;;		On entry : 0/0
 14323 ;;		On exit  : 0/0
 14324 ;;		Unchanged: 0/0
 14325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14326 ;;      Params:         0       4       0       0       0       0       0       0       0
 14327 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14328 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14329 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14330 ;;Total ram usage:       10 bytes
 14331 ;; Hardware stack levels used:    1
 14332 ;; Hardware stack levels required when called:   11
 14333 ;; This function calls:
 14334 ;;		Nothing
 14335 ;; This function is called by:
 14336 ;;		_ADC_TempConversion
 14337 ;; This function uses a non-reentrant model
 14338 ;;
 14339                           
 14340                           	psect	text45
 14341  003122                     __ptext45:
 14342                           	opt stack 0
 14343  003122                     ___fltol:
 14344                           	opt stack 16
 14345                           
 14346                           ;incstack = 0
 14347  003122  0100               	movlb	0	; () banked
 14348  003124  35B1               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14349  003126  35B2               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14350  003128  0100               	movlb	0	; () banked
 14351  00312A  6FB8               	movwf	___fltol@exp1& (0+255),b
 14352  00312C  0100               	movlb	0	; () banked
 14353  00312E  51B8               	movf	___fltol@exp1& (0+255),w,b
 14354  003130  A4D8               	btfss	status,2,c
 14355  003132  D00A               	goto	l11623
 14356                           
 14357                           ; BSR set to: 0
 14358  003134  0E00               	movlw	0
 14359  003136  0100               	movlb	0	; () banked
 14360  003138  6FAF               	movwf	?___fltol& (0+255),b
 14361  00313A  0E00               	movlw	0
 14362  00313C  6FB0               	movwf	(?___fltol+1)& (0+255),b
 14363  00313E  0E00               	movlw	0
 14364  003140  6FB1               	movwf	(?___fltol+2)& (0+255),b
 14365  003142  0E00               	movlw	0
 14366  003144  6FB2               	movwf	(?___fltol+3)& (0+255),b
 14367                           
 14368                           ; BSR set to: 0
 14369  003146  0012               	return	
 14370  003148                     l11623:
 14371                           
 14372                           ; BSR set to: 0
 14373  003148  C0AF  F0B3         	movff	___fltol@f1,??___fltol
 14374  00314C  C0B0  F0B4         	movff	___fltol@f1+1,??___fltol+1
 14375  003150  C0B1  F0B5         	movff	___fltol@f1+2,??___fltol+2
 14376  003154  C0B2  F0B6         	movff	___fltol@f1+3,??___fltol+3
 14377  003158  0E20               	movlw	32
 14378  00315A  D006               	goto	u10180
 14379  00315C                     u10185:
 14380  00315C  0100               	movlb	0	; () banked
 14381  00315E  90D8               	bcf	status,0,c
 14382  003160  33B6               	rrcf	(??___fltol+3)& (0+255),f,b
 14383  003162  33B5               	rrcf	(??___fltol+2)& (0+255),f,b
 14384  003164  33B4               	rrcf	(??___fltol+1)& (0+255),f,b
 14385  003166  33B3               	rrcf	??___fltol& (0+255),f,b
 14386  003168                     u10180:
 14387  003168  2EE8               	decfsz	wreg,f,c
 14388  00316A  D7F8               	goto	u10185
 14389  00316C  0100               	movlb	0	; () banked
 14390  00316E  51B3               	movf	??___fltol& (0+255),w,b
 14391  003170  0100               	movlb	0	; () banked
 14392  003172  6FB7               	movwf	___fltol@sign1& (0+255),b
 14393                           
 14394                           ; BSR set to: 0
 14395  003174  0100               	movlb	0	; () banked
 14396  003176  8FB1               	bsf	(___fltol@f1+2)& (0+255),7,b
 14397                           
 14398                           ; BSR set to: 0
 14399  003178  0EFF               	movlw	255
 14400  00317A  0100               	movlb	0	; () banked
 14401  00317C  17AF               	andwf	___fltol@f1& (0+255),f,b
 14402  00317E  0EFF               	movlw	255
 14403  003180  17B0               	andwf	(___fltol@f1+1)& (0+255),f,b
 14404  003182  0EFF               	movlw	255
 14405  003184  17B1               	andwf	(___fltol@f1+2)& (0+255),f,b
 14406  003186  0E00               	movlw	0
 14407  003188  17B2               	andwf	(___fltol@f1+3)& (0+255),f,b
 14408                           
 14409                           ; BSR set to: 0
 14410  00318A  0E96               	movlw	150
 14411  00318C  0100               	movlb	0	; () banked
 14412  00318E  5FB8               	subwf	___fltol@exp1& (0+255),f,b
 14413                           
 14414                           ; BSR set to: 0
 14415  003190  0100               	movlb	0	; () banked
 14416  003192  AFB8               	btfss	___fltol@exp1& (0+255),7,b
 14417  003194  D01B               	goto	l11643
 14418                           
 14419                           ; BSR set to: 0
 14420  003196  0100               	movlb	0	; () banked
 14421  003198  51B8               	movf	___fltol@exp1& (0+255),w,b
 14422  00319A  0A80               	xorlw	128
 14423  00319C  0F97               	addlw	151
 14424  00319E  B0D8               	btfsc	status,0,c
 14425  0031A0  D00B               	goto	l11639
 14426                           
 14427                           ; BSR set to: 0
 14428  0031A2  0E00               	movlw	0
 14429  0031A4  0100               	movlb	0	; () banked
 14430  0031A6  6FAF               	movwf	?___fltol& (0+255),b
 14431  0031A8  0E00               	movlw	0
 14432  0031AA  6FB0               	movwf	(?___fltol+1)& (0+255),b
 14433  0031AC  0E00               	movlw	0
 14434  0031AE  6FB1               	movwf	(?___fltol+2)& (0+255),b
 14435  0031B0  0E00               	movlw	0
 14436  0031B2  6FB2               	movwf	(?___fltol+3)& (0+255),b
 14437                           
 14438                           ; BSR set to: 0
 14439  0031B4  0012               	return	
 14440                           
 14441                           ; BSR set to: 0
 14442  0031B6  D000               	goto	l11639
 14443  0031B8                     l11639:
 14444                           
 14445                           ; BSR set to: 0
 14446  0031B8  0100               	movlb	0	; () banked
 14447  0031BA  90D8               	bcf	status,0,c
 14448  0031BC  33B2               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14449  0031BE  33B1               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14450  0031C0  33B0               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14451  0031C2  33AF               	rrcf	___fltol@f1& (0+255),f,b
 14452                           
 14453                           ; BSR set to: 0
 14454  0031C4  0100               	movlb	0	; () banked
 14455  0031C6  3FB8               	incfsz	___fltol@exp1& (0+255),f,b
 14456  0031C8  D7F7               	goto	l11639
 14457                           
 14458                           ; BSR set to: 0
 14459  0031CA  D01F               	goto	l11653
 14460  0031CC                     l11643:
 14461                           
 14462                           ; BSR set to: 0
 14463  0031CC  0E1F               	movlw	31
 14464  0031CE  0100               	movlb	0	; () banked
 14465  0031D0  65B8               	cpfsgt	___fltol@exp1& (0+255),b
 14466  0031D2  D014               	goto	l11651
 14467                           
 14468                           ; BSR set to: 0
 14469  0031D4  0E00               	movlw	0
 14470  0031D6  0100               	movlb	0	; () banked
 14471  0031D8  6FAF               	movwf	?___fltol& (0+255),b
 14472  0031DA  0E00               	movlw	0
 14473  0031DC  6FB0               	movwf	(?___fltol+1)& (0+255),b
 14474  0031DE  0E00               	movlw	0
 14475  0031E0  6FB1               	movwf	(?___fltol+2)& (0+255),b
 14476  0031E2  0E00               	movlw	0
 14477  0031E4  6FB2               	movwf	(?___fltol+3)& (0+255),b
 14478                           
 14479                           ; BSR set to: 0
 14480  0031E6  0012               	return	
 14481                           
 14482                           ; BSR set to: 0
 14483  0031E8  D009               	goto	l11651
 14484  0031EA                     l11649:
 14485                           
 14486                           ; BSR set to: 0
 14487  0031EA  0100               	movlb	0	; () banked
 14488  0031EC  90D8               	bcf	status,0,c
 14489  0031EE  37AF               	rlcf	___fltol@f1& (0+255),f,b
 14490  0031F0  37B0               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14491  0031F2  37B1               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14492  0031F4  37B2               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14493  0031F6  0100               	movlb	0	; () banked
 14494  0031F8  07B8               	decf	___fltol@exp1& (0+255),f,b
 14495  0031FA  D000               	goto	l11651
 14496  0031FC                     l11651:
 14497                           
 14498                           ; BSR set to: 0
 14499  0031FC  0100               	movlb	0	; () banked
 14500  0031FE  51B8               	movf	___fltol@exp1& (0+255),w,b
 14501  003200  0100               	movlb	0	; () banked
 14502  003202  B4D8               	btfsc	status,2,c
 14503  003204  D002               	goto	l11653
 14504  003206  D7F1               	goto	l11649
 14505                           
 14506                           ; BSR set to: 0
 14507  003208  D000               	goto	l11653
 14508  00320A                     l11653:
 14509                           
 14510                           ; BSR set to: 0
 14511  00320A  0100               	movlb	0	; () banked
 14512  00320C  51B7               	movf	___fltol@sign1& (0+255),w,b
 14513  00320E  0100               	movlb	0	; () banked
 14514  003210  B4D8               	btfsc	status,2,c
 14515  003212  D00A               	goto	l11657
 14516                           
 14517                           ; BSR set to: 0
 14518  003214  0100               	movlb	0	; () banked
 14519  003216  1FB2               	comf	(___fltol@f1+3)& (0+255),f,b
 14520  003218  1FB1               	comf	(___fltol@f1+2)& (0+255),f,b
 14521  00321A  1FB0               	comf	(___fltol@f1+1)& (0+255),f,b
 14522  00321C  6DAF               	negf	___fltol@f1& (0+255),b
 14523  00321E  0E00               	movlw	0
 14524  003220  23B0               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14525  003222  23B1               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14526  003224  23B2               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14527  003226  D000               	goto	l11657
 14528  003228                     l11657:
 14529                           
 14530                           ; BSR set to: 0
 14531  003228  C0AF  F0AF         	movff	___fltol@f1,?___fltol
 14532  00322C  C0B0  F0B0         	movff	___fltol@f1+1,?___fltol+1
 14533  003230  C0B1  F0B1         	movff	___fltol@f1+2,?___fltol+2
 14534  003234  C0B2  F0B2         	movff	___fltol@f1+3,?___fltol+3
 14535  003238  0012               	return	
 14536                           
 14537                           ; BSR set to: 0
 14538                           
 14539                           ; BSR set to: 0
 14540  00323A  0012               	return		;funcret
 14541  00323C                     __end_of___fltol:
 14542                           	opt stack 0
 14543                           tblptru	equ	0xFF8
 14544                           tblptrh	equ	0xFF7
 14545                           tblptrl	equ	0xFF6
 14546                           tablat	equ	0xFF5
 14547                           prodh	equ	0xFF4
 14548                           prodl	equ	0xFF3
 14549                           intcon	equ	0xFF2
 14550                           intcon3	equ	0xFF0
 14551                           postinc0	equ	0xFEE
 14552                           wreg	equ	0xFE8
 14553                           indf1	equ	0xFE7
 14554                           postdec1	equ	0xFE5
 14555                           fsr1h	equ	0xFE2
 14556                           fsr1l	equ	0xFE1
 14557                           indf2	equ	0xFDF
 14558                           fsr2h	equ	0xFDA
 14559                           fsr2l	equ	0xFD9
 14560                           status	equ	0xFD8
 14561                           
 14562 ;; *************** function ___flmul *****************
 14563 ;; Defined at:
 14564 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flmul.c"
 14565 ;; Parameters:    Size  Location     Type
 14566 ;;  f1              4   22[BANK0 ] long 
 14567 ;;  f2              4   26[BANK0 ] long 
 14568 ;; Auto vars:     Size  Location     Type
 14569 ;;  f3_as_produc    4   31[BANK0 ] unsigned long 
 14570 ;;  sign            1   36[BANK0 ] unsigned char 
 14571 ;;  cntr            1   35[BANK0 ] unsigned char 
 14572 ;;  exp             1   30[BANK0 ] unsigned char 
 14573 ;; Return value:  Size  Location     Type
 14574 ;;                  4   22[BANK0 ] unsigned char 
 14575 ;; Registers used:
 14576 ;;		wreg, status,2, status,0, cstack
 14577 ;; Tracked objects:
 14578 ;;		On entry : 0/0
 14579 ;;		On exit  : 0/0
 14580 ;;		Unchanged: 0/0
 14581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14582 ;;      Params:         0       8       0       0       0       0       0       0       0
 14583 ;;      Locals:         0       7       0       0       0       0       0       0       0
 14584 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14585 ;;      Totals:         0      15       0       0       0       0       0       0       0
 14586 ;;Total ram usage:       15 bytes
 14587 ;; Hardware stack levels used:    1
 14588 ;; Hardware stack levels required when called:   12
 14589 ;; This function calls:
 14590 ;;		___flpack
 14591 ;; This function is called by:
 14592 ;;		_ADC_TempConversion
 14593 ;; This function uses a non-reentrant model
 14594 ;;
 14595                           
 14596                           	psect	text46
 14597  0025CE                     __ptext46:
 14598                           	opt stack 0
 14599  0025CE                     ___flmul:
 14600                           	opt stack 15
 14601                           
 14602                           ; BSR set to: 0
 14603                           ;incstack = 0
 14604  0025CE  0100               	movlb	0	; () banked
 14605  0025D0  35C7               	rlcf	(___flmul@f1+2)& (0+255),w,b
 14606  0025D2  35C8               	rlcf	(___flmul@f1+3)& (0+255),w,b
 14607  0025D4  0100               	movlb	0	; () banked
 14608  0025D6  6FCD               	movwf	___flmul@exp& (0+255),b
 14609  0025D8  0100               	movlb	0	; () banked
 14610  0025DA  51CD               	movf	___flmul@exp& (0+255),w,b
 14611  0025DC  A4D8               	btfss	status,2,c
 14612  0025DE  D00A               	goto	l11537
 14613                           
 14614                           ; BSR set to: 0
 14615  0025E0  0E00               	movlw	0
 14616  0025E2  0100               	movlb	0	; () banked
 14617  0025E4  6FC5               	movwf	?___flmul& (0+255),b
 14618  0025E6  0E00               	movlw	0
 14619  0025E8  6FC6               	movwf	(?___flmul+1)& (0+255),b
 14620  0025EA  0E00               	movlw	0
 14621  0025EC  6FC7               	movwf	(?___flmul+2)& (0+255),b
 14622  0025EE  0E00               	movlw	0
 14623  0025F0  6FC8               	movwf	(?___flmul+3)& (0+255),b
 14624                           
 14625                           ; BSR set to: 0
 14626  0025F2  0012               	return	
 14627  0025F4                     l11537:
 14628                           
 14629                           ; BSR set to: 0
 14630  0025F4  0100               	movlb	0	; () banked
 14631  0025F6  35CB               	rlcf	(___flmul@f2+2)& (0+255),w,b
 14632  0025F8  35CC               	rlcf	(___flmul@f2+3)& (0+255),w,b
 14633  0025FA  0100               	movlb	0	; () banked
 14634  0025FC  6FD3               	movwf	___flmul@sign& (0+255),b
 14635  0025FE  0100               	movlb	0	; () banked
 14636  002600  51D3               	movf	___flmul@sign& (0+255),w,b
 14637  002602  A4D8               	btfss	status,2,c
 14638  002604  D00A               	goto	l11543
 14639                           
 14640                           ; BSR set to: 0
 14641  002606  0E00               	movlw	0
 14642  002608  0100               	movlb	0	; () banked
 14643  00260A  6FC5               	movwf	?___flmul& (0+255),b
 14644  00260C  0E00               	movlw	0
 14645  00260E  6FC6               	movwf	(?___flmul+1)& (0+255),b
 14646  002610  0E00               	movlw	0
 14647  002612  6FC7               	movwf	(?___flmul+2)& (0+255),b
 14648  002614  0E00               	movlw	0
 14649  002616  6FC8               	movwf	(?___flmul+3)& (0+255),b
 14650                           
 14651                           ; BSR set to: 0
 14652  002618  0012               	return	
 14653  00261A                     l11543:
 14654                           
 14655                           ; BSR set to: 0
 14656  00261A  0100               	movlb	0	; () banked
 14657  00261C  51D3               	movf	___flmul@sign& (0+255),w,b
 14658  00261E  0F7B               	addlw	123
 14659  002620  0100               	movlb	0	; () banked
 14660  002622  27CD               	addwf	___flmul@exp& (0+255),f,b
 14661                           
 14662                           ; BSR set to: 0
 14663  002624  C0C8  F0D3         	movff	___flmul@f1+3,___flmul@sign
 14664  002628  0100               	movlb	0	; () banked
 14665  00262A  51CC               	movf	(___flmul@f2+3)& (0+255),w,b
 14666  00262C  0100               	movlb	0	; () banked
 14667  00262E  1BD3               	xorwf	___flmul@sign& (0+255),f,b
 14668  002630  0E80               	movlw	128
 14669  002632  0100               	movlb	0	; () banked
 14670  002634  17D3               	andwf	___flmul@sign& (0+255),f,b
 14671                           
 14672                           ; BSR set to: 0
 14673  002636  0100               	movlb	0	; () banked
 14674  002638  8FC7               	bsf	(___flmul@f1+2)& (0+255),7,b
 14675                           
 14676                           ; BSR set to: 0
 14677  00263A  0100               	movlb	0	; () banked
 14678  00263C  8FCB               	bsf	(___flmul@f2+2)& (0+255),7,b
 14679  00263E  0EFF               	movlw	255
 14680  002640  0100               	movlb	0	; () banked
 14681  002642  17C9               	andwf	___flmul@f2& (0+255),f,b
 14682  002644  0EFF               	movlw	255
 14683  002646  17CA               	andwf	(___flmul@f2+1)& (0+255),f,b
 14684  002648  0EFF               	movlw	255
 14685  00264A  17CB               	andwf	(___flmul@f2+2)& (0+255),f,b
 14686  00264C  0E00               	movlw	0
 14687  00264E  17CC               	andwf	(___flmul@f2+3)& (0+255),f,b
 14688                           
 14689                           ; BSR set to: 0
 14690  002650  0E00               	movlw	0
 14691  002652  0100               	movlb	0	; () banked
 14692  002654  6FCE               	movwf	___flmul@f3_as_product& (0+255),b
 14693  002656  0E00               	movlw	0
 14694  002658  6FCF               	movwf	(___flmul@f3_as_product+1)& (0+255),b
 14695  00265A  0E00               	movlw	0
 14696  00265C  6FD0               	movwf	(___flmul@f3_as_product+2)& (0+255),b
 14697  00265E  0E00               	movlw	0
 14698  002660  6FD1               	movwf	(___flmul@f3_as_product+3)& (0+255),b
 14699                           
 14700                           ; BSR set to: 0
 14701  002662  0E07               	movlw	7
 14702  002664  0100               	movlb	0	; () banked
 14703  002666  6FD2               	movwf	___flmul@cntr& (0+255),b
 14704  002668  D000               	goto	l11555
 14705  00266A                     l11555:
 14706                           
 14707                           ; BSR set to: 0
 14708  00266A  0100               	movlb	0	; () banked
 14709  00266C  A1C5               	btfss	___flmul@f1& (0+255),0,b
 14710  00266E  D011               	goto	l11559
 14711                           
 14712                           ; BSR set to: 0
 14713  002670  0100               	movlb	0	; () banked
 14714  002672  51C9               	movf	___flmul@f2& (0+255),w,b
 14715  002674  0100               	movlb	0	; () banked
 14716  002676  27CE               	addwf	___flmul@f3_as_product& (0+255),f,b
 14717  002678  0100               	movlb	0	; () banked
 14718  00267A  51CA               	movf	(___flmul@f2+1)& (0+255),w,b
 14719  00267C  0100               	movlb	0	; () banked
 14720  00267E  23CF               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 14721  002680  0100               	movlb	0	; () banked
 14722  002682  51CB               	movf	(___flmul@f2+2)& (0+255),w,b
 14723  002684  0100               	movlb	0	; () banked
 14724  002686  23D0               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 14725  002688  0100               	movlb	0	; () banked
 14726  00268A  51CC               	movf	(___flmul@f2+3)& (0+255),w,b
 14727  00268C  0100               	movlb	0	; () banked
 14728  00268E  23D1               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 14729  002690  D000               	goto	l11559
 14730  002692                     l11559:
 14731                           
 14732                           ; BSR set to: 0
 14733  002692  0100               	movlb	0	; () banked
 14734  002694  90D8               	bcf	status,0,c
 14735  002696  33C8               	rrcf	(___flmul@f1+3)& (0+255),f,b
 14736  002698  33C7               	rrcf	(___flmul@f1+2)& (0+255),f,b
 14737  00269A  33C6               	rrcf	(___flmul@f1+1)& (0+255),f,b
 14738  00269C  33C5               	rrcf	___flmul@f1& (0+255),f,b
 14739                           
 14740                           ; BSR set to: 0
 14741  00269E  0100               	movlb	0	; () banked
 14742  0026A0  90D8               	bcf	status,0,c
 14743  0026A2  37C9               	rlcf	___flmul@f2& (0+255),f,b
 14744  0026A4  37CA               	rlcf	(___flmul@f2+1)& (0+255),f,b
 14745  0026A6  37CB               	rlcf	(___flmul@f2+2)& (0+255),f,b
 14746  0026A8  37CC               	rlcf	(___flmul@f2+3)& (0+255),f,b
 14747                           
 14748                           ; BSR set to: 0
 14749  0026AA  0100               	movlb	0	; () banked
 14750  0026AC  2FD2               	decfsz	___flmul@cntr& (0+255),f,b
 14751  0026AE  D7DD               	goto	l11555
 14752  0026B0  D000               	goto	l11565
 14753  0026B2                     l11565:
 14754                           
 14755                           ; BSR set to: 0
 14756  0026B2  0E11               	movlw	17
 14757  0026B4  0100               	movlb	0	; () banked
 14758  0026B6  6FD2               	movwf	___flmul@cntr& (0+255),b
 14759  0026B8  D000               	goto	l11567
 14760  0026BA                     l11567:
 14761                           
 14762                           ; BSR set to: 0
 14763  0026BA  0100               	movlb	0	; () banked
 14764  0026BC  A1C5               	btfss	___flmul@f1& (0+255),0,b
 14765  0026BE  D011               	goto	l11571
 14766                           
 14767                           ; BSR set to: 0
 14768  0026C0  0100               	movlb	0	; () banked
 14769  0026C2  51C9               	movf	___flmul@f2& (0+255),w,b
 14770  0026C4  0100               	movlb	0	; () banked
 14771  0026C6  27CE               	addwf	___flmul@f3_as_product& (0+255),f,b
 14772  0026C8  0100               	movlb	0	; () banked
 14773  0026CA  51CA               	movf	(___flmul@f2+1)& (0+255),w,b
 14774  0026CC  0100               	movlb	0	; () banked
 14775  0026CE  23CF               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 14776  0026D0  0100               	movlb	0	; () banked
 14777  0026D2  51CB               	movf	(___flmul@f2+2)& (0+255),w,b
 14778  0026D4  0100               	movlb	0	; () banked
 14779  0026D6  23D0               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 14780  0026D8  0100               	movlb	0	; () banked
 14781  0026DA  51CC               	movf	(___flmul@f2+3)& (0+255),w,b
 14782  0026DC  0100               	movlb	0	; () banked
 14783  0026DE  23D1               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 14784  0026E0  D000               	goto	l11571
 14785  0026E2                     l11571:
 14786                           
 14787                           ; BSR set to: 0
 14788  0026E2  0100               	movlb	0	; () banked
 14789  0026E4  90D8               	bcf	status,0,c
 14790  0026E6  33C8               	rrcf	(___flmul@f1+3)& (0+255),f,b
 14791  0026E8  33C7               	rrcf	(___flmul@f1+2)& (0+255),f,b
 14792  0026EA  33C6               	rrcf	(___flmul@f1+1)& (0+255),f,b
 14793  0026EC  33C5               	rrcf	___flmul@f1& (0+255),f,b
 14794                           
 14795                           ; BSR set to: 0
 14796  0026EE  0100               	movlb	0	; () banked
 14797  0026F0  90D8               	bcf	status,0,c
 14798  0026F2  33D1               	rrcf	(___flmul@f3_as_product+3)& (0+255),f,b
 14799  0026F4  33D0               	rrcf	(___flmul@f3_as_product+2)& (0+255),f,b
 14800  0026F6  33CF               	rrcf	(___flmul@f3_as_product+1)& (0+255),f,b
 14801  0026F8  33CE               	rrcf	___flmul@f3_as_product& (0+255),f,b
 14802                           
 14803                           ; BSR set to: 0
 14804  0026FA  0100               	movlb	0	; () banked
 14805  0026FC  2FD2               	decfsz	___flmul@cntr& (0+255),f,b
 14806  0026FE  D7DD               	goto	l11567
 14807  002700  D000               	goto	l11577
 14808  002702                     l11577:
 14809                           
 14810                           ; BSR set to: 0
 14811  002702  C0CE  F0AF         	movff	___flmul@f3_as_product,___flpack@arg
 14812  002706  C0CF  F0B0         	movff	___flmul@f3_as_product+1,___flpack@arg+1
 14813  00270A  C0D0  F0B1         	movff	___flmul@f3_as_product+2,___flpack@arg+2
 14814  00270E  C0D1  F0B2         	movff	___flmul@f3_as_product+3,___flpack@arg+3
 14815  002712  C0CD  F0B3         	movff	___flmul@exp,___flpack@exp
 14816  002716  C0D3  F0B4         	movff	___flmul@sign,___flpack@sign
 14817  00271A  EC69  F011         	call	___flpack	;wreg free
 14818  00271E  C0AF  F0C5         	movff	?___flpack,?___flmul
 14819  002722  C0B0  F0C6         	movff	?___flpack+1,?___flmul+1
 14820  002726  C0B1  F0C7         	movff	?___flpack+2,?___flmul+2
 14821  00272A  C0B2  F0C8         	movff	?___flpack+3,?___flmul+3
 14822  00272E  0012               	return	
 14823  002730  0012               	return		;funcret
 14824  002732                     __end_of___flmul:
 14825                           	opt stack 0
 14826                           tblptru	equ	0xFF8
 14827                           tblptrh	equ	0xFF7
 14828                           tblptrl	equ	0xFF6
 14829                           tablat	equ	0xFF5
 14830                           prodh	equ	0xFF4
 14831                           prodl	equ	0xFF3
 14832                           intcon	equ	0xFF2
 14833                           intcon3	equ	0xFF0
 14834                           postinc0	equ	0xFEE
 14835                           wreg	equ	0xFE8
 14836                           indf1	equ	0xFE7
 14837                           postdec1	equ	0xFE5
 14838                           fsr1h	equ	0xFE2
 14839                           fsr1l	equ	0xFE1
 14840                           indf2	equ	0xFDF
 14841                           fsr2h	equ	0xFDA
 14842                           fsr2l	equ	0xFD9
 14843                           status	equ	0xFD8
 14844                           
 14845 ;; *************** function ___fldiv *****************
 14846 ;; Defined at:
 14847 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldiv.c"
 14848 ;; Parameters:    Size  Location     Type
 14849 ;;  f1              4   37[BANK0 ] unsigned char 
 14850 ;;  f2              4   41[BANK0 ] unsigned char 
 14851 ;; Auto vars:     Size  Location     Type
 14852 ;;  f3              4   45[BANK0 ] unsigned char 
 14853 ;;  sign            1   51[BANK0 ] unsigned char 
 14854 ;;  exp             1   50[BANK0 ] unsigned char 
 14855 ;;  cntr            1   49[BANK0 ] unsigned char 
 14856 ;; Return value:  Size  Location     Type
 14857 ;;                  4   37[BANK0 ] unsigned char 
 14858 ;; Registers used:
 14859 ;;		wreg, status,2, status,0, cstack
 14860 ;; Tracked objects:
 14861 ;;		On entry : 0/0
 14862 ;;		On exit  : 0/0
 14863 ;;		Unchanged: 0/0
 14864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14865 ;;      Params:         0       8       0       0       0       0       0       0       0
 14866 ;;      Locals:         0       7       0       0       0       0       0       0       0
 14867 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14868 ;;      Totals:         0      15       0       0       0       0       0       0       0
 14869 ;;Total ram usage:       15 bytes
 14870 ;; Hardware stack levels used:    1
 14871 ;; Hardware stack levels required when called:   12
 14872 ;; This function calls:
 14873 ;;		___flpack
 14874 ;; This function is called by:
 14875 ;;		_ADC_TempConversion
 14876 ;; This function uses a non-reentrant model
 14877 ;;
 14878                           
 14879                           	psect	text47
 14880  002EC8                     __ptext47:
 14881                           	opt stack 0
 14882  002EC8                     ___fldiv:
 14883                           	opt stack 15
 14884                           
 14885                           ;incstack = 0
 14886  002EC8  0100               	movlb	0	; () banked
 14887  002ECA  35D6               	rlcf	(___fldiv@f1+2)& (0+255),w,b
 14888  002ECC  35D7               	rlcf	(___fldiv@f1+3)& (0+255),w,b
 14889  002ECE  0100               	movlb	0	; () banked
 14890  002ED0  6FE1               	movwf	___fldiv@exp& (0+255),b
 14891  002ED2  0100               	movlb	0	; () banked
 14892  002ED4  51E1               	movf	___fldiv@exp& (0+255),w,b
 14893  002ED6  A4D8               	btfss	status,2,c
 14894  002ED8  D00A               	goto	l11497
 14895                           
 14896                           ; BSR set to: 0
 14897  002EDA  0E00               	movlw	0
 14898  002EDC  0100               	movlb	0	; () banked
 14899  002EDE  6FD4               	movwf	?___fldiv& (0+255),b
 14900  002EE0  0E00               	movlw	0
 14901  002EE2  6FD5               	movwf	(?___fldiv+1)& (0+255),b
 14902  002EE4  0E00               	movlw	0
 14903  002EE6  6FD6               	movwf	(?___fldiv+2)& (0+255),b
 14904  002EE8  0E00               	movlw	0
 14905  002EEA  6FD7               	movwf	(?___fldiv+3)& (0+255),b
 14906                           
 14907                           ; BSR set to: 0
 14908  002EEC  0012               	return	
 14909  002EEE                     l11497:
 14910                           
 14911                           ; BSR set to: 0
 14912  002EEE  0100               	movlb	0	; () banked
 14913  002EF0  35DA               	rlcf	(___fldiv@f2+2)& (0+255),w,b
 14914  002EF2  35DB               	rlcf	(___fldiv@f2+3)& (0+255),w,b
 14915  002EF4  0100               	movlb	0	; () banked
 14916  002EF6  6FE2               	movwf	___fldiv@sign& (0+255),b
 14917  002EF8  0100               	movlb	0	; () banked
 14918  002EFA  51E2               	movf	___fldiv@sign& (0+255),w,b
 14919  002EFC  A4D8               	btfss	status,2,c
 14920  002EFE  D00A               	goto	l11503
 14921                           
 14922                           ; BSR set to: 0
 14923  002F00  0E00               	movlw	0
 14924  002F02  0100               	movlb	0	; () banked
 14925  002F04  6FD4               	movwf	?___fldiv& (0+255),b
 14926  002F06  0E00               	movlw	0
 14927  002F08  6FD5               	movwf	(?___fldiv+1)& (0+255),b
 14928  002F0A  0E00               	movlw	0
 14929  002F0C  6FD6               	movwf	(?___fldiv+2)& (0+255),b
 14930  002F0E  0E00               	movlw	0
 14931  002F10  6FD7               	movwf	(?___fldiv+3)& (0+255),b
 14932                           
 14933                           ; BSR set to: 0
 14934  002F12  0012               	return	
 14935  002F14                     l11503:
 14936                           
 14937                           ; BSR set to: 0
 14938  002F14  0100               	movlb	0	; () banked
 14939  002F16  51E2               	movf	___fldiv@sign& (0+255),w,b
 14940  002F18  0F89               	addlw	137
 14941  002F1A  0100               	movlb	0	; () banked
 14942  002F1C  5FE1               	subwf	___fldiv@exp& (0+255),f,b
 14943                           
 14944                           ; BSR set to: 0
 14945  002F1E  C0D7  F0E2         	movff	___fldiv@f1+3,___fldiv@sign
 14946  002F22  0100               	movlb	0	; () banked
 14947  002F24  51DB               	movf	(___fldiv@f2+3)& (0+255),w,b
 14948  002F26  0100               	movlb	0	; () banked
 14949  002F28  1BE2               	xorwf	___fldiv@sign& (0+255),f,b
 14950  002F2A  0E80               	movlw	128
 14951  002F2C  0100               	movlb	0	; () banked
 14952  002F2E  17E2               	andwf	___fldiv@sign& (0+255),f,b
 14953                           
 14954                           ; BSR set to: 0
 14955  002F30  0100               	movlb	0	; () banked
 14956  002F32  8FD6               	bsf	(___fldiv@f1+2)& (0+255),7,b
 14957                           
 14958                           ; BSR set to: 0
 14959  002F34  0EFF               	movlw	255
 14960  002F36  0100               	movlb	0	; () banked
 14961  002F38  17D4               	andwf	___fldiv@f1& (0+255),f,b
 14962  002F3A  0EFF               	movlw	255
 14963  002F3C  17D5               	andwf	(___fldiv@f1+1)& (0+255),f,b
 14964  002F3E  0EFF               	movlw	255
 14965  002F40  17D6               	andwf	(___fldiv@f1+2)& (0+255),f,b
 14966  002F42  0E00               	movlw	0
 14967  002F44  17D7               	andwf	(___fldiv@f1+3)& (0+255),f,b
 14968  002F46  0100               	movlb	0	; () banked
 14969  002F48  8FDA               	bsf	(___fldiv@f2+2)& (0+255),7,b
 14970                           
 14971                           ; BSR set to: 0
 14972  002F4A  0EFF               	movlw	255
 14973  002F4C  0100               	movlb	0	; () banked
 14974  002F4E  17D8               	andwf	___fldiv@f2& (0+255),f,b
 14975  002F50  0EFF               	movlw	255
 14976  002F52  17D9               	andwf	(___fldiv@f2+1)& (0+255),f,b
 14977  002F54  0EFF               	movlw	255
 14978  002F56  17DA               	andwf	(___fldiv@f2+2)& (0+255),f,b
 14979  002F58  0E00               	movlw	0
 14980  002F5A  17DB               	andwf	(___fldiv@f2+3)& (0+255),f,b
 14981                           
 14982                           ; BSR set to: 0
 14983  002F5C  0E20               	movlw	32
 14984  002F5E  0100               	movlb	0	; () banked
 14985  002F60  6FE0               	movwf	___fldiv@cntr& (0+255),b
 14986  002F62  D000               	goto	l11515
 14987  002F64                     l11515:
 14988                           
 14989                           ; BSR set to: 0
 14990  002F64  0100               	movlb	0	; () banked
 14991  002F66  90D8               	bcf	status,0,c
 14992  002F68  37DC               	rlcf	___fldiv@f3& (0+255),f,b
 14993  002F6A  37DD               	rlcf	(___fldiv@f3+1)& (0+255),f,b
 14994  002F6C  37DE               	rlcf	(___fldiv@f3+2)& (0+255),f,b
 14995  002F6E  37DF               	rlcf	(___fldiv@f3+3)& (0+255),f,b
 14996                           
 14997                           ; BSR set to: 0
 14998  002F70  0100               	movlb	0	; () banked
 14999  002F72  51D8               	movf	___fldiv@f2& (0+255),w,b
 15000  002F74  0100               	movlb	0	; () banked
 15001  002F76  5DD4               	subwf	___fldiv@f1& (0+255),w,b
 15002  002F78  0100               	movlb	0	; () banked
 15003  002F7A  51D9               	movf	(___fldiv@f2+1)& (0+255),w,b
 15004  002F7C  0100               	movlb	0	; () banked
 15005  002F7E  59D5               	subwfb	(___fldiv@f1+1)& (0+255),w,b
 15006  002F80  0100               	movlb	0	; () banked
 15007  002F82  51DA               	movf	(___fldiv@f2+2)& (0+255),w,b
 15008  002F84  0100               	movlb	0	; () banked
 15009  002F86  59D6               	subwfb	(___fldiv@f1+2)& (0+255),w,b
 15010  002F88  0100               	movlb	0	; () banked
 15011  002F8A  51DB               	movf	(___fldiv@f2+3)& (0+255),w,b
 15012  002F8C  0100               	movlb	0	; () banked
 15013  002F8E  59D7               	subwfb	(___fldiv@f1+3)& (0+255),w,b
 15014  002F90  A0D8               	btfss	status,0,c
 15015  002F92  D013               	goto	l11523
 15016                           
 15017                           ; BSR set to: 0
 15018  002F94  0100               	movlb	0	; () banked
 15019  002F96  51D8               	movf	___fldiv@f2& (0+255),w,b
 15020  002F98  0100               	movlb	0	; () banked
 15021  002F9A  5FD4               	subwf	___fldiv@f1& (0+255),f,b
 15022  002F9C  0100               	movlb	0	; () banked
 15023  002F9E  51D9               	movf	(___fldiv@f2+1)& (0+255),w,b
 15024  002FA0  0100               	movlb	0	; () banked
 15025  002FA2  5BD5               	subwfb	(___fldiv@f1+1)& (0+255),f,b
 15026  002FA4  0100               	movlb	0	; () banked
 15027  002FA6  51DA               	movf	(___fldiv@f2+2)& (0+255),w,b
 15028  002FA8  0100               	movlb	0	; () banked
 15029  002FAA  5BD6               	subwfb	(___fldiv@f1+2)& (0+255),f,b
 15030  002FAC  0100               	movlb	0	; () banked
 15031  002FAE  51DB               	movf	(___fldiv@f2+3)& (0+255),w,b
 15032  002FB0  0100               	movlb	0	; () banked
 15033  002FB2  5BD7               	subwfb	(___fldiv@f1+3)& (0+255),f,b
 15034                           
 15035                           ; BSR set to: 0
 15036  002FB4  0100               	movlb	0	; () banked
 15037  002FB6  81DC               	bsf	___fldiv@f3& (0+255),0,b
 15038  002FB8  D000               	goto	l11523
 15039  002FBA                     l11523:
 15040                           
 15041                           ; BSR set to: 0
 15042  002FBA  0100               	movlb	0	; () banked
 15043  002FBC  90D8               	bcf	status,0,c
 15044  002FBE  37D4               	rlcf	___fldiv@f1& (0+255),f,b
 15045  002FC0  37D5               	rlcf	(___fldiv@f1+1)& (0+255),f,b
 15046  002FC2  37D6               	rlcf	(___fldiv@f1+2)& (0+255),f,b
 15047  002FC4  37D7               	rlcf	(___fldiv@f1+3)& (0+255),f,b
 15048                           
 15049                           ; BSR set to: 0
 15050  002FC6  0100               	movlb	0	; () banked
 15051  002FC8  2FE0               	decfsz	___fldiv@cntr& (0+255),f,b
 15052  002FCA  D7CC               	goto	l11515
 15053  002FCC  D000               	goto	l11527
 15054  002FCE                     l11527:
 15055                           
 15056                           ; BSR set to: 0
 15057  002FCE  C0DC  F0AF         	movff	___fldiv@f3,___flpack@arg
 15058  002FD2  C0DD  F0B0         	movff	___fldiv@f3+1,___flpack@arg+1
 15059  002FD6  C0DE  F0B1         	movff	___fldiv@f3+2,___flpack@arg+2
 15060  002FDA  C0DF  F0B2         	movff	___fldiv@f3+3,___flpack@arg+3
 15061  002FDE  C0E1  F0B3         	movff	___fldiv@exp,___flpack@exp
 15062  002FE2  C0E2  F0B4         	movff	___fldiv@sign,___flpack@sign
 15063  002FE6  EC69  F011         	call	___flpack	;wreg free
 15064  002FEA  C0AF  F0D4         	movff	?___flpack,?___fldiv
 15065  002FEE  C0B0  F0D5         	movff	?___flpack+1,?___fldiv+1
 15066  002FF2  C0B1  F0D6         	movff	?___flpack+2,?___fldiv+2
 15067  002FF6  C0B2  F0D7         	movff	?___flpack+3,?___fldiv+3
 15068  002FFA  0012               	return	
 15069  002FFC  0012               	return		;funcret
 15070  002FFE                     __end_of___fldiv:
 15071                           	opt stack 0
 15072                           tblptru	equ	0xFF8
 15073                           tblptrh	equ	0xFF7
 15074                           tblptrl	equ	0xFF6
 15075                           tablat	equ	0xFF5
 15076                           prodh	equ	0xFF4
 15077                           prodl	equ	0xFF3
 15078                           intcon	equ	0xFF2
 15079                           intcon3	equ	0xFF0
 15080                           postinc0	equ	0xFEE
 15081                           wreg	equ	0xFE8
 15082                           indf1	equ	0xFE7
 15083                           postdec1	equ	0xFE5
 15084                           fsr1h	equ	0xFE2
 15085                           fsr1l	equ	0xFE1
 15086                           indf2	equ	0xFDF
 15087                           fsr2h	equ	0xFDA
 15088                           fsr2l	equ	0xFD9
 15089                           status	equ	0xFD8
 15090                           
 15091 ;; *************** function ___fladd *****************
 15092 ;; Defined at:
 15093 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fladd.c"
 15094 ;; Parameters:    Size  Location     Type
 15095 ;;  f1              4   10[BANK0 ] unsigned char 
 15096 ;;  f2              4   14[BANK0 ] unsigned char 
 15097 ;; Auto vars:     Size  Location     Type
 15098 ;;  exp1            1   21[BANK0 ] unsigned char 
 15099 ;;  exp2            1   20[BANK0 ] unsigned char 
 15100 ;;  sign            1   19[BANK0 ] unsigned char 
 15101 ;; Return value:  Size  Location     Type
 15102 ;;                  4   10[BANK0 ] unsigned char 
 15103 ;; Registers used:
 15104 ;;		wreg, status,2, status,0, cstack
 15105 ;; Tracked objects:
 15106 ;;		On entry : 0/0
 15107 ;;		On exit  : 0/0
 15108 ;;		Unchanged: 0/0
 15109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15110 ;;      Params:         0       8       0       0       0       0       0       0       0
 15111 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15112 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15113 ;;      Totals:         0      12       0       0       0       0       0       0       0
 15114 ;;Total ram usage:       12 bytes
 15115 ;; Hardware stack levels used:    1
 15116 ;; Hardware stack levels required when called:   12
 15117 ;; This function calls:
 15118 ;;		___flpack
 15119 ;; This function is called by:
 15120 ;;		_ADC_TempConversion
 15121 ;; This function uses a non-reentrant model
 15122 ;;
 15123                           
 15124                           	psect	text48
 15125  001ED6                     __ptext48:
 15126                           	opt stack 0
 15127  001ED6                     ___fladd:
 15128                           	opt stack 15
 15129                           
 15130                           ;incstack = 0
 15131  001ED6  0100               	movlb	0	; () banked
 15132  001ED8  35BB               	rlcf	(___fladd@f1+2)& (0+255),w,b
 15133  001EDA  35BC               	rlcf	(___fladd@f1+3)& (0+255),w,b
 15134  001EDC  0100               	movlb	0	; () banked
 15135  001EDE  6FC4               	movwf	___fladd@exp1& (0+255),b
 15136  001EE0  0100               	movlb	0	; () banked
 15137  001EE2  35BF               	rlcf	(___fladd@f2+2)& (0+255),w,b
 15138  001EE4  35C0               	rlcf	(___fladd@f2+3)& (0+255),w,b
 15139  001EE6  0100               	movlb	0	; () banked
 15140  001EE8  6FC3               	movwf	___fladd@exp2& (0+255),b
 15141  001EEA  0100               	movlb	0	; () banked
 15142  001EEC  51C4               	movf	___fladd@exp1& (0+255),w,b
 15143  001EEE  0100               	movlb	0	; () banked
 15144  001EF0  B4D8               	btfsc	status,2,c
 15145  001EF2  D011               	goto	l2353
 15146                           
 15147                           ; BSR set to: 0
 15148  001EF4  0100               	movlb	0	; () banked
 15149  001EF6  51C3               	movf	___fladd@exp2& (0+255),w,b
 15150  001EF8  0100               	movlb	0	; () banked
 15151  001EFA  5DC4               	subwf	___fladd@exp1& (0+255),w,b
 15152  001EFC  B0D8               	btfsc	status,0,c
 15153  001EFE  D014               	goto	l11429
 15154                           
 15155                           ; BSR set to: 0
 15156  001F00  0100               	movlb	0	; () banked
 15157  001F02  51C4               	movf	___fladd@exp1& (0+255),w,b
 15158  001F04  0800               	sublw	0
 15159  001F06  0100               	movlb	0	; () banked
 15160  001F08  25C3               	addwf	___fladd@exp2& (0+255),w,b
 15161  001F0A  0100               	movlb	0	; () banked
 15162  001F0C  6FC1               	movwf	??___fladd& (0+255),b
 15163  001F0E  0E20               	movlw	32
 15164  001F10  0100               	movlb	0	; () banked
 15165  001F12  65C1               	cpfsgt	??___fladd& (0+255),b
 15166  001F14  D009               	goto	l11429
 15167  001F16                     l2353:
 15168                           
 15169                           ; BSR set to: 0
 15170  001F16  C0BD  F0B9         	movff	___fladd@f2,?___fladd
 15171  001F1A  C0BE  F0BA         	movff	___fladd@f2+1,?___fladd+1
 15172  001F1E  C0BF  F0BB         	movff	___fladd@f2+2,?___fladd+2
 15173  001F22  C0C0  F0BC         	movff	___fladd@f2+3,?___fladd+3
 15174  001F26  0012               	return	
 15175  001F28                     l11429:
 15176                           
 15177                           ; BSR set to: 0
 15178  001F28  0100               	movlb	0	; () banked
 15179  001F2A  51C3               	movf	___fladd@exp2& (0+255),w,b
 15180  001F2C  0100               	movlb	0	; () banked
 15181  001F2E  B4D8               	btfsc	status,2,c
 15182  001F30  D011               	goto	l2357
 15183                           
 15184                           ; BSR set to: 0
 15185  001F32  0100               	movlb	0	; () banked
 15186  001F34  51C4               	movf	___fladd@exp1& (0+255),w,b
 15187  001F36  0100               	movlb	0	; () banked
 15188  001F38  5DC3               	subwf	___fladd@exp2& (0+255),w,b
 15189  001F3A  B0D8               	btfsc	status,0,c
 15190  001F3C  D014               	goto	l11435
 15191                           
 15192                           ; BSR set to: 0
 15193  001F3E  0100               	movlb	0	; () banked
 15194  001F40  51C3               	movf	___fladd@exp2& (0+255),w,b
 15195  001F42  0800               	sublw	0
 15196  001F44  0100               	movlb	0	; () banked
 15197  001F46  25C4               	addwf	___fladd@exp1& (0+255),w,b
 15198  001F48  0100               	movlb	0	; () banked
 15199  001F4A  6FC1               	movwf	??___fladd& (0+255),b
 15200  001F4C  0E20               	movlw	32
 15201  001F4E  0100               	movlb	0	; () banked
 15202  001F50  65C1               	cpfsgt	??___fladd& (0+255),b
 15203  001F52  D009               	goto	l11435
 15204  001F54                     l2357:
 15205                           
 15206                           ; BSR set to: 0
 15207  001F54  C0B9  F0B9         	movff	___fladd@f1,?___fladd
 15208  001F58  C0BA  F0BA         	movff	___fladd@f1+1,?___fladd+1
 15209  001F5C  C0BB  F0BB         	movff	___fladd@f1+2,?___fladd+2
 15210  001F60  C0BC  F0BC         	movff	___fladd@f1+3,?___fladd+3
 15211  001F64  0012               	return	
 15212  001F66                     l11435:
 15213                           
 15214                           ; BSR set to: 0
 15215  001F66  0E06               	movlw	6
 15216  001F68  0100               	movlb	0	; () banked
 15217  001F6A  6FC2               	movwf	___fladd@sign& (0+255),b
 15218                           
 15219                           ; BSR set to: 0
 15220  001F6C  0100               	movlb	0	; () banked
 15221  001F6E  AFBC               	btfss	(___fladd@f1+3)& (0+255),7,b
 15222  001F70  D003               	goto	l11441
 15223                           
 15224                           ; BSR set to: 0
 15225  001F72  0100               	movlb	0	; () banked
 15226  001F74  8FC2               	bsf	___fladd@sign& (0+255),7,b
 15227  001F76  D000               	goto	l11441
 15228  001F78                     l11441:
 15229                           
 15230                           ; BSR set to: 0
 15231  001F78  0100               	movlb	0	; () banked
 15232  001F7A  AFC0               	btfss	(___fladd@f2+3)& (0+255),7,b
 15233  001F7C  D002               	goto	l2359
 15234                           
 15235                           ; BSR set to: 0
 15236  001F7E  0100               	movlb	0	; () banked
 15237  001F80  8DC2               	bsf	___fladd@sign& (0+255),6,b
 15238  001F82                     l2359:
 15239                           
 15240                           ; BSR set to: 0
 15241  001F82  0100               	movlb	0	; () banked
 15242  001F84  8FBB               	bsf	(___fladd@f1+2)& (0+255),7,b
 15243                           
 15244                           ; BSR set to: 0
 15245  001F86  0EFF               	movlw	255
 15246  001F88  0100               	movlb	0	; () banked
 15247  001F8A  17B9               	andwf	___fladd@f1& (0+255),f,b
 15248  001F8C  0EFF               	movlw	255
 15249  001F8E  17BA               	andwf	(___fladd@f1+1)& (0+255),f,b
 15250  001F90  0EFF               	movlw	255
 15251  001F92  17BB               	andwf	(___fladd@f1+2)& (0+255),f,b
 15252  001F94  0E00               	movlw	0
 15253  001F96  17BC               	andwf	(___fladd@f1+3)& (0+255),f,b
 15254                           
 15255                           ; BSR set to: 0
 15256  001F98  0100               	movlb	0	; () banked
 15257  001F9A  8FBF               	bsf	(___fladd@f2+2)& (0+255),7,b
 15258  001F9C  0EFF               	movlw	255
 15259  001F9E  0100               	movlb	0	; () banked
 15260  001FA0  17BD               	andwf	___fladd@f2& (0+255),f,b
 15261  001FA2  0EFF               	movlw	255
 15262  001FA4  17BE               	andwf	(___fladd@f2+1)& (0+255),f,b
 15263  001FA6  0EFF               	movlw	255
 15264  001FA8  17BF               	andwf	(___fladd@f2+2)& (0+255),f,b
 15265  001FAA  0E00               	movlw	0
 15266  001FAC  17C0               	andwf	(___fladd@f2+3)& (0+255),f,b
 15267  001FAE  0100               	movlb	0	; () banked
 15268  001FB0  51C3               	movf	___fladd@exp2& (0+255),w,b
 15269  001FB2  0100               	movlb	0	; () banked
 15270  001FB4  5DC4               	subwf	___fladd@exp1& (0+255),w,b
 15271  001FB6  B0D8               	btfsc	status,0,c
 15272  001FB8  D02A               	goto	l11459
 15273  001FBA                     l11449:
 15274                           
 15275                           ; BSR set to: 0
 15276  001FBA  0100               	movlb	0	; () banked
 15277  001FBC  90D8               	bcf	status,0,c
 15278  001FBE  37BD               	rlcf	___fladd@f2& (0+255),f,b
 15279  001FC0  37BE               	rlcf	(___fladd@f2+1)& (0+255),f,b
 15280  001FC2  37BF               	rlcf	(___fladd@f2+2)& (0+255),f,b
 15281  001FC4  37C0               	rlcf	(___fladd@f2+3)& (0+255),f,b
 15282  001FC6  0100               	movlb	0	; () banked
 15283  001FC8  07C3               	decf	___fladd@exp2& (0+255),f,b
 15284                           
 15285                           ; BSR set to: 0
 15286  001FCA  0100               	movlb	0	; () banked
 15287  001FCC  51C4               	movf	___fladd@exp1& (0+255),w,b
 15288  001FCE  0100               	movlb	0	; () banked
 15289  001FD0  19C3               	xorwf	___fladd@exp2& (0+255),w,b
 15290  001FD2  B4D8               	btfsc	status,2,c
 15291  001FD4  D014               	goto	l11457
 15292                           
 15293                           ; BSR set to: 0
 15294  001FD6  0100               	movlb	0	; () banked
 15295  001FD8  07C2               	decf	___fladd@sign& (0+255),f,b
 15296  001FDA  C0C2  F0C1         	movff	___fladd@sign,??___fladd
 15297  001FDE  0E07               	movlw	7
 15298  001FE0  0100               	movlb	0	; () banked
 15299  001FE2  17C1               	andwf	??___fladd& (0+255),f,b
 15300  001FE4  B4D8               	btfsc	status,2,c
 15301  001FE6  D00B               	goto	l11457
 15302  001FE8  D7E8               	goto	l11449
 15303                           
 15304                           ; BSR set to: 0
 15305                           
 15306                           ; BSR set to: 0
 15307  001FEA  D009               	goto	l11457
 15308  001FEC                     l11455:
 15309                           
 15310                           ; BSR set to: 0
 15311  001FEC  0100               	movlb	0	; () banked
 15312  001FEE  90D8               	bcf	status,0,c
 15313  001FF0  33BC               	rrcf	(___fladd@f1+3)& (0+255),f,b
 15314  001FF2  33BB               	rrcf	(___fladd@f1+2)& (0+255),f,b
 15315  001FF4  33BA               	rrcf	(___fladd@f1+1)& (0+255),f,b
 15316  001FF6  33B9               	rrcf	___fladd@f1& (0+255),f,b
 15317  001FF8  0100               	movlb	0	; () banked
 15318  001FFA  2BC4               	incf	___fladd@exp1& (0+255),f,b
 15319  001FFC  D000               	goto	l11457
 15320  001FFE                     l11457:
 15321                           
 15322                           ; BSR set to: 0
 15323  001FFE  0100               	movlb	0	; () banked
 15324  002000  51C3               	movf	___fladd@exp2& (0+255),w,b
 15325  002002  0100               	movlb	0	; () banked
 15326  002004  19C4               	xorwf	___fladd@exp1& (0+255),w,b
 15327  002006  B4D8               	btfsc	status,2,c
 15328  002008  D032               	goto	l2368
 15329  00200A  D7F0               	goto	l11455
 15330                           
 15331                           ; BSR set to: 0
 15332  00200C  D030               	goto	l2368
 15333  00200E                     l11459:
 15334                           
 15335                           ; BSR set to: 0
 15336  00200E  0100               	movlb	0	; () banked
 15337  002010  51C4               	movf	___fladd@exp1& (0+255),w,b
 15338  002012  0100               	movlb	0	; () banked
 15339  002014  5DC3               	subwf	___fladd@exp2& (0+255),w,b
 15340  002016  B0D8               	btfsc	status,0,c
 15341  002018  D02A               	goto	l2368
 15342  00201A                     l11461:
 15343                           
 15344                           ; BSR set to: 0
 15345  00201A  0100               	movlb	0	; () banked
 15346  00201C  90D8               	bcf	status,0,c
 15347  00201E  37B9               	rlcf	___fladd@f1& (0+255),f,b
 15348  002020  37BA               	rlcf	(___fladd@f1+1)& (0+255),f,b
 15349  002022  37BB               	rlcf	(___fladd@f1+2)& (0+255),f,b
 15350  002024  37BC               	rlcf	(___fladd@f1+3)& (0+255),f,b
 15351  002026  0100               	movlb	0	; () banked
 15352  002028  07C4               	decf	___fladd@exp1& (0+255),f,b
 15353                           
 15354                           ; BSR set to: 0
 15355  00202A  0100               	movlb	0	; () banked
 15356  00202C  51C4               	movf	___fladd@exp1& (0+255),w,b
 15357  00202E  0100               	movlb	0	; () banked
 15358  002030  19C3               	xorwf	___fladd@exp2& (0+255),w,b
 15359  002032  B4D8               	btfsc	status,2,c
 15360  002034  D014               	goto	l11469
 15361                           
 15362                           ; BSR set to: 0
 15363  002036  0100               	movlb	0	; () banked
 15364  002038  07C2               	decf	___fladd@sign& (0+255),f,b
 15365  00203A  C0C2  F0C1         	movff	___fladd@sign,??___fladd
 15366  00203E  0E07               	movlw	7
 15367  002040  0100               	movlb	0	; () banked
 15368  002042  17C1               	andwf	??___fladd& (0+255),f,b
 15369  002044  B4D8               	btfsc	status,2,c
 15370  002046  D00B               	goto	l11469
 15371  002048  D7E8               	goto	l11461
 15372                           
 15373                           ; BSR set to: 0
 15374                           
 15375                           ; BSR set to: 0
 15376  00204A  D009               	goto	l11469
 15377  00204C                     l11467:
 15378                           
 15379                           ; BSR set to: 0
 15380  00204C  0100               	movlb	0	; () banked
 15381  00204E  90D8               	bcf	status,0,c
 15382  002050  33C0               	rrcf	(___fladd@f2+3)& (0+255),f,b
 15383  002052  33BF               	rrcf	(___fladd@f2+2)& (0+255),f,b
 15384  002054  33BE               	rrcf	(___fladd@f2+1)& (0+255),f,b
 15385  002056  33BD               	rrcf	___fladd@f2& (0+255),f,b
 15386  002058  0100               	movlb	0	; () banked
 15387  00205A  2BC3               	incf	___fladd@exp2& (0+255),f,b
 15388  00205C  D000               	goto	l11469
 15389  00205E                     l11469:
 15390                           
 15391                           ; BSR set to: 0
 15392  00205E  0100               	movlb	0	; () banked
 15393  002060  51C3               	movf	___fladd@exp2& (0+255),w,b
 15394  002062  0100               	movlb	0	; () banked
 15395  002064  19C4               	xorwf	___fladd@exp1& (0+255),w,b
 15396  002066  B4D8               	btfsc	status,2,c
 15397  002068  D002               	goto	l2368
 15398  00206A  D7F0               	goto	l11467
 15399                           
 15400                           ; BSR set to: 0
 15401  00206C  D000               	goto	l2368
 15402  00206E                     l2368:
 15403                           
 15404                           ; BSR set to: 0
 15405  00206E  0100               	movlb	0	; () banked
 15406  002070  AFC2               	btfss	___fladd@sign& (0+255),7,b
 15407  002072  D011               	goto	l11473
 15408                           
 15409                           ; BSR set to: 0
 15410  002074  0EFF               	movlw	255
 15411  002076  0100               	movlb	0	; () banked
 15412  002078  1BB9               	xorwf	___fladd@f1& (0+255),f,b
 15413  00207A  0EFF               	movlw	255
 15414  00207C  1BBA               	xorwf	(___fladd@f1+1)& (0+255),f,b
 15415  00207E  0EFF               	movlw	255
 15416  002080  1BBB               	xorwf	(___fladd@f1+2)& (0+255),f,b
 15417  002082  0EFF               	movlw	255
 15418  002084  1BBC               	xorwf	(___fladd@f1+3)& (0+255),f,b
 15419  002086  0E01               	movlw	1
 15420  002088  0100               	movlb	0	; () banked
 15421  00208A  27B9               	addwf	___fladd@f1& (0+255),f,b
 15422  00208C  0E00               	movlw	0
 15423  00208E  23BA               	addwfc	(___fladd@f1+1)& (0+255),f,b
 15424  002090  23BB               	addwfc	(___fladd@f1+2)& (0+255),f,b
 15425  002092  23BC               	addwfc	(___fladd@f1+3)& (0+255),f,b
 15426  002094  D000               	goto	l11473
 15427  002096                     l11473:
 15428                           
 15429                           ; BSR set to: 0
 15430  002096  0100               	movlb	0	; () banked
 15431  002098  ADC2               	btfss	___fladd@sign& (0+255),6,b
 15432  00209A  D011               	goto	l11477
 15433                           
 15434                           ; BSR set to: 0
 15435  00209C  0EFF               	movlw	255
 15436  00209E  0100               	movlb	0	; () banked
 15437  0020A0  1BBD               	xorwf	___fladd@f2& (0+255),f,b
 15438  0020A2  0EFF               	movlw	255
 15439  0020A4  1BBE               	xorwf	(___fladd@f2+1)& (0+255),f,b
 15440  0020A6  0EFF               	movlw	255
 15441  0020A8  1BBF               	xorwf	(___fladd@f2+2)& (0+255),f,b
 15442  0020AA  0EFF               	movlw	255
 15443  0020AC  1BC0               	xorwf	(___fladd@f2+3)& (0+255),f,b
 15444  0020AE  0E01               	movlw	1
 15445  0020B0  0100               	movlb	0	; () banked
 15446  0020B2  27BD               	addwf	___fladd@f2& (0+255),f,b
 15447  0020B4  0E00               	movlw	0
 15448  0020B6  23BE               	addwfc	(___fladd@f2+1)& (0+255),f,b
 15449  0020B8  23BF               	addwfc	(___fladd@f2+2)& (0+255),f,b
 15450  0020BA  23C0               	addwfc	(___fladd@f2+3)& (0+255),f,b
 15451  0020BC  D000               	goto	l11477
 15452  0020BE                     l11477:
 15453                           
 15454                           ; BSR set to: 0
 15455  0020BE  0E00               	movlw	0
 15456  0020C0  0100               	movlb	0	; () banked
 15457  0020C2  6FC2               	movwf	___fladd@sign& (0+255),b
 15458                           
 15459                           ; BSR set to: 0
 15460  0020C4  0100               	movlb	0	; () banked
 15461  0020C6  51B9               	movf	___fladd@f1& (0+255),w,b
 15462  0020C8  0100               	movlb	0	; () banked
 15463  0020CA  27BD               	addwf	___fladd@f2& (0+255),f,b
 15464  0020CC  0100               	movlb	0	; () banked
 15465  0020CE  51BA               	movf	(___fladd@f1+1)& (0+255),w,b
 15466  0020D0  0100               	movlb	0	; () banked
 15467  0020D2  23BE               	addwfc	(___fladd@f2+1)& (0+255),f,b
 15468  0020D4  0100               	movlb	0	; () banked
 15469  0020D6  51BB               	movf	(___fladd@f1+2)& (0+255),w,b
 15470  0020D8  0100               	movlb	0	; () banked
 15471  0020DA  23BF               	addwfc	(___fladd@f2+2)& (0+255),f,b
 15472  0020DC  0100               	movlb	0	; () banked
 15473  0020DE  51BC               	movf	(___fladd@f1+3)& (0+255),w,b
 15474  0020E0  0100               	movlb	0	; () banked
 15475  0020E2  23C0               	addwfc	(___fladd@f2+3)& (0+255),f,b
 15476                           
 15477                           ; BSR set to: 0
 15478  0020E4  0100               	movlb	0	; () banked
 15479  0020E6  AFC0               	btfss	(___fladd@f2+3)& (0+255),7,b
 15480  0020E8  D014               	goto	l11487
 15481                           
 15482                           ; BSR set to: 0
 15483  0020EA  0EFF               	movlw	255
 15484  0020EC  0100               	movlb	0	; () banked
 15485  0020EE  1BBD               	xorwf	___fladd@f2& (0+255),f,b
 15486  0020F0  0EFF               	movlw	255
 15487  0020F2  1BBE               	xorwf	(___fladd@f2+1)& (0+255),f,b
 15488  0020F4  0EFF               	movlw	255
 15489  0020F6  1BBF               	xorwf	(___fladd@f2+2)& (0+255),f,b
 15490  0020F8  0EFF               	movlw	255
 15491  0020FA  1BC0               	xorwf	(___fladd@f2+3)& (0+255),f,b
 15492  0020FC  0E01               	movlw	1
 15493  0020FE  0100               	movlb	0	; () banked
 15494  002100  27BD               	addwf	___fladd@f2& (0+255),f,b
 15495  002102  0E00               	movlw	0
 15496  002104  23BE               	addwfc	(___fladd@f2+1)& (0+255),f,b
 15497  002106  23BF               	addwfc	(___fladd@f2+2)& (0+255),f,b
 15498  002108  23C0               	addwfc	(___fladd@f2+3)& (0+255),f,b
 15499                           
 15500                           ; BSR set to: 0
 15501  00210A  0E01               	movlw	1
 15502  00210C  0100               	movlb	0	; () banked
 15503  00210E  6FC2               	movwf	___fladd@sign& (0+255),b
 15504  002110  D000               	goto	l11487
 15505  002112                     l11487:
 15506                           
 15507                           ; BSR set to: 0
 15508  002112  C0BD  F0AF         	movff	___fladd@f2,___flpack@arg
 15509  002116  C0BE  F0B0         	movff	___fladd@f2+1,___flpack@arg+1
 15510  00211A  C0BF  F0B1         	movff	___fladd@f2+2,___flpack@arg+2
 15511  00211E  C0C0  F0B2         	movff	___fladd@f2+3,___flpack@arg+3
 15512  002122  C0C4  F0B3         	movff	___fladd@exp1,___flpack@exp
 15513  002126  C0C2  F0B4         	movff	___fladd@sign,___flpack@sign
 15514  00212A  EC69  F011         	call	___flpack	;wreg free
 15515  00212E  C0AF  F0B9         	movff	?___flpack,?___fladd
 15516  002132  C0B0  F0BA         	movff	?___flpack+1,?___fladd+1
 15517  002136  C0B1  F0BB         	movff	?___flpack+2,?___fladd+2
 15518  00213A  C0B2  F0BC         	movff	?___flpack+3,?___fladd+3
 15519  00213E  0012               	return	
 15520  002140  0012               	return		;funcret
 15521  002142                     __end_of___fladd:
 15522                           	opt stack 0
 15523                           tblptru	equ	0xFF8
 15524                           tblptrh	equ	0xFF7
 15525                           tblptrl	equ	0xFF6
 15526                           tablat	equ	0xFF5
 15527                           prodh	equ	0xFF4
 15528                           prodl	equ	0xFF3
 15529                           intcon	equ	0xFF2
 15530                           intcon3	equ	0xFF0
 15531                           postinc0	equ	0xFEE
 15532                           wreg	equ	0xFE8
 15533                           indf1	equ	0xFE7
 15534                           postdec1	equ	0xFE5
 15535                           fsr1h	equ	0xFE2
 15536                           fsr1l	equ	0xFE1
 15537                           indf2	equ	0xFDF
 15538                           fsr2h	equ	0xFDA
 15539                           fsr2l	equ	0xFD9
 15540                           status	equ	0xFD8
 15541                           
 15542 ;; *************** function ___flpack *****************
 15543 ;; Defined at:
 15544 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\double.c"
 15545 ;; Parameters:    Size  Location     Type
 15546 ;;  arg             4    0[BANK0 ] unsigned long 
 15547 ;;  exp             1    4[BANK0 ] unsigned char 
 15548 ;;  sign            1    5[BANK0 ] unsigned char 
 15549 ;; Auto vars:     Size  Location     Type
 15550 ;;		None
 15551 ;; Return value:  Size  Location     Type
 15552 ;;                  4    0[BANK0 ] unsigned char 
 15553 ;; Registers used:
 15554 ;;		wreg, status,2, status,0
 15555 ;; Tracked objects:
 15556 ;;		On entry : 0/0
 15557 ;;		On exit  : 0/0
 15558 ;;		Unchanged: 0/0
 15559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15560 ;;      Params:         0       6       0       0       0       0       0       0       0
 15561 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15562 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15563 ;;      Totals:         0      10       0       0       0       0       0       0       0
 15564 ;;Total ram usage:       10 bytes
 15565 ;; Hardware stack levels used:    1
 15566 ;; Hardware stack levels required when called:   11
 15567 ;; This function calls:
 15568 ;;		Nothing
 15569 ;; This function is called by:
 15570 ;;		___fladd
 15571 ;;		___fldiv
 15572 ;;		___flmul
 15573 ;;		___lbtofl
 15574 ;; This function uses a non-reentrant model
 15575 ;;
 15576                           
 15577                           	psect	text49
 15578  0022D2                     __ptext49:
 15579                           	opt stack 0
 15580  0022D2                     ___flpack:
 15581                           	opt stack 15
 15582                           
 15583                           ;incstack = 0
 15584  0022D2  0100               	movlb	0	; () banked
 15585  0022D4  51B3               	movf	___flpack@exp& (0+255),w,b
 15586  0022D6  0100               	movlb	0	; () banked
 15587  0022D8  B4D8               	btfsc	status,2,c
 15588  0022DA  D00A               	goto	l11237
 15589                           
 15590                           ; BSR set to: 0
 15591  0022DC  0100               	movlb	0	; () banked
 15592  0022DE  51AF               	movf	___flpack@arg& (0+255),w,b
 15593  0022E0  0100               	movlb	0	; () banked
 15594  0022E2  11B0               	iorwf	(___flpack@arg+1)& (0+255),w,b
 15595  0022E4  0100               	movlb	0	; () banked
 15596  0022E6  11B1               	iorwf	(___flpack@arg+2)& (0+255),w,b
 15597  0022E8  0100               	movlb	0	; () banked
 15598  0022EA  11B2               	iorwf	(___flpack@arg+3)& (0+255),w,b
 15599  0022EC  A4D8               	btfss	status,2,c
 15600  0022EE  D014               	goto	l11243
 15601  0022F0                     l11237:
 15602                           
 15603                           ; BSR set to: 0
 15604  0022F0  0E00               	movlw	0
 15605  0022F2  0100               	movlb	0	; () banked
 15606  0022F4  6FAF               	movwf	?___flpack& (0+255),b
 15607  0022F6  0E00               	movlw	0
 15608  0022F8  6FB0               	movwf	(?___flpack+1)& (0+255),b
 15609  0022FA  0E00               	movlw	0
 15610  0022FC  6FB1               	movwf	(?___flpack+2)& (0+255),b
 15611  0022FE  0E00               	movlw	0
 15612  002300  6FB2               	movwf	(?___flpack+3)& (0+255),b
 15613                           
 15614                           ; BSR set to: 0
 15615  002302  0012               	return	
 15616                           
 15617                           ; BSR set to: 0
 15618  002304  D009               	goto	l11243
 15619  002306                     l11241:
 15620                           
 15621                           ; BSR set to: 0
 15622  002306  0100               	movlb	0	; () banked
 15623  002308  2BB3               	incf	___flpack@exp& (0+255),f,b
 15624  00230A  0100               	movlb	0	; () banked
 15625  00230C  90D8               	bcf	status,0,c
 15626  00230E  33B2               	rrcf	(___flpack@arg+3)& (0+255),f,b
 15627  002310  33B1               	rrcf	(___flpack@arg+2)& (0+255),f,b
 15628  002312  33B0               	rrcf	(___flpack@arg+1)& (0+255),f,b
 15629  002314  33AF               	rrcf	___flpack@arg& (0+255),f,b
 15630  002316  D000               	goto	l11243
 15631  002318                     l11243:
 15632                           
 15633                           ; BSR set to: 0
 15634  002318  0E00               	movlw	0
 15635  00231A  0100               	movlb	0	; () banked
 15636  00231C  15AF               	andwf	___flpack@arg& (0+255),w,b
 15637  00231E  0100               	movlb	0	; () banked
 15638  002320  6FB5               	movwf	??___flpack& (0+255),b
 15639  002322  0E00               	movlw	0
 15640  002324  0100               	movlb	0	; () banked
 15641  002326  15B0               	andwf	(___flpack@arg+1)& (0+255),w,b
 15642  002328  0100               	movlb	0	; () banked
 15643  00232A  6FB6               	movwf	(??___flpack+1)& (0+255),b
 15644  00232C  0E00               	movlw	0
 15645  00232E  0100               	movlb	0	; () banked
 15646  002330  15B1               	andwf	(___flpack@arg+2)& (0+255),w,b
 15647  002332  0100               	movlb	0	; () banked
 15648  002334  6FB7               	movwf	(??___flpack+2)& (0+255),b
 15649  002336  0EFE               	movlw	254
 15650  002338  0100               	movlb	0	; () banked
 15651  00233A  15B2               	andwf	(___flpack@arg+3)& (0+255),w,b
 15652  00233C  0100               	movlb	0	; () banked
 15653  00233E  6FB8               	movwf	(??___flpack+3)& (0+255),b
 15654  002340  0100               	movlb	0	; () banked
 15655  002342  51B5               	movf	??___flpack& (0+255),w,b
 15656  002344  0100               	movlb	0	; () banked
 15657  002346  11B6               	iorwf	(??___flpack+1)& (0+255),w,b
 15658  002348  0100               	movlb	0	; () banked
 15659  00234A  11B7               	iorwf	(??___flpack+2)& (0+255),w,b
 15660  00234C  0100               	movlb	0	; () banked
 15661  00234E  11B8               	iorwf	(??___flpack+3)& (0+255),w,b
 15662  002350  B4D8               	btfsc	status,2,c
 15663  002352  D011               	goto	l2337
 15664  002354  D7D8               	goto	l11241
 15665                           
 15666                           ; BSR set to: 0
 15667  002356  D00F               	goto	l2337
 15668  002358                     l11245:
 15669                           
 15670                           ; BSR set to: 0
 15671  002358  0100               	movlb	0	; () banked
 15672  00235A  2BB3               	incf	___flpack@exp& (0+255),f,b
 15673                           
 15674                           ; BSR set to: 0
 15675  00235C  0E01               	movlw	1
 15676  00235E  0100               	movlb	0	; () banked
 15677  002360  27AF               	addwf	___flpack@arg& (0+255),f,b
 15678  002362  0E00               	movlw	0
 15679  002364  23B0               	addwfc	(___flpack@arg+1)& (0+255),f,b
 15680  002366  23B1               	addwfc	(___flpack@arg+2)& (0+255),f,b
 15681  002368  23B2               	addwfc	(___flpack@arg+3)& (0+255),f,b
 15682                           
 15683                           ; BSR set to: 0
 15684  00236A  0100               	movlb	0	; () banked
 15685  00236C  90D8               	bcf	status,0,c
 15686  00236E  33B2               	rrcf	(___flpack@arg+3)& (0+255),f,b
 15687  002370  33B1               	rrcf	(___flpack@arg+2)& (0+255),f,b
 15688  002372  33B0               	rrcf	(___flpack@arg+1)& (0+255),f,b
 15689  002374  33AF               	rrcf	___flpack@arg& (0+255),f,b
 15690  002376                     l2337:
 15691                           
 15692                           ; BSR set to: 0
 15693  002376  0E00               	movlw	0
 15694  002378  0100               	movlb	0	; () banked
 15695  00237A  15AF               	andwf	___flpack@arg& (0+255),w,b
 15696  00237C  0100               	movlb	0	; () banked
 15697  00237E  6FB5               	movwf	??___flpack& (0+255),b
 15698  002380  0E00               	movlw	0
 15699  002382  0100               	movlb	0	; () banked
 15700  002384  15B0               	andwf	(___flpack@arg+1)& (0+255),w,b
 15701  002386  0100               	movlb	0	; () banked
 15702  002388  6FB6               	movwf	(??___flpack+1)& (0+255),b
 15703  00238A  0E00               	movlw	0
 15704  00238C  0100               	movlb	0	; () banked
 15705  00238E  15B1               	andwf	(___flpack@arg+2)& (0+255),w,b
 15706  002390  0100               	movlb	0	; () banked
 15707  002392  6FB7               	movwf	(??___flpack+2)& (0+255),b
 15708  002394  0EFF               	movlw	255
 15709  002396  0100               	movlb	0	; () banked
 15710  002398  15B2               	andwf	(___flpack@arg+3)& (0+255),w,b
 15711  00239A  0100               	movlb	0	; () banked
 15712  00239C  6FB8               	movwf	(??___flpack+3)& (0+255),b
 15713  00239E  0100               	movlb	0	; () banked
 15714  0023A0  51B5               	movf	??___flpack& (0+255),w,b
 15715  0023A2  0100               	movlb	0	; () banked
 15716  0023A4  11B6               	iorwf	(??___flpack+1)& (0+255),w,b
 15717  0023A6  0100               	movlb	0	; () banked
 15718  0023A8  11B7               	iorwf	(??___flpack+2)& (0+255),w,b
 15719  0023AA  0100               	movlb	0	; () banked
 15720  0023AC  11B8               	iorwf	(??___flpack+3)& (0+255),w,b
 15721  0023AE  B4D8               	btfsc	status,2,c
 15722  0023B0  D00B               	goto	l11253
 15723  0023B2  D7D2               	goto	l11245
 15724                           
 15725                           ; BSR set to: 0
 15726  0023B4  D009               	goto	l11253
 15727  0023B6                     l11251:
 15728                           
 15729                           ; BSR set to: 0
 15730  0023B6  0100               	movlb	0	; () banked
 15731  0023B8  07B3               	decf	___flpack@exp& (0+255),f,b
 15732  0023BA  0100               	movlb	0	; () banked
 15733  0023BC  90D8               	bcf	status,0,c
 15734  0023BE  37AF               	rlcf	___flpack@arg& (0+255),f,b
 15735  0023C0  37B0               	rlcf	(___flpack@arg+1)& (0+255),f,b
 15736  0023C2  37B1               	rlcf	(___flpack@arg+2)& (0+255),f,b
 15737  0023C4  37B2               	rlcf	(___flpack@arg+3)& (0+255),f,b
 15738  0023C6  D000               	goto	l11253
 15739  0023C8                     l11253:
 15740                           
 15741                           ; BSR set to: 0
 15742  0023C8  0100               	movlb	0	; () banked
 15743  0023CA  BFB1               	btfsc	(___flpack@arg+2)& (0+255),7,b
 15744  0023CC  D005               	goto	l2344
 15745                           
 15746                           ; BSR set to: 0
 15747  0023CE  0E02               	movlw	2
 15748  0023D0  0100               	movlb	0	; () banked
 15749  0023D2  61B3               	cpfslt	___flpack@exp& (0+255),b
 15750  0023D4  D7F0               	goto	l11251
 15751  0023D6  D000               	goto	l2344
 15752  0023D8                     l2344:
 15753                           
 15754                           ; BSR set to: 0
 15755  0023D8  0100               	movlb	0	; () banked
 15756  0023DA  B1B3               	btfsc	___flpack@exp& (0+255),0,b
 15757  0023DC  D009               	goto	l2345
 15758                           
 15759                           ; BSR set to: 0
 15760  0023DE  0EFF               	movlw	255
 15761  0023E0  0100               	movlb	0	; () banked
 15762  0023E2  17AF               	andwf	___flpack@arg& (0+255),f,b
 15763  0023E4  0EFF               	movlw	255
 15764  0023E6  17B0               	andwf	(___flpack@arg+1)& (0+255),f,b
 15765  0023E8  0E7F               	movlw	127
 15766  0023EA  17B1               	andwf	(___flpack@arg+2)& (0+255),f,b
 15767  0023EC  0EFF               	movlw	255
 15768  0023EE  17B2               	andwf	(___flpack@arg+3)& (0+255),f,b
 15769  0023F0                     l2345:
 15770                           
 15771                           ; BSR set to: 0
 15772  0023F0  0100               	movlb	0	; () banked
 15773  0023F2  90D8               	bcf	status,0,c
 15774  0023F4  33B3               	rrcf	___flpack@exp& (0+255),f,b
 15775  0023F6  C0B3  F0B5         	movff	___flpack@exp,??___flpack
 15776  0023FA  0100               	movlb	0	; () banked
 15777  0023FC  6BB6               	clrf	(??___flpack+1)& (0+255),b
 15778  0023FE  6BB7               	clrf	(??___flpack+2)& (0+255),b
 15779  002400  6BB8               	clrf	(??___flpack+3)& (0+255),b
 15780  002402  C0B5  F0B8         	movff	??___flpack,??___flpack+3
 15781  002406  0100               	movlb	0	; () banked
 15782  002408  6BB7               	clrf	(??___flpack+2)& (0+255),b
 15783  00240A  6BB6               	clrf	(??___flpack+1)& (0+255),b
 15784  00240C  6BB5               	clrf	??___flpack& (0+255),b
 15785  00240E  0100               	movlb	0	; () banked
 15786  002410  51B5               	movf	??___flpack& (0+255),w,b
 15787  002412  0100               	movlb	0	; () banked
 15788  002414  13AF               	iorwf	___flpack@arg& (0+255),f,b
 15789  002416  0100               	movlb	0	; () banked
 15790  002418  51B6               	movf	(??___flpack+1)& (0+255),w,b
 15791  00241A  0100               	movlb	0	; () banked
 15792  00241C  13B0               	iorwf	(___flpack@arg+1)& (0+255),f,b
 15793  00241E  0100               	movlb	0	; () banked
 15794  002420  51B7               	movf	(??___flpack+2)& (0+255),w,b
 15795  002422  0100               	movlb	0	; () banked
 15796  002424  13B1               	iorwf	(___flpack@arg+2)& (0+255),f,b
 15797  002426  0100               	movlb	0	; () banked
 15798  002428  51B8               	movf	(??___flpack+3)& (0+255),w,b
 15799  00242A  0100               	movlb	0	; () banked
 15800  00242C  13B2               	iorwf	(___flpack@arg+3)& (0+255),f,b
 15801                           
 15802                           ; BSR set to: 0
 15803  00242E  0100               	movlb	0	; () banked
 15804  002430  51B4               	movf	___flpack@sign& (0+255),w,b
 15805  002432  0100               	movlb	0	; () banked
 15806  002434  B4D8               	btfsc	status,2,c
 15807  002436  D003               	goto	l11263
 15808                           
 15809                           ; BSR set to: 0
 15810  002438  0100               	movlb	0	; () banked
 15811  00243A  8FB2               	bsf	(___flpack@arg+3)& (0+255),7,b
 15812  00243C  D000               	goto	l11263
 15813  00243E                     l11263:
 15814                           
 15815                           ; BSR set to: 0
 15816  00243E  C0AF  F0AF         	movff	___flpack@arg,?___flpack
 15817  002442  C0B0  F0B0         	movff	___flpack@arg+1,?___flpack+1
 15818  002446  C0B1  F0B1         	movff	___flpack@arg+2,?___flpack+2
 15819  00244A  C0B2  F0B2         	movff	___flpack@arg+3,?___flpack+3
 15820  00244E  0012               	return	
 15821                           
 15822                           ; BSR set to: 0
 15823                           
 15824                           ; BSR set to: 0
 15825  002450  0012               	return		;funcret
 15826  002452                     __end_of___flpack:
 15827                           	opt stack 0
 15828                           tblptru	equ	0xFF8
 15829                           tblptrh	equ	0xFF7
 15830                           tblptrl	equ	0xFF6
 15831                           tablat	equ	0xFF5
 15832                           prodh	equ	0xFF4
 15833                           prodl	equ	0xFF3
 15834                           intcon	equ	0xFF2
 15835                           intcon3	equ	0xFF0
 15836                           postinc0	equ	0xFEE
 15837                           wreg	equ	0xFE8
 15838                           indf1	equ	0xFE7
 15839                           postdec1	equ	0xFE5
 15840                           fsr1h	equ	0xFE2
 15841                           fsr1l	equ	0xFE1
 15842                           indf2	equ	0xFDF
 15843                           fsr2h	equ	0xFDA
 15844                           fsr2l	equ	0xFD9
 15845                           status	equ	0xFD8
 15846                           
 15847 ;; *************** function _moteJoiningProcess *****************
 15848 ;; Defined at:
 15849 ;;		line 291 in file "../Includes/Board/MOTEapp.c"
 15850 ;; Parameters:    Size  Location     Type
 15851 ;;  messageReady    1    wreg     unsigned char 
 15852 ;;  changeStates    1   22[BANK0 ] unsigned char 
 15853 ;;  selectButton    1   23[BANK0 ] unsigned char 
 15854 ;; Auto vars:     Size  Location     Type
 15855 ;;  messageReady    1   27[BANK0 ] unsigned char 
 15856 ;;  readDataRate    1   25[BANK0 ] unsigned char 
 15857 ;;  joiningCompl    1   26[BANK0 ] unsigned char 
 15858 ;; Return value:  Size  Location     Type
 15859 ;;                  1    wreg      enum E7794
 15860 ;; Registers used:
 15861 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15862 ;; Tracked objects:
 15863 ;;		On entry : 0/0
 15864 ;;		On exit  : 0/0
 15865 ;;		Unchanged: 0/0
 15866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15867 ;;      Params:         0       2       0       0       0       0       0       0       0
 15868 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15869 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15870 ;;      Totals:         0       6       0       0       0       0       0       0       0
 15871 ;;Total ram usage:        6 bytes
 15872 ;; Hardware stack levels used:    1
 15873 ;; Hardware stack levels required when called:   16
 15874 ;; This function calls:
 15875 ;;		MOTEapp@sendCommand
 15876 ;;		_DATAEE_WriteByte
 15877 ;;		_moteApp_delayms
 15878 ;;		_oled_clear
 15879 ;;		_oled_putString
 15880 ;;		_strcmp
 15881 ;;		_strncmp
 15882 ;; This function is called by:
 15883 ;;		_moteHandler
 15884 ;; This function uses a non-reentrant model
 15885 ;;
 15886                           
 15887                           	psect	text50
 15888  00133C                     __ptext50:
 15889                           	opt stack 0
 15890  00133C                     _moteJoiningProcess:
 15891                           	opt stack 13
 15892                           
 15893                           ; BSR set to: 0
 15894                           ;incstack = 0
 15895                           ;moteJoiningProcess@messageReady stored from wreg
 15896  00133C  0100               	movlb	0	; () banked
 15897  00133E  6FCA               	movwf	moteJoiningProcess@messageReady& (0+255),b
 15898                           
 15899                           ; BSR set to: 0
 15900                           ;MOTEapp.c: 293: bool joiningComplete = 0;
 15901  001340  0E00               	movlw	0
 15902  001342  0100               	movlb	0	; () banked
 15903  001344  6FC9               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 15904                           
 15905                           ;MOTEapp.c: 295: switch (activeState)
 15906  001346  D312               	goto	l12671
 15907  001348                     
 15908                           ; BSR set to: 0
 15909  001348  D7FF               	goto	l400
 15910                           
 15911                           ; BSR set to: 0
 15912                           ;MOTEapp.c: 299: break;
 15913  00134A  D334               	goto	l12673
 15914  00134C                     l12489:
 15915                           
 15916                           ; BSR set to: 0
 15917                           ;MOTEapp.c: 301: sendCommand("sys reset");
 15918  00134C  0EF2               	movlw	low STR_30
 15919  00134E  0100               	movlb	0	; () banked
 15920  001350  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 15921  001352  0E7E               	movlw	high STR_30
 15922  001354  0100               	movlb	0	; () banked
 15923  001356  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 15924  001358  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 15925  00135C  D194               	goto	l12585
 15926  00135E                     l12493:
 15927                           
 15928                           ; BSR set to: 0
 15929                           ;MOTEapp.c: 305: if (selectButton)
 15930  00135E  0100               	movlb	0	; () banked
 15931  001360  51C6               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 15932  001362  0100               	movlb	0	; () banked
 15933  001364  B4D8               	btfsc	status,2,c
 15934  001366  D003               	goto	l405
 15935                           
 15936                           ; BSR set to: 0
 15937                           ;MOTEapp.c: 306: {
 15938                           ;MOTEapp.c: 307: activeState = moteComFailure;
 15939  001368  0E0A               	movlw	10
 15940  00136A  0100               	movlb	0	; () banked
 15941  00136C  6F8C               	movwf	_activeState& (0+255),b
 15942  00136E                     l405:
 15943                           
 15944                           ; BSR set to: 0
 15945                           ;MOTEapp.c: 308: }
 15946                           ;MOTEapp.c: 309: if ( messageReady )
 15947  00136E  0100               	movlb	0	; () banked
 15948  001370  51CA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 15949  001372  0100               	movlb	0	; () banked
 15950  001374  B4D8               	btfsc	status,2,c
 15951  001376  D31E               	goto	l12673
 15952                           
 15953                           ; BSR set to: 0
 15954                           ;MOTEapp.c: 310: {
 15955                           ;MOTEapp.c: 311: if(strncmp(moduleResonseBuffer, "RN24", 4) == 0)
 15956  001378  0E78               	movlw	low _moduleResonseBuffer
 15957  00137A  0100               	movlb	0	; () banked
 15958  00137C  6FAF               	movwf	strncmp@s1& (0+255),b
 15959  00137E  0E01               	movlw	high _moduleResonseBuffer
 15960  001380  0100               	movlb	0	; () banked
 15961  001382  6FB0               	movwf	(strncmp@s1+1)& (0+255),b
 15962  001384  0EB8               	movlw	low STR_31
 15963  001386  0100               	movlb	0	; () banked
 15964  001388  6FB1               	movwf	strncmp@s2& (0+255),b
 15965  00138A  0E7F               	movlw	high STR_31
 15966  00138C  0100               	movlb	0	; () banked
 15967  00138E  6FB2               	movwf	(strncmp@s2+1)& (0+255),b
 15968  001390  0E00               	movlw	0
 15969  001392  0100               	movlb	0	; () banked
 15970  001394  6FB4               	movwf	(strncmp@len+1)& (0+255),b
 15971  001396  0E04               	movlw	4
 15972  001398  6FB3               	movwf	strncmp@len& (0+255),b
 15973  00139A  EC91  F024         	call	_strncmp	;wreg free
 15974  00139E  0100               	movlb	0	; () banked
 15975  0013A0  51AF               	movf	?_strncmp& (0+255),w,b
 15976  0013A2  0100               	movlb	0	; () banked
 15977  0013A4  11B0               	iorwf	(?_strncmp+1)& (0+255),w,b
 15978  0013A6  A4D8               	btfss	status,2,c
 15979  0013A8  D033               	goto	l12511
 15980                           
 15981                           ; BSR set to: 0
 15982                           ;MOTEapp.c: 312: {
 15983                           ;MOTEapp.c: 313: rnModule = rn2483;
 15984  0013AA  0E00               	movlw	0
 15985  0013AC  0100               	movlb	0	; () banked
 15986  0013AE  6FA4               	movwf	_rnModule& (0+255),b
 15987                           
 15988                           ; BSR set to: 0
 15989                           ;MOTEapp.c: 314: oled_clear();
 15990  0013B0  ECB6  F02E         	call	_oled_clear	;wreg free
 15991                           
 15992                           ;MOTEapp.c: 315: oled_putString(" Joining Method ",0,0);
 15993  0013B4  0E66               	movlw	low STR_32
 15994  0013B6  0100               	movlb	0	; () banked
 15995  0013B8  6FC0               	movwf	oled_putString@string& (0+255),b
 15996  0013BA  0E7B               	movlw	high STR_32
 15997  0013BC  0100               	movlb	0	; () banked
 15998  0013BE  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 15999  0013C0  0E00               	movlw	0
 16000  0013C2  0100               	movlb	0	; () banked
 16001  0013C4  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16002  0013C6  0E00               	movlw	0
 16003  0013C8  0100               	movlb	0	; () banked
 16004  0013CA  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16005  0013CC  EC30  F028         	call	_oled_putString	;wreg free
 16006                           
 16007                           ;MOTEapp.c: 316: oled_putString("<- ABP   OTAA ->", 0,2);
 16008  0013D0  0EBB               	movlw	low STR_33
 16009  0013D2  0100               	movlb	0	; () banked
 16010  0013D4  6FC0               	movwf	oled_putString@string& (0+255),b
 16011  0013D6  0E7B               	movlw	high STR_33
 16012  0013D8  0100               	movlb	0	; () banked
 16013  0013DA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16014  0013DC  0E00               	movlw	0
 16015  0013DE  0100               	movlb	0	; () banked
 16016  0013E0  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16017  0013E2  0E02               	movlw	2
 16018  0013E4  0100               	movlb	0	; () banked
 16019  0013E6  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16020  0013E8  EC30  F028         	call	_oled_putString	;wreg free
 16021                           
 16022                           ;MOTEapp.c: 317: oled_putString("  (S2)   (S3)   ", 0,3);
 16023  0013EC  0E11               	movlw	low STR_34
 16024  0013EE  0100               	movlb	0	; () banked
 16025  0013F0  6FC0               	movwf	oled_putString@string& (0+255),b
 16026  0013F2  0E7B               	movlw	high STR_34
 16027  0013F4  0100               	movlb	0	; () banked
 16028  0013F6  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16029  0013F8  0E00               	movlw	0
 16030  0013FA  0100               	movlb	0	; () banked
 16031  0013FC  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16032  0013FE  0E03               	movlw	3
 16033  001400  0100               	movlb	0	; () banked
 16034  001402  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16035  001404  EC30  F028         	call	_oled_putString	;wreg free
 16036  001408  D04B               	goto	l12523
 16037  00140A                     L6:
 16038  00140A  0100               	movlb	0	; () banked
 16039  00140C  6F8C               	movwf	_activeState& (0+255),b
 16040                           
 16041                           ;MOTEapp.c: 319: }
 16042  00140E  D2D2               	goto	l12673
 16043  001410                     l12511:
 16044                           
 16045                           ; BSR set to: 0
 16046                           ;MOTEapp.c: 320: else if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 16047  001410  0E78               	movlw	low _moduleResonseBuffer
 16048  001412  0100               	movlb	0	; () banked
 16049  001414  6FAF               	movwf	strncmp@s1& (0+255),b
 16050  001416  0E01               	movlw	high _moduleResonseBuffer
 16051  001418  0100               	movlb	0	; () banked
 16052  00141A  6FB0               	movwf	(strncmp@s1+1)& (0+255),b
 16053  00141C  0EBD               	movlw	low STR_35
 16054  00141E  0100               	movlb	0	; () banked
 16055  001420  6FB1               	movwf	strncmp@s2& (0+255),b
 16056  001422  0E7F               	movlw	high STR_35
 16057  001424  0100               	movlb	0	; () banked
 16058  001426  6FB2               	movwf	(strncmp@s2+1)& (0+255),b
 16059  001428  0E00               	movlw	0
 16060  00142A  0100               	movlb	0	; () banked
 16061  00142C  6FB4               	movwf	(strncmp@len+1)& (0+255),b
 16062  00142E  0E04               	movlw	4
 16063  001430  6FB3               	movwf	strncmp@len& (0+255),b
 16064  001432  EC91  F024         	call	_strncmp	;wreg free
 16065  001436  0100               	movlb	0	; () banked
 16066  001438  51AF               	movf	?_strncmp& (0+255),w,b
 16067  00143A  0100               	movlb	0	; () banked
 16068  00143C  11B0               	iorwf	(?_strncmp+1)& (0+255),w,b
 16069  00143E  A4D8               	btfss	status,2,c
 16070  001440  D031               	goto	l12525
 16071                           
 16072                           ; BSR set to: 0
 16073                           ;MOTEapp.c: 321: {
 16074                           ;MOTEapp.c: 322: rnModule = rn2903;
 16075  001442  0E01               	movlw	1
 16076  001444  0100               	movlb	0	; () banked
 16077  001446  6FA4               	movwf	_rnModule& (0+255),b
 16078                           
 16079                           ; BSR set to: 0
 16080                           ;MOTEapp.c: 323: oled_clear();
 16081  001448  ECB6  F02E         	call	_oled_clear	;wreg free
 16082                           
 16083                           ;MOTEapp.c: 324: oled_putString(" Joining Method ",0,0);
 16084  00144C  0E66               	movlw	low STR_32
 16085  00144E  0100               	movlb	0	; () banked
 16086  001450  6FC0               	movwf	oled_putString@string& (0+255),b
 16087  001452  0E7B               	movlw	high STR_32
 16088  001454  0100               	movlb	0	; () banked
 16089  001456  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16090  001458  0E00               	movlw	0
 16091  00145A  0100               	movlb	0	; () banked
 16092  00145C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16093  00145E  0E00               	movlw	0
 16094  001460  0100               	movlb	0	; () banked
 16095  001462  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16096  001464  EC30  F028         	call	_oled_putString	;wreg free
 16097                           
 16098                           ;MOTEapp.c: 325: oled_putString("<- ABP   OTAA ->", 0,2);
 16099  001468  0EBB               	movlw	low STR_33
 16100  00146A  0100               	movlb	0	; () banked
 16101  00146C  6FC0               	movwf	oled_putString@string& (0+255),b
 16102  00146E  0E7B               	movlw	high STR_33
 16103  001470  0100               	movlb	0	; () banked
 16104  001472  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16105  001474  0E00               	movlw	0
 16106  001476  0100               	movlb	0	; () banked
 16107  001478  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16108  00147A  0E02               	movlw	2
 16109  00147C  0100               	movlb	0	; () banked
 16110  00147E  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16111  001480  EC30  F028         	call	_oled_putString	;wreg free
 16112                           
 16113                           ;MOTEapp.c: 326: oled_putString("  (S2)   (S3)   ", 0,3);
 16114  001484  0E11               	movlw	low STR_34
 16115  001486  0100               	movlb	0	; () banked
 16116  001488  6FC0               	movwf	oled_putString@string& (0+255),b
 16117  00148A  0E7B               	movlw	high STR_34
 16118  00148C  0100               	movlb	0	; () banked
 16119  00148E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16120  001490  0E00               	movlw	0
 16121  001492  0100               	movlb	0	; () banked
 16122  001494  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16123  001496  0E03               	movlw	3
 16124  001498  0100               	movlb	0	; () banked
 16125  00149A  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16126  00149C  EC30  F028         	call	_oled_putString	;wreg free
 16127  0014A0                     l12523:
 16128                           
 16129                           ;MOTEapp.c: 327: activeState = moteJoinMethod;
 16130  0014A0  0E02               	movlw	2
 16131  0014A2  D7B3               	goto	L6
 16132  0014A4                     l12525:
 16133                           
 16134                           ; BSR set to: 0
 16135                           ;MOTEapp.c: 329: else
 16136                           ;MOTEapp.c: 330: {
 16137                           ;MOTEapp.c: 331: sendCommand("sys reset");
 16138  0014A4  0EF2               	movlw	low STR_30
 16139  0014A6  0100               	movlb	0	; () banked
 16140  0014A8  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 16141  0014AA  0E7E               	movlw	high STR_30
 16142  0014AC  0100               	movlb	0	; () banked
 16143  0014AE  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 16144  0014B0  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 16145                           
 16146                           ;MOTEapp.c: 332: moteApp_delayms(25);
 16147  0014B4  0E00               	movlw	0
 16148  0014B6  0100               	movlb	0	; () banked
 16149  0014B8  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16150  0014BA  0E19               	movlw	25
 16151  0014BC  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 16152  0014BE  ECB1  F02C         	call	_moteApp_delayms	;wreg free
 16153  0014C2  D1E9               	goto	l12639
 16154                           
 16155                           ; BSR set to: 0
 16156                           ;MOTEapp.c: 334: }
 16157                           ;MOTEapp.c: 335: }
 16158                           ;MOTEapp.c: 336: break;
 16159                           
 16160                           ; BSR set to: 0
 16161                           
 16162                           ; BSR set to: 0
 16163                           
 16164                           ;MOTEapp.c: 333: activeState = moteStartup;
 16165  0014C4  D277               	goto	l12673
 16166  0014C6                     l12531:
 16167                           
 16168                           ; BSR set to: 0
 16169                           ;MOTEapp.c: 338: if (changeStates)
 16170  0014C6  0100               	movlb	0	; () banked
 16171  0014C8  51C5               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 16172  0014CA  0100               	movlb	0	; () banked
 16173  0014CC  B4D8               	btfsc	status,2,c
 16174  0014CE  D01E               	goto	l12541
 16175                           
 16176                           ; BSR set to: 0
 16177                           ;MOTEapp.c: 339: {
 16178                           ;MOTEapp.c: 340: oled_putString("  (S2)          ", 0,3);
 16179  0014D0  0EDE               	movlw	low STR_40
 16180  0014D2  0100               	movlb	0	; () banked
 16181  0014D4  6FC0               	movwf	oled_putString@string& (0+255),b
 16182  0014D6  0E7A               	movlw	high STR_40
 16183  0014D8  0100               	movlb	0	; () banked
 16184  0014DA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16185  0014DC  0E00               	movlw	0
 16186  0014DE  0100               	movlb	0	; () banked
 16187  0014E0  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16188  0014E2  0E03               	movlw	3
 16189  0014E4  0100               	movlb	0	; () banked
 16190  0014E6  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16191  0014E8  EC30  F028         	call	_oled_putString	;wreg free
 16192                           
 16193                           ;MOTEapp.c: 341: moteApp_delayms(500);
 16194  0014EC  0E01               	movlw	1
 16195  0014EE  0100               	movlb	0	; () banked
 16196  0014F0  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16197  0014F2  0EF4               	movlw	244
 16198  0014F4  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 16199  0014F6  ECB1  F02C         	call	_moteApp_delayms	;wreg free
 16200                           
 16201                           ;MOTEapp.c: 342: sendCommand("mac join abp");
 16202  0014FA  0EDE               	movlw	low STR_41
 16203  0014FC  0100               	movlb	0	; () banked
 16204  0014FE  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 16205  001500  0E7D               	movlw	high STR_41
 16206  001502  0100               	movlb	0	; () banked
 16207  001504  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 16208  001506  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 16209  00150A  D07A               	goto	l12569
 16210  00150C                     l12541:
 16211                           
 16212                           ; BSR set to: 0
 16213                           ;MOTEapp.c: 345: else if (selectButton)
 16214  00150C  0100               	movlb	0	; () banked
 16215  00150E  51C6               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 16216  001510  0100               	movlb	0	; () banked
 16217  001512  B4D8               	btfsc	status,2,c
 16218  001514  D24F               	goto	l12673
 16219                           
 16220                           ; BSR set to: 0
 16221                           ;MOTEapp.c: 346: {
 16222                           ;MOTEapp.c: 347: oled_putString("         (S3)   ", 0,3);
 16223  001516  0E00               	movlw	low STR_42
 16224  001518  0100               	movlb	0	; () banked
 16225  00151A  6FC0               	movwf	oled_putString@string& (0+255),b
 16226  00151C  0E7B               	movlw	high STR_42
 16227  00151E  0100               	movlb	0	; () banked
 16228  001520  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16229  001522  0E00               	movlw	0
 16230  001524  0100               	movlb	0	; () banked
 16231  001526  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16232  001528  0E03               	movlw	3
 16233  00152A  0100               	movlb	0	; () banked
 16234  00152C  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16235  00152E  EC30  F028         	call	_oled_putString	;wreg free
 16236                           
 16237                           ;MOTEapp.c: 348: moteApp_delayms(500);
 16238  001532  0E01               	movlw	1
 16239  001534  0100               	movlb	0	; () banked
 16240  001536  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16241  001538  0EF4               	movlw	244
 16242  00153A  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 16243  00153C  ECB1  F02C         	call	_moteApp_delayms	;wreg free
 16244                           
 16245                           ;MOTEapp.c: 349: sendCommand("mac join otaa");
 16246  001540  0E32               	movlw	low STR_43
 16247  001542  0100               	movlb	0	; () banked
 16248  001544  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 16249  001546  0E7D               	movlw	high STR_43
 16250  001548  0100               	movlb	0	; () banked
 16251  00154A  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 16252  00154C  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 16253  001550  D18C               	goto	l12635
 16254                           
 16255                           ; BSR set to: 0
 16256                           ;MOTEapp.c: 351: }
 16257                           ;MOTEapp.c: 352: break;
 16258                           
 16259                           ; BSR set to: 0
 16260                           
 16261                           ;MOTEapp.c: 350: activeState = moteCheckOtaa;
 16262  001552  D230               	goto	l12673
 16263  001554                     l12551:
 16264                           
 16265                           ; BSR set to: 0
 16266                           ;MOTEapp.c: 354: if ( messageReady )
 16267  001554  0100               	movlb	0	; () banked
 16268  001556  51CA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16269  001558  0100               	movlb	0	; () banked
 16270  00155A  B4D8               	btfsc	status,2,c
 16271  00155C  D22B               	goto	l12673
 16272                           
 16273                           ; BSR set to: 0
 16274                           ;MOTEapp.c: 355: {
 16275                           ;MOTEapp.c: 356: if(strcmp(moduleResonseBuffer, "ok") == 0)
 16276  00155E  0E78               	movlw	low _moduleResonseBuffer
 16277  001560  0100               	movlb	0	; () banked
 16278  001562  6FAF               	movwf	strcmp@s1& (0+255),b
 16279  001564  0E01               	movlw	high _moduleResonseBuffer
 16280  001566  0100               	movlb	0	; () banked
 16281  001568  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16282  00156A  0EF7               	movlw	low STR_44
 16283  00156C  0100               	movlb	0	; () banked
 16284  00156E  6FB1               	movwf	strcmp@s2& (0+255),b
 16285  001570  0E7F               	movlw	high STR_44
 16286  001572  0100               	movlb	0	; () banked
 16287  001574  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16288  001576  EC4E  F02A         	call	_strcmp	;wreg free
 16289  00157A  0100               	movlb	0	; () banked
 16290  00157C  51AF               	movf	?_strcmp& (0+255),w,b
 16291  00157E  0100               	movlb	0	; () banked
 16292  001580  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16293  001582  A4D8               	btfss	status,2,c
 16294  001584  D002               	goto	l12557
 16295                           
 16296                           ; BSR set to: 0
 16297                           ;MOTEapp.c: 357: {
 16298                           ;MOTEapp.c: 358: activeState = moteWaitAbp;
 16299  001586  0E04               	movlw	4
 16300  001588  D740               	goto	L6
 16301  00158A                     l12557:
 16302                           
 16303                           ; BSR set to: 0
 16304                           ;MOTEapp.c: 360: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 16305  00158A  0E78               	movlw	low _moduleResonseBuffer
 16306  00158C  0100               	movlb	0	; () banked
 16307  00158E  6FAF               	movwf	strcmp@s1& (0+255),b
 16308  001590  0E01               	movlw	high _moduleResonseBuffer
 16309  001592  0100               	movlb	0	; () banked
 16310  001594  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16311  001596  0E4E               	movlw	low STR_45
 16312  001598  0100               	movlb	0	; () banked
 16313  00159A  6FB1               	movwf	strcmp@s2& (0+255),b
 16314  00159C  0E7D               	movlw	high STR_45
 16315  00159E  0100               	movlb	0	; () banked
 16316  0015A0  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16317  0015A2  EC4E  F02A         	call	_strcmp	;wreg free
 16318  0015A6  0100               	movlb	0	; () banked
 16319  0015A8  51AF               	movf	?_strcmp& (0+255),w,b
 16320  0015AA  0100               	movlb	0	; () banked
 16321  0015AC  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16322  0015AE  A4D8               	btfss	status,2,c
 16323  0015B0  D01F               	goto	l12567
 16324                           
 16325                           ; BSR set to: 0
 16326                           ;MOTEapp.c: 361: {
 16327                           ;MOTEapp.c: 362: oled_clear();
 16328  0015B2  ECB6  F02E         	call	_oled_clear	;wreg free
 16329                           
 16330                           ;MOTEapp.c: 363: oled_putString("Valid Keys",0,0);
 16331  0015B6  0E9F               	movlw	low STR_46
 16332  0015B8  0100               	movlb	0	; () banked
 16333  0015BA  6FC0               	movwf	oled_putString@string& (0+255),b
 16334  0015BC  0E7E               	movlw	high STR_46
 16335  0015BE  0100               	movlb	0	; () banked
 16336  0015C0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16337  0015C2  0E00               	movlw	0
 16338  0015C4  0100               	movlb	0	; () banked
 16339  0015C6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16340  0015C8  0E00               	movlw	0
 16341  0015CA  0100               	movlb	0	; () banked
 16342  0015CC  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16343  0015CE  EC30  F028         	call	_oled_putString	;wreg free
 16344                           
 16345                           ;MOTEapp.c: 364: oled_putString("Required",0,1);
 16346  0015D2  0E19               	movlw	low STR_47
 16347  0015D4  0100               	movlb	0	; () banked
 16348  0015D6  6FC0               	movwf	oled_putString@string& (0+255),b
 16349  0015D8  0E7F               	movlw	high STR_47
 16350  0015DA  0100               	movlb	0	; () banked
 16351  0015DC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16352  0015DE  0E00               	movlw	0
 16353  0015E0  0100               	movlb	0	; () banked
 16354  0015E2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16355  0015E4  0E01               	movlw	1
 16356  0015E6  0100               	movlb	0	; () banked
 16357  0015E8  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16358  0015EA  EC30  F028         	call	_oled_putString	;wreg free
 16359  0015EE  D09B               	goto	l12601
 16360  0015F0                     l12567:
 16361                           
 16362                           ; BSR set to: 0
 16363                           ;MOTEapp.c: 367: else
 16364                           ;MOTEapp.c: 368: {
 16365                           ;MOTEapp.c: 369: sendCommand("mac join abp");
 16366  0015F0  0EDE               	movlw	low STR_41
 16367  0015F2  0100               	movlb	0	; () banked
 16368  0015F4  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 16369  0015F6  0E7D               	movlw	high STR_41
 16370  0015F8  0100               	movlb	0	; () banked
 16371  0015FA  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 16372  0015FC  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 16373  001600                     l12569:
 16374                           
 16375                           ;MOTEapp.c: 370: activeState = moteCheckAbp;
 16376  001600  0E03               	movlw	3
 16377  001602  D703               	goto	L6
 16378                           
 16379                           ; BSR set to: 0
 16380                           ;MOTEapp.c: 371: }
 16381                           ;MOTEapp.c: 372: }
 16382                           ;MOTEapp.c: 373: break;
 16383                           
 16384                           ; BSR set to: 0
 16385                           
 16386                           ; BSR set to: 0
 16387  001604  D1D7               	goto	l12673
 16388  001606                     l12571:
 16389                           
 16390                           ; BSR set to: 0
 16391                           ;MOTEapp.c: 375: if ( messageReady )
 16392  001606  0100               	movlb	0	; () banked
 16393  001608  51CA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16394  00160A  0100               	movlb	0	; () banked
 16395  00160C  B4D8               	btfsc	status,2,c
 16396  00160E  D1D2               	goto	l12673
 16397                           
 16398                           ; BSR set to: 0
 16399                           ;MOTEapp.c: 376: {
 16400                           ;MOTEapp.c: 377: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 16401  001610  0E78               	movlw	low _moduleResonseBuffer
 16402  001612  0100               	movlb	0	; () banked
 16403  001614  6FAF               	movwf	strcmp@s1& (0+255),b
 16404  001616  0E01               	movlw	high _moduleResonseBuffer
 16405  001618  0100               	movlb	0	; () banked
 16406  00161A  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16407  00161C  0E22               	movlw	low STR_49
 16408  00161E  0100               	movlb	0	; () banked
 16409  001620  6FB1               	movwf	strcmp@s2& (0+255),b
 16410  001622  0E7F               	movlw	high STR_49
 16411  001624  0100               	movlb	0	; () banked
 16412  001626  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16413  001628  EC4E  F02A         	call	_strcmp	;wreg free
 16414  00162C  0100               	movlb	0	; () banked
 16415  00162E  51AF               	movf	?_strcmp& (0+255),w,b
 16416  001630  0100               	movlb	0	; () banked
 16417  001632  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16418  001634  A4D8               	btfss	status,2,c
 16419  001636  D01F               	goto	l12583
 16420                           
 16421                           ; BSR set to: 0
 16422                           ;MOTEapp.c: 378: {
 16423                           ;MOTEapp.c: 379: oled_clear();
 16424  001638  ECB6  F02E         	call	_oled_clear	;wreg free
 16425                           
 16426                           ;MOTEapp.c: 380: oled_putString("ABP Join ",0,0);
 16427  00163C  0ECA               	movlw	low STR_50
 16428  00163E  0100               	movlb	0	; () banked
 16429  001640  6FC0               	movwf	oled_putString@string& (0+255),b
 16430  001642  0E7E               	movlw	high STR_50
 16431  001644  0100               	movlb	0	; () banked
 16432  001646  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16433  001648  0E00               	movlw	0
 16434  00164A  0100               	movlb	0	; () banked
 16435  00164C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16436  00164E  0E00               	movlw	0
 16437  001650  0100               	movlb	0	; () banked
 16438  001652  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16439  001654  EC30  F028         	call	_oled_putString	;wreg free
 16440                           
 16441                           ;MOTEapp.c: 381: oled_putString("Successful",0,1);
 16442  001658  0E89               	movlw	low STR_51
 16443  00165A  0100               	movlb	0	; () banked
 16444  00165C  6FC0               	movwf	oled_putString@string& (0+255),b
 16445  00165E  0E7E               	movlw	high STR_51
 16446  001660  0100               	movlb	0	; () banked
 16447  001662  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16448  001664  0E00               	movlw	0
 16449  001666  0100               	movlb	0	; () banked
 16450  001668  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16451  00166A  0E01               	movlw	1
 16452  00166C  0100               	movlb	0	; () banked
 16453  00166E  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16454  001670  EC30  F028         	call	_oled_putString	;wreg free
 16455  001674  D0BE               	goto	l12623
 16456  001676                     l12583:
 16457                           
 16458                           ; BSR set to: 0
 16459                           ;MOTEapp.c: 384: else
 16460                           ;MOTEapp.c: 385: {
 16461                           ;MOTEapp.c: 386: sendCommand("mac reset");
 16462  001676  0EE8               	movlw	low STR_52
 16463  001678  0100               	movlb	0	; () banked
 16464  00167A  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 16465  00167C  0E7E               	movlw	high STR_52
 16466  00167E  0100               	movlb	0	; () banked
 16467  001680  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 16468  001682  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 16469  001686                     l12585:
 16470                           
 16471                           ;MOTEapp.c: 387: activeState = moteReset;
 16472  001686  0E01               	movlw	1
 16473  001688  D6C0               	goto	L6
 16474                           
 16475                           ; BSR set to: 0
 16476                           ;MOTEapp.c: 388: }
 16477                           ;MOTEapp.c: 389: }
 16478                           ;MOTEapp.c: 390: break;
 16479                           
 16480                           ; BSR set to: 0
 16481  00168A  D194               	goto	l12673
 16482  00168C                     l12587:
 16483                           
 16484                           ; BSR set to: 0
 16485                           ;MOTEapp.c: 393: if ( messageReady )
 16486  00168C  0100               	movlb	0	; () banked
 16487  00168E  51CA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16488  001690  0100               	movlb	0	; () banked
 16489  001692  B4D8               	btfsc	status,2,c
 16490  001694  D18F               	goto	l12673
 16491                           
 16492                           ; BSR set to: 0
 16493                           ;MOTEapp.c: 394: {
 16494                           ;MOTEapp.c: 395: if(strcmp(moduleResonseBuffer, "ok") == 0)
 16495  001696  0E78               	movlw	low _moduleResonseBuffer
 16496  001698  0100               	movlb	0	; () banked
 16497  00169A  6FAF               	movwf	strcmp@s1& (0+255),b
 16498  00169C  0E01               	movlw	high _moduleResonseBuffer
 16499  00169E  0100               	movlb	0	; () banked
 16500  0016A0  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16501  0016A2  0EF7               	movlw	low STR_44
 16502  0016A4  0100               	movlb	0	; () banked
 16503  0016A6  6FB1               	movwf	strcmp@s2& (0+255),b
 16504  0016A8  0E7F               	movlw	high STR_44
 16505  0016AA  0100               	movlb	0	; () banked
 16506  0016AC  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16507  0016AE  EC4E  F02A         	call	_strcmp	;wreg free
 16508  0016B2  0100               	movlb	0	; () banked
 16509  0016B4  51AF               	movf	?_strcmp& (0+255),w,b
 16510  0016B6  0100               	movlb	0	; () banked
 16511  0016B8  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16512  0016BA  A4D8               	btfss	status,2,c
 16513  0016BC  D002               	goto	l12593
 16514                           
 16515                           ; BSR set to: 0
 16516                           ;MOTEapp.c: 396: {
 16517                           ;MOTEapp.c: 397: activeState = moteWaitOtaa;
 16518  0016BE  0E06               	movlw	6
 16519  0016C0  D6A4               	goto	L6
 16520  0016C2                     l12593:
 16521                           
 16522                           ; BSR set to: 0
 16523                           ;MOTEapp.c: 399: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 16524  0016C2  0E78               	movlw	low _moduleResonseBuffer
 16525  0016C4  0100               	movlb	0	; () banked
 16526  0016C6  6FAF               	movwf	strcmp@s1& (0+255),b
 16527  0016C8  0E01               	movlw	high _moduleResonseBuffer
 16528  0016CA  0100               	movlb	0	; () banked
 16529  0016CC  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16530  0016CE  0E4E               	movlw	low STR_45
 16531  0016D0  0100               	movlb	0	; () banked
 16532  0016D2  6FB1               	movwf	strcmp@s2& (0+255),b
 16533  0016D4  0E7D               	movlw	high STR_45
 16534  0016D6  0100               	movlb	0	; () banked
 16535  0016D8  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16536  0016DA  EC4E  F02A         	call	_strcmp	;wreg free
 16537  0016DE  0100               	movlb	0	; () banked
 16538  0016E0  51AF               	movf	?_strcmp& (0+255),w,b
 16539  0016E2  0100               	movlb	0	; () banked
 16540  0016E4  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16541  0016E6  A4D8               	btfss	status,2,c
 16542  0016E8  D020               	goto	l12603
 16543                           
 16544                           ; BSR set to: 0
 16545                           ;MOTEapp.c: 400: {
 16546                           ;MOTEapp.c: 401: oled_clear();
 16547  0016EA  ECB6  F02E         	call	_oled_clear	;wreg free
 16548                           
 16549                           ;MOTEapp.c: 402: oled_putString("Valid Keys",0,0);
 16550  0016EE  0E9F               	movlw	low STR_46
 16551  0016F0  0100               	movlb	0	; () banked
 16552  0016F2  6FC0               	movwf	oled_putString@string& (0+255),b
 16553  0016F4  0E7E               	movlw	high STR_46
 16554  0016F6  0100               	movlb	0	; () banked
 16555  0016F8  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16556  0016FA  0E00               	movlw	0
 16557  0016FC  0100               	movlb	0	; () banked
 16558  0016FE  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16559  001700  0E00               	movlw	0
 16560  001702  0100               	movlb	0	; () banked
 16561  001704  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16562  001706  EC30  F028         	call	_oled_putString	;wreg free
 16563                           
 16564                           ;MOTEapp.c: 403: oled_putString("Required",0,1);
 16565  00170A  0E19               	movlw	low STR_47
 16566  00170C  0100               	movlb	0	; () banked
 16567  00170E  6FC0               	movwf	oled_putString@string& (0+255),b
 16568  001710  0E7F               	movlw	high STR_47
 16569  001712  0100               	movlb	0	; () banked
 16570  001714  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16571  001716  0E00               	movlw	0
 16572  001718  0100               	movlb	0	; () banked
 16573  00171A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16574  00171C  0E01               	movlw	1
 16575  00171E  0100               	movlb	0	; () banked
 16576  001720  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16577  001722  EC30  F028         	call	_oled_putString	;wreg free
 16578  001726                     l12601:
 16579                           
 16580                           ;MOTEapp.c: 404: activeState = moteNeedKeys;
 16581  001726  0E09               	movlw	9
 16582  001728  D670               	goto	L6
 16583  00172A                     l12603:
 16584                           
 16585                           ; BSR set to: 0
 16586                           ;MOTEapp.c: 406: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 16587  00172A  0E78               	movlw	low _moduleResonseBuffer
 16588  00172C  0100               	movlb	0	; () banked
 16589  00172E  6FAF               	movwf	strcmp@s1& (0+255),b
 16590  001730  0E01               	movlw	high _moduleResonseBuffer
 16591  001732  0100               	movlb	0	; () banked
 16592  001734  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16593  001736  0E40               	movlw	low STR_57
 16594  001738  0100               	movlb	0	; () banked
 16595  00173A  6FB1               	movwf	strcmp@s2& (0+255),b
 16596  00173C  0E7D               	movlw	high STR_57
 16597  00173E  0100               	movlb	0	; () banked
 16598  001740  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16599  001742  EC4E  F02A         	call	_strcmp	;wreg free
 16600  001746  0100               	movlb	0	; () banked
 16601  001748  51AF               	movf	?_strcmp& (0+255),w,b
 16602  00174A  0100               	movlb	0	; () banked
 16603  00174C  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16604  00174E  A4D8               	btfss	status,2,c
 16605  001750  D009               	goto	l12609
 16606                           
 16607                           ; BSR set to: 0
 16608                           ;MOTEapp.c: 407: {
 16609                           ;MOTEapp.c: 408: sendCommand("mac join otaa");
 16610  001752  0E32               	movlw	low STR_43
 16611  001754  0100               	movlb	0	; () banked
 16612  001756  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 16613  001758  0E7D               	movlw	high STR_43
 16614  00175A  0100               	movlb	0	; () banked
 16615  00175C  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 16616  00175E  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 16617  001762  D083               	goto	l12635
 16618  001764                     l12609:
 16619                           
 16620                           ; BSR set to: 0
 16621                           ;MOTEapp.c: 411: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 16622  001764  0E78               	movlw	low _moduleResonseBuffer
 16623  001766  0100               	movlb	0	; () banked
 16624  001768  6FAF               	movwf	strcmp@s1& (0+255),b
 16625  00176A  0E01               	movlw	high _moduleResonseBuffer
 16626  00176C  0100               	movlb	0	; () banked
 16627  00176E  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16628  001770  0E7E               	movlw	low STR_59
 16629  001772  0100               	movlb	0	; () banked
 16630  001774  6FB1               	movwf	strcmp@s2& (0+255),b
 16631  001776  0E7E               	movlw	high STR_59
 16632  001778  0100               	movlb	0	; () banked
 16633  00177A  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16634  00177C  EC4E  F02A         	call	_strcmp	;wreg free
 16635  001780  D084               	goto	L7
 16636                           
 16637                           ; BSR set to: 0
 16638                           ;MOTEapp.c: 414: }
 16639                           ;MOTEapp.c: 415: }
 16640                           ;MOTEapp.c: 416: break;
 16641                           
 16642                           ; BSR set to: 0
 16643                           
 16644                           ; BSR set to: 0
 16645                           
 16646                           ; BSR set to: 0
 16647                           
 16648                           ; BSR set to: 0
 16649                           
 16650                           ; BSR set to: 0
 16651                           ;MOTEapp.c: 412: {
 16652                           ;MOTEapp.c: 413: activeState = moteStartup;
 16653  001782  D118               	goto	l12673
 16654  001784                     l12613:
 16655                           
 16656                           ; BSR set to: 0
 16657                           ;MOTEapp.c: 418: if ( messageReady )
 16658  001784  0100               	movlb	0	; () banked
 16659  001786  51CA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16660  001788  0100               	movlb	0	; () banked
 16661  00178A  B4D8               	btfsc	status,2,c
 16662  00178C  D113               	goto	l12673
 16663                           
 16664                           ; BSR set to: 0
 16665                           ;MOTEapp.c: 419: {
 16666                           ;MOTEapp.c: 420: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 16667  00178E  0E78               	movlw	low _moduleResonseBuffer
 16668  001790  0100               	movlb	0	; () banked
 16669  001792  6FAF               	movwf	strcmp@s1& (0+255),b
 16670  001794  0E01               	movlw	high _moduleResonseBuffer
 16671  001796  0100               	movlb	0	; () banked
 16672  001798  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16673  00179A  0E22               	movlw	low STR_49
 16674  00179C  0100               	movlb	0	; () banked
 16675  00179E  6FB1               	movwf	strcmp@s2& (0+255),b
 16676  0017A0  0E7F               	movlw	high STR_49
 16677  0017A2  0100               	movlb	0	; () banked
 16678  0017A4  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16679  0017A6  EC4E  F02A         	call	_strcmp	;wreg free
 16680  0017AA  0100               	movlb	0	; () banked
 16681  0017AC  51AF               	movf	?_strcmp& (0+255),w,b
 16682  0017AE  0100               	movlb	0	; () banked
 16683  0017B0  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16684  0017B2  A4D8               	btfss	status,2,c
 16685  0017B4  D020               	goto	l12625
 16686                           
 16687                           ; BSR set to: 0
 16688                           ;MOTEapp.c: 421: {
 16689                           ;MOTEapp.c: 422: oled_clear();
 16690  0017B6  ECB6  F02E         	call	_oled_clear	;wreg free
 16691                           
 16692                           ;MOTEapp.c: 423: oled_putString("OTAA Join ",0,0);
 16693  0017BA  0E73               	movlw	low STR_61
 16694  0017BC  0100               	movlb	0	; () banked
 16695  0017BE  6FC0               	movwf	oled_putString@string& (0+255),b
 16696  0017C0  0E7E               	movlw	high STR_61
 16697  0017C2  0100               	movlb	0	; () banked
 16698  0017C4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16699  0017C6  0E00               	movlw	0
 16700  0017C8  0100               	movlb	0	; () banked
 16701  0017CA  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16702  0017CC  0E00               	movlw	0
 16703  0017CE  0100               	movlb	0	; () banked
 16704  0017D0  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16705  0017D2  EC30  F028         	call	_oled_putString	;wreg free
 16706                           
 16707                           ;MOTEapp.c: 424: oled_putString("Successful",0,1);
 16708  0017D6  0E89               	movlw	low STR_51
 16709  0017D8  0100               	movlb	0	; () banked
 16710  0017DA  6FC0               	movwf	oled_putString@string& (0+255),b
 16711  0017DC  0E7E               	movlw	high STR_51
 16712  0017DE  0100               	movlb	0	; () banked
 16713  0017E0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16714  0017E2  0E00               	movlw	0
 16715  0017E4  0100               	movlb	0	; () banked
 16716  0017E6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16717  0017E8  0E01               	movlw	1
 16718  0017EA  0100               	movlb	0	; () banked
 16719  0017EC  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16720  0017EE  EC30  F028         	call	_oled_putString	;wreg free
 16721  0017F2                     l12623:
 16722                           
 16723                           ;MOTEapp.c: 425: activeState = moteJoined;
 16724  0017F2  0E07               	movlw	7
 16725  0017F4  D60A               	goto	L6
 16726  0017F6                     l12625:
 16727                           
 16728                           ; BSR set to: 0
 16729                           ;MOTEapp.c: 427: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 16730  0017F6  0E78               	movlw	low _moduleResonseBuffer
 16731  0017F8  0100               	movlb	0	; () banked
 16732  0017FA  6FAF               	movwf	strcmp@s1& (0+255),b
 16733  0017FC  0E01               	movlw	high _moduleResonseBuffer
 16734  0017FE  0100               	movlb	0	; () banked
 16735  001800  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16736  001802  0E95               	movlw	low STR_63
 16737  001804  0100               	movlb	0	; () banked
 16738  001806  6FB1               	movwf	strcmp@s2& (0+255),b
 16739  001808  0E7F               	movlw	high STR_63
 16740  00180A  0100               	movlb	0	; () banked
 16741  00180C  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16742  00180E  EC4E  F02A         	call	_strcmp	;wreg free
 16743  001812  0100               	movlb	0	; () banked
 16744  001814  51AF               	movf	?_strcmp& (0+255),w,b
 16745  001816  0100               	movlb	0	; () banked
 16746  001818  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16747  00181A  A4D8               	btfss	status,2,c
 16748  00181C  D028               	goto	l12637
 16749                           
 16750                           ; BSR set to: 0
 16751                           ;MOTEapp.c: 428: {
 16752                           ;MOTEapp.c: 429: oled_clear();
 16753  00181E  ECB6  F02E         	call	_oled_clear	;wreg free
 16754                           
 16755                           ;MOTEapp.c: 430: oled_putString("OTAA Join",1,0);
 16756  001822  0EDE               	movlw	low STR_64
 16757  001824  0100               	movlb	0	; () banked
 16758  001826  6FC0               	movwf	oled_putString@string& (0+255),b
 16759  001828  0E7E               	movlw	high STR_64
 16760  00182A  0100               	movlb	0	; () banked
 16761  00182C  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16762  00182E  0E01               	movlw	1
 16763  001830  0100               	movlb	0	; () banked
 16764  001832  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16765  001834  0E00               	movlw	0
 16766  001836  0100               	movlb	0	; () banked
 16767  001838  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16768  00183A  EC30  F028         	call	_oled_putString	;wreg free
 16769                           
 16770                           ;MOTEapp.c: 431: oled_putString("Denied",2,1);
 16771  00183E  0E8E               	movlw	low STR_65
 16772  001840  0100               	movlb	0	; () banked
 16773  001842  6FC0               	movwf	oled_putString@string& (0+255),b
 16774  001844  0E7F               	movlw	high STR_65
 16775  001846  0100               	movlb	0	; () banked
 16776  001848  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16777  00184A  0E02               	movlw	2
 16778  00184C  0100               	movlb	0	; () banked
 16779  00184E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16780  001850  0E01               	movlw	1
 16781  001852  0100               	movlb	0	; () banked
 16782  001854  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16783  001856  EC30  F028         	call	_oled_putString	;wreg free
 16784                           
 16785                           ;MOTEapp.c: 432: sendCommand("mac join otaa");
 16786  00185A  0E32               	movlw	low STR_43
 16787  00185C  0100               	movlb	0	; () banked
 16788  00185E  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 16789  001860  0E7D               	movlw	high STR_43
 16790  001862  0100               	movlb	0	; () banked
 16791  001864  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 16792  001866  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 16793  00186A                     l12635:
 16794                           
 16795                           ;MOTEapp.c: 433: activeState = moteCheckOtaa;
 16796  00186A  0E05               	movlw	5
 16797  00186C  D5CE               	goto	L6
 16798  00186E                     l12637:
 16799                           
 16800                           ; BSR set to: 0
 16801                           ;MOTEapp.c: 435: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 16802  00186E  0E78               	movlw	low _moduleResonseBuffer
 16803  001870  0100               	movlb	0	; () banked
 16804  001872  6FAF               	movwf	strcmp@s1& (0+255),b
 16805  001874  0E01               	movlw	high _moduleResonseBuffer
 16806  001876  0100               	movlb	0	; () banked
 16807  001878  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16808  00187A  0E7E               	movlw	low STR_59
 16809  00187C  0100               	movlb	0	; () banked
 16810  00187E  6FB1               	movwf	strcmp@s2& (0+255),b
 16811  001880  0E7E               	movlw	high STR_59
 16812  001882  0100               	movlb	0	; () banked
 16813  001884  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16814  001886  EC4E  F02A         	call	_strcmp	;wreg free
 16815  00188A                     L7:
 16816  00188A  0100               	movlb	0	; () banked
 16817  00188C  51AF               	movf	?_strcmp& (0+255),w,b
 16818  00188E  0100               	movlb	0	; () banked
 16819  001890  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16820  001892  A4D8               	btfss	status,2,c
 16821  001894  D08F               	goto	l12673
 16822  001896                     l12639:
 16823                           
 16824                           ; BSR set to: 0
 16825                           ;MOTEapp.c: 436: {
 16826                           ;MOTEapp.c: 437: activeState = moteStartup;
 16827  001896  0E00               	movlw	0
 16828  001898  D5B8               	goto	L6
 16829                           
 16830                           ; BSR set to: 0
 16831                           ;MOTEapp.c: 438: }
 16832                           ;MOTEapp.c: 439: }
 16833                           ;MOTEapp.c: 440: break;
 16834                           
 16835                           ; BSR set to: 0
 16836                           
 16837                           ; BSR set to: 0
 16838                           
 16839                           ; BSR set to: 0
 16840  00189A  D08C               	goto	l12673
 16841  00189C                     l12641:
 16842                           
 16843                           ; BSR set to: 0
 16844                           ;MOTEapp.c: 442: sendCommand("mac get dr");
 16845  00189C  0E94               	movlw	low STR_68
 16846  00189E  0100               	movlb	0	; () banked
 16847  0018A0  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 16848  0018A2  0E7E               	movlw	high STR_68
 16849  0018A4  0100               	movlb	0	; () banked
 16850  0018A6  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 16851  0018A8  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 16852  0018AC  D021               	goto	l12651
 16853  0018AE                     l12645:
 16854                           
 16855                           ; BSR set to: 0
 16856                           ;MOTEapp.c: 446: if ( messageReady )
 16857  0018AE  0100               	movlb	0	; () banked
 16858  0018B0  51CA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16859  0018B2  0100               	movlb	0	; () banked
 16860  0018B4  B4D8               	btfsc	status,2,c
 16861  0018B6  D07E               	goto	l12673
 16862                           
 16863                           ; BSR set to: 0
 16864                           ;MOTEapp.c: 447: {
 16865                           ;MOTEapp.c: 448: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 16866  0018B8  0E78               	movlw	low _moduleResonseBuffer
 16867  0018BA  0100               	movlb	0	; () banked
 16868  0018BC  6FAF               	movwf	strcmp@s1& (0+255),b
 16869  0018BE  0E01               	movlw	high _moduleResonseBuffer
 16870  0018C0  0100               	movlb	0	; () banked
 16871  0018C2  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16872  0018C4  0E40               	movlw	low STR_57
 16873  0018C6  0100               	movlb	0	; () banked
 16874  0018C8  6FB1               	movwf	strcmp@s2& (0+255),b
 16875  0018CA  0E7D               	movlw	high STR_57
 16876  0018CC  0100               	movlb	0	; () banked
 16877  0018CE  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16878  0018D0  EC4E  F02A         	call	_strcmp	;wreg free
 16879  0018D4  0100               	movlb	0	; () banked
 16880  0018D6  51AF               	movf	?_strcmp& (0+255),w,b
 16881  0018D8  0100               	movlb	0	; () banked
 16882  0018DA  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16883  0018DC  A4D8               	btfss	status,2,c
 16884  0018DE  D00A               	goto	l12653
 16885                           
 16886                           ; BSR set to: 0
 16887                           ;MOTEapp.c: 449: {
 16888                           ;MOTEapp.c: 450: sendCommand("mac get dr");
 16889  0018E0  0E94               	movlw	low STR_68
 16890  0018E2  0100               	movlb	0	; () banked
 16891  0018E4  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 16892  0018E6  0E7E               	movlw	high STR_68
 16893  0018E8  0100               	movlb	0	; () banked
 16894  0018EA  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 16895  0018EC  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 16896  0018F0                     l12651:
 16897                           
 16898                           ;MOTEapp.c: 451: activeState = moteGetDr;
 16899  0018F0  0E08               	movlw	8
 16900  0018F2  D58B               	goto	L6
 16901  0018F4                     l12653:
 16902                           
 16903                           ; BSR set to: 0
 16904                           ;MOTEapp.c: 453: else
 16905                           ;MOTEapp.c: 454: {
 16906                           ;MOTEapp.c: 455: uint8_t readDataRate;
 16907                           ;MOTEapp.c: 456: readDataRate = moduleResonseBuffer[0] - '0';
 16908  0018F4  0101               	movlb	1	; () banked
 16909  0018F6  5178               	movf	_moduleResonseBuffer& (0+255),w,b
 16910  0018F8  0FD0               	addlw	208
 16911  0018FA  0100               	movlb	0	; () banked
 16912  0018FC  6FC8               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 16913                           
 16914                           ; BSR set to: 0
 16915                           ;MOTEapp.c: 457: dataRateValue = readDataRate;
 16916  0018FE  C0C8  F0F8         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 16917                           
 16918                           ; BSR set to: 0
 16919                           ;MOTEapp.c: 458: joiningComplete = 1;
 16920  001902  0E01               	movlw	1
 16921  001904  0100               	movlb	0	; () banked
 16922  001906  6FC9               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 16923                           
 16924                           ; BSR set to: 0
 16925                           ;MOTEapp.c: 459: }
 16926                           ;MOTEapp.c: 460: }
 16927                           ;MOTEapp.c: 461: break;
 16928                           
 16929                           ; BSR set to: 0
 16930  001908  D055               	goto	l12673
 16931  00190A                     l12659:
 16932                           
 16933                           ; BSR set to: 0
 16934                           ;MOTEapp.c: 463: if (selectButton)
 16935  00190A  0100               	movlb	0	; () banked
 16936  00190C  51C6               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 16937  00190E  0100               	movlb	0	; () banked
 16938  001910  B4D8               	btfsc	status,2,c
 16939  001912  D050               	goto	l12673
 16940                           
 16941                           ; BSR set to: 0
 16942                           ;MOTEapp.c: 464: {
 16943                           ;MOTEapp.c: 465: activeState = moteComFailure;
 16944  001914  0E0A               	movlw	10
 16945  001916  D579               	goto	L6
 16946                           
 16947                           ; BSR set to: 0
 16948                           ;MOTEapp.c: 466: }
 16949                           ;MOTEapp.c: 468: break;
 16950  001918  D04D               	goto	l12673
 16951  00191A                     l12663:
 16952                           
 16953                           ; BSR set to: 0
 16954                           ;MOTEapp.c: 470: DATAEE_WriteByte(0x00, 0x00);
 16955  00191A  0E00               	movlw	0
 16956  00191C  0100               	movlb	0	; () banked
 16957  00191E  6FAF               	movwf	DATAEE_WriteByte@bData& (0+255),b
 16958  001920  0E00               	movlw	0
 16959  001922  EC37  F02C         	call	_DATAEE_WriteByte
 16960                           
 16961                           ;MOTEapp.c: 471: while((!PORTBbits.RB1) && (!PORTBbits.RB0));
 16962  001926  D000               	goto	l449
 16963  001928                     l449:
 16964  001928  A281               	btfss	3969,1,c	;volatile
 16965  00192A  B081               	btfsc	3969,0,c	;volatile
 16966  00192C  D002               	goto	l12667
 16967  00192E  D7FC               	goto	l449
 16968  001930  D000               	goto	l12667
 16969  001932                     l12667:
 16970                           
 16971                           ;MOTEapp.c: 472: _delay((unsigned long)((16)*(48000000/4000.0)));
 16972  001932  0EFA               	movlw	250
 16973  001934  0100               	movlb	0	; () banked
 16974  001936  6FC7               	movwf	??_moteJoiningProcess& (0+255),b
 16975  001938  0E58               	movlw	88
 16976  00193A                     u12657:
 16977  00193A  2EE8               	decfsz	wreg,f,c
 16978  00193C  D7FE               	goto	u12657
 16979  00193E  2FC7               	decfsz	??_moteJoiningProcess& (0+255),f,b
 16980  001940  D7FC               	goto	u12657
 16981  001942  D000               	nop2	
 16982                           
 16983                           ;MOTEapp.c: 473: _delay((unsigned long)((16)*(48000000/4000.0)));
 16984  001944  0EFA               	movlw	250
 16985  001946  0100               	movlb	0	; () banked
 16986  001948  6FC7               	movwf	??_moteJoiningProcess& (0+255),b
 16987  00194A  0E58               	movlw	88
 16988  00194C                     u12667:
 16989  00194C  2EE8               	decfsz	wreg,f,c
 16990  00194E  D7FE               	goto	u12667
 16991  001950  2FC7               	decfsz	??_moteJoiningProcess& (0+255),f,b
 16992  001952  D7FC               	goto	u12667
 16993  001954  D000               	nop2	
 16994                           
 16995                           ;MOTEapp.c: 474: _delay((unsigned long)((16)*(48000000/4000.0)));
 16996  001956  0EFA               	movlw	250
 16997  001958  0100               	movlb	0	; () banked
 16998  00195A  6FC7               	movwf	??_moteJoiningProcess& (0+255),b
 16999  00195C  0E58               	movlw	88
 17000  00195E                     u12677:
 17001  00195E  2EE8               	decfsz	wreg,f,c
 17002  001960  D7FE               	goto	u12677
 17003  001962  2FC7               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17004  001964  D7FC               	goto	u12677
 17005  001966  D000               	nop2	
 17006  001968  00FF               	reset		;# 
 17007                           
 17008                           ;MOTEapp.c: 478: }
 17009                           
 17010                           ;MOTEapp.c: 477: break;
 17011  00196A  D024               	goto	l12673
 17012  00196C                     l12671:
 17013  00196C  0100               	movlb	0	; () banked
 17014  00196E  518C               	movf	_activeState& (0+255),w,b
 17015                           
 17016                           ; Switch size 1, requested type "space"
 17017                           ; Number of cases is 11, Range of values is 0 to 10
 17018                           ; switch strategies available:
 17019                           ; Name         Instructions Cycles
 17020                           ; simple_byte           34    18 (average)
 17021                           ;	Chosen strategy is simple_byte
 17022  001970  0A00               	xorlw	0	; case 0
 17023  001972  B4D8               	btfsc	status,2,c
 17024  001974  D4EB               	goto	l12489
 17025  001976  0A01               	xorlw	1	; case 1
 17026  001978  B4D8               	btfsc	status,2,c
 17027  00197A  D4F1               	goto	l12493
 17028  00197C  0A03               	xorlw	3	; case 2
 17029  00197E  B4D8               	btfsc	status,2,c
 17030  001980  D5A2               	goto	l12531
 17031  001982  0A01               	xorlw	1	; case 3
 17032  001984  B4D8               	btfsc	status,2,c
 17033  001986  D5E6               	goto	l12551
 17034  001988  0A07               	xorlw	7	; case 4
 17035  00198A  B4D8               	btfsc	status,2,c
 17036  00198C  D63C               	goto	l12571
 17037  00198E  0A01               	xorlw	1	; case 5
 17038  001990  B4D8               	btfsc	status,2,c
 17039  001992  D67C               	goto	l12587
 17040  001994  0A03               	xorlw	3	; case 6
 17041  001996  B4D8               	btfsc	status,2,c
 17042  001998  D6F5               	goto	l12613
 17043  00199A  0A01               	xorlw	1	; case 7
 17044  00199C  B4D8               	btfsc	status,2,c
 17045  00199E  D77E               	goto	l12641
 17046  0019A0  0A0F               	xorlw	15	; case 8
 17047  0019A2  B4D8               	btfsc	status,2,c
 17048  0019A4  D784               	goto	l12645
 17049  0019A6  0A01               	xorlw	1	; case 9
 17050  0019A8  B4D8               	btfsc	status,2,c
 17051  0019AA  D7AF               	goto	l12659
 17052  0019AC  0A03               	xorlw	3	; case 10
 17053  0019AE  B4D8               	btfsc	status,2,c
 17054  0019B0  D7B4               	goto	l12663
 17055  0019B2  D4CA               	goto	l400
 17056  0019B4                     l12673:
 17057                           
 17058                           ;MOTEapp.c: 479: return joiningComplete;
 17059  0019B4  0100               	movlb	0	; () banked
 17060  0019B6  51C9               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 17061  0019B8  0012               	return	
 17062                           
 17063                           ; BSR set to: 0
 17064                           
 17065                           ; BSR set to: 0
 17066  0019BA  0012               	return		;funcret
 17067  0019BC                     __end_of_moteJoiningProcess:
 17068                           	opt stack 0
 17069                           tblptru	equ	0xFF8
 17070                           tblptrh	equ	0xFF7
 17071                           tblptrl	equ	0xFF6
 17072                           tablat	equ	0xFF5
 17073                           prodh	equ	0xFF4
 17074                           prodl	equ	0xFF3
 17075                           intcon	equ	0xFF2
 17076                           intcon3	equ	0xFF0
 17077                           postinc0	equ	0xFEE
 17078                           wreg	equ	0xFE8
 17079                           indf1	equ	0xFE7
 17080                           postdec1	equ	0xFE5
 17081                           fsr1h	equ	0xFE2
 17082                           fsr1l	equ	0xFE1
 17083                           indf2	equ	0xFDF
 17084                           fsr2h	equ	0xFDA
 17085                           fsr2l	equ	0xFD9
 17086                           status	equ	0xFD8
 17087                           
 17088 ;; *************** function _strncmp *****************
 17089 ;; Defined at:
 17090 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strncmp.c"
 17091 ;; Parameters:    Size  Location     Type
 17092 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17093 ;;		 -> moduleResonseBuffer(64), 
 17094 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17095 ;;		 -> STR_97(7), STR_95(7), STR_93(7), STR_90(7), 
 17096 ;;		 -> STR_35(5), STR_31(5), 
 17097 ;;  len             2    4[BANK0 ] unsigned int 
 17098 ;; Auto vars:     Size  Location     Type
 17099 ;;		None
 17100 ;; Return value:  Size  Location     Type
 17101 ;;                  2    0[BANK0 ] int 
 17102 ;; Registers used:
 17103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17104 ;; Tracked objects:
 17105 ;;		On entry : 0/0
 17106 ;;		On exit  : 0/0
 17107 ;;		Unchanged: 0/0
 17108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17109 ;;      Params:         0       6       0       0       0       0       0       0       0
 17110 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17111 ;;      Temps:          0       3       0       0       0       0       0       0       0
 17112 ;;      Totals:         0       9       0       0       0       0       0       0       0
 17113 ;;Total ram usage:        9 bytes
 17114 ;; Hardware stack levels used:    1
 17115 ;; Hardware stack levels required when called:   11
 17116 ;; This function calls:
 17117 ;;		Nothing
 17118 ;; This function is called by:
 17119 ;;		_moteJoiningProcess
 17120 ;;		_moteRunningProcess
 17121 ;; This function uses a non-reentrant model
 17122 ;;
 17123                           
 17124                           	psect	text51
 17125  004922                     __ptext51:
 17126                           	opt stack 0
 17127  004922                     _strncmp:
 17128                           	opt stack 17
 17129                           
 17130                           ; BSR set to: 0
 17131                           ;incstack = 0
 17132  004922  D040               	goto	l11839
 17133  004924                     l11829:
 17134  004924  C0AF  FFD9         	movff	strncmp@s1,fsr2l
 17135  004928  C0B0  FFDA         	movff	strncmp@s1+1,fsr2h
 17136  00492C  50DF               	movf	indf2,w,c
 17137  00492E  B4D8               	btfsc	status,2,c
 17138  004930  D011               	goto	l11833
 17139  004932  C0AF  FFD9         	movff	strncmp@s1,fsr2l
 17140  004936  C0B0  FFDA         	movff	strncmp@s1+1,fsr2h
 17141  00493A  50DF               	movf	indf2,w,c
 17142  00493C  0100               	movlb	0	; () banked
 17143  00493E  6FB5               	movwf	??_strncmp& (0+255),b
 17144  004940  C0B1  FFF6         	movff	strncmp@s2,tblptrl
 17145  004944  C0B2  FFF7         	movff	strncmp@s2+1,tblptrh
 17146  004948                     	if	0	;tblptru may be non-zero
 17147  004948                     	endif
 17148  004948                     	if	0	;tblptru may be non-zero
 17149  004948                     	endif
 17150  004948  0008               	tblrd		*
 17151  00494A  50F5               	movf	tablat,w,c
 17152  00494C  0100               	movlb	0	; () banked
 17153  00494E  19B5               	xorwf	??_strncmp& (0+255),w,b
 17154  004950  B4D8               	btfsc	status,2,c
 17155  004952  D021               	goto	l11837
 17156  004954                     l11833:
 17157  004954  C0B1  FFF6         	movff	strncmp@s2,tblptrl
 17158  004958  C0B2  FFF7         	movff	strncmp@s2+1,tblptrh
 17159  00495C                     	if	0	;tblptru may be non-zero
 17160  00495C                     	endif
 17161  00495C                     	if	0	;tblptru may be non-zero
 17162  00495C                     	endif
 17163  00495C  0008               	tblrd		*
 17164  00495E  50F5               	movf	tablat,w,c
 17165  004960  0100               	movlb	0	; () banked
 17166  004962  6FB5               	movwf	??_strncmp& (0+255),b
 17167  004964  6BB6               	clrf	(??_strncmp+1)& (0+255),b
 17168  004966  0100               	movlb	0	; () banked
 17169  004968  1FB5               	comf	??_strncmp& (0+255),f,b
 17170  00496A  1FB6               	comf	(??_strncmp+1)& (0+255),f,b
 17171  00496C  4BB5               	infsnz	??_strncmp& (0+255),f,b
 17172  00496E  2BB6               	incf	(??_strncmp+1)& (0+255),f,b
 17173  004970  C0AF  FFD9         	movff	strncmp@s1,fsr2l
 17174  004974  C0B0  FFDA         	movff	strncmp@s1+1,fsr2h
 17175  004978  50DF               	movf	indf2,w,c
 17176  00497A  0100               	movlb	0	; () banked
 17177  00497C  6FB7               	movwf	(??_strncmp+2)& (0+255),b
 17178  00497E  0100               	movlb	0	; () banked
 17179  004980  51B7               	movf	(??_strncmp+2)& (0+255),w,b
 17180  004982  0100               	movlb	0	; () banked
 17181  004984  25B5               	addwf	??_strncmp& (0+255),w,b
 17182  004986  0100               	movlb	0	; () banked
 17183  004988  6FAF               	movwf	?_strncmp& (0+255),b
 17184  00498A  0E00               	movlw	0
 17185  00498C  0100               	movlb	0	; () banked
 17186  00498E  21B6               	addwfc	(??_strncmp+1)& (0+255),w,b
 17187  004990  0100               	movlb	0	; () banked
 17188  004992  6FB0               	movwf	(?_strncmp+1)& (0+255),b
 17189                           
 17190                           ; BSR set to: 0
 17191  004994  0012               	return	
 17192  004996                     l11837:
 17193                           
 17194                           ; BSR set to: 0
 17195  004996  0100               	movlb	0	; () banked
 17196  004998  4BAF               	infsnz	strncmp@s1& (0+255),f,b
 17197  00499A  2BB0               	incf	(strncmp@s1+1)& (0+255),f,b
 17198  00499C  0100               	movlb	0	; () banked
 17199  00499E  4BB1               	infsnz	strncmp@s2& (0+255),f,b
 17200  0049A0  2BB2               	incf	(strncmp@s2+1)& (0+255),f,b
 17201  0049A2  D000               	goto	l11839
 17202  0049A4                     l11839:
 17203  0049A4  0100               	movlb	0	; () banked
 17204  0049A6  07B3               	decf	strncmp@len& (0+255),f,b
 17205  0049A8  A0D8               	btfss	status,0,c
 17206  0049AA  07B4               	decf	(strncmp@len+1)& (0+255),f,b
 17207  0049AC  0100               	movlb	0	; () banked
 17208  0049AE  29B3               	incf	strncmp@len& (0+255),w,b
 17209  0049B0  E1B9               	bnz	l11829
 17210  0049B2  0100               	movlb	0	; () banked
 17211  0049B4  29B4               	incf	(strncmp@len+1)& (0+255),w,b
 17212  0049B6  A4D8               	btfss	status,2,c
 17213  0049B8  D7B5               	goto	l11829
 17214                           
 17215                           ; BSR set to: 0
 17216                           
 17217                           ; BSR set to: 0
 17218  0049BA  0E00               	movlw	0
 17219  0049BC  0100               	movlb	0	; () banked
 17220  0049BE  6FB0               	movwf	(?_strncmp+1)& (0+255),b
 17221  0049C0  0E00               	movlw	0
 17222  0049C2  6FAF               	movwf	?_strncmp& (0+255),b
 17223  0049C4  0012               	return	
 17224                           
 17225                           ; BSR set to: 0
 17226                           
 17227                           ; BSR set to: 0
 17228  0049C6  0012               	return		;funcret
 17229  0049C8                     __end_of_strncmp:
 17230                           	opt stack 0
 17231                           tblptru	equ	0xFF8
 17232                           tblptrh	equ	0xFF7
 17233                           tblptrl	equ	0xFF6
 17234                           tablat	equ	0xFF5
 17235                           prodh	equ	0xFF4
 17236                           prodl	equ	0xFF3
 17237                           intcon	equ	0xFF2
 17238                           intcon3	equ	0xFF0
 17239                           postinc0	equ	0xFEE
 17240                           wreg	equ	0xFE8
 17241                           indf1	equ	0xFE7
 17242                           postdec1	equ	0xFE5
 17243                           fsr1h	equ	0xFE2
 17244                           fsr1l	equ	0xFE1
 17245                           indf2	equ	0xFDF
 17246                           fsr2h	equ	0xFDA
 17247                           fsr2l	equ	0xFD9
 17248                           status	equ	0xFD8
 17249                           
 17250 ;; *************** function _strcmp *****************
 17251 ;; Defined at:
 17252 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
 17253 ;; Parameters:    Size  Location     Type
 17254 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17255 ;;		 -> moduleResonseBuffer(64), 
 17256 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17257 ;;		 -> STR_89(3), STR_69(14), STR_67(11), STR_63(7), 
 17258 ;;		 -> STR_60(9), STR_59(11), STR_57(14), STR_54(14), 
 17259 ;;		 -> STR_53(3), STR_49(9), STR_45(14), STR_44(3), 
 17260 ;; Auto vars:     Size  Location     Type
 17261 ;;  r               1    5[BANK0 ] char 
 17262 ;; Return value:  Size  Location     Type
 17263 ;;                  2    0[BANK0 ] int 
 17264 ;; Registers used:
 17265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17266 ;; Tracked objects:
 17267 ;;		On entry : 0/0
 17268 ;;		On exit  : 0/0
 17269 ;;		Unchanged: 0/0
 17270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17271 ;;      Params:         0       4       0       0       0       0       0       0       0
 17272 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17273 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17274 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17275 ;;Total ram usage:        6 bytes
 17276 ;; Hardware stack levels used:    1
 17277 ;; Hardware stack levels required when called:   11
 17278 ;; This function calls:
 17279 ;;		Nothing
 17280 ;; This function is called by:
 17281 ;;		_moteJoiningProcess
 17282 ;;		_moteRunningProcess
 17283 ;; This function uses a non-reentrant model
 17284 ;;
 17285                           
 17286                           	psect	text52
 17287  00549C                     __ptext52:
 17288                           	opt stack 0
 17289  00549C                     _strcmp:
 17290                           	opt stack 17
 17291                           
 17292                           ; BSR set to: 0
 17293                           ;incstack = 0
 17294  00549C  D007               	goto	l11849
 17295  00549E                     l11847:
 17296  00549E  0100               	movlb	0	; () banked
 17297  0054A0  4BAF               	infsnz	strcmp@s1& (0+255),f,b
 17298  0054A2  2BB0               	incf	(strcmp@s1+1)& (0+255),f,b
 17299  0054A4  0100               	movlb	0	; () banked
 17300  0054A6  4BB1               	infsnz	strcmp@s2& (0+255),f,b
 17301  0054A8  2BB2               	incf	(strcmp@s2+1)& (0+255),f,b
 17302  0054AA  D000               	goto	l11849
 17303  0054AC                     l11849:
 17304  0054AC  C0AF  FFD9         	movff	strcmp@s1,fsr2l
 17305  0054B0  C0B0  FFDA         	movff	strcmp@s1+1,fsr2h
 17306  0054B4  50DF               	movf	indf2,w,c
 17307  0054B6  0100               	movlb	0	; () banked
 17308  0054B8  6FB3               	movwf	??_strcmp& (0+255),b
 17309  0054BA  C0B1  FFF6         	movff	strcmp@s2,tblptrl
 17310  0054BE  C0B2  FFF7         	movff	strcmp@s2+1,tblptrh
 17311  0054C2                     	if	0	;tblptru may be non-zero
 17312  0054C2                     	endif
 17313  0054C2                     	if	0	;tblptru may be non-zero
 17314  0054C2                     	endif
 17315  0054C2  0008               	tblrd		*
 17316  0054C4  50F5               	movf	tablat,w,c
 17317  0054C6  0800               	sublw	0
 17318  0054C8  0100               	movlb	0	; () banked
 17319  0054CA  25B3               	addwf	??_strcmp& (0+255),w,b
 17320  0054CC  0100               	movlb	0	; () banked
 17321  0054CE  6FB4               	movwf	strcmp@r& (0+255),b
 17322  0054D0  0100               	movlb	0	; () banked
 17323  0054D2  51B4               	movf	strcmp@r& (0+255),w,b
 17324  0054D4  A4D8               	btfss	status,2,c
 17325  0054D6  D009               	goto	l11853
 17326                           
 17327                           ; BSR set to: 0
 17328  0054D8  C0AF  FFD9         	movff	strcmp@s1,fsr2l
 17329  0054DC  C0B0  FFDA         	movff	strcmp@s1+1,fsr2h
 17330  0054E0  50DF               	movf	indf2,w,c
 17331  0054E2  B4D8               	btfsc	status,2,c
 17332  0054E4  D002               	goto	l11853
 17333  0054E6  D7DB               	goto	l11847
 17334                           
 17335                           ; BSR set to: 0
 17336  0054E8  D000               	goto	l11853
 17337  0054EA                     l11853:
 17338                           
 17339                           ; BSR set to: 0
 17340  0054EA  0100               	movlb	0	; () banked
 17341  0054EC  51B4               	movf	strcmp@r& (0+255),w,b
 17342  0054EE  0100               	movlb	0	; () banked
 17343  0054F0  6FAF               	movwf	?_strcmp& (0+255),b
 17344  0054F2  6BB0               	clrf	(?_strcmp+1)& (0+255),b
 17345  0054F4  BFAF               	btfsc	?_strcmp& (0+255),7,b
 17346  0054F6  07B0               	decf	(?_strcmp+1)& (0+255),f,b
 17347  0054F8  0012               	return	
 17348                           
 17349                           ; BSR set to: 0
 17350                           
 17351                           ; BSR set to: 0
 17352  0054FA  0012               	return		;funcret
 17353  0054FC                     __end_of_strcmp:
 17354                           	opt stack 0
 17355                           tblptru	equ	0xFF8
 17356                           tblptrh	equ	0xFF7
 17357                           tblptrl	equ	0xFF6
 17358                           tablat	equ	0xFF5
 17359                           prodh	equ	0xFF4
 17360                           prodl	equ	0xFF3
 17361                           intcon	equ	0xFF2
 17362                           intcon3	equ	0xFF0
 17363                           postinc0	equ	0xFEE
 17364                           wreg	equ	0xFE8
 17365                           indf1	equ	0xFE7
 17366                           postdec1	equ	0xFE5
 17367                           fsr1h	equ	0xFE2
 17368                           fsr1l	equ	0xFE1
 17369                           indf2	equ	0xFDF
 17370                           fsr2h	equ	0xFDA
 17371                           fsr2l	equ	0xFD9
 17372                           status	equ	0xFD8
 17373                           
 17374 ;; *************** function _moteApp_delayms *****************
 17375 ;; Defined at:
 17376 ;;		line 165 in file "../Includes/Board/MOTEapp.c"
 17377 ;; Parameters:    Size  Location     Type
 17378 ;;  length          2    0[BANK0 ] unsigned int 
 17379 ;; Auto vars:     Size  Location     Type
 17380 ;;  counter         2    3[BANK0 ] unsigned int 
 17381 ;; Return value:  Size  Location     Type
 17382 ;;		None               void
 17383 ;; Registers used:
 17384 ;;		wreg, status,2, status,0
 17385 ;; Tracked objects:
 17386 ;;		On entry : 0/0
 17387 ;;		On exit  : 0/0
 17388 ;;		Unchanged: 0/0
 17389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17390 ;;      Params:         0       2       0       0       0       0       0       0       0
 17391 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17392 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17393 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17394 ;;Total ram usage:        5 bytes
 17395 ;; Hardware stack levels used:    1
 17396 ;; Hardware stack levels required when called:   11
 17397 ;; This function calls:
 17398 ;;		Nothing
 17399 ;; This function is called by:
 17400 ;;		_main
 17401 ;;		_test_powerup
 17402 ;;		_moduleResync
 17403 ;;		_moteJoiningProcess
 17404 ;;		_moteRunningProcess
 17405 ;;		_moteApp_GoToSleep
 17406 ;;		_moteApp_setSensorsInput
 17407 ;; This function uses a non-reentrant model
 17408 ;;
 17409                           
 17410                           	psect	text53
 17411  005962                     __ptext53:
 17412                           	opt stack 0
 17413  005962                     _moteApp_delayms:
 17414                           	opt stack 16
 17415                           
 17416                           ;MOTEapp.c: 167: uint16_t counter;
 17417                           ;MOTEapp.c: 168: for(counter = 0; counter < length; counter++)
 17418                           
 17419                           ; BSR set to: 0
 17420                           ;incstack = 0
 17421  005962  0E00               	movlw	0
 17422  005964  0100               	movlb	0	; () banked
 17423  005966  6FB3               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 17424  005968  0E00               	movlw	0
 17425  00596A  6FB2               	movwf	moteApp_delayms@counter& (0+255),b
 17426  00596C  D00C               	goto	l355
 17427  00596E                     l11137:
 17428                           
 17429                           ; BSR set to: 0
 17430                           ;MOTEapp.c: 169: {
 17431                           ;MOTEapp.c: 170: _delay((unsigned long)((1)*(48000000/4000.0)));
 17432  00596E  0E10               	movlw	16
 17433  005970  0100               	movlb	0	; () banked
 17434  005972  6FB1               	movwf	??_moteApp_delayms& (0+255),b
 17435  005974  0E94               	movlw	148
 17436  005976                     u12687:
 17437  005976  2EE8               	decfsz	wreg,f,c
 17438  005978  D7FE               	goto	u12687
 17439  00597A  2FB1               	decfsz	??_moteApp_delayms& (0+255),f,b
 17440  00597C  D7FC               	goto	u12687
 17441  00597E  D000               	nop2	
 17442  005980  0100               	movlb	0	; () banked
 17443  005982  4BB2               	infsnz	moteApp_delayms@counter& (0+255),f,b
 17444  005984  2BB3               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 17445  005986                     l355:
 17446                           
 17447                           ; BSR set to: 0
 17448  005986  0100               	movlb	0	; () banked
 17449  005988  51AF               	movf	moteApp_delayms@length& (0+255),w,b
 17450  00598A  0100               	movlb	0	; () banked
 17451  00598C  5DB2               	subwf	moteApp_delayms@counter& (0+255),w,b
 17452  00598E  0100               	movlb	0	; () banked
 17453  005990  51B0               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 17454  005992  0100               	movlb	0	; () banked
 17455  005994  59B3               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 17456  005996  A0D8               	btfss	status,0,c
 17457  005998  D7EA               	goto	l11137
 17458                           
 17459                           ; BSR set to: 0
 17460                           
 17461                           ; BSR set to: 0
 17462  00599A  0012               	return		;funcret
 17463  00599C                     __end_of_moteApp_delayms:
 17464                           	opt stack 0
 17465                           tblptru	equ	0xFF8
 17466                           tblptrh	equ	0xFF7
 17467                           tblptrl	equ	0xFF6
 17468                           tablat	equ	0xFF5
 17469                           prodh	equ	0xFF4
 17470                           prodl	equ	0xFF3
 17471                           intcon	equ	0xFF2
 17472                           intcon3	equ	0xFF0
 17473                           postinc0	equ	0xFEE
 17474                           wreg	equ	0xFE8
 17475                           indf1	equ	0xFE7
 17476                           postdec1	equ	0xFE5
 17477                           fsr1h	equ	0xFE2
 17478                           fsr1l	equ	0xFE1
 17479                           indf2	equ	0xFDF
 17480                           fsr2h	equ	0xFDA
 17481                           fsr2l	equ	0xFD9
 17482                           status	equ	0xFD8
 17483                           
 17484 ;; *************** function _DATAEE_WriteByte *****************
 17485 ;; Defined at:
 17486 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 17487 ;; Parameters:    Size  Location     Type
 17488 ;;  bAdd            1    wreg     unsigned char 
 17489 ;;  bData           1    0[BANK0 ] unsigned char 
 17490 ;; Auto vars:     Size  Location     Type
 17491 ;;  bAdd            1    1[BANK0 ] unsigned char 
 17492 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 17493 ;; Return value:  Size  Location     Type
 17494 ;;		None               void
 17495 ;; Registers used:
 17496 ;;		wreg, status,2
 17497 ;; Tracked objects:
 17498 ;;		On entry : 0/0
 17499 ;;		On exit  : 0/0
 17500 ;;		Unchanged: 0/0
 17501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17502 ;;      Params:         0       1       0       0       0       0       0       0       0
 17503 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17504 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17505 ;;      Totals:         0       3       0       0       0       0       0       0       0
 17506 ;;Total ram usage:        3 bytes
 17507 ;; Hardware stack levels used:    1
 17508 ;; Hardware stack levels required when called:   11
 17509 ;; This function calls:
 17510 ;;		Nothing
 17511 ;; This function is called by:
 17512 ;;		_main
 17513 ;;		_moteJoiningProcess
 17514 ;; This function uses a non-reentrant model
 17515 ;;
 17516                           
 17517                           	psect	text54
 17518  00586E                     __ptext54:
 17519                           	opt stack 0
 17520  00586E                     _DATAEE_WriteByte:
 17521                           	opt stack 17
 17522                           
 17523                           ; BSR set to: 0
 17524                           ;incstack = 0
 17525                           ;DATAEE_WriteByte@bAdd stored from wreg
 17526  00586E  0100               	movlb	0	; () banked
 17527  005870  6FB0               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 17528                           
 17529                           ; BSR set to: 0
 17530                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 17531  005872  0E00               	movlw	0
 17532  005874  BEF2               	btfsc	intcon,7,c	;volatile
 17533  005876  0E01               	movlw	1
 17534  005878  0100               	movlb	0	; () banked
 17535  00587A  6FB1               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 17536                           
 17537                           ; BSR set to: 0
 17538                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 17539  00587C  C0B0  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 17540                           
 17541                           ; BSR set to: 0
 17542                           ;memory.c: 171: EEDATA = bData;
 17543  005880  C0AF  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 17544                           
 17545                           ; BSR set to: 0
 17546                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 17547  005884  9EA6               	bcf	4006,7,c	;volatile
 17548                           
 17549                           ; BSR set to: 0
 17550                           ;memory.c: 173: EECON1bits.CFGS = 0;
 17551  005886  9CA6               	bcf	4006,6,c	;volatile
 17552                           
 17553                           ; BSR set to: 0
 17554                           ;memory.c: 174: EECON1bits.WREN = 1;
 17555  005888  84A6               	bsf	4006,2,c	;volatile
 17556                           
 17557                           ; BSR set to: 0
 17558                           ;memory.c: 175: INTCONbits.GIE = 0;
 17559  00588A  9EF2               	bcf	intcon,7,c	;volatile
 17560                           
 17561                           ; BSR set to: 0
 17562                           ;memory.c: 176: EECON2 = 0x55;
 17563  00588C  0E55               	movlw	85
 17564  00588E  6EA7               	movwf	4007,c	;volatile
 17565                           
 17566                           ; BSR set to: 0
 17567                           ;memory.c: 177: EECON2 = 0xAA;
 17568  005890  0EAA               	movlw	170
 17569  005892  6EA7               	movwf	4007,c	;volatile
 17570                           
 17571                           ; BSR set to: 0
 17572                           ;memory.c: 178: EECON1bits.WR = 1;
 17573  005894  82A6               	bsf	4006,1,c	;volatile
 17574                           
 17575                           ;memory.c: 180: while (EECON1bits.WR)
 17576  005896  D000               	goto	l1447
 17577  005898                     l1447:
 17578                           
 17579                           ; BSR set to: 0
 17580  005898  B2A6               	btfsc	4006,1,c	;volatile
 17581  00589A  D7FE               	goto	l1447
 17582                           
 17583                           ; BSR set to: 0
 17584                           ;memory.c: 182: }
 17585                           ;memory.c: 184: EECON1bits.WREN = 0;
 17586  00589C  94A6               	bcf	4006,2,c	;volatile
 17587                           
 17588                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 17589  00589E  0100               	movlb	0	; () banked
 17590  0058A0  B1B1               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 17591  0058A2  D002               	bra	u10285
 17592  0058A4  9EF2               	bcf	intcon,7,c	;volatile
 17593  0058A6  D001               	bra	u10286
 17594  0058A8                     u10285:
 17595  0058A8  8EF2               	bsf	intcon,7,c	;volatile
 17596  0058AA                     u10286:
 17597  0058AA  0012               	return		;funcret
 17598  0058AC                     __end_of_DATAEE_WriteByte:
 17599                           	opt stack 0
 17600                           tblptru	equ	0xFF8
 17601                           tblptrh	equ	0xFF7
 17602                           tblptrl	equ	0xFF6
 17603                           tablat	equ	0xFF5
 17604                           prodh	equ	0xFF4
 17605                           prodl	equ	0xFF3
 17606                           intcon	equ	0xFF2
 17607                           intcon3	equ	0xFF0
 17608                           postinc0	equ	0xFEE
 17609                           wreg	equ	0xFE8
 17610                           indf1	equ	0xFE7
 17611                           postdec1	equ	0xFE5
 17612                           fsr1h	equ	0xFE2
 17613                           fsr1l	equ	0xFE1
 17614                           indf2	equ	0xFDF
 17615                           fsr2h	equ	0xFDA
 17616                           fsr2l	equ	0xFD9
 17617                           status	equ	0xFD8
 17618                           
 17619 ;; *************** function _USBapp_exitCDCState *****************
 17620 ;; Defined at:
 17621 ;;		line 139 in file "../Includes/Board/USBapp.c"
 17622 ;; Parameters:    Size  Location     Type
 17623 ;;  usbState        1    wreg     enum E7589
 17624 ;; Auto vars:     Size  Location     Type
 17625 ;;  usbState        1    0[BANK0 ] enum E7589
 17626 ;; Return value:  Size  Location     Type
 17627 ;;		None               void
 17628 ;; Registers used:
 17629 ;;		wreg
 17630 ;; Tracked objects:
 17631 ;;		On entry : 0/0
 17632 ;;		On exit  : 0/0
 17633 ;;		Unchanged: 0/0
 17634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17635 ;;      Params:         0       0       0       0       0       0       0       0       0
 17636 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17637 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17638 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17639 ;;Total ram usage:        1 bytes
 17640 ;; Hardware stack levels used:    1
 17641 ;; Hardware stack levels required when called:   11
 17642 ;; This function calls:
 17643 ;;		Nothing
 17644 ;; This function is called by:
 17645 ;;		_moteHandler
 17646 ;; This function uses a non-reentrant model
 17647 ;;
 17648                           
 17649                           	psect	text55
 17650  005EEE                     __ptext55:
 17651                           	opt stack 0
 17652  005EEE                     _USBapp_exitCDCState:
 17653                           	opt stack 18
 17654                           
 17655                           ;incstack = 0
 17656                           ;USBapp_exitCDCState@usbState stored from wreg
 17657  005EEE  0100               	movlb	0	; () banked
 17658  005EF0  6FAF               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 17659                           
 17660                           ; BSR set to: 0
 17661                           ;USBapp.c: 141: exitUSB = usbState;
 17662  005EF2  C0AF  F0F9         	movff	USBapp_exitCDCState@usbState,_exitUSB
 17663                           
 17664                           ; BSR set to: 0
 17665  005EF6  0012               	return		;funcret
 17666  005EF8                     __end_of_USBapp_exitCDCState:
 17667                           	opt stack 0
 17668                           tblptru	equ	0xFF8
 17669                           tblptrh	equ	0xFF7
 17670                           tblptrl	equ	0xFF6
 17671                           tablat	equ	0xFF5
 17672                           prodh	equ	0xFF4
 17673                           prodl	equ	0xFF3
 17674                           intcon	equ	0xFF2
 17675                           intcon3	equ	0xFF0
 17676                           postinc0	equ	0xFEE
 17677                           wreg	equ	0xFE8
 17678                           indf1	equ	0xFE7
 17679                           postdec1	equ	0xFE5
 17680                           fsr1h	equ	0xFE2
 17681                           fsr1l	equ	0xFE1
 17682                           indf2	equ	0xFDF
 17683                           fsr2h	equ	0xFDA
 17684                           fsr2l	equ	0xFD9
 17685                           status	equ	0xFD8
 17686                           
 17687 ;; *************** function _USBapp_exitCDC *****************
 17688 ;; Defined at:
 17689 ;;		line 134 in file "../Includes/Board/USBapp.c"
 17690 ;; Parameters:    Size  Location     Type
 17691 ;;		None
 17692 ;; Auto vars:     Size  Location     Type
 17693 ;;		None
 17694 ;; Return value:  Size  Location     Type
 17695 ;;                  1    wreg      enum E7652
 17696 ;; Registers used:
 17697 ;;		wreg, status,2
 17698 ;; Tracked objects:
 17699 ;;		On entry : 0/0
 17700 ;;		On exit  : 0/0
 17701 ;;		Unchanged: 0/0
 17702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17703 ;;      Params:         0       0       0       0       0       0       0       0       0
 17704 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17705 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17706 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17707 ;;Total ram usage:        0 bytes
 17708 ;; Hardware stack levels used:    1
 17709 ;; Hardware stack levels required when called:   11
 17710 ;; This function calls:
 17711 ;;		Nothing
 17712 ;; This function is called by:
 17713 ;;		_moteHandler
 17714 ;; This function uses a non-reentrant model
 17715 ;;
 17716                           
 17717                           	psect	text56
 17718  005F26                     __ptext56:
 17719                           	opt stack 0
 17720  005F26                     _USBapp_exitCDC:
 17721                           	opt stack 18
 17722                           
 17723                           ;USBapp.c: 136: return exitUSB;
 17724                           
 17725                           ; BSR set to: 0
 17726                           ;incstack = 0
 17727  005F26  0100               	movlb	0	; () banked
 17728  005F28  51F9               	movf	_exitUSB& (0+255),w,b
 17729  005F2A  0012               	return	
 17730                           
 17731                           ; BSR set to: 0
 17732                           
 17733                           ; BSR set to: 0
 17734  005F2C  0012               	return		;funcret
 17735  005F2E                     __end_of_USBapp_exitCDC:
 17736                           	opt stack 0
 17737                           tblptru	equ	0xFF8
 17738                           tblptrh	equ	0xFF7
 17739                           tblptrl	equ	0xFF6
 17740                           tablat	equ	0xFF5
 17741                           prodh	equ	0xFF4
 17742                           prodl	equ	0xFF3
 17743                           intcon	equ	0xFF2
 17744                           intcon3	equ	0xFF0
 17745                           postinc0	equ	0xFEE
 17746                           wreg	equ	0xFE8
 17747                           indf1	equ	0xFE7
 17748                           postdec1	equ	0xFE5
 17749                           fsr1h	equ	0xFE2
 17750                           fsr1l	equ	0xFE1
 17751                           indf2	equ	0xFDF
 17752                           fsr2h	equ	0xFDA
 17753                           fsr2l	equ	0xFD9
 17754                           status	equ	0xFD8
 17755                           
 17756 ;; *************** function _TMRapp_Handler *****************
 17757 ;; Defined at:
 17758 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 17759 ;; Parameters:    Size  Location     Type
 17760 ;;		None
 17761 ;; Auto vars:     Size  Location     Type
 17762 ;;		None
 17763 ;; Return value:  Size  Location     Type
 17764 ;;		None               void
 17765 ;; Registers used:
 17766 ;;		wreg, status,2, status,0, cstack
 17767 ;; Tracked objects:
 17768 ;;		On entry : 0/0
 17769 ;;		On exit  : 0/0
 17770 ;;		Unchanged: 0/0
 17771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17772 ;;      Params:         0       0       0       0       0       0       0       0       0
 17773 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17774 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17775 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17776 ;;Total ram usage:        0 bytes
 17777 ;; Hardware stack levels used:    1
 17778 ;; Hardware stack levels required when called:   12
 17779 ;; This function calls:
 17780 ;;		___almod
 17781 ;;		___lwmod
 17782 ;; This function is called by:
 17783 ;;		_moteHandler
 17784 ;; This function uses a non-reentrant model
 17785 ;;
 17786                           
 17787                           	psect	text57
 17788  0029DA                     __ptext57:
 17789                           	opt stack 0
 17790  0029DA                     _TMRapp_Handler:
 17791                           	opt stack 17
 17792                           
 17793                           ;TMRapp.c: 60: timerMsTickCount++;
 17794                           
 17795                           ; BSR set to: 0
 17796                           ;incstack = 0
 17797  0029DA  0100               	movlb	0	; () banked
 17798  0029DC  4B82               	infsnz	_timerMsTickCount& (0+255),f,b
 17799  0029DE  2B83               	incf	(_timerMsTickCount+1)& (0+255),f,b
 17800                           
 17801                           ; BSR set to: 0
 17802                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 17803  0029E0  C082  F0AF         	movff	_timerMsTickCount,___lwmod@dividend
 17804  0029E4  C083  F0B0         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 17805  0029E8  0E00               	movlw	0
 17806  0029EA  0100               	movlb	0	; () banked
 17807  0029EC  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
 17808  0029EE  0E0A               	movlw	10
 17809  0029F0  6FB1               	movwf	___lwmod@divisor& (0+255),b
 17810  0029F2  EC4F  F029         	call	___lwmod	;wreg free
 17811  0029F6  0100               	movlb	0	; () banked
 17812  0029F8  51AF               	movf	?___lwmod& (0+255),w,b
 17813  0029FA  0100               	movlb	0	; () banked
 17814  0029FC  11B0               	iorwf	(?___lwmod+1)& (0+255),w,b
 17815  0029FE  A4D8               	btfss	status,2,c
 17816  002A00  0012               	return	
 17817                           
 17818                           ; BSR set to: 0
 17819                           ;TMRapp.c: 63: {
 17820                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 17821  002A02  0100               	movlb	0	; () banked
 17822  002A04  838E               	bsf	_appTimer& (0+255),1,b
 17823                           
 17824                           ; BSR set to: 0
 17825                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 17826  002A06  C082  F0AF         	movff	_timerMsTickCount,___lwmod@dividend
 17827  002A0A  C083  F0B0         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 17828  002A0E  0E00               	movlw	0
 17829  002A10  0100               	movlb	0	; () banked
 17830  002A12  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
 17831  002A14  0E64               	movlw	100
 17832  002A16  6FB1               	movwf	___lwmod@divisor& (0+255),b
 17833  002A18  EC4F  F029         	call	___lwmod	;wreg free
 17834  002A1C  0100               	movlb	0	; () banked
 17835  002A1E  51AF               	movf	?___lwmod& (0+255),w,b
 17836  002A20  0100               	movlb	0	; () banked
 17837  002A22  11B0               	iorwf	(?___lwmod+1)& (0+255),w,b
 17838  002A24  A4D8               	btfss	status,2,c
 17839  002A26  0012               	return	
 17840                           
 17841                           ; BSR set to: 0
 17842                           ;TMRapp.c: 66: {
 17843                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 17844  002A28  0100               	movlb	0	; () banked
 17845  002A2A  858E               	bsf	_appTimer& (0+255),2,b
 17846                           
 17847                           ; BSR set to: 0
 17848                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 17849  002A2C  C082  F0AF         	movff	_timerMsTickCount,___lwmod@dividend
 17850  002A30  C083  F0B0         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 17851  002A34  0E03               	movlw	3
 17852  002A36  0100               	movlb	0	; () banked
 17853  002A38  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
 17854  002A3A  0EE8               	movlw	232
 17855  002A3C  6FB1               	movwf	___lwmod@divisor& (0+255),b
 17856  002A3E  EC4F  F029         	call	___lwmod	;wreg free
 17857  002A42  0100               	movlb	0	; () banked
 17858  002A44  51AF               	movf	?___lwmod& (0+255),w,b
 17859  002A46  0100               	movlb	0	; () banked
 17860  002A48  11B0               	iorwf	(?___lwmod+1)& (0+255),w,b
 17861  002A4A  A4D8               	btfss	status,2,c
 17862  002A4C  0012               	return	
 17863                           
 17864                           ; BSR set to: 0
 17865                           ;TMRapp.c: 69: {
 17866                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 17867  002A4E  0100               	movlb	0	; () banked
 17868  002A50  878E               	bsf	_appTimer& (0+255),3,b
 17869                           
 17870                           ; BSR set to: 0
 17871                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 17872  002A52  C082  F0AF         	movff	_timerMsTickCount,___almod@dividend
 17873  002A56  C083  F0B0         	movff	_timerMsTickCount+1,___almod@dividend+1
 17874  002A5A  0100               	movlb	0	; () banked
 17875  002A5C  6BB1               	clrf	(___almod@dividend+2)& (0+255),b
 17876  002A5E  6BB2               	clrf	(___almod@dividend+3)& (0+255),b
 17877  002A60  0E60               	movlw	96
 17878  002A62  0100               	movlb	0	; () banked
 17879  002A64  6FB3               	movwf	___almod@divisor& (0+255),b
 17880  002A66  0EEA               	movlw	234
 17881  002A68  6FB4               	movwf	(___almod@divisor+1)& (0+255),b
 17882  002A6A  0E00               	movlw	0
 17883  002A6C  6FB5               	movwf	(___almod@divisor+2)& (0+255),b
 17884  002A6E  0E00               	movlw	0
 17885  002A70  6FB6               	movwf	(___almod@divisor+3)& (0+255),b
 17886  002A72  EC26  F01A         	call	___almod	;wreg free
 17887  002A76  0100               	movlb	0	; () banked
 17888  002A78  51AF               	movf	?___almod& (0+255),w,b
 17889  002A7A  0100               	movlb	0	; () banked
 17890  002A7C  11B0               	iorwf	(?___almod+1)& (0+255),w,b
 17891  002A7E  0100               	movlb	0	; () banked
 17892  002A80  11B1               	iorwf	(?___almod+2)& (0+255),w,b
 17893  002A82  0100               	movlb	0	; () banked
 17894  002A84  11B2               	iorwf	(?___almod+3)& (0+255),w,b
 17895  002A86  A4D8               	btfss	status,2,c
 17896  002A88  0012               	return	
 17897                           
 17898                           ; BSR set to: 0
 17899                           ;TMRapp.c: 72: {
 17900                           ;TMRapp.c: 73: timerMinTickCount++;
 17901  002A8A  0100               	movlb	0	; () banked
 17902  002A8C  4B80               	infsnz	_timerMinTickCount& (0+255),f,b
 17903  002A8E  2B81               	incf	(_timerMinTickCount+1)& (0+255),f,b
 17904                           
 17905                           ; BSR set to: 0
 17906                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 17907  002A90  0100               	movlb	0	; () banked
 17908  002A92  898E               	bsf	_appTimer& (0+255),4,b
 17909                           
 17910                           ; BSR set to: 0
 17911                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 17912  002A94  C080  F0AF         	movff	_timerMinTickCount,___lwmod@dividend
 17913  002A98  C081  F0B0         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 17914  002A9C  0E00               	movlw	0
 17915  002A9E  0100               	movlb	0	; () banked
 17916  002AA0  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
 17917  002AA2  0E3C               	movlw	60
 17918  002AA4  6FB1               	movwf	___lwmod@divisor& (0+255),b
 17919  002AA6  EC4F  F029         	call	___lwmod	;wreg free
 17920  002AAA  0100               	movlb	0	; () banked
 17921  002AAC  51AF               	movf	?___lwmod& (0+255),w,b
 17922  002AAE  0100               	movlb	0	; () banked
 17923  002AB0  11B0               	iorwf	(?___lwmod+1)& (0+255),w,b
 17924  002AB2  A4D8               	btfss	status,2,c
 17925  002AB4  0012               	return	
 17926                           
 17927                           ; BSR set to: 0
 17928                           ;TMRapp.c: 76: {
 17929                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 17930  002AB6  0100               	movlb	0	; () banked
 17931  002AB8  8B8E               	bsf	_appTimer& (0+255),5,b
 17932                           
 17933                           ; BSR set to: 0
 17934                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 17935  002ABA  C080  F0AF         	movff	_timerMinTickCount,___lwmod@dividend
 17936  002ABE  C081  F0B0         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 17937  002AC2  0E02               	movlw	2
 17938  002AC4  0100               	movlb	0	; () banked
 17939  002AC6  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
 17940  002AC8  0ED0               	movlw	208
 17941  002ACA  6FB1               	movwf	___lwmod@divisor& (0+255),b
 17942  002ACC  EC4F  F029         	call	___lwmod	;wreg free
 17943  002AD0  0100               	movlb	0	; () banked
 17944  002AD2  51AF               	movf	?___lwmod& (0+255),w,b
 17945  002AD4  0100               	movlb	0	; () banked
 17946  002AD6  11B0               	iorwf	(?___lwmod+1)& (0+255),w,b
 17947  002AD8  A4D8               	btfss	status,2,c
 17948  002ADA  0012               	return	
 17949                           
 17950                           ; BSR set to: 0
 17951                           ;TMRapp.c: 79: {
 17952                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 17953  002ADC  0100               	movlb	0	; () banked
 17954  002ADE  8D8E               	bsf	_appTimer& (0+255),6,b
 17955                           
 17956                           ; BSR set to: 0
 17957                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 17958  002AE0  C080  F0AF         	movff	_timerMinTickCount,___lwmod@dividend
 17959  002AE4  C081  F0B0         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 17960  002AE8  0E05               	movlw	5
 17961  002AEA  0100               	movlb	0	; () banked
 17962  002AEC  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
 17963  002AEE  0EA0               	movlw	160
 17964  002AF0  6FB1               	movwf	___lwmod@divisor& (0+255),b
 17965  002AF2  EC4F  F029         	call	___lwmod	;wreg free
 17966  002AF6  0100               	movlb	0	; () banked
 17967  002AF8  51AF               	movf	?___lwmod& (0+255),w,b
 17968  002AFA  0100               	movlb	0	; () banked
 17969  002AFC  11B0               	iorwf	(?___lwmod+1)& (0+255),w,b
 17970  002AFE  A4D8               	btfss	status,2,c
 17971  002B00  0012               	return	
 17972                           
 17973                           ; BSR set to: 0
 17974                           ;TMRapp.c: 82: {
 17975                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 17976  002B02  0100               	movlb	0	; () banked
 17977  002B04  8F8E               	bsf	_appTimer& (0+255),7,b
 17978                           
 17979                           ; BSR set to: 0
 17980                           ;TMRapp.c: 85: timerMsTickCount = 0;
 17981  002B06  0E00               	movlw	0
 17982  002B08  0100               	movlb	0	; () banked
 17983  002B0A  6F83               	movwf	(_timerMsTickCount+1)& (0+255),b
 17984  002B0C  0E00               	movlw	0
 17985  002B0E  6F82               	movwf	_timerMsTickCount& (0+255),b
 17986                           
 17987                           ;TMRapp.c: 86: timerMinTickCount = 0;
 17988  002B10  0E00               	movlw	0
 17989  002B12  0100               	movlb	0	; () banked
 17990  002B14  6F81               	movwf	(_timerMinTickCount+1)& (0+255),b
 17991  002B16  0E00               	movlw	0
 17992  002B18  6F80               	movwf	_timerMinTickCount& (0+255),b
 17993                           
 17994                           ; BSR set to: 0
 17995                           
 17996                           ; BSR set to: 0
 17997                           
 17998                           ; BSR set to: 0
 17999                           
 18000                           ; BSR set to: 0
 18001                           
 18002                           ; BSR set to: 0
 18003                           
 18004                           ; BSR set to: 0
 18005  002B1A  0012               	return	
 18006                           
 18007                           ; BSR set to: 0
 18008                           
 18009                           ; BSR set to: 0
 18010  002B1C  0012               	return		;funcret
 18011  002B1E                     __end_of_TMRapp_Handler:
 18012                           	opt stack 0
 18013                           tblptru	equ	0xFF8
 18014                           tblptrh	equ	0xFF7
 18015                           tblptrl	equ	0xFF6
 18016                           tablat	equ	0xFF5
 18017                           prodh	equ	0xFF4
 18018                           prodl	equ	0xFF3
 18019                           intcon	equ	0xFF2
 18020                           intcon3	equ	0xFF0
 18021                           postinc0	equ	0xFEE
 18022                           wreg	equ	0xFE8
 18023                           indf1	equ	0xFE7
 18024                           postdec1	equ	0xFE5
 18025                           fsr1h	equ	0xFE2
 18026                           fsr1l	equ	0xFE1
 18027                           indf2	equ	0xFDF
 18028                           fsr2h	equ	0xFDA
 18029                           fsr2l	equ	0xFD9
 18030                           status	equ	0xFD8
 18031                           
 18032 ;; *************** function ___lwmod *****************
 18033 ;; Defined at:
 18034 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
 18035 ;; Parameters:    Size  Location     Type
 18036 ;;  dividend        2    0[BANK0 ] unsigned int 
 18037 ;;  divisor         2    2[BANK0 ] unsigned int 
 18038 ;; Auto vars:     Size  Location     Type
 18039 ;;  counter         1    4[BANK0 ] unsigned char 
 18040 ;; Return value:  Size  Location     Type
 18041 ;;                  2    0[BANK0 ] unsigned int 
 18042 ;; Registers used:
 18043 ;;		wreg, status,2, status,0
 18044 ;; Tracked objects:
 18045 ;;		On entry : 0/0
 18046 ;;		On exit  : 0/0
 18047 ;;		Unchanged: 0/0
 18048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18049 ;;      Params:         0       4       0       0       0       0       0       0       0
 18050 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18051 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18052 ;;      Totals:         0       5       0       0       0       0       0       0       0
 18053 ;;Total ram usage:        5 bytes
 18054 ;; Hardware stack levels used:    1
 18055 ;; Hardware stack levels required when called:   11
 18056 ;; This function calls:
 18057 ;;		Nothing
 18058 ;; This function is called by:
 18059 ;;		_TMRapp_Handler
 18060 ;;		_moteApp_add16bToDataBuffer
 18061 ;;		_oled_putUint16
 18062 ;; This function uses a non-reentrant model
 18063 ;;
 18064                           
 18065                           	psect	text58
 18066  00529E                     __ptext58:
 18067                           	opt stack 0
 18068  00529E                     ___lwmod:
 18069                           	opt stack 17
 18070                           
 18071                           ; BSR set to: 0
 18072                           ;incstack = 0
 18073  00529E  0100               	movlb	0	; () banked
 18074  0052A0  51B1               	movf	___lwmod@divisor& (0+255),w,b
 18075  0052A2  0100               	movlb	0	; () banked
 18076  0052A4  11B2               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18077  0052A6  B4D8               	btfsc	status,2,c
 18078  0052A8  D02B               	goto	l2637
 18079                           
 18080                           ; BSR set to: 0
 18081  0052AA  0E01               	movlw	1
 18082  0052AC  0100               	movlb	0	; () banked
 18083  0052AE  6FB3               	movwf	___lwmod@counter& (0+255),b
 18084  0052B0  D007               	goto	l12271
 18085  0052B2                     l12269:
 18086                           
 18087                           ; BSR set to: 0
 18088  0052B2  0100               	movlb	0	; () banked
 18089  0052B4  90D8               	bcf	status,0,c
 18090  0052B6  37B1               	rlcf	___lwmod@divisor& (0+255),f,b
 18091  0052B8  37B2               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18092  0052BA  0100               	movlb	0	; () banked
 18093  0052BC  2BB3               	incf	___lwmod@counter& (0+255),f,b
 18094  0052BE  D000               	goto	l12271
 18095  0052C0                     l12271:
 18096                           
 18097                           ; BSR set to: 0
 18098  0052C0  0100               	movlb	0	; () banked
 18099  0052C2  BFB2               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
 18100  0052C4  D002               	goto	l12273
 18101  0052C6  D7F5               	goto	l12269
 18102                           
 18103                           ; BSR set to: 0
 18104  0052C8  D000               	goto	l12273
 18105  0052CA                     l12273:
 18106                           
 18107                           ; BSR set to: 0
 18108  0052CA  0100               	movlb	0	; () banked
 18109  0052CC  51B1               	movf	___lwmod@divisor& (0+255),w,b
 18110  0052CE  0100               	movlb	0	; () banked
 18111  0052D0  5DAF               	subwf	___lwmod@dividend& (0+255),w,b
 18112  0052D2  0100               	movlb	0	; () banked
 18113  0052D4  51B2               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18114  0052D6  0100               	movlb	0	; () banked
 18115  0052D8  59B0               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18116  0052DA  A0D8               	btfss	status,0,c
 18117  0052DC  D009               	goto	l12277
 18118                           
 18119                           ; BSR set to: 0
 18120  0052DE  0100               	movlb	0	; () banked
 18121  0052E0  51B1               	movf	___lwmod@divisor& (0+255),w,b
 18122  0052E2  0100               	movlb	0	; () banked
 18123  0052E4  5FAF               	subwf	___lwmod@dividend& (0+255),f,b
 18124  0052E6  0100               	movlb	0	; () banked
 18125  0052E8  51B2               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18126  0052EA  0100               	movlb	0	; () banked
 18127  0052EC  5BB0               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18128  0052EE  D000               	goto	l12277
 18129  0052F0                     l12277:
 18130                           
 18131                           ; BSR set to: 0
 18132  0052F0  0100               	movlb	0	; () banked
 18133  0052F2  90D8               	bcf	status,0,c
 18134  0052F4  33B2               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18135  0052F6  33B1               	rrcf	___lwmod@divisor& (0+255),f,b
 18136                           
 18137                           ; BSR set to: 0
 18138  0052F8  0100               	movlb	0	; () banked
 18139  0052FA  2FB3               	decfsz	___lwmod@counter& (0+255),f,b
 18140  0052FC  D7E6               	goto	l12273
 18141  0052FE  D000               	goto	l2637
 18142  005300                     l2637:
 18143                           
 18144                           ; BSR set to: 0
 18145  005300  C0AF  F0AF         	movff	___lwmod@dividend,?___lwmod
 18146  005304  C0B0  F0B0         	movff	___lwmod@dividend+1,?___lwmod+1
 18147                           
 18148                           ; BSR set to: 0
 18149  005308  0012               	return		;funcret
 18150  00530A                     __end_of___lwmod:
 18151                           	opt stack 0
 18152                           tblptru	equ	0xFF8
 18153                           tblptrh	equ	0xFF7
 18154                           tblptrl	equ	0xFF6
 18155                           tablat	equ	0xFF5
 18156                           prodh	equ	0xFF4
 18157                           prodl	equ	0xFF3
 18158                           intcon	equ	0xFF2
 18159                           intcon3	equ	0xFF0
 18160                           postinc0	equ	0xFEE
 18161                           wreg	equ	0xFE8
 18162                           indf1	equ	0xFE7
 18163                           postdec1	equ	0xFE5
 18164                           fsr1h	equ	0xFE2
 18165                           fsr1l	equ	0xFE1
 18166                           indf2	equ	0xFDF
 18167                           fsr2h	equ	0xFDA
 18168                           fsr2l	equ	0xFD9
 18169                           status	equ	0xFD8
 18170                           
 18171 ;; *************** function ___almod *****************
 18172 ;; Defined at:
 18173 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\almod.c"
 18174 ;; Parameters:    Size  Location     Type
 18175 ;;  dividend        4    0[BANK0 ] long 
 18176 ;;  divisor         4    4[BANK0 ] long 
 18177 ;; Auto vars:     Size  Location     Type
 18178 ;;  sign            1    9[BANK0 ] unsigned char 
 18179 ;;  counter         1    8[BANK0 ] unsigned char 
 18180 ;; Return value:  Size  Location     Type
 18181 ;;                  4    0[BANK0 ] long 
 18182 ;; Registers used:
 18183 ;;		wreg, status,2, status,0
 18184 ;; Tracked objects:
 18185 ;;		On entry : 0/0
 18186 ;;		On exit  : 0/0
 18187 ;;		Unchanged: 0/0
 18188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18189 ;;      Params:         0       8       0       0       0       0       0       0       0
 18190 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18191 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18192 ;;      Totals:         0      10       0       0       0       0       0       0       0
 18193 ;;Total ram usage:       10 bytes
 18194 ;; Hardware stack levels used:    1
 18195 ;; Hardware stack levels required when called:   11
 18196 ;; This function calls:
 18197 ;;		Nothing
 18198 ;; This function is called by:
 18199 ;;		_TMRapp_Handler
 18200 ;; This function uses a non-reentrant model
 18201 ;;
 18202                           
 18203                           	psect	text59
 18204  00344C                     __ptext59:
 18205                           	opt stack 0
 18206  00344C                     ___almod:
 18207                           	opt stack 17
 18208                           
 18209                           ; BSR set to: 0
 18210                           ;incstack = 0
 18211  00344C  0E00               	movlw	0
 18212  00344E  0100               	movlb	0	; () banked
 18213  003450  6FB8               	movwf	___almod@sign& (0+255),b
 18214                           
 18215                           ; BSR set to: 0
 18216  003452  0100               	movlb	0	; () banked
 18217  003454  AFB2               	btfss	(___almod@dividend+3)& (0+255),7,b
 18218  003456  D00D               	goto	l12237
 18219                           
 18220                           ; BSR set to: 0
 18221  003458  0100               	movlb	0	; () banked
 18222  00345A  1FB2               	comf	(___almod@dividend+3)& (0+255),f,b
 18223  00345C  1FB1               	comf	(___almod@dividend+2)& (0+255),f,b
 18224  00345E  1FB0               	comf	(___almod@dividend+1)& (0+255),f,b
 18225  003460  6DAF               	negf	___almod@dividend& (0+255),b
 18226  003462  0E00               	movlw	0
 18227  003464  23B0               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18228  003466  23B1               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18229  003468  23B2               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18230                           
 18231                           ; BSR set to: 0
 18232  00346A  0E01               	movlw	1
 18233  00346C  0100               	movlb	0	; () banked
 18234  00346E  6FB8               	movwf	___almod@sign& (0+255),b
 18235  003470  D000               	goto	l12237
 18236  003472                     l12237:
 18237                           
 18238                           ; BSR set to: 0
 18239  003472  0100               	movlb	0	; () banked
 18240  003474  AFB6               	btfss	(___almod@divisor+3)& (0+255),7,b
 18241  003476  D00A               	goto	l12241
 18242                           
 18243                           ; BSR set to: 0
 18244  003478  0100               	movlb	0	; () banked
 18245  00347A  1FB6               	comf	(___almod@divisor+3)& (0+255),f,b
 18246  00347C  1FB5               	comf	(___almod@divisor+2)& (0+255),f,b
 18247  00347E  1FB4               	comf	(___almod@divisor+1)& (0+255),f,b
 18248  003480  6DB3               	negf	___almod@divisor& (0+255),b
 18249  003482  0E00               	movlw	0
 18250  003484  23B4               	addwfc	(___almod@divisor+1)& (0+255),f,b
 18251  003486  23B5               	addwfc	(___almod@divisor+2)& (0+255),f,b
 18252  003488  23B6               	addwfc	(___almod@divisor+3)& (0+255),f,b
 18253  00348A  D000               	goto	l12241
 18254  00348C                     l12241:
 18255                           
 18256                           ; BSR set to: 0
 18257  00348C  0100               	movlb	0	; () banked
 18258  00348E  51B3               	movf	___almod@divisor& (0+255),w,b
 18259  003490  0100               	movlb	0	; () banked
 18260  003492  11B4               	iorwf	(___almod@divisor+1)& (0+255),w,b
 18261  003494  0100               	movlb	0	; () banked
 18262  003496  11B5               	iorwf	(___almod@divisor+2)& (0+255),w,b
 18263  003498  0100               	movlb	0	; () banked
 18264  00349A  11B6               	iorwf	(___almod@divisor+3)& (0+255),w,b
 18265  00349C  B4D8               	btfsc	status,2,c
 18266  00349E  D03F               	goto	l12257
 18267                           
 18268                           ; BSR set to: 0
 18269  0034A0  0E01               	movlw	1
 18270  0034A2  0100               	movlb	0	; () banked
 18271  0034A4  6FB7               	movwf	___almod@counter& (0+255),b
 18272  0034A6  D009               	goto	l12247
 18273  0034A8                     l12245:
 18274                           
 18275                           ; BSR set to: 0
 18276  0034A8  0100               	movlb	0	; () banked
 18277  0034AA  90D8               	bcf	status,0,c
 18278  0034AC  37B3               	rlcf	___almod@divisor& (0+255),f,b
 18279  0034AE  37B4               	rlcf	(___almod@divisor+1)& (0+255),f,b
 18280  0034B0  37B5               	rlcf	(___almod@divisor+2)& (0+255),f,b
 18281  0034B2  37B6               	rlcf	(___almod@divisor+3)& (0+255),f,b
 18282  0034B4  0100               	movlb	0	; () banked
 18283  0034B6  2BB7               	incf	___almod@counter& (0+255),f,b
 18284  0034B8  D000               	goto	l12247
 18285  0034BA                     l12247:
 18286                           
 18287                           ; BSR set to: 0
 18288  0034BA  0100               	movlb	0	; () banked
 18289  0034BC  BFB6               	btfsc	(___almod@divisor+3)& (0+255),7,b
 18290  0034BE  D002               	goto	l12249
 18291  0034C0  D7F3               	goto	l12245
 18292                           
 18293                           ; BSR set to: 0
 18294  0034C2  D000               	goto	l12249
 18295  0034C4                     l12249:
 18296                           
 18297                           ; BSR set to: 0
 18298  0034C4  0100               	movlb	0	; () banked
 18299  0034C6  51B3               	movf	___almod@divisor& (0+255),w,b
 18300  0034C8  0100               	movlb	0	; () banked
 18301  0034CA  5DAF               	subwf	___almod@dividend& (0+255),w,b
 18302  0034CC  0100               	movlb	0	; () banked
 18303  0034CE  51B4               	movf	(___almod@divisor+1)& (0+255),w,b
 18304  0034D0  0100               	movlb	0	; () banked
 18305  0034D2  59B0               	subwfb	(___almod@dividend+1)& (0+255),w,b
 18306  0034D4  0100               	movlb	0	; () banked
 18307  0034D6  51B5               	movf	(___almod@divisor+2)& (0+255),w,b
 18308  0034D8  0100               	movlb	0	; () banked
 18309  0034DA  59B1               	subwfb	(___almod@dividend+2)& (0+255),w,b
 18310  0034DC  0100               	movlb	0	; () banked
 18311  0034DE  51B6               	movf	(___almod@divisor+3)& (0+255),w,b
 18312  0034E0  0100               	movlb	0	; () banked
 18313  0034E2  59B2               	subwfb	(___almod@dividend+3)& (0+255),w,b
 18314  0034E4  A0D8               	btfss	status,0,c
 18315  0034E6  D011               	goto	l12253
 18316                           
 18317                           ; BSR set to: 0
 18318  0034E8  0100               	movlb	0	; () banked
 18319  0034EA  51B3               	movf	___almod@divisor& (0+255),w,b
 18320  0034EC  0100               	movlb	0	; () banked
 18321  0034EE  5FAF               	subwf	___almod@dividend& (0+255),f,b
 18322  0034F0  0100               	movlb	0	; () banked
 18323  0034F2  51B4               	movf	(___almod@divisor+1)& (0+255),w,b
 18324  0034F4  0100               	movlb	0	; () banked
 18325  0034F6  5BB0               	subwfb	(___almod@dividend+1)& (0+255),f,b
 18326  0034F8  0100               	movlb	0	; () banked
 18327  0034FA  51B5               	movf	(___almod@divisor+2)& (0+255),w,b
 18328  0034FC  0100               	movlb	0	; () banked
 18329  0034FE  5BB1               	subwfb	(___almod@dividend+2)& (0+255),f,b
 18330  003500  0100               	movlb	0	; () banked
 18331  003502  51B6               	movf	(___almod@divisor+3)& (0+255),w,b
 18332  003504  0100               	movlb	0	; () banked
 18333  003506  5BB2               	subwfb	(___almod@dividend+3)& (0+255),f,b
 18334  003508  D000               	goto	l12253
 18335  00350A                     l12253:
 18336                           
 18337                           ; BSR set to: 0
 18338  00350A  0100               	movlb	0	; () banked
 18339  00350C  90D8               	bcf	status,0,c
 18340  00350E  33B6               	rrcf	(___almod@divisor+3)& (0+255),f,b
 18341  003510  33B5               	rrcf	(___almod@divisor+2)& (0+255),f,b
 18342  003512  33B4               	rrcf	(___almod@divisor+1)& (0+255),f,b
 18343  003514  33B3               	rrcf	___almod@divisor& (0+255),f,b
 18344                           
 18345                           ; BSR set to: 0
 18346  003516  0100               	movlb	0	; () banked
 18347  003518  2FB7               	decfsz	___almod@counter& (0+255),f,b
 18348  00351A  D7D4               	goto	l12249
 18349                           
 18350                           ; BSR set to: 0
 18351  00351C  D000               	goto	l12257
 18352  00351E                     l12257:
 18353                           
 18354                           ; BSR set to: 0
 18355  00351E  0100               	movlb	0	; () banked
 18356  003520  51B8               	movf	___almod@sign& (0+255),w,b
 18357  003522  0100               	movlb	0	; () banked
 18358  003524  B4D8               	btfsc	status,2,c
 18359  003526  D00A               	goto	l12261
 18360                           
 18361                           ; BSR set to: 0
 18362  003528  0100               	movlb	0	; () banked
 18363  00352A  1FB2               	comf	(___almod@dividend+3)& (0+255),f,b
 18364  00352C  1FB1               	comf	(___almod@dividend+2)& (0+255),f,b
 18365  00352E  1FB0               	comf	(___almod@dividend+1)& (0+255),f,b
 18366  003530  6DAF               	negf	___almod@dividend& (0+255),b
 18367  003532  0E00               	movlw	0
 18368  003534  23B0               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18369  003536  23B1               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18370  003538  23B2               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18371  00353A  D000               	goto	l12261
 18372  00353C                     l12261:
 18373                           
 18374                           ; BSR set to: 0
 18375  00353C  C0AF  F0AF         	movff	___almod@dividend,?___almod
 18376  003540  C0B0  F0B0         	movff	___almod@dividend+1,?___almod+1
 18377  003544  C0B1  F0B1         	movff	___almod@dividend+2,?___almod+2
 18378  003548  C0B2  F0B2         	movff	___almod@dividend+3,?___almod+3
 18379  00354C  0012               	return	
 18380                           
 18381                           ; BSR set to: 0
 18382                           
 18383                           ; BSR set to: 0
 18384  00354E  0012               	return		;funcret
 18385  003550                     __end_of___almod:
 18386                           	opt stack 0
 18387                           tblptru	equ	0xFF8
 18388                           tblptrh	equ	0xFF7
 18389                           tblptrl	equ	0xFF6
 18390                           tablat	equ	0xFF5
 18391                           prodh	equ	0xFF4
 18392                           prodl	equ	0xFF3
 18393                           intcon	equ	0xFF2
 18394                           intcon3	equ	0xFF0
 18395                           postinc0	equ	0xFEE
 18396                           wreg	equ	0xFE8
 18397                           indf1	equ	0xFE7
 18398                           postdec1	equ	0xFE5
 18399                           fsr1h	equ	0xFE2
 18400                           fsr1l	equ	0xFE1
 18401                           indf2	equ	0xFDF
 18402                           fsr2h	equ	0xFDA
 18403                           fsr2l	equ	0xFD9
 18404                           status	equ	0xFD8
 18405                           
 18406 ;; *************** function _TMRapp_ClearBitFlags *****************
 18407 ;; Defined at:
 18408 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 18409 ;; Parameters:    Size  Location     Type
 18410 ;;		None
 18411 ;; Auto vars:     Size  Location     Type
 18412 ;;		None
 18413 ;; Return value:  Size  Location     Type
 18414 ;;		None               void
 18415 ;; Registers used:
 18416 ;;		wreg, status,2
 18417 ;; Tracked objects:
 18418 ;;		On entry : 0/0
 18419 ;;		On exit  : 0/0
 18420 ;;		Unchanged: 0/0
 18421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18422 ;;      Params:         0       0       0       0       0       0       0       0       0
 18423 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18424 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18425 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18426 ;;Total ram usage:        0 bytes
 18427 ;; Hardware stack levels used:    1
 18428 ;; Hardware stack levels required when called:   11
 18429 ;; This function calls:
 18430 ;;		Nothing
 18431 ;; This function is called by:
 18432 ;;		_moteHandler
 18433 ;; This function uses a non-reentrant model
 18434 ;;
 18435                           
 18436                           	psect	text60
 18437  005F2E                     __ptext60:
 18438                           	opt stack 0
 18439  005F2E                     _TMRapp_ClearBitFlags:
 18440                           	opt stack 18
 18441                           
 18442                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 18443                           
 18444                           ; BSR set to: 0
 18445                           ;incstack = 0
 18446  005F2E  0E00               	movlw	0
 18447  005F30  0100               	movlb	0	; () banked
 18448  005F32  6F8E               	movwf	_appTimer& (0+255),b
 18449                           
 18450                           ; BSR set to: 0
 18451  005F34  0012               	return		;funcret
 18452  005F36                     __end_of_TMRapp_ClearBitFlags:
 18453                           	opt stack 0
 18454                           tblptru	equ	0xFF8
 18455                           tblptrh	equ	0xFF7
 18456                           tblptrl	equ	0xFF6
 18457                           tablat	equ	0xFF5
 18458                           prodh	equ	0xFF4
 18459                           prodl	equ	0xFF3
 18460                           intcon	equ	0xFF2
 18461                           intcon3	equ	0xFF0
 18462                           postinc0	equ	0xFEE
 18463                           wreg	equ	0xFE8
 18464                           indf1	equ	0xFE7
 18465                           postdec1	equ	0xFE5
 18466                           fsr1h	equ	0xFE2
 18467                           fsr1l	equ	0xFE1
 18468                           indf2	equ	0xFDF
 18469                           fsr2h	equ	0xFDA
 18470                           fsr2l	equ	0xFD9
 18471                           status	equ	0xFD8
 18472                           
 18473 ;; *************** function _MOTEapp_TimerBasedTask *****************
 18474 ;; Defined at:
 18475 ;;		line 1028 in file "../Includes/Board/MOTEapp.c"
 18476 ;; Parameters:    Size  Location     Type
 18477 ;;  timerTask       1    wreg     struct .
 18478 ;; Auto vars:     Size  Location     Type
 18479 ;;  timerTask       1    0[BANK0 ] struct .
 18480 ;; Return value:  Size  Location     Type
 18481 ;;		None               void
 18482 ;; Registers used:
 18483 ;;		wreg, status,2, status,0
 18484 ;; Tracked objects:
 18485 ;;		On entry : 0/0
 18486 ;;		On exit  : 0/0
 18487 ;;		Unchanged: 0/0
 18488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18489 ;;      Params:         0       0       0       0       0       0       0       0       0
 18490 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18491 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18492 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18493 ;;Total ram usage:        1 bytes
 18494 ;; Hardware stack levels used:    1
 18495 ;; Hardware stack levels required when called:   11
 18496 ;; This function calls:
 18497 ;;		Nothing
 18498 ;; This function is called by:
 18499 ;;		_moteHandler
 18500 ;; This function uses a non-reentrant model
 18501 ;;
 18502                           
 18503                           	psect	text61
 18504  005C46                     __ptext61:
 18505                           	opt stack 0
 18506  005C46                     _MOTEapp_TimerBasedTask:
 18507                           	opt stack 18
 18508                           
 18509                           ; BSR set to: 0
 18510                           ;incstack = 0
 18511                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 18512  005C46  0100               	movlb	0	; () banked
 18513  005C48  6FAF               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 18514                           
 18515                           ; BSR set to: 0
 18516                           ;MOTEapp.c: 1033: if (timerTask.mSecTenTick)
 18517  005C4A  0100               	movlb	0	; () banked
 18518  005C4C  A3AF               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 18519  005C4E  D004               	goto	l12443
 18520                           
 18521                           ; BSR set to: 0
 18522                           ;MOTEapp.c: 1034: {
 18523                           ;MOTEapp.c: 1036: m10SecTicker++;
 18524  005C50  0100               	movlb	0	; () banked
 18525  005C52  4B78               	infsnz	_m10SecTicker& (0+255),f,b
 18526  005C54  2B79               	incf	(_m10SecTicker+1)& (0+255),f,b
 18527                           
 18528                           ; BSR set to: 0
 18529                           
 18530                           ; BSR set to: 0
 18531  005C56  D000               	goto	l12443
 18532  005C58                     l12443:
 18533                           
 18534                           ; BSR set to: 0
 18535                           ;MOTEapp.c: 1042: }
 18536                           ;MOTEapp.c: 1043: if (timerTask.SecTick)
 18537  005C58  0100               	movlb	0	; () banked
 18538  005C5A  A7AF               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 18539  005C5C  D003               	goto	l12447
 18540                           
 18541                           ; BSR set to: 0
 18542                           ;MOTEapp.c: 1044: {
 18543                           ;MOTEapp.c: 1046: secTicker++;
 18544  005C5E  0100               	movlb	0	; () banked
 18545  005C60  2BA6               	incf	_secTicker& (0+255),f,b
 18546  005C62  D000               	goto	l12447
 18547  005C64                     l12447:
 18548                           
 18549                           ; BSR set to: 0
 18550                           ;MOTEapp.c: 1047: }
 18551                           ;MOTEapp.c: 1048: if (timerTask.MinTick)
 18552  005C64  0100               	movlb	0	; () banked
 18553  005C66  A9AF               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 18554  005C68  0012               	return	
 18555                           
 18556                           ; BSR set to: 0
 18557                           ;MOTEapp.c: 1049: {
 18558                           ;MOTEapp.c: 1051: minTicker++;
 18559  005C6A  0100               	movlb	0	; () banked
 18560  005C6C  2B9D               	incf	_minTicker& (0+255),f,b
 18561                           
 18562                           ; BSR set to: 0
 18563                           
 18564                           ; BSR set to: 0
 18565                           
 18566                           ;MOTEapp.c: 1058: {
 18567                           
 18568                           ; BSR set to: 0
 18569                           
 18570                           ; BSR set to: 0
 18571                           
 18572                           ;MOTEapp.c: 1054: {
 18573                           
 18574                           ; BSR set to: 0
 18575                           
 18576                           ; BSR set to: 0
 18577  005C6E  0012               	return	
 18578                           
 18579                           ; BSR set to: 0
 18580                           
 18581                           ; BSR set to: 0
 18582                           
 18583                           ;MOTEapp.c: 1062: {
 18584  005C70  0012               	return		;funcret
 18585  005C72                     __end_of_MOTEapp_TimerBasedTask:
 18586                           	opt stack 0
 18587                           tblptru	equ	0xFF8
 18588                           tblptrh	equ	0xFF7
 18589                           tblptrl	equ	0xFF6
 18590                           tablat	equ	0xFF5
 18591                           prodh	equ	0xFF4
 18592                           prodl	equ	0xFF3
 18593                           intcon	equ	0xFF2
 18594                           intcon3	equ	0xFF0
 18595                           postinc0	equ	0xFEE
 18596                           wreg	equ	0xFE8
 18597                           indf1	equ	0xFE7
 18598                           postdec1	equ	0xFE5
 18599                           fsr1h	equ	0xFE2
 18600                           fsr1l	equ	0xFE1
 18601                           indf2	equ	0xFDF
 18602                           fsr2h	equ	0xFDA
 18603                           fsr2l	equ	0xFD9
 18604                           status	equ	0xFD8
 18605                           
 18606 ;; *************** function _moteApp_clearCommand *****************
 18607 ;; Defined at:
 18608 ;;		line 1260 in file "../Includes/Board/MOTEapp.c"
 18609 ;; Parameters:    Size  Location     Type
 18610 ;;		None
 18611 ;; Auto vars:     Size  Location     Type
 18612 ;;		None
 18613 ;; Return value:  Size  Location     Type
 18614 ;;		None               void
 18615 ;; Registers used:
 18616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18617 ;; Tracked objects:
 18618 ;;		On entry : 0/0
 18619 ;;		On exit  : 0/0
 18620 ;;		Unchanged: 0/0
 18621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18622 ;;      Params:         0       0       0       0       0       0       0       0       0
 18623 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18624 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18625 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18626 ;;Total ram usage:        0 bytes
 18627 ;; Hardware stack levels used:    1
 18628 ;; Hardware stack levels required when called:   14
 18629 ;; This function calls:
 18630 ;;		MOTEapp@sendCommand
 18631 ;; This function is called by:
 18632 ;;		_main
 18633 ;; This function uses a non-reentrant model
 18634 ;;
 18635                           
 18636                           	psect	text62
 18637  005E94                     __ptext62:
 18638                           	opt stack 0
 18639  005E94                     _moteApp_clearCommand:
 18640                           	opt stack 16
 18641                           
 18642                           ;MOTEapp.c: 1262: sendCommand("\r\n");
 18643                           
 18644                           ; BSR set to: 0
 18645                           ;incstack = 0
 18646  005E94  0E0F               	movlw	low (STR_177+23)
 18647  005E96  0100               	movlb	0	; () banked
 18648  005E98  6FB0               	movwf	MOTEapp@sendCommand@string& (0+255),b
 18649  005E9A  0E7A               	movlw	high (STR_177+23)
 18650  005E9C  0100               	movlb	0	; () banked
 18651  005E9E  6FB1               	movwf	(MOTEapp@sendCommand@string+1)& (0+255),b
 18652  005EA0  ECC4  F02D         	call	MOTEapp@sendCommand	;wreg free
 18653  005EA4  0012               	return		;funcret
 18654  005EA6                     __end_of_moteApp_clearCommand:
 18655                           	opt stack 0
 18656                           tblptru	equ	0xFF8
 18657                           tblptrh	equ	0xFF7
 18658                           tblptrl	equ	0xFF6
 18659                           tablat	equ	0xFF5
 18660                           prodh	equ	0xFF4
 18661                           prodl	equ	0xFF3
 18662                           intcon	equ	0xFF2
 18663                           intcon3	equ	0xFF0
 18664                           postinc0	equ	0xFEE
 18665                           wreg	equ	0xFE8
 18666                           indf1	equ	0xFE7
 18667                           postdec1	equ	0xFE5
 18668                           fsr1h	equ	0xFE2
 18669                           fsr1l	equ	0xFE1
 18670                           indf2	equ	0xFDF
 18671                           fsr2h	equ	0xFDA
 18672                           fsr2l	equ	0xFD9
 18673                           status	equ	0xFD8
 18674                           
 18675 ;; *************** function MOTEapp@sendCommand *****************
 18676 ;; Defined at:
 18677 ;;		line 1115 in file "../Includes/Board/MOTEapp.c"
 18678 ;; Parameters:    Size  Location     Type
 18679 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 18680 ;;		 -> STR_186(22), STR_185(22), STR_184(27), STR_183(27), 
 18681 ;;		 -> STR_178(26), STR_177(26), STR_176(26), STR_175(26), 
 18682 ;;		 -> STR_174(3), STR_173(9), STR_172(15), STR_171(13), 
 18683 ;;		 -> STR_170(13), STR_169(13), STR_168(13), STR_167(13), 
 18684 ;;		 -> STR_166(13), STR_165(13), STR_164(13), STR_163(16), 
 18685 ;;		 -> STR_85(25), STR_84(25), STR_74(25), STR_70(11), 
 18686 ;;		 -> STR_68(11), STR_66(14), STR_58(14), STR_52(10), 
 18687 ;;		 -> STR_48(13), STR_43(14), STR_41(13), STR_39(10), 
 18688 ;;		 -> STR_30(10), STR_22(20), STR_21(2), 
 18689 ;; Auto vars:     Size  Location     Type
 18690 ;;		None
 18691 ;; Return value:  Size  Location     Type
 18692 ;;		None               void
 18693 ;; Registers used:
 18694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18695 ;; Tracked objects:
 18696 ;;		On entry : 0/0
 18697 ;;		On exit  : 0/0
 18698 ;;		Unchanged: 0/0
 18699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18700 ;;      Params:         0       2       0       0       0       0       0       0       0
 18701 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18702 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18703 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18704 ;;Total ram usage:        2 bytes
 18705 ;; Hardware stack levels used:    1
 18706 ;; Hardware stack levels required when called:   13
 18707 ;; This function calls:
 18708 ;;		MOTEapp@EndLine
 18709 ;;		_EUSART_Write
 18710 ;; This function is called by:
 18711 ;;		_moduleResync
 18712 ;;		_moduleSleep
 18713 ;;		_moteJoiningProcess
 18714 ;;		_moteRunningProcess
 18715 ;;		_MOTEapp_SetDataRateSetting
 18716 ;;		_moteApp_clearCommand
 18717 ;;		_moteApp_toggleLeds
 18718 ;;		_moteApp_setSensorsInput
 18719 ;;		_moteApp_getTempValue
 18720 ;;		_moteApp_getLightValue
 18721 ;; This function uses a non-reentrant model
 18722 ;;
 18723                           
 18724                           	psect	text63
 18725  005B88                     __ptext63:
 18726                           	opt stack 0
 18727  005B88                     MOTEapp@sendCommand:
 18728                           	opt stack 14
 18729                           
 18730                           ;MOTEapp.c: 1118: while (*string)
 18731                           
 18732                           ;incstack = 0
 18733  005B88  D00C               	goto	l11149
 18734  005B8A                     l11145:
 18735                           
 18736                           ;MOTEapp.c: 1119: {
 18737                           ;MOTEapp.c: 1120: EUSART_Write(*string++);
 18738  005B8A  C0B0  FFF6         	movff	MOTEapp@sendCommand@string,tblptrl
 18739  005B8E  C0B1  FFF7         	movff	MOTEapp@sendCommand@string+1,tblptrh
 18740  005B92                     	if	0	;tblptru may be non-zero
 18741  005B92                     	endif
 18742  005B92                     	if	0	;tblptru may be non-zero
 18743  005B92                     	endif
 18744  005B92  0008               	tblrd		*
 18745  005B94  50F5               	movf	tablat,w,c
 18746  005B96  ECD0  F02B         	call	_EUSART_Write
 18747  005B9A  0100               	movlb	0	; () banked
 18748  005B9C  4BB0               	infsnz	MOTEapp@sendCommand@string& (0+255),f,b
 18749  005B9E  2BB1               	incf	(MOTEapp@sendCommand@string+1)& (0+255),f,b
 18750  005BA0  D000               	goto	l11149
 18751  005BA2                     l11149:
 18752  005BA2  C0B0  FFF6         	movff	MOTEapp@sendCommand@string,tblptrl
 18753  005BA6  C0B1  FFF7         	movff	MOTEapp@sendCommand@string+1,tblptrh
 18754  005BAA                     	if	0	;tblptru may be non-zero
 18755  005BAA                     	endif
 18756  005BAA                     	if	0	;tblptru may be non-zero
 18757  005BAA                     	endif
 18758  005BAA  0008               	tblrd		*
 18759  005BAC  50F5               	movf	tablat,w,c
 18760  005BAE  0900               	iorlw	0
 18761  005BB0  A4D8               	btfss	status,2,c
 18762  005BB2  D7EB               	goto	l11145
 18763                           
 18764                           ;MOTEapp.c: 1121: }
 18765                           ;MOTEapp.c: 1122: EndLine();
 18766  005BB4  EC64  F02F         	call	MOTEapp@EndLine	;wreg free
 18767  005BB8  0012               	return		;funcret
 18768  005BBA                     __end_ofMOTEapp@sendCommand:
 18769                           	opt stack 0
 18770                           tblptru	equ	0xFF8
 18771                           tblptrh	equ	0xFF7
 18772                           tblptrl	equ	0xFF6
 18773                           tablat	equ	0xFF5
 18774                           prodh	equ	0xFF4
 18775                           prodl	equ	0xFF3
 18776                           intcon	equ	0xFF2
 18777                           intcon3	equ	0xFF0
 18778                           postinc0	equ	0xFEE
 18779                           wreg	equ	0xFE8
 18780                           indf1	equ	0xFE7
 18781                           postdec1	equ	0xFE5
 18782                           fsr1h	equ	0xFE2
 18783                           fsr1l	equ	0xFE1
 18784                           indf2	equ	0xFDF
 18785                           fsr2h	equ	0xFDA
 18786                           fsr2l	equ	0xFD9
 18787                           status	equ	0xFD8
 18788                           
 18789 ;; *************** function MOTEapp@EndLine *****************
 18790 ;; Defined at:
 18791 ;;		line 1109 in file "../Includes/Board/MOTEapp.c"
 18792 ;; Parameters:    Size  Location     Type
 18793 ;;		None
 18794 ;; Auto vars:     Size  Location     Type
 18795 ;;		None
 18796 ;; Return value:  Size  Location     Type
 18797 ;;		None               void
 18798 ;; Registers used:
 18799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18800 ;; Tracked objects:
 18801 ;;		On entry : 0/0
 18802 ;;		On exit  : 0/0
 18803 ;;		Unchanged: 0/0
 18804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18805 ;;      Params:         0       0       0       0       0       0       0       0       0
 18806 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18807 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18808 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18809 ;;Total ram usage:        0 bytes
 18810 ;; Hardware stack levels used:    1
 18811 ;; Hardware stack levels required when called:   12
 18812 ;; This function calls:
 18813 ;;		_EUSART_Write
 18814 ;; This function is called by:
 18815 ;;		MOTEapp@sendCommand
 18816 ;;		_sendDataCommand
 18817 ;; This function uses a non-reentrant model
 18818 ;;
 18819                           
 18820                           	psect	text64
 18821  005EC8                     __ptext64:
 18822                           	opt stack 0
 18823  005EC8                     MOTEapp@EndLine:
 18824                           	opt stack 14
 18825                           
 18826                           ;MOTEapp.c: 1111: EUSART_Write(0x0D);
 18827                           
 18828                           ;incstack = 0
 18829  005EC8  0E0D               	movlw	13
 18830  005ECA  ECD0  F02B         	call	_EUSART_Write
 18831                           
 18832                           ;MOTEapp.c: 1112: EUSART_Write(0x0A);
 18833  005ECE  0E0A               	movlw	10
 18834  005ED0  ECD0  F02B         	call	_EUSART_Write
 18835  005ED4  0012               	return		;funcret
 18836  005ED6                     __end_ofMOTEapp@EndLine:
 18837                           	opt stack 0
 18838                           tblptru	equ	0xFF8
 18839                           tblptrh	equ	0xFF7
 18840                           tblptrl	equ	0xFF6
 18841                           tablat	equ	0xFF5
 18842                           prodh	equ	0xFF4
 18843                           prodl	equ	0xFF3
 18844                           intcon	equ	0xFF2
 18845                           intcon3	equ	0xFF0
 18846                           postinc0	equ	0xFEE
 18847                           wreg	equ	0xFE8
 18848                           indf1	equ	0xFE7
 18849                           postdec1	equ	0xFE5
 18850                           fsr1h	equ	0xFE2
 18851                           fsr1l	equ	0xFE1
 18852                           indf2	equ	0xFDF
 18853                           fsr2h	equ	0xFDA
 18854                           fsr2l	equ	0xFD9
 18855                           status	equ	0xFD8
 18856                           
 18857 ;; *************** function _USBapp_handlerState *****************
 18858 ;; Defined at:
 18859 ;;		line 78 in file "../Includes/Board/USBapp.c"
 18860 ;; Parameters:    Size  Location     Type
 18861 ;;  state           1    wreg     enum E7584
 18862 ;; Auto vars:     Size  Location     Type
 18863 ;;  state           1    0[BANK0 ] enum E7584
 18864 ;; Return value:  Size  Location     Type
 18865 ;;		None               void
 18866 ;; Registers used:
 18867 ;;		wreg
 18868 ;; Tracked objects:
 18869 ;;		On entry : 0/0
 18870 ;;		On exit  : 0/0
 18871 ;;		Unchanged: 0/0
 18872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18873 ;;      Params:         0       0       0       0       0       0       0       0       0
 18874 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18875 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18876 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18877 ;;Total ram usage:        1 bytes
 18878 ;; Hardware stack levels used:    1
 18879 ;; Hardware stack levels required when called:   11
 18880 ;; This function calls:
 18881 ;;		Nothing
 18882 ;; This function is called by:
 18883 ;;		_main
 18884 ;; This function uses a non-reentrant model
 18885 ;;
 18886                           
 18887                           	psect	text65
 18888  005EF8                     __ptext65:
 18889                           	opt stack 0
 18890  005EF8                     _USBapp_handlerState:
 18891                           	opt stack 19
 18892                           
 18893                           ;incstack = 0
 18894                           ;USBapp_handlerState@state stored from wreg
 18895  005EF8  0100               	movlb	0	; () banked
 18896  005EFA  6FAF               	movwf	USBapp_handlerState@state& (0+255),b
 18897                           
 18898                           ; BSR set to: 0
 18899                           ;USBapp.c: 80: usbState = state;
 18900  005EFC  C0AF  F0A8         	movff	USBapp_handlerState@state,_usbState
 18901                           
 18902                           ; BSR set to: 0
 18903  005F00  0012               	return		;funcret
 18904  005F02                     __end_of_USBapp_handlerState:
 18905                           	opt stack 0
 18906                           tblptru	equ	0xFF8
 18907                           tblptrh	equ	0xFF7
 18908                           tblptrl	equ	0xFF6
 18909                           tablat	equ	0xFF5
 18910                           prodh	equ	0xFF4
 18911                           prodl	equ	0xFF3
 18912                           intcon	equ	0xFF2
 18913                           intcon3	equ	0xFF0
 18914                           postinc0	equ	0xFEE
 18915                           wreg	equ	0xFE8
 18916                           indf1	equ	0xFE7
 18917                           postdec1	equ	0xFE5
 18918                           fsr1h	equ	0xFE2
 18919                           fsr1l	equ	0xFE1
 18920                           indf2	equ	0xFDF
 18921                           fsr2h	equ	0xFDA
 18922                           fsr2l	equ	0xFD9
 18923                           status	equ	0xFD8
 18924                           
 18925 ;; *************** function _USBapp_Handler *****************
 18926 ;; Defined at:
 18927 ;;		line 86 in file "../Includes/Board/USBapp.c"
 18928 ;; Parameters:    Size  Location     Type
 18929 ;;		None
 18930 ;; Auto vars:     Size  Location     Type
 18931 ;;  buttonPress     1   22[BANK0 ] enum E7617
 18932 ;; Return value:  Size  Location     Type
 18933 ;;		None               void
 18934 ;; Registers used:
 18935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18936 ;; Tracked objects:
 18937 ;;		On entry : 0/0
 18938 ;;		On exit  : 0/0
 18939 ;;		Unchanged: 0/0
 18940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18941 ;;      Params:         0       0       0       0       0       0       0       0       0
 18942 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18943 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18944 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18945 ;;Total ram usage:        1 bytes
 18946 ;; Hardware stack levels used:    1
 18947 ;; Hardware stack levels required when called:   16
 18948 ;; This function calls:
 18949 ;;		_USBapp_DeviceCdcEmulatorHandler
 18950 ;;		_oled_clear
 18951 ;;		_oled_putString
 18952 ;;		_service_pushbutton
 18953 ;; This function is called by:
 18954 ;;		_main
 18955 ;; This function uses a non-reentrant model
 18956 ;;
 18957                           
 18958                           	psect	text66
 18959  004104                     __ptext66:
 18960                           	opt stack 0
 18961  004104                     _USBapp_Handler:
 18962                           	opt stack 14
 18963                           
 18964                           ;USBapp.c: 90: {
 18965                           ;USBapp.c: 91: switch(usbState)
 18966                           
 18967                           ; BSR set to: 0
 18968                           ;incstack = 0
 18969                           ;USBapp.c: 89: do
 18970  004104  D04B               	goto	l13499
 18971  004106  D7FF               	goto	l852
 18972                           
 18973                           ;USBapp.c: 95: break;
 18974  004108  D055               	goto	l858
 18975  00410A                     l13471:
 18976                           
 18977                           ;USBapp.c: 98: oled_clear();
 18978  00410A  ECB6  F02E         	call	_oled_clear	;wreg free
 18979                           
 18980                           ;USBapp.c: 99: oled_putString("CDC Mode",1,0);
 18981  00410E  0E10               	movlw	low STR_187
 18982  004110  0100               	movlb	0	; () banked
 18983  004112  6FC0               	movwf	oled_putString@string& (0+255),b
 18984  004114  0E7F               	movlw	high STR_187
 18985  004116  0100               	movlb	0	; () banked
 18986  004118  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 18987  00411A  0E01               	movlw	1
 18988  00411C  0100               	movlb	0	; () banked
 18989  00411E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 18990  004120  0E00               	movlw	0
 18991  004122  0100               	movlb	0	; () banked
 18992  004124  6FC3               	movwf	oled_putString@start_page& (0+255),b
 18993  004126  EC30  F028         	call	_oled_putString	;wreg free
 18994                           
 18995                           ;USBapp.c: 100: oled_putString("Command",2,1);
 18996  00412A  0E61               	movlw	low STR_188
 18997  00412C  0100               	movlb	0	; () banked
 18998  00412E  6FC0               	movwf	oled_putString@string& (0+255),b
 18999  004130  0E7F               	movlw	high STR_188
 19000  004132  0100               	movlb	0	; () banked
 19001  004134  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 19002  004136  0E02               	movlw	2
 19003  004138  0100               	movlb	0	; () banked
 19004  00413A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 19005  00413C  0E01               	movlw	1
 19006  00413E  0100               	movlb	0	; () banked
 19007  004140  6FC3               	movwf	oled_putString@start_page& (0+255),b
 19008  004142  EC30  F028         	call	_oled_putString	;wreg free
 19009                           
 19010                           ;USBapp.c: 101: oled_putString("USB Handler",0,2);
 19011  004146  0E1F               	movlw	low STR_189
 19012  004148  0100               	movlb	0	; () banked
 19013  00414A  6FC0               	movwf	oled_putString@string& (0+255),b
 19014  00414C  0E7E               	movlw	high STR_189
 19015  00414E  0100               	movlb	0	; () banked
 19016  004150  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 19017  004152  0E00               	movlw	0
 19018  004154  0100               	movlb	0	; () banked
 19019  004156  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 19020  004158  0E02               	movlw	2
 19021  00415A  0100               	movlb	0	; () banked
 19022  00415C  6FC3               	movwf	oled_putString@start_page& (0+255),b
 19023  00415E  EC30  F028         	call	_oled_putString	;wreg free
 19024                           
 19025                           ;USBapp.c: 103: usbState = USB_RUNNING;
 19026  004162  0E01               	movlw	1
 19027  004164  D006               	goto	L8
 19028  004166                     l13481:
 19029                           
 19030                           ; BSR set to: 0
 19031                           ;USBapp.c: 107: if( USBDeviceState < CONFIGURED_STATE )
 19032  004166  0E20               	movlw	32
 19033  004168  0100               	movlb	0	; () banked
 19034  00416A  6189               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 19035  00416C  D001               	goto	l13485
 19036                           
 19037                           ; BSR set to: 0
 19038                           ;USBapp.c: 108: {
 19039                           ;USBapp.c: 110: continue;
 19040  00416E  D022               	goto	l858
 19041  004170                     l13485:
 19042                           
 19043                           ; BSR set to: 0
 19044                           ;USBapp.c: 111: }
 19045                           ;USBapp.c: 112: usbState = USB_CDC;
 19046  004170  0E02               	movlw	2
 19047  004172                     L8:
 19048  004172  0100               	movlb	0	; () banked
 19049  004174  6FA8               	movwf	_usbState& (0+255),b
 19050                           
 19051                           ;USBapp.c: 113: break;
 19052  004176  D01E               	goto	l858
 19053  004178                     l13487:
 19054                           
 19055                           ; BSR set to: 0
 19056                           ;USBapp.c: 116: USBapp_DeviceCdcEmulatorHandler();
 19057  004178  EC8A  F01C         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 19058                           
 19059                           ;USBapp.c: 120: buttonStates_t buttonPress = Released;
 19060  00417C  0E03               	movlw	3
 19061  00417E  0100               	movlb	0	; () banked
 19062  004180  6FC5               	movwf	USBapp_Handler@buttonPress& (0+255),b
 19063                           
 19064                           ; BSR set to: 0
 19065                           ;USBapp.c: 121: buttonPress = service_pushbutton();
 19066  004182  ECED  F026         	call	_service_pushbutton	;wreg free
 19067  004186  0100               	movlb	0	; () banked
 19068  004188  6FC5               	movwf	USBapp_Handler@buttonPress& (0+255),b
 19069                           
 19070                           ; BSR set to: 0
 19071                           ;USBapp.c: 122: if (buttonPress != Released )
 19072  00418A  0E03               	movlw	3
 19073  00418C  0100               	movlb	0	; () banked
 19074  00418E  19C5               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 19075  004190  B4D8               	btfsc	status,2,c
 19076  004192  D010               	goto	l858
 19077                           
 19078                           ; BSR set to: 0
 19079                           ;USBapp.c: 123: {
 19080                           ;USBapp.c: 124: exitUSB = USB_BAT;
 19081  004194  0E02               	movlw	2
 19082  004196  0100               	movlb	0	; () banked
 19083  004198  6FF9               	movwf	_exitUSB& (0+255),b
 19084                           
 19085                           ; BSR set to: 0
 19086                           ;USBapp.c: 127: }
 19087                           
 19088                           ; BSR set to: 0
 19089                           ;USBapp.c: 125: }
 19090                           ;USBapp.c: 126: break;
 19091  00419A  D00C               	goto	l858
 19092  00419C                     l13499:
 19093  00419C  0100               	movlb	0	; () banked
 19094  00419E  51A8               	movf	_usbState& (0+255),w,b
 19095                           
 19096                           ; Switch size 1, requested type "space"
 19097                           ; Number of cases is 3, Range of values is 0 to 2
 19098                           ; switch strategies available:
 19099                           ; Name         Instructions Cycles
 19100                           ; simple_byte           10     6 (average)
 19101                           ;	Chosen strategy is simple_byte
 19102  0041A0  0A00               	xorlw	0	; case 0
 19103  0041A2  B4D8               	btfsc	status,2,c
 19104  0041A4  D7B2               	goto	l13471
 19105  0041A6  0A01               	xorlw	1	; case 1
 19106  0041A8  B4D8               	btfsc	status,2,c
 19107  0041AA  D7DD               	goto	l13481
 19108  0041AC  0A03               	xorlw	3	; case 2
 19109  0041AE  B4D8               	btfsc	status,2,c
 19110  0041B0  D7E3               	goto	l13487
 19111  0041B2  D7A9               	goto	l852
 19112  0041B4                     l858:
 19113                           
 19114                           ;USBapp.c: 128: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 19115  0041B4  A080               	btfss	3968,0,c	;volatile
 19116  0041B6  D004               	goto	l863
 19117  0041B8  0100               	movlb	0	; () banked
 19118  0041BA  51F9               	movf	_exitUSB& (0+255),w,b
 19119  0041BC  B4D8               	btfsc	status,2,c
 19120  0041BE  D7EE               	goto	l13499
 19121  0041C0                     l863:
 19122                           
 19123                           ;USBapp.c: 129: __nop();
 19124  0041C0  F000               	nop	
 19125                           
 19126                           ;USBapp.c: 130: if (exitUSB != USB_BAT)
 19127  0041C2  0E02               	movlw	2
 19128  0041C4  0100               	movlb	0	; () banked
 19129  0041C6  19F9               	xorwf	_exitUSB& (0+255),w,b
 19130  0041C8  B4D8               	btfsc	status,2,c
 19131  0041CA  0012               	return	
 19132                           
 19133                           ; BSR set to: 0
 19134                           ;USBapp.c: 131: exitUSB = NO_USB;
 19135  0041CC  0E00               	movlw	0
 19136  0041CE  0100               	movlb	0	; () banked
 19137  0041D0  6FF9               	movwf	_exitUSB& (0+255),b
 19138  0041D2  0012               	return	
 19139                           
 19140                           ; BSR set to: 0
 19141                           
 19142                           ; BSR set to: 0
 19143  0041D4  0012               	return		;funcret
 19144  0041D6                     __end_of_USBapp_Handler:
 19145                           	opt stack 0
 19146                           tblptru	equ	0xFF8
 19147                           tblptrh	equ	0xFF7
 19148                           tblptrl	equ	0xFF6
 19149                           tablat	equ	0xFF5
 19150                           prodh	equ	0xFF4
 19151                           prodl	equ	0xFF3
 19152                           intcon	equ	0xFF2
 19153                           intcon3	equ	0xFF0
 19154                           postinc0	equ	0xFEE
 19155                           wreg	equ	0xFE8
 19156                           indf1	equ	0xFE7
 19157                           postdec1	equ	0xFE5
 19158                           fsr1h	equ	0xFE2
 19159                           fsr1l	equ	0xFE1
 19160                           indf2	equ	0xFDF
 19161                           fsr2h	equ	0xFDA
 19162                           fsr2l	equ	0xFD9
 19163                           status	equ	0xFD8
 19164                           
 19165 ;; *************** function _service_pushbutton *****************
 19166 ;; Defined at:
 19167 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 19168 ;; Parameters:    Size  Location     Type
 19169 ;;		None
 19170 ;; Auto vars:     Size  Location     Type
 19171 ;;  bs              1    0[BANK0 ] enum E7500
 19172 ;; Return value:  Size  Location     Type
 19173 ;;                  1    wreg      enum E7586
 19174 ;; Registers used:
 19175 ;;		wreg, status,2, status,0
 19176 ;; Tracked objects:
 19177 ;;		On entry : 0/0
 19178 ;;		On exit  : 0/0
 19179 ;;		Unchanged: 0/0
 19180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19181 ;;      Params:         0       0       0       0       0       0       0       0       0
 19182 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19183 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19184 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19185 ;;Total ram usage:        1 bytes
 19186 ;; Hardware stack levels used:    1
 19187 ;; Hardware stack levels required when called:   11
 19188 ;; This function calls:
 19189 ;;		Nothing
 19190 ;; This function is called by:
 19191 ;;		_moteHandler
 19192 ;;		_USBapp_Handler
 19193 ;; This function uses a non-reentrant model
 19194 ;;
 19195                           
 19196                           	psect	text67
 19197  004DDA                     __ptext67:
 19198                           	opt stack 0
 19199  004DDA                     _service_pushbutton:
 19200                           	opt stack 18
 19201                           
 19202                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 19203                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 19204                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 19205                           
 19206                           ; BSR set to: 0
 19207                           ;incstack = 0
 19208  004DDA  0E00               	movlw	0
 19209  004DDC  0100               	movlb	0	; () banked
 19210  004DDE  6FAF               	movwf	service_pushbutton@bs& (0+255),b
 19211                           
 19212                           ; BSR set to: 0
 19213                           ;buttons.c: 55: if ((PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
 19214  004DE0  A281               	btfss	3969,1,c	;volatile
 19215  004DE2  D002               	goto	l12463
 19216                           
 19217                           ; BSR set to: 0
 19218  004DE4  B081               	btfsc	3969,0,c	;volatile
 19219  004DE6  D01F               	goto	l12475
 19220  004DE8                     l12463:
 19221                           
 19222                           ; BSR set to: 0
 19223                           ;buttons.c: 56: {
 19224                           ;buttons.c: 57: ++PB_Timer;
 19225  004DE8  0E01               	movlw	1
 19226  004DEA  0101               	movlb	1	; () banked
 19227  004DEC  2734               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 19228  004DEE  0E00               	movlw	0
 19229  004DF0  2335               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 19230  004DF2  2336               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 19231  004DF4  2337               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 19232                           
 19233                           ;buttons.c: 61: if (PB_Timer == 55)
 19234  004DF6  0E37               	movlw	55
 19235  004DF8  0101               	movlb	1	; () banked
 19236  004DFA  1934               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 19237  004DFC  0101               	movlb	1	; () banked
 19238  004DFE  1135               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 19239  004E00  0101               	movlb	1	; () banked
 19240  004E02  1136               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 19241  004E04  0101               	movlb	1	; () banked
 19242  004E06  1137               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 19243  004E08  A4D8               	btfss	status,2,c
 19244  004E0A  D00A               	goto	l12473
 19245                           
 19246                           ; BSR set to: 1
 19247                           ;buttons.c: 62: {
 19248                           ;buttons.c: 63: Release_Timer = 0;
 19249  004E0C  0E00               	movlw	0
 19250  004E0E  0100               	movlb	0	; () banked
 19251  004E10  6FA9               	movwf	service_pushbutton@Release_Timer& (0+255),b
 19252                           
 19253                           ; BSR set to: 0
 19254                           ;buttons.c: 65: if (PORTBbits.RB1 == 0)
 19255  004E12  B281               	btfsc	3969,1,c	;volatile
 19256  004E14  D002               	goto	l12471
 19257                           
 19258                           ; BSR set to: 0
 19259                           ;buttons.c: 66: {
 19260                           ;buttons.c: 67: bs = ShortPress1;
 19261  004E16  0E01               	movlw	1
 19262  004E18  D01C               	goto	L11
 19263  004E1A                     l12471:
 19264                           
 19265                           ; BSR set to: 0
 19266                           ;buttons.c: 69: else
 19267                           ;buttons.c: 70: {
 19268                           ;buttons.c: 71: bs = ShortPress2;
 19269  004E1A  0E02               	movlw	2
 19270  004E1C  D01A               	goto	L11
 19271                           
 19272                           ; BSR set to: 0
 19273                           ;buttons.c: 72: }
 19274                           ;buttons.c: 73: }
 19275  004E1E  D01C               	goto	l12483
 19276  004E20                     l12473:
 19277                           
 19278                           ;buttons.c: 74: else
 19279                           ;buttons.c: 75: {
 19280                           ;buttons.c: 76: bs = NoButton;
 19281  004E20  0E00               	movlw	0
 19282  004E22  D017               	goto	L11
 19283                           
 19284                           ; BSR set to: 0
 19285                           ;buttons.c: 77: }
 19286                           ;buttons.c: 78: }
 19287  004E24  D019               	goto	l12483
 19288  004E26                     l12475:
 19289                           
 19290                           ; BSR set to: 0
 19291                           ;buttons.c: 79: else
 19292                           ;buttons.c: 80: {
 19293                           ;buttons.c: 81: if (Release_Timer == 20)
 19294  004E26  0E14               	movlw	20
 19295  004E28  0100               	movlb	0	; () banked
 19296  004E2A  19A9               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
 19297  004E2C  A4D8               	btfss	status,2,c
 19298  004E2E  D00D               	goto	l12479
 19299                           
 19300                           ; BSR set to: 0
 19301                           ;buttons.c: 82: {
 19302                           ;buttons.c: 83: PB_Timer = 0;
 19303  004E30  0E00               	movlw	0
 19304  004E32  0101               	movlb	1	; () banked
 19305  004E34  6F34               	movwf	service_pushbutton@PB_Timer& (0+255),b
 19306  004E36  0E00               	movlw	0
 19307  004E38  6F35               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 19308  004E3A  0E00               	movlw	0
 19309  004E3C  6F36               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 19310  004E3E  0E00               	movlw	0
 19311  004E40  6F37               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 19312                           
 19313                           ;buttons.c: 84: Release_Timer = 0;
 19314  004E42  0E00               	movlw	0
 19315  004E44  0100               	movlb	0	; () banked
 19316  004E46  6FA9               	movwf	service_pushbutton@Release_Timer& (0+255),b
 19317                           
 19318                           ;buttons.c: 85: }
 19319  004E48  D003               	goto	l12481
 19320  004E4A                     l12479:
 19321                           
 19322                           ; BSR set to: 0
 19323                           ;buttons.c: 86: else
 19324                           ;buttons.c: 87: {
 19325                           ;buttons.c: 88: Release_Timer++;
 19326  004E4A  0100               	movlb	0	; () banked
 19327  004E4C  2BA9               	incf	service_pushbutton@Release_Timer& (0+255),f,b
 19328  004E4E  D000               	goto	l12481
 19329  004E50                     l12481:
 19330                           
 19331                           ; BSR set to: 0
 19332                           ;buttons.c: 89: }
 19333                           ;buttons.c: 90: bs = Released;
 19334  004E50  0E03               	movlw	3
 19335  004E52                     L11:
 19336  004E52  0100               	movlb	0	; () banked
 19337  004E54  6FAF               	movwf	service_pushbutton@bs& (0+255),b
 19338  004E56  D000               	goto	l12483
 19339  004E58                     l12483:
 19340                           
 19341                           ; BSR set to: 0
 19342                           ;buttons.c: 91: }
 19343                           ;buttons.c: 93: return bs;
 19344  004E58  0100               	movlb	0	; () banked
 19345  004E5A  51AF               	movf	service_pushbutton@bs& (0+255),w,b
 19346  004E5C  0012               	return	
 19347                           
 19348                           ; BSR set to: 0
 19349                           
 19350                           ; BSR set to: 0
 19351  004E5E  0012               	return		;funcret
 19352  004E60                     __end_of_service_pushbutton:
 19353                           	opt stack 0
 19354                           tblptru	equ	0xFF8
 19355                           tblptrh	equ	0xFF7
 19356                           tblptrl	equ	0xFF6
 19357                           tablat	equ	0xFF5
 19358                           prodh	equ	0xFF4
 19359                           prodl	equ	0xFF3
 19360                           intcon	equ	0xFF2
 19361                           intcon3	equ	0xFF0
 19362                           postinc0	equ	0xFEE
 19363                           wreg	equ	0xFE8
 19364                           indf1	equ	0xFE7
 19365                           postdec1	equ	0xFE5
 19366                           fsr1h	equ	0xFE2
 19367                           fsr1l	equ	0xFE1
 19368                           indf2	equ	0xFDF
 19369                           fsr2h	equ	0xFDA
 19370                           fsr2l	equ	0xFD9
 19371                           status	equ	0xFD8
 19372                           
 19373 ;; *************** function _oled_putString *****************
 19374 ;; Defined at:
 19375 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 19376 ;; Parameters:    Size  Location     Type
 19377 ;;  string          2   17[BANK0 ] PTR const unsigned char 
 19378 ;;		 -> oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), STR_189(12), 
 19379 ;;		 -> STR_188(8), STR_187(9), storedLight(5), STR_182(5), 
 19380 ;;		 -> STR_181(8), STR_180(8), STR_179(9), STR_162(16), 
 19381 ;;		 -> STR_161(17), STR_160(17), STR_159(4), STR_158(4), 
 19382 ;;		 -> STR_157(4), STR_156(4), STR_155(4), STR_154(4), 
 19383 ;;		 -> STR_153(4), STR_152(16), STR_151(17), STR_150(4), 
 19384 ;;		 -> STR_149(4), STR_148(4), STR_147(4), STR_146(4), 
 19385 ;;		 -> STR_145(4), STR_144(4), STR_143(4), STR_142(4), 
 19386 ;;		 -> STR_141(4), STR_140(4), STR_139(4), STR_138(4), 
 19387 ;;		 -> STR_137(16), STR_136(12), STR_135(17), STR_134(16), 
 19388 ;;		 -> STR_133(16), STR_132(16), STR_131(15), STR_130(15), 
 19389 ;;		 -> STR_129(16), STR_128(4), STR_127(3), STR_126(3), 
 19390 ;;		 -> STR_125(3), STR_124(3), STR_123(2), STR_122(5), 
 19391 ;;		 -> STR_121(7), STR_120(17), STR_119(17), STR_118(2), 
 19392 ;;		 -> STR_117(7), STR_116(7), STR_115(16), STR_114(16), 
 19393 ;;		 -> STR_113(15), STR_112(15), STR_111(17), STR_110(16), 
 19394 ;;		 -> STR_109(17), STR_108(17), STR_107(7), STR_106(10), 
 19395 ;;		 -> STR_105(17), STR_104(16), STR_103(16), STR_102(16), 
 19396 ;;		 -> STR_101(16), STR_100(17), STR_99(17), STR_98(16), 
 19397 ;;		 -> STR_96(19), STR_94(17), STR_92(17), STR_91(17), 
 19398 ;;		 -> responseData(32), responsePortNum(3), STR_88(13), STR_87(12), 
 19399 ;;		 -> STR_86(12), STR_83(18), STR_82(13), STR_81(17), 
 19400 ;;		 -> STR_80(16), STR_79(17), STR_78(17), STR_77(16), 
 19401 ;;		 -> STR_76(17), STR_75(17), STR_73(13), STR_72(12), 
 19402 ;;		 -> STR_71(17), STR_65(7), STR_64(10), STR_62(11), 
 19403 ;;		 -> STR_61(11), STR_56(9), STR_55(11), STR_51(11), 
 19404 ;;		 -> STR_50(10), STR_47(9), STR_46(11), STR_42(17), 
 19405 ;;		 -> STR_40(17), STR_38(17), STR_37(17), STR_36(17), 
 19406 ;;		 -> STR_34(17), STR_33(17), STR_32(17), moduleResonseBuffer(64), 
 19407 ;;		 -> STR_29(17), STR_28(17), STR_27(17), STR_26(17), 
 19408 ;;		 -> STR_25(9), STR_24(10), STR_23(5), STR_20(9), 
 19409 ;;		 -> STR_19(8), STR_18(8), STR_17(9), STR_16(10), 
 19410 ;;		 -> STR_15(11), STR_14(13), STR_13(13), STR_12(13), 
 19411 ;;		 -> STR_11(12), STR_10(13), STR_9(9), STR_8(12), 
 19412 ;;		 -> STR_7(16), STR_6(2), STR_5(2), STR_4(9), 
 19413 ;;		 -> STR_3(11), STR_2(15), STR_1(10), 
 19414 ;;  station_dot     1   19[BANK0 ] unsigned char 
 19415 ;;  start_page      1   20[BANK0 ] unsigned char 
 19416 ;; Auto vars:     Size  Location     Type
 19417 ;;  index           1   21[BANK0 ] unsigned char 
 19418 ;; Return value:  Size  Location     Type
 19419 ;;		None               void
 19420 ;; Registers used:
 19421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19422 ;; Tracked objects:
 19423 ;;		On entry : 0/0
 19424 ;;		On exit  : 0/0
 19425 ;;		Unchanged: 0/0
 19426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19427 ;;      Params:         0       4       0       0       0       0       0       0       0
 19428 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19429 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19430 ;;      Totals:         0       5       0       0       0       0       0       0       0
 19431 ;;Total ram usage:        5 bytes
 19432 ;; Hardware stack levels used:    1
 19433 ;; Hardware stack levels required when called:   14
 19434 ;; This function calls:
 19435 ;;		_oled_putChar
 19436 ;; This function is called by:
 19437 ;;		_main
 19438 ;;		_test_oled
 19439 ;;		_test_switch
 19440 ;;		_test_comms
 19441 ;;		_test_leds
 19442 ;;		_moteHandler
 19443 ;;		_moteJoiningProcess
 19444 ;;		_moteRunningProcess
 19445 ;;		_moteApp_testSensors
 19446 ;;		_USBapp_Handler
 19447 ;;		_oled_putUint8
 19448 ;;		_oled_putint8
 19449 ;;		_test_adc
 19450 ;;		_test_rf
 19451 ;;		_oled_putUint16
 19452 ;; This function uses a non-reentrant model
 19453 ;;
 19454                           
 19455                           	psect	text68
 19456  005060                     __ptext68:
 19457                           	opt stack 0
 19458  005060                     _oled_putString:
 19459                           	opt stack 14
 19460                           
 19461                           ;SSD1306oLED.c: 333: uint8_t index;
 19462                           ;SSD1306oLED.c: 334: for(index = station_dot; index < 16; index++)
 19463                           
 19464                           ; BSR set to: 0
 19465                           ;incstack = 0
 19466  005060  C0C2  F0C4         	movff	oled_putString@station_dot,oled_putString@index
 19467  005064  0E0F               	movlw	15
 19468  005066  0100               	movlb	0	; () banked
 19469  005068  65C4               	cpfsgt	oled_putString@index& (0+255),b
 19470  00506A  D002               	goto	l11307
 19471  00506C  0012               	return	
 19472                           
 19473                           ; BSR set to: 0
 19474  00506E  0012               	return	
 19475  005070                     l11307:
 19476                           
 19477                           ; BSR set to: 0
 19478                           ;SSD1306oLED.c: 335: {
 19479                           ;SSD1306oLED.c: 336: if (*string != 0)
 19480  005070  C0C0  FFF6         	movff	oled_putString@string,tblptrl
 19481  005074  C0C1  FFF7         	movff	oled_putString@string+1,tblptrh
 19482  005078  6AF8               	clrf	tblptru,c
 19483  00507A  0E07               	movlw	(high __ramtop+-1)
 19484  00507C  64F7               	cpfsgt	tblptrh,c
 19485  00507E  D003               	bra	u9727
 19486  005080  0008               	tblrd		*
 19487  005082  50F5               	movf	tablat,w,c
 19488  005084  D005               	bra	u9720
 19489  005086                     u9727:
 19490  005086  CFF6 FFE9          	movff	tblptrl,fsr0l
 19491  00508A  CFF7 FFEA          	movff	tblptrh,fsr0h
 19492  00508E  50EF               	movf	indf0,w,c
 19493  005090                     u9720:
 19494  005090  0900               	iorlw	0
 19495  005092  B4D8               	btfsc	status,2,c
 19496  005094  0012               	return	
 19497                           
 19498                           ;SSD1306oLED.c: 337: {
 19499                           ;SSD1306oLED.c: 338: oled_putChar(*string, index, start_page);
 19500  005096  C0C4  F0B1         	movff	oled_putString@index,oled_putChar@station_dot
 19501  00509A  C0C3  F0B2         	movff	oled_putString@start_page,oled_putChar@start_page
 19502  00509E  C0C0  FFF6         	movff	oled_putString@string,tblptrl
 19503  0050A2  C0C1  FFF7         	movff	oled_putString@string+1,tblptrh
 19504  0050A6  6AF8               	clrf	tblptru,c
 19505  0050A8  0E07               	movlw	(high __ramtop+-1)
 19506  0050AA  64F7               	cpfsgt	tblptrh,c
 19507  0050AC  D003               	bra	u9747
 19508  0050AE  0008               	tblrd		*
 19509  0050B0  50F5               	movf	tablat,w,c
 19510  0050B2  D005               	bra	u9740
 19511  0050B4                     u9747:
 19512  0050B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 19513  0050B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 19514  0050BC  50EF               	movf	indf0,w,c
 19515  0050BE                     u9740:
 19516  0050BE  EC8C  F023         	call	_oled_putChar
 19517                           
 19518                           ;SSD1306oLED.c: 339: *string++;
 19519  0050C2  0100               	movlb	0	; () banked
 19520  0050C4  4BC0               	infsnz	oled_putString@string& (0+255),f,b
 19521  0050C6  2BC1               	incf	(oled_putString@string+1)& (0+255),f,b
 19522                           
 19523                           ;SSD1306oLED.c: 340: }
 19524  0050C8  D001               	goto	l11313
 19525                           
 19526                           ; BSR set to: 0
 19527                           ;SSD1306oLED.c: 341: else
 19528                           ;SSD1306oLED.c: 342: {
 19529                           ;SSD1306oLED.c: 343: break;
 19530  0050CA  0012               	return	
 19531  0050CC                     l11313:
 19532                           
 19533                           ; BSR set to: 0
 19534  0050CC  0100               	movlb	0	; () banked
 19535  0050CE  2BC4               	incf	oled_putString@index& (0+255),f,b
 19536                           
 19537                           ; BSR set to: 0
 19538  0050D0  0E0F               	movlw	15
 19539  0050D2  0100               	movlb	0	; () banked
 19540  0050D4  65C4               	cpfsgt	oled_putString@index& (0+255),b
 19541  0050D6  D7CC               	goto	l11307
 19542  0050D8  0012               	return	
 19543                           
 19544                           ; BSR set to: 0
 19545  0050DA  0012               	return		;funcret
 19546  0050DC                     __end_of_oled_putString:
 19547                           	opt stack 0
 19548                           tblptru	equ	0xFF8
 19549                           tblptrh	equ	0xFF7
 19550                           tblptrl	equ	0xFF6
 19551                           tablat	equ	0xFF5
 19552                           prodh	equ	0xFF4
 19553                           prodl	equ	0xFF3
 19554                           intcon	equ	0xFF2
 19555                           intcon3	equ	0xFF0
 19556                           indf0	equ	0xFEF
 19557                           postinc0	equ	0xFEE
 19558                           fsr0h	equ	0xFEA
 19559                           fsr0l	equ	0xFE9
 19560                           wreg	equ	0xFE8
 19561                           indf1	equ	0xFE7
 19562                           postdec1	equ	0xFE5
 19563                           fsr1h	equ	0xFE2
 19564                           fsr1l	equ	0xFE1
 19565                           indf2	equ	0xFDF
 19566                           fsr2h	equ	0xFDA
 19567                           fsr2l	equ	0xFD9
 19568                           status	equ	0xFD8
 19569                           
 19570 ;; *************** function _oled_clear *****************
 19571 ;; Defined at:
 19572 ;;		line 348 in file "../Includes/Drivers/SSD1306oLED.c"
 19573 ;; Parameters:    Size  Location     Type
 19574 ;;		None
 19575 ;; Auto vars:     Size  Location     Type
 19576 ;;		None
 19577 ;; Return value:  Size  Location     Type
 19578 ;;		None               void
 19579 ;; Registers used:
 19580 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19581 ;; Tracked objects:
 19582 ;;		On entry : 0/0
 19583 ;;		On exit  : 0/0
 19584 ;;		Unchanged: 0/0
 19585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19586 ;;      Params:         0       0       0       0       0       0       0       0       0
 19587 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19588 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19589 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19590 ;;Total ram usage:        0 bytes
 19591 ;; Hardware stack levels used:    1
 19592 ;; Hardware stack levels required when called:   15
 19593 ;; This function calls:
 19594 ;;		_oled_clearRow
 19595 ;; This function is called by:
 19596 ;;		_main
 19597 ;;		_test_powerup
 19598 ;;		_test_oled
 19599 ;;		_test_switch
 19600 ;;		_moteHandler
 19601 ;;		_moteJoiningProcess
 19602 ;;		_moteRunningProcess
 19603 ;;		_moteApp_testSensors
 19604 ;;		_USBapp_Handler
 19605 ;;		_oled_init
 19606 ;;		_test_adc
 19607 ;;		_test_rf
 19608 ;; This function uses a non-reentrant model
 19609 ;;
 19610                           
 19611                           	psect	text69
 19612  005D6C                     __ptext69:
 19613                           	opt stack 0
 19614  005D6C                     _oled_clear:
 19615                           	opt stack 13
 19616                           
 19617                           ;SSD1306oLED.c: 350: oled_clearRow(0);
 19618                           
 19619                           ;incstack = 0
 19620  005D6C  0E00               	movlw	0
 19621  005D6E  EC91  F02D         	call	_oled_clearRow
 19622                           
 19623                           ;SSD1306oLED.c: 351: oled_clearRow(1);
 19624  005D72  0E01               	movlw	1
 19625  005D74  EC91  F02D         	call	_oled_clearRow
 19626                           
 19627                           ;SSD1306oLED.c: 352: oled_clearRow(2);
 19628  005D78  0E02               	movlw	2
 19629  005D7A  EC91  F02D         	call	_oled_clearRow
 19630                           
 19631                           ;SSD1306oLED.c: 353: oled_clearRow(3);
 19632  005D7E  0E03               	movlw	3
 19633  005D80  EC91  F02D         	call	_oled_clearRow
 19634  005D84  0012               	return		;funcret
 19635  005D86                     __end_of_oled_clear:
 19636                           	opt stack 0
 19637                           tblptru	equ	0xFF8
 19638                           tblptrh	equ	0xFF7
 19639                           tblptrl	equ	0xFF6
 19640                           tablat	equ	0xFF5
 19641                           prodh	equ	0xFF4
 19642                           prodl	equ	0xFF3
 19643                           intcon	equ	0xFF2
 19644                           intcon3	equ	0xFF0
 19645                           indf0	equ	0xFEF
 19646                           postinc0	equ	0xFEE
 19647                           fsr0h	equ	0xFEA
 19648                           fsr0l	equ	0xFE9
 19649                           wreg	equ	0xFE8
 19650                           indf1	equ	0xFE7
 19651                           postdec1	equ	0xFE5
 19652                           fsr1h	equ	0xFE2
 19653                           fsr1l	equ	0xFE1
 19654                           indf2	equ	0xFDF
 19655                           fsr2h	equ	0xFDA
 19656                           fsr2l	equ	0xFD9
 19657                           status	equ	0xFD8
 19658                           
 19659 ;; *************** function _oled_clearRow *****************
 19660 ;; Defined at:
 19661 ;;		line 356 in file "../Includes/Drivers/SSD1306oLED.c"
 19662 ;; Parameters:    Size  Location     Type
 19663 ;;  page            1    wreg     unsigned char 
 19664 ;; Auto vars:     Size  Location     Type
 19665 ;;  page            1   12[BANK0 ] unsigned char 
 19666 ;;  index           1   13[BANK0 ] unsigned char 
 19667 ;; Return value:  Size  Location     Type
 19668 ;;		None               void
 19669 ;; Registers used:
 19670 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19671 ;; Tracked objects:
 19672 ;;		On entry : 0/0
 19673 ;;		On exit  : 0/0
 19674 ;;		Unchanged: 0/0
 19675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19676 ;;      Params:         0       0       0       0       0       0       0       0       0
 19677 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19678 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19679 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19680 ;;Total ram usage:        2 bytes
 19681 ;; Hardware stack levels used:    1
 19682 ;; Hardware stack levels required when called:   14
 19683 ;; This function calls:
 19684 ;;		_oled_putChar
 19685 ;; This function is called by:
 19686 ;;		_oled_clear
 19687 ;; This function uses a non-reentrant model
 19688 ;;
 19689                           
 19690                           	psect	text70
 19691  005B22                     __ptext70:
 19692                           	opt stack 0
 19693  005B22                     _oled_clearRow:
 19694                           	opt stack 13
 19695                           
 19696                           ;incstack = 0
 19697                           ;oled_clearRow@page stored from wreg
 19698  005B22  0100               	movlb	0	; () banked
 19699  005B24  6FBB               	movwf	oled_clearRow@page& (0+255),b
 19700                           
 19701                           ; BSR set to: 0
 19702                           ;SSD1306oLED.c: 358: uint8_t index;
 19703                           ;SSD1306oLED.c: 360: for(index = 0; index < 16; index++)
 19704  005B26  0E00               	movlw	0
 19705  005B28  0100               	movlb	0	; () banked
 19706  005B2A  6FBC               	movwf	oled_clearRow@index& (0+255),b
 19707                           
 19708                           ; BSR set to: 0
 19709  005B2C  0E0F               	movlw	15
 19710  005B2E  0100               	movlb	0	; () banked
 19711  005B30  65BC               	cpfsgt	oled_clearRow@index& (0+255),b
 19712  005B32  D002               	goto	l11109
 19713  005B34  0012               	return	
 19714                           
 19715                           ; BSR set to: 0
 19716  005B36  0012               	return	
 19717  005B38                     l11109:
 19718                           
 19719                           ; BSR set to: 0
 19720                           ;SSD1306oLED.c: 361: {
 19721                           ;SSD1306oLED.c: 362: oled_putChar( ' ', index, page);
 19722  005B38  C0BC  F0B1         	movff	oled_clearRow@index,oled_putChar@station_dot
 19723  005B3C  C0BB  F0B2         	movff	oled_clearRow@page,oled_putChar@start_page
 19724  005B40  0E20               	movlw	32
 19725  005B42  EC8C  F023         	call	_oled_putChar
 19726  005B46  0100               	movlb	0	; () banked
 19727  005B48  2BBC               	incf	oled_clearRow@index& (0+255),f,b
 19728                           
 19729                           ; BSR set to: 0
 19730  005B4A  0E0F               	movlw	15
 19731  005B4C  0100               	movlb	0	; () banked
 19732  005B4E  65BC               	cpfsgt	oled_clearRow@index& (0+255),b
 19733  005B50  D7F3               	goto	l11109
 19734  005B52  0012               	return	
 19735                           
 19736                           ; BSR set to: 0
 19737                           
 19738                           ; BSR set to: 0
 19739  005B54  0012               	return		;funcret
 19740  005B56                     __end_of_oled_clearRow:
 19741                           	opt stack 0
 19742                           tblptru	equ	0xFF8
 19743                           tblptrh	equ	0xFF7
 19744                           tblptrl	equ	0xFF6
 19745                           tablat	equ	0xFF5
 19746                           prodh	equ	0xFF4
 19747                           prodl	equ	0xFF3
 19748                           intcon	equ	0xFF2
 19749                           intcon3	equ	0xFF0
 19750                           indf0	equ	0xFEF
 19751                           postinc0	equ	0xFEE
 19752                           fsr0h	equ	0xFEA
 19753                           fsr0l	equ	0xFE9
 19754                           wreg	equ	0xFE8
 19755                           indf1	equ	0xFE7
 19756                           postdec1	equ	0xFE5
 19757                           fsr1h	equ	0xFE2
 19758                           fsr1l	equ	0xFE1
 19759                           indf2	equ	0xFDF
 19760                           fsr2h	equ	0xFDA
 19761                           fsr2l	equ	0xFD9
 19762                           status	equ	0xFD8
 19763                           
 19764 ;; *************** function _oled_putChar *****************
 19765 ;; Defined at:
 19766 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 19767 ;; Parameters:    Size  Location     Type
 19768 ;;  k               1    wreg     unsigned char 
 19769 ;;  station_dot     1    2[BANK0 ] unsigned char 
 19770 ;;  start_page      1    3[BANK0 ] unsigned char 
 19771 ;; Auto vars:     Size  Location     Type
 19772 ;;  k               1   10[BANK0 ] unsigned char 
 19773 ;;  index           1   11[BANK0 ] unsigned char 
 19774 ;; Return value:  Size  Location     Type
 19775 ;;		None               void
 19776 ;; Registers used:
 19777 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19778 ;; Tracked objects:
 19779 ;;		On entry : 0/0
 19780 ;;		On exit  : 0/0
 19781 ;;		Unchanged: 0/0
 19782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19783 ;;      Params:         0       2       0       0       0       0       0       0       0
 19784 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19785 ;;      Temps:          0       6       0       0       0       0       0       0       0
 19786 ;;      Totals:         0      10       0       0       0       0       0       0       0
 19787 ;;Total ram usage:       10 bytes
 19788 ;; Hardware stack levels used:    1
 19789 ;; Hardware stack levels required when called:   13
 19790 ;; This function calls:
 19791 ;;		_Set_Column_Address
 19792 ;;		_Set_Page_Address
 19793 ;;		_oled_writeData
 19794 ;; This function is called by:
 19795 ;;		_moteApp_testSensors
 19796 ;;		_oled_putString
 19797 ;;		_oled_clearRow
 19798 ;;		_test_adc
 19799 ;; This function uses a non-reentrant model
 19800 ;;
 19801                           
 19802                           	psect	text71
 19803  004718                     __ptext71:
 19804                           	opt stack 0
 19805  004718                     _oled_putChar:
 19806                           	opt stack 14
 19807                           
 19808                           ; BSR set to: 0
 19809                           ;incstack = 0
 19810                           ;oled_putChar@k stored from wreg
 19811  004718  0100               	movlb	0	; () banked
 19812  00471A  6FB9               	movwf	oled_putChar@k& (0+255),b
 19813                           
 19814                           ; BSR set to: 0
 19815                           ;SSD1306oLED.c: 320: uint8_t index;
 19816                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 19817  00471C  0100               	movlb	0	; () banked
 19818  00471E  51B2               	movf	oled_putChar@start_page& (0+255),w,b
 19819  004720  ECC3  F02E         	call	_Set_Page_Address
 19820                           
 19821                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 19822  004724  0100               	movlb	0	; () banked
 19823  004726  51B1               	movf	oled_putChar@station_dot& (0+255),w,b
 19824  004728  0D08               	mullw	8
 19825  00472A  50F3               	movf	prodl,w,c
 19826  00472C  0F04               	addlw	4
 19827  00472E  ECA7  F02E         	call	_Set_Column_Address
 19828                           
 19829                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 19830  004732  0E00               	movlw	0
 19831  004734  0100               	movlb	0	; () banked
 19832  004736  6FBA               	movwf	oled_putChar@index& (0+255),b
 19833                           
 19834                           ; BSR set to: 0
 19835  004738  0E07               	movlw	7
 19836  00473A  0100               	movlb	0	; () banked
 19837  00473C  65BA               	cpfsgt	oled_putChar@index& (0+255),b
 19838  00473E  D002               	goto	l11075
 19839  004740  0012               	return	
 19840                           
 19841                           ; BSR set to: 0
 19842  004742  0012               	return	
 19843  004744                     l11075:
 19844                           
 19845                           ; BSR set to: 0
 19846                           ;SSD1306oLED.c: 326: {
 19847                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 19848  004744  0100               	movlb	0	; () banked
 19849  004746  51BA               	movf	oled_putChar@index& (0+255),w,b
 19850  004748  0D01               	mullw	1
 19851  00474A  0E00               	movlw	0
 19852  00474C  0100               	movlb	0	; () banked
 19853  00474E  6FB3               	movwf	??_oled_putChar& (0+255),b
 19854  004750  0EFF               	movlw	255
 19855  004752  0100               	movlb	0	; () banked
 19856  004754  6FB4               	movwf	(??_oled_putChar+1)& (0+255),b
 19857  004756  0100               	movlb	0	; () banked
 19858  004758  51B9               	movf	oled_putChar@k& (0+255),w,b
 19859  00475A  0100               	movlb	0	; () banked
 19860  00475C  6FB5               	movwf	(??_oled_putChar+2)& (0+255),b
 19861  00475E  6BB6               	clrf	(??_oled_putChar+3)& (0+255),b
 19862  004760  0100               	movlb	0	; () banked
 19863  004762  90D8               	bcf	status,0,c
 19864  004764  37B5               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 19865  004766  37B6               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 19866  004768  0100               	movlb	0	; () banked
 19867  00476A  90D8               	bcf	status,0,c
 19868  00476C  37B5               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 19869  00476E  37B6               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 19870  004770  0100               	movlb	0	; () banked
 19871  004772  90D8               	bcf	status,0,c
 19872  004774  37B5               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 19873  004776  37B6               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 19874  004778  0100               	movlb	0	; () banked
 19875  00477A  51B3               	movf	??_oled_putChar& (0+255),w,b
 19876  00477C  0100               	movlb	0	; () banked
 19877  00477E  27B5               	addwf	(??_oled_putChar+2)& (0+255),f,b
 19878  004780  0100               	movlb	0	; () banked
 19879  004782  51B4               	movf	(??_oled_putChar+1)& (0+255),w,b
 19880  004784  0100               	movlb	0	; () banked
 19881  004786  23B6               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 19882  004788  C1FB  F0B7         	movff	_selectedFont,??_oled_putChar+4
 19883  00478C  C1FC  F0B8         	movff	_selectedFont+1,??_oled_putChar+5
 19884  004790  0100               	movlb	0	; () banked
 19885  004792  51B5               	movf	(??_oled_putChar+2)& (0+255),w,b
 19886  004794  0100               	movlb	0	; () banked
 19887  004796  27B7               	addwf	(??_oled_putChar+4)& (0+255),f,b
 19888  004798  0100               	movlb	0	; () banked
 19889  00479A  51B6               	movf	(??_oled_putChar+3)& (0+255),w,b
 19890  00479C  0100               	movlb	0	; () banked
 19891  00479E  23B8               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 19892  0047A0  50F3               	movf	prodl,w,c
 19893  0047A2  0100               	movlb	0	; () banked
 19894  0047A4  27B7               	addwf	(??_oled_putChar+4)& (0+255),f,b
 19895  0047A6  50F4               	movf	prodh,w,c
 19896  0047A8  0100               	movlb	0	; () banked
 19897  0047AA  23B8               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 19898  0047AC  C0B7  FFF6         	movff	??_oled_putChar+4,tblptrl
 19899  0047B0  C0B8  FFF7         	movff	??_oled_putChar+5,tblptrh
 19900  0047B4                     	if	0	;tblptru may be non-zero
 19901  0047B4                     	endif
 19902  0047B4                     	if	0	;tblptru may be non-zero
 19903  0047B4                     	endif
 19904  0047B4  0008               	tblrd		*
 19905  0047B6  50F5               	movf	tablat,w,c
 19906  0047B8  ECE9  F02E         	call	_oled_writeData
 19907  0047BC  0100               	movlb	0	; () banked
 19908  0047BE  2BBA               	incf	oled_putChar@index& (0+255),f,b
 19909                           
 19910                           ; BSR set to: 0
 19911  0047C0  0E07               	movlw	7
 19912  0047C2  0100               	movlb	0	; () banked
 19913  0047C4  65BA               	cpfsgt	oled_putChar@index& (0+255),b
 19914  0047C6  D7BE               	goto	l11075
 19915  0047C8  0012               	return	
 19916                           
 19917                           ; BSR set to: 0
 19918                           
 19919                           ; BSR set to: 0
 19920  0047CA  0012               	return		;funcret
 19921  0047CC                     __end_of_oled_putChar:
 19922                           	opt stack 0
 19923                           tblptru	equ	0xFF8
 19924                           tblptrh	equ	0xFF7
 19925                           tblptrl	equ	0xFF6
 19926                           tablat	equ	0xFF5
 19927                           prodh	equ	0xFF4
 19928                           prodl	equ	0xFF3
 19929                           intcon	equ	0xFF2
 19930                           intcon3	equ	0xFF0
 19931                           indf0	equ	0xFEF
 19932                           postinc0	equ	0xFEE
 19933                           fsr0h	equ	0xFEA
 19934                           fsr0l	equ	0xFE9
 19935                           wreg	equ	0xFE8
 19936                           indf1	equ	0xFE7
 19937                           postdec1	equ	0xFE5
 19938                           fsr1h	equ	0xFE2
 19939                           fsr1l	equ	0xFE1
 19940                           indf2	equ	0xFDF
 19941                           fsr2h	equ	0xFDA
 19942                           fsr2l	equ	0xFD9
 19943                           status	equ	0xFD8
 19944                           
 19945 ;; *************** function _oled_writeData *****************
 19946 ;; Defined at:
 19947 ;;		line 442 in file "../Includes/Drivers/SSD1306oLED.c"
 19948 ;; Parameters:    Size  Location     Type
 19949 ;;  data            1    wreg     unsigned char 
 19950 ;; Auto vars:     Size  Location     Type
 19951 ;;  data            1    0[BANK0 ] unsigned char 
 19952 ;; Return value:  Size  Location     Type
 19953 ;;		None               void
 19954 ;; Registers used:
 19955 ;;		wreg
 19956 ;; Tracked objects:
 19957 ;;		On entry : 0/0
 19958 ;;		On exit  : 0/0
 19959 ;;		Unchanged: 0/0
 19960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19961 ;;      Params:         0       0       0       0       0       0       0       0       0
 19962 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19963 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19964 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19965 ;;Total ram usage:        1 bytes
 19966 ;; Hardware stack levels used:    1
 19967 ;; Hardware stack levels required when called:   11
 19968 ;; This function calls:
 19969 ;;		Nothing
 19970 ;; This function is called by:
 19971 ;;		_oled_putChar
 19972 ;; This function uses a non-reentrant model
 19973 ;;
 19974                           
 19975                           	psect	text72
 19976  005DD2                     __ptext72:
 19977                           	opt stack 0
 19978  005DD2                     _oled_writeData:
 19979                           	opt stack 15
 19980                           
 19981                           ; BSR set to: 0
 19982                           ;incstack = 0
 19983                           ;oled_writeData@data stored from wreg
 19984  005DD2  0100               	movlb	0	; () banked
 19985  005DD4  6FAF               	movwf	oled_writeData@data& (0+255),b
 19986                           
 19987                           ; BSR set to: 0
 19988                           ;SSD1306oLED.c: 444: LATBbits.LATB4=0;
 19989  005DD6  988A               	bcf	3978,4,c	;volatile
 19990                           
 19991                           ;SSD1306oLED.c: 445: LATCbits.LATC0=1;
 19992  005DD8  808B               	bsf	3979,0,c	;volatile
 19993                           
 19994                           ; BSR set to: 0
 19995                           ;SSD1306oLED.c: 446: LATD=data;
 19996  005DDA  C0AF  FF8C         	movff	oled_writeData@data,3980	;volatile
 19997                           
 19998                           ; BSR set to: 0
 19999                           ;SSD1306oLED.c: 447: LATCbits.LATC1=0;
 20000  005DDE  928B               	bcf	3979,1,c	;volatile
 20001                           
 20002                           ; BSR set to: 0
 20003                           ;SSD1306oLED.c: 448: __nop();
 20004  005DE0  F000               	nop	
 20005                           
 20006                           ;SSD1306oLED.c: 449: LATCbits.LATC1=1;
 20007  005DE2  828B               	bsf	3979,1,c	;volatile
 20008                           
 20009                           ;SSD1306oLED.c: 450: LATBbits.LATB4=1;
 20010  005DE4  888A               	bsf	3978,4,c	;volatile
 20011  005DE6  0012               	return	
 20012                           
 20013                           ;SSD1306oLED.c: 451: return;
 20014  005DE8  0012               	return		;funcret
 20015  005DEA                     __end_of_oled_writeData:
 20016                           	opt stack 0
 20017                           tblptru	equ	0xFF8
 20018                           tblptrh	equ	0xFF7
 20019                           tblptrl	equ	0xFF6
 20020                           tablat	equ	0xFF5
 20021                           prodh	equ	0xFF4
 20022                           prodl	equ	0xFF3
 20023                           intcon	equ	0xFF2
 20024                           intcon3	equ	0xFF0
 20025                           indf0	equ	0xFEF
 20026                           postinc0	equ	0xFEE
 20027                           fsr0h	equ	0xFEA
 20028                           fsr0l	equ	0xFE9
 20029                           wreg	equ	0xFE8
 20030                           indf1	equ	0xFE7
 20031                           postdec1	equ	0xFE5
 20032                           fsr1h	equ	0xFE2
 20033                           fsr1l	equ	0xFE1
 20034                           indf2	equ	0xFDF
 20035                           fsr2h	equ	0xFDA
 20036                           fsr2l	equ	0xFD9
 20037                           status	equ	0xFD8
 20038                           
 20039 ;; *************** function _Set_Page_Address *****************
 20040 ;; Defined at:
 20041 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 20042 ;; Parameters:    Size  Location     Type
 20043 ;;  address         1    wreg     unsigned char 
 20044 ;; Auto vars:     Size  Location     Type
 20045 ;;  address         1    1[BANK0 ] unsigned char 
 20046 ;; Return value:  Size  Location     Type
 20047 ;;		None               void
 20048 ;; Registers used:
 20049 ;;		wreg, status,2, status,0, cstack
 20050 ;; Tracked objects:
 20051 ;;		On entry : 0/0
 20052 ;;		On exit  : 0/0
 20053 ;;		Unchanged: 0/0
 20054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20055 ;;      Params:         0       0       0       0       0       0       0       0       0
 20056 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20057 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20058 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20059 ;;Total ram usage:        1 bytes
 20060 ;; Hardware stack levels used:    1
 20061 ;; Hardware stack levels required when called:   12
 20062 ;; This function calls:
 20063 ;;		_oled_writeCommand
 20064 ;; This function is called by:
 20065 ;;		_oled_putChar
 20066 ;; This function uses a non-reentrant model
 20067 ;;
 20068                           
 20069                           	psect	text73
 20070  005D86                     __ptext73:
 20071                           	opt stack 0
 20072  005D86                     _Set_Page_Address:
 20073                           	opt stack 14
 20074                           
 20075                           ;incstack = 0
 20076                           ;Set_Page_Address@address stored from wreg
 20077  005D86  0100               	movlb	0	; () banked
 20078  005D88  6FB0               	movwf	Set_Page_Address@address& (0+255),b
 20079                           
 20080                           ; BSR set to: 0
 20081                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 20082  005D8A  0100               	movlb	0	; () banked
 20083  005D8C  51B0               	movf	Set_Page_Address@address& (0+255),w,b
 20084  005D8E  09B0               	iorlw	176
 20085  005D90  0100               	movlb	0	; () banked
 20086  005D92  6FB0               	movwf	Set_Page_Address@address& (0+255),b
 20087                           
 20088                           ; BSR set to: 0
 20089                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 20090  005D94  0100               	movlb	0	; () banked
 20091  005D96  51B0               	movf	Set_Page_Address@address& (0+255),w,b
 20092  005D98  ECF5  F02E         	call	_oled_writeCommand
 20093  005D9C  0012               	return	
 20094                           
 20095                           ;SSD1306oLED.c: 245: return;
 20096  005D9E  0012               	return		;funcret
 20097  005DA0                     __end_of_Set_Page_Address:
 20098                           	opt stack 0
 20099                           tblptru	equ	0xFF8
 20100                           tblptrh	equ	0xFF7
 20101                           tblptrl	equ	0xFF6
 20102                           tablat	equ	0xFF5
 20103                           prodh	equ	0xFF4
 20104                           prodl	equ	0xFF3
 20105                           intcon	equ	0xFF2
 20106                           intcon3	equ	0xFF0
 20107                           indf0	equ	0xFEF
 20108                           postinc0	equ	0xFEE
 20109                           fsr0h	equ	0xFEA
 20110                           fsr0l	equ	0xFE9
 20111                           wreg	equ	0xFE8
 20112                           indf1	equ	0xFE7
 20113                           postdec1	equ	0xFE5
 20114                           fsr1h	equ	0xFE2
 20115                           fsr1l	equ	0xFE1
 20116                           indf2	equ	0xFDF
 20117                           fsr2h	equ	0xFDA
 20118                           fsr2l	equ	0xFD9
 20119                           status	equ	0xFD8
 20120                           
 20121 ;; *************** function _Set_Column_Address *****************
 20122 ;; Defined at:
 20123 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 20124 ;; Parameters:    Size  Location     Type
 20125 ;;  address         1    wreg     unsigned char 
 20126 ;; Auto vars:     Size  Location     Type
 20127 ;;  address         1    1[BANK0 ] unsigned char 
 20128 ;; Return value:  Size  Location     Type
 20129 ;;		None               void
 20130 ;; Registers used:
 20131 ;;		wreg, status,2, status,0, cstack
 20132 ;; Tracked objects:
 20133 ;;		On entry : 0/0
 20134 ;;		On exit  : 0/0
 20135 ;;		Unchanged: 0/0
 20136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20137 ;;      Params:         0       0       0       0       0       0       0       0       0
 20138 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20139 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20140 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20141 ;;Total ram usage:        1 bytes
 20142 ;; Hardware stack levels used:    1
 20143 ;; Hardware stack levels required when called:   12
 20144 ;; This function calls:
 20145 ;;		_oled_writeCommand
 20146 ;; This function is called by:
 20147 ;;		_oled_putChar
 20148 ;; This function uses a non-reentrant model
 20149 ;;
 20150                           
 20151                           	psect	text74
 20152  005D4E                     __ptext74:
 20153                           	opt stack 0
 20154  005D4E                     _Set_Column_Address:
 20155                           	opt stack 14
 20156                           
 20157                           ;incstack = 0
 20158                           ;Set_Column_Address@address stored from wreg
 20159  005D4E  0100               	movlb	0	; () banked
 20160  005D50  6FB0               	movwf	Set_Column_Address@address& (0+255),b
 20161                           
 20162                           ; BSR set to: 0
 20163                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 20164  005D52  0100               	movlb	0	; () banked
 20165  005D54  39B0               	swapf	Set_Column_Address@address& (0+255),w,b
 20166  005D56  0B0F               	andlw	15
 20167  005D58  0910               	iorlw	16
 20168  005D5A  ECF5  F02E         	call	_oled_writeCommand
 20169                           
 20170                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 20171  005D5E  0100               	movlb	0	; () banked
 20172  005D60  51B0               	movf	Set_Column_Address@address& (0+255),w,b
 20173  005D62  0B0F               	andlw	15
 20174  005D64  ECF5  F02E         	call	_oled_writeCommand
 20175  005D68  0012               	return	
 20176                           
 20177                           ;SSD1306oLED.c: 253: return;
 20178  005D6A  0012               	return		;funcret
 20179  005D6C                     __end_of_Set_Column_Address:
 20180                           	opt stack 0
 20181                           tblptru	equ	0xFF8
 20182                           tblptrh	equ	0xFF7
 20183                           tblptrl	equ	0xFF6
 20184                           tablat	equ	0xFF5
 20185                           prodh	equ	0xFF4
 20186                           prodl	equ	0xFF3
 20187                           intcon	equ	0xFF2
 20188                           intcon3	equ	0xFF0
 20189                           indf0	equ	0xFEF
 20190                           postinc0	equ	0xFEE
 20191                           fsr0h	equ	0xFEA
 20192                           fsr0l	equ	0xFE9
 20193                           wreg	equ	0xFE8
 20194                           indf1	equ	0xFE7
 20195                           postdec1	equ	0xFE5
 20196                           fsr1h	equ	0xFE2
 20197                           fsr1l	equ	0xFE1
 20198                           indf2	equ	0xFDF
 20199                           fsr2h	equ	0xFDA
 20200                           fsr2l	equ	0xFD9
 20201                           status	equ	0xFD8
 20202                           
 20203 ;; *************** function _oled_writeCommand *****************
 20204 ;; Defined at:
 20205 ;;		line 430 in file "../Includes/Drivers/SSD1306oLED.c"
 20206 ;; Parameters:    Size  Location     Type
 20207 ;;  command         1    wreg     unsigned char 
 20208 ;; Auto vars:     Size  Location     Type
 20209 ;;  command         1    0[BANK0 ] unsigned char 
 20210 ;; Return value:  Size  Location     Type
 20211 ;;		None               void
 20212 ;; Registers used:
 20213 ;;		wreg
 20214 ;; Tracked objects:
 20215 ;;		On entry : 0/0
 20216 ;;		On exit  : 0/0
 20217 ;;		Unchanged: 0/0
 20218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20219 ;;      Params:         0       0       0       0       0       0       0       0       0
 20220 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20221 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20222 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20223 ;;Total ram usage:        1 bytes
 20224 ;; Hardware stack levels used:    1
 20225 ;; Hardware stack levels required when called:   11
 20226 ;; This function calls:
 20227 ;;		Nothing
 20228 ;; This function is called by:
 20229 ;;		_Set_Page_Address
 20230 ;;		_Set_Column_Address
 20231 ;;		_oled_devInit
 20232 ;;		_oled_setDisplay
 20233 ;;		_oled_displayOff
 20234 ;;		_oled_setContrastControlRegister
 20235 ;;		_oled_initialDispayLine
 20236 ;;		_oled_powerControl
 20237 ;;		_oled_regulorResistorSelect
 20238 ;; This function uses a non-reentrant model
 20239 ;;
 20240                           
 20241                           	psect	text75
 20242  005DEA                     __ptext75:
 20243                           	opt stack 0
 20244  005DEA                     _oled_writeCommand:
 20245                           	opt stack 14
 20246                           
 20247                           ;incstack = 0
 20248                           ;oled_writeCommand@command stored from wreg
 20249  005DEA  0100               	movlb	0	; () banked
 20250  005DEC  6FAF               	movwf	oled_writeCommand@command& (0+255),b
 20251                           
 20252                           ; BSR set to: 0
 20253                           ;SSD1306oLED.c: 432: LATBbits.LATB4=0;
 20254  005DEE  988A               	bcf	3978,4,c	;volatile
 20255                           
 20256                           ;SSD1306oLED.c: 433: LATCbits.LATC0=0;
 20257  005DF0  908B               	bcf	3979,0,c	;volatile
 20258                           
 20259                           ; BSR set to: 0
 20260                           ;SSD1306oLED.c: 434: LATD=command;
 20261  005DF2  C0AF  FF8C         	movff	oled_writeCommand@command,3980	;volatile
 20262                           
 20263                           ; BSR set to: 0
 20264                           ;SSD1306oLED.c: 435: LATCbits.LATC1=0;
 20265  005DF6  928B               	bcf	3979,1,c	;volatile
 20266                           
 20267                           ; BSR set to: 0
 20268                           ;SSD1306oLED.c: 436: __nop();
 20269  005DF8  F000               	nop	
 20270                           
 20271                           ;SSD1306oLED.c: 437: LATCbits.LATC1=1;
 20272  005DFA  828B               	bsf	3979,1,c	;volatile
 20273                           
 20274                           ;SSD1306oLED.c: 438: LATBbits.LATB4=1;
 20275  005DFC  888A               	bsf	3978,4,c	;volatile
 20276  005DFE  0012               	return	
 20277                           
 20278                           ;SSD1306oLED.c: 439: return;
 20279  005E00  0012               	return		;funcret
 20280  005E02                     __end_of_oled_writeCommand:
 20281                           	opt stack 0
 20282                           tblptru	equ	0xFF8
 20283                           tblptrh	equ	0xFF7
 20284                           tblptrl	equ	0xFF6
 20285                           tablat	equ	0xFF5
 20286                           prodh	equ	0xFF4
 20287                           prodl	equ	0xFF3
 20288                           intcon	equ	0xFF2
 20289                           intcon3	equ	0xFF0
 20290                           indf0	equ	0xFEF
 20291                           postinc0	equ	0xFEE
 20292                           fsr0h	equ	0xFEA
 20293                           fsr0l	equ	0xFE9
 20294                           wreg	equ	0xFE8
 20295                           indf1	equ	0xFE7
 20296                           postdec1	equ	0xFE5
 20297                           fsr1h	equ	0xFE2
 20298                           fsr1l	equ	0xFE1
 20299                           indf2	equ	0xFDF
 20300                           fsr2h	equ	0xFDA
 20301                           fsr2l	equ	0xFD9
 20302                           status	equ	0xFD8
 20303                           
 20304 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 20305 ;; Defined at:
 20306 ;;		line 162 in file "../Includes/Board/USBapp.c"
 20307 ;; Parameters:    Size  Location     Type
 20308 ;;		None
 20309 ;; Auto vars:     Size  Location     Type
 20310 ;;		None
 20311 ;; Return value:  Size  Location     Type
 20312 ;;		None               void
 20313 ;; Registers used:
 20314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20315 ;; Tracked objects:
 20316 ;;		On entry : 0/0
 20317 ;;		On exit  : 0/0
 20318 ;;		Unchanged: 0/0
 20319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20320 ;;      Params:         0       0       0       0       0       0       0       0       0
 20321 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20322 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20323 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20324 ;;Total ram usage:        1 bytes
 20325 ;; Hardware stack levels used:    1
 20326 ;; Hardware stack levels required when called:   13
 20327 ;; This function calls:
 20328 ;;		_CDCTxService
 20329 ;;		_EUSART_Read
 20330 ;;		_EUSART_Write
 20331 ;;		_MOTEapp_setResponseReady
 20332 ;;		_USBapp_getrxByteFlag
 20333 ;;		_getsUSBUSART
 20334 ;;		_putUSBUSART
 20335 ;; This function is called by:
 20336 ;;		_USBapp_Handler
 20337 ;; This function uses a non-reentrant model
 20338 ;;
 20339                           
 20340                           	psect	text76
 20341  003914                     __ptext76:
 20342                           	opt stack 0
 20343  003914                     _USBapp_DeviceCdcEmulatorHandler:
 20344                           	opt stack 16
 20345                           
 20346                           ;USBapp.c: 165: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 20347                           
 20348                           ;incstack = 0
 20349  003914  0E1F               	movlw	31
 20350  003916  0100               	movlb	0	; () banked
 20351  003918  6589               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 20352  00391A  0012               	return	
 20353                           
 20354                           ; BSR set to: 0
 20355  00391C  B260               	btfsc	3936,1,c	;volatile
 20356  00391E  0012               	return	
 20357  003920  D001               	goto	l13221
 20358                           
 20359                           ; BSR set to: 0
 20360                           ;USBapp.c: 166: return;
 20361  003922  0012               	return	
 20362  003924                     l13221:
 20363                           
 20364                           ; BSR set to: 0
 20365                           ;USBapp.c: 168: if (RS232_Out_Data_Rdy == 0)
 20366  003924  5046               	movf	_RS232_Out_Data_Rdy,w,c
 20367  003926  A4D8               	btfss	status,2,c
 20368  003928  D014               	goto	l883
 20369                           
 20370                           ; BSR set to: 0
 20371                           ;USBapp.c: 169: {
 20372                           ;USBapp.c: 170: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 20373  00392A  0E38               	movlw	low _USB_Buffer
 20374  00392C  0100               	movlb	0	; () banked
 20375  00392E  6FB6               	movwf	getsUSBUSART@buffer& (0+255),b
 20376  003930  0E01               	movlw	high _USB_Buffer
 20377  003932  0100               	movlb	0	; () banked
 20378  003934  6FB7               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 20379  003936  0E40               	movlw	64
 20380  003938  0100               	movlb	0	; () banked
 20381  00393A  6FB8               	movwf	getsUSBUSART@len& (0+255),b
 20382  00393C  EC23  F01B         	call	_getsUSBUSART	;wreg free
 20383  003940  6E44               	movwf	_LastRS232Out,c
 20384                           
 20385                           ;USBapp.c: 171: if(LastRS232Out > 0)
 20386  003942  5044               	movf	_LastRS232Out,w,c
 20387  003944  B4D8               	btfsc	status,2,c
 20388  003946  D005               	goto	l883
 20389                           
 20390                           ;USBapp.c: 172: {
 20391                           ;USBapp.c: 173: RS232_Out_Data_Rdy = 1;
 20392  003948  0E01               	movlw	1
 20393  00394A  6E46               	movwf	_RS232_Out_Data_Rdy,c
 20394                           
 20395                           ;USBapp.c: 174: RS232cp = 0;
 20396  00394C  0E00               	movlw	0
 20397  00394E  6E47               	movwf	_RS232cp,c
 20398  003950  D000               	goto	l883
 20399  003952                     l883:
 20400                           
 20401                           ;USBapp.c: 175: }
 20402                           ;USBapp.c: 176: }
 20403                           ;USBapp.c: 179: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 20404  003952  5046               	movf	_RS232_Out_Data_Rdy,w,c
 20405  003954  A4D8               	btfss	status,2,c
 20406  003956  A2AC               	btfss	4012,1,c	;volatile
 20407  003958  D013               	goto	l885
 20408                           
 20409                           ;USBapp.c: 180: {
 20410                           ;USBapp.c: 182: EUSART_Write(USB_Buffer[RS232cp]);
 20411  00395A  5047               	movf	_RS232cp,w,c
 20412  00395C  0D01               	mullw	1
 20413  00395E  0E38               	movlw	low _USB_Buffer
 20414  003960  24F3               	addwf	prodl,w,c
 20415  003962  6ED9               	movwf	fsr2l,c
 20416  003964  0E01               	movlw	high _USB_Buffer
 20417  003966  20F4               	addwfc	prodh,w,c
 20418  003968  6EDA               	movwf	fsr2h,c
 20419  00396A  50DF               	movf	indf2,w,c
 20420  00396C  ECD0  F02B         	call	_EUSART_Write
 20421                           
 20422                           ;USBapp.c: 183: ++RS232cp;
 20423  003970  2A47               	incf	_RS232cp,f,c
 20424                           
 20425                           ;USBapp.c: 184: if (RS232cp == LastRS232Out)
 20426  003972  5044               	movf	_LastRS232Out,w,c
 20427  003974  1847               	xorwf	_RS232cp,w,c
 20428  003976  A4D8               	btfss	status,2,c
 20429  003978  D003               	goto	l885
 20430                           
 20431                           ;USBapp.c: 185: RS232_Out_Data_Rdy = 0;
 20432  00397A  0E00               	movlw	0
 20433  00397C  6E46               	movwf	_RS232_Out_Data_Rdy,c
 20434  00397E  D000               	goto	l885
 20435  003980                     l885:
 20436                           
 20437                           ;USBapp.c: 186: }
 20438                           ;USBapp.c: 189: if ((eusartRxCount))
 20439  003980  504D               	movf	_eusartRxCount,w,c	;volatile
 20440  003982  B4D8               	btfsc	status,2,c
 20441  003984  D025               	goto	l13253
 20442                           
 20443                           ;USBapp.c: 190: {
 20444                           ;USBapp.c: 191: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 20445  003986  EC9F  F02F         	call	_USBapp_getrxByteFlag	;wreg free
 20446  00398A  0900               	iorlw	0
 20447  00398C  B4D8               	btfsc	status,2,c
 20448  00398E  D020               	goto	l13253
 20449  003990  0E3F               	movlw	63
 20450  003992  6045               	cpfslt	_NextUSBOut,c
 20451  003994  D01D               	goto	l13253
 20452                           
 20453                           ;USBapp.c: 192: {
 20454                           ;USBapp.c: 193: __nop();
 20455  003996  F000               	nop	
 20456                           
 20457                           ;USBapp.c: 194: USB_Buffer[NextUSBOut] = EUSART_Read();
 20458  003998  ECAA  F02B         	call	_EUSART_Read	;wreg free
 20459  00399C  0100               	movlb	0	; () banked
 20460  00399E  6FBC               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 20461  0039A0  5045               	movf	_NextUSBOut,w,c
 20462  0039A2  0D01               	mullw	1
 20463  0039A4  0E38               	movlw	low _USB_Buffer
 20464  0039A6  24F3               	addwf	prodl,w,c
 20465  0039A8  6ED9               	movwf	fsr2l,c
 20466  0039AA  0E01               	movlw	high _USB_Buffer
 20467  0039AC  20F4               	addwfc	prodh,w,c
 20468  0039AE  6EDA               	movwf	fsr2h,c
 20469  0039B0  C0BC  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 20470                           
 20471                           ; BSR set to: 0
 20472                           ;USBapp.c: 195: ++NextUSBOut;
 20473  0039B4  2A45               	incf	_NextUSBOut,f,c
 20474                           
 20475                           ; BSR set to: 0
 20476                           ;USBapp.c: 196: USB_Buffer[NextUSBOut] = 0;
 20477  0039B6  5045               	movf	_NextUSBOut,w,c
 20478  0039B8  0D01               	mullw	1
 20479  0039BA  0E38               	movlw	low _USB_Buffer
 20480  0039BC  24F3               	addwf	prodl,w,c
 20481  0039BE  6ED9               	movwf	fsr2l,c
 20482  0039C0  0E01               	movlw	high _USB_Buffer
 20483  0039C2  20F4               	addwfc	prodh,w,c
 20484  0039C4  6EDA               	movwf	fsr2h,c
 20485  0039C6  0E00               	movlw	0
 20486  0039C8  6EDF               	movwf	indf2,c
 20487                           
 20488                           ; BSR set to: 0
 20489                           ;USBapp.c: 197: rxByteFlag = 0;
 20490  0039CA  0E00               	movlw	0
 20491  0039CC  6E50               	movwf	_rxByteFlag,c	;volatile
 20492                           
 20493                           ; BSR set to: 0
 20494  0039CE  D000               	goto	l13253
 20495  0039D0                     l13253:
 20496                           
 20497                           ;USBapp.c: 198: }
 20498                           ;USBapp.c: 199: }
 20499                           ;USBapp.c: 203: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 20500  0039D0  504A               	movf	_cdc_trf_state,w,c
 20501  0039D2  A4D8               	btfss	status,2,c
 20502  0039D4  D012               	goto	l13263
 20503  0039D6  5045               	movf	_NextUSBOut,w,c
 20504  0039D8  B4D8               	btfsc	status,2,c
 20505  0039DA  D00F               	goto	l13263
 20506                           
 20507                           ;USBapp.c: 204: {
 20508                           ;USBapp.c: 205: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 20509  0039DC  0E38               	movlw	low _USB_Buffer
 20510  0039DE  0100               	movlb	0	; () banked
 20511  0039E0  6FAF               	movwf	putUSBUSART@data& (0+255),b
 20512  0039E2  0E01               	movlw	high _USB_Buffer
 20513  0039E4  0100               	movlb	0	; () banked
 20514  0039E6  6FB0               	movwf	(putUSBUSART@data+1)& (0+255),b
 20515  0039E8  C045  F0B1         	movff	_NextUSBOut,putUSBUSART@length
 20516  0039EC  EC63  F02E         	call	_putUSBUSART	;wreg free
 20517                           
 20518                           ;USBapp.c: 206: MOTEapp_setResponseReady();
 20519  0039F0  EC9B  F02F         	call	_MOTEapp_setResponseReady	;wreg free
 20520                           
 20521                           ;USBapp.c: 207: NextUSBOut = 0;
 20522  0039F4  0E00               	movlw	0
 20523  0039F6  6E45               	movwf	_NextUSBOut,c
 20524  0039F8  D000               	goto	l13263
 20525  0039FA                     l13263:
 20526                           
 20527                           ;USBapp.c: 208: }
 20528                           ;USBapp.c: 210: CDCTxService();
 20529  0039FA  ECA1  F010         	call	_CDCTxService	;wreg free
 20530  0039FE  0012               	return		;funcret
 20531  003A00                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 20532                           	opt stack 0
 20533                           tblptru	equ	0xFF8
 20534                           tblptrh	equ	0xFF7
 20535                           tblptrl	equ	0xFF6
 20536                           tablat	equ	0xFF5
 20537                           prodh	equ	0xFF4
 20538                           prodl	equ	0xFF3
 20539                           intcon	equ	0xFF2
 20540                           intcon3	equ	0xFF0
 20541                           indf0	equ	0xFEF
 20542                           postinc0	equ	0xFEE
 20543                           fsr0h	equ	0xFEA
 20544                           fsr0l	equ	0xFE9
 20545                           wreg	equ	0xFE8
 20546                           indf1	equ	0xFE7
 20547                           postdec1	equ	0xFE5
 20548                           fsr1h	equ	0xFE2
 20549                           fsr1l	equ	0xFE1
 20550                           indf2	equ	0xFDF
 20551                           fsr2h	equ	0xFDA
 20552                           fsr2l	equ	0xFD9
 20553                           status	equ	0xFD8
 20554                           
 20555 ;; *************** function _putUSBUSART *****************
 20556 ;; Defined at:
 20557 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 20558 ;; Parameters:    Size  Location     Type
 20559 ;;  data            2    0[BANK0 ] PTR unsigned char 
 20560 ;;		 -> USB_Buffer(64), 
 20561 ;;  length          1    2[BANK0 ] unsigned char 
 20562 ;; Auto vars:     Size  Location     Type
 20563 ;;		None
 20564 ;; Return value:  Size  Location     Type
 20565 ;;		None               void
 20566 ;; Registers used:
 20567 ;;		wreg, status,2, status,0
 20568 ;; Tracked objects:
 20569 ;;		On entry : 0/0
 20570 ;;		On exit  : 0/0
 20571 ;;		Unchanged: 0/0
 20572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20573 ;;      Params:         0       3       0       0       0       0       0       0       0
 20574 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20575 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20576 ;;      Totals:         0       3       0       0       0       0       0       0       0
 20577 ;;Total ram usage:        3 bytes
 20578 ;; Hardware stack levels used:    1
 20579 ;; Hardware stack levels required when called:   11
 20580 ;; This function calls:
 20581 ;;		Nothing
 20582 ;; This function is called by:
 20583 ;;		_USBapp_DeviceCdcEmulatorHandler
 20584 ;; This function uses a non-reentrant model
 20585 ;;
 20586                           
 20587                           	psect	text77
 20588  005CC6                     __ptext77:
 20589                           	opt stack 0
 20590  005CC6                     _putUSBUSART:
 20591                           	opt stack 17
 20592                           
 20593                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 20594                           
 20595                           ;incstack = 0
 20596  005CC6  94A3               	bcf	4003,2,c	;volatile
 20597                           
 20598                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 20599  005CC8  504A               	movf	_cdc_trf_state,w,c
 20600  005CCA  A4D8               	btfss	status,2,c
 20601  005CCC  D00C               	goto	l12151
 20602                           
 20603                           ;usb_device_cdc.c: 530: {
 20604                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 20605  005CCE  C0AF  F06F         	movff	putUSBUSART@data,_pCDCSrc
 20606  005CD2  C0B0  F070         	movff	putUSBUSART@data+1,_pCDCSrc+1
 20607  005CD6  C0B1  F091         	movff	putUSBUSART@length,_cdc_tx_len
 20608  005CDA  0E01               	movlw	1
 20609  005CDC  0100               	movlb	0	; () banked
 20610  005CDE  6F8F               	movwf	_cdc_mem_type& (0+255),b
 20611                           
 20612                           ; BSR set to: 0
 20613  005CE0  0E01               	movlw	1
 20614  005CE2  6E4A               	movwf	_cdc_trf_state,c
 20615  005CE4  D000               	goto	l12151
 20616  005CE6                     l12151:
 20617                           
 20618                           ;usb_device_cdc.c: 532: }
 20619                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 20620  005CE6  84A3               	bsf	4003,2,c	;volatile
 20621  005CE8  0012               	return		;funcret
 20622  005CEA                     __end_of_putUSBUSART:
 20623                           	opt stack 0
 20624                           tblptru	equ	0xFF8
 20625                           tblptrh	equ	0xFF7
 20626                           tblptrl	equ	0xFF6
 20627                           tablat	equ	0xFF5
 20628                           prodh	equ	0xFF4
 20629                           prodl	equ	0xFF3
 20630                           intcon	equ	0xFF2
 20631                           intcon3	equ	0xFF0
 20632                           indf0	equ	0xFEF
 20633                           postinc0	equ	0xFEE
 20634                           fsr0h	equ	0xFEA
 20635                           fsr0l	equ	0xFE9
 20636                           wreg	equ	0xFE8
 20637                           indf1	equ	0xFE7
 20638                           postdec1	equ	0xFE5
 20639                           fsr1h	equ	0xFE2
 20640                           fsr1l	equ	0xFE1
 20641                           indf2	equ	0xFDF
 20642                           fsr2h	equ	0xFDA
 20643                           fsr2l	equ	0xFD9
 20644                           status	equ	0xFD8
 20645                           
 20646 ;; *************** function _getsUSBUSART *****************
 20647 ;; Defined at:
 20648 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 20649 ;; Parameters:    Size  Location     Type
 20650 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 20651 ;;		 -> USB_Buffer(64), 
 20652 ;;  len             1    9[BANK0 ] unsigned char 
 20653 ;; Auto vars:     Size  Location     Type
 20654 ;;		None
 20655 ;; Return value:  Size  Location     Type
 20656 ;;                  1    wreg      unsigned char 
 20657 ;; Registers used:
 20658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20659 ;; Tracked objects:
 20660 ;;		On entry : 0/0
 20661 ;;		On exit  : 0/0
 20662 ;;		Unchanged: 0/0
 20663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20664 ;;      Params:         0       3       0       0       0       0       0       0       0
 20665 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20666 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20667 ;;      Totals:         0       6       0       0       0       0       0       0       0
 20668 ;;Total ram usage:        6 bytes
 20669 ;; Hardware stack levels used:    1
 20670 ;; Hardware stack levels required when called:   12
 20671 ;; This function calls:
 20672 ;;		_USBTransferOnePacket
 20673 ;; This function is called by:
 20674 ;;		_USBapp_DeviceCdcEmulatorHandler
 20675 ;; This function uses a non-reentrant model
 20676 ;;
 20677                           
 20678                           	psect	text78
 20679  003646                     __ptext78:
 20680                           	opt stack 0
 20681  003646                     _getsUSBUSART:
 20682                           	opt stack 16
 20683                           
 20684                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 20685                           
 20686                           ;incstack = 0
 20687  003646  0E00               	movlw	0
 20688  003648  0100               	movlb	0	; () banked
 20689  00364A  6F90               	movwf	_cdc_rx_len& (0+255),b
 20690                           
 20691                           ; BSR set to: 0
 20692                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 20693  00364C  0100               	movlb	0	; () banked
 20694  00364E  5174               	movf	_CDCDataOutHandle& (0+255),w,b
 20695  003650  0100               	movlb	0	; () banked
 20696  003652  1175               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 20697  003654  B4D8               	btfsc	status,2,c
 20698  003656  D013               	goto	l12113
 20699                           
 20700                           ; BSR set to: 0
 20701  003658  C074  FFD9         	movff	_CDCDataOutHandle,fsr2l
 20702  00365C  C075  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 20703  003660  0100               	movlb	0	; () banked
 20704  003662  AEDF               	btfss	indf2,7,c
 20705  003664  D004               	goto	u10690
 20706  003666  0100               	movlb	0	; () banked
 20707  003668  6BB9               	clrf	??_getsUSBUSART& (0+255),b
 20708  00366A  2BB9               	incf	??_getsUSBUSART& (0+255),f,b
 20709  00366C  D002               	goto	u10698
 20710  00366E                     u10690:
 20711  00366E  0100               	movlb	0	; () banked
 20712  003670  6BB9               	clrf	??_getsUSBUSART& (0+255),b
 20713  003672                     u10698:
 20714  003672  0100               	movlb	0	; () banked
 20715  003674  51B9               	movf	??_getsUSBUSART& (0+255),w,b
 20716  003676  0100               	movlb	0	; () banked
 20717  003678  6FBA               	movwf	_getsUSBUSART$6438& (0+255),b
 20718  00367A  6BBB               	clrf	(_getsUSBUSART$6438+1)& (0+255),b
 20719  00367C  D006               	goto	l12115
 20720  00367E                     l12113:
 20721                           
 20722                           ; BSR set to: 0
 20723  00367E  0E00               	movlw	0
 20724  003680  0100               	movlb	0	; () banked
 20725  003682  6FBB               	movwf	(_getsUSBUSART$6438+1)& (0+255),b
 20726  003684  0E00               	movlw	0
 20727  003686  6FBA               	movwf	_getsUSBUSART$6438& (0+255),b
 20728  003688  D000               	goto	l12115
 20729  00368A                     l12115:
 20730                           
 20731                           ; BSR set to: 0
 20732  00368A  0100               	movlb	0	; () banked
 20733  00368C  51BA               	movf	_getsUSBUSART$6438& (0+255),w,b
 20734  00368E  0100               	movlb	0	; () banked
 20735  003690  11BB               	iorwf	(_getsUSBUSART$6438+1)& (0+255),w,b
 20736  003692  A4D8               	btfss	status,2,c
 20737  003694  D04E               	goto	l12131
 20738                           
 20739                           ; BSR set to: 0
 20740                           ;usb_device_cdc.c: 437: {
 20741                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 20742  003696  0100               	movlb	0	; () banked
 20743  003698  EE20 F001          	lfsr	2,1
 20744  00369C  5174               	movf	_CDCDataOutHandle& (0+255),w,b
 20745  00369E  26D9               	addwf	fsr2l,f,c
 20746  0036A0  5175               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 20747  0036A2  22DA               	addwfc	fsr2h,f,c
 20748  0036A4  0100               	movlb	0	; () banked
 20749  0036A6  51B8               	movf	getsUSBUSART@len& (0+255),w,b
 20750  0036A8  5CDE               	subwf	postinc2,w,c
 20751  0036AA  B0D8               	btfsc	status,0,c
 20752  0036AC  D00B               	goto	l12121
 20753                           
 20754                           ; BSR set to: 0
 20755                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 20756  0036AE  0100               	movlb	0	; () banked
 20757  0036B0  EE20 F001          	lfsr	2,1
 20758  0036B4  5174               	movf	_CDCDataOutHandle& (0+255),w,b
 20759  0036B6  26D9               	addwf	fsr2l,f,c
 20760  0036B8  5175               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 20761  0036BA  22DA               	addwfc	fsr2h,f,c
 20762  0036BC  50DF               	movf	indf2,w,c
 20763  0036BE  0100               	movlb	0	; () banked
 20764  0036C0  6FB8               	movwf	getsUSBUSART@len& (0+255),b
 20765  0036C2  D000               	goto	l12121
 20766  0036C4                     l12121:
 20767                           
 20768                           ; BSR set to: 0
 20769                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 20770  0036C4  0E00               	movlw	0
 20771  0036C6  0100               	movlb	0	; () banked
 20772  0036C8  6F90               	movwf	_cdc_rx_len& (0+255),b
 20773  0036CA  D019               	goto	l12127
 20774  0036CC                     l12123:
 20775                           
 20776                           ; BSR set to: 0
 20777                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 20778  0036CC  0100               	movlb	0	; () banked
 20779  0036CE  5190               	movf	_cdc_rx_len& (0+255),w,b
 20780  0036D0  0D01               	mullw	1
 20781  0036D2  0E40               	movlw	64
 20782  0036D4  24F3               	addwf	prodl,w,c
 20783  0036D6  6ED9               	movwf	fsr2l,c
 20784  0036D8  0E05               	movlw	5
 20785  0036DA  20F4               	addwfc	prodh,w,c
 20786  0036DC  6EDA               	movwf	fsr2h,c
 20787  0036DE  0100               	movlb	0	; () banked
 20788  0036E0  5190               	movf	_cdc_rx_len& (0+255),w,b
 20789  0036E2  0D01               	mullw	1
 20790  0036E4  50F3               	movf	prodl,w,c
 20791  0036E6  0100               	movlb	0	; () banked
 20792  0036E8  25B6               	addwf	getsUSBUSART@buffer& (0+255),w,b
 20793  0036EA  6EE1               	movwf	fsr1l,c
 20794  0036EC  50F4               	movf	prodh,w,c
 20795  0036EE  0100               	movlb	0	; () banked
 20796  0036F0  21B7               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 20797  0036F2  6EE2               	movwf	fsr1h,c
 20798  0036F4  CFDF FFE7          	movff	indf2,indf1
 20799                           
 20800                           ; BSR set to: 0
 20801  0036F8  0100               	movlb	0	; () banked
 20802  0036FA  2B90               	incf	_cdc_rx_len& (0+255),f,b
 20803  0036FC  D000               	goto	l12127
 20804  0036FE                     l12127:
 20805                           
 20806                           ; BSR set to: 0
 20807  0036FE  0100               	movlb	0	; () banked
 20808  003700  51B8               	movf	getsUSBUSART@len& (0+255),w,b
 20809  003702  0100               	movlb	0	; () banked
 20810  003704  5D90               	subwf	_cdc_rx_len& (0+255),w,b
 20811  003706  A0D8               	btfss	status,0,c
 20812  003708  D7E1               	goto	l12123
 20813                           
 20814                           ; BSR set to: 0
 20815                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 20816                           
 20817                           ; BSR set to: 0
 20818  00370A  0E00               	movlw	0
 20819  00370C  0100               	movlb	0	; () banked
 20820  00370E  6FAF               	movwf	USBTransferOnePacket@dir& (0+255),b
 20821  003710  0E40               	movlw	64
 20822  003712  0100               	movlb	0	; () banked
 20823  003714  6FB0               	movwf	USBTransferOnePacket@data& (0+255),b
 20824  003716  0E05               	movlw	5
 20825  003718  0100               	movlb	0	; () banked
 20826  00371A  6FB1               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 20827  00371C  0E40               	movlw	64
 20828  00371E  0100               	movlb	0	; () banked
 20829  003720  6FB2               	movwf	USBTransferOnePacket@len& (0+255),b
 20830  003722  0E02               	movlw	2
 20831  003724  EC39  F01F         	call	_USBTransferOnePacket
 20832  003728  C0AF  F074         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 20833  00372C  C0B0  F075         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 20834  003730  D000               	goto	l12131
 20835  003732                     l12131:
 20836                           
 20837                           ;usb_device_cdc.c: 457: }
 20838                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 20839  003732  0100               	movlb	0	; () banked
 20840  003734  5190               	movf	_cdc_rx_len& (0+255),w,b
 20841  003736  0012               	return	
 20842                           
 20843                           ; BSR set to: 0
 20844                           
 20845                           ; BSR set to: 0
 20846  003738  0012               	return		;funcret
 20847  00373A                     __end_of_getsUSBUSART:
 20848                           	opt stack 0
 20849                           tblptru	equ	0xFF8
 20850                           tblptrh	equ	0xFF7
 20851                           tblptrl	equ	0xFF6
 20852                           tablat	equ	0xFF5
 20853                           prodh	equ	0xFF4
 20854                           prodl	equ	0xFF3
 20855                           intcon	equ	0xFF2
 20856                           intcon3	equ	0xFF0
 20857                           indf0	equ	0xFEF
 20858                           postinc0	equ	0xFEE
 20859                           fsr0h	equ	0xFEA
 20860                           fsr0l	equ	0xFE9
 20861                           wreg	equ	0xFE8
 20862                           indf1	equ	0xFE7
 20863                           postdec1	equ	0xFE5
 20864                           fsr1h	equ	0xFE2
 20865                           fsr1l	equ	0xFE1
 20866                           indf2	equ	0xFDF
 20867                           postinc2	equ	0xFDE
 20868                           fsr2h	equ	0xFDA
 20869                           fsr2l	equ	0xFD9
 20870                           status	equ	0xFD8
 20871                           
 20872 ;; *************** function _USBapp_getrxByteFlag *****************
 20873 ;; Defined at:
 20874 ;;		line 268 in file "../Includes/Board/USBapp.c"
 20875 ;; Parameters:    Size  Location     Type
 20876 ;;		None
 20877 ;; Auto vars:     Size  Location     Type
 20878 ;;		None
 20879 ;; Return value:  Size  Location     Type
 20880 ;;                  1    wreg      unsigned char 
 20881 ;; Registers used:
 20882 ;;		wreg, status,2
 20883 ;; Tracked objects:
 20884 ;;		On entry : 0/0
 20885 ;;		On exit  : 0/0
 20886 ;;		Unchanged: 0/0
 20887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20888 ;;      Params:         0       0       0       0       0       0       0       0       0
 20889 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20890 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20891 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20892 ;;Total ram usage:        0 bytes
 20893 ;; Hardware stack levels used:    1
 20894 ;; Hardware stack levels required when called:   11
 20895 ;; This function calls:
 20896 ;;		Nothing
 20897 ;; This function is called by:
 20898 ;;		_USBapp_DeviceCdcEmulatorHandler
 20899 ;; This function uses a non-reentrant model
 20900 ;;
 20901                           
 20902                           	psect	text79
 20903  005F3E                     __ptext79:
 20904                           	opt stack 0
 20905  005F3E                     _USBapp_getrxByteFlag:
 20906                           	opt stack 17
 20907                           
 20908                           ;USBapp.c: 270: return rxByteFlag;
 20909                           
 20910                           ; BSR set to: 0
 20911                           ;incstack = 0
 20912  005F3E  5050               	movf	_rxByteFlag,w,c	;volatile
 20913  005F40  0012               	return	
 20914  005F42  0012               	return		;funcret
 20915  005F44                     __end_of_USBapp_getrxByteFlag:
 20916                           	opt stack 0
 20917                           tblptru	equ	0xFF8
 20918                           tblptrh	equ	0xFF7
 20919                           tblptrl	equ	0xFF6
 20920                           tablat	equ	0xFF5
 20921                           prodh	equ	0xFF4
 20922                           prodl	equ	0xFF3
 20923                           intcon	equ	0xFF2
 20924                           intcon3	equ	0xFF0
 20925                           indf0	equ	0xFEF
 20926                           postinc0	equ	0xFEE
 20927                           fsr0h	equ	0xFEA
 20928                           fsr0l	equ	0xFE9
 20929                           wreg	equ	0xFE8
 20930                           indf1	equ	0xFE7
 20931                           postdec1	equ	0xFE5
 20932                           fsr1h	equ	0xFE2
 20933                           fsr1l	equ	0xFE1
 20934                           indf2	equ	0xFDF
 20935                           postinc2	equ	0xFDE
 20936                           fsr2h	equ	0xFDA
 20937                           fsr2l	equ	0xFD9
 20938                           status	equ	0xFD8
 20939                           
 20940 ;; *************** function _MOTEapp_setResponseReady *****************
 20941 ;; Defined at:
 20942 ;;		line 1104 in file "../Includes/Board/MOTEapp.c"
 20943 ;; Parameters:    Size  Location     Type
 20944 ;;		None
 20945 ;; Auto vars:     Size  Location     Type
 20946 ;;		None
 20947 ;; Return value:  Size  Location     Type
 20948 ;;		None               void
 20949 ;; Registers used:
 20950 ;;		wreg, status,2
 20951 ;; Tracked objects:
 20952 ;;		On entry : 0/0
 20953 ;;		On exit  : 0/0
 20954 ;;		Unchanged: 0/0
 20955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20956 ;;      Params:         0       0       0       0       0       0       0       0       0
 20957 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20958 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20959 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20960 ;;Total ram usage:        0 bytes
 20961 ;; Hardware stack levels used:    1
 20962 ;; Hardware stack levels required when called:   11
 20963 ;; This function calls:
 20964 ;;		Nothing
 20965 ;; This function is called by:
 20966 ;;		_USBapp_DeviceCdcEmulatorHandler
 20967 ;; This function uses a non-reentrant model
 20968 ;;
 20969                           
 20970                           	psect	text80
 20971  005F36                     __ptext80:
 20972                           	opt stack 0
 20973  005F36                     _MOTEapp_setResponseReady:
 20974                           	opt stack 17
 20975                           
 20976                           ;MOTEapp.c: 1106: responseReady = 1;
 20977                           
 20978                           ;incstack = 0
 20979  005F36  0E01               	movlw	1
 20980  005F38  0100               	movlb	0	; () banked
 20981  005F3A  6FA2               	movwf	_responseReady& (0+255),b
 20982                           
 20983                           ; BSR set to: 0
 20984  005F3C  0012               	return		;funcret
 20985  005F3E                     __end_of_MOTEapp_setResponseReady:
 20986                           	opt stack 0
 20987                           tblptru	equ	0xFF8
 20988                           tblptrh	equ	0xFF7
 20989                           tblptrl	equ	0xFF6
 20990                           tablat	equ	0xFF5
 20991                           prodh	equ	0xFF4
 20992                           prodl	equ	0xFF3
 20993                           intcon	equ	0xFF2
 20994                           intcon3	equ	0xFF0
 20995                           indf0	equ	0xFEF
 20996                           postinc0	equ	0xFEE
 20997                           fsr0h	equ	0xFEA
 20998                           fsr0l	equ	0xFE9
 20999                           wreg	equ	0xFE8
 21000                           indf1	equ	0xFE7
 21001                           postdec1	equ	0xFE5
 21002                           fsr1h	equ	0xFE2
 21003                           fsr1l	equ	0xFE1
 21004                           indf2	equ	0xFDF
 21005                           postinc2	equ	0xFDE
 21006                           fsr2h	equ	0xFDA
 21007                           fsr2l	equ	0xFD9
 21008                           status	equ	0xFD8
 21009                           
 21010 ;; *************** function _EUSART_Write *****************
 21011 ;; Defined at:
 21012 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 21013 ;; Parameters:    Size  Location     Type
 21014 ;;  txData          1    wreg     unsigned char 
 21015 ;; Auto vars:     Size  Location     Type
 21016 ;;  txData          1    0[BANK0 ] unsigned char 
 21017 ;; Return value:  Size  Location     Type
 21018 ;;		None               void
 21019 ;; Registers used:
 21020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21021 ;; Tracked objects:
 21022 ;;		On entry : 0/0
 21023 ;;		On exit  : 0/0
 21024 ;;		Unchanged: 0/0
 21025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21026 ;;      Params:         0       0       0       0       0       0       0       0       0
 21027 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21028 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21029 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21030 ;;Total ram usage:        1 bytes
 21031 ;; Hardware stack levels used:    1
 21032 ;; Hardware stack levels required when called:   11
 21033 ;; This function calls:
 21034 ;;		Nothing
 21035 ;; This function is called by:
 21036 ;;		MOTEapp@EndLine
 21037 ;;		MOTEapp@sendCommand
 21038 ;;		_USBapp_DeviceCdcEmulatorHandler
 21039 ;;		_EndLine
 21040 ;;		_sendCommand
 21041 ;;		_sendDataCommand
 21042 ;; This function uses a non-reentrant model
 21043 ;;
 21044                           
 21045                           	psect	text81
 21046  0057A0                     __ptext81:
 21047                           	opt stack 0
 21048  0057A0                     _EUSART_Write:
 21049                           	opt stack 15
 21050                           
 21051                           ; BSR set to: 0
 21052                           ;incstack = 0
 21053                           ;EUSART_Write@txData stored from wreg
 21054  0057A0  0100               	movlb	0	; () banked
 21055  0057A2  6FAF               	movwf	EUSART_Write@txData& (0+255),b
 21056                           
 21057                           ; BSR set to: 0
 21058                           
 21059                           ; BSR set to: 0
 21060                           ;eusart.c: 141: while(0 == eusartTxBufferRemaining)
 21061  0057A4  D000               	goto	l11049
 21062  0057A6                     l11049:
 21063  0057A6  504E               	movf	_eusartTxBufferRemaining,w,c	;volatile
 21064  0057A8  B4D8               	btfsc	status,2,c
 21065  0057AA  D7FD               	goto	l11049
 21066                           
 21067                           ;eusart.c: 143: }
 21068                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 21069  0057AC  B89D               	btfsc	3997,4,c	;volatile
 21070  0057AE  D003               	goto	l1145
 21071                           
 21072                           ;eusart.c: 146: {
 21073                           ;eusart.c: 147: TXREG = txData;
 21074  0057B0  C0AF  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 21075                           
 21076                           ;eusart.c: 148: }
 21077  0057B4  D018               	goto	l11063
 21078  0057B6                     l1145:
 21079                           
 21080                           ;eusart.c: 149: else
 21081                           ;eusart.c: 150: {
 21082                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 21083  0057B6  989D               	bcf	3997,4,c	;volatile
 21084                           
 21085                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 21086  0057B8  0100               	movlb	0	; () banked
 21087  0057BA  5198               	movf	_eusartTxHead& (0+255),w,b
 21088  0057BC  0D01               	mullw	1
 21089  0057BE  0E40               	movlw	low _eusartTxBuffer
 21090  0057C0  24F3               	addwf	prodl,w,c
 21091  0057C2  6ED9               	movwf	fsr2l,c
 21092  0057C4  0E02               	movlw	high _eusartTxBuffer
 21093  0057C6  20F4               	addwfc	prodh,w,c
 21094  0057C8  6EDA               	movwf	fsr2h,c
 21095  0057CA  C0AF  FFDF         	movff	EUSART_Write@txData,indf2
 21096                           
 21097                           ; BSR set to: 0
 21098  0057CE  0100               	movlb	0	; () banked
 21099  0057D0  2B98               	incf	_eusartTxHead& (0+255),f,b
 21100                           
 21101                           ; BSR set to: 0
 21102                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 21103  0057D2  0E3F               	movlw	63
 21104  0057D4  0100               	movlb	0	; () banked
 21105  0057D6  6598               	cpfsgt	_eusartTxHead& (0+255),b
 21106  0057D8  D004               	goto	l11061
 21107                           
 21108                           ; BSR set to: 0
 21109                           ;eusart.c: 154: {
 21110                           ;eusart.c: 155: eusartTxHead = 0;
 21111  0057DA  0E00               	movlw	0
 21112  0057DC  0100               	movlb	0	; () banked
 21113  0057DE  6F98               	movwf	_eusartTxHead& (0+255),b
 21114  0057E0  D000               	goto	l11061
 21115  0057E2                     l11061:
 21116                           
 21117                           ; BSR set to: 0
 21118                           ;eusart.c: 156: }
 21119                           ;eusart.c: 157: eusartTxBufferRemaining--;
 21120  0057E2  064E               	decf	_eusartTxBufferRemaining,f,c	;volatile
 21121  0057E4  D000               	goto	l11063
 21122  0057E6                     l11063:
 21123                           
 21124                           ;eusart.c: 158: }
 21125                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 21126  0057E6  889D               	bsf	3997,4,c	;volatile
 21127  0057E8  0012               	return		;funcret
 21128  0057EA                     __end_of_EUSART_Write:
 21129                           	opt stack 0
 21130                           tblptru	equ	0xFF8
 21131                           tblptrh	equ	0xFF7
 21132                           tblptrl	equ	0xFF6
 21133                           tablat	equ	0xFF5
 21134                           prodh	equ	0xFF4
 21135                           prodl	equ	0xFF3
 21136                           intcon	equ	0xFF2
 21137                           intcon3	equ	0xFF0
 21138                           indf0	equ	0xFEF
 21139                           postinc0	equ	0xFEE
 21140                           fsr0h	equ	0xFEA
 21141                           fsr0l	equ	0xFE9
 21142                           wreg	equ	0xFE8
 21143                           indf1	equ	0xFE7
 21144                           postdec1	equ	0xFE5
 21145                           fsr1h	equ	0xFE2
 21146                           fsr1l	equ	0xFE1
 21147                           indf2	equ	0xFDF
 21148                           postinc2	equ	0xFDE
 21149                           fsr2h	equ	0xFDA
 21150                           fsr2l	equ	0xFD9
 21151                           status	equ	0xFD8
 21152                           
 21153 ;; *************** function _EUSART_Read *****************
 21154 ;; Defined at:
 21155 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 21156 ;; Parameters:    Size  Location     Type
 21157 ;;		None
 21158 ;; Auto vars:     Size  Location     Type
 21159 ;;  readValue       1    0[BANK0 ] unsigned char 
 21160 ;; Return value:  Size  Location     Type
 21161 ;;                  1    wreg      unsigned char 
 21162 ;; Registers used:
 21163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21164 ;; Tracked objects:
 21165 ;;		On entry : 0/0
 21166 ;;		On exit  : 0/0
 21167 ;;		Unchanged: 0/0
 21168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21169 ;;      Params:         0       0       0       0       0       0       0       0       0
 21170 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21171 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21172 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21173 ;;Total ram usage:        1 bytes
 21174 ;; Hardware stack levels used:    1
 21175 ;; Hardware stack levels required when called:   11
 21176 ;; This function calls:
 21177 ;;		Nothing
 21178 ;; This function is called by:
 21179 ;;		_MOTEapp_getModuleResponse
 21180 ;;		_USBapp_DeviceCdcEmulatorHandler
 21181 ;; This function uses a non-reentrant model
 21182 ;;
 21183                           
 21184                           	psect	text82
 21185  005754                     __ptext82:
 21186                           	opt stack 0
 21187  005754                     _EUSART_Read:
 21188                           	opt stack 15
 21189                           
 21190                           ;eusart.c: 119: uint8_t readValue = 0;
 21191                           
 21192                           ;incstack = 0
 21193  005754  0E00               	movlw	0
 21194  005756  0100               	movlb	0	; () banked
 21195  005758  6FAF               	movwf	EUSART_Read@readValue& (0+255),b
 21196                           
 21197                           ;eusart.c: 121: while(0 == eusartRxCount)
 21198  00575A  D002               	goto	l11083
 21199  00575C                     l1136:
 21200                           
 21201                           ;eusart.c: 122: {
 21202                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 21203  00575C  8E89               	bsf	3977,7,c	;volatile
 21204  00575E  D000               	goto	l11083
 21205  005760                     l11083:
 21206  005760  504D               	movf	_eusartRxCount,w,c	;volatile
 21207  005762  B4D8               	btfsc	status,2,c
 21208  005764  D7FB               	goto	l1136
 21209                           
 21210                           ;eusart.c: 124: }
 21211                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 21212  005766  9A9D               	bcf	3997,5,c	;volatile
 21213                           
 21214                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 21215  005768  0100               	movlb	0	; () banked
 21216  00576A  5197               	movf	_eusartRxTail& (0+255),w,b
 21217  00576C  0D01               	mullw	1
 21218  00576E  0E00               	movlw	low _eusartRxBuffer
 21219  005770  24F3               	addwf	prodl,w,c
 21220  005772  6ED9               	movwf	fsr2l,c
 21221  005774  0E02               	movlw	high _eusartRxBuffer
 21222  005776  20F4               	addwfc	prodh,w,c
 21223  005778  6EDA               	movwf	fsr2h,c
 21224  00577A  50DF               	movf	indf2,w,c
 21225  00577C  0100               	movlb	0	; () banked
 21226  00577E  6FAF               	movwf	EUSART_Read@readValue& (0+255),b
 21227                           
 21228                           ; BSR set to: 0
 21229  005780  0100               	movlb	0	; () banked
 21230  005782  2B97               	incf	_eusartRxTail& (0+255),f,b
 21231                           
 21232                           ; BSR set to: 0
 21233                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 21234  005784  0E3F               	movlw	63
 21235  005786  0100               	movlb	0	; () banked
 21236  005788  6597               	cpfsgt	_eusartRxTail& (0+255),b
 21237  00578A  D004               	goto	l11093
 21238                           
 21239                           ; BSR set to: 0
 21240                           ;eusart.c: 130: {
 21241                           ;eusart.c: 131: eusartRxTail = 0;
 21242  00578C  0E00               	movlw	0
 21243  00578E  0100               	movlb	0	; () banked
 21244  005790  6F97               	movwf	_eusartRxTail& (0+255),b
 21245  005792  D000               	goto	l11093
 21246  005794                     l11093:
 21247                           
 21248                           ; BSR set to: 0
 21249                           ;eusart.c: 132: }
 21250                           ;eusart.c: 133: eusartRxCount--;
 21251  005794  064D               	decf	_eusartRxCount,f,c	;volatile
 21252                           
 21253                           ; BSR set to: 0
 21254                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 21255  005796  8A9D               	bsf	3997,5,c	;volatile
 21256                           
 21257                           ; BSR set to: 0
 21258                           ;eusart.c: 136: return readValue;
 21259  005798  0100               	movlb	0	; () banked
 21260  00579A  51AF               	movf	EUSART_Read@readValue& (0+255),w,b
 21261  00579C  0012               	return	
 21262                           
 21263                           ; BSR set to: 0
 21264                           
 21265                           ; BSR set to: 0
 21266  00579E  0012               	return		;funcret
 21267  0057A0                     __end_of_EUSART_Read:
 21268                           	opt stack 0
 21269                           tblptru	equ	0xFF8
 21270                           tblptrh	equ	0xFF7
 21271                           tblptrl	equ	0xFF6
 21272                           tablat	equ	0xFF5
 21273                           prodh	equ	0xFF4
 21274                           prodl	equ	0xFF3
 21275                           intcon	equ	0xFF2
 21276                           intcon3	equ	0xFF0
 21277                           indf0	equ	0xFEF
 21278                           postinc0	equ	0xFEE
 21279                           fsr0h	equ	0xFEA
 21280                           fsr0l	equ	0xFE9
 21281                           wreg	equ	0xFE8
 21282                           indf1	equ	0xFE7
 21283                           postdec1	equ	0xFE5
 21284                           fsr1h	equ	0xFE2
 21285                           fsr1l	equ	0xFE1
 21286                           indf2	equ	0xFDF
 21287                           postinc2	equ	0xFDE
 21288                           fsr2h	equ	0xFDA
 21289                           fsr2l	equ	0xFD9
 21290                           status	equ	0xFD8
 21291                           
 21292 ;; *************** function _CDCTxService *****************
 21293 ;; Defined at:
 21294 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 21295 ;; Parameters:    Size  Location     Type
 21296 ;;		None
 21297 ;; Auto vars:     Size  Location     Type
 21298 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 21299 ;;  i               1   10[BANK0 ] unsigned char 
 21300 ;; Return value:  Size  Location     Type
 21301 ;;		None               void
 21302 ;; Registers used:
 21303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21304 ;; Tracked objects:
 21305 ;;		On entry : 0/0
 21306 ;;		On exit  : 0/0
 21307 ;;		Unchanged: 0/0
 21308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21309 ;;      Params:         0       0       0       0       0       0       0       0       0
 21310 ;;      Locals:         0       4       0       0       0       0       0       0       0
 21311 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21312 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21313 ;;Total ram usage:        5 bytes
 21314 ;; Hardware stack levels used:    1
 21315 ;; Hardware stack levels required when called:   12
 21316 ;; This function calls:
 21317 ;;		_USBTransferOnePacket
 21318 ;; This function is called by:
 21319 ;;		_USBapp_DeviceCdcEmulatorHandler
 21320 ;; This function uses a non-reentrant model
 21321 ;;
 21322                           
 21323                           	psect	text83
 21324  002142                     __ptext83:
 21325                           	opt stack 0
 21326  002142                     _CDCTxService:
 21327                           	opt stack 16
 21328                           
 21329                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 21330                           ;usb_device_cdc.c: 786: uint8_t i;
 21331                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 21332                           
 21333                           ; BSR set to: 0
 21334                           ;incstack = 0
 21335  002142  94A3               	bcf	4003,2,c	;volatile
 21336                           
 21337                           ;usb_device_cdc.c: 790: {};
 21338                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 21339  002144  0100               	movlb	0	; () banked
 21340  002146  5172               	movf	_CDCDataInHandle& (0+255),w,b
 21341  002148  0100               	movlb	0	; () banked
 21342  00214A  1173               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 21343  00214C  B4D8               	btfsc	status,2,c
 21344  00214E  D013               	goto	l12159
 21345                           
 21346                           ; BSR set to: 0
 21347  002150  C072  FFD9         	movff	_CDCDataInHandle,fsr2l
 21348  002154  C073  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21349  002158  0100               	movlb	0	; () banked
 21350  00215A  AEDF               	btfss	indf2,7,c
 21351  00215C  D004               	goto	u10750
 21352  00215E  0100               	movlb	0	; () banked
 21353  002160  6BB6               	clrf	??_CDCTxService& (0+255),b
 21354  002162  2BB6               	incf	??_CDCTxService& (0+255),f,b
 21355  002164  D002               	goto	u10758
 21356  002166                     u10750:
 21357  002166  0100               	movlb	0	; () banked
 21358  002168  6BB6               	clrf	??_CDCTxService& (0+255),b
 21359  00216A                     u10758:
 21360  00216A  0100               	movlb	0	; () banked
 21361  00216C  51B6               	movf	??_CDCTxService& (0+255),w,b
 21362  00216E  0100               	movlb	0	; () banked
 21363  002170  6FB7               	movwf	_CDCTxService$6486& (0+255),b
 21364  002172  6BB8               	clrf	(_CDCTxService$6486+1)& (0+255),b
 21365  002174  D006               	goto	l12161
 21366  002176                     l12159:
 21367                           
 21368                           ; BSR set to: 0
 21369  002176  0E00               	movlw	0
 21370  002178  0100               	movlb	0	; () banked
 21371  00217A  6FB8               	movwf	(_CDCTxService$6486+1)& (0+255),b
 21372  00217C  0E00               	movlw	0
 21373  00217E  6FB7               	movwf	_CDCTxService$6486& (0+255),b
 21374  002180  D000               	goto	l12161
 21375  002182                     l12161:
 21376                           
 21377                           ; BSR set to: 0
 21378  002182  0100               	movlb	0	; () banked
 21379  002184  51B7               	movf	_CDCTxService$6486& (0+255),w,b
 21380  002186  0100               	movlb	0	; () banked
 21381  002188  11B8               	iorwf	(_CDCTxService$6486+1)& (0+255),w,b
 21382  00218A  B4D8               	btfsc	status,2,c
 21383  00218C  D002               	goto	l12165
 21384                           
 21385                           ; BSR set to: 0
 21386                           ;usb_device_cdc.c: 793: {
 21387                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 21388  00218E  84A3               	bsf	4003,2,c	;volatile
 21389                           
 21390                           ;usb_device_cdc.c: 795: return;
 21391  002190  0012               	return	
 21392  002192                     l12165:
 21393                           
 21394                           ; BSR set to: 0
 21395                           ;usb_device_cdc.c: 796: }
 21396                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 21397  002192  0E03               	movlw	3
 21398  002194  184A               	xorwf	_cdc_trf_state,w,c
 21399  002196  A4D8               	btfss	status,2,c
 21400  002198  D002               	goto	l2075
 21401                           
 21402                           ; BSR set to: 0
 21403                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 21404  00219A  0E00               	movlw	0
 21405  00219C  6E4A               	movwf	_cdc_trf_state,c
 21406  00219E                     l2075:
 21407                           
 21408                           ; BSR set to: 0
 21409                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 21410  00219E  504A               	movf	_cdc_trf_state,w,c
 21411  0021A0  A4D8               	btfss	status,2,c
 21412  0021A2  D002               	goto	l12171
 21413                           
 21414                           ; BSR set to: 0
 21415                           ;usb_device_cdc.c: 810: {
 21416                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 21417  0021A4  84A3               	bsf	4003,2,c	;volatile
 21418                           
 21419                           ;usb_device_cdc.c: 812: return;
 21420  0021A6  0012               	return	
 21421  0021A8                     l12171:
 21422                           
 21423                           ; BSR set to: 0
 21424                           ;usb_device_cdc.c: 813: }
 21425                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 21426  0021A8  0E02               	movlw	2
 21427  0021AA  184A               	xorwf	_cdc_trf_state,w,c
 21428  0021AC  A4D8               	btfss	status,2,c
 21429  0021AE  D016               	goto	l12177
 21430                           
 21431                           ; BSR set to: 0
 21432                           ;usb_device_cdc.c: 819: {
 21433                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21434  0021B0  0E01               	movlw	1
 21435  0021B2  0100               	movlb	0	; () banked
 21436  0021B4  6FAF               	movwf	USBTransferOnePacket@dir& (0+255),b
 21437  0021B6  0E00               	movlw	0
 21438  0021B8  0100               	movlb	0	; () banked
 21439  0021BA  6FB0               	movwf	USBTransferOnePacket@data& (0+255),b
 21440  0021BC  0E00               	movlw	0
 21441  0021BE  0100               	movlb	0	; () banked
 21442  0021C0  6FB1               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21443  0021C2  0E00               	movlw	0
 21444  0021C4  0100               	movlb	0	; () banked
 21445  0021C6  6FB2               	movwf	USBTransferOnePacket@len& (0+255),b
 21446  0021C8  0E02               	movlw	2
 21447  0021CA  EC39  F01F         	call	_USBTransferOnePacket
 21448  0021CE  C0AF  F072         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21449  0021D2  C0B0  F073         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21450                           
 21451                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 21452  0021D6  0E03               	movlw	3
 21453  0021D8  6E4A               	movwf	_cdc_trf_state,c
 21454                           
 21455                           ;usb_device_cdc.c: 823: }
 21456  0021DA  D079               	goto	l12221
 21457  0021DC                     l12177:
 21458                           
 21459                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 21460  0021DC  044A               	decf	_cdc_trf_state,w,c
 21461  0021DE  A4D8               	btfss	status,2,c
 21462  0021E0  D076               	goto	l12221
 21463                           
 21464                           ;usb_device_cdc.c: 825: {
 21465                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 21466  0021E2  0E40               	movlw	64
 21467  0021E4  0100               	movlb	0	; () banked
 21468  0021E6  6591               	cpfsgt	_cdc_tx_len& (0+255),b
 21469  0021E8  D004               	goto	l2080
 21470                           
 21471                           ; BSR set to: 0
 21472                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 21473  0021EA  0E40               	movlw	64
 21474  0021EC  0100               	movlb	0	; () banked
 21475  0021EE  6FBA               	movwf	CDCTxService@byte_to_send& (0+255),b
 21476  0021F0  D003               	goto	l12183
 21477  0021F2                     l2080:
 21478                           
 21479                           ; BSR set to: 0
 21480                           ;usb_device_cdc.c: 831: else
 21481                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 21482  0021F2  C091  F0BA         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21483  0021F6  D000               	goto	l12183
 21484  0021F8                     l12183:
 21485                           
 21486                           ; BSR set to: 0
 21487                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 21488  0021F8  0100               	movlb	0	; () banked
 21489  0021FA  51BA               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21490  0021FC  0800               	sublw	0
 21491  0021FE  0100               	movlb	0	; () banked
 21492  002200  2591               	addwf	_cdc_tx_len& (0+255),w,b
 21493  002202  0100               	movlb	0	; () banked
 21494  002204  6F91               	movwf	_cdc_tx_len& (0+255),b
 21495                           
 21496                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21497  002206  0E00               	movlw	0
 21498  002208  0100               	movlb	0	; () banked
 21499  00220A  6F6C               	movwf	_pCDCDst& (0+255),b
 21500  00220C  0E05               	movlw	5
 21501  00220E  0100               	movlb	0	; () banked
 21502  002210  6F6D               	movwf	(_pCDCDst+1)& (0+255),b
 21503                           
 21504                           ; BSR set to: 0
 21505                           ;usb_device_cdc.c: 841: i = byte_to_send;
 21506  002212  C0BA  F0B9         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21507                           
 21508                           ; BSR set to: 0
 21509                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 21510  002216  0100               	movlb	0	; () banked
 21511  002218  518F               	movf	_cdc_mem_type& (0+255),w,b
 21512  00221A  B4D8               	btfsc	status,2,c
 21513  00221C  D015               	goto	l12199
 21514  00221E  D02F               	goto	l12209
 21515                           
 21516                           ; BSR set to: 0
 21517                           ;usb_device_cdc.c: 843: {
 21518                           ;usb_device_cdc.c: 844: while(i)
 21519  002220  D013               	goto	l12199
 21520  002222                     l12191:
 21521                           
 21522                           ; BSR set to: 0
 21523                           ;usb_device_cdc.c: 845: {
 21524                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 21525  002222  C06F  FFD9         	movff	_pCDCSrc,fsr2l
 21526  002226  C070  FFDA         	movff	_pCDCSrc+1,fsr2h
 21527  00222A  C06C  FFE1         	movff	_pCDCDst,fsr1l
 21528  00222E  C06D  FFE2         	movff	_pCDCDst+1,fsr1h
 21529  002232  CFDF FFE7          	movff	indf2,indf1
 21530                           
 21531                           ; BSR set to: 0
 21532                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 21533  002236  0100               	movlb	0	; () banked
 21534  002238  4B6C               	infsnz	_pCDCDst& (0+255),f,b
 21535  00223A  2B6D               	incf	(_pCDCDst+1)& (0+255),f,b
 21536                           
 21537                           ; BSR set to: 0
 21538                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 21539  00223C  0100               	movlb	0	; () banked
 21540  00223E  4B6F               	infsnz	_pCDCSrc& (0+255),f,b
 21541  002240  2B70               	incf	(_pCDCSrc+1)& (0+255),f,b
 21542                           
 21543                           ; BSR set to: 0
 21544                           ;usb_device_cdc.c: 849: i--;
 21545  002242  0100               	movlb	0	; () banked
 21546  002244  07B9               	decf	CDCTxService@i& (0+255),f,b
 21547  002246  D000               	goto	l12199
 21548  002248                     l12199:
 21549                           
 21550                           ; BSR set to: 0
 21551  002248  0100               	movlb	0	; () banked
 21552  00224A  51B9               	movf	CDCTxService@i& (0+255),w,b
 21553  00224C  0100               	movlb	0	; () banked
 21554  00224E  B4D8               	btfsc	status,2,c
 21555  002250  D01D               	goto	l12211
 21556  002252  D7E7               	goto	l12191
 21557                           
 21558                           ; BSR set to: 0
 21559                           ;usb_device_cdc.c: 850: }
 21560                           ;usb_device_cdc.c: 851: }
 21561  002254  D01B               	goto	l12211
 21562                           
 21563                           ; BSR set to: 0
 21564                           ;usb_device_cdc.c: 852: else
 21565                           ;usb_device_cdc.c: 853: {
 21566                           ;usb_device_cdc.c: 854: while(i)
 21567  002256  D013               	goto	l12209
 21568  002258                     l12201:
 21569                           
 21570                           ; BSR set to: 0
 21571                           ;usb_device_cdc.c: 855: {
 21572                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 21573  002258  C06F  FFD9         	movff	_pCDCSrc,fsr2l
 21574  00225C  C070  FFDA         	movff	_pCDCSrc+1,fsr2h
 21575  002260  C06C  FFE1         	movff	_pCDCDst,fsr1l
 21576  002264  C06D  FFE2         	movff	_pCDCDst+1,fsr1h
 21577  002268  CFDF FFE7          	movff	indf2,indf1
 21578                           
 21579                           ; BSR set to: 0
 21580                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 21581  00226C  0100               	movlb	0	; () banked
 21582  00226E  4B6C               	infsnz	_pCDCDst& (0+255),f,b
 21583  002270  2B6D               	incf	(_pCDCDst+1)& (0+255),f,b
 21584                           
 21585                           ; BSR set to: 0
 21586                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 21587  002272  0100               	movlb	0	; () banked
 21588  002274  4B6F               	infsnz	_pCDCSrc& (0+255),f,b
 21589  002276  2B70               	incf	(_pCDCSrc+1)& (0+255),f,b
 21590                           
 21591                           ; BSR set to: 0
 21592                           ;usb_device_cdc.c: 859: i--;
 21593  002278  0100               	movlb	0	; () banked
 21594  00227A  07B9               	decf	CDCTxService@i& (0+255),f,b
 21595  00227C  D000               	goto	l12209
 21596  00227E                     l12209:
 21597                           
 21598                           ; BSR set to: 0
 21599  00227E  0100               	movlb	0	; () banked
 21600  002280  51B9               	movf	CDCTxService@i& (0+255),w,b
 21601  002282  0100               	movlb	0	; () banked
 21602  002284  B4D8               	btfsc	status,2,c
 21603  002286  D002               	goto	l12211
 21604  002288  D7E7               	goto	l12201
 21605                           
 21606                           ; BSR set to: 0
 21607  00228A  D000               	goto	l12211
 21608  00228C                     l12211:
 21609                           
 21610                           ; BSR set to: 0
 21611                           ;usb_device_cdc.c: 860: }
 21612                           ;usb_device_cdc.c: 861: }
 21613                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 21614  00228C  0100               	movlb	0	; () banked
 21615  00228E  5191               	movf	_cdc_tx_len& (0+255),w,b
 21616  002290  A4D8               	btfss	status,2,c
 21617  002292  D00A               	goto	l12219
 21618                           
 21619                           ; BSR set to: 0
 21620                           ;usb_device_cdc.c: 868: {
 21621                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 21622  002294  0E40               	movlw	64
 21623  002296  0100               	movlb	0	; () banked
 21624  002298  19BA               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21625  00229A  A4D8               	btfss	status,2,c
 21626  00229C  D002               	goto	l12217
 21627                           
 21628                           ; BSR set to: 0
 21629                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 21630  00229E  0E02               	movlw	2
 21631  0022A0  D001               	goto	L12
 21632  0022A2                     l12217:
 21633                           
 21634                           ; BSR set to: 0
 21635                           ;usb_device_cdc.c: 871: else
 21636                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 21637  0022A2  0E03               	movlw	3
 21638  0022A4                     L12:
 21639  0022A4  6E4A               	movwf	_cdc_trf_state,c
 21640                           
 21641                           ; BSR set to: 0
 21642  0022A6  D000               	goto	l12219
 21643  0022A8                     l12219:
 21644                           
 21645                           ; BSR set to: 0
 21646                           ;usb_device_cdc.c: 873: }
 21647                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21648  0022A8  0E01               	movlw	1
 21649  0022AA  0100               	movlb	0	; () banked
 21650  0022AC  6FAF               	movwf	USBTransferOnePacket@dir& (0+255),b
 21651  0022AE  0E00               	movlw	0
 21652  0022B0  0100               	movlb	0	; () banked
 21653  0022B2  6FB0               	movwf	USBTransferOnePacket@data& (0+255),b
 21654  0022B4  0E05               	movlw	5
 21655  0022B6  0100               	movlb	0	; () banked
 21656  0022B8  6FB1               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21657  0022BA  C0BA  F0B2         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21658  0022BE  0E02               	movlw	2
 21659  0022C0  EC39  F01F         	call	_USBTransferOnePacket
 21660  0022C4  C0AF  F072         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21661  0022C8  C0B0  F073         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21662  0022CC  D000               	goto	l12221
 21663  0022CE                     l12221:
 21664                           
 21665                           ;usb_device_cdc.c: 876: }
 21666                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 21667  0022CE  84A3               	bsf	4003,2,c	;volatile
 21668  0022D0  0012               	return		;funcret
 21669  0022D2                     __end_of_CDCTxService:
 21670                           	opt stack 0
 21671                           tblptru	equ	0xFF8
 21672                           tblptrh	equ	0xFF7
 21673                           tblptrl	equ	0xFF6
 21674                           tablat	equ	0xFF5
 21675                           prodh	equ	0xFF4
 21676                           prodl	equ	0xFF3
 21677                           intcon	equ	0xFF2
 21678                           intcon3	equ	0xFF0
 21679                           indf0	equ	0xFEF
 21680                           postinc0	equ	0xFEE
 21681                           fsr0h	equ	0xFEA
 21682                           fsr0l	equ	0xFE9
 21683                           wreg	equ	0xFE8
 21684                           indf1	equ	0xFE7
 21685                           postdec1	equ	0xFE5
 21686                           fsr1h	equ	0xFE2
 21687                           fsr1l	equ	0xFE1
 21688                           indf2	equ	0xFDF
 21689                           postinc2	equ	0xFDE
 21690                           fsr2h	equ	0xFDA
 21691                           fsr2l	equ	0xFD9
 21692                           status	equ	0xFD8
 21693                           
 21694 ;; *************** function _USBTransferOnePacket *****************
 21695 ;; Defined at:
 21696 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 21697 ;; Parameters:    Size  Location     Type
 21698 ;;  ep              1    wreg     unsigned char 
 21699 ;;  dir             1    0[BANK0 ] unsigned char 
 21700 ;;  data            2    1[BANK0 ] PTR unsigned char 
 21701 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21702 ;;  len             1    3[BANK0 ] unsigned char 
 21703 ;; Auto vars:     Size  Location     Type
 21704 ;;  ep              1    4[BANK0 ] unsigned char 
 21705 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 21706 ;;		 -> BDT(48), NULL(0), 
 21707 ;; Return value:  Size  Location     Type
 21708 ;;                  2    0[BANK0 ] PTR void 
 21709 ;; Registers used:
 21710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21711 ;; Tracked objects:
 21712 ;;		On entry : 0/0
 21713 ;;		On exit  : 0/0
 21714 ;;		Unchanged: 0/0
 21715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21716 ;;      Params:         0       4       0       0       0       0       0       0       0
 21717 ;;      Locals:         0       3       0       0       0       0       0       0       0
 21718 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21719 ;;      Totals:         0       7       0       0       0       0       0       0       0
 21720 ;;Total ram usage:        7 bytes
 21721 ;; Hardware stack levels used:    1
 21722 ;; Hardware stack levels required when called:   11
 21723 ;; This function calls:
 21724 ;;		Nothing
 21725 ;; This function is called by:
 21726 ;;		_getsUSBUSART
 21727 ;;		_CDCTxService
 21728 ;;		_USBCDCEventHandler
 21729 ;; This function uses a non-reentrant model
 21730 ;;
 21731                           
 21732                           	psect	text84
 21733  003E72                     __ptext84:
 21734                           	opt stack 0
 21735  003E72                     _USBTransferOnePacket:
 21736                           	opt stack 16
 21737                           
 21738                           ;incstack = 0
 21739                           ;USBTransferOnePacket@ep stored from wreg
 21740  003E72  0100               	movlb	0	; () banked
 21741  003E74  6FB3               	movwf	USBTransferOnePacket@ep& (0+255),b
 21742                           
 21743                           ; BSR set to: 0
 21744                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 21745                           ;usb_device.c: 762: if(dir != 0)
 21746  003E76  0100               	movlb	0	; () banked
 21747  003E78  51AF               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21748  003E7A  0100               	movlb	0	; () banked
 21749  003E7C  B4D8               	btfsc	status,2,c
 21750  003E7E  D008               	goto	l11391
 21751                           
 21752                           ; BSR set to: 0
 21753                           ;usb_device.c: 763: {
 21754                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 21755  003E80  0100               	movlb	0	; () banked
 21756  003E82  51B3               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21757  003E84  0D02               	mullw	2
 21758  003E86  0E36               	movlw	low _pBDTEntryIn
 21759  003E88  24F3               	addwf	prodl,w,c
 21760  003E8A  6ED9               	movwf	fsr2l,c
 21761  003E8C  0E00               	movlw	high _pBDTEntryIn
 21762  003E8E  D007               	goto	L13
 21763  003E90                     l11391:
 21764                           
 21765                           ; BSR set to: 0
 21766                           ;usb_device.c: 767: else
 21767                           ;usb_device.c: 768: {
 21768                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 21769  003E90  0100               	movlb	0	; () banked
 21770  003E92  51B3               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21771  003E94  0D02               	mullw	2
 21772  003E96  0E60               	movlw	low _pBDTEntryOut
 21773  003E98  24F3               	addwf	prodl,w,c
 21774  003E9A  6ED9               	movwf	fsr2l,c
 21775  003E9C  0E00               	movlw	high _pBDTEntryOut
 21776  003E9E                     L13:
 21777  003E9E  20F4               	addwfc	prodh,w,c
 21778  003EA0  6EDA               	movwf	fsr2h,c
 21779  003EA2  CFDE F0B4          	movff	postinc2,USBTransferOnePacket@handle
 21780  003EA6  CFDD F0B5          	movff	postdec2,USBTransferOnePacket@handle+1
 21781  003EAA  D000               	goto	l11393
 21782  003EAC                     l11393:
 21783                           
 21784                           ; BSR set to: 0
 21785                           ;usb_device.c: 771: }
 21786                           ;usb_device.c: 775: if(handle == 0)
 21787  003EAC  0100               	movlb	0	; () banked
 21788  003EAE  51B4               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21789  003EB0  0100               	movlb	0	; () banked
 21790  003EB2  11B5               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21791  003EB4  A4D8               	btfss	status,2,c
 21792  003EB6  D007               	goto	l11399
 21793                           
 21794                           ; BSR set to: 0
 21795                           ;usb_device.c: 776: {
 21796                           ;usb_device.c: 777: return 0;
 21797  003EB8  0E00               	movlw	0
 21798  003EBA  0100               	movlb	0	; () banked
 21799  003EBC  6FAF               	movwf	?_USBTransferOnePacket& (0+255),b
 21800  003EBE  0E00               	movlw	0
 21801  003EC0  0100               	movlb	0	; () banked
 21802  003EC2  6FB0               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 21803                           
 21804                           ; BSR set to: 0
 21805  003EC4  0012               	return	
 21806  003EC6                     l11399:
 21807                           
 21808                           ; BSR set to: 0
 21809                           ;usb_device.c: 778: }
 21810                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 21811  003EC6  0100               	movlb	0	; () banked
 21812  003EC8  EE20 F002          	lfsr	2,2
 21813  003ECC  51B4               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21814  003ECE  26D9               	addwf	fsr2l,f,c
 21815  003ED0  51B5               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21816  003ED2  22DA               	addwfc	fsr2h,f,c
 21817  003ED4  C0B0  FFDE         	movff	USBTransferOnePacket@data,postinc2
 21818  003ED8  C0B1  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 21819                           
 21820                           ;usb_device.c: 781: handle->CNT = len;
 21821  003EDC  0100               	movlb	0	; () banked
 21822  003EDE  EE20 F001          	lfsr	2,1
 21823  003EE2  51B4               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21824  003EE4  26D9               	addwf	fsr2l,f,c
 21825  003EE6  51B5               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21826  003EE8  22DA               	addwfc	fsr2h,f,c
 21827  003EEA  C0B2  FFDF         	movff	USBTransferOnePacket@len,indf2
 21828                           
 21829                           ; BSR set to: 0
 21830                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 21831  003EEE  C0B4  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21832  003EF2  C0B5  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21833  003EF6  0E40               	movlw	64
 21834  003EF8  16DF               	andwf	indf2,f,c
 21835                           
 21836                           ; BSR set to: 0
 21837                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 21838  003EFA  C0B4  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21839  003EFE  C0B5  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21840  003F02  0E00               	movlw	0
 21841  003F04  86DB               	bsf	plusw2,3,c
 21842                           
 21843                           ; BSR set to: 0
 21844                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 21845  003F06  C0B4  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21846  003F0A  C0B5  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21847  003F0E  0E00               	movlw	0
 21848  003F10  8EDB               	bsf	plusw2,7,c
 21849                           
 21850                           ; BSR set to: 0
 21851                           ;usb_device.c: 787: if(dir != 0)
 21852  003F12  0100               	movlb	0	; () banked
 21853  003F14  51AF               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21854  003F16  0100               	movlb	0	; () banked
 21855  003F18  B4D8               	btfsc	status,2,c
 21856  003F1A  D008               	goto	l11411
 21857                           
 21858                           ; BSR set to: 0
 21859                           ;usb_device.c: 788: {
 21860                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 21861  003F1C  0100               	movlb	0	; () banked
 21862  003F1E  51B3               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21863  003F20  0D02               	mullw	2
 21864  003F22  0E36               	movlw	low _pBDTEntryIn
 21865  003F24  24F3               	addwf	prodl,w,c
 21866  003F26  6ED9               	movwf	fsr2l,c
 21867  003F28  0E00               	movlw	high _pBDTEntryIn
 21868  003F2A  D007               	goto	L14
 21869  003F2C                     l11411:
 21870                           
 21871                           ; BSR set to: 0
 21872                           ;usb_device.c: 792: else
 21873                           ;usb_device.c: 793: {
 21874                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 21875  003F2C  0100               	movlb	0	; () banked
 21876  003F2E  51B3               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21877  003F30  0D02               	mullw	2
 21878  003F32  0E60               	movlw	low _pBDTEntryOut
 21879  003F34  24F3               	addwf	prodl,w,c
 21880  003F36  6ED9               	movwf	fsr2l,c
 21881  003F38  0E00               	movlw	high _pBDTEntryOut
 21882  003F3A                     L14:
 21883  003F3A  20F4               	addwfc	prodh,w,c
 21884  003F3C  6EDA               	movwf	fsr2h,c
 21885  003F3E  0E04               	movlw	4
 21886  003F40  1ADF               	xorwf	indf2,f,c
 21887  003F42  D000               	goto	l11413
 21888  003F44                     l11413:
 21889                           
 21890                           ; BSR set to: 0
 21891                           ;usb_device.c: 796: }
 21892                           ;usb_device.c: 797: return (void*)handle;
 21893  003F44  C0B4  F0AF         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 21894  003F48  C0B5  F0B0         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 21895  003F4C  0012               	return	
 21896                           
 21897                           ; BSR set to: 0
 21898                           
 21899                           ; BSR set to: 0
 21900  003F4E  0012               	return		;funcret
 21901  003F50                     __end_of_USBTransferOnePacket:
 21902                           	opt stack 0
 21903                           tblptru	equ	0xFF8
 21904                           tblptrh	equ	0xFF7
 21905                           tblptrl	equ	0xFF6
 21906                           tablat	equ	0xFF5
 21907                           prodh	equ	0xFF4
 21908                           prodl	equ	0xFF3
 21909                           intcon	equ	0xFF2
 21910                           intcon3	equ	0xFF0
 21911                           indf0	equ	0xFEF
 21912                           postinc0	equ	0xFEE
 21913                           fsr0h	equ	0xFEA
 21914                           fsr0l	equ	0xFE9
 21915                           wreg	equ	0xFE8
 21916                           indf1	equ	0xFE7
 21917                           postdec1	equ	0xFE5
 21918                           fsr1h	equ	0xFE2
 21919                           fsr1l	equ	0xFE1
 21920                           indf2	equ	0xFDF
 21921                           postinc2	equ	0xFDE
 21922                           postdec2	equ	0xFDD
 21923                           plusw2	equ	0xFDB
 21924                           fsr2h	equ	0xFDA
 21925                           fsr2l	equ	0xFD9
 21926                           status	equ	0xFD8
 21927                           
 21928 ;; *************** function _USBDeviceInit *****************
 21929 ;; Defined at:
 21930 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 21931 ;; Parameters:    Size  Location     Type
 21932 ;;		None
 21933 ;; Auto vars:     Size  Location     Type
 21934 ;;  i               1    8[BANK0 ] unsigned char 
 21935 ;; Return value:  Size  Location     Type
 21936 ;;		None               void
 21937 ;; Registers used:
 21938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21939 ;; Tracked objects:
 21940 ;;		On entry : 0/0
 21941 ;;		On exit  : 0/0
 21942 ;;		Unchanged: 0/0
 21943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21944 ;;      Params:         0       0       0       0       0       0       0       0       0
 21945 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21946 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21947 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21948 ;;Total ram usage:        1 bytes
 21949 ;; Hardware stack levels used:    1
 21950 ;; Hardware stack levels required when called:   12
 21951 ;; This function calls:
 21952 ;;		_memset
 21953 ;; This function is called by:
 21954 ;;		_main
 21955 ;; This function uses a non-reentrant model
 21956 ;;
 21957                           
 21958                           	psect	text85
 21959  002732                     __ptext85:
 21960                           	opt stack 0
 21961  002732                     _USBDeviceInit:
 21962                           	opt stack 18
 21963                           
 21964                           ;usb_device.c: 239: uint8_t i;
 21965                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 21966                           
 21967                           ; BSR set to: 0
 21968                           ;incstack = 0
 21969  002732  94A3               	bcf	4003,2,c	;volatile
 21970                           
 21971                           ;usb_device.c: 244: {UEIR = 0;};
 21972  002734  0E00               	movlw	0
 21973  002736  6E67               	movwf	3943,c	;volatile
 21974                           
 21975                           ;usb_device.c: 247: {UIR = 0;};
 21976  002738  0E00               	movlw	0
 21977  00273A  6E65               	movwf	3941,c	;volatile
 21978                           
 21979                           ;usb_device.c: 250: UEP0 = 0;
 21980  00273C  0E00               	movlw	0
 21981  00273E  6E6A               	movwf	3946,c	;volatile
 21982                           
 21983                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 21984  002740  0E6B               	movlw	107
 21985  002742  0100               	movlb	0	; () banked
 21986  002744  6FAF               	movwf	memset@p1& (0+255),b
 21987  002746  0E0F               	movlw	15
 21988  002748  0100               	movlb	0	; () banked
 21989  00274A  6FB0               	movwf	(memset@p1+1)& (0+255),b
 21990  00274C  0E00               	movlw	0
 21991  00274E  0100               	movlb	0	; () banked
 21992  002750  6FB2               	movwf	(memset@c+1)& (0+255),b
 21993  002752  0E00               	movlw	0
 21994  002754  6FB1               	movwf	memset@c& (0+255),b
 21995  002756  0E00               	movlw	0
 21996  002758  0100               	movlb	0	; () banked
 21997  00275A  6FB4               	movwf	(memset@n+1)& (0+255),b
 21998  00275C  0E02               	movlw	2
 21999  00275E  6FB3               	movwf	memset@n& (0+255),b
 22000  002760  EC5B  F02D         	call	_memset	;wreg free
 22001                           
 22002                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 22003  002764  0E16               	movlw	22
 22004  002766  6E62               	movwf	3938,c	;volatile
 22005  002768  0E9F               	movlw	159
 22006  00276A  6E66               	movwf	3942,c	;volatile
 22007  00276C  0E7B               	movlw	123
 22008  00276E  6E64               	movwf	3940,c	;volatile
 22009                           
 22010                           ;usb_device.c: 257: ;
 22011                           ;usb_device.c: 260: ;
 22012                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 22013  002770  0E00               	movlw	0
 22014  002772  0100               	movlb	0	; () banked
 22015  002774  6FB7               	movwf	USBDeviceInit@i& (0+255),b
 22016  002776  D010               	goto	l13365
 22017                           
 22018                           ; BSR set to: 0
 22019                           
 22020                           ; BSR set to: 0
 22021  002778  D013               	goto	l1715
 22022  00277A                     l13361:
 22023                           
 22024                           ; BSR set to: 0
 22025                           ;usb_device.c: 264: {
 22026                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 22027  00277A  0100               	movlb	0	; () banked
 22028  00277C  51B7               	movf	USBDeviceInit@i& (0+255),w,b
 22029  00277E  0D04               	mullw	4
 22030  002780  0E00               	movlw	0
 22031  002782  24F3               	addwf	prodl,w,c
 22032  002784  6ED9               	movwf	fsr2l,c
 22033  002786  0E04               	movlw	4
 22034  002788  20F4               	addwfc	prodh,w,c
 22035  00278A  6EDA               	movwf	fsr2h,c
 22036  00278C  6ADE               	clrf	postinc2,c
 22037  00278E  6ADE               	clrf	postinc2,c
 22038  002790  6ADE               	clrf	postinc2,c
 22039  002792  6ADD               	clrf	postdec2,c
 22040                           
 22041                           ; BSR set to: 0
 22042  002794  0100               	movlb	0	; () banked
 22043  002796  2BB7               	incf	USBDeviceInit@i& (0+255),f,b
 22044  002798                     l13365:
 22045                           
 22046                           ; BSR set to: 0
 22047  002798  0E0B               	movlw	11
 22048  00279A  0100               	movlb	0	; () banked
 22049  00279C  65B7               	cpfsgt	USBDeviceInit@i& (0+255),b
 22050  00279E  D7ED               	goto	l13361
 22051  0027A0                     l1715:
 22052                           
 22053                           ; BSR set to: 0
 22054                           ;usb_device.c: 266: }
 22055                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 22056  0027A0  8C60               	bsf	3936,6,c	;volatile
 22057                           
 22058                           ; BSR set to: 0
 22059                           ;usb_device.c: 272: UADDR = 0x00;
 22060  0027A2  0E00               	movlw	0
 22061  0027A4  6E63               	movwf	3939,c	;volatile
 22062                           
 22063                           ; BSR set to: 0
 22064                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 22065  0027A6  9860               	bcf	3936,4,c	;volatile
 22066                           
 22067                           ; BSR set to: 0
 22068                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 22069  0027A8  9C60               	bcf	3936,6,c	;volatile
 22070                           
 22071                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 22072  0027AA  D00A               	goto	l13381
 22073  0027AC                     l13373:
 22074                           
 22075                           ;usb_device.c: 282: {
 22076                           ;usb_device.c: 283: (UIR &= 0xF7);
 22077  0027AC  9665               	bcf	3941,3,c	;volatile
 22078                           
 22079                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 22080  0027AE  0E00               	movlw	0
 22081  0027B0  6E55               	movwf	_inPipes+3,c	;volatile
 22082                           
 22083                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 22084  0027B2  0E00               	movlw	0
 22085  0027B4  6E31               	movwf	_outPipes+3,c	;volatile
 22086                           
 22087                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 22088  0027B6  0E00               	movlw	0
 22089  0027B8  6E33               	movwf	_outPipes+5,c	;volatile
 22090  0027BA  0E00               	movlw	0
 22091  0027BC  6E32               	movwf	_outPipes+4,c	;volatile
 22092  0027BE  D000               	goto	l13381
 22093  0027C0                     l13381:
 22094  0027C0  B665               	btfsc	3941,3,c	;volatile
 22095  0027C2  D7F4               	goto	l13373
 22096                           
 22097                           ;usb_device.c: 288: }
 22098                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 22099  0027C4  0E01               	movlw	1
 22100  0027C6  0100               	movlb	0	; () banked
 22101  0027C8  6F8A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 22102                           
 22103                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 22104  0027CA  0E01               	movlw	1
 22105  0027CC  0100               	movlb	0	; () banked
 22106  0027CE  6F8B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 22107                           
 22108                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 22109  0027D0  0E00               	movlw	0
 22110  0027D2  0100               	movlb	0	; () banked
 22111  0027D4  6F87               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 22112                           
 22113                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 22114  0027D6  0E00               	movlw	0
 22115  0027D8  0100               	movlb	0	; () banked
 22116  0027DA  6F88               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 22117                           
 22118                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 22119  0027DC  0E00               	movlw	0
 22120  0027DE  0100               	movlb	0	; () banked
 22121  0027E0  6F86               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22122                           
 22123                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 22124  0027E2  0E00               	movlw	0
 22125  0027E4  0100               	movlb	0	; () banked
 22126  0027E6  6FB7               	movwf	USBDeviceInit@i& (0+255),b
 22127  0027E8                     l13385:
 22128                           
 22129                           ; BSR set to: 0
 22130  0027E8  0E02               	movlw	2
 22131  0027EA  0100               	movlb	0	; () banked
 22132  0027EC  65B7               	cpfsgt	USBDeviceInit@i& (0+255),b
 22133  0027EE  D001               	goto	l13389
 22134                           
 22135                           ; BSR set to: 0
 22136  0027F0  D033               	goto	l13395
 22137  0027F2                     l13389:
 22138                           
 22139                           ; BSR set to: 0
 22140                           ;usb_device.c: 302: {
 22141                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 22142  0027F2  0100               	movlb	0	; () banked
 22143  0027F4  51B7               	movf	USBDeviceInit@i& (0+255),w,b
 22144  0027F6  0D02               	mullw	2
 22145  0027F8  0E36               	movlw	low _pBDTEntryIn
 22146  0027FA  24F3               	addwf	prodl,w,c
 22147  0027FC  6ED9               	movwf	fsr2l,c
 22148  0027FE  0E00               	movlw	high _pBDTEntryIn
 22149  002800  20F4               	addwfc	prodh,w,c
 22150  002802  6EDA               	movwf	fsr2h,c
 22151  002804  0E00               	movlw	0
 22152  002806  6EDE               	movwf	postinc2,c
 22153  002808  0E00               	movlw	0
 22154  00280A  6EDD               	movwf	postdec2,c
 22155                           
 22156                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 22157  00280C  0100               	movlb	0	; () banked
 22158  00280E  51B7               	movf	USBDeviceInit@i& (0+255),w,b
 22159  002810  0D02               	mullw	2
 22160  002812  0E60               	movlw	low _pBDTEntryOut
 22161  002814  24F3               	addwf	prodl,w,c
 22162  002816  6ED9               	movwf	fsr2l,c
 22163  002818  0E00               	movlw	high _pBDTEntryOut
 22164  00281A  20F4               	addwfc	prodh,w,c
 22165  00281C  6EDA               	movwf	fsr2h,c
 22166  00281E  0E00               	movlw	0
 22167  002820  6EDE               	movwf	postinc2,c
 22168  002822  0E00               	movlw	0
 22169  002824  6EDD               	movwf	postdec2,c
 22170                           
 22171                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 22172  002826  0100               	movlb	0	; () banked
 22173  002828  51B7               	movf	USBDeviceInit@i& (0+255),w,b
 22174  00282A  0D01               	mullw	1
 22175  00282C  0E66               	movlw	low _ep_data_in
 22176  00282E  24F3               	addwf	prodl,w,c
 22177  002830  6ED9               	movwf	fsr2l,c
 22178  002832  0E00               	movlw	high _ep_data_in
 22179  002834  20F4               	addwfc	prodh,w,c
 22180  002836  6EDA               	movwf	fsr2h,c
 22181  002838  0E00               	movlw	0
 22182  00283A  6EDF               	movwf	indf2,c
 22183                           
 22184                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 22185  00283C  0100               	movlb	0	; () banked
 22186  00283E  51B7               	movf	USBDeviceInit@i& (0+255),w,b
 22187  002840  0D01               	mullw	1
 22188  002842  0E69               	movlw	low _ep_data_out
 22189  002844  24F3               	addwf	prodl,w,c
 22190  002846  6ED9               	movwf	fsr2l,c
 22191  002848  0E00               	movlw	high _ep_data_out
 22192  00284A  20F4               	addwfc	prodh,w,c
 22193  00284C  6EDA               	movwf	fsr2h,c
 22194  00284E  0E00               	movlw	0
 22195  002850  6EDF               	movwf	indf2,c
 22196                           
 22197                           ; BSR set to: 0
 22198  002852  0100               	movlb	0	; () banked
 22199  002854  2BB7               	incf	USBDeviceInit@i& (0+255),f,b
 22200  002856  D7C8               	goto	l13385
 22201  002858                     l13395:
 22202                           
 22203                           ; BSR set to: 0
 22204                           ;usb_device.c: 307: }
 22205                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 22206  002858  0E08               	movlw	8
 22207  00285A  6E36               	movwf	_pBDTEntryIn,c
 22208  00285C  0E04               	movlw	4
 22209  00285E  6E37               	movwf	_pBDTEntryIn+1,c
 22210                           
 22211                           ; BSR set to: 0
 22212                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 22213  002860  0E16               	movlw	22
 22214  002862  6E6A               	movwf	3946,c	;volatile
 22215                           
 22216                           ; BSR set to: 0
 22217                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 22218  002864  0E04               	movlw	4
 22219  002866  0104               	movlb	4	; () banked
 22220  002868  6F03               	movwf	3,b	;volatile
 22221  00286A  0E30               	movlw	48
 22222  00286C  6F02               	movwf	2,b	;volatile
 22223                           
 22224                           ; BSR set to: 4
 22225                           ;usb_device.c: 315: BDT[0].CNT = 8;
 22226  00286E  0E08               	movlw	8
 22227  002870  0104               	movlb	4	; () banked
 22228  002872  6F01               	movwf	1,b	;volatile
 22229                           
 22230                           ; BSR set to: 4
 22231                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 22232  002874  0E04               	movlw	4
 22233  002876  0104               	movlb	4	; () banked
 22234  002878  6F00               	movwf	0,b	;volatile
 22235                           
 22236                           ; BSR set to: 4
 22237                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 22238  00287A  0104               	movlb	4	; () banked
 22239  00287C  8F00               	bsf	0,7,b	;volatile
 22240                           
 22241                           ; BSR set to: 4
 22242                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 22243  00287E  0E00               	movlw	0
 22244  002880  6E58               	movwf	_USBActiveConfiguration,c	;volatile
 22245                           
 22246                           ; BSR set to: 4
 22247                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 22248  002882  0E00               	movlw	0
 22249  002884  0100               	movlb	0	; () banked
 22250  002886  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 22251                           
 22252                           ; BSR set to: 0
 22253  002888  0012               	return		;funcret
 22254  00288A                     __end_of_USBDeviceInit:
 22255                           	opt stack 0
 22256                           tblptru	equ	0xFF8
 22257                           tblptrh	equ	0xFF7
 22258                           tblptrl	equ	0xFF6
 22259                           tablat	equ	0xFF5
 22260                           prodh	equ	0xFF4
 22261                           prodl	equ	0xFF3
 22262                           intcon	equ	0xFF2
 22263                           intcon3	equ	0xFF0
 22264                           indf0	equ	0xFEF
 22265                           postinc0	equ	0xFEE
 22266                           fsr0h	equ	0xFEA
 22267                           fsr0l	equ	0xFE9
 22268                           wreg	equ	0xFE8
 22269                           indf1	equ	0xFE7
 22270                           postdec1	equ	0xFE5
 22271                           fsr1h	equ	0xFE2
 22272                           fsr1l	equ	0xFE1
 22273                           indf2	equ	0xFDF
 22274                           postinc2	equ	0xFDE
 22275                           postdec2	equ	0xFDD
 22276                           plusw2	equ	0xFDB
 22277                           fsr2h	equ	0xFDA
 22278                           fsr2l	equ	0xFD9
 22279                           status	equ	0xFD8
 22280                           
 22281 ;; *************** function _memset *****************
 22282 ;; Defined at:
 22283 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
 22284 ;; Parameters:    Size  Location     Type
 22285 ;;  p1              2    0[BANK0 ] PTR void 
 22286 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22287 ;;  c               2    2[BANK0 ] int 
 22288 ;;  n               2    4[BANK0 ] unsigned int 
 22289 ;; Auto vars:     Size  Location     Type
 22290 ;;  p               2    6[BANK0 ] PTR unsigned char 
 22291 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22292 ;; Return value:  Size  Location     Type
 22293 ;;                  2    0[BANK0 ] PTR void 
 22294 ;; Registers used:
 22295 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22296 ;; Tracked objects:
 22297 ;;		On entry : 0/0
 22298 ;;		On exit  : 0/0
 22299 ;;		Unchanged: 0/0
 22300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22301 ;;      Params:         0       6       0       0       0       0       0       0       0
 22302 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22303 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22304 ;;      Totals:         0       8       0       0       0       0       0       0       0
 22305 ;;Total ram usage:        8 bytes
 22306 ;; Hardware stack levels used:    1
 22307 ;; Hardware stack levels required when called:   11
 22308 ;; This function calls:
 22309 ;;		Nothing
 22310 ;; This function is called by:
 22311 ;;		_USBDeviceInit
 22312 ;; This function uses a non-reentrant model
 22313 ;;
 22314                           
 22315                           	psect	text86
 22316  005AB6                     __ptext86:
 22317                           	opt stack 0
 22318  005AB6                     _memset:
 22319                           	opt stack 18
 22320                           
 22321                           ; BSR set to: 0
 22322                           ;incstack = 0
 22323  005AB6  C0AF  F0B5         	movff	memset@p1,memset@p
 22324  005ABA  C0B0  F0B6         	movff	memset@p1+1,memset@p+1
 22325  005ABE  D00A               	goto	l13325
 22326  005AC0                     l13321:
 22327  005AC0  C0B5  FFD9         	movff	memset@p,fsr2l
 22328  005AC4  C0B6  FFDA         	movff	memset@p+1,fsr2h
 22329  005AC8  C0B1  FFDF         	movff	memset@c,indf2
 22330  005ACC  0100               	movlb	0	; () banked
 22331  005ACE  4BB5               	infsnz	memset@p& (0+255),f,b
 22332  005AD0  2BB6               	incf	(memset@p+1)& (0+255),f,b
 22333  005AD2  D000               	goto	l13325
 22334  005AD4                     l13325:
 22335  005AD4  0100               	movlb	0	; () banked
 22336  005AD6  07B3               	decf	memset@n& (0+255),f,b
 22337  005AD8  A0D8               	btfss	status,0,c
 22338  005ADA  07B4               	decf	(memset@n+1)& (0+255),f,b
 22339  005ADC  0100               	movlb	0	; () banked
 22340  005ADE  29B3               	incf	memset@n& (0+255),w,b
 22341  005AE0  E1EF               	bnz	l13321
 22342  005AE2  0100               	movlb	0	; () banked
 22343  005AE4  29B4               	incf	(memset@n+1)& (0+255),w,b
 22344  005AE6  A4D8               	btfss	status,2,c
 22345  005AE8  D7EB               	goto	l13321
 22346                           
 22347                           ; BSR set to: 0
 22348                           
 22349                           ; BSR set to: 0
 22350                           ;	Return value of _memset is never used
 22351  005AEA  0012               	return		;funcret
 22352  005AEC                     __end_of_memset:
 22353                           	opt stack 0
 22354                           tblptru	equ	0xFF8
 22355                           tblptrh	equ	0xFF7
 22356                           tblptrl	equ	0xFF6
 22357                           tablat	equ	0xFF5
 22358                           prodh	equ	0xFF4
 22359                           prodl	equ	0xFF3
 22360                           intcon	equ	0xFF2
 22361                           intcon3	equ	0xFF0
 22362                           indf0	equ	0xFEF
 22363                           postinc0	equ	0xFEE
 22364                           fsr0h	equ	0xFEA
 22365                           fsr0l	equ	0xFE9
 22366                           wreg	equ	0xFE8
 22367                           indf1	equ	0xFE7
 22368                           postdec1	equ	0xFE5
 22369                           fsr1h	equ	0xFE2
 22370                           fsr1l	equ	0xFE1
 22371                           indf2	equ	0xFDF
 22372                           postinc2	equ	0xFDE
 22373                           postdec2	equ	0xFDD
 22374                           plusw2	equ	0xFDB
 22375                           fsr2h	equ	0xFDA
 22376                           fsr2l	equ	0xFD9
 22377                           status	equ	0xFD8
 22378                           
 22379 ;; *************** function _USBDeviceAttach *****************
 22380 ;; Defined at:
 22381 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 22382 ;; Parameters:    Size  Location     Type
 22383 ;;		None
 22384 ;; Auto vars:     Size  Location     Type
 22385 ;;		None
 22386 ;; Return value:  Size  Location     Type
 22387 ;;		None               void
 22388 ;; Registers used:
 22389 ;;		wreg, status,2
 22390 ;; Tracked objects:
 22391 ;;		On entry : 0/0
 22392 ;;		On exit  : 0/0
 22393 ;;		Unchanged: 0/0
 22394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22395 ;;      Params:         0       0       0       0       0       0       0       0       0
 22396 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22397 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22398 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22399 ;;Total ram usage:        0 bytes
 22400 ;; Hardware stack levels used:    1
 22401 ;; Hardware stack levels required when called:   11
 22402 ;; This function calls:
 22403 ;;		Nothing
 22404 ;; This function is called by:
 22405 ;;		_main
 22406 ;; This function uses a non-reentrant model
 22407 ;;
 22408                           
 22409                           	psect	text87
 22410  005AEC                     __ptext87:
 22411                           	opt stack 0
 22412  005AEC                     _USBDeviceAttach:
 22413                           	opt stack 19
 22414                           
 22415                           ;usb_device.c: 1050: {
 22416                           ;usb_device.c: 1051: if(1 == 1)
 22417                           
 22418                           ; BSR set to: 0
 22419                           ;incstack = 0
 22420  005AEC  0100               	movlb	0	; () banked
 22421  005AEE  5189               	movf	_USBDeviceState& (0+255),w,b	;volatile
 22422  005AF0  A4D8               	btfss	status,2,c
 22423  005AF2  0012               	return	
 22424                           
 22425                           ; BSR set to: 0
 22426                           ;usb_device.c: 1052: {
 22427                           ;usb_device.c: 1054: UCON = 0;
 22428  005AF4  0E00               	movlw	0
 22429  005AF6  6E60               	movwf	3936,c	;volatile
 22430                           
 22431                           ;usb_device.c: 1057: UIE = 0;
 22432  005AF8  0E00               	movlw	0
 22433  005AFA  6E64               	movwf	3940,c	;volatile
 22434                           
 22435                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 22436  005AFC  0E16               	movlw	22
 22437  005AFE  6E62               	movwf	3938,c	;volatile
 22438  005B00  0E9F               	movlw	159
 22439  005B02  6E66               	movwf	3942,c	;volatile
 22440  005B04  0E7B               	movlw	123
 22441  005B06  6E64               	movwf	3940,c	;volatile
 22442                           
 22443                           ; BSR set to: 0
 22444                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 22445  005B08  8ED0               	bsf	4048,7,c	;volatile
 22446                           
 22447                           ; BSR set to: 0
 22448  005B0A  84A5               	bsf	4005,2,c	;volatile
 22449                           
 22450                           ; BSR set to: 0
 22451  005B0C  84A3               	bsf	4003,2,c	;volatile
 22452                           
 22453                           ; BSR set to: 0
 22454  005B0E  8EF2               	bsf	intcon,7,c	;volatile
 22455                           
 22456                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 22457  005B10  D001               	goto	l1776
 22458  005B12                     l1777:
 22459  005B12  8660               	bsf	3936,3,c	;volatile
 22460  005B14                     l1776:
 22461  005B14  A660               	btfss	3936,3,c	;volatile
 22462  005B16  D7FD               	goto	l1777
 22463                           
 22464                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 22465  005B18  0E01               	movlw	1
 22466  005B1A  0100               	movlb	0	; () banked
 22467  005B1C  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 22468                           
 22469                           ; BSR set to: 0
 22470  005B1E  0012               	return	
 22471                           
 22472                           ; BSR set to: 0
 22473                           
 22474                           ; BSR set to: 0
 22475  005B20  0012               	return		;funcret
 22476  005B22                     __end_of_USBDeviceAttach:
 22477                           	opt stack 0
 22478                           tblptru	equ	0xFF8
 22479                           tblptrh	equ	0xFF7
 22480                           tblptrl	equ	0xFF6
 22481                           tablat	equ	0xFF5
 22482                           prodh	equ	0xFF4
 22483                           prodl	equ	0xFF3
 22484                           intcon	equ	0xFF2
 22485                           intcon3	equ	0xFF0
 22486                           indf0	equ	0xFEF
 22487                           postinc0	equ	0xFEE
 22488                           fsr0h	equ	0xFEA
 22489                           fsr0l	equ	0xFE9
 22490                           wreg	equ	0xFE8
 22491                           indf1	equ	0xFE7
 22492                           postdec1	equ	0xFE5
 22493                           fsr1h	equ	0xFE2
 22494                           fsr1l	equ	0xFE1
 22495                           indf2	equ	0xFDF
 22496                           postinc2	equ	0xFDE
 22497                           postdec2	equ	0xFDD
 22498                           plusw2	equ	0xFDB
 22499                           fsr2h	equ	0xFDA
 22500                           fsr2l	equ	0xFD9
 22501                           status	equ	0xFD8
 22502                           
 22503 ;; *************** function _SYSTEM_Initialize *****************
 22504 ;; Defined at:
 22505 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 22506 ;; Parameters:    Size  Location     Type
 22507 ;;		None
 22508 ;; Auto vars:     Size  Location     Type
 22509 ;;		None
 22510 ;; Return value:  Size  Location     Type
 22511 ;;		None               void
 22512 ;; Registers used:
 22513 ;;		wreg, status,2, status,0, cstack
 22514 ;; Tracked objects:
 22515 ;;		On entry : 0/0
 22516 ;;		On exit  : 0/0
 22517 ;;		Unchanged: 0/0
 22518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22519 ;;      Params:         0       0       0       0       0       0       0       0       0
 22520 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22521 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22522 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22523 ;;Total ram usage:        0 bytes
 22524 ;; Hardware stack levels used:    1
 22525 ;; Hardware stack levels required when called:   13
 22526 ;; This function calls:
 22527 ;;		_ADC_Initialize
 22528 ;;		_CMP1_Initialize
 22529 ;;		_EUSART_Initialize
 22530 ;;		_OSCILLATOR_Initialize
 22531 ;;		_PIN_MANAGER_Initialize
 22532 ;;		_TMR1_Initialize
 22533 ;;		_TMR2_Initialize
 22534 ;;		_TMR3_Initialize
 22535 ;; This function is called by:
 22536 ;;		_main
 22537 ;; This function uses a non-reentrant model
 22538 ;;
 22539                           
 22540                           	psect	text88
 22541  005CEA                     __ptext88:
 22542                           	opt stack 0
 22543  005CEA                     _SYSTEM_Initialize:
 22544                           	opt stack 17
 22545                           
 22546                           ;mcc.c: 95: OSCILLATOR_Initialize();
 22547                           
 22548                           ; BSR set to: 0
 22549                           ;incstack = 0
 22550  005CEA  EC01  F02F         	call	_OSCILLATOR_Initialize	;wreg free
 22551                           
 22552                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 22553  005CEE  EC08  F02B         	call	_PIN_MANAGER_Initialize	;wreg free
 22554                           
 22555                           ;mcc.c: 98: TMR1_Initialize();
 22556  005CF2  EC24  F02D         	call	_TMR1_Initialize	;wreg free
 22557                           
 22558                           ;mcc.c: 99: TMR2_Initialize();
 22559  005CF6  EC2E  F02F         	call	_TMR2_Initialize	;wreg free
 22560                           
 22561                           ;mcc.c: 100: TMR3_Initialize();
 22562  005CFA  EC86  F02E         	call	_TMR3_Initialize	;wreg free
 22563                           
 22564                           ;mcc.c: 101: EUSART_Initialize();
 22565  005CFE  EC56  F02C         	call	_EUSART_Initialize	;wreg free
 22566                           
 22567                           ;mcc.c: 102: ADC_Initialize();
 22568  005D02  ECD0  F02E         	call	_ADC_Initialize	;wreg free
 22569                           
 22570                           ;mcc.c: 103: CMP1_Initialize();
 22571  005D06  EC53  F02F         	call	_CMP1_Initialize	;wreg free
 22572  005D0A  0012               	return		;funcret
 22573  005D0C                     __end_of_SYSTEM_Initialize:
 22574                           	opt stack 0
 22575                           tblptru	equ	0xFF8
 22576                           tblptrh	equ	0xFF7
 22577                           tblptrl	equ	0xFF6
 22578                           tablat	equ	0xFF5
 22579                           prodh	equ	0xFF4
 22580                           prodl	equ	0xFF3
 22581                           intcon	equ	0xFF2
 22582                           intcon3	equ	0xFF0
 22583                           indf0	equ	0xFEF
 22584                           postinc0	equ	0xFEE
 22585                           fsr0h	equ	0xFEA
 22586                           fsr0l	equ	0xFE9
 22587                           wreg	equ	0xFE8
 22588                           indf1	equ	0xFE7
 22589                           postdec1	equ	0xFE5
 22590                           fsr1h	equ	0xFE2
 22591                           fsr1l	equ	0xFE1
 22592                           indf2	equ	0xFDF
 22593                           postinc2	equ	0xFDE
 22594                           postdec2	equ	0xFDD
 22595                           plusw2	equ	0xFDB
 22596                           fsr2h	equ	0xFDA
 22597                           fsr2l	equ	0xFD9
 22598                           status	equ	0xFD8
 22599                           
 22600 ;; *************** function _TMR3_Initialize *****************
 22601 ;; Defined at:
 22602 ;;		line 67 in file "../Includes/MccGenerated/tmr3.c"
 22603 ;; Parameters:    Size  Location     Type
 22604 ;;		None
 22605 ;; Auto vars:     Size  Location     Type
 22606 ;;		None
 22607 ;; Return value:  Size  Location     Type
 22608 ;;		None               void
 22609 ;; Registers used:
 22610 ;;		wreg, status,2, cstack
 22611 ;; Tracked objects:
 22612 ;;		On entry : 0/0
 22613 ;;		On exit  : 0/0
 22614 ;;		Unchanged: 0/0
 22615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22616 ;;      Params:         0       0       0       0       0       0       0       0       0
 22617 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22618 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22619 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22620 ;;Total ram usage:        0 bytes
 22621 ;; Hardware stack levels used:    1
 22622 ;; Hardware stack levels required when called:   12
 22623 ;; This function calls:
 22624 ;;		_TMR3_StartTimer
 22625 ;; This function is called by:
 22626 ;;		_SYSTEM_Initialize
 22627 ;; This function uses a non-reentrant model
 22628 ;;
 22629                           
 22630                           	psect	text89
 22631  005D0C                     __ptext89:
 22632                           	opt stack 0
 22633  005D0C                     _TMR3_Initialize:
 22634                           	opt stack 17
 22635                           
 22636                           ;tmr3.c: 72: T3CON = 0x04;
 22637                           
 22638                           ;incstack = 0
 22639  005D0C  0E04               	movlw	4
 22640  005D0E  6EB1               	movwf	4017,c	;volatile
 22641                           
 22642                           ;tmr3.c: 75: T3GCON = 0x00;
 22643  005D10  0E00               	movlw	0
 22644  005D12  6EB4               	movwf	4020,c	;volatile
 22645                           
 22646                           ;tmr3.c: 78: TMR3H = 0xD5;
 22647  005D14  0ED5               	movlw	213
 22648  005D16  6EB3               	movwf	4019,c	;volatile
 22649                           
 22650                           ;tmr3.c: 81: TMR3L = 0xD0;
 22651  005D18  0ED0               	movlw	208
 22652  005D1A  6EB2               	movwf	4018,c	;volatile
 22653                           
 22654                           ;tmr3.c: 84: timer3ReloadVal=TMR3;
 22655  005D1C  CFB2 F07E          	movff	4018,_timer3ReloadVal	;volatile
 22656  005D20  CFB3 F07F          	movff	4019,_timer3ReloadVal+1	;volatile
 22657                           
 22658                           ;tmr3.c: 87: PIR2bits.TMR3IF = 0;
 22659  005D24  92A1               	bcf	4001,1,c	;volatile
 22660                           
 22661                           ;tmr3.c: 90: PIE2bits.TMR3IE = 1;
 22662  005D26  82A0               	bsf	4000,1,c	;volatile
 22663                           
 22664                           ;tmr3.c: 93: TMR3_StartTimer();
 22665  005D28  ECA8  F02F         	call	_TMR3_StartTimer	;wreg free
 22666  005D2C  0012               	return		;funcret
 22667  005D2E                     __end_of_TMR3_Initialize:
 22668                           	opt stack 0
 22669                           tblptru	equ	0xFF8
 22670                           tblptrh	equ	0xFF7
 22671                           tblptrl	equ	0xFF6
 22672                           tablat	equ	0xFF5
 22673                           prodh	equ	0xFF4
 22674                           prodl	equ	0xFF3
 22675                           intcon	equ	0xFF2
 22676                           intcon3	equ	0xFF0
 22677                           indf0	equ	0xFEF
 22678                           postinc0	equ	0xFEE
 22679                           fsr0h	equ	0xFEA
 22680                           fsr0l	equ	0xFE9
 22681                           wreg	equ	0xFE8
 22682                           indf1	equ	0xFE7
 22683                           postdec1	equ	0xFE5
 22684                           fsr1h	equ	0xFE2
 22685                           fsr1l	equ	0xFE1
 22686                           indf2	equ	0xFDF
 22687                           postinc2	equ	0xFDE
 22688                           postdec2	equ	0xFDD
 22689                           plusw2	equ	0xFDB
 22690                           fsr2h	equ	0xFDA
 22691                           fsr2l	equ	0xFD9
 22692                           status	equ	0xFD8
 22693                           
 22694 ;; *************** function _TMR3_StartTimer *****************
 22695 ;; Defined at:
 22696 ;;		line 96 in file "../Includes/MccGenerated/tmr3.c"
 22697 ;; Parameters:    Size  Location     Type
 22698 ;;		None
 22699 ;; Auto vars:     Size  Location     Type
 22700 ;;		None
 22701 ;; Return value:  Size  Location     Type
 22702 ;;		None               void
 22703 ;; Registers used:
 22704 ;;		None
 22705 ;; Tracked objects:
 22706 ;;		On entry : 0/0
 22707 ;;		On exit  : 0/0
 22708 ;;		Unchanged: 0/0
 22709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22710 ;;      Params:         0       0       0       0       0       0       0       0       0
 22711 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22712 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22713 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22714 ;;Total ram usage:        0 bytes
 22715 ;; Hardware stack levels used:    1
 22716 ;; Hardware stack levels required when called:   11
 22717 ;; This function calls:
 22718 ;;		Nothing
 22719 ;; This function is called by:
 22720 ;;		_TMR3_Initialize
 22721 ;; This function uses a non-reentrant model
 22722 ;;
 22723                           
 22724                           	psect	text90
 22725  005F50                     __ptext90:
 22726                           	opt stack 0
 22727  005F50                     _TMR3_StartTimer:
 22728                           	opt stack 17
 22729                           
 22730                           ;tmr3.c: 99: T3CONbits.TMR3ON = 1;
 22731                           
 22732                           ;incstack = 0
 22733  005F50  80B1               	bsf	4017,0,c	;volatile
 22734  005F52  0012               	return		;funcret
 22735  005F54                     __end_of_TMR3_StartTimer:
 22736                           	opt stack 0
 22737                           tblptru	equ	0xFF8
 22738                           tblptrh	equ	0xFF7
 22739                           tblptrl	equ	0xFF6
 22740                           tablat	equ	0xFF5
 22741                           prodh	equ	0xFF4
 22742                           prodl	equ	0xFF3
 22743                           intcon	equ	0xFF2
 22744                           intcon3	equ	0xFF0
 22745                           indf0	equ	0xFEF
 22746                           postinc0	equ	0xFEE
 22747                           fsr0h	equ	0xFEA
 22748                           fsr0l	equ	0xFE9
 22749                           wreg	equ	0xFE8
 22750                           indf1	equ	0xFE7
 22751                           postdec1	equ	0xFE5
 22752                           fsr1h	equ	0xFE2
 22753                           fsr1l	equ	0xFE1
 22754                           indf2	equ	0xFDF
 22755                           postinc2	equ	0xFDE
 22756                           postdec2	equ	0xFDD
 22757                           plusw2	equ	0xFDB
 22758                           fsr2h	equ	0xFDA
 22759                           fsr2l	equ	0xFD9
 22760                           status	equ	0xFD8
 22761                           
 22762 ;; *************** function _TMR2_Initialize *****************
 22763 ;; Defined at:
 22764 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 22765 ;; Parameters:    Size  Location     Type
 22766 ;;		None
 22767 ;; Auto vars:     Size  Location     Type
 22768 ;;		None
 22769 ;; Return value:  Size  Location     Type
 22770 ;;		None               void
 22771 ;; Registers used:
 22772 ;;		wreg, status,2, cstack
 22773 ;; Tracked objects:
 22774 ;;		On entry : 0/0
 22775 ;;		On exit  : 0/0
 22776 ;;		Unchanged: 0/0
 22777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22778 ;;      Params:         0       0       0       0       0       0       0       0       0
 22779 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22780 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22781 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22782 ;;Total ram usage:        0 bytes
 22783 ;; Hardware stack levels used:    1
 22784 ;; Hardware stack levels required when called:   12
 22785 ;; This function calls:
 22786 ;;		_TMR2_StartTimer
 22787 ;; This function is called by:
 22788 ;;		_SYSTEM_Initialize
 22789 ;; This function uses a non-reentrant model
 22790 ;;
 22791                           
 22792                           	psect	text91
 22793  005E5C                     __ptext91:
 22794                           	opt stack 0
 22795  005E5C                     _TMR2_Initialize:
 22796                           	opt stack 17
 22797                           
 22798                           ;tmr2.c: 62: T2CON = 0x7A;
 22799                           
 22800                           ;incstack = 0
 22801  005E5C  0E7A               	movlw	122
 22802  005E5E  6EBA               	movwf	4026,c	;volatile
 22803                           
 22804                           ;tmr2.c: 65: PR2 = 0x9B;
 22805  005E60  0E9B               	movlw	155
 22806  005E62  6EBB               	movwf	4027,c	;volatile
 22807                           
 22808                           ;tmr2.c: 68: TMR2 = 0x00;
 22809  005E64  0E00               	movlw	0
 22810  005E66  6EBC               	movwf	4028,c	;volatile
 22811                           
 22812                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 22813  005E68  929E               	bcf	3998,1,c	;volatile
 22814                           
 22815                           ;tmr2.c: 74: TMR2_StartTimer();
 22816  005E6A  ECAA  F02F         	call	_TMR2_StartTimer	;wreg free
 22817  005E6E  0012               	return		;funcret
 22818  005E70                     __end_of_TMR2_Initialize:
 22819                           	opt stack 0
 22820                           tblptru	equ	0xFF8
 22821                           tblptrh	equ	0xFF7
 22822                           tblptrl	equ	0xFF6
 22823                           tablat	equ	0xFF5
 22824                           prodh	equ	0xFF4
 22825                           prodl	equ	0xFF3
 22826                           intcon	equ	0xFF2
 22827                           intcon3	equ	0xFF0
 22828                           indf0	equ	0xFEF
 22829                           postinc0	equ	0xFEE
 22830                           fsr0h	equ	0xFEA
 22831                           fsr0l	equ	0xFE9
 22832                           wreg	equ	0xFE8
 22833                           indf1	equ	0xFE7
 22834                           postdec1	equ	0xFE5
 22835                           fsr1h	equ	0xFE2
 22836                           fsr1l	equ	0xFE1
 22837                           indf2	equ	0xFDF
 22838                           postinc2	equ	0xFDE
 22839                           postdec2	equ	0xFDD
 22840                           plusw2	equ	0xFDB
 22841                           fsr2h	equ	0xFDA
 22842                           fsr2l	equ	0xFD9
 22843                           status	equ	0xFD8
 22844                           
 22845 ;; *************** function _TMR2_StartTimer *****************
 22846 ;; Defined at:
 22847 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 22848 ;; Parameters:    Size  Location     Type
 22849 ;;		None
 22850 ;; Auto vars:     Size  Location     Type
 22851 ;;		None
 22852 ;; Return value:  Size  Location     Type
 22853 ;;		None               void
 22854 ;; Registers used:
 22855 ;;		None
 22856 ;; Tracked objects:
 22857 ;;		On entry : 0/0
 22858 ;;		On exit  : 0/0
 22859 ;;		Unchanged: 0/0
 22860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22861 ;;      Params:         0       0       0       0       0       0       0       0       0
 22862 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22863 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22864 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22865 ;;Total ram usage:        0 bytes
 22866 ;; Hardware stack levels used:    1
 22867 ;; Hardware stack levels required when called:   11
 22868 ;; This function calls:
 22869 ;;		Nothing
 22870 ;; This function is called by:
 22871 ;;		_TMR2_Initialize
 22872 ;; This function uses a non-reentrant model
 22873 ;;
 22874                           
 22875                           	psect	text92
 22876  005F54                     __ptext92:
 22877                           	opt stack 0
 22878  005F54                     _TMR2_StartTimer:
 22879                           	opt stack 17
 22880                           
 22881                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 22882                           
 22883                           ;incstack = 0
 22884  005F54  84BA               	bsf	4026,2,c	;volatile
 22885  005F56  0012               	return		;funcret
 22886  005F58                     __end_of_TMR2_StartTimer:
 22887                           	opt stack 0
 22888                           tblptru	equ	0xFF8
 22889                           tblptrh	equ	0xFF7
 22890                           tblptrl	equ	0xFF6
 22891                           tablat	equ	0xFF5
 22892                           prodh	equ	0xFF4
 22893                           prodl	equ	0xFF3
 22894                           intcon	equ	0xFF2
 22895                           intcon3	equ	0xFF0
 22896                           indf0	equ	0xFEF
 22897                           postinc0	equ	0xFEE
 22898                           fsr0h	equ	0xFEA
 22899                           fsr0l	equ	0xFE9
 22900                           wreg	equ	0xFE8
 22901                           indf1	equ	0xFE7
 22902                           postdec1	equ	0xFE5
 22903                           fsr1h	equ	0xFE2
 22904                           fsr1l	equ	0xFE1
 22905                           indf2	equ	0xFDF
 22906                           postinc2	equ	0xFDE
 22907                           postdec2	equ	0xFDD
 22908                           plusw2	equ	0xFDB
 22909                           fsr2h	equ	0xFDA
 22910                           fsr2l	equ	0xFD9
 22911                           status	equ	0xFD8
 22912                           
 22913 ;; *************** function _TMR1_Initialize *****************
 22914 ;; Defined at:
 22915 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 22916 ;; Parameters:    Size  Location     Type
 22917 ;;		None
 22918 ;; Auto vars:     Size  Location     Type
 22919 ;;		None
 22920 ;; Return value:  Size  Location     Type
 22921 ;;		None               void
 22922 ;; Registers used:
 22923 ;;		wreg, status,2, status,0, cstack
 22924 ;; Tracked objects:
 22925 ;;		On entry : 0/0
 22926 ;;		On exit  : 0/0
 22927 ;;		Unchanged: 0/0
 22928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22929 ;;      Params:         0       0       0       0       0       0       0       0       0
 22930 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22931 ;;      Temps:          0       2       0       0       0       0       0       0       0
 22932 ;;      Totals:         0       2       0       0       0       0       0       0       0
 22933 ;;Total ram usage:        2 bytes
 22934 ;; Hardware stack levels used:    1
 22935 ;; Hardware stack levels required when called:   12
 22936 ;; This function calls:
 22937 ;;		_TMR1_StartTimer
 22938 ;; This function is called by:
 22939 ;;		_SYSTEM_Initialize
 22940 ;; This function uses a non-reentrant model
 22941 ;;
 22942                           
 22943                           	psect	text93
 22944  005A48                     __ptext93:
 22945                           	opt stack 0
 22946  005A48                     _TMR1_Initialize:
 22947                           	opt stack 17
 22948                           
 22949                           ;tmr1.c: 68: T1CON = 0x00;
 22950                           
 22951                           ;incstack = 0
 22952  005A48  0E00               	movlw	0
 22953  005A4A  6ECD               	movwf	4045,c	;volatile
 22954                           
 22955                           ;tmr1.c: 71: T1GCON = 0x00;
 22956  005A4C  0E00               	movlw	0
 22957  005A4E  6ECC               	movwf	4044,c	;volatile
 22958                           
 22959                           ;tmr1.c: 74: TMR1H = 0xD0;
 22960  005A50  0ED0               	movlw	208
 22961  005A52  6ECF               	movwf	4047,c	;volatile
 22962                           
 22963                           ;tmr1.c: 77: TMR1L = 0x20;
 22964  005A54  0E20               	movlw	32
 22965  005A56  6ECE               	movwf	4046,c	;volatile
 22966                           
 22967                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 22968  005A58  50CE               	movf	4046,w,c	;volatile
 22969  005A5A  CFCF F0AF          	movff	4047,??_TMR1_Initialize	;volatile
 22970  005A5E  0100               	movlb	0	; () banked
 22971  005A60  6BB0               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 22972  005A62  C0AF  F0B0         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 22973  005A66  0100               	movlb	0	; () banked
 22974  005A68  6BAF               	clrf	??_TMR1_Initialize& (0+255),b
 22975  005A6A  0100               	movlb	0	; () banked
 22976  005A6C  11AF               	iorwf	??_TMR1_Initialize& (0+255),w,b
 22977  005A6E  6E42               	movwf	_timer1ReloadVal,c	;volatile
 22978  005A70  0100               	movlb	0	; () banked
 22979  005A72  51B0               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 22980  005A74  6E43               	movwf	_timer1ReloadVal+1,c	;volatile
 22981                           
 22982                           ; BSR set to: 0
 22983                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 22984  005A76  909E               	bcf	3998,0,c	;volatile
 22985                           
 22986                           ; BSR set to: 0
 22987                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 22988  005A78  809D               	bsf	3997,0,c	;volatile
 22989                           
 22990                           ; BSR set to: 0
 22991                           ;tmr1.c: 89: TMR1_StartTimer();
 22992  005A7A  ECAC  F02F         	call	_TMR1_StartTimer	;wreg free
 22993  005A7E  0012               	return		;funcret
 22994  005A80                     __end_of_TMR1_Initialize:
 22995                           	opt stack 0
 22996                           tblptru	equ	0xFF8
 22997                           tblptrh	equ	0xFF7
 22998                           tblptrl	equ	0xFF6
 22999                           tablat	equ	0xFF5
 23000                           prodh	equ	0xFF4
 23001                           prodl	equ	0xFF3
 23002                           intcon	equ	0xFF2
 23003                           intcon3	equ	0xFF0
 23004                           indf0	equ	0xFEF
 23005                           postinc0	equ	0xFEE
 23006                           fsr0h	equ	0xFEA
 23007                           fsr0l	equ	0xFE9
 23008                           wreg	equ	0xFE8
 23009                           indf1	equ	0xFE7
 23010                           postdec1	equ	0xFE5
 23011                           fsr1h	equ	0xFE2
 23012                           fsr1l	equ	0xFE1
 23013                           indf2	equ	0xFDF
 23014                           postinc2	equ	0xFDE
 23015                           postdec2	equ	0xFDD
 23016                           plusw2	equ	0xFDB
 23017                           fsr2h	equ	0xFDA
 23018                           fsr2l	equ	0xFD9
 23019                           status	equ	0xFD8
 23020                           
 23021 ;; *************** function _TMR1_StartTimer *****************
 23022 ;; Defined at:
 23023 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 23024 ;; Parameters:    Size  Location     Type
 23025 ;;		None
 23026 ;; Auto vars:     Size  Location     Type
 23027 ;;		None
 23028 ;; Return value:  Size  Location     Type
 23029 ;;		None               void
 23030 ;; Registers used:
 23031 ;;		None
 23032 ;; Tracked objects:
 23033 ;;		On entry : 0/0
 23034 ;;		On exit  : 0/0
 23035 ;;		Unchanged: 0/0
 23036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23037 ;;      Params:         0       0       0       0       0       0       0       0       0
 23038 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23039 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23040 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23041 ;;Total ram usage:        0 bytes
 23042 ;; Hardware stack levels used:    1
 23043 ;; Hardware stack levels required when called:   11
 23044 ;; This function calls:
 23045 ;;		Nothing
 23046 ;; This function is called by:
 23047 ;;		_TMR1_Initialize
 23048 ;; This function uses a non-reentrant model
 23049 ;;
 23050                           
 23051                           	psect	text94
 23052  005F58                     __ptext94:
 23053                           	opt stack 0
 23054  005F58                     _TMR1_StartTimer:
 23055                           	opt stack 17
 23056                           
 23057                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 23058                           
 23059                           ;incstack = 0
 23060  005F58  80CD               	bsf	4045,0,c	;volatile
 23061  005F5A  0012               	return		;funcret
 23062  005F5C                     __end_of_TMR1_StartTimer:
 23063                           	opt stack 0
 23064                           tblptru	equ	0xFF8
 23065                           tblptrh	equ	0xFF7
 23066                           tblptrl	equ	0xFF6
 23067                           tablat	equ	0xFF5
 23068                           prodh	equ	0xFF4
 23069                           prodl	equ	0xFF3
 23070                           intcon	equ	0xFF2
 23071                           intcon3	equ	0xFF0
 23072                           indf0	equ	0xFEF
 23073                           postinc0	equ	0xFEE
 23074                           fsr0h	equ	0xFEA
 23075                           fsr0l	equ	0xFE9
 23076                           wreg	equ	0xFE8
 23077                           indf1	equ	0xFE7
 23078                           postdec1	equ	0xFE5
 23079                           fsr1h	equ	0xFE2
 23080                           fsr1l	equ	0xFE1
 23081                           indf2	equ	0xFDF
 23082                           postinc2	equ	0xFDE
 23083                           postdec2	equ	0xFDD
 23084                           plusw2	equ	0xFDB
 23085                           fsr2h	equ	0xFDA
 23086                           fsr2l	equ	0xFD9
 23087                           status	equ	0xFD8
 23088                           
 23089 ;; *************** function _PIN_MANAGER_Initialize *****************
 23090 ;; Defined at:
 23091 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 23092 ;; Parameters:    Size  Location     Type
 23093 ;;		None
 23094 ;; Auto vars:     Size  Location     Type
 23095 ;;		None
 23096 ;; Return value:  Size  Location     Type
 23097 ;;		None               void
 23098 ;; Registers used:
 23099 ;;		wreg, status,2
 23100 ;; Tracked objects:
 23101 ;;		On entry : 0/0
 23102 ;;		On exit  : 0/0
 23103 ;;		Unchanged: 0/0
 23104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23105 ;;      Params:         0       0       0       0       0       0       0       0       0
 23106 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23107 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23108 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23109 ;;Total ram usage:        0 bytes
 23110 ;; Hardware stack levels used:    1
 23111 ;; Hardware stack levels required when called:   11
 23112 ;; This function calls:
 23113 ;;		Nothing
 23114 ;; This function is called by:
 23115 ;;		_moteApp_GoToSleep
 23116 ;;		_SYSTEM_Initialize
 23117 ;; This function uses a non-reentrant model
 23118 ;;
 23119                           
 23120                           	psect	text95
 23121  005610                     __ptext95:
 23122                           	opt stack 0
 23123  005610                     _PIN_MANAGER_Initialize:
 23124                           	opt stack 16
 23125                           
 23126                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 23127                           
 23128                           ;incstack = 0
 23129  005610  8092               	bsf	3986,0,c	;volatile
 23130                           
 23131                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 23132  005612  8292               	bsf	3986,1,c	;volatile
 23133                           
 23134                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 23135  005614  8492               	bsf	3986,2,c	;volatile
 23136                           
 23137                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 23138  005616  8692               	bsf	3986,3,c	;volatile
 23139                           
 23140                           ;pin_manager.c: 60: LATEbits.LATE2 = 0;
 23141  005618  948D               	bcf	3981,2,c	;volatile
 23142                           
 23143                           ;pin_manager.c: 61: TRISEbits.TRISE2 = 0;
 23144  00561A  9496               	bcf	3990,2,c	;volatile
 23145                           
 23146                           ;pin_manager.c: 62: TRISAbits.TRISA5 = 0;
 23147  00561C  9A92               	bcf	3986,5,c	;volatile
 23148                           
 23149                           ;pin_manager.c: 63: TRISAbits.TRISA6 = 0;
 23150  00561E  9C92               	bcf	3986,6,c	;volatile
 23151                           
 23152                           ;pin_manager.c: 64: TRISAbits.TRISA7 = 0;
 23153  005620  9E92               	bcf	3986,7,c	;volatile
 23154                           
 23155                           ;pin_manager.c: 66: TRISBbits.TRISB1 = 1;
 23156  005622  8293               	bsf	3987,1,c	;volatile
 23157                           
 23158                           ;pin_manager.c: 67: TRISBbits.TRISB0 = 1;
 23159  005624  8093               	bsf	3987,0,c	;volatile
 23160                           
 23161                           ;pin_manager.c: 68: TRISBbits.TRISB2 = 0;
 23162  005626  9493               	bcf	3987,2,c	;volatile
 23163                           
 23164                           ;pin_manager.c: 69: TRISBbits.TRISB3 = 0;
 23165  005628  9693               	bcf	3987,3,c	;volatile
 23166                           
 23167                           ;pin_manager.c: 70: TRISBbits.TRISB4 = 0;
 23168  00562A  9893               	bcf	3987,4,c	;volatile
 23169                           
 23170                           ;pin_manager.c: 71: TRISBbits.TRISB5 = 0;
 23171  00562C  9A93               	bcf	3987,5,c	;volatile
 23172                           
 23173                           ;pin_manager.c: 73: TRISCbits.TRISC0 = 0;
 23174  00562E  9094               	bcf	3988,0,c	;volatile
 23175                           
 23176                           ;pin_manager.c: 74: TRISCbits.TRISC1 = 0;
 23177  005630  9294               	bcf	3988,1,c	;volatile
 23178                           
 23179                           ;pin_manager.c: 75: TRISCbits.TRISC2 = 1;
 23180  005632  8494               	bsf	3988,2,c	;volatile
 23181                           
 23182                           ;pin_manager.c: 76: TRISCbits.TRISC6 = 0;
 23183  005634  9C94               	bcf	3988,6,c	;volatile
 23184                           
 23185                           ;pin_manager.c: 77: TRISCbits.TRISC7 = 1;
 23186  005636  8E94               	bsf	3988,7,c	;volatile
 23187                           
 23188                           ;pin_manager.c: 79: TRISD = 0b00000000;
 23189  005638  0E00               	movlw	0
 23190  00563A  6E95               	movwf	3989,c	;volatile
 23191                           
 23192                           ;pin_manager.c: 81: TRISEbits.TRISE2 = 0;
 23193  00563C  9496               	bcf	3990,2,c	;volatile
 23194                           
 23195                           ;pin_manager.c: 84: LATAbits.LATA5 = 0;
 23196  00563E  9A89               	bcf	3977,5,c	;volatile
 23197                           
 23198                           ;pin_manager.c: 85: LATAbits.LATA6 = 0;
 23199  005640  9C89               	bcf	3977,6,c	;volatile
 23200                           
 23201                           ;pin_manager.c: 86: LATAbits.LATA7 = 0;
 23202  005642  9E89               	bcf	3977,7,c	;volatile
 23203                           
 23204                           ;pin_manager.c: 88: LATBbits.LATB2 = 0;
 23205  005644  948A               	bcf	3978,2,c	;volatile
 23206                           
 23207                           ;pin_manager.c: 90: LATCbits.LATC2 = 0;
 23208  005646  948B               	bcf	3979,2,c	;volatile
 23209                           
 23210                           ;pin_manager.c: 91: LATCbits.LATC6 = 0;
 23211  005648  9C8B               	bcf	3979,6,c	;volatile
 23212                           
 23213                           ;pin_manager.c: 93: LATEbits.LATE2 = 1;
 23214  00564A  848D               	bsf	3981,2,c	;volatile
 23215                           
 23216                           ;pin_manager.c: 95: ANSELAbits.ANSA0 = 0;
 23217  00564C  010F               	movlb	15	; () banked
 23218  00564E  915B               	bcf	91,0,b	;volatile
 23219                           
 23220                           ; BSR set to: 15
 23221                           ;pin_manager.c: 96: ANSELAbits.ANSA1 = 1;
 23222  005650  010F               	movlb	15	; () banked
 23223  005652  835B               	bsf	91,1,b	;volatile
 23224                           
 23225                           ; BSR set to: 15
 23226                           ;pin_manager.c: 97: ANSELAbits.ANSA2 = 1;
 23227  005654  010F               	movlb	15	; () banked
 23228  005656  855B               	bsf	91,2,b	;volatile
 23229                           
 23230                           ; BSR set to: 15
 23231                           ;pin_manager.c: 98: ANSELAbits.ANSA3 = 1;
 23232  005658  010F               	movlb	15	; () banked
 23233  00565A  875B               	bsf	91,3,b	;volatile
 23234                           
 23235                           ; BSR set to: 15
 23236                           ;pin_manager.c: 99: ANSELCbits.ANSC7 = 0;
 23237  00565C  010F               	movlb	15	; () banked
 23238  00565E  9F5D               	bcf	93,7,b	;volatile
 23239                           
 23240                           ; BSR set to: 15
 23241                           ;pin_manager.c: 100: ANSELCbits.ANSC6 = 0;
 23242  005660  010F               	movlb	15	; () banked
 23243  005662  9D5D               	bcf	93,6,b	;volatile
 23244                           
 23245                           ; BSR set to: 15
 23246  005664  0012               	return		;funcret
 23247  005666                     __end_of_PIN_MANAGER_Initialize:
 23248                           	opt stack 0
 23249                           tblptru	equ	0xFF8
 23250                           tblptrh	equ	0xFF7
 23251                           tblptrl	equ	0xFF6
 23252                           tablat	equ	0xFF5
 23253                           prodh	equ	0xFF4
 23254                           prodl	equ	0xFF3
 23255                           intcon	equ	0xFF2
 23256                           intcon3	equ	0xFF0
 23257                           indf0	equ	0xFEF
 23258                           postinc0	equ	0xFEE
 23259                           fsr0h	equ	0xFEA
 23260                           fsr0l	equ	0xFE9
 23261                           wreg	equ	0xFE8
 23262                           indf1	equ	0xFE7
 23263                           postdec1	equ	0xFE5
 23264                           fsr1h	equ	0xFE2
 23265                           fsr1l	equ	0xFE1
 23266                           indf2	equ	0xFDF
 23267                           postinc2	equ	0xFDE
 23268                           postdec2	equ	0xFDD
 23269                           plusw2	equ	0xFDB
 23270                           fsr2h	equ	0xFDA
 23271                           fsr2l	equ	0xFD9
 23272                           status	equ	0xFD8
 23273                           
 23274 ;; *************** function _OSCILLATOR_Initialize *****************
 23275 ;; Defined at:
 23276 ;;		line 106 in file "../Includes/MccGenerated/mcc.c"
 23277 ;; Parameters:    Size  Location     Type
 23278 ;;		None
 23279 ;; Auto vars:     Size  Location     Type
 23280 ;;		None
 23281 ;; Return value:  Size  Location     Type
 23282 ;;		None               void
 23283 ;; Registers used:
 23284 ;;		wreg, status,2
 23285 ;; Tracked objects:
 23286 ;;		On entry : 0/0
 23287 ;;		On exit  : 0/0
 23288 ;;		Unchanged: 0/0
 23289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23290 ;;      Params:         0       0       0       0       0       0       0       0       0
 23291 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23292 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23293 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23294 ;;Total ram usage:        0 bytes
 23295 ;; Hardware stack levels used:    1
 23296 ;; Hardware stack levels required when called:   11
 23297 ;; This function calls:
 23298 ;;		Nothing
 23299 ;; This function is called by:
 23300 ;;		_SYSTEM_Initialize
 23301 ;; This function uses a non-reentrant model
 23302 ;;
 23303                           
 23304                           	psect	text96
 23305  005E02                     __ptext96:
 23306                           	opt stack 0
 23307  005E02                     _OSCILLATOR_Initialize:
 23308                           	opt stack 18
 23309                           
 23310                           ;mcc.c: 108: OSCTUNE = 0x80;
 23311                           
 23312                           ; BSR set to: 15
 23313                           ;incstack = 0
 23314  005E02  0E80               	movlw	128
 23315  005E04  6E9B               	movwf	3995,c	;volatile
 23316                           
 23317                           ;mcc.c: 109: OSCCON = 0x70;
 23318  005E06  0E70               	movlw	112
 23319  005E08  6ED3               	movwf	4051,c	;volatile
 23320                           
 23321                           ;mcc.c: 110: OSCCON2 = 0x10;
 23322  005E0A  0E10               	movlw	16
 23323  005E0C  6ED2               	movwf	4050,c	;volatile
 23324                           
 23325                           ;mcc.c: 111: while(OSCCON2bits.PLLRDY != 1);
 23326  005E0E  D000               	goto	l1235
 23327  005E10                     l1235:
 23328  005E10  AED2               	btfss	4050,7,c	;volatile
 23329  005E12  D7FE               	goto	l1235
 23330                           
 23331                           ;mcc.c: 112: ACTCON = 0x90;
 23332  005E14  0E90               	movlw	144
 23333  005E16  6EB5               	movwf	4021,c	;volatile
 23334  005E18  0012               	return		;funcret
 23335  005E1A                     __end_of_OSCILLATOR_Initialize:
 23336                           	opt stack 0
 23337                           tblptru	equ	0xFF8
 23338                           tblptrh	equ	0xFF7
 23339                           tblptrl	equ	0xFF6
 23340                           tablat	equ	0xFF5
 23341                           prodh	equ	0xFF4
 23342                           prodl	equ	0xFF3
 23343                           intcon	equ	0xFF2
 23344                           intcon3	equ	0xFF0
 23345                           indf0	equ	0xFEF
 23346                           postinc0	equ	0xFEE
 23347                           fsr0h	equ	0xFEA
 23348                           fsr0l	equ	0xFE9
 23349                           wreg	equ	0xFE8
 23350                           indf1	equ	0xFE7
 23351                           postdec1	equ	0xFE5
 23352                           fsr1h	equ	0xFE2
 23353                           fsr1l	equ	0xFE1
 23354                           indf2	equ	0xFDF
 23355                           postinc2	equ	0xFDE
 23356                           postdec2	equ	0xFDD
 23357                           plusw2	equ	0xFDB
 23358                           fsr2h	equ	0xFDA
 23359                           fsr2l	equ	0xFD9
 23360                           status	equ	0xFD8
 23361                           
 23362 ;; *************** function _EUSART_Initialize *****************
 23363 ;; Defined at:
 23364 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 23365 ;; Parameters:    Size  Location     Type
 23366 ;;		None
 23367 ;; Auto vars:     Size  Location     Type
 23368 ;;		None
 23369 ;; Return value:  Size  Location     Type
 23370 ;;		None               void
 23371 ;; Registers used:
 23372 ;;		wreg, status,2
 23373 ;; Tracked objects:
 23374 ;;		On entry : 0/0
 23375 ;;		On exit  : 0/0
 23376 ;;		Unchanged: 0/0
 23377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23378 ;;      Params:         0       0       0       0       0       0       0       0       0
 23379 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23380 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23381 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23382 ;;Total ram usage:        0 bytes
 23383 ;; Hardware stack levels used:    1
 23384 ;; Hardware stack levels required when called:   11
 23385 ;; This function calls:
 23386 ;;		Nothing
 23387 ;; This function is called by:
 23388 ;;		_SYSTEM_Initialize
 23389 ;; This function uses a non-reentrant model
 23390 ;;
 23391                           
 23392                           	psect	text97
 23393  0058AC                     __ptext97:
 23394                           	opt stack 0
 23395  0058AC                     _EUSART_Initialize:
 23396                           	opt stack 18
 23397                           
 23398                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 23399                           
 23400                           ;incstack = 0
 23401  0058AC  9A9D               	bcf	3997,5,c	;volatile
 23402                           
 23403                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 23404  0058AE  989D               	bcf	3997,4,c	;volatile
 23405                           
 23406                           ;eusart.c: 85: BAUDCON = 0x48;
 23407  0058B0  0E48               	movlw	72
 23408  0058B2  6EB8               	movwf	4024,c	;volatile
 23409                           
 23410                           ;eusart.c: 88: RCSTA = 0x90;
 23411  0058B4  0E90               	movlw	144
 23412  0058B6  6EAB               	movwf	4011,c	;volatile
 23413                           
 23414                           ;eusart.c: 91: TXSTA = 0x26;
 23415  0058B8  0E26               	movlw	38
 23416  0058BA  6EAC               	movwf	4012,c	;volatile
 23417                           
 23418                           ;eusart.c: 95: SPBRG = 0xD0;
 23419  0058BC  0ED0               	movlw	208
 23420  0058BE  6EAF               	movwf	4015,c	;volatile
 23421                           
 23422                           ;eusart.c: 100: SPBRGH = 0x00;
 23423  0058C0  0E00               	movlw	0
 23424  0058C2  6EB0               	movwf	4016,c	;volatile
 23425                           
 23426                           ;eusart.c: 103: eusartTxHead = 0;
 23427  0058C4  0E00               	movlw	0
 23428  0058C6  0100               	movlb	0	; () banked
 23429  0058C8  6F98               	movwf	_eusartTxHead& (0+255),b
 23430                           
 23431                           ;eusart.c: 104: eusartTxTail = 0;
 23432  0058CA  0E00               	movlw	0
 23433  0058CC  0100               	movlb	0	; () banked
 23434  0058CE  6F99               	movwf	_eusartTxTail& (0+255),b
 23435                           
 23436                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 23437  0058D0  0E40               	movlw	64
 23438  0058D2  6E4E               	movwf	_eusartTxBufferRemaining,c	;volatile
 23439                           
 23440                           ;eusart.c: 107: eusartRxHead = 0;
 23441  0058D4  0E00               	movlw	0
 23442  0058D6  0100               	movlb	0	; () banked
 23443  0058D8  6F96               	movwf	_eusartRxHead& (0+255),b
 23444                           
 23445                           ;eusart.c: 108: eusartRxTail = 0;
 23446  0058DA  0E00               	movlw	0
 23447  0058DC  0100               	movlb	0	; () banked
 23448  0058DE  6F97               	movwf	_eusartRxTail& (0+255),b
 23449                           
 23450                           ;eusart.c: 109: eusartRxCount = 0;
 23451  0058E0  0E00               	movlw	0
 23452  0058E2  6E4D               	movwf	_eusartRxCount,c	;volatile
 23453                           
 23454                           ; BSR set to: 0
 23455                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 23456  0058E4  8A9D               	bsf	3997,5,c	;volatile
 23457                           
 23458                           ; BSR set to: 0
 23459                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 23460  0058E6  88AB               	bsf	4011,4,c	;volatile
 23461                           
 23462                           ; BSR set to: 0
 23463  0058E8  0012               	return		;funcret
 23464  0058EA                     __end_of_EUSART_Initialize:
 23465                           	opt stack 0
 23466                           tblptru	equ	0xFF8
 23467                           tblptrh	equ	0xFF7
 23468                           tblptrl	equ	0xFF6
 23469                           tablat	equ	0xFF5
 23470                           prodh	equ	0xFF4
 23471                           prodl	equ	0xFF3
 23472                           intcon	equ	0xFF2
 23473                           intcon3	equ	0xFF0
 23474                           indf0	equ	0xFEF
 23475                           postinc0	equ	0xFEE
 23476                           fsr0h	equ	0xFEA
 23477                           fsr0l	equ	0xFE9
 23478                           wreg	equ	0xFE8
 23479                           indf1	equ	0xFE7
 23480                           postdec1	equ	0xFE5
 23481                           fsr1h	equ	0xFE2
 23482                           fsr1l	equ	0xFE1
 23483                           indf2	equ	0xFDF
 23484                           postinc2	equ	0xFDE
 23485                           postdec2	equ	0xFDD
 23486                           plusw2	equ	0xFDB
 23487                           fsr2h	equ	0xFDA
 23488                           fsr2l	equ	0xFD9
 23489                           status	equ	0xFD8
 23490                           
 23491 ;; *************** function _CMP1_Initialize *****************
 23492 ;; Defined at:
 23493 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 23494 ;; Parameters:    Size  Location     Type
 23495 ;;		None
 23496 ;; Auto vars:     Size  Location     Type
 23497 ;;		None
 23498 ;; Return value:  Size  Location     Type
 23499 ;;		None               void
 23500 ;; Registers used:
 23501 ;;		wreg, status,2
 23502 ;; Tracked objects:
 23503 ;;		On entry : 0/0
 23504 ;;		On exit  : 0/0
 23505 ;;		Unchanged: 0/0
 23506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23507 ;;      Params:         0       0       0       0       0       0       0       0       0
 23508 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23509 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23510 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23511 ;;Total ram usage:        0 bytes
 23512 ;; Hardware stack levels used:    1
 23513 ;; Hardware stack levels required when called:   11
 23514 ;; This function calls:
 23515 ;;		Nothing
 23516 ;; This function is called by:
 23517 ;;		_SYSTEM_Initialize
 23518 ;; This function uses a non-reentrant model
 23519 ;;
 23520                           
 23521                           	psect	text98
 23522  005EA6                     __ptext98:
 23523                           	opt stack 0
 23524  005EA6                     _CMP1_Initialize:
 23525                           	opt stack 18
 23526                           
 23527                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 23528                           
 23529                           ; BSR set to: 0
 23530                           ;incstack = 0
 23531  005EA6  9CA0               	bcf	4000,6,c	;volatile
 23532                           
 23533                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 23534  005EA8  0E9C               	movlw	156
 23535  005EAA  6E98               	movwf	3992,c	;volatile
 23536                           
 23537                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 23538  005EAC  8A9A               	bsf	3994,5,c	;volatile
 23539                           
 23540                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 23541  005EAE  929A               	bcf	3994,1,c	;volatile
 23542                           
 23543                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 23544  005EB0  969A               	bcf	3994,3,c	;volatile
 23545                           
 23546                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 23547  005EB2  9CA1               	bcf	4001,6,c	;volatile
 23548                           
 23549                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 23550  005EB4  9CA0               	bcf	4000,6,c	;volatile
 23551  005EB6  0012               	return		;funcret
 23552  005EB8                     __end_of_CMP1_Initialize:
 23553                           	opt stack 0
 23554                           tblptru	equ	0xFF8
 23555                           tblptrh	equ	0xFF7
 23556                           tblptrl	equ	0xFF6
 23557                           tablat	equ	0xFF5
 23558                           prodh	equ	0xFF4
 23559                           prodl	equ	0xFF3
 23560                           intcon	equ	0xFF2
 23561                           intcon3	equ	0xFF0
 23562                           indf0	equ	0xFEF
 23563                           postinc0	equ	0xFEE
 23564                           fsr0h	equ	0xFEA
 23565                           fsr0l	equ	0xFE9
 23566                           wreg	equ	0xFE8
 23567                           indf1	equ	0xFE7
 23568                           postdec1	equ	0xFE5
 23569                           fsr1h	equ	0xFE2
 23570                           fsr1l	equ	0xFE1
 23571                           indf2	equ	0xFDF
 23572                           postinc2	equ	0xFDE
 23573                           postdec2	equ	0xFDD
 23574                           plusw2	equ	0xFDB
 23575                           fsr2h	equ	0xFDA
 23576                           fsr2l	equ	0xFD9
 23577                           status	equ	0xFD8
 23578                           
 23579 ;; *************** function _ADC_Initialize *****************
 23580 ;; Defined at:
 23581 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 23582 ;; Parameters:    Size  Location     Type
 23583 ;;		None
 23584 ;; Auto vars:     Size  Location     Type
 23585 ;;		None
 23586 ;; Return value:  Size  Location     Type
 23587 ;;		None               void
 23588 ;; Registers used:
 23589 ;;		wreg, status,2
 23590 ;; Tracked objects:
 23591 ;;		On entry : 0/0
 23592 ;;		On exit  : 0/0
 23593 ;;		Unchanged: 0/0
 23594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23595 ;;      Params:         0       0       0       0       0       0       0       0       0
 23596 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23597 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23598 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23599 ;;Total ram usage:        0 bytes
 23600 ;; Hardware stack levels used:    1
 23601 ;; Hardware stack levels required when called:   11
 23602 ;; This function calls:
 23603 ;;		Nothing
 23604 ;; This function is called by:
 23605 ;;		_SYSTEM_Initialize
 23606 ;; This function uses a non-reentrant model
 23607 ;;
 23608                           
 23609                           	psect	text99
 23610  005DA0                     __ptext99:
 23611                           	opt stack 0
 23612  005DA0                     _ADC_Initialize:
 23613                           	opt stack 18
 23614                           
 23615                           ;adc.c: 68: VREFCON0 = 0b10100000;
 23616                           
 23617                           ;incstack = 0
 23618  005DA0  0EA0               	movlw	160
 23619  005DA2  6E7D               	movwf	3965,c	;volatile
 23620                           
 23621                           ;adc.c: 70: ADCON0 = 0x01;
 23622  005DA4  0E01               	movlw	1
 23623  005DA6  6EC2               	movwf	4034,c	;volatile
 23624                           
 23625                           ;adc.c: 73: ADCON1 = 0x08;
 23626  005DA8  0E08               	movlw	8
 23627  005DAA  6EC1               	movwf	4033,c	;volatile
 23628                           
 23629                           ;adc.c: 76: ADCON2 = 0b10001110;
 23630  005DAC  0E8E               	movlw	142
 23631  005DAE  6EC0               	movwf	4032,c	;volatile
 23632                           
 23633                           ;adc.c: 79: ADRESL = 0x00;
 23634  005DB0  0E00               	movlw	0
 23635  005DB2  6EC3               	movwf	4035,c	;volatile
 23636                           
 23637                           ;adc.c: 82: ADRESH = 0x00;
 23638  005DB4  0E00               	movlw	0
 23639  005DB6  6EC4               	movwf	4036,c	;volatile
 23640  005DB8  0012               	return		;funcret
 23641  005DBA                     __end_of_ADC_Initialize:
 23642                           	opt stack 0
 23643                           tblptru	equ	0xFF8
 23644                           tblptrh	equ	0xFF7
 23645                           tblptrl	equ	0xFF6
 23646                           tablat	equ	0xFF5
 23647                           prodh	equ	0xFF4
 23648                           prodl	equ	0xFF3
 23649                           intcon	equ	0xFF2
 23650                           intcon3	equ	0xFF0
 23651                           indf0	equ	0xFEF
 23652                           postinc0	equ	0xFEE
 23653                           fsr0h	equ	0xFEA
 23654                           fsr0l	equ	0xFE9
 23655                           wreg	equ	0xFE8
 23656                           indf1	equ	0xFE7
 23657                           postdec1	equ	0xFE5
 23658                           fsr1h	equ	0xFE2
 23659                           fsr1l	equ	0xFE1
 23660                           indf2	equ	0xFDF
 23661                           postinc2	equ	0xFDE
 23662                           postdec2	equ	0xFDD
 23663                           plusw2	equ	0xFDB
 23664                           fsr2h	equ	0xFDA
 23665                           fsr2l	equ	0xFD9
 23666                           status	equ	0xFD8
 23667                           
 23668 ;; *************** function _MOTEapp_handlerState *****************
 23669 ;; Defined at:
 23670 ;;		line 181 in file "../Includes/Board/MOTEapp.c"
 23671 ;; Parameters:    Size  Location     Type
 23672 ;;  state           1    wreg     enum E7614
 23673 ;; Auto vars:     Size  Location     Type
 23674 ;;  state           1    0[BANK0 ] enum E7614
 23675 ;; Return value:  Size  Location     Type
 23676 ;;		None               void
 23677 ;; Registers used:
 23678 ;;		wreg
 23679 ;; Tracked objects:
 23680 ;;		On entry : 0/0
 23681 ;;		On exit  : 0/0
 23682 ;;		Unchanged: 0/0
 23683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23684 ;;      Params:         0       0       0       0       0       0       0       0       0
 23685 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23686 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23687 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23688 ;;Total ram usage:        1 bytes
 23689 ;; Hardware stack levels used:    1
 23690 ;; Hardware stack levels required when called:   11
 23691 ;; This function calls:
 23692 ;;		Nothing
 23693 ;; This function is called by:
 23694 ;;		_main
 23695 ;; This function uses a non-reentrant model
 23696 ;;
 23697                           
 23698                           	psect	text100
 23699  005F02                     __ptext100:
 23700                           	opt stack 0
 23701  005F02                     _MOTEapp_handlerState:
 23702                           	opt stack 19
 23703                           
 23704                           ;incstack = 0
 23705                           ;MOTEapp_handlerState@state stored from wreg
 23706  005F02  0100               	movlb	0	; () banked
 23707  005F04  6FAF               	movwf	MOTEapp_handlerState@state& (0+255),b
 23708                           
 23709                           ; BSR set to: 0
 23710                           ;MOTEapp.c: 183: moteState = state;
 23711  005F06  C0AF  F0FB         	movff	MOTEapp_handlerState@state,_moteState
 23712                           
 23713                           ; BSR set to: 0
 23714  005F0A  0012               	return		;funcret
 23715  005F0C                     __end_of_MOTEapp_handlerState:
 23716                           	opt stack 0
 23717                           tblptru	equ	0xFF8
 23718                           tblptrh	equ	0xFF7
 23719                           tblptrl	equ	0xFF6
 23720                           tablat	equ	0xFF5
 23721                           prodh	equ	0xFF4
 23722                           prodl	equ	0xFF3
 23723                           intcon	equ	0xFF2
 23724                           intcon3	equ	0xFF0
 23725                           indf0	equ	0xFEF
 23726                           postinc0	equ	0xFEE
 23727                           fsr0h	equ	0xFEA
 23728                           fsr0l	equ	0xFE9
 23729                           wreg	equ	0xFE8
 23730                           indf1	equ	0xFE7
 23731                           postdec1	equ	0xFE5
 23732                           fsr1h	equ	0xFE2
 23733                           fsr1l	equ	0xFE1
 23734                           indf2	equ	0xFDF
 23735                           postinc2	equ	0xFDE
 23736                           postdec2	equ	0xFDD
 23737                           plusw2	equ	0xFDB
 23738                           fsr2h	equ	0xFDA
 23739                           fsr2l	equ	0xFD9
 23740                           status	equ	0xFD8
 23741                           
 23742 ;; *************** function _DATAEE_ReadByte *****************
 23743 ;; Defined at:
 23744 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 23745 ;; Parameters:    Size  Location     Type
 23746 ;;  bAdd            1    wreg     unsigned char 
 23747 ;; Auto vars:     Size  Location     Type
 23748 ;;  bAdd            1    0[BANK0 ] unsigned char 
 23749 ;; Return value:  Size  Location     Type
 23750 ;;                  1    wreg      unsigned char 
 23751 ;; Registers used:
 23752 ;;		wreg, status,2
 23753 ;; Tracked objects:
 23754 ;;		On entry : 0/0
 23755 ;;		On exit  : 0/0
 23756 ;;		Unchanged: 0/0
 23757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23758 ;;      Params:         0       0       0       0       0       0       0       0       0
 23759 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23760 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23761 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23762 ;;Total ram usage:        1 bytes
 23763 ;; Hardware stack levels used:    1
 23764 ;; Hardware stack levels required when called:   11
 23765 ;; This function calls:
 23766 ;;		Nothing
 23767 ;; This function is called by:
 23768 ;;		_main
 23769 ;; This function uses a non-reentrant model
 23770 ;;
 23771                           
 23772                           	psect	text101
 23773  005E1A                     __ptext101:
 23774                           	opt stack 0
 23775  005E1A                     _DATAEE_ReadByte:
 23776                           	opt stack 19
 23777                           
 23778                           ; BSR set to: 0
 23779                           ;incstack = 0
 23780                           ;DATAEE_ReadByte@bAdd stored from wreg
 23781  005E1A  0100               	movlb	0	; () banked
 23782  005E1C  6FAF               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 23783                           
 23784                           ; BSR set to: 0
 23785                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 23786  005E1E  C0AF  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 23787                           
 23788                           ; BSR set to: 0
 23789                           ;memory.c: 191: EECON1bits.CFGS = 0;
 23790  005E22  9CA6               	bcf	4006,6,c	;volatile
 23791                           
 23792                           ; BSR set to: 0
 23793                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 23794  005E24  9EA6               	bcf	4006,7,c	;volatile
 23795                           
 23796                           ; BSR set to: 0
 23797                           ;memory.c: 193: EECON1bits.RD = 1;
 23798  005E26  80A6               	bsf	4006,0,c	;volatile
 23799                           
 23800                           ; BSR set to: 0
 23801                           ;memory.c: 194: __nop();
 23802  005E28  F000               	nop	
 23803                           
 23804                           ;memory.c: 195: __nop();
 23805  005E2A  F000               	nop	
 23806                           
 23807                           ;memory.c: 197: return (EEDATA);
 23808  005E2C  50A8               	movf	4008,w,c	;volatile
 23809  005E2E  0012               	return	
 23810  005E30  0012               	return		;funcret
 23811  005E32                     __end_of_DATAEE_ReadByte:
 23812                           	opt stack 0
 23813                           tblptru	equ	0xFF8
 23814                           tblptrh	equ	0xFF7
 23815                           tblptrl	equ	0xFF6
 23816                           tablat	equ	0xFF5
 23817                           prodh	equ	0xFF4
 23818                           prodl	equ	0xFF3
 23819                           intcon	equ	0xFF2
 23820                           intcon3	equ	0xFF0
 23821                           indf0	equ	0xFEF
 23822                           postinc0	equ	0xFEE
 23823                           fsr0h	equ	0xFEA
 23824                           fsr0l	equ	0xFE9
 23825                           wreg	equ	0xFE8
 23826                           indf1	equ	0xFE7
 23827                           postdec1	equ	0xFE5
 23828                           fsr1h	equ	0xFE2
 23829                           fsr1l	equ	0xFE1
 23830                           indf2	equ	0xFDF
 23831                           postinc2	equ	0xFDE
 23832                           postdec2	equ	0xFDD
 23833                           plusw2	equ	0xFDB
 23834                           fsr2h	equ	0xFDA
 23835                           fsr2l	equ	0xFD9
 23836                           status	equ	0xFD8
 23837                           
 23838 ;; *************** function _INTERRUPT_InterruptManager *****************
 23839 ;; Defined at:
 23840 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 23841 ;; Parameters:    Size  Location     Type
 23842 ;;		None
 23843 ;; Auto vars:     Size  Location     Type
 23844 ;;		None
 23845 ;; Return value:  Size  Location     Type
 23846 ;;		None               void
 23847 ;; Registers used:
 23848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23849 ;; Tracked objects:
 23850 ;;		On entry : 0/0
 23851 ;;		On exit  : 0/0
 23852 ;;		Unchanged: 0/0
 23853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23854 ;;      Params:         0       0       0       0       0       0       0       0       0
 23855 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23856 ;;      Temps:         14       0       0       0       0       0       0       0       0
 23857 ;;      Totals:        14       0       0       0       0       0       0       0       0
 23858 ;;Total ram usage:       14 bytes
 23859 ;; Hardware stack levels used:    1
 23860 ;; Hardware stack levels required when called:   10
 23861 ;; This function calls:
 23862 ;;		_CMP1_ISR
 23863 ;;		_EUSART_Receive_ISR
 23864 ;;		_EUSART_Transmit_ISR
 23865 ;;		_TMR1_ISR
 23866 ;;		_TMR3_ISR
 23867 ;;		_TMRapp_Tick
 23868 ;;		_USBDeviceTasks
 23869 ;;		_USBapp_setrxByteFlag
 23870 ;; This function is called by:
 23871 ;;		Interrupt level 2
 23872 ;; This function uses a non-reentrant model
 23873 ;;
 23874                           
 23875                           	psect	intcode
 23876  000008                     __pintcode:
 23877                           	opt stack 0
 23878  000008                     _INTERRUPT_InterruptManager:
 23879                           	opt stack 11
 23880                           
 23881                           ;incstack = 0
 23882  000008  CFFA F020          	movff	pclath,??_INTERRUPT_InterruptManager
 23883  00000C  CFFB F021          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 23884  000010  CFE9 F022          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 23885  000014  CFEA F023          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 23886  000018  CFE1 F024          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 23887  00001C  CFE2 F025          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 23888  000020  CFD9 F026          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 23889  000024  CFDA F027          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 23890  000028  CFF3 F028          	movff	prodl,??_INTERRUPT_InterruptManager+8
 23891  00002C  CFF4 F029          	movff	prodh,??_INTERRUPT_InterruptManager+9
 23892  000030  CFF6 F02A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 23893  000034  CFF7 F02B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 23894  000038  CFF8 F02C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 23895  00003C  CFF5 F02D          	movff	tablat,??_INTERRUPT_InterruptManager+13
 23896                           
 23897                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 23898  000040  B09D               	btfsc	3997,0,c	;volatile
 23899  000042  A09E               	btfss	3998,0,c	;volatile
 23900  000044  D005               	goto	i2l10843
 23901                           
 23902                           ;interrupt_manager.c: 59: {
 23903                           ;interrupt_manager.c: 60: TMR1_ISR();
 23904  000046  EC71  F02F         	call	_TMR1_ISR	;wreg free
 23905                           
 23906                           ;interrupt_manager.c: 62: TMRapp_Tick();
 23907  00004A  ECA5  F02F         	call	_TMRapp_Tick	;wreg free
 23908  00004E  D000               	goto	i2l10843
 23909  000050                     i2l10843:
 23910                           
 23911                           ;interrupt_manager.c: 63: }
 23912                           ;interrupt_manager.c: 64: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 23913  000050  B2A0               	btfsc	4000,1,c	;volatile
 23914  000052  A2A1               	btfss	4001,1,c	;volatile
 23915  000054  D003               	goto	i2l1195
 23916                           
 23917                           ;interrupt_manager.c: 65: {
 23918                           ;interrupt_manager.c: 66: TMR3_ISR();
 23919  000056  EC97  F02E         	call	_TMR3_ISR	;wreg free
 23920                           
 23921                           ;interrupt_manager.c: 67: }
 23922  00005A  D017               	goto	i2l1203
 23923  00005C                     i2l1195:
 23924                           
 23925                           ;interrupt_manager.c: 68: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 23926  00005C  BA9D               	btfsc	3997,5,c	;volatile
 23927  00005E  AA9E               	btfss	3998,5,c	;volatile
 23928  000060  D005               	goto	i2l1197
 23929                           
 23930                           ;interrupt_manager.c: 69: {
 23931                           ;interrupt_manager.c: 70: USBapp_setrxByteFlag();
 23932  000062  ECA2  F02F         	call	_USBapp_setrxByteFlag	;wreg free
 23933                           
 23934                           ;interrupt_manager.c: 71: EUSART_Receive_ISR();
 23935  000066  ECEB  F02C         	call	_EUSART_Receive_ISR	;wreg free
 23936                           
 23937                           ;interrupt_manager.c: 72: }
 23938  00006A  D00F               	goto	i2l1203
 23939  00006C                     i2l1197:
 23940                           
 23941                           ;interrupt_manager.c: 73: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 23942  00006C  B89D               	btfsc	3997,4,c	;volatile
 23943  00006E  A89E               	btfss	3998,4,c	;volatile
 23944  000070  D003               	goto	i2l1199
 23945                           
 23946                           ;interrupt_manager.c: 74: {
 23947                           ;interrupt_manager.c: 75: EUSART_Transmit_ISR();
 23948  000072  ECCE  F02C         	call	_EUSART_Transmit_ISR	;wreg free
 23949                           
 23950                           ;interrupt_manager.c: 76: }
 23951  000076  D009               	goto	i2l1203
 23952  000078                     i2l1199:
 23953                           
 23954                           ;interrupt_manager.c: 77: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 23955  000078  BCA0               	btfsc	4000,6,c	;volatile
 23956  00007A  ACA1               	btfss	4001,6,c	;volatile
 23957  00007C  D003               	goto	i2l10863
 23958                           
 23959                           ;interrupt_manager.c: 78: {
 23960                           ;interrupt_manager.c: 79: CMP1_ISR();
 23961  00007E  ECAE  F02F         	call	_CMP1_ISR	;wreg free
 23962                           
 23963                           ;interrupt_manager.c: 80: }
 23964  000082  D003               	goto	i2l1203
 23965  000084                     i2l10863:
 23966                           
 23967                           ;interrupt_manager.c: 81: else
 23968                           ;interrupt_manager.c: 82: {
 23969                           ;interrupt_manager.c: 84: USBDeviceTasks();
 23970  000084  EC45  F014         	call	_USBDeviceTasks	;wreg free
 23971  000088  D000               	goto	i2l1203
 23972  00008A                     i2l1203:
 23973  00008A  C02D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 23974  00008E  C02C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 23975  000092  C02B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 23976  000096  C02A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 23977  00009A  C029  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 23978  00009E  C028  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 23979  0000A2  C027  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 23980  0000A6  C026  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 23981  0000AA  C025  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 23982  0000AE  C024  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 23983  0000B2  C023  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 23984  0000B6  C022  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 23985  0000BA  C021  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 23986  0000BE  C020  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 23987  0000C2  0011               	retfie		f
 23988  0000C4                     __end_of_INTERRUPT_InterruptManager:
 23989                           	opt stack 0
 23990                           pclatu	equ	0xFFB
 23991                           pclath	equ	0xFFA
 23992                           tblptru	equ	0xFF8
 23993                           tblptrh	equ	0xFF7
 23994                           tblptrl	equ	0xFF6
 23995                           tablat	equ	0xFF5
 23996                           prodh	equ	0xFF4
 23997                           prodl	equ	0xFF3
 23998                           intcon	equ	0xFF2
 23999                           intcon3	equ	0xFF0
 24000                           indf0	equ	0xFEF
 24001                           postinc0	equ	0xFEE
 24002                           fsr0h	equ	0xFEA
 24003                           fsr0l	equ	0xFE9
 24004                           wreg	equ	0xFE8
 24005                           indf1	equ	0xFE7
 24006                           postdec1	equ	0xFE5
 24007                           fsr1h	equ	0xFE2
 24008                           fsr1l	equ	0xFE1
 24009                           indf2	equ	0xFDF
 24010                           postinc2	equ	0xFDE
 24011                           postdec2	equ	0xFDD
 24012                           plusw2	equ	0xFDB
 24013                           fsr2h	equ	0xFDA
 24014                           fsr2l	equ	0xFD9
 24015                           status	equ	0xFD8
 24016                           
 24017 ;; *************** function _USBapp_setrxByteFlag *****************
 24018 ;; Defined at:
 24019 ;;		line 263 in file "../Includes/Board/USBapp.c"
 24020 ;; Parameters:    Size  Location     Type
 24021 ;;		None
 24022 ;; Auto vars:     Size  Location     Type
 24023 ;;		None
 24024 ;; Return value:  Size  Location     Type
 24025 ;;		None               void
 24026 ;; Registers used:
 24027 ;;		wreg, status,2
 24028 ;; Tracked objects:
 24029 ;;		On entry : 0/0
 24030 ;;		On exit  : 0/0
 24031 ;;		Unchanged: 0/0
 24032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24033 ;;      Params:         0       0       0       0       0       0       0       0       0
 24034 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24035 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24036 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24037 ;;Total ram usage:        0 bytes
 24038 ;; Hardware stack levels used:    1
 24039 ;; This function calls:
 24040 ;;		Nothing
 24041 ;; This function is called by:
 24042 ;;		_INTERRUPT_InterruptManager
 24043 ;; This function uses a non-reentrant model
 24044 ;;
 24045                           
 24046                           	psect	text103
 24047  005F44                     __ptext103:
 24048                           	opt stack 0
 24049  005F44                     _USBapp_setrxByteFlag:
 24050                           	opt stack 20
 24051                           
 24052                           ;USBapp.c: 265: rxByteFlag = 1;
 24053                           
 24054                           ;incstack = 0
 24055  005F44  0E01               	movlw	1
 24056  005F46  6E50               	movwf	_rxByteFlag,c	;volatile
 24057  005F48  0012               	return		;funcret
 24058  005F4A                     __end_of_USBapp_setrxByteFlag:
 24059                           	opt stack 0
 24060                           pclatu	equ	0xFFB
 24061                           pclath	equ	0xFFA
 24062                           tblptru	equ	0xFF8
 24063                           tblptrh	equ	0xFF7
 24064                           tblptrl	equ	0xFF6
 24065                           tablat	equ	0xFF5
 24066                           prodh	equ	0xFF4
 24067                           prodl	equ	0xFF3
 24068                           intcon	equ	0xFF2
 24069                           intcon3	equ	0xFF0
 24070                           indf0	equ	0xFEF
 24071                           postinc0	equ	0xFEE
 24072                           fsr0h	equ	0xFEA
 24073                           fsr0l	equ	0xFE9
 24074                           wreg	equ	0xFE8
 24075                           indf1	equ	0xFE7
 24076                           postdec1	equ	0xFE5
 24077                           fsr1h	equ	0xFE2
 24078                           fsr1l	equ	0xFE1
 24079                           indf2	equ	0xFDF
 24080                           postinc2	equ	0xFDE
 24081                           postdec2	equ	0xFDD
 24082                           plusw2	equ	0xFDB
 24083                           fsr2h	equ	0xFDA
 24084                           fsr2l	equ	0xFD9
 24085                           status	equ	0xFD8
 24086                           
 24087 ;; *************** function _USBDeviceTasks *****************
 24088 ;; Defined at:
 24089 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 24090 ;; Parameters:    Size  Location     Type
 24091 ;;		None
 24092 ;; Auto vars:     Size  Location     Type
 24093 ;;  i               1   30[COMRAM] unsigned char 
 24094 ;; Return value:  Size  Location     Type
 24095 ;;		None               void
 24096 ;; Registers used:
 24097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24098 ;; Tracked objects:
 24099 ;;		On entry : 0/0
 24100 ;;		On exit  : 0/0
 24101 ;;		Unchanged: 0/0
 24102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24103 ;;      Params:         0       0       0       0       0       0       0       0       0
 24104 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24105 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24106 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24107 ;;Total ram usage:        1 bytes
 24108 ;; Hardware stack levels used:    1
 24109 ;; Hardware stack levels required when called:    9
 24110 ;; This function calls:
 24111 ;;		_USBCtrlEPAllowStatusStage
 24112 ;;		_USBCtrlEPService
 24113 ;;		_USBStallHandler
 24114 ;;		_USBSuspend
 24115 ;;		_USBWakeFromSuspend
 24116 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24117 ;;		i2_USBDeviceInit
 24118 ;; This function is called by:
 24119 ;;		_INTERRUPT_InterruptManager
 24120 ;; This function uses a non-reentrant model
 24121 ;;
 24122                           
 24123                           	psect	text104
 24124  00288A                     __ptext104:
 24125                           	opt stack 0
 24126  00288A                     _USBDeviceTasks:
 24127                           	opt stack 11
 24128                           
 24129                           ;usb_device.c: 430: uint8_t i;
 24130                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 24131                           
 24132                           ;incstack = 0
 24133  00288A  0100               	movlb	0	; () banked
 24134  00288C  0589               	decf	_USBDeviceState& (0+255),w,b	;volatile
 24135  00288E  B4D8               	btfsc	status,2,c
 24136                           
 24137                           ; BSR set to: 0
 24138                           ;usb_device.c: 433: {
 24139                           ;usb_device.c: 443: if(!UCONbits.SE0)
 24140  002890  BA60               	btfsc	3936,5,c	;volatile
 24141  002892  D008               	goto	i2l10521
 24142                           
 24143                           ; BSR set to: 0
 24144                           ;usb_device.c: 444: {
 24145                           ;usb_device.c: 445: {UIR = 0;};
 24146  002894  0E00               	movlw	0
 24147  002896  6E65               	movwf	3941,c	;volatile
 24148                           
 24149                           ; BSR set to: 0
 24150                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 24151  002898  8064               	bsf	3940,0,c	;volatile
 24152                           
 24153                           ; BSR set to: 0
 24154                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 24155  00289A  8864               	bsf	3940,4,c	;volatile
 24156                           
 24157                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 24158  00289C  0E02               	movlw	2
 24159  00289E  0100               	movlb	0	; () banked
 24160  0028A0  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 24161                           
 24162                           ; BSR set to: 0
 24163  0028A2  D000               	goto	i2l10521
 24164  0028A4                     i2l10521:
 24165                           
 24166                           ; BSR set to: 0
 24167                           ;usb_device.c: 449: }
 24168                           ;usb_device.c: 450: }
 24169                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 24170  0028A4  B465               	btfsc	3941,2,c	;volatile
 24171                           
 24172                           ; BSR set to: 0
 24173  0028A6  A464               	btfss	3940,2,c	;volatile
 24174  0028A8  D004               	goto	i2l10529
 24175                           
 24176                           ; BSR set to: 0
 24177                           ;usb_device.c: 455: {
 24178                           ;usb_device.c: 456: (UIR &= 0xFB);
 24179  0028AA  9465               	bcf	3941,2,c	;volatile
 24180                           
 24181                           ; BSR set to: 0
 24182                           ;usb_device.c: 457: USBWakeFromSuspend();
 24183  0028AC  ECDD  F02D         	call	_USBWakeFromSuspend	;wreg free
 24184  0028B0  D000               	goto	i2l10529
 24185  0028B2                     i2l10529:
 24186                           
 24187                           ;usb_device.c: 458: }
 24188                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 24189  0028B2  A260               	btfss	3936,1,c	;volatile
 24190  0028B4  D002               	goto	i2l1727
 24191                           
 24192                           ;usb_device.c: 464: {
 24193                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 24194  0028B6  94A4               	bcf	4004,2,c	;volatile
 24195                           
 24196                           ;usb_device.c: 466: return;
 24197  0028B8  0012               	return	
 24198  0028BA                     i2l1727:
 24199                           
 24200                           ;usb_device.c: 467: }
 24201                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 24202  0028BA  B065               	btfsc	3941,0,c	;volatile
 24203  0028BC  A064               	btfss	3940,0,c	;volatile
 24204  0028BE  D008               	goto	i2l10543
 24205                           
 24206                           ;usb_device.c: 480: {
 24207                           ;usb_device.c: 481: USBDeviceInit();
 24208  0028C0  EC8F  F015         	call	i2_USBDeviceInit	;wreg free
 24209                           
 24210                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 24211  0028C4  84A3               	bsf	4003,2,c	;volatile
 24212                           
 24213                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 24214  0028C6  0E04               	movlw	4
 24215  0028C8  0100               	movlb	0	; () banked
 24216  0028CA  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 24217                           
 24218                           ; BSR set to: 0
 24219                           ;usb_device.c: 489: (UIR &= 0xFE);
 24220  0028CC  9065               	bcf	3941,0,c	;volatile
 24221  0028CE  D000               	goto	i2l10543
 24222  0028D0                     i2l10543:
 24223                           
 24224                           ;usb_device.c: 490: }
 24225                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 24226  0028D0  B865               	btfsc	3941,4,c	;volatile
 24227  0028D2  A864               	btfss	3940,4,c	;volatile
 24228  0028D4  D004               	goto	i2l10551
 24229                           
 24230                           ;usb_device.c: 496: {
 24231                           ;usb_device.c: 497: USBSuspend();
 24232  0028D6  EC4E  F02E         	call	_USBSuspend	;wreg free
 24233                           
 24234                           ;usb_device.c: 498: (UIR &= 0xEF);
 24235  0028DA  9865               	bcf	3941,4,c	;volatile
 24236  0028DC  D000               	goto	i2l10551
 24237  0028DE                     i2l10551:
 24238                           
 24239                           ;usb_device.c: 499: }
 24240                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 24241  0028DE  AC65               	btfss	3941,6,c	;volatile
 24242  0028E0  D01D               	goto	i2l10567
 24243                           
 24244                           ;usb_device.c: 502: {
 24245                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 24246  0028E2  AC64               	btfss	3940,6,c	;volatile
 24247  0028E4  D00F               	goto	i2l10557
 24248                           
 24249                           ;usb_device.c: 504: {
 24250                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 24251  0028E6  0E00               	movlw	0
 24252  0028E8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24253  0028EA  0E73               	movlw	115
 24254  0028EC  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24255  0028EE  0E00               	movlw	0
 24256  0028F0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24257  0028F2  0E00               	movlw	0
 24258  0028F4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24259  0028F6  0E00               	movlw	0
 24260  0028F8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24261  0028FA  0E01               	movlw	1
 24262  0028FC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24263  0028FE  EC7E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24264  002902  D000               	goto	i2l10557
 24265  002904                     i2l10557:
 24266                           
 24267                           ;usb_device.c: 506: }
 24268                           ;usb_device.c: 507: (UIR &= 0xBF);
 24269  002904  9C65               	bcf	3941,6,c	;volatile
 24270                           
 24271                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 24272  002906  5049               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24273  002908  B4D8               	btfsc	status,2,c
 24274  00290A  D002               	goto	i2l10563
 24275                           
 24276                           ;usb_device.c: 513: {
 24277                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 24278  00290C  0649               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 24279  00290E  D000               	goto	i2l10563
 24280  002910                     i2l10563:
 24281                           
 24282                           ;usb_device.c: 515: }
 24283                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 24284  002910  5049               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24285  002912  A4D8               	btfss	status,2,c
 24286  002914  D003               	goto	i2l10567
 24287                           
 24288                           ;usb_device.c: 522: {
 24289                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 24290  002916  EC53  F021         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24291  00291A  D000               	goto	i2l10567
 24292  00291C                     i2l10567:
 24293                           
 24294                           ;usb_device.c: 524: }
 24295                           ;usb_device.c: 525: }
 24296                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24297  00291C  BA65               	btfsc	3941,5,c	;volatile
 24298  00291E  AA64               	btfss	3940,5,c	;volatile
 24299  002920  D003               	goto	i2l10573
 24300                           
 24301                           ;usb_device.c: 528: {
 24302                           ;usb_device.c: 529: USBStallHandler();
 24303  002922  ECF5  F02B         	call	_USBStallHandler	;wreg free
 24304  002926  D000               	goto	i2l10573
 24305  002928                     i2l10573:
 24306                           
 24307                           ;usb_device.c: 530: }
 24308                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24309  002928  B265               	btfsc	3941,1,c	;volatile
 24310  00292A  A264               	btfss	3940,1,c	;volatile
 24311  00292C  D010               	goto	i2l10581
 24312                           
 24313                           ;usb_device.c: 533: {
 24314                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24315  00292E  0E7F               	movlw	127
 24316  002930  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24317  002932  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24318  002934  0E00               	movlw	0
 24319  002936  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24320  002938  0E00               	movlw	0
 24321  00293A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24322  00293C  0E00               	movlw	0
 24323  00293E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24324  002940  0E01               	movlw	1
 24325  002942  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24326  002944  EC7E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24327                           
 24328                           ;usb_device.c: 535: {UEIR = 0;};
 24329  002948  0E00               	movlw	0
 24330  00294A  6E67               	movwf	3943,c	;volatile
 24331  00294C  D000               	goto	i2l10581
 24332  00294E                     i2l10581:
 24333                           
 24334                           ;usb_device.c: 536: }
 24335                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 24336  00294E  0E04               	movlw	4
 24337  002950  0100               	movlb	0	; () banked
 24338  002952  6189               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 24339  002954  D002               	goto	i2l1737
 24340                           
 24341                           ; BSR set to: 0
 24342                           ;usb_device.c: 544: {
 24343                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 24344  002956  94A4               	bcf	4004,2,c	;volatile
 24345                           
 24346                           ;usb_device.c: 546: return;
 24347  002958  0012               	return	
 24348  00295A                     i2l1737:
 24349                           
 24350                           ; BSR set to: 0
 24351                           ;usb_device.c: 547: }
 24352                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 24353  00295A  A664               	btfss	3940,3,c	;volatile
 24354  00295C  D03C               	goto	i2l1738
 24355                           
 24356                           ; BSR set to: 0
 24357                           ;usb_device.c: 553: {
 24358                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 24359  00295E  0E00               	movlw	0
 24360  002960  6E1F               	movwf	USBDeviceTasks@i,c
 24361  002962                     i2l10587:
 24362                           
 24363                           ; BSR set to: 0
 24364  002962  0E03               	movlw	3
 24365  002964  641F               	cpfsgt	USBDeviceTasks@i,c
 24366  002966  D001               	goto	i2l1739
 24367                           
 24368                           ; BSR set to: 0
 24369  002968  D036               	goto	i2l1738
 24370  00296A                     i2l1739:
 24371                           
 24372                           ;usb_device.c: 555: {
 24373                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 24374  00296A  A665               	btfss	3941,3,c	;volatile
 24375  00296C  D034               	goto	i2l1738
 24376                           
 24377                           ;usb_device.c: 557: {
 24378                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 24379  00296E  CF61 F059          	movff	3937,_USTATcopy	;volatile
 24380                           
 24381                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 24382  002972  3059               	rrcf	_USTATcopy,w,c	;volatile
 24383  002974  32E8               	rrcf	wreg,f,c
 24384  002976  32E8               	rrcf	wreg,f,c
 24385  002978  0B0F               	andlw	15
 24386  00297A  6E4C               	movwf	_endpoint_number,c	;volatile
 24387                           
 24388                           ;usb_device.c: 562: (UIR &= 0xF7);
 24389  00297C  9665               	bcf	3941,3,c	;volatile
 24390                           
 24391                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 24392  00297E  B459               	btfsc	_USTATcopy,2,c	;volatile
 24393  002980  D007               	goto	i2l10601
 24394                           
 24395                           ;usb_device.c: 567: {
 24396                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24397  002982  504C               	movf	_endpoint_number,w,c	;volatile
 24398  002984  0D01               	mullw	1
 24399  002986  0E69               	movlw	low _ep_data_out
 24400  002988  24F3               	addwf	prodl,w,c
 24401  00298A  6ED9               	movwf	fsr2l,c
 24402  00298C  0E00               	movlw	high _ep_data_out
 24403  00298E  D006               	goto	L15
 24404  002990                     i2l10601:
 24405                           
 24406                           ;usb_device.c: 570: else
 24407                           ;usb_device.c: 571: {
 24408                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24409  002990  504C               	movf	_endpoint_number,w,c	;volatile
 24410  002992  0D01               	mullw	1
 24411  002994  0E66               	movlw	low _ep_data_in
 24412  002996  24F3               	addwf	prodl,w,c
 24413  002998  6ED9               	movwf	fsr2l,c
 24414  00299A  0E00               	movlw	high _ep_data_in
 24415  00299C                     L15:
 24416  00299C  20F4               	addwfc	prodh,w,c
 24417  00299E  6EDA               	movwf	fsr2h,c
 24418  0029A0  0100               	movlb	0	; () banked
 24419  0029A2  70DF               	btg	indf2,0,c
 24420  0029A4  D000               	goto	i2l10603
 24421  0029A6                     i2l10603:
 24422                           
 24423                           ; BSR set to: 0
 24424                           ;usb_device.c: 573: }
 24425                           ;usb_device.c: 577: if(endpoint_number == 0)
 24426  0029A6  504C               	movf	_endpoint_number,w,c	;volatile
 24427  0029A8  A4D8               	btfss	status,2,c
 24428  0029AA  D003               	goto	i2l10607
 24429                           
 24430                           ; BSR set to: 0
 24431                           ;usb_device.c: 578: {
 24432                           ;usb_device.c: 579: USBCtrlEPService();
 24433  0029AC  ECEB  F020         	call	_USBCtrlEPService	;wreg free
 24434                           
 24435                           ;usb_device.c: 580: }
 24436  0029B0  D010               	goto	i2l10609
 24437  0029B2                     i2l10607:
 24438                           
 24439                           ;usb_device.c: 581: else
 24440                           ;usb_device.c: 582: {
 24441                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24442  0029B2  0E00               	movlw	0
 24443  0029B4  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24444  0029B6  0E72               	movlw	114
 24445  0029B8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24446  0029BA  0E59               	movlw	low _USTATcopy
 24447  0029BC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24448  0029BE  0E00               	movlw	high _USTATcopy
 24449  0029C0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24450  0029C2  0E00               	movlw	0
 24451  0029C4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24452  0029C6  0E00               	movlw	0
 24453  0029C8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24454  0029CA  EC7E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24455                           
 24456                           ;usb_device.c: 584: }
 24457                           ;usb_device.c: 585: }
 24458  0029CE  D001               	goto	i2l10609
 24459                           
 24460                           ;usb_device.c: 586: else
 24461                           ;usb_device.c: 587: {
 24462                           ;usb_device.c: 588: break;
 24463  0029D0  D002               	goto	i2l1738
 24464  0029D2                     i2l10609:
 24465  0029D2  2A1F               	incf	USBDeviceTasks@i,f,c
 24466  0029D4  D7C6               	goto	i2l10587
 24467  0029D6                     i2l1738:
 24468                           
 24469                           ;usb_device.c: 589: }
 24470                           ;usb_device.c: 590: }
 24471                           ;usb_device.c: 591: }
 24472                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 24473  0029D6  94A4               	bcf	4004,2,c	;volatile
 24474  0029D8  0012               	return		;funcret
 24475  0029DA                     __end_of_USBDeviceTasks:
 24476                           	opt stack 0
 24477                           pclatu	equ	0xFFB
 24478                           pclath	equ	0xFFA
 24479                           tblptru	equ	0xFF8
 24480                           tblptrh	equ	0xFF7
 24481                           tblptrl	equ	0xFF6
 24482                           tablat	equ	0xFF5
 24483                           prodh	equ	0xFF4
 24484                           prodl	equ	0xFF3
 24485                           intcon	equ	0xFF2
 24486                           intcon3	equ	0xFF0
 24487                           indf0	equ	0xFEF
 24488                           postinc0	equ	0xFEE
 24489                           fsr0h	equ	0xFEA
 24490                           fsr0l	equ	0xFE9
 24491                           wreg	equ	0xFE8
 24492                           indf1	equ	0xFE7
 24493                           postdec1	equ	0xFE5
 24494                           fsr1h	equ	0xFE2
 24495                           fsr1l	equ	0xFE1
 24496                           indf2	equ	0xFDF
 24497                           postinc2	equ	0xFDE
 24498                           postdec2	equ	0xFDD
 24499                           plusw2	equ	0xFDB
 24500                           fsr2h	equ	0xFDA
 24501                           fsr2l	equ	0xFD9
 24502                           status	equ	0xFD8
 24503                           
 24504 ;; *************** function i2_USBDeviceInit *****************
 24505 ;; Defined at:
 24506 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 24507 ;; Parameters:    Size  Location     Type
 24508 ;;		None
 24509 ;; Auto vars:     Size  Location     Type
 24510 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24511 ;; Return value:  Size  Location     Type
 24512 ;;		None               void
 24513 ;; Registers used:
 24514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24515 ;; Tracked objects:
 24516 ;;		On entry : 0/0
 24517 ;;		On exit  : 0/0
 24518 ;;		Unchanged: 0/0
 24519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24520 ;;      Params:         0       0       0       0       0       0       0       0       0
 24521 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24522 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24523 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24524 ;;Total ram usage:        1 bytes
 24525 ;; Hardware stack levels used:    1
 24526 ;; Hardware stack levels required when called:    1
 24527 ;; This function calls:
 24528 ;;		i2_memset
 24529 ;; This function is called by:
 24530 ;;		_USBDeviceTasks
 24531 ;; This function uses a non-reentrant model
 24532 ;;
 24533                           
 24534                           	psect	text105
 24535  002B1E                     __ptext105:
 24536                           	opt stack 0
 24537  002B1E                     i2_USBDeviceInit:
 24538                           	opt stack 18
 24539                           
 24540                           ;usb_device.c: 239: uint8_t i;
 24541                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 24542                           
 24543                           ;incstack = 0
 24544  002B1E  94A3               	bcf	4003,2,c	;volatile
 24545                           
 24546                           ;usb_device.c: 244: {UEIR = 0;};
 24547  002B20  0E00               	movlw	0
 24548  002B22  6E67               	movwf	3943,c	;volatile
 24549                           
 24550                           ;usb_device.c: 247: {UIR = 0;};
 24551  002B24  0E00               	movlw	0
 24552  002B26  6E65               	movwf	3941,c	;volatile
 24553                           
 24554                           ;usb_device.c: 250: UEP0 = 0;
 24555  002B28  0E00               	movlw	0
 24556  002B2A  6E6A               	movwf	3946,c	;volatile
 24557                           
 24558                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 24559  002B2C  0E6B               	movlw	107
 24560  002B2E  6E01               	movwf	i2memset@p1,c
 24561  002B30  0E0F               	movlw	15
 24562  002B32  6E02               	movwf	i2memset@p1+1,c
 24563  002B34  0E00               	movlw	0
 24564  002B36  6E04               	movwf	i2memset@c+1,c
 24565  002B38  0E00               	movlw	0
 24566  002B3A  6E03               	movwf	i2memset@c,c
 24567  002B3C  0E00               	movlw	0
 24568  002B3E  6E06               	movwf	i2memset@n+1,c
 24569  002B40  0E02               	movlw	2
 24570  002B42  6E05               	movwf	i2memset@n,c
 24571  002B44  ECF6  F02D         	call	i2_memset	;wreg free
 24572                           
 24573                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24574  002B48  0E16               	movlw	22
 24575  002B4A  6E62               	movwf	3938,c	;volatile
 24576  002B4C  0E9F               	movlw	159
 24577  002B4E  6E66               	movwf	3942,c	;volatile
 24578  002B50  0E7B               	movlw	123
 24579  002B52  6E64               	movwf	3940,c	;volatile
 24580                           
 24581                           ;usb_device.c: 257: ;
 24582                           ;usb_device.c: 260: ;
 24583                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24584  002B54  0E00               	movlw	0
 24585  002B56  6E09               	movwf	i2USBDeviceInit@i,c
 24586  002B58  D00E               	goto	i2l10159
 24587  002B5A  D010               	goto	i2l1715
 24588  002B5C                     i2l10155:
 24589                           
 24590                           ;usb_device.c: 264: {
 24591                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 24592  002B5C  5009               	movf	i2USBDeviceInit@i,w,c
 24593  002B5E  0D04               	mullw	4
 24594  002B60  0E00               	movlw	0
 24595  002B62  24F3               	addwf	prodl,w,c
 24596  002B64  6ED9               	movwf	fsr2l,c
 24597  002B66  0E04               	movlw	4
 24598  002B68  20F4               	addwfc	prodh,w,c
 24599  002B6A  6EDA               	movwf	fsr2h,c
 24600  002B6C  6ADE               	clrf	postinc2,c
 24601  002B6E  6ADE               	clrf	postinc2,c
 24602  002B70  6ADE               	clrf	postinc2,c
 24603  002B72  6ADD               	clrf	postdec2,c
 24604  002B74  2A09               	incf	i2USBDeviceInit@i,f,c
 24605  002B76                     i2l10159:
 24606  002B76  0E0B               	movlw	11
 24607  002B78  6409               	cpfsgt	i2USBDeviceInit@i,c
 24608  002B7A  D7F0               	goto	i2l10155
 24609  002B7C                     i2l1715:
 24610                           
 24611                           ;usb_device.c: 266: }
 24612                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 24613  002B7C  8C60               	bsf	3936,6,c	;volatile
 24614                           
 24615                           ;usb_device.c: 272: UADDR = 0x00;
 24616  002B7E  0E00               	movlw	0
 24617  002B80  6E63               	movwf	3939,c	;volatile
 24618                           
 24619                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 24620  002B82  9860               	bcf	3936,4,c	;volatile
 24621                           
 24622                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 24623  002B84  9C60               	bcf	3936,6,c	;volatile
 24624                           
 24625                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 24626  002B86  D00A               	goto	i2l10175
 24627  002B88                     i2l10167:
 24628                           
 24629                           ;usb_device.c: 282: {
 24630                           ;usb_device.c: 283: (UIR &= 0xF7);
 24631  002B88  9665               	bcf	3941,3,c	;volatile
 24632                           
 24633                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 24634  002B8A  0E00               	movlw	0
 24635  002B8C  6E55               	movwf	_inPipes+3,c	;volatile
 24636                           
 24637                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 24638  002B8E  0E00               	movlw	0
 24639  002B90  6E31               	movwf	_outPipes+3,c	;volatile
 24640                           
 24641                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 24642  002B92  0E00               	movlw	0
 24643  002B94  6E33               	movwf	_outPipes+5,c	;volatile
 24644  002B96  0E00               	movlw	0
 24645  002B98  6E32               	movwf	_outPipes+4,c	;volatile
 24646  002B9A  D000               	goto	i2l10175
 24647  002B9C                     i2l10175:
 24648  002B9C  B665               	btfsc	3941,3,c	;volatile
 24649  002B9E  D7F4               	goto	i2l10167
 24650                           
 24651                           ;usb_device.c: 288: }
 24652                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 24653  002BA0  0E01               	movlw	1
 24654  002BA2  0100               	movlb	0	; () banked
 24655  002BA4  6F8A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 24656                           
 24657                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 24658  002BA6  0E01               	movlw	1
 24659  002BA8  0100               	movlb	0	; () banked
 24660  002BAA  6F8B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 24661                           
 24662                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 24663  002BAC  0E00               	movlw	0
 24664  002BAE  0100               	movlb	0	; () banked
 24665  002BB0  6F87               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 24666                           
 24667                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 24668  002BB2  0E00               	movlw	0
 24669  002BB4  0100               	movlb	0	; () banked
 24670  002BB6  6F88               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 24671                           
 24672                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 24673  002BB8  0E00               	movlw	0
 24674  002BBA  0100               	movlb	0	; () banked
 24675  002BBC  6F86               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24676                           
 24677                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 24678  002BBE  0E00               	movlw	0
 24679  002BC0  6E09               	movwf	i2USBDeviceInit@i,c
 24680  002BC2                     i2l10179:
 24681                           
 24682                           ; BSR set to: 0
 24683  002BC2  0E02               	movlw	2
 24684  002BC4  6409               	cpfsgt	i2USBDeviceInit@i,c
 24685  002BC6  D001               	goto	i2l10183
 24686                           
 24687                           ; BSR set to: 0
 24688  002BC8  D02E               	goto	i2l10189
 24689  002BCA                     i2l10183:
 24690                           
 24691                           ;usb_device.c: 302: {
 24692                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 24693  002BCA  5009               	movf	i2USBDeviceInit@i,w,c
 24694  002BCC  0D02               	mullw	2
 24695  002BCE  0E36               	movlw	low _pBDTEntryIn
 24696  002BD0  24F3               	addwf	prodl,w,c
 24697  002BD2  6ED9               	movwf	fsr2l,c
 24698  002BD4  0E00               	movlw	high _pBDTEntryIn
 24699  002BD6  20F4               	addwfc	prodh,w,c
 24700  002BD8  6EDA               	movwf	fsr2h,c
 24701  002BDA  0E00               	movlw	0
 24702  002BDC  6EDE               	movwf	postinc2,c
 24703  002BDE  0E00               	movlw	0
 24704  002BE0  6EDD               	movwf	postdec2,c
 24705                           
 24706                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 24707  002BE2  5009               	movf	i2USBDeviceInit@i,w,c
 24708  002BE4  0D02               	mullw	2
 24709  002BE6  0E60               	movlw	low _pBDTEntryOut
 24710  002BE8  24F3               	addwf	prodl,w,c
 24711  002BEA  6ED9               	movwf	fsr2l,c
 24712  002BEC  0E00               	movlw	high _pBDTEntryOut
 24713  002BEE  20F4               	addwfc	prodh,w,c
 24714  002BF0  6EDA               	movwf	fsr2h,c
 24715  002BF2  0E00               	movlw	0
 24716  002BF4  6EDE               	movwf	postinc2,c
 24717  002BF6  0E00               	movlw	0
 24718  002BF8  6EDD               	movwf	postdec2,c
 24719                           
 24720                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 24721  002BFA  5009               	movf	i2USBDeviceInit@i,w,c
 24722  002BFC  0D01               	mullw	1
 24723  002BFE  0E66               	movlw	low _ep_data_in
 24724  002C00  24F3               	addwf	prodl,w,c
 24725  002C02  6ED9               	movwf	fsr2l,c
 24726  002C04  0E00               	movlw	high _ep_data_in
 24727  002C06  20F4               	addwfc	prodh,w,c
 24728  002C08  6EDA               	movwf	fsr2h,c
 24729  002C0A  0E00               	movlw	0
 24730  002C0C  6EDF               	movwf	indf2,c
 24731                           
 24732                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 24733  002C0E  5009               	movf	i2USBDeviceInit@i,w,c
 24734  002C10  0D01               	mullw	1
 24735  002C12  0E69               	movlw	low _ep_data_out
 24736  002C14  24F3               	addwf	prodl,w,c
 24737  002C16  6ED9               	movwf	fsr2l,c
 24738  002C18  0E00               	movlw	high _ep_data_out
 24739  002C1A  20F4               	addwfc	prodh,w,c
 24740  002C1C  6EDA               	movwf	fsr2h,c
 24741  002C1E  0E00               	movlw	0
 24742  002C20  6EDF               	movwf	indf2,c
 24743  002C22  2A09               	incf	i2USBDeviceInit@i,f,c
 24744  002C24  D7CE               	goto	i2l10179
 24745  002C26                     i2l10189:
 24746                           
 24747                           ;usb_device.c: 307: }
 24748                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 24749  002C26  0E08               	movlw	8
 24750  002C28  6E36               	movwf	_pBDTEntryIn,c
 24751  002C2A  0E04               	movlw	4
 24752  002C2C  6E37               	movwf	_pBDTEntryIn+1,c
 24753                           
 24754                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 24755  002C2E  0E16               	movlw	22
 24756  002C30  6E6A               	movwf	3946,c	;volatile
 24757                           
 24758                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 24759  002C32  0E04               	movlw	4
 24760  002C34  0104               	movlb	4	; () banked
 24761  002C36  6F03               	movwf	3,b	;volatile
 24762  002C38  0E30               	movlw	48
 24763  002C3A  6F02               	movwf	2,b	;volatile
 24764                           
 24765                           ; BSR set to: 4
 24766                           ;usb_device.c: 315: BDT[0].CNT = 8;
 24767  002C3C  0E08               	movlw	8
 24768  002C3E  0104               	movlb	4	; () banked
 24769  002C40  6F01               	movwf	1,b	;volatile
 24770                           
 24771                           ; BSR set to: 4
 24772                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 24773  002C42  0E04               	movlw	4
 24774  002C44  0104               	movlb	4	; () banked
 24775  002C46  6F00               	movwf	0,b	;volatile
 24776                           
 24777                           ; BSR set to: 4
 24778                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 24779  002C48  0104               	movlb	4	; () banked
 24780  002C4A  8F00               	bsf	0,7,b	;volatile
 24781                           
 24782                           ; BSR set to: 4
 24783                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 24784  002C4C  0E00               	movlw	0
 24785  002C4E  6E58               	movwf	_USBActiveConfiguration,c	;volatile
 24786                           
 24787                           ; BSR set to: 4
 24788                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 24789  002C50  0E00               	movlw	0
 24790  002C52  0100               	movlb	0	; () banked
 24791  002C54  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 24792                           
 24793                           ; BSR set to: 0
 24794  002C56  0012               	return		;funcret
 24795  002C58                     __end_ofi2_USBDeviceInit:
 24796                           	opt stack 0
 24797                           pclatu	equ	0xFFB
 24798                           pclath	equ	0xFFA
 24799                           tblptru	equ	0xFF8
 24800                           tblptrh	equ	0xFF7
 24801                           tblptrl	equ	0xFF6
 24802                           tablat	equ	0xFF5
 24803                           prodh	equ	0xFF4
 24804                           prodl	equ	0xFF3
 24805                           intcon	equ	0xFF2
 24806                           intcon3	equ	0xFF0
 24807                           indf0	equ	0xFEF
 24808                           postinc0	equ	0xFEE
 24809                           fsr0h	equ	0xFEA
 24810                           fsr0l	equ	0xFE9
 24811                           wreg	equ	0xFE8
 24812                           indf1	equ	0xFE7
 24813                           postdec1	equ	0xFE5
 24814                           fsr1h	equ	0xFE2
 24815                           fsr1l	equ	0xFE1
 24816                           indf2	equ	0xFDF
 24817                           postinc2	equ	0xFDE
 24818                           postdec2	equ	0xFDD
 24819                           plusw2	equ	0xFDB
 24820                           fsr2h	equ	0xFDA
 24821                           fsr2l	equ	0xFD9
 24822                           status	equ	0xFD8
 24823                           
 24824 ;; *************** function _USBWakeFromSuspend *****************
 24825 ;; Defined at:
 24826 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 24827 ;; Parameters:    Size  Location     Type
 24828 ;;		None
 24829 ;; Auto vars:     Size  Location     Type
 24830 ;;		None
 24831 ;; Return value:  Size  Location     Type
 24832 ;;		None               void
 24833 ;; Registers used:
 24834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24835 ;; Tracked objects:
 24836 ;;		On entry : 0/0
 24837 ;;		On exit  : 0/0
 24838 ;;		Unchanged: 0/0
 24839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24840 ;;      Params:         0       0       0       0       0       0       0       0       0
 24841 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24842 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24843 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24844 ;;Total ram usage:        0 bytes
 24845 ;; Hardware stack levels used:    1
 24846 ;; Hardware stack levels required when called:    5
 24847 ;; This function calls:
 24848 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24849 ;; This function is called by:
 24850 ;;		_USBDeviceTasks
 24851 ;; This function uses a non-reentrant model
 24852 ;;
 24853                           
 24854                           	psect	text106
 24855  005BBA                     __ptext106:
 24856                           	opt stack 0
 24857  005BBA                     _USBWakeFromSuspend:
 24858                           	opt stack 14
 24859                           
 24860                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 24861                           
 24862                           ; BSR set to: 0
 24863                           ;incstack = 0
 24864  005BBA  0E00               	movlw	0
 24865  005BBC  0100               	movlb	0	; () banked
 24866  005BBE  6F86               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24867                           
 24868                           ; BSR set to: 0
 24869                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 24870  005BC0  0E00               	movlw	0
 24871  005BC2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24872  005BC4  0E74               	movlw	116
 24873  005BC6  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24874  005BC8  0E00               	movlw	0
 24875  005BCA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24876  005BCC  0E00               	movlw	0
 24877  005BCE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24878  005BD0  0E00               	movlw	0
 24879  005BD2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24880  005BD4  0E00               	movlw	0
 24881  005BD6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24882  005BD8  EC7E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24883                           
 24884                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 24885  005BDC  9260               	bcf	3936,1,c	;volatile
 24886                           
 24887                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 24888  005BDE  9464               	bcf	3940,2,c	;volatile
 24889                           
 24890                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 24891  005BE0  D002               	goto	i2l10077
 24892  005BE2                     i2l10075:
 24893                           
 24894                           ;usb_device.c: 1977: {
 24895                           ;usb_device.c: 1978: (UIR &= 0xFB);
 24896  005BE2  9465               	bcf	3941,2,c	;volatile
 24897  005BE4  D000               	goto	i2l10077
 24898  005BE6                     i2l10077:
 24899  005BE6  B465               	btfsc	3941,2,c	;volatile
 24900  005BE8  D7FC               	goto	i2l10075
 24901  005BEA  0012               	return		;funcret
 24902  005BEC                     __end_of_USBWakeFromSuspend:
 24903                           	opt stack 0
 24904                           pclatu	equ	0xFFB
 24905                           pclath	equ	0xFFA
 24906                           tblptru	equ	0xFF8
 24907                           tblptrh	equ	0xFF7
 24908                           tblptrl	equ	0xFF6
 24909                           tablat	equ	0xFF5
 24910                           prodh	equ	0xFF4
 24911                           prodl	equ	0xFF3
 24912                           intcon	equ	0xFF2
 24913                           intcon3	equ	0xFF0
 24914                           indf0	equ	0xFEF
 24915                           postinc0	equ	0xFEE
 24916                           fsr0h	equ	0xFEA
 24917                           fsr0l	equ	0xFE9
 24918                           wreg	equ	0xFE8
 24919                           indf1	equ	0xFE7
 24920                           postdec1	equ	0xFE5
 24921                           fsr1h	equ	0xFE2
 24922                           fsr1l	equ	0xFE1
 24923                           indf2	equ	0xFDF
 24924                           postinc2	equ	0xFDE
 24925                           postdec2	equ	0xFDD
 24926                           plusw2	equ	0xFDB
 24927                           fsr2h	equ	0xFDA
 24928                           fsr2l	equ	0xFD9
 24929                           status	equ	0xFD8
 24930                           
 24931 ;; *************** function _USBSuspend *****************
 24932 ;; Defined at:
 24933 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 24934 ;; Parameters:    Size  Location     Type
 24935 ;;		None
 24936 ;; Auto vars:     Size  Location     Type
 24937 ;;		None
 24938 ;; Return value:  Size  Location     Type
 24939 ;;		None               void
 24940 ;; Registers used:
 24941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24942 ;; Tracked objects:
 24943 ;;		On entry : 0/0
 24944 ;;		On exit  : 0/0
 24945 ;;		Unchanged: 0/0
 24946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24947 ;;      Params:         0       0       0       0       0       0       0       0       0
 24948 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24949 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24950 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24951 ;;Total ram usage:        0 bytes
 24952 ;; Hardware stack levels used:    1
 24953 ;; Hardware stack levels required when called:    5
 24954 ;; This function calls:
 24955 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24956 ;; This function is called by:
 24957 ;;		_USBDeviceTasks
 24958 ;; This function uses a non-reentrant model
 24959 ;;
 24960                           
 24961                           	psect	text107
 24962  005C9C                     __ptext107:
 24963                           	opt stack 0
 24964  005C9C                     _USBSuspend:
 24965                           	opt stack 14
 24966                           
 24967                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 24968                           
 24969                           ;incstack = 0
 24970  005C9C  8464               	bsf	3940,2,c	;volatile
 24971                           
 24972                           ;usb_device.c: 1915: (UIR &= 0xEF);
 24973  005C9E  9865               	bcf	3941,4,c	;volatile
 24974                           
 24975                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 24976  005CA0  8260               	bsf	3936,1,c	;volatile
 24977                           
 24978                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 24979  005CA2  0E01               	movlw	1
 24980  005CA4  0100               	movlb	0	; () banked
 24981  005CA6  6F86               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24982                           
 24983                           ; BSR set to: 0
 24984                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 24985  005CA8  0E00               	movlw	0
 24986  005CAA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24987  005CAC  0E75               	movlw	117
 24988  005CAE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24989  005CB0  0E00               	movlw	0
 24990  005CB2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24991  005CB4  0E00               	movlw	0
 24992  005CB6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24993  005CB8  0E00               	movlw	0
 24994  005CBA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24995  005CBC  0E00               	movlw	0
 24996  005CBE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24997  005CC0  EC7E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24998  005CC4  0012               	return		;funcret
 24999  005CC6                     __end_of_USBSuspend:
 25000                           	opt stack 0
 25001                           pclatu	equ	0xFFB
 25002                           pclath	equ	0xFFA
 25003                           tblptru	equ	0xFF8
 25004                           tblptrh	equ	0xFF7
 25005                           tblptrl	equ	0xFF6
 25006                           tablat	equ	0xFF5
 25007                           prodh	equ	0xFF4
 25008                           prodl	equ	0xFF3
 25009                           intcon	equ	0xFF2
 25010                           intcon3	equ	0xFF0
 25011                           indf0	equ	0xFEF
 25012                           postinc0	equ	0xFEE
 25013                           fsr0h	equ	0xFEA
 25014                           fsr0l	equ	0xFE9
 25015                           wreg	equ	0xFE8
 25016                           indf1	equ	0xFE7
 25017                           postdec1	equ	0xFE5
 25018                           fsr1h	equ	0xFE2
 25019                           fsr1l	equ	0xFE1
 25020                           indf2	equ	0xFDF
 25021                           postinc2	equ	0xFDE
 25022                           postdec2	equ	0xFDD
 25023                           plusw2	equ	0xFDB
 25024                           fsr2h	equ	0xFDA
 25025                           fsr2l	equ	0xFD9
 25026                           status	equ	0xFD8
 25027                           
 25028 ;; *************** function _USBStallHandler *****************
 25029 ;; Defined at:
 25030 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 25031 ;; Parameters:    Size  Location     Type
 25032 ;;		None
 25033 ;; Auto vars:     Size  Location     Type
 25034 ;;		None
 25035 ;; Return value:  Size  Location     Type
 25036 ;;		None               void
 25037 ;; Registers used:
 25038 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25039 ;; Tracked objects:
 25040 ;;		On entry : 0/0
 25041 ;;		On exit  : 0/0
 25042 ;;		Unchanged: 0/0
 25043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25044 ;;      Params:         0       0       0       0       0       0       0       0       0
 25045 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25046 ;;      Temps:          1       0       0       0       0       0       0       0       0
 25047 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25048 ;;Total ram usage:        1 bytes
 25049 ;; Hardware stack levels used:    1
 25050 ;; This function calls:
 25051 ;;		Nothing
 25052 ;; This function is called by:
 25053 ;;		_USBDeviceTasks
 25054 ;; This function uses a non-reentrant model
 25055 ;;
 25056                           
 25057                           	psect	text108
 25058  0057EA                     __ptext108:
 25059                           	opt stack 0
 25060  0057EA                     _USBStallHandler:
 25061                           	opt stack 19
 25062                           
 25063                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 25064                           
 25065                           ;incstack = 0
 25066  0057EA  A06A               	btfss	3946,0,c	;volatile
 25067  0057EC  D01E               	goto	i2l1877
 25068                           
 25069                           ;usb_device.c: 1859: {
 25070                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 25071  0057EE  C03E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25072  0057F2  C03F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25073  0057F6  0E80               	movlw	128
 25074  0057F8  18DE               	xorwf	postinc2,w,c
 25075  0057FA  A4D8               	btfss	status,2,c
 25076  0057FC  D015               	goto	i2l10099
 25077  0057FE  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 25078  005802  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25079  005806  0E84               	movlw	132
 25080  005808  18DE               	xorwf	postinc2,w,c
 25081  00580A  A4D8               	btfss	status,2,c
 25082  00580C  D00D               	goto	i2l10099
 25083                           
 25084                           ;usb_device.c: 1862: {
 25085                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25086  00580E  C03E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25087  005812  C03F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25088  005816  0E0C               	movlw	12
 25089  005818  6EDF               	movwf	indf2,c
 25090                           
 25091                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25092  00581A  C03E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25093  00581E  C03F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25094  005822  0E00               	movlw	0
 25095  005824  8EDB               	bsf	plusw2,7,c
 25096  005826  D000               	goto	i2l10099
 25097  005828                     i2l10099:
 25098                           
 25099                           ;usb_device.c: 1866: }
 25100                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 25101  005828  906A               	bcf	3946,0,c	;volatile
 25102  00582A                     i2l1877:
 25103                           
 25104                           ;usb_device.c: 1868: }
 25105                           ;usb_device.c: 1870: (UIR &= 0xDF);
 25106  00582A  9A65               	bcf	3941,5,c	;volatile
 25107  00582C  0012               	return		;funcret
 25108  00582E                     __end_of_USBStallHandler:
 25109                           	opt stack 0
 25110                           pclatu	equ	0xFFB
 25111                           pclath	equ	0xFFA
 25112                           tblptru	equ	0xFF8
 25113                           tblptrh	equ	0xFF7
 25114                           tblptrl	equ	0xFF6
 25115                           tablat	equ	0xFF5
 25116                           prodh	equ	0xFF4
 25117                           prodl	equ	0xFF3
 25118                           intcon	equ	0xFF2
 25119                           intcon3	equ	0xFF0
 25120                           indf0	equ	0xFEF
 25121                           postinc0	equ	0xFEE
 25122                           fsr0h	equ	0xFEA
 25123                           fsr0l	equ	0xFE9
 25124                           wreg	equ	0xFE8
 25125                           indf1	equ	0xFE7
 25126                           postdec1	equ	0xFE5
 25127                           fsr1h	equ	0xFE2
 25128                           fsr1l	equ	0xFE1
 25129                           indf2	equ	0xFDF
 25130                           postinc2	equ	0xFDE
 25131                           postdec2	equ	0xFDD
 25132                           plusw2	equ	0xFDB
 25133                           fsr2h	equ	0xFDA
 25134                           fsr2l	equ	0xFD9
 25135                           status	equ	0xFD8
 25136                           
 25137 ;; *************** function _USBCtrlEPService *****************
 25138 ;; Defined at:
 25139 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 25140 ;; Parameters:    Size  Location     Type
 25141 ;;		None
 25142 ;; Auto vars:     Size  Location     Type
 25143 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 25144 ;; Return value:  Size  Location     Type
 25145 ;;		None               void
 25146 ;; Registers used:
 25147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25148 ;; Tracked objects:
 25149 ;;		On entry : 0/0
 25150 ;;		On exit  : 0/0
 25151 ;;		Unchanged: 0/0
 25152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25153 ;;      Params:         0       0       0       0       0       0       0       0       0
 25154 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25155 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25156 ;;      Totals:         3       0       0       0       0       0       0       0       0
 25157 ;;Total ram usage:        3 bytes
 25158 ;; Hardware stack levels used:    1
 25159 ;; Hardware stack levels required when called:    8
 25160 ;; This function calls:
 25161 ;;		_USBCtrlTrfInHandler
 25162 ;;		_USBCtrlTrfOutHandler
 25163 ;;		_USBCtrlTrfSetupHandler
 25164 ;; This function is called by:
 25165 ;;		_USBDeviceTasks
 25166 ;; This function uses a non-reentrant model
 25167 ;;
 25168                           
 25169                           	psect	text109
 25170  0041D6                     __ptext109:
 25171                           	opt stack 0
 25172  0041D6                     _USBCtrlEPService:
 25173                           	opt stack 11
 25174                           
 25175                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 25176                           
 25177                           ;incstack = 0
 25178  0041D6  0E2D               	movlw	45
 25179  0041D8  6E49               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 25180                           
 25181                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 25182  0041DA  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25183  0041DE  0EFD               	movlw	253
 25184  0041E0  161C               	andwf	??_USBCtrlEPService,f,c
 25185  0041E2  A4D8               	btfss	status,2,c
 25186  0041E4  D057               	goto	i2l10133
 25187                           
 25188                           ;usb_device.c: 2013: {
 25189                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 25190  0041E6  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25191  0041EA  90D8               	bcf	status,0,c
 25192  0041EC  321C               	rrcf	??_USBCtrlEPService,f,c
 25193  0041EE  0E3F               	movlw	63
 25194  0041F0  161C               	andwf	??_USBCtrlEPService,f,c
 25195  0041F2  501C               	movf	??_USBCtrlEPService,w,c
 25196  0041F4  0D04               	mullw	4
 25197  0041F6  0E00               	movlw	0
 25198  0041F8  24F3               	addwf	prodl,w,c
 25199  0041FA  6E3E               	movwf	_pBDTEntryEP0OutCurrent,c
 25200  0041FC  0E04               	movlw	4
 25201  0041FE  20F4               	addwfc	prodh,w,c
 25202  004200  6E3F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 25203                           
 25204                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25205  004202  C03E  F040         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25206  004206  C03F  F041         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25207                           
 25208                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 25209  00420A  0E04               	movlw	4
 25210  00420C  1A40               	xorwf	_pBDTEntryEP0OutNext,f,c
 25211                           
 25212                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 25213  00420E  C03E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25214  004212  C03F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25215  004216  30DF               	rrcf	indf2,w,c
 25216  004218  32E8               	rrcf	wreg,f,c
 25217  00421A  0B0F               	andlw	15
 25218  00421C  0A0D               	xorlw	13
 25219  00421E  A4D8               	btfss	status,2,c
 25220  004220  D036               	goto	i2l10131
 25221                           
 25222                           ;usb_device.c: 2025: {
 25223                           ;usb_device.c: 2026: unsigned char setup_cnt;
 25224                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 25225  004222  0E00               	movlw	0
 25226  004224  6E1E               	movwf	USBCtrlEPService@setup_cnt,c
 25227  004226                     i2l10115:
 25228  004226  0E07               	movlw	7
 25229  004228  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 25230  00422A  D001               	goto	i2l10119
 25231  00422C  D023               	goto	i2l10127
 25232  00422E                     i2l10119:
 25233                           
 25234                           ;usb_device.c: 2033: {
 25235                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 25236  00422E  EE20 F002          	lfsr	2,2
 25237  004232  503E               	movf	_pBDTEntryEP0OutCurrent,w,c
 25238  004234  26D9               	addwf	fsr2l,f,c
 25239  004236  503F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25240  004238  22DA               	addwfc	fsr2h,f,c
 25241  00423A  CFDE F01C          	movff	postinc2,??_USBCtrlEPService
 25242  00423E  CFDD F01D          	movff	postdec2,??_USBCtrlEPService+1
 25243  004242  C01C  FFD9         	movff	??_USBCtrlEPService,fsr2l
 25244  004246  C01D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 25245  00424A  501E               	movf	USBCtrlEPService@setup_cnt,w,c
 25246  00424C  0D01               	mullw	1
 25247  00424E  0E30               	movlw	48
 25248  004250  24F3               	addwf	prodl,w,c
 25249  004252  6EE1               	movwf	fsr1l,c
 25250  004254  0E04               	movlw	4
 25251  004256  20F4               	addwfc	prodh,w,c
 25252  004258  6EE2               	movwf	fsr1h,c
 25253  00425A  CFDF FFE7          	movff	indf2,indf1
 25254                           
 25255                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 25256  00425E  EE20 F002          	lfsr	2,2
 25257  004262  503E               	movf	_pBDTEntryEP0OutCurrent,w,c
 25258  004264  26D9               	addwf	fsr2l,f,c
 25259  004266  503F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25260  004268  22DA               	addwfc	fsr2h,f,c
 25261  00426A  2ADE               	incf	postinc2,f,c
 25262  00426C  0E00               	movlw	0
 25263  00426E  22DD               	addwfc	postdec2,f,c
 25264  004270  2A1E               	incf	USBCtrlEPService@setup_cnt,f,c
 25265  004272  D7D9               	goto	i2l10115
 25266  004274                     i2l10127:
 25267                           
 25268                           ;usb_device.c: 2036: }
 25269                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25270  004274  EE20 F002          	lfsr	2,2
 25271  004278  503E               	movf	_pBDTEntryEP0OutCurrent,w,c
 25272  00427A  26D9               	addwf	fsr2l,f,c
 25273  00427C  503F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25274  00427E  22DA               	addwfc	fsr2h,f,c
 25275  004280  0E30               	movlw	48
 25276  004282  6EDE               	movwf	postinc2,c
 25277  004284  0E04               	movlw	4
 25278  004286  6EDD               	movwf	postdec2,c
 25279                           
 25280                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 25281  004288  ECA9  F026         	call	_USBCtrlTrfSetupHandler	;wreg free
 25282                           
 25283                           ;usb_device.c: 2041: }
 25284  00428C  0012               	return	
 25285  00428E                     i2l10131:
 25286                           
 25287                           ;usb_device.c: 2042: else
 25288                           ;usb_device.c: 2043: {
 25289                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 25290  00428E  EC1D  F02A         	call	_USBCtrlTrfOutHandler	;wreg free
 25291                           
 25292                           ;usb_device.c: 2046: }
 25293                           ;usb_device.c: 2047: }
 25294  004292  0012               	return	
 25295  004294                     i2l10133:
 25296                           
 25297                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 25298  004294  5059               	movf	_USTATcopy,w,c	;volatile
 25299  004296  0BFD               	andlw	253
 25300  004298  0A04               	xorlw	4
 25301  00429A  A4D8               	btfss	status,2,c
 25302  00429C  0012               	return	
 25303                           
 25304                           ;usb_device.c: 2049: {
 25305                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 25306  00429E  EC74  F01D         	call	_USBCtrlTrfInHandler	;wreg free
 25307  0042A2  0012               	return	
 25308  0042A4  0012               	return		;funcret
 25309  0042A6                     __end_of_USBCtrlEPService:
 25310                           	opt stack 0
 25311                           pclatu	equ	0xFFB
 25312                           pclath	equ	0xFFA
 25313                           tblptru	equ	0xFF8
 25314                           tblptrh	equ	0xFF7
 25315                           tblptrl	equ	0xFF6
 25316                           tablat	equ	0xFF5
 25317                           prodh	equ	0xFF4
 25318                           prodl	equ	0xFF3
 25319                           intcon	equ	0xFF2
 25320                           intcon3	equ	0xFF0
 25321                           indf0	equ	0xFEF
 25322                           postinc0	equ	0xFEE
 25323                           fsr0h	equ	0xFEA
 25324                           fsr0l	equ	0xFE9
 25325                           wreg	equ	0xFE8
 25326                           indf1	equ	0xFE7
 25327                           postdec1	equ	0xFE5
 25328                           fsr1h	equ	0xFE2
 25329                           fsr1l	equ	0xFE1
 25330                           indf2	equ	0xFDF
 25331                           postinc2	equ	0xFDE
 25332                           postdec2	equ	0xFDD
 25333                           plusw2	equ	0xFDB
 25334                           fsr2h	equ	0xFDA
 25335                           fsr2l	equ	0xFD9
 25336                           status	equ	0xFD8
 25337                           
 25338 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25339 ;; Defined at:
 25340 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 25341 ;; Parameters:    Size  Location     Type
 25342 ;;		None
 25343 ;; Auto vars:     Size  Location     Type
 25344 ;;		None
 25345 ;; Return value:  Size  Location     Type
 25346 ;;		None               void
 25347 ;; Registers used:
 25348 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25349 ;; Tracked objects:
 25350 ;;		On entry : 0/0
 25351 ;;		On exit  : 0/0
 25352 ;;		Unchanged: 0/0
 25353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25354 ;;      Params:         0       0       0       0       0       0       0       0       0
 25355 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25356 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25357 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25358 ;;Total ram usage:        0 bytes
 25359 ;; Hardware stack levels used:    1
 25360 ;; Hardware stack levels required when called:    7
 25361 ;; This function calls:
 25362 ;;		_USBCheckStdRequest
 25363 ;;		_USBCtrlEPServiceComplete
 25364 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25365 ;; This function is called by:
 25366 ;;		_USBCtrlEPService
 25367 ;; This function uses a non-reentrant model
 25368 ;;
 25369                           
 25370                           	psect	text110
 25371  004D52                     __ptext110:
 25372                           	opt stack 0
 25373  004D52                     _USBCtrlTrfSetupHandler:
 25374                           	opt stack 11
 25375                           
 25376                           ;usb_device.c: 2102: shortPacketStatus = 0;
 25377                           
 25378                           ;incstack = 0
 25379  004D52  0E00               	movlw	0
 25380  004D54  6E51               	movwf	_shortPacketStatus,c	;volatile
 25381                           
 25382                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 25383  004D56  0E00               	movlw	0
 25384  004D58  6E48               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25385                           
 25386                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 25387  004D5A  0E00               	movlw	0
 25388  004D5C  0100               	movlb	0	; () banked
 25389  004D5E  6F87               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 25390                           
 25391                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 25392  004D60  0E00               	movlw	0
 25393  004D62  0100               	movlb	0	; () banked
 25394  004D64  6F88               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 25395                           
 25396                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 25397  004D66  0E00               	movlw	0
 25398  004D68  0100               	movlb	0	; () banked
 25399  004D6A  6F84               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 25400                           
 25401                           ;usb_device.c: 2107: controlTransferState = 0;
 25402  004D6C  0E00               	movlw	0
 25403  004D6E  6E4B               	movwf	_controlTransferState,c	;volatile
 25404                           
 25405                           ; BSR set to: 0
 25406                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25407  004D70  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 25408  004D74  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25409  004D78  0E7F               	movlw	127
 25410  004D7A  16DF               	andwf	indf2,f,c
 25411                           
 25412                           ; BSR set to: 0
 25413                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25414  004D7C  0E04               	movlw	4
 25415  004D7E  1A36               	xorwf	_pBDTEntryIn,f,c
 25416                           
 25417                           ; BSR set to: 0
 25418                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25419  004D80  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 25420  004D84  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25421  004D88  0E7F               	movlw	127
 25422  004D8A  16DF               	andwf	indf2,f,c
 25423                           
 25424                           ; BSR set to: 0
 25425                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25426  004D8C  0E04               	movlw	4
 25427  004D8E  1A36               	xorwf	_pBDTEntryIn,f,c
 25428                           
 25429                           ; BSR set to: 0
 25430                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25431  004D90  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25432  004D94  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25433  004D98  0E7F               	movlw	127
 25434  004D9A  16DF               	andwf	indf2,f,c
 25435                           
 25436                           ; BSR set to: 0
 25437                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 25438  004D9C  0E00               	movlw	0
 25439  004D9E  6E55               	movwf	_inPipes+3,c	;volatile
 25440                           
 25441                           ; BSR set to: 0
 25442                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 25443  004DA0  0E00               	movlw	0
 25444  004DA2  6E57               	movwf	_inPipes+5,c	;volatile
 25445  004DA4  0E00               	movlw	0
 25446  004DA6  6E56               	movwf	_inPipes+4,c	;volatile
 25447                           
 25448                           ; BSR set to: 0
 25449                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 25450  004DA8  0E00               	movlw	0
 25451  004DAA  6E31               	movwf	_outPipes+3,c	;volatile
 25452                           
 25453                           ; BSR set to: 0
 25454                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 25455  004DAC  0E00               	movlw	0
 25456  004DAE  6E33               	movwf	_outPipes+5,c	;volatile
 25457  004DB0  0E00               	movlw	0
 25458  004DB2  6E32               	movwf	_outPipes+4,c	;volatile
 25459                           
 25460                           ; BSR set to: 0
 25461                           ;usb_device.c: 2131: USBCheckStdRequest();
 25462  004DB4  ECE7  F01D         	call	_USBCheckStdRequest	;wreg free
 25463                           
 25464                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25465  004DB8  0E00               	movlw	0
 25466  004DBA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25467  004DBC  0E03               	movlw	3
 25468  004DBE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25469  004DC0  0E00               	movlw	0
 25470  004DC2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25471  004DC4  0E00               	movlw	0
 25472  004DC6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25473  004DC8  0E00               	movlw	0
 25474  004DCA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25475  004DCC  0E00               	movlw	0
 25476  004DCE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25477  004DD0  EC7E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25478                           
 25479                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 25480  004DD4  EC1E  F019         	call	_USBCtrlEPServiceComplete	;wreg free
 25481  004DD8  0012               	return		;funcret
 25482  004DDA                     __end_of_USBCtrlTrfSetupHandler:
 25483                           	opt stack 0
 25484                           pclatu	equ	0xFFB
 25485                           pclath	equ	0xFFA
 25486                           tblptru	equ	0xFF8
 25487                           tblptrh	equ	0xFF7
 25488                           tblptrl	equ	0xFF6
 25489                           tablat	equ	0xFF5
 25490                           prodh	equ	0xFF4
 25491                           prodl	equ	0xFF3
 25492                           intcon	equ	0xFF2
 25493                           intcon3	equ	0xFF0
 25494                           indf0	equ	0xFEF
 25495                           postinc0	equ	0xFEE
 25496                           fsr0h	equ	0xFEA
 25497                           fsr0l	equ	0xFE9
 25498                           wreg	equ	0xFE8
 25499                           indf1	equ	0xFE7
 25500                           postdec1	equ	0xFE5
 25501                           fsr1h	equ	0xFE2
 25502                           fsr1l	equ	0xFE1
 25503                           indf2	equ	0xFDF
 25504                           postinc2	equ	0xFDE
 25505                           postdec2	equ	0xFDD
 25506                           plusw2	equ	0xFDB
 25507                           fsr2h	equ	0xFDA
 25508                           fsr2l	equ	0xFD9
 25509                           status	equ	0xFD8
 25510                           
 25511 ;; *************** function _USBCtrlEPServiceComplete *****************
 25512 ;; Defined at:
 25513 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 25514 ;; Parameters:    Size  Location     Type
 25515 ;;		None
 25516 ;; Auto vars:     Size  Location     Type
 25517 ;;		None
 25518 ;; Return value:  Size  Location     Type
 25519 ;;		None               void
 25520 ;; Registers used:
 25521 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25522 ;; Tracked objects:
 25523 ;;		On entry : 0/0
 25524 ;;		On exit  : 0/0
 25525 ;;		Unchanged: 0/0
 25526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25527 ;;      Params:         0       0       0       0       0       0       0       0       0
 25528 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25529 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25530 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25531 ;;Total ram usage:        0 bytes
 25532 ;; Hardware stack levels used:    1
 25533 ;; Hardware stack levels required when called:    2
 25534 ;; This function calls:
 25535 ;;		_USBCtrlEPAllowDataStage
 25536 ;;		_USBCtrlEPAllowStatusStage
 25537 ;; This function is called by:
 25538 ;;		_USBCtrlTrfSetupHandler
 25539 ;; This function uses a non-reentrant model
 25540 ;;
 25541                           
 25542                           	psect	text111
 25543  00323C                     __ptext111:
 25544                           	opt stack 0
 25545  00323C                     _USBCtrlEPServiceComplete:
 25546                           	opt stack 15
 25547                           
 25548                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 25549                           
 25550                           ;incstack = 0
 25551  00323C  9860               	bcf	3936,4,c	;volatile
 25552                           
 25553                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 25554  00323E  BE55               	btfsc	_inPipes+3,7,c	;volatile
 25555  003240  D03D               	goto	i2l1801
 25556                           
 25557                           ;usb_device.c: 1295: {
 25558                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 25559  003242  AE31               	btfss	_outPipes+3,7,c	;volatile
 25560  003244  D010               	goto	i2l7949
 25561                           
 25562                           ;usb_device.c: 1297: {
 25563                           ;usb_device.c: 1298: controlTransferState = 2;
 25564  003246  0E02               	movlw	2
 25565  003248  6E4B               	movwf	_controlTransferState,c	;volatile
 25566                           
 25567                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 25568  00324A  0100               	movlb	0	; () banked
 25569  00324C  5188               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 25570  00324E  A4D8               	btfss	status,2,c
 25571  003250  D003               	goto	i2l7945
 25572                           
 25573                           ; BSR set to: 0
 25574                           ;usb_device.c: 1310: {
 25575                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 25576  003252  EC36  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
 25577  003256  D000               	goto	i2l7945
 25578  003258                     i2l7945:
 25579                           
 25580                           ;usb_device.c: 1312: }
 25581                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 25582  003258  0E00               	movlw	0
 25583  00325A  0100               	movlb	0	; () banked
 25584  00325C  6F8B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25585                           
 25586                           ; BSR set to: 0
 25587                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 25588  00325E  0E00               	movlw	0
 25589  003260  0100               	movlb	0	; () banked
 25590  003262  6F8A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25591                           
 25592                           ;usb_device.c: 1318: }
 25593  003264  0012               	return	
 25594  003266                     i2l7949:
 25595                           
 25596                           ;usb_device.c: 1319: else
 25597                           ;usb_device.c: 1320: {
 25598                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 25599  003266  EE20 F001          	lfsr	2,1
 25600  00326A  5040               	movf	_pBDTEntryEP0OutNext,w,c
 25601  00326C  26D9               	addwf	fsr2l,f,c
 25602  00326E  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 25603  003270  22DA               	addwfc	fsr2h,f,c
 25604  003272  0E08               	movlw	8
 25605  003274  6EDF               	movwf	indf2,c
 25606                           
 25607                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25608  003276  EE20 F002          	lfsr	2,2
 25609  00327A  5040               	movf	_pBDTEntryEP0OutNext,w,c
 25610  00327C  26D9               	addwf	fsr2l,f,c
 25611  00327E  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 25612  003280  22DA               	addwfc	fsr2h,f,c
 25613  003282  0E30               	movlw	48
 25614  003284  6EDE               	movwf	postinc2,c
 25615  003286  0E04               	movlw	4
 25616  003288  6EDD               	movwf	postdec2,c
 25617                           
 25618                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25619  00328A  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25620  00328E  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25621  003292  0E0C               	movlw	12
 25622  003294  6EDF               	movwf	indf2,c
 25623                           
 25624                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25625  003296  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25626  00329A  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25627  00329E  0E00               	movlw	0
 25628  0032A0  8EDB               	bsf	plusw2,7,c
 25629                           
 25630                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 25631  0032A2  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 25632  0032A6  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25633  0032AA  0E04               	movlw	4
 25634  0032AC  6EDF               	movwf	indf2,c
 25635                           
 25636                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25637  0032AE  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 25638  0032B2  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25639  0032B6  0E00               	movlw	0
 25640  0032B8  8EDB               	bsf	plusw2,7,c
 25641                           
 25642                           ;usb_device.c: 1331: }
 25643                           ;usb_device.c: 1332: }
 25644  0032BA  0012               	return	
 25645  0032BC                     i2l1801:
 25646                           
 25647                           ;usb_device.c: 1333: else
 25648                           ;usb_device.c: 1334: {
 25649                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 25650  0032BC  0104               	movlb	4	; () banked
 25651  0032BE  AF30               	btfss	48,7,b	;volatile
 25652  0032C0  D015               	goto	i2l7969
 25653                           
 25654                           ; BSR set to: 4
 25655                           ;usb_device.c: 1336: {
 25656                           ;usb_device.c: 1337: controlTransferState = 1;
 25657  0032C2  0E01               	movlw	1
 25658  0032C4  6E4B               	movwf	_controlTransferState,c	;volatile
 25659                           
 25660                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 25661  0032C6  0100               	movlb	0	; () banked
 25662  0032C8  5187               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 25663  0032CA  A4D8               	btfss	status,2,c
 25664  0032CC  D003               	goto	i2l7961
 25665                           
 25666                           ; BSR set to: 0
 25667                           ;usb_device.c: 1352: {
 25668                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 25669  0032CE  EC36  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
 25670  0032D2  D000               	goto	i2l7961
 25671  0032D4                     i2l7961:
 25672                           
 25673                           ;usb_device.c: 1354: }
 25674                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 25675  0032D4  0E00               	movlw	0
 25676  0032D6  0100               	movlb	0	; () banked
 25677  0032D8  6F8B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25678                           
 25679                           ; BSR set to: 0
 25680                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 25681  0032DA  0E00               	movlw	0
 25682  0032DC  0100               	movlb	0	; () banked
 25683  0032DE  6F8A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25684                           
 25685                           ; BSR set to: 0
 25686                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 25687  0032E0  5048               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25688  0032E2  A4D8               	btfss	status,2,c
 25689  0032E4  0012               	return	
 25690                           
 25691                           ; BSR set to: 0
 25692                           ;usb_device.c: 1379: {
 25693                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 25694  0032E6  EC53  F021         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25695                           
 25696                           ;usb_device.c: 1381: }
 25697                           ;usb_device.c: 1382: }
 25698  0032EA  0012               	return	
 25699  0032EC                     i2l7969:
 25700                           
 25701                           ;usb_device.c: 1383: else
 25702                           ;usb_device.c: 1384: {
 25703                           ;usb_device.c: 1395: controlTransferState = 2;
 25704  0032EC  0E02               	movlw	2
 25705  0032EE  6E4B               	movwf	_controlTransferState,c	;volatile
 25706                           
 25707                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 25708  0032F0  EE20 F001          	lfsr	2,1
 25709  0032F4  5040               	movf	_pBDTEntryEP0OutNext,w,c
 25710  0032F6  26D9               	addwf	fsr2l,f,c
 25711  0032F8  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 25712  0032FA  22DA               	addwfc	fsr2h,f,c
 25713  0032FC  0E08               	movlw	8
 25714  0032FE  6EDF               	movwf	indf2,c
 25715                           
 25716                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25717  003300  EE20 F002          	lfsr	2,2
 25718  003304  5040               	movf	_pBDTEntryEP0OutNext,w,c
 25719  003306  26D9               	addwf	fsr2l,f,c
 25720  003308  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 25721  00330A  22DA               	addwfc	fsr2h,f,c
 25722  00330C  0E30               	movlw	48
 25723  00330E  6EDE               	movwf	postinc2,c
 25724  003310  0E04               	movlw	4
 25725  003312  6EDD               	movwf	postdec2,c
 25726                           
 25727                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25728  003314  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25729  003318  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25730  00331C  0E04               	movlw	4
 25731  00331E  6EDF               	movwf	indf2,c
 25732                           
 25733                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25734  003320  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25735  003324  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25736  003328  0E00               	movlw	0
 25737  00332A  8EDB               	bsf	plusw2,7,c
 25738                           
 25739                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 25740  00332C  0E00               	movlw	0
 25741  00332E  0100               	movlb	0	; () banked
 25742  003330  6F8B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25743                           
 25744                           ; BSR set to: 0
 25745                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 25746  003332  0E00               	movlw	0
 25747  003334  0100               	movlb	0	; () banked
 25748  003336  6F8A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25749                           
 25750                           ; BSR set to: 0
 25751                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 25752  003338  5048               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25753  00333A  A4D8               	btfss	status,2,c
 25754  00333C  0012               	return	
 25755                           
 25756                           ; BSR set to: 0
 25757                           ;usb_device.c: 1407: {
 25758                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 25759  00333E  EC53  F021         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25760  003342  0012               	return	
 25761  003344  0012               	return		;funcret
 25762  003346                     __end_of_USBCtrlEPServiceComplete:
 25763                           	opt stack 0
 25764                           pclatu	equ	0xFFB
 25765                           pclath	equ	0xFFA
 25766                           tblptru	equ	0xFF8
 25767                           tblptrh	equ	0xFF7
 25768                           tblptrl	equ	0xFF6
 25769                           tablat	equ	0xFF5
 25770                           prodh	equ	0xFF4
 25771                           prodl	equ	0xFF3
 25772                           intcon	equ	0xFF2
 25773                           intcon3	equ	0xFF0
 25774                           indf0	equ	0xFEF
 25775                           postinc0	equ	0xFEE
 25776                           fsr0h	equ	0xFEA
 25777                           fsr0l	equ	0xFE9
 25778                           wreg	equ	0xFE8
 25779                           indf1	equ	0xFE7
 25780                           postdec1	equ	0xFE5
 25781                           fsr1h	equ	0xFE2
 25782                           fsr1l	equ	0xFE1
 25783                           indf2	equ	0xFDF
 25784                           postinc2	equ	0xFDE
 25785                           postdec2	equ	0xFDD
 25786                           plusw2	equ	0xFDB
 25787                           fsr2h	equ	0xFDA
 25788                           fsr2l	equ	0xFD9
 25789                           status	equ	0xFD8
 25790                           
 25791 ;; *************** function _USBCtrlEPAllowDataStage *****************
 25792 ;; Defined at:
 25793 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 25794 ;; Parameters:    Size  Location     Type
 25795 ;;		None
 25796 ;; Auto vars:     Size  Location     Type
 25797 ;;		None
 25798 ;; Return value:  Size  Location     Type
 25799 ;;		None               void
 25800 ;; Registers used:
 25801 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25802 ;; Tracked objects:
 25803 ;;		On entry : 0/0
 25804 ;;		On exit  : 0/0
 25805 ;;		Unchanged: 0/0
 25806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25807 ;;      Params:         0       0       0       0       0       0       0       0       0
 25808 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25809 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25810 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25811 ;;Total ram usage:        0 bytes
 25812 ;; Hardware stack levels used:    1
 25813 ;; Hardware stack levels required when called:    1
 25814 ;; This function calls:
 25815 ;;		_USBCtrlTrfTxService
 25816 ;; This function is called by:
 25817 ;;		_USBCtrlEPServiceComplete
 25818 ;; This function uses a non-reentrant model
 25819 ;;
 25820                           
 25821                           	psect	text112
 25822  004A6C                     __ptext112:
 25823                           	opt stack 0
 25824  004A6C                     _USBCtrlEPAllowDataStage:
 25825                           	opt stack 15
 25826                           
 25827                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 25828                           
 25829                           ;incstack = 0
 25830  004A6C  0E00               	movlw	0
 25831  004A6E  0100               	movlb	0	; () banked
 25832  004A70  6F87               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 25833                           
 25834                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 25835  004A72  0E00               	movlw	0
 25836  004A74  0100               	movlb	0	; () banked
 25837  004A76  6F88               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 25838                           
 25839                           ; BSR set to: 0
 25840                           ;usb_device.c: 1178: if(controlTransferState == 2)
 25841  004A78  0E02               	movlw	2
 25842  004A7A  184B               	xorwf	_controlTransferState,w,c	;volatile
 25843  004A7C  A4D8               	btfss	status,2,c
 25844  004A7E  D01F               	goto	i2l7559
 25845                           
 25846                           ; BSR set to: 0
 25847                           ;usb_device.c: 1179: {
 25848                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 25849  004A80  EE20 F001          	lfsr	2,1
 25850  004A84  5040               	movf	_pBDTEntryEP0OutNext,w,c
 25851  004A86  26D9               	addwf	fsr2l,f,c
 25852  004A88  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 25853  004A8A  22DA               	addwfc	fsr2h,f,c
 25854  004A8C  0E08               	movlw	8
 25855  004A8E  6EDF               	movwf	indf2,c
 25856                           
 25857                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 25858  004A90  EE20 F002          	lfsr	2,2
 25859  004A94  5040               	movf	_pBDTEntryEP0OutNext,w,c
 25860  004A96  26D9               	addwf	fsr2l,f,c
 25861  004A98  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 25862  004A9A  22DA               	addwfc	fsr2h,f,c
 25863  004A9C  0E38               	movlw	56
 25864  004A9E  6EDE               	movwf	postinc2,c
 25865  004AA0  0E04               	movlw	4
 25866  004AA2  6EDD               	movwf	postdec2,c
 25867                           
 25868                           ; BSR set to: 0
 25869                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 25870  004AA4  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25871  004AA8  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25872  004AAC  0E48               	movlw	72
 25873  004AAE  6EDF               	movwf	indf2,c
 25874                           
 25875                           ; BSR set to: 0
 25876                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25877  004AB0  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25878  004AB4  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25879  004AB8  0E00               	movlw	0
 25880  004ABA  8EDB               	bsf	plusw2,7,c
 25881                           
 25882                           ;usb_device.c: 1185: }
 25883  004ABC  0012               	return	
 25884  004ABE                     i2l7559:
 25885                           
 25886                           ; BSR set to: 0
 25887                           ;usb_device.c: 1186: else
 25888                           ;usb_device.c: 1187: {
 25889                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 25890  004ABE  5056               	movf	_inPipes+4,w,c	;volatile
 25891  004AC0  0104               	movlb	4	; () banked
 25892  004AC2  5D36               	subwf	54,w,b	;volatile
 25893  004AC4  5057               	movf	_inPipes+5,w,c	;volatile
 25894  004AC6  0104               	movlb	4	; () banked
 25895  004AC8  5937               	subwfb	55,w,b	;volatile
 25896  004ACA  B0D8               	btfsc	status,0,c
 25897  004ACC  D005               	goto	i2l7563
 25898                           
 25899                           ; BSR set to: 4
 25900                           ;usb_device.c: 1191: {
 25901                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 25902  004ACE  C436 F056          	movff	1078,_inPipes+4	;volatile
 25903  004AD2  C437 F057          	movff	1079,_inPipes+5	;volatile
 25904  004AD6  D000               	goto	i2l7563
 25905  004AD8                     i2l7563:
 25906                           
 25907                           ; BSR set to: 4
 25908                           ;usb_device.c: 1193: }
 25909                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 25910  004AD8  ECA8  F01F         	call	_USBCtrlTrfTxService	;wreg free
 25911                           
 25912                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 25913  004ADC  EE20 F002          	lfsr	2,2
 25914  004AE0  5036               	movf	_pBDTEntryIn,w,c
 25915  004AE2  26D9               	addwf	fsr2l,f,c
 25916  004AE4  5037               	movf	_pBDTEntryIn+1,w,c
 25917  004AE6  22DA               	addwfc	fsr2h,f,c
 25918  004AE8  0E38               	movlw	56
 25919  004AEA  6EDE               	movwf	postinc2,c
 25920  004AEC  0E04               	movlw	4
 25921  004AEE  6EDD               	movwf	postdec2,c
 25922                           
 25923                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25924  004AF0  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 25925  004AF4  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25926  004AF8  0E48               	movlw	72
 25927  004AFA  6EDF               	movwf	indf2,c
 25928                           
 25929                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25930  004AFC  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 25931  004B00  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25932  004B04  0E00               	movlw	0
 25933  004B06  8EDB               	bsf	plusw2,7,c
 25934  004B08  0012               	return	
 25935  004B0A  0012               	return		;funcret
 25936  004B0C                     __end_of_USBCtrlEPAllowDataStage:
 25937                           	opt stack 0
 25938                           pclatu	equ	0xFFB
 25939                           pclath	equ	0xFFA
 25940                           tblptru	equ	0xFF8
 25941                           tblptrh	equ	0xFF7
 25942                           tblptrl	equ	0xFF6
 25943                           tablat	equ	0xFF5
 25944                           prodh	equ	0xFF4
 25945                           prodl	equ	0xFF3
 25946                           intcon	equ	0xFF2
 25947                           intcon3	equ	0xFF0
 25948                           indf0	equ	0xFEF
 25949                           postinc0	equ	0xFEE
 25950                           fsr0h	equ	0xFEA
 25951                           fsr0l	equ	0xFE9
 25952                           wreg	equ	0xFE8
 25953                           indf1	equ	0xFE7
 25954                           postdec1	equ	0xFE5
 25955                           fsr1h	equ	0xFE2
 25956                           fsr1l	equ	0xFE1
 25957                           indf2	equ	0xFDF
 25958                           postinc2	equ	0xFDE
 25959                           postdec2	equ	0xFDD
 25960                           plusw2	equ	0xFDB
 25961                           fsr2h	equ	0xFDA
 25962                           fsr2l	equ	0xFD9
 25963                           status	equ	0xFD8
 25964                           
 25965 ;; *************** function _USBCheckStdRequest *****************
 25966 ;; Defined at:
 25967 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 25968 ;; Parameters:    Size  Location     Type
 25969 ;;		None
 25970 ;; Auto vars:     Size  Location     Type
 25971 ;;		None
 25972 ;; Return value:  Size  Location     Type
 25973 ;;		None               void
 25974 ;; Registers used:
 25975 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25976 ;; Tracked objects:
 25977 ;;		On entry : 0/0
 25978 ;;		On exit  : 0/0
 25979 ;;		Unchanged: 0/0
 25980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25981 ;;      Params:         0       0       0       0       0       0       0       0       0
 25982 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25983 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25984 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25985 ;;Total ram usage:        0 bytes
 25986 ;; Hardware stack levels used:    1
 25987 ;; Hardware stack levels required when called:    6
 25988 ;; This function calls:
 25989 ;;		_USBStdFeatureReqHandler
 25990 ;;		_USBStdGetDscHandler
 25991 ;;		_USBStdGetStatusHandler
 25992 ;;		_USBStdSetCfgHandler
 25993 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25994 ;; This function is called by:
 25995 ;;		_USBCtrlTrfSetupHandler
 25996 ;; This function uses a non-reentrant model
 25997 ;;
 25998                           
 25999                           	psect	text113
 26000  003BCE                     __ptext113:
 26001                           	opt stack 0
 26002  003BCE                     _USBCheckStdRequest:
 26003                           	opt stack 11
 26004                           
 26005                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 26006                           
 26007                           ;incstack = 0
 26008  003BCE  0104               	movlb	4	; () banked
 26009  003BD0  3930               	swapf	48,w,b	;volatile
 26010  003BD2  32E8               	rrcf	wreg,f,c
 26011  003BD4  0B03               	andlw	3
 26012  003BD6  0900               	iorlw	0
 26013  003BD8  A4D8               	btfss	status,2,c
 26014  003BDA  0012               	return	
 26015  003BDC  D047               	goto	i2l8071
 26016                           
 26017                           ; BSR set to: 4
 26018  003BDE  0012               	return	
 26019                           
 26020                           ; BSR set to: 4
 26021                           ;usb_device.c: 2321: switch(SetupPkt.bRequest)
 26022  003BE0  D045               	goto	i2l8071
 26023  003BE2                     i2l1928:
 26024                           
 26025                           ; BSR set to: 4
 26026                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 26027  003BE2  8E55               	bsf	_inPipes+3,7,c	;volatile
 26028                           
 26029                           ; BSR set to: 4
 26030                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 26031  003BE4  0E08               	movlw	8
 26032  003BE6  0100               	movlb	0	; () banked
 26033  003BE8  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 26034                           
 26035                           ;usb_device.c: 2327: break;
 26036  003BEA  0012               	return	
 26037  003BEC                     i2l8041:
 26038                           
 26039                           ;usb_device.c: 2329: USBStdGetDscHandler();
 26040  003BEC  ECFF  F017         	call	_USBStdGetDscHandler	;wreg free
 26041                           
 26042                           ;usb_device.c: 2330: break;
 26043  003BF0  0012               	return	
 26044  003BF2                     i2l8043:
 26045                           
 26046                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 26047  003BF2  EC59  F01E         	call	_USBStdSetCfgHandler	;wreg free
 26048                           
 26049                           ;usb_device.c: 2333: break;
 26050  003BF6  0012               	return	
 26051  003BF8                     i2l8045:
 26052                           
 26053                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 26054  003BF8  0E58               	movlw	low _USBActiveConfiguration
 26055  003BFA  6E52               	movwf	_inPipes,c	;volatile
 26056  003BFC  0E00               	movlw	high _USBActiveConfiguration
 26057  003BFE  6E53               	movwf	_inPipes+1,c	;volatile
 26058                           
 26059                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26060  003C00  8055               	bsf	_inPipes+3,0,c	;volatile
 26061                           
 26062                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 26063  003C02  0E01               	movlw	1
 26064  003C04  6E56               	movwf	_inPipes+4,c	;volatile
 26065                           
 26066                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 26067  003C06  8E55               	bsf	_inPipes+3,7,c	;volatile
 26068                           
 26069                           ;usb_device.c: 2339: break;
 26070  003C08  0012               	return	
 26071  003C0A                     i2l8053:
 26072                           
 26073                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 26074  003C0A  ECD6  F022         	call	_USBStdGetStatusHandler	;wreg free
 26075                           
 26076                           ;usb_device.c: 2342: break;
 26077  003C0E  0012               	return	
 26078                           
 26079                           ;usb_device.c: 2343: case 1:
 26080  003C10  D000               	goto	i2l8055
 26081  003C12                     i2l8055:
 26082                           
 26083                           ;usb_device.c: 2344: case 3:
 26084                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 26085  003C12  ECDE  F00C         	call	_USBStdFeatureReqHandler	;wreg free
 26086                           
 26087                           ;usb_device.c: 2346: break;
 26088  003C16  0012               	return	
 26089  003C18                     i2l8057:
 26090                           
 26091                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 26092  003C18  0104               	movlb	4	; () banked
 26093  003C1A  5134               	movf	52,w,b	;volatile
 26094  003C1C  0D01               	mullw	1
 26095  003C1E  0EAD               	movlw	low _USBAlternateInterface
 26096  003C20  24F3               	addwf	prodl,w,c
 26097  003C22  6E52               	movwf	_inPipes,c	;volatile
 26098  003C24  0E00               	movlw	high _USBAlternateInterface
 26099  003C26  20F4               	addwfc	prodh,w,c
 26100  003C28  6E53               	movwf	_inPipes+1,c	;volatile
 26101                           
 26102                           ; BSR set to: 4
 26103                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26104  003C2A  8055               	bsf	_inPipes+3,0,c	;volatile
 26105                           
 26106                           ; BSR set to: 4
 26107                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 26108  003C2C  0E01               	movlw	1
 26109  003C2E  6E56               	movwf	_inPipes+4,c	;volatile
 26110                           
 26111                           ; BSR set to: 4
 26112                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 26113  003C30  8E55               	bsf	_inPipes+3,7,c	;volatile
 26114                           
 26115                           ;usb_device.c: 2352: break;
 26116  003C32  0012               	return	
 26117  003C34                     i2l1937:
 26118                           
 26119                           ; BSR set to: 4
 26120                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 26121  003C34  8E55               	bsf	_inPipes+3,7,c	;volatile
 26122                           
 26123                           ; BSR set to: 4
 26124                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 26125  003C36  0104               	movlb	4	; () banked
 26126  003C38  5134               	movf	52,w,b	;volatile
 26127  003C3A  0D01               	mullw	1
 26128  003C3C  0EAD               	movlw	low _USBAlternateInterface
 26129  003C3E  24F3               	addwf	prodl,w,c
 26130  003C40  6ED9               	movwf	fsr2l,c
 26131  003C42  0E00               	movlw	high _USBAlternateInterface
 26132  003C44  20F4               	addwfc	prodh,w,c
 26133  003C46  6EDA               	movwf	fsr2h,c
 26134  003C48  C432 FFDF          	movff	1074,indf2	;volatile
 26135                           
 26136                           ;usb_device.c: 2356: break;
 26137  003C4C  0012               	return	
 26138  003C4E                     i2l8067:
 26139                           
 26140                           ; BSR set to: 4
 26141                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 26142  003C4E  0E00               	movlw	0
 26143  003C50  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26144  003C52  0E02               	movlw	2
 26145  003C54  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26146  003C56  0E00               	movlw	0
 26147  003C58  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26148  003C5A  0E00               	movlw	0
 26149  003C5C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26150  003C5E  0E00               	movlw	0
 26151  003C60  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26152  003C62  0E00               	movlw	0
 26153  003C64  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26154  003C66  EC7E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26155                           
 26156                           ;usb_device.c: 2363: }
 26157                           
 26158                           ;usb_device.c: 2362: break;
 26159                           
 26160                           ;usb_device.c: 2361: default:
 26161                           
 26162                           ;usb_device.c: 2360: case 12:
 26163                           
 26164                           ;usb_device.c: 2359: break;
 26165  003C6A  0012               	return	
 26166  003C6C                     i2l8071:
 26167  003C6C  0104               	movlb	4	; () banked
 26168  003C6E  5131               	movf	49,w,b	;volatile
 26169                           
 26170                           ; Switch size 1, requested type "space"
 26171                           ; Number of cases is 11, Range of values is 0 to 12
 26172                           ; switch strategies available:
 26173                           ; Name         Instructions Cycles
 26174                           ; simple_byte           34    18 (average)
 26175                           ;	Chosen strategy is simple_byte
 26176  003C70  0A00               	xorlw	0	; case 0
 26177  003C72  B4D8               	btfsc	status,2,c
 26178  003C74  D7CA               	goto	i2l8053
 26179  003C76  0A01               	xorlw	1	; case 1
 26180  003C78  B4D8               	btfsc	status,2,c
 26181  003C7A  D7CB               	goto	i2l8055
 26182  003C7C  0A02               	xorlw	2	; case 3
 26183  003C7E  B4D8               	btfsc	status,2,c
 26184  003C80  D7C8               	goto	i2l8055
 26185  003C82  0A06               	xorlw	6	; case 5
 26186  003C84  B4D8               	btfsc	status,2,c
 26187  003C86  D7AD               	goto	i2l1928
 26188  003C88  0A03               	xorlw	3	; case 6
 26189  003C8A  B4D8               	btfsc	status,2,c
 26190  003C8C  D7AF               	goto	i2l8041
 26191  003C8E  0A01               	xorlw	1	; case 7
 26192  003C90  B4D8               	btfsc	status,2,c
 26193  003C92  D7DD               	goto	i2l8067
 26194  003C94  0A0F               	xorlw	15	; case 8
 26195  003C96  B4D8               	btfsc	status,2,c
 26196  003C98  D7AF               	goto	i2l8045
 26197  003C9A  0A01               	xorlw	1	; case 9
 26198  003C9C  B4D8               	btfsc	status,2,c
 26199  003C9E  D7A9               	goto	i2l8043
 26200  003CA0  0A03               	xorlw	3	; case 10
 26201  003CA2  B4D8               	btfsc	status,2,c
 26202  003CA4  D7B9               	goto	i2l8057
 26203  003CA6  0A01               	xorlw	1	; case 11
 26204  003CA8  B4D8               	btfsc	status,2,c
 26205  003CAA  D7C4               	goto	i2l1937
 26206  003CAC  0A07               	xorlw	7	; case 12
 26207  003CAE  0012               	return	
 26208                           
 26209                           ; BSR set to: 4
 26210  003CB0  0012               	return		;funcret
 26211  003CB2                     __end_of_USBCheckStdRequest:
 26212                           	opt stack 0
 26213                           pclatu	equ	0xFFB
 26214                           pclath	equ	0xFFA
 26215                           tblptru	equ	0xFF8
 26216                           tblptrh	equ	0xFF7
 26217                           tblptrl	equ	0xFF6
 26218                           tablat	equ	0xFF5
 26219                           prodh	equ	0xFF4
 26220                           prodl	equ	0xFF3
 26221                           intcon	equ	0xFF2
 26222                           intcon3	equ	0xFF0
 26223                           indf0	equ	0xFEF
 26224                           postinc0	equ	0xFEE
 26225                           fsr0h	equ	0xFEA
 26226                           fsr0l	equ	0xFE9
 26227                           wreg	equ	0xFE8
 26228                           indf1	equ	0xFE7
 26229                           postdec1	equ	0xFE5
 26230                           fsr1h	equ	0xFE2
 26231                           fsr1l	equ	0xFE1
 26232                           indf2	equ	0xFDF
 26233                           postinc2	equ	0xFDE
 26234                           postdec2	equ	0xFDD
 26235                           plusw2	equ	0xFDB
 26236                           fsr2h	equ	0xFDA
 26237                           fsr2l	equ	0xFD9
 26238                           status	equ	0xFD8
 26239                           
 26240 ;; *************** function _USBStdSetCfgHandler *****************
 26241 ;; Defined at:
 26242 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 26243 ;; Parameters:    Size  Location     Type
 26244 ;;		None
 26245 ;; Auto vars:     Size  Location     Type
 26246 ;;  i               1   21[COMRAM] unsigned char 
 26247 ;; Return value:  Size  Location     Type
 26248 ;;		None               void
 26249 ;; Registers used:
 26250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26251 ;; Tracked objects:
 26252 ;;		On entry : 0/0
 26253 ;;		On exit  : 0/0
 26254 ;;		Unchanged: 0/0
 26255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26256 ;;      Params:         0       0       0       0       0       0       0       0       0
 26257 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26258 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26259 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26260 ;;Total ram usage:        1 bytes
 26261 ;; Hardware stack levels used:    1
 26262 ;; Hardware stack levels required when called:    5
 26263 ;; This function calls:
 26264 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26265 ;;		i2_memset
 26266 ;; This function is called by:
 26267 ;;		_USBCheckStdRequest
 26268 ;; This function uses a non-reentrant model
 26269 ;;
 26270                           
 26271                           	psect	text114
 26272  003CB2                     __ptext114:
 26273                           	opt stack 0
 26274  003CB2                     _USBStdSetCfgHandler:
 26275                           	opt stack 11
 26276                           
 26277                           ;usb_device.c: 1631: uint8_t i;
 26278                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 26279                           
 26280                           ;incstack = 0
 26281  003CB2  8E55               	bsf	_inPipes+3,7,c	;volatile
 26282                           
 26283                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 26284  003CB4  0E6B               	movlw	107
 26285  003CB6  6E01               	movwf	i2memset@p1,c
 26286  003CB8  0E0F               	movlw	15
 26287  003CBA  6E02               	movwf	i2memset@p1+1,c
 26288  003CBC  0E00               	movlw	0
 26289  003CBE  6E04               	movwf	i2memset@c+1,c
 26290  003CC0  0E00               	movlw	0
 26291  003CC2  6E03               	movwf	i2memset@c,c
 26292  003CC4  0E00               	movlw	0
 26293  003CC6  6E06               	movwf	i2memset@n+1,c
 26294  003CC8  0E02               	movlw	2
 26295  003CCA  6E05               	movwf	i2memset@n,c
 26296  003CCC  ECF6  F02D         	call	i2_memset	;wreg free
 26297                           
 26298                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26299  003CD0  0E00               	movlw	0
 26300  003CD2  6E01               	movwf	i2memset@p1,c
 26301  003CD4  0E04               	movlw	4
 26302  003CD6  6E02               	movwf	i2memset@p1+1,c
 26303  003CD8  0E00               	movlw	0
 26304  003CDA  6E04               	movwf	i2memset@c+1,c
 26305  003CDC  0E00               	movlw	0
 26306  003CDE  6E03               	movwf	i2memset@c,c
 26307  003CE0  0E00               	movlw	0
 26308  003CE2  6E06               	movwf	i2memset@n+1,c
 26309  003CE4  0E30               	movlw	48
 26310  003CE6  6E05               	movwf	i2memset@n,c
 26311  003CE8  ECF6  F02D         	call	i2_memset	;wreg free
 26312                           
 26313                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 26314  003CEC  8C60               	bsf	3936,6,c	;volatile
 26315                           
 26316                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 26317  003CEE  0E00               	movlw	0
 26318  003CF0  6E16               	movwf	USBStdSetCfgHandler@i,c
 26319  003CF2                     i2l7579:
 26320  003CF2  0E02               	movlw	2
 26321  003CF4  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 26322  003CF6  D001               	goto	i2l7583
 26323  003CF8  D016               	goto	i2l7589
 26324  003CFA                     i2l7583:
 26325                           
 26326                           ;usb_device.c: 1649: {
 26327                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 26328  003CFA  5016               	movf	USBStdSetCfgHandler@i,w,c
 26329  003CFC  0D01               	mullw	1
 26330  003CFE  0E66               	movlw	low _ep_data_in
 26331  003D00  24F3               	addwf	prodl,w,c
 26332  003D02  6ED9               	movwf	fsr2l,c
 26333  003D04  0E00               	movlw	high _ep_data_in
 26334  003D06  20F4               	addwfc	prodh,w,c
 26335  003D08  6EDA               	movwf	fsr2h,c
 26336  003D0A  0E00               	movlw	0
 26337  003D0C  6EDF               	movwf	indf2,c
 26338                           
 26339                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 26340  003D0E  5016               	movf	USBStdSetCfgHandler@i,w,c
 26341  003D10  0D01               	mullw	1
 26342  003D12  0E69               	movlw	low _ep_data_out
 26343  003D14  24F3               	addwf	prodl,w,c
 26344  003D16  6ED9               	movwf	fsr2l,c
 26345  003D18  0E00               	movlw	high _ep_data_out
 26346  003D1A  20F4               	addwfc	prodh,w,c
 26347  003D1C  6EDA               	movwf	fsr2h,c
 26348  003D1E  0E00               	movlw	0
 26349  003D20  6EDF               	movwf	indf2,c
 26350  003D22  2A16               	incf	USBStdSetCfgHandler@i,f,c
 26351  003D24  D7E6               	goto	i2l7579
 26352  003D26                     i2l7589:
 26353                           
 26354                           ;usb_device.c: 1652: }
 26355                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 26356  003D26  0EAD               	movlw	low _USBAlternateInterface
 26357  003D28  6E01               	movwf	i2memset@p1,c
 26358  003D2A  0E00               	movlw	high _USBAlternateInterface
 26359  003D2C  6E02               	movwf	i2memset@p1+1,c
 26360  003D2E  0E00               	movlw	0
 26361  003D30  6E04               	movwf	i2memset@c+1,c
 26362  003D32  0E00               	movlw	0
 26363  003D34  6E03               	movwf	i2memset@c,c
 26364  003D36  0E00               	movlw	0
 26365  003D38  6E06               	movwf	i2memset@n+1,c
 26366  003D3A  0E02               	movlw	2
 26367  003D3C  6E05               	movwf	i2memset@n,c
 26368  003D3E  ECF6  F02D         	call	i2_memset	;wreg free
 26369                           
 26370                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 26371  003D42  9C60               	bcf	3936,6,c	;volatile
 26372                           
 26373                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26374  003D44  0E08               	movlw	8
 26375  003D46  6E36               	movwf	_pBDTEntryIn,c
 26376  003D48  0E04               	movlw	4
 26377  003D4A  6E37               	movwf	_pBDTEntryIn+1,c
 26378                           
 26379                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26380  003D4C  0E00               	movlw	0
 26381  003D4E  6E3E               	movwf	_pBDTEntryEP0OutCurrent,c
 26382  003D50  0E04               	movlw	4
 26383  003D52  6E3F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26384                           
 26385                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26386  003D54  C03E  F040         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26387  003D58  C03F  F041         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26388                           
 26389                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26390  003D5C  C432 F058          	movff	1074,_USBActiveConfiguration	;volatile
 26391                           
 26392                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 26393  003D60  5058               	movf	_USBActiveConfiguration,w,c	;volatile
 26394  003D62  A4D8               	btfss	status,2,c
 26395  003D64  D004               	goto	i2l7605
 26396                           
 26397                           ;usb_device.c: 1671: {
 26398                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 26399  003D66  0E10               	movlw	16
 26400  003D68  0100               	movlb	0	; () banked
 26401  003D6A  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 26402                           
 26403                           ;usb_device.c: 1674: }
 26404  003D6C  0012               	return	
 26405  003D6E                     i2l7605:
 26406                           
 26407                           ;usb_device.c: 1675: else
 26408                           ;usb_device.c: 1676: {
 26409                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26410  003D6E  0E00               	movlw	0
 26411  003D70  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26412  003D72  0E01               	movlw	1
 26413  003D74  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26414  003D76  0E58               	movlw	low _USBActiveConfiguration
 26415  003D78  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26416  003D7A  0E00               	movlw	high _USBActiveConfiguration
 26417  003D7C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26418  003D7E  0E00               	movlw	0
 26419  003D80  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26420  003D82  0E01               	movlw	1
 26421  003D84  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26422  003D86  EC7E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26423                           
 26424                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 26425  003D8A  0E20               	movlw	32
 26426  003D8C  0100               	movlb	0	; () banked
 26427  003D8E  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 26428  003D90  0012               	return	
 26429                           
 26430                           ; BSR set to: 0
 26431                           
 26432                           ; BSR set to: 0
 26433  003D92  0012               	return		;funcret
 26434  003D94                     __end_of_USBStdSetCfgHandler:
 26435                           	opt stack 0
 26436                           pclatu	equ	0xFFB
 26437                           pclath	equ	0xFFA
 26438                           tblptru	equ	0xFF8
 26439                           tblptrh	equ	0xFF7
 26440                           tblptrl	equ	0xFF6
 26441                           tablat	equ	0xFF5
 26442                           prodh	equ	0xFF4
 26443                           prodl	equ	0xFF3
 26444                           intcon	equ	0xFF2
 26445                           intcon3	equ	0xFF0
 26446                           indf0	equ	0xFEF
 26447                           postinc0	equ	0xFEE
 26448                           fsr0h	equ	0xFEA
 26449                           fsr0l	equ	0xFE9
 26450                           wreg	equ	0xFE8
 26451                           indf1	equ	0xFE7
 26452                           postdec1	equ	0xFE5
 26453                           fsr1h	equ	0xFE2
 26454                           fsr1l	equ	0xFE1
 26455                           indf2	equ	0xFDF
 26456                           postinc2	equ	0xFDE
 26457                           postdec2	equ	0xFDD
 26458                           plusw2	equ	0xFDB
 26459                           fsr2h	equ	0xFDA
 26460                           fsr2l	equ	0xFD9
 26461                           status	equ	0xFD8
 26462                           
 26463 ;; *************** function i2_memset *****************
 26464 ;; Defined at:
 26465 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
 26466 ;; Parameters:    Size  Location     Type
 26467 ;;  p1              2    0[COMRAM] PTR void 
 26468 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26469 ;;  c               2    2[COMRAM] int 
 26470 ;;  n               2    4[COMRAM] unsigned int 
 26471 ;; Auto vars:     Size  Location     Type
 26472 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26473 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26474 ;; Return value:  Size  Location     Type
 26475 ;;                  2    0[COMRAM] PTR void 
 26476 ;; Registers used:
 26477 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26478 ;; Tracked objects:
 26479 ;;		On entry : 0/0
 26480 ;;		On exit  : 0/0
 26481 ;;		Unchanged: 0/0
 26482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26483 ;;      Params:         6       0       0       0       0       0       0       0       0
 26484 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26485 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26486 ;;      Totals:         8       0       0       0       0       0       0       0       0
 26487 ;;Total ram usage:        8 bytes
 26488 ;; Hardware stack levels used:    1
 26489 ;; This function calls:
 26490 ;;		Nothing
 26491 ;; This function is called by:
 26492 ;;		_USBStdSetCfgHandler
 26493 ;;		i2_USBDeviceInit
 26494 ;; This function uses a non-reentrant model
 26495 ;;
 26496                           
 26497                           	psect	text115
 26498  005BEC                     __ptext115:
 26499                           	opt stack 0
 26500  005BEC                     i2_memset:
 26501                           	opt stack 18
 26502                           
 26503                           ; BSR set to: 0
 26504                           ;incstack = 0
 26505  005BEC  C001  F007         	movff	i2memset@p1,i2memset@p
 26506  005BF0  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 26507  005BF4  D009               	goto	i2l7405
 26508  005BF6                     i2l7401:
 26509  005BF6  C007  FFD9         	movff	i2memset@p,fsr2l
 26510  005BFA  C008  FFDA         	movff	i2memset@p+1,fsr2h
 26511  005BFE  C003  FFDF         	movff	i2memset@c,indf2
 26512  005C02  4A07               	infsnz	i2memset@p,f,c
 26513  005C04  2A08               	incf	i2memset@p+1,f,c
 26514  005C06  D000               	goto	i2l7405
 26515  005C08                     i2l7405:
 26516  005C08  0605               	decf	i2memset@n,f,c
 26517  005C0A  A0D8               	btfss	status,0,c
 26518  005C0C  0606               	decf	i2memset@n+1,f,c
 26519  005C0E  2805               	incf	i2memset@n,w,c
 26520  005C10  E1F2               	bnz	i2l7401
 26521  005C12  2806               	incf	i2memset@n+1,w,c
 26522  005C14  A4D8               	btfss	status,2,c
 26523  005C16  D7EF               	goto	i2l7401
 26524                           
 26525                           ;	Return value of i2_memset is never used
 26526  005C18  0012               	return		;funcret
 26527  005C1A                     __end_ofi2_memset:
 26528                           	opt stack 0
 26529                           pclatu	equ	0xFFB
 26530                           pclath	equ	0xFFA
 26531                           tblptru	equ	0xFF8
 26532                           tblptrh	equ	0xFF7
 26533                           tblptrl	equ	0xFF6
 26534                           tablat	equ	0xFF5
 26535                           prodh	equ	0xFF4
 26536                           prodl	equ	0xFF3
 26537                           intcon	equ	0xFF2
 26538                           intcon3	equ	0xFF0
 26539                           indf0	equ	0xFEF
 26540                           postinc0	equ	0xFEE
 26541                           fsr0h	equ	0xFEA
 26542                           fsr0l	equ	0xFE9
 26543                           wreg	equ	0xFE8
 26544                           indf1	equ	0xFE7
 26545                           postdec1	equ	0xFE5
 26546                           fsr1h	equ	0xFE2
 26547                           fsr1l	equ	0xFE1
 26548                           indf2	equ	0xFDF
 26549                           postinc2	equ	0xFDE
 26550                           postdec2	equ	0xFDD
 26551                           plusw2	equ	0xFDB
 26552                           fsr2h	equ	0xFDA
 26553                           fsr2l	equ	0xFD9
 26554                           status	equ	0xFD8
 26555                           
 26556 ;; *************** function _USBStdGetStatusHandler *****************
 26557 ;; Defined at:
 26558 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 26559 ;; Parameters:    Size  Location     Type
 26560 ;;		None
 26561 ;; Auto vars:     Size  Location     Type
 26562 ;;  p               2    1[COMRAM] PTR struct __BDT
 26563 ;;		 -> BDT(48), NULL(0), 
 26564 ;; Return value:  Size  Location     Type
 26565 ;;		None               void
 26566 ;; Registers used:
 26567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26568 ;; Tracked objects:
 26569 ;;		On entry : 0/0
 26570 ;;		On exit  : 0/0
 26571 ;;		Unchanged: 0/0
 26572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26573 ;;      Params:         0       0       0       0       0       0       0       0       0
 26574 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26575 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26576 ;;      Totals:         3       0       0       0       0       0       0       0       0
 26577 ;;Total ram usage:        3 bytes
 26578 ;; Hardware stack levels used:    1
 26579 ;; This function calls:
 26580 ;;		Nothing
 26581 ;; This function is called by:
 26582 ;;		_USBCheckStdRequest
 26583 ;; This function uses a non-reentrant model
 26584 ;;
 26585                           
 26586                           	psect	text116
 26587  0045AC                     __ptext116:
 26588                           	opt stack 0
 26589  0045AC                     _USBStdGetStatusHandler:
 26590                           	opt stack 16
 26591                           
 26592                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 26593                           
 26594                           ;incstack = 0
 26595  0045AC  0E00               	movlw	0
 26596  0045AE  0104               	movlb	4	; () banked
 26597  0045B0  6F38               	movwf	56,b	;volatile
 26598                           
 26599                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 26600  0045B2  0E00               	movlw	0
 26601  0045B4  0104               	movlb	4	; () banked
 26602  0045B6  6F39               	movwf	57,b	;volatile
 26603                           
 26604                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 26605  0045B8  D03E               	goto	i2l7661
 26606  0045BA                     i2l1864:
 26607                           
 26608                           ; BSR set to: 4
 26609                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 26610  0045BA  8E55               	bsf	_inPipes+3,7,c	;volatile
 26611                           
 26612                           ;usb_device.c: 1786: if(0 == 1)
 26613  0045BC  D003               	goto	i2l7645
 26614                           
 26615                           ; BSR set to: 4
 26616                           ;usb_device.c: 1787: {
 26617                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 26618  0045BE  0104               	movlb	4	; () banked
 26619  0045C0  8138               	bsf	56,0,b	;volatile
 26620  0045C2  D000               	goto	i2l7645
 26621  0045C4                     i2l7645:
 26622                           
 26623                           ; BSR set to: 4
 26624                           ;usb_device.c: 1789: }
 26625                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 26626  0045C4  0100               	movlb	0	; () banked
 26627  0045C6  0585               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 26628  0045C8  A4D8               	btfss	status,2,c
 26629  0045CA  D041               	goto	i2l1867
 26630                           
 26631                           ; BSR set to: 0
 26632                           ;usb_device.c: 1792: {
 26633                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 26634  0045CC  0104               	movlb	4	; () banked
 26635  0045CE  8338               	bsf	56,1,b	;volatile
 26636                           
 26637                           ; BSR set to: 4
 26638                           ;usb_device.c: 1794: }
 26639                           ;usb_device.c: 1795: break;
 26640  0045D0  D03E               	goto	i2l1867
 26641  0045D2                     i2l1868:
 26642                           
 26643                           ; BSR set to: 4
 26644                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 26645  0045D2  8E55               	bsf	_inPipes+3,7,c	;volatile
 26646                           
 26647                           ;usb_device.c: 1798: break;
 26648  0045D4  D03C               	goto	i2l1867
 26649  0045D6                     i2l1869:
 26650                           
 26651                           ; BSR set to: 4
 26652                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 26653  0045D6  8E55               	bsf	_inPipes+3,7,c	;volatile
 26654                           
 26655                           ;usb_device.c: 1804: {
 26656                           ;usb_device.c: 1805: BDT_ENTRY *p;
 26657                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 26658  0045D8  0104               	movlb	4	; () banked
 26659  0045DA  BF34               	btfsc	52,7,b	;volatile
 26660  0045DC  D00B               	goto	i2l7651
 26661                           
 26662                           ; BSR set to: 4
 26663                           ;usb_device.c: 1808: {
 26664                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26665  0045DE  0104               	movlb	4	; () banked
 26666  0045E0  5134               	movf	52,w,b	;volatile
 26667  0045E2  0B0F               	andlw	15
 26668  0045E4  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26669  0045E6  5001               	movf	??_USBStdGetStatusHandler,w,c
 26670  0045E8  0D02               	mullw	2
 26671  0045EA  0E60               	movlw	low _pBDTEntryOut
 26672  0045EC  24F3               	addwf	prodl,w,c
 26673  0045EE  6ED9               	movwf	fsr2l,c
 26674  0045F0  0E00               	movlw	high _pBDTEntryOut
 26675  0045F2  D00A               	goto	L16
 26676  0045F4                     i2l7651:
 26677                           
 26678                           ; BSR set to: 4
 26679                           ;usb_device.c: 1811: else
 26680                           ;usb_device.c: 1812: {
 26681                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26682  0045F4  0104               	movlb	4	; () banked
 26683  0045F6  5134               	movf	52,w,b	;volatile
 26684  0045F8  0B0F               	andlw	15
 26685  0045FA  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26686  0045FC  5001               	movf	??_USBStdGetStatusHandler,w,c
 26687  0045FE  0D02               	mullw	2
 26688  004600  0E36               	movlw	low _pBDTEntryIn
 26689  004602  24F3               	addwf	prodl,w,c
 26690  004604  6ED9               	movwf	fsr2l,c
 26691  004606  0E00               	movlw	high _pBDTEntryIn
 26692  004608                     L16:
 26693  004608  20F4               	addwfc	prodh,w,c
 26694  00460A  6EDA               	movwf	fsr2h,c
 26695  00460C  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 26696  004610  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 26697  004614  D000               	goto	i2l7653
 26698  004616                     i2l7653:
 26699                           
 26700                           ; BSR set to: 4
 26701                           ;usb_device.c: 1814: }
 26702                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 26703  004616  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26704  00461A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26705  00461E  AEDF               	btfss	indf2,7,c
 26706  004620  D016               	goto	i2l1867
 26707                           
 26708                           ; BSR set to: 4
 26709  004622  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26710  004626  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26711  00462A  A4DF               	btfss	indf2,2,c
 26712  00462C  D010               	goto	i2l1867
 26713                           
 26714                           ; BSR set to: 4
 26715                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 26716  00462E  0E01               	movlw	1
 26717  004630  0104               	movlb	4	; () banked
 26718  004632  6F38               	movwf	56,b	;volatile
 26719                           
 26720                           ; BSR set to: 4
 26721                           ;usb_device.c: 1819: }
 26722                           ;usb_device.c: 1820: }
 26723                           
 26724                           ; BSR set to: 4
 26725                           ;usb_device.c: 1818: break;
 26726  004634  D00C               	goto	i2l1867
 26727  004636                     i2l7661:
 26728                           
 26729                           ; BSR set to: 4
 26730  004636  0104               	movlb	4	; () banked
 26731  004638  5130               	movf	48,w,b	;volatile
 26732  00463A  0B1F               	andlw	31
 26733                           
 26734                           ; Switch size 1, requested type "space"
 26735                           ; Number of cases is 3, Range of values is 0 to 2
 26736                           ; switch strategies available:
 26737                           ; Name         Instructions Cycles
 26738                           ; simple_byte           10     6 (average)
 26739                           ;	Chosen strategy is simple_byte
 26740  00463C  0A00               	xorlw	0	; case 0
 26741  00463E  B4D8               	btfsc	status,2,c
 26742  004640  D7BC               	goto	i2l1864
 26743  004642  0A01               	xorlw	1	; case 1
 26744  004644  B4D8               	btfsc	status,2,c
 26745  004646  D7C5               	goto	i2l1868
 26746  004648  0A03               	xorlw	3	; case 2
 26747  00464A  B4D8               	btfsc	status,2,c
 26748  00464C  D7C4               	goto	i2l1869
 26749  00464E                     i2l1867:
 26750                           
 26751                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 26752  00464E  AE55               	btfss	_inPipes+3,7,c	;volatile
 26753  004650  0012               	return	
 26754                           
 26755                           ;usb_device.c: 1823: {
 26756                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 26757  004652  0E38               	movlw	56
 26758  004654  6E52               	movwf	_inPipes,c	;volatile
 26759  004656  0E04               	movlw	4
 26760  004658  6E53               	movwf	_inPipes+1,c	;volatile
 26761                           
 26762                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26763  00465A  8055               	bsf	_inPipes+3,0,c	;volatile
 26764                           
 26765                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 26766  00465C  0E02               	movlw	2
 26767  00465E  6E56               	movwf	_inPipes+4,c	;volatile
 26768  004660  0012               	return	
 26769  004662  0012               	return		;funcret
 26770  004664                     __end_of_USBStdGetStatusHandler:
 26771                           	opt stack 0
 26772                           pclatu	equ	0xFFB
 26773                           pclath	equ	0xFFA
 26774                           tblptru	equ	0xFF8
 26775                           tblptrh	equ	0xFF7
 26776                           tblptrl	equ	0xFF6
 26777                           tablat	equ	0xFF5
 26778                           prodh	equ	0xFF4
 26779                           prodl	equ	0xFF3
 26780                           intcon	equ	0xFF2
 26781                           intcon3	equ	0xFF0
 26782                           indf0	equ	0xFEF
 26783                           postinc0	equ	0xFEE
 26784                           fsr0h	equ	0xFEA
 26785                           fsr0l	equ	0xFE9
 26786                           wreg	equ	0xFE8
 26787                           indf1	equ	0xFE7
 26788                           postdec1	equ	0xFE5
 26789                           fsr1h	equ	0xFE2
 26790                           fsr1l	equ	0xFE1
 26791                           indf2	equ	0xFDF
 26792                           postinc2	equ	0xFDE
 26793                           postdec2	equ	0xFDD
 26794                           plusw2	equ	0xFDB
 26795                           fsr2h	equ	0xFDA
 26796                           fsr2l	equ	0xFD9
 26797                           status	equ	0xFD8
 26798                           
 26799 ;; *************** function _USBStdGetDscHandler *****************
 26800 ;; Defined at:
 26801 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 26802 ;; Parameters:    Size  Location     Type
 26803 ;;		None
 26804 ;; Auto vars:     Size  Location     Type
 26805 ;;		None
 26806 ;; Return value:  Size  Location     Type
 26807 ;;		None               void
 26808 ;; Registers used:
 26809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 26810 ;; Tracked objects:
 26811 ;;		On entry : 0/0
 26812 ;;		On exit  : 0/0
 26813 ;;		Unchanged: 0/0
 26814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26815 ;;      Params:         0       0       0       0       0       0       0       0       0
 26816 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26817 ;;      Temps:          2       0       0       0       0       0       0       0       0
 26818 ;;      Totals:         2       0       0       0       0       0       0       0       0
 26819 ;;Total ram usage:        2 bytes
 26820 ;; Hardware stack levels used:    1
 26821 ;; This function calls:
 26822 ;;		Nothing
 26823 ;; This function is called by:
 26824 ;;		_USBCheckStdRequest
 26825 ;; This function uses a non-reentrant model
 26826 ;;
 26827                           
 26828                           	psect	text117
 26829  002FFE                     __ptext117:
 26830                           	opt stack 0
 26831  002FFE                     _USBStdGetDscHandler:
 26832                           	opt stack 16
 26833                           
 26834                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 26835                           
 26836                           ;incstack = 0
 26837  002FFE  0E80               	movlw	128
 26838  003000  0104               	movlb	4	; () banked
 26839  003002  1930               	xorwf	48,w,b	;volatile
 26840  003004  A4D8               	btfss	status,2,c
 26841  003006  0012               	return	
 26842                           
 26843                           ; BSR set to: 4
 26844                           ;usb_device.c: 1707: {
 26845                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 26846  003008  0EC0               	movlw	192
 26847  00300A  6E55               	movwf	_inPipes+3,c	;volatile
 26848                           
 26849                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 26850  00300C  D07C               	goto	i2l7639
 26851  00300E                     i2l7613:
 26852                           
 26853                           ; BSR set to: 4
 26854                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 26855  00300E  0EAC               	movlw	low _device_dsc
 26856  003010  6E52               	movwf	_inPipes,c	;volatile
 26857  003012  0E79               	movlw	high _device_dsc
 26858  003014  6E53               	movwf	_inPipes+1,c	;volatile
 26859                           
 26860                           ; BSR set to: 4
 26861                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 26862  003016  0E00               	movlw	0
 26863  003018  6E57               	movwf	_inPipes+5,c	;volatile
 26864  00301A  0E12               	movlw	18
 26865  00301C  6E56               	movwf	_inPipes+4,c	;volatile
 26866                           
 26867                           ;usb_device.c: 1715: break;
 26868  00301E  0012               	return	
 26869  003020                     i2l7617:
 26870                           
 26871                           ; BSR set to: 4
 26872                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 26873  003020  0104               	movlb	4	; () banked
 26874  003022  5132               	movf	50,w,b	;volatile
 26875  003024  A4D8               	btfss	status,2,c
 26876  003026  D03E               	goto	i2l7625
 26877                           
 26878                           ; BSR set to: 4
 26879                           ;usb_device.c: 1721: {
 26880                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 26881  003028  0104               	movlb	4	; () banked
 26882  00302A  5132               	movf	50,w,b	;volatile
 26883  00302C  0D02               	mullw	2
 26884  00302E  0EFF               	movlw	low _USB_CD_Ptr
 26885  003030  24F3               	addwf	prodl,w,c
 26886  003032  6EF6               	movwf	tblptrl,c
 26887  003034  0E75               	movlw	high _USB_CD_Ptr
 26888  003036  20F4               	addwfc	prodh,w,c
 26889  003038  6EF7               	movwf	tblptrh,c
 26890  00303A                     	if	0	;There are less than 3 active tblptr bytes
 26891  00303A                     	endif
 26892  00303A  0009               	tblrd		*+
 26893  00303C  CFF5 F052          	movff	tablat,_inPipes	;volatile
 26894  003040  000A               	tblrd		*-
 26895  003042  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 26896                           
 26897                           ; BSR set to: 4
 26898                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 26899  003046  0E02               	movlw	2
 26900  003048  2452               	addwf	_inPipes,w,c	;volatile
 26901  00304A  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 26902  00304C  0E00               	movlw	0
 26903  00304E  2053               	addwfc	_inPipes+1,w,c	;volatile
 26904  003050  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26905  003052  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26906  003056  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26907  00305A  6AF8               	clrf	tblptru,c
 26908  00305C  0E07               	movlw	(high __ramtop+-1)
 26909  00305E  64F7               	cpfsgt	tblptrh,c
 26910  003060  D003               	bra	i2u535_47
 26911  003062  0008               	tblrd		*
 26912  003064  50F5               	movf	tablat,w,c
 26913  003066  D005               	bra	i2u535_40
 26914  003068                     i2u535_47:
 26915  003068  CFF6 FFE9          	movff	tblptrl,fsr0l
 26916  00306C  CFF7 FFEA          	movff	tblptrh,fsr0h
 26917  003070  50EF               	movf	indf0,w,c
 26918  003072                     i2u535_40:
 26919  003072  6E56               	movwf	_inPipes+4,c	;volatile
 26920                           
 26921                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 26922  003074  0E03               	movlw	3
 26923  003076  2452               	addwf	_inPipes,w,c	;volatile
 26924  003078  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 26925  00307A  0E00               	movlw	0
 26926  00307C  2053               	addwfc	_inPipes+1,w,c	;volatile
 26927  00307E  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26928  003080  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26929  003084  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26930  003088  6AF8               	clrf	tblptru,c
 26931  00308A  0E07               	movlw	(high __ramtop+-1)
 26932  00308C  64F7               	cpfsgt	tblptrh,c
 26933  00308E  D003               	bra	i2u536_47
 26934  003090  0008               	tblrd		*
 26935  003092  50F5               	movf	tablat,w,c
 26936  003094  D005               	bra	i2u536_40
 26937  003096                     i2u536_47:
 26938  003096  CFF6 FFE9          	movff	tblptrl,fsr0l
 26939  00309A  CFF7 FFEA          	movff	tblptrh,fsr0h
 26940  00309E  50EF               	movf	indf0,w,c
 26941  0030A0                     i2u536_40:
 26942  0030A0  6E57               	movwf	_inPipes+5,c	;volatile
 26943                           
 26944                           ;usb_device.c: 1729: }
 26945  0030A2  0012               	return	
 26946  0030A4                     i2l7625:
 26947                           
 26948                           ;usb_device.c: 1730: else
 26949                           ;usb_device.c: 1731: {
 26950                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 26951  0030A4  0E00               	movlw	0
 26952  0030A6  6E55               	movwf	_inPipes+3,c	;volatile
 26953                           
 26954                           ;usb_device.c: 1733: }
 26955                           ;usb_device.c: 1734: break;
 26956  0030A8  0012               	return	
 26957  0030AA                     i2l7627:
 26958                           
 26959                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 26960  0030AA  0E03               	movlw	3
 26961  0030AC  0104               	movlb	4	; () banked
 26962  0030AE  6132               	cpfslt	50,b	;volatile
 26963  0030B0  D024               	goto	i2l7633
 26964                           
 26965                           ; BSR set to: 4
 26966                           ;usb_device.c: 1740: {
 26967                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 26968  0030B2  0104               	movlb	4	; () banked
 26969  0030B4  5132               	movf	50,w,b	;volatile
 26970  0030B6  0D02               	mullw	2
 26971  0030B8  0EF9               	movlw	low _USB_SD_Ptr
 26972  0030BA  24F3               	addwf	prodl,w,c
 26973  0030BC  6EF6               	movwf	tblptrl,c
 26974  0030BE  0E75               	movlw	high _USB_SD_Ptr
 26975  0030C0  20F4               	addwfc	prodh,w,c
 26976  0030C2  6EF7               	movwf	tblptrh,c
 26977  0030C4                     	if	0	;There are less than 3 active tblptr bytes
 26978  0030C4                     	endif
 26979  0030C4  0009               	tblrd		*+
 26980  0030C6  CFF5 F052          	movff	tablat,_inPipes	;volatile
 26981  0030CA  000A               	tblrd		*-
 26982  0030CC  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 26983                           
 26984                           ; BSR set to: 4
 26985                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 26986  0030D0  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 26987  0030D4  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 26988  0030D8  6AF8               	clrf	tblptru,c
 26989  0030DA  0E07               	movlw	(high __ramtop+-1)
 26990  0030DC  64F7               	cpfsgt	tblptrh,c
 26991  0030DE  D003               	bra	i2u538_47
 26992  0030E0  0008               	tblrd		*
 26993  0030E2  50F5               	movf	tablat,w,c
 26994  0030E4  D005               	bra	i2u538_40
 26995  0030E6                     i2u538_47:
 26996  0030E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 26997  0030EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 26998  0030EE  50EF               	movf	indf0,w,c
 26999  0030F0                     i2u538_40:
 27000  0030F0  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27001  0030F2  5001               	movf	??_USBStdGetDscHandler,w,c
 27002  0030F4  6E56               	movwf	_inPipes+4,c	;volatile
 27003  0030F6  6A57               	clrf	_inPipes+5,c	;volatile
 27004                           
 27005                           ;usb_device.c: 1745: }
 27006  0030F8  0012               	return	
 27007  0030FA                     i2l7633:
 27008                           
 27009                           ;usb_device.c: 1746: else
 27010                           ;usb_device.c: 1747: {
 27011                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 27012  0030FA  0E00               	movlw	0
 27013  0030FC  6E55               	movwf	_inPipes+3,c	;volatile
 27014                           
 27015                           ;usb_device.c: 1749: }
 27016                           ;usb_device.c: 1750: break;
 27017  0030FE  0012               	return	
 27018  003100                     i2l7635:
 27019                           
 27020                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 27021  003100  0E00               	movlw	0
 27022  003102  6E55               	movwf	_inPipes+3,c	;volatile
 27023                           
 27024                           ;usb_device.c: 1754: }
 27025                           
 27026                           ;usb_device.c: 1753: break;
 27027  003104  0012               	return	
 27028  003106                     i2l7639:
 27029  003106  0104               	movlb	4	; () banked
 27030  003108  5133               	movf	51,w,b	;volatile
 27031                           
 27032                           ; Switch size 1, requested type "space"
 27033                           ; Number of cases is 3, Range of values is 1 to 3
 27034                           ; switch strategies available:
 27035                           ; Name         Instructions Cycles
 27036                           ; simple_byte           10     6 (average)
 27037                           ;	Chosen strategy is simple_byte
 27038  00310A  0A01               	xorlw	1	; case 1
 27039  00310C  B4D8               	btfsc	status,2,c
 27040  00310E  D77F               	goto	i2l7613
 27041  003110  0A03               	xorlw	3	; case 2
 27042  003112  B4D8               	btfsc	status,2,c
 27043  003114  D785               	goto	i2l7617
 27044  003116  0A01               	xorlw	1	; case 3
 27045  003118  B4D8               	btfsc	status,2,c
 27046  00311A  D7C7               	goto	i2l7627
 27047  00311C  D7F1               	goto	i2l7635
 27048                           
 27049                           ; BSR set to: 4
 27050  00311E  0012               	return	
 27051                           
 27052                           ; BSR set to: 4
 27053  003120  0012               	return		;funcret
 27054  003122                     __end_of_USBStdGetDscHandler:
 27055                           	opt stack 0
 27056                           pclatu	equ	0xFFB
 27057                           pclath	equ	0xFFA
 27058                           tblptru	equ	0xFF8
 27059                           tblptrh	equ	0xFF7
 27060                           tblptrl	equ	0xFF6
 27061                           tablat	equ	0xFF5
 27062                           prodh	equ	0xFF4
 27063                           prodl	equ	0xFF3
 27064                           intcon	equ	0xFF2
 27065                           intcon3	equ	0xFF0
 27066                           indf0	equ	0xFEF
 27067                           postinc0	equ	0xFEE
 27068                           fsr0h	equ	0xFEA
 27069                           fsr0l	equ	0xFE9
 27070                           wreg	equ	0xFE8
 27071                           indf1	equ	0xFE7
 27072                           postdec1	equ	0xFE5
 27073                           fsr1h	equ	0xFE2
 27074                           fsr1l	equ	0xFE1
 27075                           indf2	equ	0xFDF
 27076                           postinc2	equ	0xFDE
 27077                           postdec2	equ	0xFDD
 27078                           plusw2	equ	0xFDB
 27079                           fsr2h	equ	0xFDA
 27080                           fsr2l	equ	0xFD9
 27081                           status	equ	0xFD8
 27082                           
 27083 ;; *************** function _USBStdFeatureReqHandler *****************
 27084 ;; Defined at:
 27085 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 27086 ;; Parameters:    Size  Location     Type
 27087 ;;		None
 27088 ;; Auto vars:     Size  Location     Type
 27089 ;;  p               2   25[COMRAM] PTR struct __BDT
 27090 ;;		 -> BDT(48), NULL(0), 
 27091 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 27092 ;;		 -> UEP0(1), 
 27093 ;;  current_ep_d    1   24[COMRAM] struct .
 27094 ;; Return value:  Size  Location     Type
 27095 ;;		None               void
 27096 ;; Registers used:
 27097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27098 ;; Tracked objects:
 27099 ;;		On entry : 0/0
 27100 ;;		On exit  : 0/0
 27101 ;;		Unchanged: 0/0
 27102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27103 ;;      Params:         0       0       0       0       0       0       0       0       0
 27104 ;;      Locals:         5       0       0       0       0       0       0       0       0
 27105 ;;      Temps:          1       0       0       0       0       0       0       0       0
 27106 ;;      Totals:         6       0       0       0       0       0       0       0       0
 27107 ;;Total ram usage:        6 bytes
 27108 ;; Hardware stack levels used:    1
 27109 ;; Hardware stack levels required when called:    5
 27110 ;; This function calls:
 27111 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27112 ;; This function is called by:
 27113 ;;		_USBCheckStdRequest
 27114 ;; This function uses a non-reentrant model
 27115 ;;
 27116                           
 27117                           	psect	text118
 27118  0019BC                     __ptext118:
 27119                           	opt stack 0
 27120  0019BC                     _USBStdFeatureReqHandler:
 27121                           	opt stack 11
 27122                           
 27123                           ;usb_device.c: 2387: BDT_ENTRY *p;
 27124                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 27125                           ;usb_device.c: 2390: unsigned char* pUEP;
 27126                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 27127                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 27128                           
 27129                           ;incstack = 0
 27130  0019BC  0104               	movlb	4	; () banked
 27131  0019BE  0532               	decf	50,w,b	;volatile
 27132  0019C0  A4D8               	btfss	status,2,c
 27133  0019C2  D012               	goto	i2l1943
 27134                           
 27135                           ; BSR set to: 4
 27136  0019C4  0104               	movlb	4	; () banked
 27137  0019C6  5130               	movf	48,w,b	;volatile
 27138  0019C8  0B1F               	andlw	31
 27139  0019CA  0900               	iorlw	0
 27140  0019CC  A4D8               	btfss	status,2,c
 27141  0019CE  D00C               	goto	i2l1943
 27142                           
 27143                           ; BSR set to: 4
 27144                           ;usb_device.c: 2395: {
 27145                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 27146  0019D0  8E55               	bsf	_inPipes+3,7,c	;volatile
 27147                           
 27148                           ; BSR set to: 4
 27149                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 27150  0019D2  0E03               	movlw	3
 27151  0019D4  0104               	movlb	4	; () banked
 27152  0019D6  1931               	xorwf	49,w,b	;volatile
 27153  0019D8  A4D8               	btfss	status,2,c
 27154  0019DA  D002               	goto	i2l7679
 27155                           
 27156                           ; BSR set to: 4
 27157                           ;usb_device.c: 2398: RemoteWakeup = 1;
 27158  0019DC  0E01               	movlw	1
 27159  0019DE  D001               	goto	L17
 27160  0019E0                     i2l7679:
 27161                           
 27162                           ;usb_device.c: 2399: else
 27163                           ;usb_device.c: 2400: RemoteWakeup = 0;
 27164  0019E0  0E00               	movlw	0
 27165  0019E2                     L17:
 27166  0019E2  0100               	movlb	0	; () banked
 27167  0019E4  6F85               	movwf	_RemoteWakeup& (0+255),b	;volatile
 27168  0019E6  D000               	goto	i2l1943
 27169  0019E8                     i2l1943:
 27170                           
 27171                           ;usb_device.c: 2401: }
 27172                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 27173                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 27174                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 27175                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 27176  0019E8  0104               	movlb	4	; () banked
 27177  0019EA  5132               	movf	50,w,b	;volatile
 27178  0019EC  A4D8               	btfss	status,2,c
 27179  0019EE  0012               	return	
 27180                           
 27181                           ; BSR set to: 4
 27182  0019F0  0104               	movlb	4	; () banked
 27183  0019F2  5130               	movf	48,w,b	;volatile
 27184  0019F4  0B1F               	andlw	31
 27185  0019F6  0A02               	xorlw	2
 27186  0019F8  A4D8               	btfss	status,2,c
 27187  0019FA  0012               	return	
 27188                           
 27189                           ; BSR set to: 4
 27190  0019FC  0104               	movlb	4	; () banked
 27191  0019FE  5134               	movf	52,w,b	;volatile
 27192  001A00  0B0F               	andlw	15
 27193  001A02  0900               	iorlw	0
 27194  001A04  B4D8               	btfsc	status,2,c
 27195  001A06  0012               	return	
 27196                           
 27197                           ; BSR set to: 4
 27198  001A08  0104               	movlb	4	; () banked
 27199  001A0A  5134               	movf	52,w,b	;volatile
 27200  001A0C  0B0F               	andlw	15
 27201  001A0E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27202  001A10  0E03               	movlw	3
 27203  001A12  6016               	cpfslt	??_USBStdFeatureReqHandler,c
 27204  001A14  0012               	return	
 27205                           
 27206                           ; BSR set to: 4
 27207  001A16  0E20               	movlw	32
 27208  001A18  0100               	movlb	0	; () banked
 27209  001A1A  1989               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 27210  001A1C  A4D8               	btfss	status,2,c
 27211  001A1E  0012               	return	
 27212                           
 27213                           ; BSR set to: 0
 27214                           ;usb_device.c: 2408: {
 27215                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 27216  001A20  8E55               	bsf	_inPipes+3,7,c	;volatile
 27217                           
 27218                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 27219  001A22  0104               	movlb	4	; () banked
 27220  001A24  BF34               	btfsc	52,7,b	;volatile
 27221  001A26  D01B               	goto	i2l7693
 27222                           
 27223                           ; BSR set to: 4
 27224                           ;usb_device.c: 2415: {
 27225                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27226  001A28  0104               	movlb	4	; () banked
 27227  001A2A  5134               	movf	52,w,b	;volatile
 27228  001A2C  0B0F               	andlw	15
 27229  001A2E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27230  001A30  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27231  001A32  0D02               	mullw	2
 27232  001A34  0E60               	movlw	low _pBDTEntryOut
 27233  001A36  24F3               	addwf	prodl,w,c
 27234  001A38  6ED9               	movwf	fsr2l,c
 27235  001A3A  0E00               	movlw	high _pBDTEntryOut
 27236  001A3C  20F4               	addwfc	prodh,w,c
 27237  001A3E  6EDA               	movwf	fsr2h,c
 27238  001A40  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27239  001A44  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27240                           
 27241                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 27242  001A48  0104               	movlb	4	; () banked
 27243  001A4A  5134               	movf	52,w,b	;volatile
 27244  001A4C  0B0F               	andlw	15
 27245  001A4E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27246  001A50  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27247  001A52  0D01               	mullw	1
 27248  001A54  0E69               	movlw	low _ep_data_out
 27249  001A56  24F3               	addwf	prodl,w,c
 27250  001A58  6ED9               	movwf	fsr2l,c
 27251  001A5A  0E00               	movlw	high _ep_data_out
 27252  001A5C  D01A               	goto	L18
 27253  001A5E                     i2l7693:
 27254                           
 27255                           ; BSR set to: 4
 27256                           ;usb_device.c: 2419: else
 27257                           ;usb_device.c: 2420: {
 27258                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27259  001A5E  0104               	movlb	4	; () banked
 27260  001A60  5134               	movf	52,w,b	;volatile
 27261  001A62  0B0F               	andlw	15
 27262  001A64  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27263  001A66  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27264  001A68  0D02               	mullw	2
 27265  001A6A  0E36               	movlw	low _pBDTEntryIn
 27266  001A6C  24F3               	addwf	prodl,w,c
 27267  001A6E  6ED9               	movwf	fsr2l,c
 27268  001A70  0E00               	movlw	high _pBDTEntryIn
 27269  001A72  20F4               	addwfc	prodh,w,c
 27270  001A74  6EDA               	movwf	fsr2h,c
 27271  001A76  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27272  001A7A  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27273                           
 27274                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27275  001A7E  0104               	movlb	4	; () banked
 27276  001A80  5134               	movf	52,w,b	;volatile
 27277  001A82  0B0F               	andlw	15
 27278  001A84  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27279  001A86  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27280  001A88  0D01               	mullw	1
 27281  001A8A  0E66               	movlw	low _ep_data_in
 27282  001A8C  24F3               	addwf	prodl,w,c
 27283  001A8E  6ED9               	movwf	fsr2l,c
 27284  001A90  0E00               	movlw	high _ep_data_in
 27285  001A92                     L18:
 27286  001A92  20F4               	addwfc	prodh,w,c
 27287  001A94  6EDA               	movwf	fsr2h,c
 27288  001A96  50DF               	movf	indf2,w,c
 27289  001A98  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27290  001A9A  D000               	goto	i2l7695
 27291  001A9C                     i2l7695:
 27292                           
 27293                           ; BSR set to: 4
 27294                           ;usb_device.c: 2423: }
 27295                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 27296  001A9C  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27297  001A9E  D002               	goto	i2l7699
 27298                           
 27299                           ; BSR set to: 4
 27300                           ;usb_device.c: 2429: {
 27301                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27302  001AA0  941A               	bcf	USBStdFeatureReqHandler@p,2,c
 27303                           
 27304                           ;usb_device.c: 2431: }
 27305  001AA2  D002               	goto	i2l7701
 27306  001AA4                     i2l7699:
 27307                           
 27308                           ; BSR set to: 4
 27309                           ;usb_device.c: 2432: else
 27310                           ;usb_device.c: 2433: {
 27311                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27312  001AA4  841A               	bsf	USBStdFeatureReqHandler@p,2,c
 27313  001AA6  D000               	goto	i2l7701
 27314  001AA8                     i2l7701:
 27315                           
 27316                           ; BSR set to: 4
 27317                           ;usb_device.c: 2435: }
 27318                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 27319  001AA8  0104               	movlb	4	; () banked
 27320  001AAA  BF34               	btfsc	52,7,b	;volatile
 27321  001AAC  D00B               	goto	i2l7705
 27322                           
 27323                           ; BSR set to: 4
 27324                           ;usb_device.c: 2440: {
 27325                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27326  001AAE  0104               	movlb	4	; () banked
 27327  001AB0  5134               	movf	52,w,b	;volatile
 27328  001AB2  0B0F               	andlw	15
 27329  001AB4  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27330  001AB6  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27331  001AB8  0D02               	mullw	2
 27332  001ABA  0E60               	movlw	low _pBDTEntryOut
 27333  001ABC  24F3               	addwf	prodl,w,c
 27334  001ABE  6ED9               	movwf	fsr2l,c
 27335  001AC0  0E00               	movlw	high _pBDTEntryOut
 27336  001AC2  D00A               	goto	L19
 27337  001AC4                     i2l7705:
 27338                           
 27339                           ; BSR set to: 4
 27340                           ;usb_device.c: 2443: else
 27341                           ;usb_device.c: 2444: {
 27342                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27343  001AC4  0104               	movlb	4	; () banked
 27344  001AC6  5134               	movf	52,w,b	;volatile
 27345  001AC8  0B0F               	andlw	15
 27346  001ACA  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27347  001ACC  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27348  001ACE  0D02               	mullw	2
 27349  001AD0  0E36               	movlw	low _pBDTEntryIn
 27350  001AD2  24F3               	addwf	prodl,w,c
 27351  001AD4  6ED9               	movwf	fsr2l,c
 27352  001AD6  0E00               	movlw	high _pBDTEntryIn
 27353  001AD8                     L19:
 27354  001AD8  20F4               	addwfc	prodh,w,c
 27355  001ADA  6EDA               	movwf	fsr2h,c
 27356  001ADC  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27357  001AE0  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27358  001AE4  D000               	goto	i2l7707
 27359  001AE6                     i2l7707:
 27360                           
 27361                           ; BSR set to: 4
 27362                           ;usb_device.c: 2446: }
 27363                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 27364  001AE6  0E03               	movlw	3
 27365  001AE8  0104               	movlb	4	; () banked
 27366  001AEA  1931               	xorwf	49,w,b	;volatile
 27367  001AEC  A4D8               	btfss	status,2,c
 27368  001AEE  D030               	goto	i2l7721
 27369                           
 27370                           ; BSR set to: 4
 27371                           ;usb_device.c: 2450: {
 27372                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 27373  001AF0  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27374  001AF4  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27375  001AF8  AEDF               	btfss	indf2,7,c
 27376  001AFA  D01D               	goto	i2l7717
 27377                           
 27378                           ; BSR set to: 4
 27379                           ;usb_device.c: 2452: {
 27380                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 27381  001AFC  0104               	movlb	4	; () banked
 27382  001AFE  BF34               	btfsc	52,7,b	;volatile
 27383  001B00  D00B               	goto	i2l7715
 27384                           
 27385                           ; BSR set to: 4
 27386                           ;usb_device.c: 2456: {
 27387                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27388  001B02  0104               	movlb	4	; () banked
 27389  001B04  5134               	movf	52,w,b	;volatile
 27390  001B06  0B0F               	andlw	15
 27391  001B08  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27392  001B0A  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27393  001B0C  0D01               	mullw	1
 27394  001B0E  0E69               	movlw	low _ep_data_out
 27395  001B10  24F3               	addwf	prodl,w,c
 27396  001B12  6ED9               	movwf	fsr2l,c
 27397  001B14  0E00               	movlw	high _ep_data_out
 27398  001B16  D00A               	goto	L20
 27399  001B18                     i2l7715:
 27400                           
 27401                           ;usb_device.c: 2459: else
 27402                           ;usb_device.c: 2460: {
 27403                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27404  001B18  0104               	movlb	4	; () banked
 27405  001B1A  5134               	movf	52,w,b	;volatile
 27406  001B1C  0B0F               	andlw	15
 27407  001B1E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27408  001B20  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27409  001B22  0D01               	mullw	1
 27410  001B24  0E66               	movlw	low _ep_data_in
 27411  001B26  24F3               	addwf	prodl,w,c
 27412  001B28  6ED9               	movwf	fsr2l,c
 27413  001B2A  0E00               	movlw	high _ep_data_in
 27414  001B2C                     L20:
 27415  001B2C  20F4               	addwfc	prodh,w,c
 27416  001B2E  6EDA               	movwf	fsr2h,c
 27417  001B30  0100               	movlb	0	; () banked
 27418  001B32  82DF               	bsf	indf2,1,c
 27419                           
 27420                           ; BSR set to: 0
 27421  001B34  D000               	goto	i2l7717
 27422  001B36                     i2l7717:
 27423                           
 27424                           ;usb_device.c: 2462: }
 27425                           ;usb_device.c: 2463: }
 27426                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 27427  001B36  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27428  001B3A  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27429  001B3E  0E00               	movlw	0
 27430  001B40  84DB               	bsf	plusw2,2,c
 27431                           
 27432                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 27433  001B42  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27434  001B46  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27435  001B4A  0E00               	movlw	0
 27436  001B4C  8EDB               	bsf	plusw2,7,c
 27437                           
 27438                           ;usb_device.c: 2468: }
 27439  001B4E  0012               	return	
 27440  001B50                     i2l7721:
 27441                           
 27442                           ;usb_device.c: 2469: else
 27443                           ;usb_device.c: 2470: {
 27444                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27445  001B50  0E04               	movlw	4
 27446  001B52  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 27447                           
 27448                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 27449  001B54  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27450  001B58  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27451  001B5C  AEDF               	btfss	indf2,7,c
 27452  001B5E  D01B               	goto	i2l7731
 27453                           
 27454                           ;usb_device.c: 2476: {
 27455                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 27456  001B60  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27457  001B64  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27458  001B68  0E7F               	movlw	127
 27459  001B6A  16DF               	andwf	indf2,f,c
 27460                           
 27461                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 27462  001B6C  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27463  001B70  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27464  001B74  0E00               	movlw	0
 27465  001B76  8CDB               	bsf	plusw2,6,c
 27466                           
 27467                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27468  001B78  0E00               	movlw	0
 27469  001B7A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27470  001B7C  0E05               	movlw	5
 27471  001B7E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27472  001B80  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27473  001B84  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27474  001B88  0E00               	movlw	0
 27475  001B8A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27476  001B8C  0E02               	movlw	2
 27477  001B8E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27478  001B90  EC7E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27479                           
 27480                           ;usb_device.c: 2482: }
 27481  001B94  D007               	goto	i2l7733
 27482  001B96                     i2l7731:
 27483                           
 27484                           ;usb_device.c: 2483: else
 27485                           ;usb_device.c: 2484: {
 27486                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 27487  001B96  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27488  001B9A  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27489  001B9E  0E00               	movlw	0
 27490  001BA0  8CDB               	bsf	plusw2,6,c
 27491  001BA2  D000               	goto	i2l7733
 27492  001BA4                     i2l7733:
 27493                           
 27494                           ;usb_device.c: 2487: }
 27495                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27496  001BA4  0E04               	movlw	4
 27497  001BA6  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 27498                           
 27499                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27500  001BA8  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27501  001BAA  D006               	goto	i2l1962
 27502  001BAC  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27503  001BB0  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27504  001BB4  AEDF               	btfss	indf2,7,c
 27505  001BB6  D032               	goto	i2l7747
 27506  001BB8                     i2l1962:
 27507                           
 27508                           ;usb_device.c: 2498: {
 27509                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 27510  001BB8  0104               	movlb	4	; () banked
 27511  001BBA  BF34               	btfsc	52,7,b	;volatile
 27512  001BBC  D00B               	goto	i2l7741
 27513                           
 27514                           ; BSR set to: 4
 27515                           ;usb_device.c: 2500: {
 27516                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27517  001BBE  0104               	movlb	4	; () banked
 27518  001BC0  5134               	movf	52,w,b	;volatile
 27519  001BC2  0B0F               	andlw	15
 27520  001BC4  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27521  001BC6  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27522  001BC8  0D01               	mullw	1
 27523  001BCA  0E69               	movlw	low _ep_data_out
 27524  001BCC  24F3               	addwf	prodl,w,c
 27525  001BCE  6ED9               	movwf	fsr2l,c
 27526  001BD0  0E00               	movlw	high _ep_data_out
 27527  001BD2  D00A               	goto	L21
 27528  001BD4                     i2l7741:
 27529                           
 27530                           ;usb_device.c: 2503: else
 27531                           ;usb_device.c: 2504: {
 27532                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27533  001BD4  0104               	movlb	4	; () banked
 27534  001BD6  5134               	movf	52,w,b	;volatile
 27535  001BD8  0B0F               	andlw	15
 27536  001BDA  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27537  001BDC  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27538  001BDE  0D01               	mullw	1
 27539  001BE0  0E66               	movlw	low _ep_data_in
 27540  001BE2  24F3               	addwf	prodl,w,c
 27541  001BE4  6ED9               	movwf	fsr2l,c
 27542  001BE6  0E00               	movlw	high _ep_data_in
 27543  001BE8                     L21:
 27544  001BE8  20F4               	addwfc	prodh,w,c
 27545  001BEA  6EDA               	movwf	fsr2h,c
 27546  001BEC  0100               	movlb	0	; () banked
 27547  001BEE  92DF               	bcf	indf2,1,c
 27548  001BF0  D000               	goto	i2l7743
 27549  001BF2                     i2l7743:
 27550                           
 27551                           ; BSR set to: 0
 27552                           ;usb_device.c: 2506: }
 27553                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27554  001BF2  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27555  001BF6  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27556  001BFA  0E3B               	movlw	59
 27557  001BFC  16DF               	andwf	indf2,f,c
 27558                           
 27559                           ; BSR set to: 0
 27560                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27561  001BFE  0E00               	movlw	0
 27562  001C00  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27563  001C02  0E05               	movlw	5
 27564  001C04  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27565  001C06  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27566  001C0A  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27567  001C0E  0E00               	movlw	0
 27568  001C10  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27569  001C12  0E02               	movlw	2
 27570  001C14  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27571  001C16  EC7E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27572                           
 27573                           ;usb_device.c: 2512: }
 27574  001C1A  D007               	goto	i2l7749
 27575  001C1C                     i2l7747:
 27576                           
 27577                           ;usb_device.c: 2513: else
 27578                           ;usb_device.c: 2514: {
 27579                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27580  001C1C  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27581  001C20  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27582  001C24  0E3B               	movlw	59
 27583  001C26  16DF               	andwf	indf2,f,c
 27584  001C28  D000               	goto	i2l7749
 27585  001C2A                     i2l7749:
 27586                           
 27587                           ;usb_device.c: 2517: }
 27588                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 27589  001C2A  0104               	movlb	4	; () banked
 27590  001C2C  5134               	movf	52,w,b	;volatile
 27591  001C2E  0B0F               	andlw	15
 27592  001C30  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27593  001C32  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27594  001C34  0D01               	mullw	1
 27595  001C36  0E6A               	movlw	106
 27596  001C38  24F3               	addwf	prodl,w,c
 27597  001C3A  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
 27598  001C3C  0E0F               	movlw	15
 27599  001C3E  20F4               	addwfc	prodh,w,c
 27600  001C40  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 27601                           
 27602                           ; BSR set to: 4
 27603                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 27604  001C42  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27605  001C46  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27606  001C4A  0EFE               	movlw	254
 27607  001C4C  16DF               	andwf	indf2,f,c
 27608                           
 27609                           ; BSR set to: 4
 27610  001C4E  0012               	return	
 27611                           
 27612                           ; BSR set to: 4
 27613  001C50  0012               	return		;funcret
 27614  001C52                     __end_of_USBStdFeatureReqHandler:
 27615                           	opt stack 0
 27616                           pclatu	equ	0xFFB
 27617                           pclath	equ	0xFFA
 27618                           tblptru	equ	0xFF8
 27619                           tblptrh	equ	0xFF7
 27620                           tblptrl	equ	0xFF6
 27621                           tablat	equ	0xFF5
 27622                           prodh	equ	0xFF4
 27623                           prodl	equ	0xFF3
 27624                           intcon	equ	0xFF2
 27625                           intcon3	equ	0xFF0
 27626                           indf0	equ	0xFEF
 27627                           postinc0	equ	0xFEE
 27628                           fsr0h	equ	0xFEA
 27629                           fsr0l	equ	0xFE9
 27630                           wreg	equ	0xFE8
 27631                           indf1	equ	0xFE7
 27632                           postdec1	equ	0xFE5
 27633                           fsr1h	equ	0xFE2
 27634                           fsr1l	equ	0xFE1
 27635                           indf2	equ	0xFDF
 27636                           postinc2	equ	0xFDE
 27637                           postdec2	equ	0xFDD
 27638                           plusw2	equ	0xFDB
 27639                           fsr2h	equ	0xFDA
 27640                           fsr2l	equ	0xFD9
 27641                           status	equ	0xFD8
 27642                           
 27643 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27644 ;; Defined at:
 27645 ;;		line 308 in file "../Includes/Board/USBapp.c"
 27646 ;; Parameters:    Size  Location     Type
 27647 ;;  event           2   13[COMRAM] enum E7731
 27648 ;;  pdata           2   15[COMRAM] PTR void 
 27649 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 27650 ;;  size            2   17[COMRAM] unsigned int 
 27651 ;; Auto vars:     Size  Location     Type
 27652 ;;		None
 27653 ;; Return value:  Size  Location     Type
 27654 ;;                  1    wreg      unsigned char 
 27655 ;; Registers used:
 27656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27657 ;; Tracked objects:
 27658 ;;		On entry : 0/0
 27659 ;;		On exit  : 0/0
 27660 ;;		Unchanged: 0/0
 27661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27662 ;;      Params:         6       0       0       0       0       0       0       0       0
 27663 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27664 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27665 ;;      Totals:         8       0       0       0       0       0       0       0       0
 27666 ;;Total ram usage:        8 bytes
 27667 ;; Hardware stack levels used:    1
 27668 ;; Hardware stack levels required when called:    4
 27669 ;; This function calls:
 27670 ;;		_USBCheckCDCRequest
 27671 ;;		_USBapp_CdcEmulatorInitialize
 27672 ;; This function is called by:
 27673 ;;		_USBDeviceTasks
 27674 ;;		_USBStdSetCfgHandler
 27675 ;;		_USBSuspend
 27676 ;;		_USBWakeFromSuspend
 27677 ;;		_USBCtrlTrfSetupHandler
 27678 ;;		_USBCheckStdRequest
 27679 ;;		_USBStdFeatureReqHandler
 27680 ;; This function uses a non-reentrant model
 27681 ;;
 27682                           
 27683                           	psect	text119
 27684  0054FC                     __ptext119:
 27685                           	opt stack 0
 27686  0054FC                     _USER_USB_CALLBACK_EVENT_HANDLER:
 27687                           	opt stack 15
 27688                           
 27689                           ;USBapp.c: 310: switch( (int) event )
 27690                           
 27691                           ;incstack = 0
 27692  0054FC  D007               	goto	i2l7291
 27693                           
 27694                           ;USBapp.c: 329: break;
 27695                           
 27696                           ;USBapp.c: 326: case EVENT_RESUME:
 27697                           
 27698                           ;USBapp.c: 324: break;
 27699                           
 27700                           ;USBapp.c: 321: case EVENT_SUSPEND:
 27701                           
 27702                           ;USBapp.c: 319: break;
 27703                           
 27704                           ;USBapp.c: 315: case EVENT_SOF:
 27705                           
 27706                           ;USBapp.c: 313: break;
 27707                           
 27708                           ;USBapp.c: 311: {
 27709                           ;USBapp.c: 312: case EVENT_TRANSFER:
 27710  0054FE  0012               	return	
 27711  005500                     i2l7285:
 27712                           
 27713                           ;USBapp.c: 334: USBapp_CdcEmulatorInitialize();
 27714  005500  ECAE  F02A         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 27715                           
 27716                           ;USBapp.c: 338: break;
 27717                           
 27718                           ;USBapp.c: 337: case EVENT_SET_DESCRIPTOR:
 27719                           
 27720                           ;USBapp.c: 335: break;
 27721  005504  0012               	return	
 27722  005506                     i2l7287:
 27723                           
 27724                           ;USBapp.c: 343: USBCheckCDCRequest();
 27725  005506  EC79  F022         	call	_USBCheckCDCRequest	;wreg free
 27726                           
 27727                           ;USBapp.c: 354: }
 27728                           
 27729                           ;USBapp.c: 353: break;
 27730                           
 27731                           ;USBapp.c: 352: default:
 27732                           
 27733                           ;USBapp.c: 350: break;
 27734                           
 27735                           ;USBapp.c: 349: case EVENT_TRANSFER_TERMINATED:
 27736                           
 27737                           ;USBapp.c: 347: break;
 27738                           
 27739                           ;USBapp.c: 346: case EVENT_BUS_ERROR:
 27740                           
 27741                           ;USBapp.c: 344: break;
 27742  00550A  0012               	return	
 27743  00550C                     i2l7291:
 27744  00550C  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 27745  005510  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 27746                           
 27747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 27748                           ; Switch size 1, requested type "space"
 27749                           ; Number of cases is 2, Range of values is 0 to 127
 27750                           ; switch strategies available:
 27751                           ; Name         Instructions Cycles
 27752                           ; simple_byte            7     4 (average)
 27753                           ;	Chosen strategy is simple_byte
 27754  005514  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 27755  005516  0A00               	xorlw	0	; case 0
 27756  005518  B4D8               	btfsc	status,2,c
 27757  00551A  D004               	goto	i2l13827
 27758  00551C  0A7F               	xorlw	127	; case 127
 27759  00551E  A4D8               	btfss	status,2,c
 27760  005520  0012               	return	
 27761  005522  D018               	goto	i2l13829
 27762  005524                     i2l13827:
 27763                           
 27764                           ; Switch size 1, requested type "space"
 27765                           ; Number of cases is 8, Range of values is 1 to 117
 27766                           ; switch strategies available:
 27767                           ; Name         Instructions Cycles
 27768                           ; simple_byte           25    13 (average)
 27769                           ;	Chosen strategy is simple_byte
 27770  005524  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 27771  005526  0A01               	xorlw	1	; case 1
 27772  005528  B4D8               	btfsc	status,2,c
 27773  00552A  D7EA               	goto	i2l7285
 27774  00552C  0A03               	xorlw	3	; case 2
 27775  00552E  B4D8               	btfsc	status,2,c
 27776  005530  0012               	return	
 27777  005532  0A01               	xorlw	1	; case 3
 27778  005534  B4D8               	btfsc	status,2,c
 27779  005536  D7E7               	goto	i2l7287
 27780  005538  0A06               	xorlw	6	; case 5
 27781  00553A  B4D8               	btfsc	status,2,c
 27782  00553C  0012               	return	
 27783  00553E  0A77               	xorlw	119	; case 114
 27784  005540  B4D8               	btfsc	status,2,c
 27785  005542  0012               	return	
 27786  005544  0A01               	xorlw	1	; case 115
 27787  005546  B4D8               	btfsc	status,2,c
 27788  005548  0012               	return	
 27789  00554A  0A07               	xorlw	7	; case 116
 27790  00554C  B4D8               	btfsc	status,2,c
 27791  00554E  0012               	return	
 27792  005550  0A01               	xorlw	1	; case 117
 27793  005552  0012               	return	
 27794  005554                     i2l13829:
 27795                           
 27796                           ; Switch size 1, requested type "space"
 27797                           ; Number of cases is 1, Range of values is 255 to 255
 27798                           ; switch strategies available:
 27799                           ; Name         Instructions Cycles
 27800                           ; simple_byte            4     3 (average)
 27801                           ;	Chosen strategy is simple_byte
 27802  005554  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 27803  005556  0AFF               	xorlw	255	; case 255
 27804  005558  0012               	return	
 27805                           
 27806                           ;USBapp.c: 355: return 1;
 27807                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
 27808  00555A  0012               	return		;funcret
 27809  00555C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 27810                           	opt stack 0
 27811                           pclatu	equ	0xFFB
 27812                           pclath	equ	0xFFA
 27813                           tblptru	equ	0xFF8
 27814                           tblptrh	equ	0xFF7
 27815                           tblptrl	equ	0xFF6
 27816                           tablat	equ	0xFF5
 27817                           prodh	equ	0xFF4
 27818                           prodl	equ	0xFF3
 27819                           intcon	equ	0xFF2
 27820                           intcon3	equ	0xFF0
 27821                           indf0	equ	0xFEF
 27822                           postinc0	equ	0xFEE
 27823                           fsr0h	equ	0xFEA
 27824                           fsr0l	equ	0xFE9
 27825                           wreg	equ	0xFE8
 27826                           indf1	equ	0xFE7
 27827                           postdec1	equ	0xFE5
 27828                           fsr1h	equ	0xFE2
 27829                           fsr1l	equ	0xFE1
 27830                           indf2	equ	0xFDF
 27831                           postinc2	equ	0xFDE
 27832                           postdec2	equ	0xFDD
 27833                           plusw2	equ	0xFDB
 27834                           fsr2h	equ	0xFDA
 27835                           fsr2l	equ	0xFD9
 27836                           status	equ	0xFD8
 27837                           
 27838 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 27839 ;; Defined at:
 27840 ;;		line 144 in file "../Includes/Board/USBapp.c"
 27841 ;; Parameters:    Size  Location     Type
 27842 ;;		None
 27843 ;; Auto vars:     Size  Location     Type
 27844 ;;  i               1   12[COMRAM] unsigned char 
 27845 ;; Return value:  Size  Location     Type
 27846 ;;		None               void
 27847 ;; Registers used:
 27848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27849 ;; Tracked objects:
 27850 ;;		On entry : 0/0
 27851 ;;		On exit  : 0/0
 27852 ;;		Unchanged: 0/0
 27853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27854 ;;      Params:         0       0       0       0       0       0       0       0       0
 27855 ;;      Locals:         1       0       0       0       0       0       0       0       0
 27856 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27857 ;;      Totals:         1       0       0       0       0       0       0       0       0
 27858 ;;Total ram usage:        1 bytes
 27859 ;; Hardware stack levels used:    1
 27860 ;; Hardware stack levels required when called:    3
 27861 ;; This function calls:
 27862 ;;		_CDCInitEP
 27863 ;;		i2_EUSART_Initialize
 27864 ;; This function is called by:
 27865 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27866 ;; This function uses a non-reentrant model
 27867 ;;
 27868                           
 27869                           	psect	text120
 27870  00555C                     __ptext120:
 27871                           	opt stack 0
 27872  00555C                     _USBapp_CdcEmulatorInitialize:
 27873                           	opt stack 15
 27874                           
 27875                           ;USBapp.c: 147: CDCInitEP();
 27876                           
 27877                           ;incstack = 0
 27878  00555C  EC18  F029         	call	_CDCInitEP	;wreg free
 27879                           
 27880                           ;USBapp.c: 148: line_coding.bCharFormat = 0;
 27881  005560  0E00               	movlw	0
 27882  005562  0101               	movlb	1	; () banked
 27883  005564  6FEE               	movwf	(_line_coding+4)& (0+255),b
 27884                           
 27885                           ; BSR set to: 1
 27886                           ;USBapp.c: 149: line_coding.bDataBits = 8;
 27887  005566  0E08               	movlw	8
 27888  005568  0101               	movlb	1	; () banked
 27889  00556A  6FF0               	movwf	(_line_coding+6)& (0+255),b
 27890                           
 27891                           ; BSR set to: 1
 27892                           ;USBapp.c: 150: line_coding.bParityType = 0;
 27893  00556C  0E00               	movlw	0
 27894  00556E  0101               	movlb	1	; () banked
 27895  005570  6FEF               	movwf	(_line_coding+5)& (0+255),b
 27896                           
 27897                           ; BSR set to: 1
 27898                           ;USBapp.c: 151: line_coding.dwDTERate = 19200;
 27899  005572  0E00               	movlw	0
 27900  005574  0101               	movlb	1	; () banked
 27901  005576  6FEA               	movwf	_line_coding& (0+255),b
 27902  005578  0E4B               	movlw	75
 27903  00557A  6FEB               	movwf	(_line_coding+1)& (0+255),b
 27904  00557C  0E00               	movlw	0
 27905  00557E  6FEC               	movwf	(_line_coding+2)& (0+255),b
 27906  005580  0E00               	movlw	0
 27907  005582  6FED               	movwf	(_line_coding+3)& (0+255),b
 27908                           
 27909                           ; BSR set to: 1
 27910                           ;USBapp.c: 152: EUSART_Initialize();
 27911  005584  EC75  F02C         	call	i2_EUSART_Initialize	;wreg free
 27912                           
 27913                           ;USBapp.c: 154: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 27914  005588  0E00               	movlw	0
 27915  00558A  6E0D               	movwf	USBapp_CdcEmulatorInitialize@i,c
 27916  00558C                     i2l7209:
 27917  00558C  0E3F               	movlw	63
 27918  00558E  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 27919  005590  D001               	goto	i2l7213
 27920  005592  D00C               	goto	i2l7219
 27921  005594                     i2l7213:
 27922                           
 27923                           ;USBapp.c: 155: {
 27924                           ;USBapp.c: 156: USB_Buffer[i] = 0;
 27925  005594  500D               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 27926  005596  0D01               	mullw	1
 27927  005598  0E38               	movlw	low _USB_Buffer
 27928  00559A  24F3               	addwf	prodl,w,c
 27929  00559C  6ED9               	movwf	fsr2l,c
 27930  00559E  0E01               	movlw	high _USB_Buffer
 27931  0055A0  20F4               	addwfc	prodh,w,c
 27932  0055A2  6EDA               	movwf	fsr2h,c
 27933  0055A4  0E00               	movlw	0
 27934  0055A6  6EDF               	movwf	indf2,c
 27935  0055A8  2A0D               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 27936  0055AA  D7F0               	goto	i2l7209
 27937  0055AC                     i2l7219:
 27938                           
 27939                           ;USBapp.c: 157: }
 27940                           ;USBapp.c: 158: NextUSBOut = 0;
 27941  0055AC  0E00               	movlw	0
 27942  0055AE  6E45               	movwf	_NextUSBOut,c
 27943                           
 27944                           ;USBapp.c: 159: LastRS232Out = 0;
 27945  0055B0  0E00               	movlw	0
 27946  0055B2  6E44               	movwf	_LastRS232Out,c
 27947  0055B4  0012               	return		;funcret
 27948  0055B6                     __end_of_USBapp_CdcEmulatorInitialize:
 27949                           	opt stack 0
 27950                           pclatu	equ	0xFFB
 27951                           pclath	equ	0xFFA
 27952                           tblptru	equ	0xFF8
 27953                           tblptrh	equ	0xFF7
 27954                           tblptrl	equ	0xFF6
 27955                           tablat	equ	0xFF5
 27956                           prodh	equ	0xFF4
 27957                           prodl	equ	0xFF3
 27958                           intcon	equ	0xFF2
 27959                           intcon3	equ	0xFF0
 27960                           indf0	equ	0xFEF
 27961                           postinc0	equ	0xFEE
 27962                           fsr0h	equ	0xFEA
 27963                           fsr0l	equ	0xFE9
 27964                           wreg	equ	0xFE8
 27965                           indf1	equ	0xFE7
 27966                           postdec1	equ	0xFE5
 27967                           fsr1h	equ	0xFE2
 27968                           fsr1l	equ	0xFE1
 27969                           indf2	equ	0xFDF
 27970                           postinc2	equ	0xFDE
 27971                           postdec2	equ	0xFDD
 27972                           plusw2	equ	0xFDB
 27973                           fsr2h	equ	0xFDA
 27974                           fsr2l	equ	0xFD9
 27975                           status	equ	0xFD8
 27976                           
 27977 ;; *************** function _CDCInitEP *****************
 27978 ;; Defined at:
 27979 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 27980 ;; Parameters:    Size  Location     Type
 27981 ;;		None
 27982 ;; Auto vars:     Size  Location     Type
 27983 ;;		None
 27984 ;; Return value:  Size  Location     Type
 27985 ;;		None               void
 27986 ;; Registers used:
 27987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27988 ;; Tracked objects:
 27989 ;;		On entry : 0/0
 27990 ;;		On exit  : 0/0
 27991 ;;		Unchanged: 0/0
 27992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27993 ;;      Params:         0       0       0       0       0       0       0       0       0
 27994 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27995 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27996 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27997 ;;Total ram usage:        0 bytes
 27998 ;; Hardware stack levels used:    1
 27999 ;; Hardware stack levels required when called:    2
 28000 ;; This function calls:
 28001 ;;		_USBEnableEndpoint
 28002 ;;		i2_USBTransferOnePacket
 28003 ;; This function is called by:
 28004 ;;		_USBapp_CdcEmulatorInitialize
 28005 ;; This function uses a non-reentrant model
 28006 ;;
 28007                           
 28008                           	psect	text121
 28009  005230                     __ptext121:
 28010                           	opt stack 0
 28011  005230                     _CDCInitEP:
 28012                           	opt stack 15
 28013                           
 28014                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 28015                           
 28016                           ;incstack = 0
 28017  005230  0E00               	movlw	0
 28018  005232  0101               	movlb	1	; () banked
 28019  005234  6FEA               	movwf	_line_coding& (0+255),b
 28020  005236  0E4B               	movlw	75
 28021  005238  6FEB               	movwf	(_line_coding+1)& (0+255),b
 28022  00523A  0E00               	movlw	0
 28023  00523C  6FEC               	movwf	(_line_coding+2)& (0+255),b
 28024  00523E  0E00               	movlw	0
 28025  005240  6FED               	movwf	(_line_coding+3)& (0+255),b
 28026                           
 28027                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 28028  005242  0E00               	movlw	0
 28029  005244  0101               	movlb	1	; () banked
 28030  005246  6FEE               	movwf	(_line_coding+4)& (0+255),b
 28031                           
 28032                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 28033  005248  0E00               	movlw	0
 28034  00524A  0101               	movlb	1	; () banked
 28035  00524C  6FEF               	movwf	(_line_coding+5)& (0+255),b
 28036                           
 28037                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 28038  00524E  0E08               	movlw	8
 28039  005250  0101               	movlb	1	; () banked
 28040  005252  6FF0               	movwf	(_line_coding+6)& (0+255),b
 28041                           
 28042                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 28043  005254  0E00               	movlw	0
 28044  005256  0100               	movlb	0	; () banked
 28045  005258  6F90               	movwf	_cdc_rx_len& (0+255),b
 28046                           
 28047                           ; BSR set to: 0
 28048                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 28049  00525A  0E1A               	movlw	26
 28050  00525C  6E09               	movwf	USBEnableEndpoint@options,c
 28051  00525E  0E01               	movlw	1
 28052  005260  EC17  F02C         	call	_USBEnableEndpoint
 28053                           
 28054                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 28055  005264  0E1E               	movlw	30
 28056  005266  6E09               	movwf	USBEnableEndpoint@options,c
 28057  005268  0E02               	movlw	2
 28058  00526A  EC17  F02C         	call	_USBEnableEndpoint
 28059                           
 28060                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 28061  00526E  0E00               	movlw	0
 28062  005270  6E01               	movwf	i2USBTransferOnePacket@dir,c
 28063  005272  0E40               	movlw	64
 28064  005274  6E02               	movwf	i2USBTransferOnePacket@data,c
 28065  005276  0E05               	movlw	5
 28066  005278  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 28067  00527A  0E40               	movlw	64
 28068  00527C  6E04               	movwf	i2USBTransferOnePacket@len,c
 28069  00527E  0E02               	movlw	2
 28070  005280  ECBB  F021         	call	i2_USBTransferOnePacket
 28071  005284  C001  F074         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 28072  005288  C002  F075         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 28073                           
 28074                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 28075  00528C  0E00               	movlw	0
 28076  00528E  0100               	movlb	0	; () banked
 28077  005290  6F72               	movwf	_CDCDataInHandle& (0+255),b
 28078  005292  0E00               	movlw	0
 28079  005294  0100               	movlb	0	; () banked
 28080  005296  6F73               	movwf	(_CDCDataInHandle+1)& (0+255),b
 28081                           
 28082                           ; BSR set to: 0
 28083                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 28084  005298  0E00               	movlw	0
 28085  00529A  6E4A               	movwf	_cdc_trf_state,c
 28086                           
 28087                           ; BSR set to: 0
 28088  00529C  0012               	return		;funcret
 28089  00529E                     __end_of_CDCInitEP:
 28090                           	opt stack 0
 28091                           pclatu	equ	0xFFB
 28092                           pclath	equ	0xFFA
 28093                           tblptru	equ	0xFF8
 28094                           tblptrh	equ	0xFF7
 28095                           tblptrl	equ	0xFF6
 28096                           tablat	equ	0xFF5
 28097                           prodh	equ	0xFF4
 28098                           prodl	equ	0xFF3
 28099                           intcon	equ	0xFF2
 28100                           intcon3	equ	0xFF0
 28101                           indf0	equ	0xFEF
 28102                           postinc0	equ	0xFEE
 28103                           fsr0h	equ	0xFEA
 28104                           fsr0l	equ	0xFE9
 28105                           wreg	equ	0xFE8
 28106                           indf1	equ	0xFE7
 28107                           postdec1	equ	0xFE5
 28108                           fsr1h	equ	0xFE2
 28109                           fsr1l	equ	0xFE1
 28110                           indf2	equ	0xFDF
 28111                           postinc2	equ	0xFDE
 28112                           postdec2	equ	0xFDD
 28113                           plusw2	equ	0xFDB
 28114                           fsr2h	equ	0xFDA
 28115                           fsr2l	equ	0xFD9
 28116                           status	equ	0xFD8
 28117                           
 28118 ;; *************** function i2_USBTransferOnePacket *****************
 28119 ;; Defined at:
 28120 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 28121 ;; Parameters:    Size  Location     Type
 28122 ;;  ep              1    wreg     unsigned char 
 28123 ;;  dir             1    0[COMRAM] unsigned char 
 28124 ;;  data            2    1[COMRAM] PTR unsigned char 
 28125 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 28126 ;;  len             1    3[COMRAM] unsigned char 
 28127 ;; Auto vars:     Size  Location     Type
 28128 ;;  ep              1    4[COMRAM] unsigned char 
 28129 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 28130 ;;		 -> BDT(48), NULL(0), 
 28131 ;; Return value:  Size  Location     Type
 28132 ;;                  2    0[COMRAM] PTR void 
 28133 ;; Registers used:
 28134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28135 ;; Tracked objects:
 28136 ;;		On entry : 0/0
 28137 ;;		On exit  : 0/0
 28138 ;;		Unchanged: 0/0
 28139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28140 ;;      Params:         4       0       0       0       0       0       0       0       0
 28141 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28142 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28143 ;;      Totals:         7       0       0       0       0       0       0       0       0
 28144 ;;Total ram usage:        7 bytes
 28145 ;; Hardware stack levels used:    1
 28146 ;; This function calls:
 28147 ;;		Nothing
 28148 ;; This function is called by:
 28149 ;;		_CDCInitEP
 28150 ;; This function uses a non-reentrant model
 28151 ;;
 28152                           
 28153                           	psect	text122
 28154  004376                     __ptext122:
 28155                           	opt stack 0
 28156  004376                     i2_USBTransferOnePacket:
 28157                           	opt stack 16
 28158                           
 28159                           ; BSR set to: 0
 28160                           ;incstack = 0
 28161                           ;i2USBTransferOnePacket@ep stored from wreg
 28162  004376  6E05               	movwf	i2USBTransferOnePacket@ep,c
 28163                           
 28164                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 28165                           ;usb_device.c: 762: if(dir != 0)
 28166  004378  5001               	movf	i2USBTransferOnePacket@dir,w,c
 28167  00437A  B4D8               	btfsc	status,2,c
 28168  00437C  D007               	goto	i2l7091
 28169                           
 28170                           ;usb_device.c: 763: {
 28171                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 28172  00437E  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28173  004380  0D02               	mullw	2
 28174  004382  0E36               	movlw	low _pBDTEntryIn
 28175  004384  24F3               	addwf	prodl,w,c
 28176  004386  6ED9               	movwf	fsr2l,c
 28177  004388  0E00               	movlw	high _pBDTEntryIn
 28178  00438A  D006               	goto	L22
 28179  00438C                     i2l7091:
 28180                           
 28181                           ;usb_device.c: 767: else
 28182                           ;usb_device.c: 768: {
 28183                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 28184  00438C  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28185  00438E  0D02               	mullw	2
 28186  004390  0E60               	movlw	low _pBDTEntryOut
 28187  004392  24F3               	addwf	prodl,w,c
 28188  004394  6ED9               	movwf	fsr2l,c
 28189  004396  0E00               	movlw	high _pBDTEntryOut
 28190  004398                     L22:
 28191  004398  20F4               	addwfc	prodh,w,c
 28192  00439A  6EDA               	movwf	fsr2h,c
 28193  00439C  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 28194  0043A0  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 28195  0043A4  D000               	goto	i2l7093
 28196  0043A6                     i2l7093:
 28197                           
 28198                           ;usb_device.c: 771: }
 28199                           ;usb_device.c: 775: if(handle == 0)
 28200  0043A6  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28201  0043A8  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 28202  0043AA  A4D8               	btfss	status,2,c
 28203  0043AC  D005               	goto	i2l7099
 28204                           
 28205                           ;usb_device.c: 776: {
 28206                           ;usb_device.c: 777: return 0;
 28207  0043AE  0E00               	movlw	0
 28208  0043B0  6E01               	movwf	?i2_USBTransferOnePacket,c
 28209  0043B2  0E00               	movlw	0
 28210  0043B4  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 28211  0043B6  0012               	return	
 28212  0043B8                     i2l7099:
 28213                           
 28214                           ;usb_device.c: 778: }
 28215                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 28216  0043B8  EE20 F002          	lfsr	2,2
 28217  0043BC  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28218  0043BE  26D9               	addwf	fsr2l,f,c
 28219  0043C0  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 28220  0043C2  22DA               	addwfc	fsr2h,f,c
 28221  0043C4  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 28222  0043C8  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28223                           
 28224                           ;usb_device.c: 781: handle->CNT = len;
 28225  0043CC  EE20 F001          	lfsr	2,1
 28226  0043D0  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28227  0043D2  26D9               	addwf	fsr2l,f,c
 28228  0043D4  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 28229  0043D6  22DA               	addwfc	fsr2h,f,c
 28230  0043D8  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28231                           
 28232                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 28233  0043DC  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28234  0043E0  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28235  0043E4  0E40               	movlw	64
 28236  0043E6  16DF               	andwf	indf2,f,c
 28237                           
 28238                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 28239  0043E8  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28240  0043EC  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28241  0043F0  0E00               	movlw	0
 28242  0043F2  86DB               	bsf	plusw2,3,c
 28243                           
 28244                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 28245  0043F4  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28246  0043F8  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28247  0043FC  0E00               	movlw	0
 28248  0043FE  8EDB               	bsf	plusw2,7,c
 28249                           
 28250                           ;usb_device.c: 787: if(dir != 0)
 28251  004400  5001               	movf	i2USBTransferOnePacket@dir,w,c
 28252  004402  B4D8               	btfsc	status,2,c
 28253  004404  D007               	goto	i2l7111
 28254                           
 28255                           ;usb_device.c: 788: {
 28256                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28257  004406  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28258  004408  0D02               	mullw	2
 28259  00440A  0E36               	movlw	low _pBDTEntryIn
 28260  00440C  24F3               	addwf	prodl,w,c
 28261  00440E  6ED9               	movwf	fsr2l,c
 28262  004410  0E00               	movlw	high _pBDTEntryIn
 28263  004412  D006               	goto	L23
 28264  004414                     i2l7111:
 28265                           
 28266                           ;usb_device.c: 792: else
 28267                           ;usb_device.c: 793: {
 28268                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28269  004414  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28270  004416  0D02               	mullw	2
 28271  004418  0E60               	movlw	low _pBDTEntryOut
 28272  00441A  24F3               	addwf	prodl,w,c
 28273  00441C  6ED9               	movwf	fsr2l,c
 28274  00441E  0E00               	movlw	high _pBDTEntryOut
 28275  004420                     L23:
 28276  004420  20F4               	addwfc	prodh,w,c
 28277  004422  6EDA               	movwf	fsr2h,c
 28278  004424  0E04               	movlw	4
 28279  004426  1ADF               	xorwf	indf2,f,c
 28280  004428  D000               	goto	i2l7113
 28281  00442A                     i2l7113:
 28282                           
 28283                           ;usb_device.c: 796: }
 28284                           ;usb_device.c: 797: return (void*)handle;
 28285  00442A  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28286  00442E  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28287  004432  0012               	return	
 28288  004434  0012               	return		;funcret
 28289  004436                     __end_ofi2_USBTransferOnePacket:
 28290                           	opt stack 0
 28291                           pclatu	equ	0xFFB
 28292                           pclath	equ	0xFFA
 28293                           tblptru	equ	0xFF8
 28294                           tblptrh	equ	0xFF7
 28295                           tblptrl	equ	0xFF6
 28296                           tablat	equ	0xFF5
 28297                           prodh	equ	0xFF4
 28298                           prodl	equ	0xFF3
 28299                           intcon	equ	0xFF2
 28300                           intcon3	equ	0xFF0
 28301                           indf0	equ	0xFEF
 28302                           postinc0	equ	0xFEE
 28303                           fsr0h	equ	0xFEA
 28304                           fsr0l	equ	0xFE9
 28305                           wreg	equ	0xFE8
 28306                           indf1	equ	0xFE7
 28307                           postdec1	equ	0xFE5
 28308                           fsr1h	equ	0xFE2
 28309                           fsr1l	equ	0xFE1
 28310                           indf2	equ	0xFDF
 28311                           postinc2	equ	0xFDE
 28312                           postdec2	equ	0xFDD
 28313                           plusw2	equ	0xFDB
 28314                           fsr2h	equ	0xFDA
 28315                           fsr2l	equ	0xFD9
 28316                           status	equ	0xFD8
 28317                           
 28318 ;; *************** function _USBEnableEndpoint *****************
 28319 ;; Defined at:
 28320 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 28321 ;; Parameters:    Size  Location     Type
 28322 ;;  ep              1    wreg     unsigned char 
 28323 ;;  options         1    8[COMRAM] unsigned char 
 28324 ;; Auto vars:     Size  Location     Type
 28325 ;;  ep              1   11[COMRAM] unsigned char 
 28326 ;;  p               2    9[COMRAM] PTR unsigned char 
 28327 ;;		 -> UEP0(1), 
 28328 ;; Return value:  Size  Location     Type
 28329 ;;		None               void
 28330 ;; Registers used:
 28331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28332 ;; Tracked objects:
 28333 ;;		On entry : 0/0
 28334 ;;		On exit  : 0/0
 28335 ;;		Unchanged: 0/0
 28336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28337 ;;      Params:         1       0       0       0       0       0       0       0       0
 28338 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28339 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28340 ;;      Totals:         4       0       0       0       0       0       0       0       0
 28341 ;;Total ram usage:        4 bytes
 28342 ;; Hardware stack levels used:    1
 28343 ;; Hardware stack levels required when called:    1
 28344 ;; This function calls:
 28345 ;;		_USBConfigureEndpoint
 28346 ;; This function is called by:
 28347 ;;		_CDCInitEP
 28348 ;; This function uses a non-reentrant model
 28349 ;;
 28350                           
 28351                           	psect	text123
 28352  00582E                     __ptext123:
 28353                           	opt stack 0
 28354  00582E                     _USBEnableEndpoint:
 28355                           	opt stack 15
 28356                           
 28357                           ;incstack = 0
 28358                           ;USBEnableEndpoint@ep stored from wreg
 28359  00582E  6E0C               	movwf	USBEnableEndpoint@ep,c
 28360                           
 28361                           ;usb_device.c: 647: unsigned char* p;
 28362                           ;usb_device.c: 651: if(options & 0x04)
 28363  005830  A409               	btfss	USBEnableEndpoint@options,2,c
 28364  005832  D006               	goto	i2l7079
 28365                           
 28366                           ;usb_device.c: 652: {
 28367                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 28368  005834  0E00               	movlw	0
 28369  005836  6E01               	movwf	USBConfigureEndpoint@direction,c
 28370  005838  500C               	movf	USBEnableEndpoint@ep,w,c
 28371  00583A  EC86  F025         	call	_USBConfigureEndpoint
 28372  00583E  D000               	goto	i2l7079
 28373  005840                     i2l7079:
 28374                           
 28375                           ;usb_device.c: 654: }
 28376                           ;usb_device.c: 655: if(options & 0x02)
 28377  005840  A209               	btfss	USBEnableEndpoint@options,1,c
 28378  005842  D006               	goto	i2l7083
 28379                           
 28380                           ;usb_device.c: 656: {
 28381                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 28382  005844  0E01               	movlw	1
 28383  005846  6E01               	movwf	USBConfigureEndpoint@direction,c
 28384  005848  500C               	movf	USBEnableEndpoint@ep,w,c
 28385  00584A  EC86  F025         	call	_USBConfigureEndpoint
 28386  00584E  D000               	goto	i2l7083
 28387  005850                     i2l7083:
 28388                           
 28389                           ;usb_device.c: 658: }
 28390                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 28391  005850  500C               	movf	USBEnableEndpoint@ep,w,c
 28392  005852  0D01               	mullw	1
 28393  005854  0E6A               	movlw	106
 28394  005856  24F3               	addwf	prodl,w,c
 28395  005858  6E0A               	movwf	USBEnableEndpoint@p,c
 28396  00585A  0E0F               	movlw	15
 28397  00585C  20F4               	addwfc	prodh,w,c
 28398  00585E  6E0B               	movwf	USBEnableEndpoint@p+1,c
 28399                           
 28400                           ;usb_device.c: 664: *p = options;
 28401  005860  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28402  005864  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28403  005868  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 28404  00586C  0012               	return		;funcret
 28405  00586E                     __end_of_USBEnableEndpoint:
 28406                           	opt stack 0
 28407                           pclatu	equ	0xFFB
 28408                           pclath	equ	0xFFA
 28409                           tblptru	equ	0xFF8
 28410                           tblptrh	equ	0xFF7
 28411                           tblptrl	equ	0xFF6
 28412                           tablat	equ	0xFF5
 28413                           prodh	equ	0xFF4
 28414                           prodl	equ	0xFF3
 28415                           intcon	equ	0xFF2
 28416                           intcon3	equ	0xFF0
 28417                           indf0	equ	0xFEF
 28418                           postinc0	equ	0xFEE
 28419                           fsr0h	equ	0xFEA
 28420                           fsr0l	equ	0xFE9
 28421                           wreg	equ	0xFE8
 28422                           indf1	equ	0xFE7
 28423                           postdec1	equ	0xFE5
 28424                           fsr1h	equ	0xFE2
 28425                           fsr1l	equ	0xFE1
 28426                           indf2	equ	0xFDF
 28427                           postinc2	equ	0xFDE
 28428                           postdec2	equ	0xFDD
 28429                           plusw2	equ	0xFDB
 28430                           fsr2h	equ	0xFDA
 28431                           fsr2l	equ	0xFD9
 28432                           status	equ	0xFD8
 28433                           
 28434 ;; *************** function _USBConfigureEndpoint *****************
 28435 ;; Defined at:
 28436 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 28437 ;; Parameters:    Size  Location     Type
 28438 ;;  EPNum           1    wreg     unsigned char 
 28439 ;;  direction       1    0[COMRAM] unsigned char 
 28440 ;; Auto vars:     Size  Location     Type
 28441 ;;  EPNum           1    5[COMRAM] unsigned char 
 28442 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28443 ;;		 -> BDT(48), 
 28444 ;; Return value:  Size  Location     Type
 28445 ;;		None               void
 28446 ;; Registers used:
 28447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28448 ;; Tracked objects:
 28449 ;;		On entry : 0/0
 28450 ;;		On exit  : 0/0
 28451 ;;		Unchanged: 0/0
 28452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28453 ;;      Params:         1       0       0       0       0       0       0       0       0
 28454 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28455 ;;      Temps:          4       0       0       0       0       0       0       0       0
 28456 ;;      Totals:         8       0       0       0       0       0       0       0       0
 28457 ;;Total ram usage:        8 bytes
 28458 ;; Hardware stack levels used:    1
 28459 ;; This function calls:
 28460 ;;		Nothing
 28461 ;; This function is called by:
 28462 ;;		_USBEnableEndpoint
 28463 ;; This function uses a non-reentrant model
 28464 ;;
 28465                           
 28466                           	psect	text124
 28467  004B0C                     __ptext124:
 28468                           	opt stack 0
 28469  004B0C                     _USBConfigureEndpoint:
 28470                           	opt stack 15
 28471                           
 28472                           ;incstack = 0
 28473                           ;USBConfigureEndpoint@EPNum stored from wreg
 28474  004B0C  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 28475                           
 28476                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 28477                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 28478  004B0E  0E00               	movlw	0
 28479  004B10  6E07               	movwf	USBConfigureEndpoint@handle,c
 28480  004B12  0E04               	movlw	4
 28481  004B14  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 28482                           
 28483                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 28484  004B16  5001               	movf	USBConfigureEndpoint@direction,w,c
 28485  004B18  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 28486  004B1A  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 28487  004B1C  90D8               	bcf	status,0,c
 28488  004B1E  3602               	rlcf	??_USBConfigureEndpoint,f,c
 28489  004B20  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 28490  004B22  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28491  004B24  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 28492  004B26  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 28493  004B28  90D8               	bcf	status,0,c
 28494  004B2A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28495  004B2C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28496  004B2E  90D8               	bcf	status,0,c
 28497  004B30  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28498  004B32  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28499  004B34  5002               	movf	??_USBConfigureEndpoint,w,c
 28500  004B36  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 28501  004B38  5003               	movf	??_USBConfigureEndpoint+1,w,c
 28502  004B3A  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 28503  004B3C  90D8               	bcf	status,0,c
 28504  004B3E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28505  004B40  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28506  004B42  90D8               	bcf	status,0,c
 28507  004B44  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28508  004B46  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28509  004B48  5004               	movf	??_USBConfigureEndpoint+2,w,c
 28510  004B4A  2607               	addwf	USBConfigureEndpoint@handle,f,c
 28511  004B4C  5005               	movf	??_USBConfigureEndpoint+3,w,c
 28512  004B4E  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 28513                           
 28514                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 28515  004B50  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28516  004B54  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28517  004B58  9EDF               	bcf	indf2,7,c
 28518                           
 28519                           ;usb_device.c: 1242: if(direction == 0)
 28520  004B5A  5001               	movf	USBConfigureEndpoint@direction,w,c
 28521  004B5C  A4D8               	btfss	status,2,c
 28522  004B5E  D007               	goto	i2l7055
 28523                           
 28524                           ;usb_device.c: 1243: {
 28525                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 28526  004B60  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28527  004B62  0D02               	mullw	2
 28528  004B64  0E60               	movlw	low _pBDTEntryOut
 28529  004B66  24F3               	addwf	prodl,w,c
 28530  004B68  6ED9               	movwf	fsr2l,c
 28531  004B6A  0E00               	movlw	high _pBDTEntryOut
 28532  004B6C  D006               	goto	L24
 28533  004B6E                     i2l7055:
 28534                           
 28535                           ;usb_device.c: 1246: else
 28536                           ;usb_device.c: 1247: {
 28537                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 28538  004B6E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28539  004B70  0D02               	mullw	2
 28540  004B72  0E36               	movlw	low _pBDTEntryIn
 28541  004B74  24F3               	addwf	prodl,w,c
 28542  004B76  6ED9               	movwf	fsr2l,c
 28543  004B78  0E00               	movlw	high _pBDTEntryIn
 28544  004B7A                     L24:
 28545  004B7A  20F4               	addwfc	prodh,w,c
 28546  004B7C  6EDA               	movwf	fsr2h,c
 28547  004B7E  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28548  004B82  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28549  004B86  D000               	goto	i2l7057
 28550  004B88                     i2l7057:
 28551                           
 28552                           ;usb_device.c: 1249: }
 28553                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 28554  004B88  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28555  004B8C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28556  004B90  9CDF               	bcf	indf2,6,c
 28557                           
 28558                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 28559  004B92  EE20 F004          	lfsr	2,4
 28560  004B96  5007               	movf	USBConfigureEndpoint@handle,w,c
 28561  004B98  26D9               	addwf	fsr2l,f,c
 28562  004B9A  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 28563  004B9C  22DA               	addwfc	fsr2h,f,c
 28564  004B9E  8CDF               	bsf	indf2,6,c
 28565  004BA0  0012               	return		;funcret
 28566  004BA2                     __end_of_USBConfigureEndpoint:
 28567                           	opt stack 0
 28568                           pclatu	equ	0xFFB
 28569                           pclath	equ	0xFFA
 28570                           tblptru	equ	0xFF8
 28571                           tblptrh	equ	0xFF7
 28572                           tblptrl	equ	0xFF6
 28573                           tablat	equ	0xFF5
 28574                           prodh	equ	0xFF4
 28575                           prodl	equ	0xFF3
 28576                           intcon	equ	0xFF2
 28577                           intcon3	equ	0xFF0
 28578                           indf0	equ	0xFEF
 28579                           postinc0	equ	0xFEE
 28580                           fsr0h	equ	0xFEA
 28581                           fsr0l	equ	0xFE9
 28582                           wreg	equ	0xFE8
 28583                           indf1	equ	0xFE7
 28584                           postdec1	equ	0xFE5
 28585                           fsr1h	equ	0xFE2
 28586                           fsr1l	equ	0xFE1
 28587                           indf2	equ	0xFDF
 28588                           postinc2	equ	0xFDE
 28589                           postdec2	equ	0xFDD
 28590                           plusw2	equ	0xFDB
 28591                           fsr2h	equ	0xFDA
 28592                           fsr2l	equ	0xFD9
 28593                           status	equ	0xFD8
 28594                           
 28595 ;; *************** function _USBCheckCDCRequest *****************
 28596 ;; Defined at:
 28597 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 28598 ;; Parameters:    Size  Location     Type
 28599 ;;		None
 28600 ;; Auto vars:     Size  Location     Type
 28601 ;;		None
 28602 ;; Return value:  Size  Location     Type
 28603 ;;		None               void
 28604 ;; Registers used:
 28605 ;;		wreg, status,2, status,0
 28606 ;; Tracked objects:
 28607 ;;		On entry : 0/0
 28608 ;;		On exit  : 0/0
 28609 ;;		Unchanged: 0/0
 28610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28611 ;;      Params:         0       0       0       0       0       0       0       0       0
 28612 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28613 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28614 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28615 ;;Total ram usage:        0 bytes
 28616 ;; Hardware stack levels used:    1
 28617 ;; This function calls:
 28618 ;;		Nothing
 28619 ;; This function is called by:
 28620 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28621 ;; This function uses a non-reentrant model
 28622 ;;
 28623                           
 28624                           	psect	text125
 28625  0044F2                     __ptext125:
 28626                           	opt stack 0
 28627  0044F2                     _USBCheckCDCRequest:
 28628                           	opt stack 18
 28629                           
 28630                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 28631                           
 28632                           ;incstack = 0
 28633  0044F2  0104               	movlb	4	; () banked
 28634  0044F4  5130               	movf	48,w,b	;volatile
 28635  0044F6  0B1F               	andlw	31
 28636  0044F8  06E8               	decf	wreg,f,c
 28637  0044FA  A4D8               	btfss	status,2,c
 28638  0044FC  0012               	return	
 28639  0044FE  D001               	goto	i2l7225
 28640                           
 28641                           ; BSR set to: 4
 28642  004500  0012               	return	
 28643  004502                     i2l7225:
 28644                           
 28645                           ; BSR set to: 4
 28646                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 28647  004502  0104               	movlb	4	; () banked
 28648  004504  3930               	swapf	48,w,b	;volatile
 28649  004506  32E8               	rrcf	wreg,f,c
 28650  004508  0B03               	andlw	3
 28651  00450A  06E8               	decf	wreg,f,c
 28652  00450C  A4D8               	btfss	status,2,c
 28653  00450E  0012               	return	
 28654  004510  D001               	goto	i2l7229
 28655                           
 28656                           ; BSR set to: 4
 28657  004512  0012               	return	
 28658  004514                     i2l7229:
 28659                           
 28660                           ; BSR set to: 4
 28661                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 28662                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 28663  004514  0104               	movlb	4	; () banked
 28664  004516  5134               	movf	52,w,b	;volatile
 28665  004518  B4D8               	btfsc	status,2,c
 28666  00451A  D035               	goto	i2l7259
 28667                           
 28668                           ; BSR set to: 4
 28669  00451C  0104               	movlb	4	; () banked
 28670  00451E  0534               	decf	52,w,b	;volatile
 28671  004520  A4D8               	btfss	status,2,c
 28672  004522  0012               	return	
 28673  004524  D030               	goto	i2l7259
 28674                           
 28675                           ; BSR set to: 4
 28676  004526  0012               	return	
 28677                           
 28678                           ; BSR set to: 4
 28679                           ;usb_device_cdc.c: 203: switch(SetupPkt.bRequest)
 28680  004528  D02E               	goto	i2l7259
 28681  00452A                     i2l7235:
 28682                           
 28683                           ; BSR set to: 4
 28684                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28685  00452A  0EE2               	movlw	low _dummy_encapsulated_cmd_response
 28686  00452C  6E52               	movwf	_inPipes,c	;volatile
 28687  00452E  0E01               	movlw	high _dummy_encapsulated_cmd_response
 28688  004530  6E53               	movwf	_inPipes+1,c	;volatile
 28689                           
 28690                           ; BSR set to: 4
 28691                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 28692  004532  0E00               	movlw	0
 28693  004534  6E57               	movwf	_inPipes+5,c	;volatile
 28694  004536  0E08               	movlw	8
 28695  004538  6E56               	movwf	_inPipes+4,c	;volatile
 28696                           
 28697                           ; BSR set to: 4
 28698                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28699  00453A  8055               	bsf	_inPipes+3,0,c	;volatile
 28700                           
 28701                           ; BSR set to: 4
 28702                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 28703  00453C  8E55               	bsf	_inPipes+3,7,c	;volatile
 28704                           
 28705                           ;usb_device_cdc.c: 212: break;
 28706  00453E  0012               	return	
 28707  004540                     i2l7243:
 28708                           
 28709                           ; BSR set to: 4
 28710                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28711  004540  0EE2               	movlw	low _dummy_encapsulated_cmd_response
 28712  004542  6E52               	movwf	_inPipes,c	;volatile
 28713  004544  0E01               	movlw	high _dummy_encapsulated_cmd_response
 28714  004546  6E53               	movwf	_inPipes+1,c	;volatile
 28715                           
 28716                           ; BSR set to: 4
 28717                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 28718  004548  8E55               	bsf	_inPipes+3,7,c	;volatile
 28719                           
 28720                           ;usb_device_cdc.c: 217: break;
 28721  00454A  0012               	return	
 28722  00454C                     i2l2021:
 28723                           
 28724                           ; BSR set to: 4
 28725                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 28726  00454C  C436 F032          	movff	1078,_outPipes+4	;volatile
 28727  004550  C437 F033          	movff	1079,_outPipes+5	;volatile
 28728                           
 28729                           ; BSR set to: 4
 28730                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 28731  004554  0ED8               	movlw	low _cdc_notice
 28732  004556  6E2E               	movwf	_outPipes,c	;volatile
 28733  004558  0E01               	movlw	high _cdc_notice
 28734  00455A  6E2F               	movwf	_outPipes+1,c	;volatile
 28735                           
 28736                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 28737  00455C  0EB6               	movlw	low _USART_mySetLineCodingHandler
 28738  00455E  6E34               	movwf	_outPipes+6,c	;volatile
 28739  004560  0E55               	movlw	high _USART_mySetLineCodingHandler
 28740  004562  6E35               	movwf	_outPipes+7,c	;volatile
 28741                           
 28742                           ; BSR set to: 4
 28743                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 28744  004564  8E31               	bsf	_outPipes+3,7,c	;volatile
 28745                           
 28746                           ;usb_device_cdc.c: 224: break;
 28747  004566  0012               	return	
 28748  004568                     i2l7251:
 28749                           
 28750                           ; BSR set to: 4
 28751                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 28752  004568  0EEA               	movlw	low _line_coding
 28753  00456A  6E52               	movwf	_inPipes,c	;volatile
 28754  00456C  0E01               	movlw	high _line_coding
 28755  00456E  6E53               	movwf	_inPipes+1,c	;volatile
 28756                           
 28757                           ; BSR set to: 4
 28758  004570  0E00               	movlw	0
 28759  004572  6E57               	movwf	_inPipes+5,c	;volatile
 28760  004574  0E07               	movlw	7
 28761  004576  6E56               	movwf	_inPipes+4,c	;volatile
 28762                           
 28763                           ; BSR set to: 4
 28764  004578  0EC1               	movlw	193
 28765  00457A  6E55               	movwf	_inPipes+3,c	;volatile
 28766                           
 28767                           ;usb_device_cdc.c: 231: break;
 28768  00457C  0012               	return	
 28769  00457E                     i2l2023:
 28770                           
 28771                           ; BSR set to: 4
 28772                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 28773  00457E  C432 F092          	movff	1074,_control_signal_bitmap	;volatile
 28774                           
 28775                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 28776  004582  8E55               	bsf	_inPipes+3,7,c	;volatile
 28777                           
 28778                           ; BSR set to: 4
 28779                           ;usb_device_cdc.c: 260: }
 28780                           
 28781                           ; BSR set to: 4
 28782                           ;usb_device_cdc.c: 259: break;
 28783                           
 28784                           ;usb_device_cdc.c: 258: default:
 28785                           
 28786                           ;usb_device_cdc.c: 256: break;
 28787  004584  0012               	return	
 28788  004586                     i2l7259:
 28789                           
 28790                           ; BSR set to: 4
 28791  004586  0104               	movlb	4	; () banked
 28792  004588  5131               	movf	49,w,b	;volatile
 28793                           
 28794                           ; Switch size 1, requested type "space"
 28795                           ; Number of cases is 5, Range of values is 0 to 34
 28796                           ; switch strategies available:
 28797                           ; Name         Instructions Cycles
 28798                           ; simple_byte           16     9 (average)
 28799                           ;	Chosen strategy is simple_byte
 28800  00458A  0A00               	xorlw	0	; case 0
 28801  00458C  B4D8               	btfsc	status,2,c
 28802  00458E  D7CD               	goto	i2l7235
 28803  004590  0A01               	xorlw	1	; case 1
 28804  004592  B4D8               	btfsc	status,2,c
 28805  004594  D7D5               	goto	i2l7243
 28806  004596  0A21               	xorlw	33	; case 32
 28807  004598  B4D8               	btfsc	status,2,c
 28808  00459A  D7D8               	goto	i2l2021
 28809  00459C  0A01               	xorlw	1	; case 33
 28810  00459E  B4D8               	btfsc	status,2,c
 28811  0045A0  D7E3               	goto	i2l7251
 28812  0045A2  0A03               	xorlw	3	; case 34
 28813  0045A4  A4D8               	btfss	status,2,c
 28814  0045A6  0012               	return	
 28815  0045A8  D7EA               	goto	i2l2023
 28816                           
 28817                           ; BSR set to: 4
 28818                           
 28819                           ; BSR set to: 4
 28820  0045AA  0012               	return		;funcret
 28821  0045AC                     __end_of_USBCheckCDCRequest:
 28822                           	opt stack 0
 28823                           pclatu	equ	0xFFB
 28824                           pclath	equ	0xFFA
 28825                           tblptru	equ	0xFF8
 28826                           tblptrh	equ	0xFF7
 28827                           tblptrl	equ	0xFF6
 28828                           tablat	equ	0xFF5
 28829                           prodh	equ	0xFF4
 28830                           prodl	equ	0xFF3
 28831                           intcon	equ	0xFF2
 28832                           intcon3	equ	0xFF0
 28833                           indf0	equ	0xFEF
 28834                           postinc0	equ	0xFEE
 28835                           fsr0h	equ	0xFEA
 28836                           fsr0l	equ	0xFE9
 28837                           wreg	equ	0xFE8
 28838                           indf1	equ	0xFE7
 28839                           postdec1	equ	0xFE5
 28840                           fsr1h	equ	0xFE2
 28841                           fsr1l	equ	0xFE1
 28842                           indf2	equ	0xFDF
 28843                           postinc2	equ	0xFDE
 28844                           postdec2	equ	0xFDD
 28845                           plusw2	equ	0xFDB
 28846                           fsr2h	equ	0xFDA
 28847                           fsr2l	equ	0xFD9
 28848                           status	equ	0xFD8
 28849                           
 28850 ;; *************** function _USBCtrlTrfOutHandler *****************
 28851 ;; Defined at:
 28852 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 28853 ;; Parameters:    Size  Location     Type
 28854 ;;		None
 28855 ;; Auto vars:     Size  Location     Type
 28856 ;;		None
 28857 ;; Return value:  Size  Location     Type
 28858 ;;		None               void
 28859 ;; Registers used:
 28860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 28861 ;; Tracked objects:
 28862 ;;		On entry : 0/0
 28863 ;;		On exit  : 0/0
 28864 ;;		Unchanged: 0/0
 28865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28866 ;;      Params:         0       0       0       0       0       0       0       0       0
 28867 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28868 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28869 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28870 ;;Total ram usage:        0 bytes
 28871 ;; Hardware stack levels used:    1
 28872 ;; Hardware stack levels required when called:    3
 28873 ;; This function calls:
 28874 ;;		_USBCtrlTrfRxService
 28875 ;; This function is called by:
 28876 ;;		_USBCtrlEPService
 28877 ;; This function uses a non-reentrant model
 28878 ;;
 28879                           
 28880                           	psect	text126
 28881  00543A                     __ptext126:
 28882                           	opt stack 0
 28883  00543A                     _USBCtrlTrfOutHandler:
 28884                           	opt stack 15
 28885                           
 28886                           ;usb_device.c: 2171: if(controlTransferState == 2)
 28887                           
 28888                           ; BSR set to: 4
 28889                           ;incstack = 0
 28890  00543A  0E02               	movlw	2
 28891  00543C  184B               	xorwf	_controlTransferState,w,c	;volatile
 28892  00543E  A4D8               	btfss	status,2,c
 28893  005440  D003               	goto	i2l8915
 28894                           
 28895                           ;usb_device.c: 2172: {
 28896                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 28897  005442  ECC8  F016         	call	_USBCtrlTrfRxService	;wreg free
 28898                           
 28899                           ;usb_device.c: 2174: }
 28900  005446  0012               	return	
 28901  005448                     i2l8915:
 28902                           
 28903                           ;usb_device.c: 2175: else
 28904                           ;usb_device.c: 2176: {
 28905                           ;usb_device.c: 2179: controlTransferState = 0;
 28906  005448  0E00               	movlw	0
 28907  00544A  6E4B               	movwf	_controlTransferState,c	;volatile
 28908                           
 28909                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 28910  00544C  0100               	movlb	0	; () banked
 28911  00544E  5184               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 28912  005450  A4D8               	btfss	status,2,c
 28913  005452  D01F               	goto	i2l8923
 28914                           
 28915                           ; BSR set to: 0
 28916                           ;usb_device.c: 2187: {
 28917                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 28918  005454  EE20 F001          	lfsr	2,1
 28919  005458  5040               	movf	_pBDTEntryEP0OutNext,w,c
 28920  00545A  26D9               	addwf	fsr2l,f,c
 28921  00545C  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 28922  00545E  22DA               	addwfc	fsr2h,f,c
 28923  005460  0E08               	movlw	8
 28924  005462  6EDF               	movwf	indf2,c
 28925                           
 28926                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28927  005464  EE20 F002          	lfsr	2,2
 28928  005468  5040               	movf	_pBDTEntryEP0OutNext,w,c
 28929  00546A  26D9               	addwf	fsr2l,f,c
 28930  00546C  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 28931  00546E  22DA               	addwfc	fsr2h,f,c
 28932  005470  0E30               	movlw	48
 28933  005472  6EDE               	movwf	postinc2,c
 28934  005474  0E04               	movlw	4
 28935  005476  6EDD               	movwf	postdec2,c
 28936                           
 28937                           ; BSR set to: 0
 28938                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 28939  005478  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28940  00547C  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28941  005480  0E0C               	movlw	12
 28942  005482  6EDF               	movwf	indf2,c
 28943                           
 28944                           ; BSR set to: 0
 28945                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28946  005484  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28947  005488  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28948  00548C  0E00               	movlw	0
 28949  00548E  8EDB               	bsf	plusw2,7,c
 28950                           
 28951                           ;usb_device.c: 2192: }
 28952  005490  0012               	return	
 28953  005492                     i2l8923:
 28954                           
 28955                           ; BSR set to: 0
 28956                           ;usb_device.c: 2193: else
 28957                           ;usb_device.c: 2194: {
 28958                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 28959  005492  0E00               	movlw	0
 28960  005494  0100               	movlb	0	; () banked
 28961  005496  6F84               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 28962                           
 28963                           ; BSR set to: 0
 28964  005498  0012               	return	
 28965                           
 28966                           ; BSR set to: 0
 28967  00549A  0012               	return		;funcret
 28968  00549C                     __end_of_USBCtrlTrfOutHandler:
 28969                           	opt stack 0
 28970                           pclatu	equ	0xFFB
 28971                           pclath	equ	0xFFA
 28972                           tblptru	equ	0xFF8
 28973                           tblptrh	equ	0xFF7
 28974                           tblptrl	equ	0xFF6
 28975                           tablat	equ	0xFF5
 28976                           prodh	equ	0xFF4
 28977                           prodl	equ	0xFF3
 28978                           intcon	equ	0xFF2
 28979                           intcon3	equ	0xFF0
 28980                           indf0	equ	0xFEF
 28981                           postinc0	equ	0xFEE
 28982                           fsr0h	equ	0xFEA
 28983                           fsr0l	equ	0xFE9
 28984                           wreg	equ	0xFE8
 28985                           indf1	equ	0xFE7
 28986                           postdec1	equ	0xFE5
 28987                           fsr1h	equ	0xFE2
 28988                           fsr1l	equ	0xFE1
 28989                           indf2	equ	0xFDF
 28990                           postinc2	equ	0xFDE
 28991                           postdec2	equ	0xFDD
 28992                           plusw2	equ	0xFDB
 28993                           fsr2h	equ	0xFDA
 28994                           fsr2l	equ	0xFD9
 28995                           status	equ	0xFD8
 28996                           
 28997 ;; *************** function _USBCtrlTrfRxService *****************
 28998 ;; Defined at:
 28999 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 29000 ;; Parameters:    Size  Location     Type
 29001 ;;		None
 29002 ;; Auto vars:     Size  Location     Type
 29003 ;;  byteToRead      1   18[COMRAM] unsigned char 
 29004 ;;  i               1   17[COMRAM] unsigned char 
 29005 ;; Return value:  Size  Location     Type
 29006 ;;		None               void
 29007 ;; Registers used:
 29008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 29009 ;; Tracked objects:
 29010 ;;		On entry : 0/0
 29011 ;;		On exit  : 0/0
 29012 ;;		Unchanged: 0/0
 29013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29014 ;;      Params:         0       0       0       0       0       0       0       0       0
 29015 ;;      Locals:         2       0       0       0       0       0       0       0       0
 29016 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29017 ;;      Totals:         2       0       0       0       0       0       0       0       0
 29018 ;;Total ram usage:        2 bytes
 29019 ;; Hardware stack levels used:    1
 29020 ;; Hardware stack levels required when called:    2
 29021 ;; This function calls:
 29022 ;;		_USART_mySetLineCodingHandler
 29023 ;;		_USBCtrlEPAllowStatusStage
 29024 ;; This function is called by:
 29025 ;;		_USBCtrlTrfOutHandler
 29026 ;; This function uses a non-reentrant model
 29027 ;;
 29028                           
 29029                           	psect	text127
 29030  002D90                     __ptext127:
 29031                           	opt stack 0
 29032  002D90                     _USBCtrlTrfRxService:
 29033                           	opt stack 15
 29034                           
 29035                           ;usb_device.c: 1520: uint8_t byteToRead;
 29036                           ;usb_device.c: 1521: uint8_t i;
 29037                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 29038                           
 29039                           ;incstack = 0
 29040  002D90  EE20 F001          	lfsr	2,1
 29041  002D94  503E               	movf	_pBDTEntryEP0OutCurrent,w,c
 29042  002D96  26D9               	addwf	fsr2l,f,c
 29043  002D98  503F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29044  002D9A  22DA               	addwfc	fsr2h,f,c
 29045  002D9C  50DF               	movf	indf2,w,c
 29046  002D9E  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 29047                           
 29048                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 29049  002DA0  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29050  002DA2  5C32               	subwf	_outPipes+4,w,c	;volatile
 29051  002DA4  0E00               	movlw	0
 29052  002DA6  5833               	subwfb	_outPipes+5,w,c	;volatile
 29053  002DA8  B0D8               	btfsc	status,0,c
 29054  002DAA  D003               	goto	i2l7993
 29055                           
 29056                           ;usb_device.c: 1532: {
 29057                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 29058  002DAC  C032  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 29059  002DB0  D000               	goto	i2l7993
 29060  002DB2                     i2l7993:
 29061                           
 29062                           ;usb_device.c: 1534: }
 29063                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 29064  002DB2  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29065  002DB4  5E32               	subwf	_outPipes+4,f,c	;volatile
 29066  002DB6  0E00               	movlw	0
 29067  002DB8  5A33               	subwfb	_outPipes+5,f,c	;volatile
 29068                           
 29069                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 29070  002DBA  0E00               	movlw	0
 29071  002DBC  6E12               	movwf	USBCtrlTrfRxService@i,c
 29072  002DBE  D012               	goto	i2l8003
 29073  002DC0                     i2l7997:
 29074                           
 29075                           ;usb_device.c: 1541: {
 29076                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 29077  002DC0  5012               	movf	USBCtrlTrfRxService@i,w,c
 29078  002DC2  0D01               	mullw	1
 29079  002DC4  0E38               	movlw	56
 29080  002DC6  24F3               	addwf	prodl,w,c
 29081  002DC8  6ED9               	movwf	fsr2l,c
 29082  002DCA  0E04               	movlw	4
 29083  002DCC  20F4               	addwfc	prodh,w,c
 29084  002DCE  6EDA               	movwf	fsr2h,c
 29085  002DD0  C02E  FFE1         	movff	_outPipes,fsr1l	;volatile
 29086  002DD4  C02F  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 29087  002DD8  CFDF FFE7          	movff	indf2,indf1
 29088  002DDC  4A2E               	infsnz	_outPipes,f,c	;volatile
 29089  002DDE  2A2F               	incf	_outPipes+1,f,c	;volatile
 29090  002DE0  2A12               	incf	USBCtrlTrfRxService@i,f,c
 29091  002DE2  D000               	goto	i2l8003
 29092  002DE4                     i2l8003:
 29093  002DE4  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29094  002DE6  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 29095  002DE8  A0D8               	btfss	status,0,c
 29096  002DEA  D7EA               	goto	i2l7997
 29097                           
 29098                           ;usb_device.c: 1543: }
 29099                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 29100  002DEC  5032               	movf	_outPipes+4,w,c	;volatile
 29101  002DEE  1033               	iorwf	_outPipes+5,w,c	;volatile
 29102  002DF0  B4D8               	btfsc	status,2,c
 29103  002DF2  D032               	goto	i2l8019
 29104                           
 29105                           ;usb_device.c: 1548: {
 29106                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 29107  002DF4  EE20 F001          	lfsr	2,1
 29108  002DF8  5040               	movf	_pBDTEntryEP0OutNext,w,c
 29109  002DFA  26D9               	addwf	fsr2l,f,c
 29110  002DFC  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 29111  002DFE  22DA               	addwfc	fsr2h,f,c
 29112  002E00  0E08               	movlw	8
 29113  002E02  6EDF               	movwf	indf2,c
 29114                           
 29115                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 29116  002E04  EE20 F002          	lfsr	2,2
 29117  002E08  5040               	movf	_pBDTEntryEP0OutNext,w,c
 29118  002E0A  26D9               	addwf	fsr2l,f,c
 29119  002E0C  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 29120  002E0E  22DA               	addwfc	fsr2h,f,c
 29121  002E10  0E38               	movlw	56
 29122  002E12  6EDE               	movwf	postinc2,c
 29123  002E14  0E04               	movlw	4
 29124  002E16  6EDD               	movwf	postdec2,c
 29125                           
 29126                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 29127  002E18  C03E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29128  002E1C  C03F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29129  002E20  BCDF               	btfsc	indf2,6,c
 29130  002E22  D00D               	goto	i2l8015
 29131                           
 29132                           ;usb_device.c: 1552: {
 29133                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 29134  002E24  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29135  002E28  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29136  002E2C  0E48               	movlw	72
 29137  002E2E  6EDF               	movwf	indf2,c
 29138                           
 29139                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29140  002E30  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29141  002E34  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29142  002E38  0E00               	movlw	0
 29143  002E3A  8EDB               	bsf	plusw2,7,c
 29144                           
 29145                           ;usb_device.c: 1555: }
 29146  002E3C  0012               	return	
 29147  002E3E                     i2l8015:
 29148                           
 29149                           ;usb_device.c: 1556: else
 29150                           ;usb_device.c: 1557: {
 29151                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 29152  002E3E  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29153  002E42  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29154  002E46  0E08               	movlw	8
 29155  002E48  6EDF               	movwf	indf2,c
 29156                           
 29157                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29158  002E4A  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29159  002E4E  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29160  002E52  0E00               	movlw	0
 29161  002E54  8EDB               	bsf	plusw2,7,c
 29162                           
 29163                           ;usb_device.c: 1560: }
 29164                           ;usb_device.c: 1561: }
 29165  002E56  0012               	return	
 29166  002E58                     i2l8019:
 29167                           
 29168                           ;usb_device.c: 1562: else
 29169                           ;usb_device.c: 1563: {
 29170                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 29171  002E58  EE20 F001          	lfsr	2,1
 29172  002E5C  5040               	movf	_pBDTEntryEP0OutNext,w,c
 29173  002E5E  26D9               	addwf	fsr2l,f,c
 29174  002E60  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 29175  002E62  22DA               	addwfc	fsr2h,f,c
 29176  002E64  0E08               	movlw	8
 29177  002E66  6EDF               	movwf	indf2,c
 29178                           
 29179                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29180  002E68  EE20 F002          	lfsr	2,2
 29181  002E6C  5040               	movf	_pBDTEntryEP0OutNext,w,c
 29182  002E6E  26D9               	addwf	fsr2l,f,c
 29183  002E70  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 29184  002E72  22DA               	addwfc	fsr2h,f,c
 29185  002E74  0E30               	movlw	48
 29186  002E76  6EDE               	movwf	postinc2,c
 29187  002E78  0E04               	movlw	4
 29188  002E7A  6EDD               	movwf	postdec2,c
 29189                           
 29190                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 29191  002E7C  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29192  002E80  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29193  002E84  0E04               	movlw	4
 29194  002E86  6EDF               	movwf	indf2,c
 29195                           
 29196                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29197  002E88  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29198  002E8C  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29199  002E90  0E00               	movlw	0
 29200  002E92  8EDB               	bsf	plusw2,7,c
 29201                           
 29202                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 29203  002E94  5034               	movf	_outPipes+6,w,c	;volatile
 29204  002E96  1035               	iorwf	_outPipes+7,w,c	;volatile
 29205  002E98  B4D8               	btfsc	status,2,c
 29206  002E9A  D00E               	goto	i2l8029
 29207                           
 29208                           ;usb_device.c: 1581: {
 29209                           ;usb_device.c: 1586: outPipes[0].pFunc();
 29210  002E9C  EE20  F034         	lfsr	2,_outPipes+6	;volatile
 29211  002EA0  D801               	call	i2u600_48
 29212  002EA2  D00A               	goto	i2l8029
 29213  002EA4                     i2u600_48:
 29214  002EA4  0005               	push	
 29215  002EA6  6EFA               	movwf	pclath,c
 29216  002EA8  50DE               	movf	postinc2,w,c
 29217  002EAA  6EFD               	movwf	tosl,c
 29218  002EAC  50DE               	movf	postinc2,w,c
 29219  002EAE  6EFE               	movwf	tosh,c
 29220  002EB0  50F8               	movf	tblptru,w,c
 29221  002EB2  6EFF               	movwf	tosu,c
 29222  002EB4  50FA               	movf	pclath,w,c
 29223  002EB6  0012               	return		;indir
 29224  002EB8                     i2l8029:
 29225                           
 29226                           ;usb_device.c: 1588: }
 29227                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 29228  002EB8  9E31               	bcf	_outPipes+3,7,c	;volatile
 29229                           
 29230                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 29231  002EBA  5048               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29232  002EBC  A4D8               	btfss	status,2,c
 29233  002EBE  0012               	return	
 29234                           
 29235                           ;usb_device.c: 1604: {
 29236                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 29237  002EC0  EC53  F021         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29238  002EC4  0012               	return	
 29239  002EC6  0012               	return		;funcret
 29240  002EC8                     __end_of_USBCtrlTrfRxService:
 29241                           	opt stack 0
 29242                           tosu	equ	0xFFF
 29243                           tosh	equ	0xFFE
 29244                           tosl	equ	0xFFD
 29245                           pclatu	equ	0xFFB
 29246                           pclath	equ	0xFFA
 29247                           tblptru	equ	0xFF8
 29248                           tblptrh	equ	0xFF7
 29249                           tblptrl	equ	0xFF6
 29250                           tablat	equ	0xFF5
 29251                           prodh	equ	0xFF4
 29252                           prodl	equ	0xFF3
 29253                           intcon	equ	0xFF2
 29254                           intcon3	equ	0xFF0
 29255                           indf0	equ	0xFEF
 29256                           postinc0	equ	0xFEE
 29257                           fsr0h	equ	0xFEA
 29258                           fsr0l	equ	0xFE9
 29259                           wreg	equ	0xFE8
 29260                           indf1	equ	0xFE7
 29261                           postdec1	equ	0xFE5
 29262                           fsr1h	equ	0xFE2
 29263                           fsr1l	equ	0xFE1
 29264                           indf2	equ	0xFDF
 29265                           postinc2	equ	0xFDE
 29266                           postdec2	equ	0xFDD
 29267                           plusw2	equ	0xFDB
 29268                           fsr2h	equ	0xFDA
 29269                           fsr2l	equ	0xFD9
 29270                           status	equ	0xFD8
 29271                           
 29272 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 29273 ;; Defined at:
 29274 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 29275 ;; Parameters:    Size  Location     Type
 29276 ;;		None
 29277 ;; Auto vars:     Size  Location     Type
 29278 ;;		None
 29279 ;; Return value:  Size  Location     Type
 29280 ;;		None               void
 29281 ;; Registers used:
 29282 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29283 ;; Tracked objects:
 29284 ;;		On entry : 0/0
 29285 ;;		On exit  : 0/0
 29286 ;;		Unchanged: 0/0
 29287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29288 ;;      Params:         0       0       0       0       0       0       0       0       0
 29289 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29290 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29291 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29292 ;;Total ram usage:        0 bytes
 29293 ;; Hardware stack levels used:    1
 29294 ;; This function calls:
 29295 ;;		Nothing
 29296 ;; This function is called by:
 29297 ;;		_USBDeviceTasks
 29298 ;;		_USBCtrlEPServiceComplete
 29299 ;;		_USBCtrlTrfRxService
 29300 ;; This function uses a non-reentrant model
 29301 ;;
 29302                           
 29303                           	psect	text128
 29304  0042A6                     __ptext128:
 29305                           	opt stack 0
 29306  0042A6                     _USBCtrlEPAllowStatusStage:
 29307                           	opt stack 16
 29308                           
 29309                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 29310                           
 29311                           ;incstack = 0
 29312  0042A6  0100               	movlb	0	; () banked
 29313  0042A8  518A               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 29314  0042AA  A4D8               	btfss	status,2,c
 29315  0042AC  0012               	return	
 29316                           
 29317                           ; BSR set to: 0
 29318                           ;usb_device.c: 1112: {
 29319                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 29320  0042AE  0E01               	movlw	1
 29321  0042B0  0100               	movlb	0	; () banked
 29322  0042B2  6F8A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 29323                           
 29324                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 29325  0042B4  0100               	movlb	0	; () banked
 29326  0042B6  518B               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 29327  0042B8  A4D8               	btfss	status,2,c
 29328  0042BA  0012               	return	
 29329                           
 29330                           ; BSR set to: 0
 29331                           ;usb_device.c: 1115: {
 29332                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 29333  0042BC  0E01               	movlw	1
 29334  0042BE  0100               	movlb	0	; () banked
 29335  0042C0  6F8B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 29336                           
 29337                           ; BSR set to: 0
 29338                           ;usb_device.c: 1120: if(controlTransferState == 2)
 29339  0042C2  0E02               	movlw	2
 29340  0042C4  184B               	xorwf	_controlTransferState,w,c	;volatile
 29341  0042C6  A4D8               	btfss	status,2,c
 29342  0042C8  D015               	goto	i2l7529
 29343                           
 29344                           ; BSR set to: 0
 29345                           ;usb_device.c: 1121: {
 29346                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 29347  0042CA  EE20 F001          	lfsr	2,1
 29348  0042CE  5036               	movf	_pBDTEntryIn,w,c
 29349  0042D0  26D9               	addwf	fsr2l,f,c
 29350  0042D2  5037               	movf	_pBDTEntryIn+1,w,c
 29351  0042D4  22DA               	addwfc	fsr2h,f,c
 29352  0042D6  0E00               	movlw	0
 29353  0042D8  6EDF               	movwf	indf2,c
 29354                           
 29355                           ; BSR set to: 0
 29356                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29357  0042DA  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29358  0042DE  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29359  0042E2  0E48               	movlw	72
 29360  0042E4  6EDF               	movwf	indf2,c
 29361                           
 29362                           ; BSR set to: 0
 29363                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29364  0042E6  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29365  0042EA  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29366  0042EE  0E00               	movlw	0
 29367  0042F0  8EDB               	bsf	plusw2,7,c
 29368                           
 29369                           ;usb_device.c: 1125: }
 29370  0042F2  0012               	return	
 29371  0042F4                     i2l7529:
 29372                           
 29373                           ; BSR set to: 0
 29374                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 29375  0042F4  044B               	decf	_controlTransferState,w,c	;volatile
 29376  0042F6  A4D8               	btfss	status,2,c
 29377  0042F8  0012               	return	
 29378                           
 29379                           ; BSR set to: 0
 29380                           ;usb_device.c: 1127: {
 29381                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 29382  0042FA  0E00               	movlw	0
 29383  0042FC  0100               	movlb	0	; () banked
 29384  0042FE  6F84               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 29385                           
 29386                           ; BSR set to: 0
 29387                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 29388  004300  EE20 F001          	lfsr	2,1
 29389  004304  503E               	movf	_pBDTEntryEP0OutCurrent,w,c
 29390  004306  26D9               	addwf	fsr2l,f,c
 29391  004308  503F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29392  00430A  22DA               	addwfc	fsr2h,f,c
 29393  00430C  0E08               	movlw	8
 29394  00430E  6EDF               	movwf	indf2,c
 29395                           
 29396                           ; BSR set to: 0
 29397                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 29398  004310  EE20 F002          	lfsr	2,2
 29399  004314  503E               	movf	_pBDTEntryEP0OutCurrent,w,c
 29400  004316  26D9               	addwf	fsr2l,f,c
 29401  004318  503F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29402  00431A  22DA               	addwfc	fsr2h,f,c
 29403  00431C  0E30               	movlw	48
 29404  00431E  6EDE               	movwf	postinc2,c
 29405  004320  0E04               	movlw	4
 29406  004322  6EDD               	movwf	postdec2,c
 29407                           
 29408                           ; BSR set to: 0
 29409                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 29410  004324  C03E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29411  004328  C03F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29412  00432C  0E04               	movlw	4
 29413  00432E  6EDF               	movwf	indf2,c
 29414                           
 29415                           ; BSR set to: 0
 29416                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29417  004330  C03E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29418  004334  C03F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29419  004338  0E00               	movlw	0
 29420  00433A  8EDB               	bsf	plusw2,7,c
 29421                           
 29422                           ; BSR set to: 0
 29423                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 29424  00433C  0E01               	movlw	1
 29425  00433E  0100               	movlb	0	; () banked
 29426  004340  6F84               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 29427                           
 29428                           ; BSR set to: 0
 29429                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 29430  004342  EE20 F001          	lfsr	2,1
 29431  004346  5040               	movf	_pBDTEntryEP0OutNext,w,c
 29432  004348  26D9               	addwf	fsr2l,f,c
 29433  00434A  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 29434  00434C  22DA               	addwfc	fsr2h,f,c
 29435  00434E  0E08               	movlw	8
 29436  004350  6EDF               	movwf	indf2,c
 29437                           
 29438                           ; BSR set to: 0
 29439                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29440  004352  EE20 F002          	lfsr	2,2
 29441  004356  5040               	movf	_pBDTEntryEP0OutNext,w,c
 29442  004358  26D9               	addwf	fsr2l,f,c
 29443  00435A  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 29444  00435C  22DA               	addwfc	fsr2h,f,c
 29445  00435E  0E30               	movlw	48
 29446  004360  6EDE               	movwf	postinc2,c
 29447  004362  0E04               	movlw	4
 29448  004364  6EDD               	movwf	postdec2,c
 29449                           
 29450                           ; BSR set to: 0
 29451                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 29452  004366  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29453  00436A  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29454  00436E  0E80               	movlw	128
 29455  004370  6EDF               	movwf	indf2,c
 29456                           
 29457                           ; BSR set to: 0
 29458                           
 29459                           ; BSR set to: 0
 29460                           
 29461                           ; BSR set to: 0
 29462  004372  0012               	return	
 29463                           
 29464                           ; BSR set to: 0
 29465                           
 29466                           ; BSR set to: 0
 29467  004374  0012               	return		;funcret
 29468  004376                     __end_of_USBCtrlEPAllowStatusStage:
 29469                           	opt stack 0
 29470                           tosu	equ	0xFFF
 29471                           tosh	equ	0xFFE
 29472                           tosl	equ	0xFFD
 29473                           pclatu	equ	0xFFB
 29474                           pclath	equ	0xFFA
 29475                           tblptru	equ	0xFF8
 29476                           tblptrh	equ	0xFF7
 29477                           tblptrl	equ	0xFF6
 29478                           tablat	equ	0xFF5
 29479                           prodh	equ	0xFF4
 29480                           prodl	equ	0xFF3
 29481                           intcon	equ	0xFF2
 29482                           intcon3	equ	0xFF0
 29483                           indf0	equ	0xFEF
 29484                           postinc0	equ	0xFEE
 29485                           fsr0h	equ	0xFEA
 29486                           fsr0l	equ	0xFE9
 29487                           wreg	equ	0xFE8
 29488                           indf1	equ	0xFE7
 29489                           postdec1	equ	0xFE5
 29490                           fsr1h	equ	0xFE2
 29491                           fsr1l	equ	0xFE1
 29492                           indf2	equ	0xFDF
 29493                           postinc2	equ	0xFDE
 29494                           postdec2	equ	0xFDD
 29495                           plusw2	equ	0xFDB
 29496                           fsr2h	equ	0xFDA
 29497                           fsr2l	equ	0xFD9
 29498                           status	equ	0xFD8
 29499                           
 29500 ;; *************** function _USBCtrlTrfInHandler *****************
 29501 ;; Defined at:
 29502 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 29503 ;; Parameters:    Size  Location     Type
 29504 ;;		None
 29505 ;; Auto vars:     Size  Location     Type
 29506 ;;  lastDTS         1   17[COMRAM] unsigned char 
 29507 ;; Return value:  Size  Location     Type
 29508 ;;		None               void
 29509 ;; Registers used:
 29510 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 29511 ;; Tracked objects:
 29512 ;;		On entry : 0/0
 29513 ;;		On exit  : 0/0
 29514 ;;		Unchanged: 0/0
 29515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29516 ;;      Params:         0       0       0       0       0       0       0       0       0
 29517 ;;      Locals:         1       0       0       0       0       0       0       0       0
 29518 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29519 ;;      Totals:         1       0       0       0       0       0       0       0       0
 29520 ;;Total ram usage:        1 bytes
 29521 ;; Hardware stack levels used:    1
 29522 ;; Hardware stack levels required when called:    2
 29523 ;; This function calls:
 29524 ;;		_USART_mySetLineCodingHandler
 29525 ;;		_USBCtrlTrfTxService
 29526 ;; This function is called by:
 29527 ;;		_USBCtrlEPService
 29528 ;; This function uses a non-reentrant model
 29529 ;;
 29530                           
 29531                           	psect	text129
 29532  003AE8                     __ptext129:
 29533                           	opt stack 0
 29534  003AE8                     _USBCtrlTrfInHandler:
 29535                           	opt stack 16
 29536                           
 29537                           ;usb_device.c: 2225: uint8_t lastDTS;
 29538                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29539                           
 29540                           ; BSR set to: 0
 29541                           ;incstack = 0
 29542  003AE8  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29543  003AEC  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29544  003AF0  0E00               	movlw	0
 29545  003AF2  BCDF               	btfsc	indf2,6,c
 29546  003AF4  0E01               	movlw	1
 29547  003AF6  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29548                           
 29549                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29550  003AF8  0E04               	movlw	4
 29551  003AFA  1A36               	xorwf	_pBDTEntryIn,f,c
 29552                           
 29553                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 29554  003AFC  0E08               	movlw	8
 29555  003AFE  0100               	movlb	0	; () banked
 29556  003B00  1989               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 29557  003B02  A4D8               	btfss	status,2,c
 29558  003B04  D00D               	goto	i2l8939
 29559                           
 29560                           ; BSR set to: 0
 29561                           ;usb_device.c: 2236: {
 29562                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 29563  003B06  0104               	movlb	4	; () banked
 29564  003B08  5132               	movf	50,w,b	;volatile
 29565  003B0A  0B7F               	andlw	127
 29566  003B0C  6E63               	movwf	3939,c	;volatile
 29567                           
 29568                           ; BSR set to: 4
 29569                           ;usb_device.c: 2238: if(UADDR != 0u)
 29570  003B0E  5063               	movf	3939,w,c	;volatile
 29571  003B10  B4D8               	btfsc	status,2,c
 29572  003B12  D002               	goto	i2l8937
 29573                           
 29574                           ; BSR set to: 4
 29575                           ;usb_device.c: 2239: {
 29576                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 29577  003B14  0E10               	movlw	16
 29578  003B16  D001               	goto	L25
 29579  003B18                     i2l8937:
 29580                           
 29581                           ;usb_device.c: 2242: else
 29582                           ;usb_device.c: 2243: {
 29583                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 29584  003B18  0E04               	movlw	4
 29585  003B1A                     L25:
 29586  003B1A  0100               	movlb	0	; () banked
 29587  003B1C  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 29588                           
 29589                           ; BSR set to: 0
 29590  003B1E  D000               	goto	i2l8939
 29591  003B20                     i2l8939:
 29592                           
 29593                           ; BSR set to: 0
 29594                           ;usb_device.c: 2245: }
 29595                           ;usb_device.c: 2246: }
 29596                           ;usb_device.c: 2249: if(controlTransferState == 1)
 29597  003B20  044B               	decf	_controlTransferState,w,c	;volatile
 29598  003B22  A4D8               	btfss	status,2,c
 29599  003B24  D03A               	goto	i2l1914
 29600                           
 29601                           ; BSR set to: 0
 29602                           ;usb_device.c: 2250: {
 29603                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29604  003B26  EE20 F002          	lfsr	2,2
 29605  003B2A  5036               	movf	_pBDTEntryIn,w,c
 29606  003B2C  26D9               	addwf	fsr2l,f,c
 29607  003B2E  5037               	movf	_pBDTEntryIn+1,w,c
 29608  003B30  22DA               	addwfc	fsr2h,f,c
 29609  003B32  0E38               	movlw	56
 29610  003B34  6EDE               	movwf	postinc2,c
 29611  003B36  0E04               	movlw	4
 29612  003B38  6EDD               	movwf	postdec2,c
 29613                           
 29614                           ; BSR set to: 0
 29615                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 29616  003B3A  ECA8  F01F         	call	_USBCtrlTrfTxService	;wreg free
 29617                           
 29618                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 29619  003B3E  0E02               	movlw	2
 29620  003B40  1851               	xorwf	_shortPacketStatus,w,c	;volatile
 29621  003B42  A4D8               	btfss	status,2,c
 29622  003B44  D00D               	goto	i2l8951
 29623                           
 29624                           ;usb_device.c: 2259: {
 29625                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 29626  003B46  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29627  003B4A  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29628  003B4E  0E04               	movlw	4
 29629  003B50  6EDF               	movwf	indf2,c
 29630                           
 29631                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29632  003B52  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29633  003B56  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29634  003B5A  0E00               	movlw	0
 29635  003B5C  8EDB               	bsf	plusw2,7,c
 29636                           
 29637                           ;usb_device.c: 2264: }
 29638  003B5E  0012               	return	
 29639  003B60                     i2l8951:
 29640                           
 29641                           ;usb_device.c: 2265: else
 29642                           ;usb_device.c: 2266: {
 29643                           ;usb_device.c: 2267: if(lastDTS == 0)
 29644  003B60  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 29645  003B62  A4D8               	btfss	status,2,c
 29646  003B64  D00D               	goto	i2l8957
 29647                           
 29648                           ;usb_device.c: 2268: {
 29649                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29650  003B66  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29651  003B6A  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29652  003B6E  0E48               	movlw	72
 29653  003B70  6EDF               	movwf	indf2,c
 29654                           
 29655                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29656  003B72  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29657  003B76  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29658  003B7A  0E00               	movlw	0
 29659  003B7C  8EDB               	bsf	plusw2,7,c
 29660                           
 29661                           ;usb_device.c: 2271: }
 29662  003B7E  0012               	return	
 29663  003B80                     i2l8957:
 29664                           
 29665                           ;usb_device.c: 2272: else
 29666                           ;usb_device.c: 2273: {
 29667                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 29668  003B80  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29669  003B84  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29670  003B88  0E08               	movlw	8
 29671  003B8A  6EDF               	movwf	indf2,c
 29672                           
 29673                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29674  003B8C  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29675  003B90  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29676  003B94  0E00               	movlw	0
 29677  003B96  8EDB               	bsf	plusw2,7,c
 29678                           
 29679                           ;usb_device.c: 2276: }
 29680                           ;usb_device.c: 2277: }
 29681                           ;usb_device.c: 2278: }
 29682  003B98  0012               	return	
 29683  003B9A                     i2l1914:
 29684                           
 29685                           ; BSR set to: 0
 29686                           ;usb_device.c: 2279: else
 29687                           ;usb_device.c: 2280: {
 29688                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 29689  003B9A  AE31               	btfss	_outPipes+3,7,c	;volatile
 29690  003B9C  D014               	goto	i2l8967
 29691                           
 29692                           ; BSR set to: 0
 29693                           ;usb_device.c: 2285: {
 29694                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 29695  003B9E  5034               	movf	_outPipes+6,w,c	;volatile
 29696  003BA0  1035               	iorwf	_outPipes+7,w,c	;volatile
 29697  003BA2  B4D8               	btfsc	status,2,c
 29698  003BA4  D00E               	goto	i2l8965
 29699                           
 29700                           ; BSR set to: 0
 29701                           ;usb_device.c: 2287: {
 29702                           ;usb_device.c: 2288: outPipes[0].pFunc();
 29703  003BA6  EE20  F034         	lfsr	2,_outPipes+6	;volatile
 29704  003BAA  D801               	call	i2u714_48
 29705  003BAC  D00A               	goto	i2l8965
 29706  003BAE                     i2u714_48:
 29707  003BAE  0005               	push	
 29708  003BB0  6EFA               	movwf	pclath,c
 29709  003BB2  50DE               	movf	postinc2,w,c
 29710  003BB4  6EFD               	movwf	tosl,c
 29711  003BB6  50DE               	movf	postinc2,w,c
 29712  003BB8  6EFE               	movwf	tosh,c
 29713  003BBA  50F8               	movf	tblptru,w,c
 29714  003BBC  6EFF               	movwf	tosu,c
 29715  003BBE  50FA               	movf	pclath,w,c
 29716  003BC0  0012               	return		;indir
 29717  003BC2                     i2l8965:
 29718                           
 29719                           ;usb_device.c: 2289: }
 29720                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 29721  003BC2  9E31               	bcf	_outPipes+3,7,c	;volatile
 29722  003BC4  D000               	goto	i2l8967
 29723  003BC6                     i2l8967:
 29724                           
 29725                           ;usb_device.c: 2291: }
 29726                           ;usb_device.c: 2293: controlTransferState = 0;
 29727  003BC6  0E00               	movlw	0
 29728  003BC8  6E4B               	movwf	_controlTransferState,c	;volatile
 29729  003BCA  0012               	return	
 29730  003BCC  0012               	return		;funcret
 29731  003BCE                     __end_of_USBCtrlTrfInHandler:
 29732                           	opt stack 0
 29733                           tosu	equ	0xFFF
 29734                           tosh	equ	0xFFE
 29735                           tosl	equ	0xFFD
 29736                           pclatu	equ	0xFFB
 29737                           pclath	equ	0xFFA
 29738                           tblptru	equ	0xFF8
 29739                           tblptrh	equ	0xFF7
 29740                           tblptrl	equ	0xFF6
 29741                           tablat	equ	0xFF5
 29742                           prodh	equ	0xFF4
 29743                           prodl	equ	0xFF3
 29744                           intcon	equ	0xFF2
 29745                           intcon3	equ	0xFF0
 29746                           indf0	equ	0xFEF
 29747                           postinc0	equ	0xFEE
 29748                           fsr0h	equ	0xFEA
 29749                           fsr0l	equ	0xFE9
 29750                           wreg	equ	0xFE8
 29751                           indf1	equ	0xFE7
 29752                           postdec1	equ	0xFE5
 29753                           fsr1h	equ	0xFE2
 29754                           fsr1l	equ	0xFE1
 29755                           indf2	equ	0xFDF
 29756                           postinc2	equ	0xFDE
 29757                           postdec2	equ	0xFDD
 29758                           plusw2	equ	0xFDB
 29759                           fsr2h	equ	0xFDA
 29760                           fsr2l	equ	0xFD9
 29761                           status	equ	0xFD8
 29762                           
 29763 ;; *************** function _USBCtrlTrfTxService *****************
 29764 ;; Defined at:
 29765 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 29766 ;; Parameters:    Size  Location     Type
 29767 ;;		None
 29768 ;; Auto vars:     Size  Location     Type
 29769 ;;  byteToSend      1    0[COMRAM] unsigned char 
 29770 ;; Return value:  Size  Location     Type
 29771 ;;		None               void
 29772 ;; Registers used:
 29773 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29774 ;; Tracked objects:
 29775 ;;		On entry : 0/0
 29776 ;;		On exit  : 0/0
 29777 ;;		Unchanged: 0/0
 29778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29779 ;;      Params:         0       0       0       0       0       0       0       0       0
 29780 ;;      Locals:         1       0       0       0       0       0       0       0       0
 29781 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29782 ;;      Totals:         1       0       0       0       0       0       0       0       0
 29783 ;;Total ram usage:        1 bytes
 29784 ;; Hardware stack levels used:    1
 29785 ;; This function calls:
 29786 ;;		Nothing
 29787 ;; This function is called by:
 29788 ;;		_USBCtrlEPAllowDataStage
 29789 ;;		_USBCtrlTrfInHandler
 29790 ;; This function uses a non-reentrant model
 29791 ;;
 29792                           
 29793                           	psect	text130
 29794  003F50                     __ptext130:
 29795                           	opt stack 0
 29796  003F50                     _USBCtrlTrfTxService:
 29797                           	opt stack 15
 29798                           
 29799                           ;usb_device.c: 1439: uint8_t byteToSend;
 29800                           ;usb_device.c: 1443: byteToSend = 8;
 29801                           
 29802                           ;incstack = 0
 29803  003F50  0E08               	movlw	8
 29804  003F52  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 29805                           
 29806                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 29807  003F54  5057               	movf	_inPipes+5,w,c	;volatile
 29808  003F56  E111               	bnz	i2l7347
 29809  003F58  0E08               	movlw	8
 29810  003F5A  5C56               	subwf	_inPipes+4,w,c	;volatile
 29811  003F5C  B0D8               	btfsc	status,0,c
 29812  003F5E  D00D               	goto	i2l7347
 29813                           
 29814                           ;usb_device.c: 1445: {
 29815                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 29816  003F60  C056  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 29817                           
 29818                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 29819  003F64  5051               	movf	_shortPacketStatus,w,c	;volatile
 29820  003F66  A4D8               	btfss	status,2,c
 29821  003F68  D002               	goto	i2l7343
 29822                           
 29823                           ;usb_device.c: 1454: {
 29824                           ;usb_device.c: 1455: shortPacketStatus = 1;
 29825  003F6A  0E01               	movlw	1
 29826  003F6C  D004               	goto	L26
 29827  003F6E                     i2l7343:
 29828                           
 29829                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 29830  003F6E  0451               	decf	_shortPacketStatus,w,c	;volatile
 29831  003F70  A4D8               	btfss	status,2,c
 29832  003F72  D003               	goto	i2l7347
 29833                           
 29834                           ;usb_device.c: 1458: {
 29835                           ;usb_device.c: 1459: shortPacketStatus = 2;
 29836  003F74  0E02               	movlw	2
 29837  003F76                     L26:
 29838  003F76  6E51               	movwf	_shortPacketStatus,c	;volatile
 29839  003F78  D000               	goto	i2l7347
 29840  003F7A                     i2l7347:
 29841                           
 29842                           ;usb_device.c: 1460: }
 29843                           ;usb_device.c: 1461: }
 29844                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 29845  003F7A  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29846  003F7C  5E56               	subwf	_inPipes+4,f,c	;volatile
 29847  003F7E  0E00               	movlw	0
 29848  003F80  5A57               	subwfb	_inPipes+5,f,c	;volatile
 29849                           
 29850                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 29851  003F82  EE20 F001          	lfsr	2,1
 29852  003F86  5036               	movf	_pBDTEntryIn,w,c
 29853  003F88  26D9               	addwf	fsr2l,f,c
 29854  003F8A  5037               	movf	_pBDTEntryIn+1,w,c
 29855  003F8C  22DA               	addwfc	fsr2h,f,c
 29856  003F8E  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 29857                           
 29858                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 29859  003F92  0E38               	movlw	56
 29860  003F94  0100               	movlb	0	; () banked
 29861  003F96  6F7A               	movwf	_pDst& (0+255),b
 29862  003F98  0E04               	movlw	4
 29863  003F9A  0100               	movlb	0	; () banked
 29864  003F9C  6F7B               	movwf	(_pDst+1)& (0+255),b
 29865                           
 29866                           ; BSR set to: 0
 29867                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 29868  003F9E  A055               	btfss	_inPipes+3,0,c	;volatile
 29869  003FA0  D01E               	goto	i2l7365
 29870  003FA2  D03F               	goto	i2l7375
 29871                           
 29872                           ; BSR set to: 0
 29873                           ;usb_device.c: 1476: {
 29874                           ;usb_device.c: 1477: while(byteToSend)
 29875  003FA4  D01C               	goto	i2l7365
 29876  003FA6                     i2l7357:
 29877                           
 29878                           ; BSR set to: 0
 29879                           ;usb_device.c: 1478: {
 29880                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 29881  003FA6  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 29882  003FAA  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29883  003FAE  6AF8               	clrf	tblptru,c
 29884  003FB0  C07A  FFD9         	movff	_pDst,fsr2l
 29885  003FB4  C07B  FFDA         	movff	_pDst+1,fsr2h
 29886  003FB8  0E07               	movlw	(high __ramtop+-1)
 29887  003FBA  64F7               	cpfsgt	tblptrh,c
 29888  003FBC  D003               	bra	i2u507_47
 29889  003FBE  0008               	tblrd		*
 29890  003FC0  50F5               	movf	tablat,w,c
 29891  003FC2  D005               	bra	i2u507_40
 29892  003FC4                     i2u507_47:
 29893  003FC4  CFF6 FFE9          	movff	tblptrl,fsr0l
 29894  003FC8  CFF7 FFEA          	movff	tblptrh,fsr0h
 29895  003FCC  50EF               	movf	indf0,w,c
 29896  003FCE                     i2u507_40:
 29897  003FCE  6EDF               	movwf	indf2,c
 29898  003FD0  4A52               	infsnz	_inPipes,f,c	;volatile
 29899  003FD2  2A53               	incf	_inPipes+1,f,c	;volatile
 29900  003FD4  0100               	movlb	0	; () banked
 29901  003FD6  4B7A               	infsnz	_pDst& (0+255),f,b
 29902  003FD8  2B7B               	incf	(_pDst+1)& (0+255),f,b
 29903                           
 29904                           ; BSR set to: 0
 29905                           ;usb_device.c: 1480: byteToSend--;
 29906  003FDA  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29907  003FDC  D000               	goto	i2l7365
 29908  003FDE                     i2l7365:
 29909                           
 29910                           ; BSR set to: 0
 29911  003FDE  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29912  003FE0  B4D8               	btfsc	status,2,c
 29913  003FE2  0012               	return	
 29914  003FE4  D7E0               	goto	i2l7357
 29915                           
 29916                           ; BSR set to: 0
 29917                           ;usb_device.c: 1481: }
 29918                           ;usb_device.c: 1482: }
 29919  003FE6  0012               	return	
 29920                           
 29921                           ; BSR set to: 0
 29922                           ;usb_device.c: 1483: else
 29923                           ;usb_device.c: 1484: {
 29924                           ;usb_device.c: 1485: while(byteToSend)
 29925  003FE8  D01C               	goto	i2l7375
 29926  003FEA                     i2l7367:
 29927                           
 29928                           ; BSR set to: 0
 29929                           ;usb_device.c: 1486: {
 29930                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 29931  003FEA  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 29932  003FEE  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29933  003FF2  6AF8               	clrf	tblptru,c
 29934  003FF4  C07A  FFD9         	movff	_pDst,fsr2l
 29935  003FF8  C07B  FFDA         	movff	_pDst+1,fsr2h
 29936  003FFC  0E07               	movlw	(high __ramtop+-1)
 29937  003FFE  64F7               	cpfsgt	tblptrh,c
 29938  004000  D003               	bra	i2u509_47
 29939  004002  0008               	tblrd		*
 29940  004004  50F5               	movf	tablat,w,c
 29941  004006  D005               	bra	i2u509_40
 29942  004008                     i2u509_47:
 29943  004008  CFF6 FFE9          	movff	tblptrl,fsr0l
 29944  00400C  CFF7 FFEA          	movff	tblptrh,fsr0h
 29945  004010  50EF               	movf	indf0,w,c
 29946  004012                     i2u509_40:
 29947  004012  6EDF               	movwf	indf2,c
 29948  004014  4A52               	infsnz	_inPipes,f,c	;volatile
 29949  004016  2A53               	incf	_inPipes+1,f,c	;volatile
 29950  004018  0100               	movlb	0	; () banked
 29951  00401A  4B7A               	infsnz	_pDst& (0+255),f,b
 29952  00401C  2B7B               	incf	(_pDst+1)& (0+255),f,b
 29953                           
 29954                           ; BSR set to: 0
 29955                           ;usb_device.c: 1488: byteToSend--;
 29956  00401E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29957  004020  D000               	goto	i2l7375
 29958  004022                     i2l7375:
 29959                           
 29960                           ; BSR set to: 0
 29961  004022  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29962  004024  B4D8               	btfsc	status,2,c
 29963  004026  0012               	return	
 29964  004028  D7E0               	goto	i2l7367
 29965                           
 29966                           ; BSR set to: 0
 29967  00402A  0012               	return	
 29968                           
 29969                           ; BSR set to: 0
 29970                           
 29971                           ; BSR set to: 0
 29972  00402C  0012               	return		;funcret
 29973  00402E                     __end_of_USBCtrlTrfTxService:
 29974                           	opt stack 0
 29975                           tosu	equ	0xFFF
 29976                           tosh	equ	0xFFE
 29977                           tosl	equ	0xFFD
 29978                           pclatu	equ	0xFFB
 29979                           pclath	equ	0xFFA
 29980                           tblptru	equ	0xFF8
 29981                           tblptrh	equ	0xFF7
 29982                           tblptrl	equ	0xFF6
 29983                           tablat	equ	0xFF5
 29984                           prodh	equ	0xFF4
 29985                           prodl	equ	0xFF3
 29986                           intcon	equ	0xFF2
 29987                           intcon3	equ	0xFF0
 29988                           indf0	equ	0xFEF
 29989                           postinc0	equ	0xFEE
 29990                           fsr0h	equ	0xFEA
 29991                           fsr0l	equ	0xFE9
 29992                           wreg	equ	0xFE8
 29993                           indf1	equ	0xFE7
 29994                           postdec1	equ	0xFE5
 29995                           fsr1h	equ	0xFE2
 29996                           fsr1l	equ	0xFE1
 29997                           indf2	equ	0xFDF
 29998                           postinc2	equ	0xFDE
 29999                           postdec2	equ	0xFDD
 30000                           plusw2	equ	0xFDB
 30001                           fsr2h	equ	0xFDA
 30002                           fsr2l	equ	0xFD9
 30003                           status	equ	0xFD8
 30004                           
 30005 ;; *************** function _USART_mySetLineCodingHandler *****************
 30006 ;; Defined at:
 30007 ;;		line 273 in file "../Includes/Board/USBapp.c"
 30008 ;; Parameters:    Size  Location     Type
 30009 ;;		None
 30010 ;; Auto vars:     Size  Location     Type
 30011 ;;  dwBaud          4   13[COMRAM] unsigned long 
 30012 ;; Return value:  Size  Location     Type
 30013 ;;		None               void
 30014 ;; Registers used:
 30015 ;;		wreg, status,2, status,0, cstack
 30016 ;; Tracked objects:
 30017 ;;		On entry : 0/0
 30018 ;;		On exit  : 0/0
 30019 ;;		Unchanged: 0/0
 30020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30021 ;;      Params:         0       0       0       0       0       0       0       0       0
 30022 ;;      Locals:         4       0       0       0       0       0       0       0       0
 30023 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30024 ;;      Totals:         4       0       0       0       0       0       0       0       0
 30025 ;;Total ram usage:        4 bytes
 30026 ;; Hardware stack levels used:    1
 30027 ;; Hardware stack levels required when called:    1
 30028 ;; This function calls:
 30029 ;;		___lldiv
 30030 ;;		i2_EUSART_Initialize
 30031 ;; This function is called by:
 30032 ;;		_USBCheckCDCRequest
 30033 ;;		_USBCtrlTrfRxService
 30034 ;;		_USBCtrlTrfInHandler
 30035 ;; This function uses a non-reentrant model
 30036 ;;
 30037                           
 30038                           	psect	text131
 30039  0055B6                     __ptext131:
 30040                           	opt stack 0
 30041  0055B6                     _USART_mySetLineCodingHandler:
 30042                           	opt stack 15
 30043                           
 30044                           ;USBapp.c: 276: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 30045                           
 30046                           ; BSR set to: 0
 30047                           ;incstack = 0
 30048  0055B6  C1D8  F1EA         	movff	_cdc_notice,_line_coding
 30049  0055BA  C1D9  F1EB         	movff	_cdc_notice+1,_line_coding+1
 30050  0055BE  C1DA  F1EC         	movff	_cdc_notice+2,_line_coding+2
 30051  0055C2  C1DB  F1ED         	movff	_cdc_notice+3,_line_coding+3
 30052                           
 30053                           ;USBapp.c: 278: uint32_t dwBaud;
 30054                           ;USBapp.c: 279: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 30055  0055C6  0E00               	movlw	0
 30056  0055C8  6E01               	movwf	___lldiv@dividend,c
 30057  0055CA  0E1B               	movlw	27
 30058  0055CC  6E02               	movwf	___lldiv@dividend+1,c
 30059  0055CE  0EB7               	movlw	183
 30060  0055D0  6E03               	movwf	___lldiv@dividend+2,c
 30061  0055D2  0E00               	movlw	0
 30062  0055D4  6E04               	movwf	___lldiv@dividend+3,c
 30063  0055D6  C1EA  F005         	movff	_line_coding,___lldiv@divisor
 30064  0055DA  C1EB  F006         	movff	_line_coding+1,___lldiv@divisor+1
 30065  0055DE  C1EC  F007         	movff	_line_coding+2,___lldiv@divisor+2
 30066  0055E2  C1ED  F008         	movff	_line_coding+3,___lldiv@divisor+3
 30067  0055E6  EC63  F026         	call	___lldiv	;wreg free
 30068  0055EA  0EFF               	movlw	255
 30069  0055EC  2401               	addwf	?___lldiv,w,c
 30070  0055EE  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 30071  0055F0  0EFF               	movlw	255
 30072  0055F2  2002               	addwfc	?___lldiv+1,w,c
 30073  0055F4  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 30074  0055F6  0EFF               	movlw	255
 30075  0055F8  2003               	addwfc	?___lldiv+2,w,c
 30076  0055FA  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 30077  0055FC  0EFF               	movlw	255
 30078  0055FE  2004               	addwfc	?___lldiv+3,w,c
 30079  005600  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 30080                           
 30081                           ;USBapp.c: 280: SPBRG = (uint8_t) dwBaud;
 30082  005602  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 30083                           
 30084                           ;USBapp.c: 281: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 30085  005606  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 30086                           
 30087                           ;USBapp.c: 283: EUSART_Initialize();
 30088  00560A  EC75  F02C         	call	i2_EUSART_Initialize	;wreg free
 30089  00560E  0012               	return		;funcret
 30090  005610                     __end_of_USART_mySetLineCodingHandler:
 30091                           	opt stack 0
 30092                           tosu	equ	0xFFF
 30093                           tosh	equ	0xFFE
 30094                           tosl	equ	0xFFD
 30095                           pclatu	equ	0xFFB
 30096                           pclath	equ	0xFFA
 30097                           tblptru	equ	0xFF8
 30098                           tblptrh	equ	0xFF7
 30099                           tblptrl	equ	0xFF6
 30100                           tablat	equ	0xFF5
 30101                           prodh	equ	0xFF4
 30102                           prodl	equ	0xFF3
 30103                           intcon	equ	0xFF2
 30104                           intcon3	equ	0xFF0
 30105                           indf0	equ	0xFEF
 30106                           postinc0	equ	0xFEE
 30107                           fsr0h	equ	0xFEA
 30108                           fsr0l	equ	0xFE9
 30109                           wreg	equ	0xFE8
 30110                           indf1	equ	0xFE7
 30111                           postdec1	equ	0xFE5
 30112                           fsr1h	equ	0xFE2
 30113                           fsr1l	equ	0xFE1
 30114                           indf2	equ	0xFDF
 30115                           postinc2	equ	0xFDE
 30116                           postdec2	equ	0xFDD
 30117                           plusw2	equ	0xFDB
 30118                           fsr2h	equ	0xFDA
 30119                           fsr2l	equ	0xFD9
 30120                           status	equ	0xFD8
 30121                           
 30122 ;; *************** function i2_EUSART_Initialize *****************
 30123 ;; Defined at:
 30124 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 30125 ;; Parameters:    Size  Location     Type
 30126 ;;		None
 30127 ;; Auto vars:     Size  Location     Type
 30128 ;;		None
 30129 ;; Return value:  Size  Location     Type
 30130 ;;		None               void
 30131 ;; Registers used:
 30132 ;;		wreg, status,2
 30133 ;; Tracked objects:
 30134 ;;		On entry : 0/0
 30135 ;;		On exit  : 0/0
 30136 ;;		Unchanged: 0/0
 30137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30138 ;;      Params:         0       0       0       0       0       0       0       0       0
 30139 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30140 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30141 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30142 ;;Total ram usage:        0 bytes
 30143 ;; Hardware stack levels used:    1
 30144 ;; This function calls:
 30145 ;;		Nothing
 30146 ;; This function is called by:
 30147 ;;		_USBapp_CdcEmulatorInitialize
 30148 ;;		_USART_mySetLineCodingHandler
 30149 ;; This function uses a non-reentrant model
 30150 ;;
 30151                           
 30152                           	psect	text132
 30153  0058EA                     __ptext132:
 30154                           	opt stack 0
 30155  0058EA                     i2_EUSART_Initialize:
 30156                           	opt stack 17
 30157                           
 30158                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 30159                           
 30160                           ;incstack = 0
 30161  0058EA  9A9D               	bcf	3997,5,c	;volatile
 30162                           
 30163                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 30164  0058EC  989D               	bcf	3997,4,c	;volatile
 30165                           
 30166                           ;eusart.c: 85: BAUDCON = 0x48;
 30167  0058EE  0E48               	movlw	72
 30168  0058F0  6EB8               	movwf	4024,c	;volatile
 30169                           
 30170                           ;eusart.c: 88: RCSTA = 0x90;
 30171  0058F2  0E90               	movlw	144
 30172  0058F4  6EAB               	movwf	4011,c	;volatile
 30173                           
 30174                           ;eusart.c: 91: TXSTA = 0x26;
 30175  0058F6  0E26               	movlw	38
 30176  0058F8  6EAC               	movwf	4012,c	;volatile
 30177                           
 30178                           ;eusart.c: 95: SPBRG = 0xD0;
 30179  0058FA  0ED0               	movlw	208
 30180  0058FC  6EAF               	movwf	4015,c	;volatile
 30181                           
 30182                           ;eusart.c: 100: SPBRGH = 0x00;
 30183  0058FE  0E00               	movlw	0
 30184  005900  6EB0               	movwf	4016,c	;volatile
 30185                           
 30186                           ;eusart.c: 103: eusartTxHead = 0;
 30187  005902  0E00               	movlw	0
 30188  005904  0100               	movlb	0	; () banked
 30189  005906  6F98               	movwf	_eusartTxHead& (0+255),b
 30190                           
 30191                           ;eusart.c: 104: eusartTxTail = 0;
 30192  005908  0E00               	movlw	0
 30193  00590A  0100               	movlb	0	; () banked
 30194  00590C  6F99               	movwf	_eusartTxTail& (0+255),b
 30195                           
 30196                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 30197  00590E  0E40               	movlw	64
 30198  005910  6E4E               	movwf	_eusartTxBufferRemaining,c	;volatile
 30199                           
 30200                           ;eusart.c: 107: eusartRxHead = 0;
 30201  005912  0E00               	movlw	0
 30202  005914  0100               	movlb	0	; () banked
 30203  005916  6F96               	movwf	_eusartRxHead& (0+255),b
 30204                           
 30205                           ;eusart.c: 108: eusartRxTail = 0;
 30206  005918  0E00               	movlw	0
 30207  00591A  0100               	movlb	0	; () banked
 30208  00591C  6F97               	movwf	_eusartRxTail& (0+255),b
 30209                           
 30210                           ;eusart.c: 109: eusartRxCount = 0;
 30211  00591E  0E00               	movlw	0
 30212  005920  6E4D               	movwf	_eusartRxCount,c	;volatile
 30213                           
 30214                           ; BSR set to: 0
 30215                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 30216  005922  8A9D               	bsf	3997,5,c	;volatile
 30217                           
 30218                           ; BSR set to: 0
 30219                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 30220  005924  88AB               	bsf	4011,4,c	;volatile
 30221                           
 30222                           ; BSR set to: 0
 30223  005926  0012               	return		;funcret
 30224  005928                     __end_ofi2_EUSART_Initialize:
 30225                           	opt stack 0
 30226                           tosu	equ	0xFFF
 30227                           tosh	equ	0xFFE
 30228                           tosl	equ	0xFFD
 30229                           pclatu	equ	0xFFB
 30230                           pclath	equ	0xFFA
 30231                           tblptru	equ	0xFF8
 30232                           tblptrh	equ	0xFF7
 30233                           tblptrl	equ	0xFF6
 30234                           tablat	equ	0xFF5
 30235                           prodh	equ	0xFF4
 30236                           prodl	equ	0xFF3
 30237                           intcon	equ	0xFF2
 30238                           intcon3	equ	0xFF0
 30239                           indf0	equ	0xFEF
 30240                           postinc0	equ	0xFEE
 30241                           fsr0h	equ	0xFEA
 30242                           fsr0l	equ	0xFE9
 30243                           wreg	equ	0xFE8
 30244                           indf1	equ	0xFE7
 30245                           postdec1	equ	0xFE5
 30246                           fsr1h	equ	0xFE2
 30247                           fsr1l	equ	0xFE1
 30248                           indf2	equ	0xFDF
 30249                           postinc2	equ	0xFDE
 30250                           postdec2	equ	0xFDD
 30251                           plusw2	equ	0xFDB
 30252                           fsr2h	equ	0xFDA
 30253                           fsr2l	equ	0xFD9
 30254                           status	equ	0xFD8
 30255                           
 30256 ;; *************** function ___lldiv *****************
 30257 ;; Defined at:
 30258 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 30259 ;; Parameters:    Size  Location     Type
 30260 ;;  dividend        4    0[COMRAM] unsigned long 
 30261 ;;  divisor         4    4[COMRAM] unsigned long 
 30262 ;; Auto vars:     Size  Location     Type
 30263 ;;  quotient        4    8[COMRAM] unsigned long 
 30264 ;;  counter         1   12[COMRAM] unsigned char 
 30265 ;; Return value:  Size  Location     Type
 30266 ;;                  4    0[COMRAM] unsigned long 
 30267 ;; Registers used:
 30268 ;;		wreg, status,2, status,0
 30269 ;; Tracked objects:
 30270 ;;		On entry : 0/0
 30271 ;;		On exit  : 0/0
 30272 ;;		Unchanged: 0/0
 30273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30274 ;;      Params:         8       0       0       0       0       0       0       0       0
 30275 ;;      Locals:         5       0       0       0       0       0       0       0       0
 30276 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30277 ;;      Totals:        13       0       0       0       0       0       0       0       0
 30278 ;;Total ram usage:       13 bytes
 30279 ;; Hardware stack levels used:    1
 30280 ;; This function calls:
 30281 ;;		Nothing
 30282 ;; This function is called by:
 30283 ;;		_USART_mySetLineCodingHandler
 30284 ;; This function uses a non-reentrant model
 30285 ;;
 30286                           
 30287                           	psect	text133
 30288  004CC6                     __ptext133:
 30289                           	opt stack 0
 30290  004CC6                     ___lldiv:
 30291                           	opt stack 15
 30292                           
 30293                           ; BSR set to: 0
 30294                           ;incstack = 0
 30295  004CC6  0E00               	movlw	0
 30296  004CC8  6E09               	movwf	___lldiv@quotient,c
 30297  004CCA  0E00               	movlw	0
 30298  004CCC  6E0A               	movwf	___lldiv@quotient+1,c
 30299  004CCE  0E00               	movlw	0
 30300  004CD0  6E0B               	movwf	___lldiv@quotient+2,c
 30301  004CD2  0E00               	movlw	0
 30302  004CD4  6E0C               	movwf	___lldiv@quotient+3,c
 30303  004CD6  5005               	movf	___lldiv@divisor,w,c
 30304  004CD8  1006               	iorwf	___lldiv@divisor+1,w,c
 30305  004CDA  1007               	iorwf	___lldiv@divisor+2,w,c
 30306  004CDC  1008               	iorwf	___lldiv@divisor+3,w,c
 30307  004CDE  B4D8               	btfsc	status,2,c
 30308  004CE0  D02F               	goto	i2l2564
 30309  004CE2  0E01               	movlw	1
 30310  004CE4  6E0D               	movwf	___lldiv@counter,c
 30311  004CE6  D007               	goto	i2l7385
 30312  004CE8                     i2l7383:
 30313  004CE8  90D8               	bcf	status,0,c
 30314  004CEA  3605               	rlcf	___lldiv@divisor,f,c
 30315  004CEC  3606               	rlcf	___lldiv@divisor+1,f,c
 30316  004CEE  3607               	rlcf	___lldiv@divisor+2,f,c
 30317  004CF0  3608               	rlcf	___lldiv@divisor+3,f,c
 30318  004CF2  2A0D               	incf	___lldiv@counter,f,c
 30319  004CF4  D000               	goto	i2l7385
 30320  004CF6                     i2l7385:
 30321  004CF6  BE08               	btfsc	___lldiv@divisor+3,7,c
 30322  004CF8  D002               	goto	i2l7387
 30323  004CFA  D7F6               	goto	i2l7383
 30324  004CFC  D000               	goto	i2l7387
 30325  004CFE                     i2l7387:
 30326  004CFE  90D8               	bcf	status,0,c
 30327  004D00  3609               	rlcf	___lldiv@quotient,f,c
 30328  004D02  360A               	rlcf	___lldiv@quotient+1,f,c
 30329  004D04  360B               	rlcf	___lldiv@quotient+2,f,c
 30330  004D06  360C               	rlcf	___lldiv@quotient+3,f,c
 30331  004D08  5005               	movf	___lldiv@divisor,w,c
 30332  004D0A  5C01               	subwf	___lldiv@dividend,w,c
 30333  004D0C  5006               	movf	___lldiv@divisor+1,w,c
 30334  004D0E  5802               	subwfb	___lldiv@dividend+1,w,c
 30335  004D10  5007               	movf	___lldiv@divisor+2,w,c
 30336  004D12  5803               	subwfb	___lldiv@dividend+2,w,c
 30337  004D14  5008               	movf	___lldiv@divisor+3,w,c
 30338  004D16  5804               	subwfb	___lldiv@dividend+3,w,c
 30339  004D18  A0D8               	btfss	status,0,c
 30340  004D1A  D00A               	goto	i2l7395
 30341  004D1C  5005               	movf	___lldiv@divisor,w,c
 30342  004D1E  5E01               	subwf	___lldiv@dividend,f,c
 30343  004D20  5006               	movf	___lldiv@divisor+1,w,c
 30344  004D22  5A02               	subwfb	___lldiv@dividend+1,f,c
 30345  004D24  5007               	movf	___lldiv@divisor+2,w,c
 30346  004D26  5A03               	subwfb	___lldiv@dividend+2,f,c
 30347  004D28  5008               	movf	___lldiv@divisor+3,w,c
 30348  004D2A  5A04               	subwfb	___lldiv@dividend+3,f,c
 30349  004D2C  8009               	bsf	___lldiv@quotient,0,c
 30350  004D2E  D000               	goto	i2l7395
 30351  004D30                     i2l7395:
 30352  004D30  90D8               	bcf	status,0,c
 30353  004D32  3208               	rrcf	___lldiv@divisor+3,f,c
 30354  004D34  3207               	rrcf	___lldiv@divisor+2,f,c
 30355  004D36  3206               	rrcf	___lldiv@divisor+1,f,c
 30356  004D38  3205               	rrcf	___lldiv@divisor,f,c
 30357  004D3A  2E0D               	decfsz	___lldiv@counter,f,c
 30358  004D3C  D7E0               	goto	i2l7387
 30359  004D3E  D000               	goto	i2l2564
 30360  004D40                     i2l2564:
 30361  004D40  C009  F001         	movff	___lldiv@quotient,?___lldiv
 30362  004D44  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 30363  004D48  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 30364  004D4C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 30365  004D50  0012               	return		;funcret
 30366  004D52                     __end_of___lldiv:
 30367                           	opt stack 0
 30368                           tosu	equ	0xFFF
 30369                           tosh	equ	0xFFE
 30370                           tosl	equ	0xFFD
 30371                           pclatu	equ	0xFFB
 30372                           pclath	equ	0xFFA
 30373                           tblptru	equ	0xFF8
 30374                           tblptrh	equ	0xFF7
 30375                           tblptrl	equ	0xFF6
 30376                           tablat	equ	0xFF5
 30377                           prodh	equ	0xFF4
 30378                           prodl	equ	0xFF3
 30379                           intcon	equ	0xFF2
 30380                           intcon3	equ	0xFF0
 30381                           indf0	equ	0xFEF
 30382                           postinc0	equ	0xFEE
 30383                           fsr0h	equ	0xFEA
 30384                           fsr0l	equ	0xFE9
 30385                           wreg	equ	0xFE8
 30386                           indf1	equ	0xFE7
 30387                           postdec1	equ	0xFE5
 30388                           fsr1h	equ	0xFE2
 30389                           fsr1l	equ	0xFE1
 30390                           indf2	equ	0xFDF
 30391                           postinc2	equ	0xFDE
 30392                           postdec2	equ	0xFDD
 30393                           plusw2	equ	0xFDB
 30394                           fsr2h	equ	0xFDA
 30395                           fsr2l	equ	0xFD9
 30396                           status	equ	0xFD8
 30397                           
 30398 ;; *************** function _TMRapp_Tick *****************
 30399 ;; Defined at:
 30400 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 30401 ;; Parameters:    Size  Location     Type
 30402 ;;		None
 30403 ;; Auto vars:     Size  Location     Type
 30404 ;;		None
 30405 ;; Return value:  Size  Location     Type
 30406 ;;		None               void
 30407 ;; Registers used:
 30408 ;;		None
 30409 ;; Tracked objects:
 30410 ;;		On entry : 0/0
 30411 ;;		On exit  : 0/0
 30412 ;;		Unchanged: 0/0
 30413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30414 ;;      Params:         0       0       0       0       0       0       0       0       0
 30415 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30416 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30417 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30418 ;;Total ram usage:        0 bytes
 30419 ;; Hardware stack levels used:    1
 30420 ;; This function calls:
 30421 ;;		Nothing
 30422 ;; This function is called by:
 30423 ;;		_INTERRUPT_InterruptManager
 30424 ;; This function uses a non-reentrant model
 30425 ;;
 30426                           
 30427                           	psect	text134
 30428  005F4A                     __ptext134:
 30429                           	opt stack 0
 30430  005F4A                     _TMRapp_Tick:
 30431                           	opt stack 20
 30432                           
 30433                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 30434                           
 30435                           ;incstack = 0
 30436  005F4A  0100               	movlb	0	; () banked
 30437  005F4C  818E               	bsf	_appTimer& (0+255),0,b
 30438                           
 30439                           ; BSR set to: 0
 30440  005F4E  0012               	return		;funcret
 30441  005F50                     __end_of_TMRapp_Tick:
 30442                           	opt stack 0
 30443                           tosu	equ	0xFFF
 30444                           tosh	equ	0xFFE
 30445                           tosl	equ	0xFFD
 30446                           pclatu	equ	0xFFB
 30447                           pclath	equ	0xFFA
 30448                           tblptru	equ	0xFF8
 30449                           tblptrh	equ	0xFF7
 30450                           tblptrl	equ	0xFF6
 30451                           tablat	equ	0xFF5
 30452                           prodh	equ	0xFF4
 30453                           prodl	equ	0xFF3
 30454                           intcon	equ	0xFF2
 30455                           intcon3	equ	0xFF0
 30456                           indf0	equ	0xFEF
 30457                           postinc0	equ	0xFEE
 30458                           fsr0h	equ	0xFEA
 30459                           fsr0l	equ	0xFE9
 30460                           wreg	equ	0xFE8
 30461                           indf1	equ	0xFE7
 30462                           postdec1	equ	0xFE5
 30463                           fsr1h	equ	0xFE2
 30464                           fsr1l	equ	0xFE1
 30465                           indf2	equ	0xFDF
 30466                           postinc2	equ	0xFDE
 30467                           postdec2	equ	0xFDD
 30468                           plusw2	equ	0xFDB
 30469                           fsr2h	equ	0xFDA
 30470                           fsr2l	equ	0xFD9
 30471                           status	equ	0xFD8
 30472                           
 30473 ;; *************** function _TMR3_ISR *****************
 30474 ;; Defined at:
 30475 ;;		line 161 in file "../Includes/MccGenerated/tmr3.c"
 30476 ;; Parameters:    Size  Location     Type
 30477 ;;		None
 30478 ;; Auto vars:     Size  Location     Type
 30479 ;;		None
 30480 ;; Return value:  Size  Location     Type
 30481 ;;		None               void
 30482 ;; Registers used:
 30483 ;;		wreg, status,2
 30484 ;; Tracked objects:
 30485 ;;		On entry : 0/0
 30486 ;;		On exit  : 0/0
 30487 ;;		Unchanged: 0/0
 30488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30489 ;;      Params:         0       0       0       0       0       0       0       0       0
 30490 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30491 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30492 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30493 ;;Total ram usage:        0 bytes
 30494 ;; Hardware stack levels used:    1
 30495 ;; This function calls:
 30496 ;;		Nothing
 30497 ;; This function is called by:
 30498 ;;		_INTERRUPT_InterruptManager
 30499 ;; This function uses a non-reentrant model
 30500 ;;
 30501                           
 30502                           	psect	text135
 30503  005D2E                     __ptext135:
 30504                           	opt stack 0
 30505  005D2E                     _TMR3_ISR:
 30506                           	opt stack 20
 30507                           
 30508                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 30509                           
 30510                           ; BSR set to: 0
 30511                           ;incstack = 0
 30512  005D2E  92A1               	bcf	4001,1,c	;volatile
 30513                           
 30514                           ;tmr3.c: 167: if(LATEbits.LATE2 == 1)
 30515  005D30  A48D               	btfss	3981,2,c	;volatile
 30516  005D32  D006               	goto	i2l1581
 30517                           
 30518                           ;tmr3.c: 168: {
 30519                           ;tmr3.c: 169: LATEbits.LATE2 = 0;
 30520  005D34  948D               	bcf	3981,2,c	;volatile
 30521                           
 30522                           ;tmr3.c: 170: TMR3H = 0xD5;
 30523  005D36  0ED5               	movlw	213
 30524  005D38  6EB3               	movwf	4019,c	;volatile
 30525                           
 30526                           ;tmr3.c: 171: TMR3L = 0xD0;
 30527  005D3A  0ED0               	movlw	208
 30528  005D3C  6EB2               	movwf	4018,c	;volatile
 30529                           
 30530                           ;tmr3.c: 172: } else {
 30531  005D3E  0012               	return	
 30532  005D40                     i2l1581:
 30533                           
 30534                           ;tmr3.c: 173: LATEbits.LATE2 = 1;
 30535  005D40  848D               	bsf	3981,2,c	;volatile
 30536                           
 30537                           ;tmr3.c: 174: TMR3H = 0xFB;
 30538  005D42  0EFB               	movlw	251
 30539  005D44  6EB3               	movwf	4019,c	;volatile
 30540                           
 30541                           ;tmr3.c: 175: TMR3L = 0x50;
 30542  005D46  0E50               	movlw	80
 30543  005D48  6EB2               	movwf	4018,c	;volatile
 30544  005D4A  0012               	return	
 30545  005D4C  0012               	return		;funcret
 30546  005D4E                     __end_of_TMR3_ISR:
 30547                           	opt stack 0
 30548                           tosu	equ	0xFFF
 30549                           tosh	equ	0xFFE
 30550                           tosl	equ	0xFFD
 30551                           pclatu	equ	0xFFB
 30552                           pclath	equ	0xFFA
 30553                           tblptru	equ	0xFF8
 30554                           tblptrh	equ	0xFF7
 30555                           tblptrl	equ	0xFF6
 30556                           tablat	equ	0xFF5
 30557                           prodh	equ	0xFF4
 30558                           prodl	equ	0xFF3
 30559                           intcon	equ	0xFF2
 30560                           intcon3	equ	0xFF0
 30561                           indf0	equ	0xFEF
 30562                           postinc0	equ	0xFEE
 30563                           fsr0h	equ	0xFEA
 30564                           fsr0l	equ	0xFE9
 30565                           wreg	equ	0xFE8
 30566                           indf1	equ	0xFE7
 30567                           postdec1	equ	0xFE5
 30568                           fsr1h	equ	0xFE2
 30569                           fsr1l	equ	0xFE1
 30570                           indf2	equ	0xFDF
 30571                           postinc2	equ	0xFDE
 30572                           postdec2	equ	0xFDD
 30573                           plusw2	equ	0xFDB
 30574                           fsr2h	equ	0xFDA
 30575                           fsr2l	equ	0xFD9
 30576                           status	equ	0xFD8
 30577                           
 30578 ;; *************** function _TMR1_ISR *****************
 30579 ;; Defined at:
 30580 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 30581 ;; Parameters:    Size  Location     Type
 30582 ;;		None
 30583 ;; Auto vars:     Size  Location     Type
 30584 ;;		None
 30585 ;; Return value:  Size  Location     Type
 30586 ;;		None               void
 30587 ;; Registers used:
 30588 ;;		wreg, status,2
 30589 ;; Tracked objects:
 30590 ;;		On entry : 0/0
 30591 ;;		On exit  : 0/0
 30592 ;;		Unchanged: 0/0
 30593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30594 ;;      Params:         0       0       0       0       0       0       0       0       0
 30595 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30596 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30597 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30598 ;;Total ram usage:        0 bytes
 30599 ;; Hardware stack levels used:    1
 30600 ;; This function calls:
 30601 ;;		Nothing
 30602 ;; This function is called by:
 30603 ;;		_INTERRUPT_InterruptManager
 30604 ;; This function uses a non-reentrant model
 30605 ;;
 30606                           
 30607                           	psect	text136
 30608  005EE2                     __ptext136:
 30609                           	opt stack 0
 30610  005EE2                     _TMR1_ISR:
 30611                           	opt stack 20
 30612                           
 30613                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 30614                           
 30615                           ;incstack = 0
 30616  005EE2  909E               	bcf	3998,0,c	;volatile
 30617                           
 30618                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 30619  005EE4  5043               	movf	_timer1ReloadVal+1,w,c	;volatile
 30620  005EE6  6ECF               	movwf	4047,c	;volatile
 30621                           
 30622                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 30623  005EE8  C042  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 30624  005EEC  0012               	return		;funcret
 30625  005EEE                     __end_of_TMR1_ISR:
 30626                           	opt stack 0
 30627                           tosu	equ	0xFFF
 30628                           tosh	equ	0xFFE
 30629                           tosl	equ	0xFFD
 30630                           pclatu	equ	0xFFB
 30631                           pclath	equ	0xFFA
 30632                           tblptru	equ	0xFF8
 30633                           tblptrh	equ	0xFF7
 30634                           tblptrl	equ	0xFF6
 30635                           tablat	equ	0xFF5
 30636                           prodh	equ	0xFF4
 30637                           prodl	equ	0xFF3
 30638                           intcon	equ	0xFF2
 30639                           intcon3	equ	0xFF0
 30640                           indf0	equ	0xFEF
 30641                           postinc0	equ	0xFEE
 30642                           fsr0h	equ	0xFEA
 30643                           fsr0l	equ	0xFE9
 30644                           wreg	equ	0xFE8
 30645                           indf1	equ	0xFE7
 30646                           postdec1	equ	0xFE5
 30647                           fsr1h	equ	0xFE2
 30648                           fsr1l	equ	0xFE1
 30649                           indf2	equ	0xFDF
 30650                           postinc2	equ	0xFDE
 30651                           postdec2	equ	0xFDD
 30652                           plusw2	equ	0xFDB
 30653                           fsr2h	equ	0xFDA
 30654                           fsr2l	equ	0xFD9
 30655                           status	equ	0xFD8
 30656                           
 30657 ;; *************** function _EUSART_Transmit_ISR *****************
 30658 ;; Defined at:
 30659 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 30660 ;; Parameters:    Size  Location     Type
 30661 ;;		None
 30662 ;; Auto vars:     Size  Location     Type
 30663 ;;		None
 30664 ;; Return value:  Size  Location     Type
 30665 ;;		None               void
 30666 ;; Registers used:
 30667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30668 ;; Tracked objects:
 30669 ;;		On entry : 0/0
 30670 ;;		On exit  : 0/0
 30671 ;;		Unchanged: 0/0
 30672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30673 ;;      Params:         0       0       0       0       0       0       0       0       0
 30674 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30675 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30676 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30677 ;;Total ram usage:        0 bytes
 30678 ;; Hardware stack levels used:    1
 30679 ;; This function calls:
 30680 ;;		Nothing
 30681 ;; This function is called by:
 30682 ;;		_INTERRUPT_InterruptManager
 30683 ;; This function uses a non-reentrant model
 30684 ;;
 30685                           
 30686                           	psect	text137
 30687  00599C                     __ptext137:
 30688                           	opt stack 0
 30689  00599C                     _EUSART_Transmit_ISR:
 30690                           	opt stack 20
 30691                           
 30692                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 30693                           
 30694                           ;incstack = 0
 30695  00599C  0E40               	movlw	64
 30696  00599E  604E               	cpfslt	_eusartTxBufferRemaining,c	;volatile
 30697  0059A0  D017               	goto	i2l1151
 30698                           
 30699                           ;eusart.c: 167: {
 30700                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 30701  0059A2  0100               	movlb	0	; () banked
 30702  0059A4  5199               	movf	_eusartTxTail& (0+255),w,b
 30703  0059A6  0D01               	mullw	1
 30704  0059A8  0E40               	movlw	low _eusartTxBuffer
 30705  0059AA  24F3               	addwf	prodl,w,c
 30706  0059AC  6ED9               	movwf	fsr2l,c
 30707  0059AE  0E02               	movlw	high _eusartTxBuffer
 30708  0059B0  20F4               	addwfc	prodh,w,c
 30709  0059B2  6EDA               	movwf	fsr2h,c
 30710  0059B4  50DF               	movf	indf2,w,c
 30711  0059B6  6EAD               	movwf	4013,c	;volatile
 30712                           
 30713                           ; BSR set to: 0
 30714  0059B8  0100               	movlb	0	; () banked
 30715  0059BA  2B99               	incf	_eusartTxTail& (0+255),f,b
 30716                           
 30717                           ; BSR set to: 0
 30718                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 30719  0059BC  0E3F               	movlw	63
 30720  0059BE  0100               	movlb	0	; () banked
 30721  0059C0  6599               	cpfsgt	_eusartTxTail& (0+255),b
 30722  0059C2  D004               	goto	i2l10495
 30723                           
 30724                           ; BSR set to: 0
 30725                           ;eusart.c: 170: {
 30726                           ;eusart.c: 171: eusartTxTail = 0;
 30727  0059C4  0E00               	movlw	0
 30728  0059C6  0100               	movlb	0	; () banked
 30729  0059C8  6F99               	movwf	_eusartTxTail& (0+255),b
 30730  0059CA  D000               	goto	i2l10495
 30731  0059CC                     i2l10495:
 30732                           
 30733                           ; BSR set to: 0
 30734                           ;eusart.c: 172: }
 30735                           ;eusart.c: 173: eusartTxBufferRemaining++;
 30736  0059CC  2A4E               	incf	_eusartTxBufferRemaining,f,c	;volatile
 30737                           
 30738                           ;eusart.c: 174: }
 30739  0059CE  0012               	return	
 30740  0059D0                     i2l1151:
 30741                           
 30742                           ;eusart.c: 175: else
 30743                           ;eusart.c: 176: {
 30744                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 30745  0059D0  989D               	bcf	3997,4,c	;volatile
 30746  0059D2  0012               	return	
 30747  0059D4  0012               	return		;funcret
 30748  0059D6                     __end_of_EUSART_Transmit_ISR:
 30749                           	opt stack 0
 30750                           tosu	equ	0xFFF
 30751                           tosh	equ	0xFFE
 30752                           tosl	equ	0xFFD
 30753                           pclatu	equ	0xFFB
 30754                           pclath	equ	0xFFA
 30755                           tblptru	equ	0xFF8
 30756                           tblptrh	equ	0xFF7
 30757                           tblptrl	equ	0xFF6
 30758                           tablat	equ	0xFF5
 30759                           prodh	equ	0xFF4
 30760                           prodl	equ	0xFF3
 30761                           intcon	equ	0xFF2
 30762                           intcon3	equ	0xFF0
 30763                           indf0	equ	0xFEF
 30764                           postinc0	equ	0xFEE
 30765                           fsr0h	equ	0xFEA
 30766                           fsr0l	equ	0xFE9
 30767                           wreg	equ	0xFE8
 30768                           indf1	equ	0xFE7
 30769                           postdec1	equ	0xFE5
 30770                           fsr1h	equ	0xFE2
 30771                           fsr1l	equ	0xFE1
 30772                           indf2	equ	0xFDF
 30773                           postinc2	equ	0xFDE
 30774                           postdec2	equ	0xFDD
 30775                           plusw2	equ	0xFDB
 30776                           fsr2h	equ	0xFDA
 30777                           fsr2l	equ	0xFD9
 30778                           status	equ	0xFD8
 30779                           
 30780 ;; *************** function _EUSART_Receive_ISR *****************
 30781 ;; Defined at:
 30782 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 30783 ;; Parameters:    Size  Location     Type
 30784 ;;		None
 30785 ;; Auto vars:     Size  Location     Type
 30786 ;;		None
 30787 ;; Return value:  Size  Location     Type
 30788 ;;		None               void
 30789 ;; Registers used:
 30790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30791 ;; Tracked objects:
 30792 ;;		On entry : 0/0
 30793 ;;		On exit  : 0/0
 30794 ;;		Unchanged: 0/0
 30795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30796 ;;      Params:         0       0       0       0       0       0       0       0       0
 30797 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30798 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30799 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30800 ;;Total ram usage:        0 bytes
 30801 ;; Hardware stack levels used:    1
 30802 ;; This function calls:
 30803 ;;		Nothing
 30804 ;; This function is called by:
 30805 ;;		_INTERRUPT_InterruptManager
 30806 ;; This function uses a non-reentrant model
 30807 ;;
 30808                           
 30809                           	psect	text138
 30810  0059D6                     __ptext138:
 30811                           	opt stack 0
 30812  0059D6                     _EUSART_Receive_ISR:
 30813                           	opt stack 20
 30814                           
 30815                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 30816                           
 30817                           ;incstack = 0
 30818  0059D6  A2AB               	btfss	4011,1,c	;volatile
 30819  0059D8  D003               	goto	i2l10501
 30820                           
 30821                           ;eusart.c: 184: {
 30822                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 30823  0059DA  98AB               	bcf	4011,4,c	;volatile
 30824                           
 30825                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 30826  0059DC  88AB               	bsf	4011,4,c	;volatile
 30827                           
 30828                           ;eusart.c: 189: }
 30829  0059DE  0012               	return	
 30830  0059E0                     i2l10501:
 30831                           
 30832                           ;eusart.c: 190: else
 30833                           ;eusart.c: 191: {
 30834                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 30835  0059E0  0100               	movlb	0	; () banked
 30836  0059E2  5196               	movf	_eusartRxHead& (0+255),w,b
 30837  0059E4  0D01               	mullw	1
 30838  0059E6  0E00               	movlw	low _eusartRxBuffer
 30839  0059E8  24F3               	addwf	prodl,w,c
 30840  0059EA  6ED9               	movwf	fsr2l,c
 30841  0059EC  0E02               	movlw	high _eusartRxBuffer
 30842  0059EE  20F4               	addwfc	prodh,w,c
 30843  0059F0  6EDA               	movwf	fsr2h,c
 30844  0059F2  CFAE FFDF          	movff	4014,indf2	;volatile
 30845                           
 30846                           ; BSR set to: 0
 30847  0059F6  0100               	movlb	0	; () banked
 30848  0059F8  2B96               	incf	_eusartRxHead& (0+255),f,b
 30849                           
 30850                           ; BSR set to: 0
 30851                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 30852  0059FA  0E3F               	movlw	63
 30853  0059FC  0100               	movlb	0	; () banked
 30854  0059FE  6596               	cpfsgt	_eusartRxHead& (0+255),b
 30855  005A00  D004               	goto	i2l10509
 30856                           
 30857                           ; BSR set to: 0
 30858                           ;eusart.c: 195: {
 30859                           ;eusart.c: 196: eusartRxHead = 0;
 30860  005A02  0E00               	movlw	0
 30861  005A04  0100               	movlb	0	; () banked
 30862  005A06  6F96               	movwf	_eusartRxHead& (0+255),b
 30863  005A08  D000               	goto	i2l10509
 30864  005A0A                     i2l10509:
 30865                           
 30866                           ; BSR set to: 0
 30867                           ;eusart.c: 197: }
 30868                           ;eusart.c: 198: eusartRxCount++;
 30869  005A0A  2A4D               	incf	_eusartRxCount,f,c	;volatile
 30870  005A0C  0012               	return	
 30871                           
 30872                           ; BSR set to: 0
 30873  005A0E  0012               	return		;funcret
 30874  005A10                     __end_of_EUSART_Receive_ISR:
 30875                           	opt stack 0
 30876                           tosu	equ	0xFFF
 30877                           tosh	equ	0xFFE
 30878                           tosl	equ	0xFFD
 30879                           pclatu	equ	0xFFB
 30880                           pclath	equ	0xFFA
 30881                           tblptru	equ	0xFF8
 30882                           tblptrh	equ	0xFF7
 30883                           tblptrl	equ	0xFF6
 30884                           tablat	equ	0xFF5
 30885                           prodh	equ	0xFF4
 30886                           prodl	equ	0xFF3
 30887                           intcon	equ	0xFF2
 30888                           intcon3	equ	0xFF0
 30889                           indf0	equ	0xFEF
 30890                           postinc0	equ	0xFEE
 30891                           fsr0h	equ	0xFEA
 30892                           fsr0l	equ	0xFE9
 30893                           wreg	equ	0xFE8
 30894                           indf1	equ	0xFE7
 30895                           postdec1	equ	0xFE5
 30896                           fsr1h	equ	0xFE2
 30897                           fsr1l	equ	0xFE1
 30898                           indf2	equ	0xFDF
 30899                           postinc2	equ	0xFDE
 30900                           postdec2	equ	0xFDD
 30901                           plusw2	equ	0xFDB
 30902                           fsr2h	equ	0xFDA
 30903                           fsr2l	equ	0xFD9
 30904                           status	equ	0xFD8
 30905                           
 30906 ;; *************** function _CMP1_ISR *****************
 30907 ;; Defined at:
 30908 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 30909 ;; Parameters:    Size  Location     Type
 30910 ;;		None
 30911 ;; Auto vars:     Size  Location     Type
 30912 ;;		None
 30913 ;; Return value:  Size  Location     Type
 30914 ;;		None               void
 30915 ;; Registers used:
 30916 ;;		None
 30917 ;; Tracked objects:
 30918 ;;		On entry : 0/0
 30919 ;;		On exit  : 0/0
 30920 ;;		Unchanged: 0/0
 30921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30922 ;;      Params:         0       0       0       0       0       0       0       0       0
 30923 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30924 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30925 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30926 ;;Total ram usage:        0 bytes
 30927 ;; Hardware stack levels used:    1
 30928 ;; This function calls:
 30929 ;;		Nothing
 30930 ;; This function is called by:
 30931 ;;		_INTERRUPT_InterruptManager
 30932 ;; This function uses a non-reentrant model
 30933 ;;
 30934                           
 30935                           	psect	text139
 30936  005F5C                     __ptext139:
 30937                           	opt stack 0
 30938  005F5C                     _CMP1_ISR:
 30939                           	opt stack 20
 30940                           
 30941                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 30942                           
 30943                           ;incstack = 0
 30944  005F5C  9CA1               	bcf	4001,6,c	;volatile
 30945  005F5E  0012               	return		;funcret
 30946  005F60                     __end_of_CMP1_ISR:
 30947                           	opt stack 0
 30948                           tosu	equ	0xFFF
 30949                           tosh	equ	0xFFE
 30950                           tosl	equ	0xFFD
 30951                           pclatu	equ	0xFFB
 30952                           pclath	equ	0xFFA
 30953                           tblptru	equ	0xFF8
 30954                           tblptrh	equ	0xFF7
 30955                           tblptrl	equ	0xFF6
 30956                           tablat	equ	0xFF5
 30957                           prodh	equ	0xFF4
 30958                           prodl	equ	0xFF3
 30959                           intcon	equ	0xFF2
 30960                           intcon3	equ	0xFF0
 30961                           indf0	equ	0xFEF
 30962                           postinc0	equ	0xFEE
 30963                           fsr0h	equ	0xFEA
 30964                           fsr0l	equ	0xFE9
 30965                           wreg	equ	0xFE8
 30966                           indf1	equ	0xFE7
 30967                           postdec1	equ	0xFE5
 30968                           fsr1h	equ	0xFE2
 30969                           fsr1l	equ	0xFE1
 30970                           indf2	equ	0xFDF
 30971                           postinc2	equ	0xFDE
 30972                           postdec2	equ	0xFDD
 30973                           plusw2	equ	0xFDB
 30974                           fsr2h	equ	0xFDA
 30975                           fsr2l	equ	0xFD9
 30976                           status	equ	0xFD8
 30977                           tosu	equ	0xFFF
 30978                           tosh	equ	0xFFE
 30979                           tosl	equ	0xFFD
 30980                           pclatu	equ	0xFFB
 30981                           pclath	equ	0xFFA
 30982                           tblptru	equ	0xFF8
 30983                           tblptrh	equ	0xFF7
 30984                           tblptrl	equ	0xFF6
 30985                           tablat	equ	0xFF5
 30986                           prodh	equ	0xFF4
 30987                           prodl	equ	0xFF3
 30988                           intcon	equ	0xFF2
 30989                           intcon3	equ	0xFF0
 30990                           indf0	equ	0xFEF
 30991                           postinc0	equ	0xFEE
 30992                           fsr0h	equ	0xFEA
 30993                           fsr0l	equ	0xFE9
 30994                           wreg	equ	0xFE8
 30995                           indf1	equ	0xFE7
 30996                           postdec1	equ	0xFE5
 30997                           fsr1h	equ	0xFE2
 30998                           fsr1l	equ	0xFE1
 30999                           indf2	equ	0xFDF
 31000                           postinc2	equ	0xFDE
 31001                           postdec2	equ	0xFDD
 31002                           plusw2	equ	0xFDB
 31003                           fsr2h	equ	0xFDA
 31004                           fsr2l	equ	0xFD9
 31005                           status	equ	0xFD8
 31006                           
 31007                           	psect	text140
 31008  000000                     __ptext140:
 31009                           	opt stack 0
 31010                           tosu	equ	0xFFF
 31011                           tosh	equ	0xFFE
 31012                           tosl	equ	0xFFD
 31013                           pclatu	equ	0xFFB
 31014                           pclath	equ	0xFFA
 31015                           tblptru	equ	0xFF8
 31016                           tblptrh	equ	0xFF7
 31017                           tblptrl	equ	0xFF6
 31018                           tablat	equ	0xFF5
 31019                           prodh	equ	0xFF4
 31020                           prodl	equ	0xFF3
 31021                           intcon	equ	0xFF2
 31022                           intcon3	equ	0xFF0
 31023                           indf0	equ	0xFEF
 31024                           postinc0	equ	0xFEE
 31025                           fsr0h	equ	0xFEA
 31026                           fsr0l	equ	0xFE9
 31027                           wreg	equ	0xFE8
 31028                           indf1	equ	0xFE7
 31029                           postdec1	equ	0xFE5
 31030                           fsr1h	equ	0xFE2
 31031                           fsr1l	equ	0xFE1
 31032                           indf2	equ	0xFDF
 31033                           postinc2	equ	0xFDE
 31034                           postdec2	equ	0xFDD
 31035                           plusw2	equ	0xFDB
 31036                           fsr2h	equ	0xFDA
 31037                           fsr2l	equ	0xFD9
 31038                           status	equ	0xFD8
 31039                           
 31040                           	psect	rparam
 31041  0000                     tosu	equ	0xFFF
 31042                           tosh	equ	0xFFE
 31043                           tosl	equ	0xFFD
 31044                           pclatu	equ	0xFFB
 31045                           pclath	equ	0xFFA
 31046                           tblptru	equ	0xFF8
 31047                           tblptrh	equ	0xFF7
 31048                           tblptrl	equ	0xFF6
 31049                           tablat	equ	0xFF5
 31050                           prodh	equ	0xFF4
 31051                           prodl	equ	0xFF3
 31052                           intcon	equ	0xFF2
 31053                           intcon3	equ	0xFF0
 31054                           indf0	equ	0xFEF
 31055                           postinc0	equ	0xFEE
 31056                           fsr0h	equ	0xFEA
 31057                           fsr0l	equ	0xFE9
 31058                           wreg	equ	0xFE8
 31059                           indf1	equ	0xFE7
 31060                           postdec1	equ	0xFE5
 31061                           fsr1h	equ	0xFE2
 31062                           fsr1l	equ	0xFE1
 31063                           indf2	equ	0xFDF
 31064                           postinc2	equ	0xFDE
 31065                           postdec2	equ	0xFDD
 31066                           plusw2	equ	0xFDB
 31067                           fsr2h	equ	0xFDA
 31068                           fsr2l	equ	0xFD9
 31069                           status	equ	0xFD8


Data Sizes:
    Strings     1596
    Constant    969
    Data        11
    BSS         534
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      90
    BANK0           160     71     159
    BANK1           256      0     253
    BANK2           256      5     165
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[7]), STR_90(CODE[7]), 
		 -> STR_35(CODE[5]), STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_89(CODE[3]), STR_69(CODE[14]), STR_67(CODE[11]), STR_63(CODE[7]), 
		 -> STR_60(CODE[9]), STR_59(CODE[11]), STR_57(CODE[14]), STR_54(CODE[14]), 
		 -> STR_53(CODE[3]), STR_49(CODE[9]), STR_45(CODE[14]), STR_44(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S6070_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S6070_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S6070_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S6070_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4783$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    S4773$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4773$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4749$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4749$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4749$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4749$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 64
		 -> oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_189(CODE[12]), 
		 -> STR_188(CODE[8]), STR_187(CODE[9]), storedLight(BANK1[5]), STR_182(CODE[5]), 
		 -> STR_181(CODE[8]), STR_180(CODE[8]), STR_179(CODE[9]), STR_162(CODE[16]), 
		 -> STR_161(CODE[17]), STR_160(CODE[17]), STR_159(CODE[4]), STR_158(CODE[4]), 
		 -> STR_157(CODE[4]), STR_156(CODE[4]), STR_155(CODE[4]), STR_154(CODE[4]), 
		 -> STR_153(CODE[4]), STR_152(CODE[16]), STR_151(CODE[17]), STR_150(CODE[4]), 
		 -> STR_149(CODE[4]), STR_148(CODE[4]), STR_147(CODE[4]), STR_146(CODE[4]), 
		 -> STR_145(CODE[4]), STR_144(CODE[4]), STR_143(CODE[4]), STR_142(CODE[4]), 
		 -> STR_141(CODE[4]), STR_140(CODE[4]), STR_139(CODE[4]), STR_138(CODE[4]), 
		 -> STR_137(CODE[16]), STR_136(CODE[12]), STR_135(CODE[17]), STR_134(CODE[16]), 
		 -> STR_133(CODE[16]), STR_132(CODE[16]), STR_131(CODE[15]), STR_130(CODE[15]), 
		 -> STR_129(CODE[16]), STR_128(CODE[4]), STR_127(CODE[3]), STR_126(CODE[3]), 
		 -> STR_125(CODE[3]), STR_124(CODE[3]), STR_123(CODE[2]), STR_122(CODE[5]), 
		 -> STR_121(CODE[7]), STR_120(CODE[17]), STR_119(CODE[17]), STR_118(CODE[2]), 
		 -> STR_117(CODE[7]), STR_116(CODE[7]), STR_115(CODE[16]), STR_114(CODE[16]), 
		 -> STR_113(CODE[15]), STR_112(CODE[15]), STR_111(CODE[17]), STR_110(CODE[16]), 
		 -> STR_109(CODE[17]), STR_108(CODE[17]), STR_107(CODE[7]), STR_106(CODE[10]), 
		 -> STR_105(CODE[17]), STR_104(CODE[16]), STR_103(CODE[16]), STR_102(CODE[16]), 
		 -> STR_101(CODE[16]), STR_100(CODE[17]), STR_99(CODE[17]), STR_98(CODE[16]), 
		 -> STR_96(CODE[19]), STR_94(CODE[17]), STR_92(CODE[17]), STR_91(CODE[17]), 
		 -> responseData(BANK1[32]), responsePortNum(BANK0[3]), STR_88(CODE[13]), STR_87(CODE[12]), 
		 -> STR_86(CODE[12]), STR_83(CODE[18]), STR_82(CODE[13]), STR_81(CODE[17]), 
		 -> STR_80(CODE[16]), STR_79(CODE[17]), STR_78(CODE[17]), STR_77(CODE[16]), 
		 -> STR_76(CODE[17]), STR_75(CODE[17]), STR_73(CODE[13]), STR_72(CODE[12]), 
		 -> STR_71(CODE[17]), STR_65(CODE[7]), STR_64(CODE[10]), STR_62(CODE[11]), 
		 -> STR_61(CODE[11]), STR_56(CODE[9]), STR_55(CODE[11]), STR_51(CODE[11]), 
		 -> STR_50(CODE[10]), STR_47(CODE[9]), STR_46(CODE[11]), STR_42(CODE[17]), 
		 -> STR_40(CODE[17]), STR_38(CODE[17]), STR_37(CODE[17]), STR_36(CODE[17]), 
		 -> STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), moduleResonseBuffer(BANK1[64]), 
		 -> STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), STR_26(CODE[17]), 
		 -> STR_25(CODE[9]), STR_24(CODE[10]), STR_23(CODE[5]), STR_20(CODE[9]), 
		 -> STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), STR_16(CODE[10]), 
		 -> STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), STR_12(CODE[13]), 
		 -> STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), STR_8(CODE[12]), 
		 -> STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[9]), 
		 -> STR_3(CODE[11]), STR_2(CODE[15]), STR_1(CODE[10]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    moteApp_setLightString@lightString	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    moteApp_convertSensorValue@string	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    moteApp_addToDataBuffer@string	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), 

    MOTEapp@sendCommand@string	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_186(CODE[22]), STR_185(CODE[22]), STR_184(CODE[27]), STR_183(CODE[27]), 
		 -> STR_178(CODE[26]), STR_177(CODE[26]), STR_176(CODE[26]), STR_175(CODE[26]), 
		 -> STR_174(CODE[3]), STR_173(CODE[9]), STR_172(CODE[15]), STR_171(CODE[13]), 
		 -> STR_170(CODE[13]), STR_169(CODE[13]), STR_168(CODE[13]), STR_167(CODE[13]), 
		 -> STR_166(CODE[13]), STR_165(CODE[13]), STR_164(CODE[13]), STR_163(CODE[16]), 
		 -> STR_85(CODE[25]), STR_84(CODE[25]), STR_74(CODE[25]), STR_70(CODE[11]), 
		 -> STR_68(CODE[11]), STR_66(CODE[14]), STR_58(CODE[14]), STR_52(CODE[10]), 
		 -> STR_48(CODE[13]), STR_43(CODE[14]), STR_41(CODE[13]), STR_39(CODE[10]), 
		 -> STR_30(CODE[10]), STR_22(CODE[20]), STR_21(CODE[2]), 

    sp__moteApp_getLightString	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    sp__moteApp_getTempValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__moteApp_getLightValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_moteApp_testSensors
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->MOTEapp@sendCommand
    _moteApp_testSensors->_ADC_TempConversion
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_ADC_TempConversion
    _oled_putint8->_oled_putString
    _oled_putUint8->_oled_putString
    _moteApp_setSensorsInput->_moteApp_delayms
    _moteApp_getTempValue->MOTEapp@sendCommand
    _moteApp_getTempValue->_MOTEapp_getModuleResponse
    _moteApp_getLightValue->_moteApp_setLightString
    _moteApp_setLightString->_memcpy
    _moteApp_convertSensorValue->_moteApp_getLightValue
    _moteApp_add8bToDataBuffer->___awmod
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->MOTEapp@sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_getModuleResponse->_EUSART_Read
    _MOTEapp_SetDataRateSetting->MOTEapp@sendCommand
    _ADC_TempConversion->___fldiv
    ___lbtofl->___flpack
    ___flmul->___fladd
    ___fldiv->___flmul
    ___fladd->___flpack
    _moteJoiningProcess->_oled_putString
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->MOTEapp@sendCommand
    MOTEapp@sendCommand->_EUSART_Write
    MOTEapp@EndLine->_EUSART_Write
    _USBapp_Handler->_oled_putString
    _oled_putString->_moteApp_getLightValue
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_moteHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  892602
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  344539
                 _EUSART_FlushBuffer
                    _moteApp_delayms
                _moteApp_testSensors
                         _oled_clear
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          4     4      0   48844
                                             22 BANK0      4     4      0
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   48708
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   48234
                            _delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   52094
                            _delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    3860
                                              3 BANK0      2     2      0
                 MOTEapp@sendCommand
 ---------------------------------------------------------------------------------
 (3) _delayms                                              5     3      2     900
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteApp_testSensors                                  3     3      0  142934
                                             58 BANK0      1     1      0
                 _ADC_TempConversion
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                       _oled_putint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                          6     6      0  429682
                                             70 BANK0      1     1      0
                                              0 BANK2      5     5      0
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                       _oled_putint8
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  12     9      3  228959
                                             58 BANK0     12     9      3
                 MOTEapp@sendCommand
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
          _moteApp_add8bToDataBuffer
            _moteApp_addToDataBuffer
               _moteApp_clearBuffers
         _moteApp_convertSensorValue
                    _moteApp_delayms
             _moteApp_getLightString
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_lightStringSize
            _moteApp_setSensorsInput
                         _oled_clear
                     _oled_putString
                      _oled_putUint8
                       _oled_putint8
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _oled_putint8                                        10     8      2   51815
                                             22 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   51710
                                             22 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_setSensorsInput                              2     2      0    6353
                                              5 BANK0      2     2      0
                 MOTEapp@sendCommand
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
 ---------------------------------------------------------------------------------
 (3) _moteApp_lightStringSize                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _moteApp_getTempValue                                 4     2      2    4067
                                              3 BANK0      4     2      2
                 MOTEapp@sendCommand
          _MOTEapp_getModuleResponse
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightValue                                4     2      2    5130
                                             13 BANK0      4     2      2
                 MOTEapp@sendCommand
          _MOTEapp_getModuleResponse
             _moteApp_setLightString
 ---------------------------------------------------------------------------------
 (4) _moteApp_setLightString                               3     1      2    1063
                                             10 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              10     4      6     798
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightString                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _moteApp_convertSensorValue                           8     6      2    7958
                                             17 BANK0      8     6      2
                             ___wmul
              _moteApp_getLightValue (ARG)
               _moteApp_getTempValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    7068
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     396
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_addToDataBuffer                              5     1      4     645
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    3840
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
            _moteApp_lightStringSize (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     865
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    2305
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   14503
                                             14 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1884
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     282
                                              2 BANK0      1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      65
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      31
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    3829
                                              3 BANK0      1     1      0
                 MOTEapp@sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    6359
                                              5 BANK0      3     3      0
                 MOTEapp@sendCommand
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
 ---------------------------------------------------------------------------------
 (4) _MOTEapp_getModuleResponse                            2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    3891
                                              3 BANK0      2     2      0
                 MOTEapp@sendCommand
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   6     6      0   17659
                                             52 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___lbtofl
 ---------------------------------------------------------------------------------
 (4) ___lbtofl                                             5     1      4    3386
                                             10 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     441
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             15     7      8    4427
                                             22 BANK0     15     7      8
                            ___fladd (ARG)
                           ___flpack
                           ___lbtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             15     7      8    4148
                                             37 BANK0     15     7      8
                            ___flmul (ARG)
                           ___flpack
                           ___lbtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             12     4      8    5124
                                             10 BANK0     12     4      8
                           ___flpack
 ---------------------------------------------------------------------------------
 (5) ___flpack                                            10     4      6    3355
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   60375
                                             22 BANK0      6     4      2
                 MOTEapp@sendCommand
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    2064
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2629
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _moteApp_delayms                                      5     3      2    2252
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     304
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    4201
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    3560
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     641
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    3829
                 MOTEapp@sendCommand
 ---------------------------------------------------------------------------------
 (4) MOTEapp@sendCommand                                   2     0      2    3829
                                              1 BANK0      2     0      2
                     MOTEapp@EndLine
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (5) MOTEapp@EndLine                                       0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   53591
                                             22 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   47334
                                             17 BANK0      5     1      4
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1374
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1374
                                             12 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1244
                                              2 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      96
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0      93
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4800
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2267
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2164
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         14    14      0   30063
                                             31 COMRAM    14    14      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (11) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (13) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         MOTEapp@sendCommand
           MOTEapp@EndLine
             _EUSART_Write
           _EUSART_Write
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     MOTEapp@sendCommand
       MOTEapp@EndLine
         _EUSART_Write
       _EUSART_Write
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
   _moteApp_clearCommand
     MOTEapp@sendCommand
       MOTEapp@EndLine
         _EUSART_Write
       _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_TempConversion
       ___fladd
         ___flpack
       ___fldiv
         ___flmul (ARG)
           ___fladd (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___flmul
         ___fladd (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___fltol
       ___lbtofl
         ___flpack
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_convertSensorValue
       ___wmul
       _moteApp_getLightValue (ARG)
         MOTEapp@sendCommand
           MOTEapp@EndLine
             _EUSART_Write
           _EUSART_Write
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
       _moteApp_getTempValue (ARG)
         MOTEapp@sendCommand
           MOTEapp@EndLine
             _EUSART_Write
           _EUSART_Write
         _MOTEapp_getModuleResponse
           _EUSART_Read
     _moteApp_getLightValue
       MOTEapp@sendCommand
         MOTEapp@EndLine
           _EUSART_Write
         _EUSART_Write
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
     _moteApp_getTempValue
       MOTEapp@sendCommand
         MOTEapp@EndLine
           _EUSART_Write
         _EUSART_Write
       _MOTEapp_getModuleResponse
         _EUSART_Read
     _moteJoiningProcess
       MOTEapp@sendCommand
         MOTEapp@EndLine
           _EUSART_Write
         _EUSART_Write
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           MOTEapp@sendCommand
             MOTEapp@EndLine
               _EUSART_Write
             _EUSART_Write
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _strcmp
       _strncmp
     _moteRunningProcess
       MOTEapp@sendCommand
         MOTEapp@EndLine
           _EUSART_Write
         _EUSART_Write
       _ADC_TempConversion
         ___fladd
           ___flpack
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flmul
           ___fladd (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___fltol
         ___lbtofl
           ___flpack
       _MOTEapp_SetDataRateSetting
         MOTEapp@sendCommand
           MOTEapp@EndLine
             _EUSART_Write
           _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           MOTEapp@sendCommand
             MOTEapp@EndLine
               _EUSART_Write
             _EUSART_Write
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
         _moduleSleep
           MOTEapp@sendCommand
             MOTEapp@EndLine
               _EUSART_Write
             _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                 _Set_Page_Address
                   _oled_writeCommand
                 _oled_writeData
           _oled_devInit
             _oled_initialDispayLine
               _oled_writeCommand
             _oled_powerControl
               _oled_writeCommand
             _oled_regulorResistorSelect
               _oled_writeCommand
             _oled_setContrastControlRegister
               _oled_writeCommand
             _oled_writeCommand
           _oled_setDisplay
             _oled_writeCommand
           _oled_setFont
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
         _moteApp_lightStringSize (ARG)
       _moteApp_addToDataBuffer
       _moteApp_clearBuffers
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           MOTEapp@sendCommand
             MOTEapp@EndLine
               _EUSART_Write
             _EUSART_Write
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
         _moteApp_getTempValue (ARG)
           MOTEapp@sendCommand
             MOTEapp@EndLine
               _EUSART_Write
             _EUSART_Write
           _MOTEapp_getModuleResponse
             _EUSART_Read
       _moteApp_delayms
       _moteApp_getLightString
       _moteApp_getLightValue
         MOTEapp@sendCommand
           MOTEapp@EndLine
             _EUSART_Write
           _EUSART_Write
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
       _moteApp_getTempValue
         MOTEapp@sendCommand
           MOTEapp@EndLine
             _EUSART_Write
           _EUSART_Write
         _MOTEapp_getModuleResponse
           _EUSART_Read
       _moteApp_lightStringSize
       _moteApp_setSensorsInput
         MOTEapp@sendCommand
           MOTEapp@EndLine
             _EUSART_Write
           _EUSART_Write
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           MOTEapp@sendCommand
             MOTEapp@EndLine
               _EUSART_Write
             _EUSART_Write
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             MOTEapp@sendCommand
               MOTEapp@EndLine
                 _EUSART_Write
               _EUSART_Write
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             MOTEapp@sendCommand
               MOTEapp@EndLine
                 _EUSART_Write
               _EUSART_Write
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         MOTEapp@sendCommand
           MOTEapp@EndLine
             _EUSART_Write
           _EUSART_Write
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _oled_putint8
       ___awmod
       ___lbdiv
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           MOTEapp@sendCommand
             MOTEapp@EndLine
               _EUSART_Write
             _EUSART_Write
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
     _moteApp_getLightString (ARG)
     _moteApp_getLightValue (ARG)
       MOTEapp@sendCommand
         MOTEapp@EndLine
           _EUSART_Write
         _EUSART_Write
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
     _oled_putChar (ARG)
       _Set_Column_Address
         _oled_writeCommand
       _Set_Page_Address
         _oled_writeCommand
       _oled_writeData
   _test_powerup
     _EUSART_FlushBuffer
     _moteApp_delayms
     _moteApp_testSensors
       _ADC_TempConversion
         ___fladd
           ___flpack
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flmul
           ___fladd (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___fltol
         ___lbtofl
           ___flpack
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           MOTEapp@sendCommand
             MOTEapp@EndLine
               _EUSART_Write
             _EUSART_Write
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
         _moteApp_getTempValue (ARG)
           MOTEapp@sendCommand
             MOTEapp@EndLine
               _EUSART_Write
             _EUSART_Write
           _MOTEapp_getModuleResponse
             _EUSART_Read
       _moteApp_getLightValue
         MOTEapp@sendCommand
           MOTEapp@EndLine
             _EUSART_Write
           _EUSART_Write
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
       _moteApp_getTempValue
         MOTEapp@sendCommand
           MOTEapp@EndLine
             _EUSART_Write
           _EUSART_Write
         _MOTEapp_getModuleResponse
           _EUSART_Read
       _moteApp_setSensorsInput
         MOTEapp@sendCommand
           MOTEapp@EndLine
             _EUSART_Write
           _EUSART_Write
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           MOTEapp@sendCommand
             MOTEapp@EndLine
               _EUSART_Write
             _EUSART_Write
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             MOTEapp@sendCommand
               MOTEapp@EndLine
                 _EUSART_Write
               _EUSART_Write
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_comms
       _delayms
       _moteApp_toggleLeds
         MOTEapp@sendCommand
           MOTEapp@EndLine
             _EUSART_Write
           _EUSART_Write
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           MOTEapp@sendCommand
             MOTEapp@EndLine
               _EUSART_Write
             _EUSART_Write
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_leds
       _delayms
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           MOTEapp@sendCommand
             MOTEapp@EndLine
               _EUSART_Write
             _EUSART_Write
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           MOTEapp@sendCommand
             MOTEapp@EndLine
               _EUSART_Write
             _EUSART_Write
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_switch
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           MOTEapp@sendCommand
             MOTEapp@EndLine
               _EUSART_Write
             _EUSART_Write
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMR3_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      5      A5       9       64.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      9F       5       99.4%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     2D      5A       1       94.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     29B      14        0.0%
DATA                 0      0     29B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Feb 06 15:38:36 2020

           __size_of_moteApp_lightStringSize 0008                                   _USB_SD_Ptr 75F9  
                               ___fldiv@cntr 00E0                                 ___fldiv@sign 00E2  
                      ??_moteApp_testSensors 00E9                                           l71 2D4A  
                          ??_CMP1_Initialize 00AF                                   _USB_Buffer 0138  
                  _MOTEapp_getModuleResponse 4FE4               moteJoiningProcess@selectButton 00C6  
                              _USBDeviceInit 2732                          ___wmul@multiplicand 00B1  
                    EUSART_FlushBuffer@index 00AF                       __end_of_oled_writeData 5DEA  
                       ??_moteApp_toggleLeds 00B2                           __size_of_CDCInitEP 006E  
                     __end_ofMOTEapp@EndLine 5ED6                     USBapp_handlerState@state 00AF  
                               __CFG_CP0$OFF 000000                                 __CFG_CP1$OFF 000000  
                               __CFG_CP2$OFF 000000                                 __CFG_CP3$OFF 000000  
                               ___flpack@arg 00AF               __end_of_moteApp_setLightString 4F64  
                               ___flpack@exp 00B3         USER_USB_CALLBACK_EVENT_HANDLER@event 000E  
       USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010                                          l120 594C  
                                        l400 1348                                          l137 33BA  
                                        l405 136E                  __end_of_USBStdGetDscHandler 3122  
                                        l343 4C6E                                          l503 0768  
                                        l361 5C84                                          l346 4CBA  
                                        l355 5986                                          l526 0B2A  
                                        l449 1928                                          l386 1DBA  
                                        l571 1070                                          l716 4A62  
                                        l476 02D8                                          l590 1272  
                                        l672 3742                                          l852 4106  
                                        _BDT 000400                                          l678 37C2  
                                        l758 4F60                                          l863 41C0  
                                        _CKE 007E3E                                          l858 41B4  
                                        l883 3952                                          l885 3980  
                                        _CKP 007E34                                          _GIE 007F97  
                               __CFG_CPB$OFF 000000                      ?_oled_initialDispayLine 0001  
                                        _PR2 000FBB                                 __CFG_CPD$OFF 000000  
                         _moteJoiningProcess 133C                                          _UIE 000F64  
                                        _UIR 000F65                              _timer1ReloadVal 0042  
                                        _log 02D0                                   _USBSuspend 5C9C  
                               ___awmod@sign 00B4                 __end_of_moteApp_clearBuffers 44F2  
               __end_of_moteApp_clearCommand 5EA6                         USBStdSetCfgHandler@i 0016  
                            _TMR2_Initialize 5E5C                                          prod 000FF3  
                                        tosl 000FFD                                          wreg 000FE8  
                             _USBDeviceTasks 288A                               _USBDeviceState 0089  
                               ___flmul@cntr 00D2                                 ___flmul@sign 00D3  
                      moteApp_delayms@length 00AF                 MOTEapp_SetDataRateSetting@dr 00B3  
                      ??_USBCtrlTrfRxService 0012                     __size_ofi2_USBDeviceInit 013A  
                             ??_getsUSBUSART 00B9                                 ?_EUSART_Read 0001  
                   USBEnableEndpoint@options 0009                                 __CFG_LVP$OFF 000000  
                        ?_moteJoiningProcess 00C5                                ___flpack@sign 00B4  
                               ___fltol@exp1 00B8                                         l1037 40E4  
                                       l1136 575C                                         l1145 57B6  
                                       l1235 5E10                                         l2080 21F2  
                                       l2075 219E                              _timer3ReloadVal 007E  
                                       l1447 5898                                         l2344 23D8  
                                       l2345 23F0                                         l2337 2376  
                                       l2353 1F16                                         l1715 27A0  
                 USBConfigureEndpoint@handle 0007                                         l2357 1F54  
                                       l2359 1F82                                         l2368 206E  
                                       l2637 5300                                         l1776 5B14  
                                       l1777 5B12                                         STR_1 7F06  
                                       STR_2 7D23                                         STR_3 7EB5  
                                       STR_4 7F3D                                         STR_5 7D81  
                                       STR_6 7D8E                                         STR_7 7CE6  
                                       STR_8 7E5B                                         STR_9 7F46  
                            _lightStringSize 009A                                         _LATD 000F8C  
            __size_of_MOTEapp_TimerBasedTask 002C                                         _PEIE 007F96  
                      ??_USBCtrlTrfTxService 0001                                         _UCFG 000F62  
                                       _UEP0 000F6A                                         _UEP1 000F6B  
                                       _UEIE 000F66                                         u9720 5090  
                                       u9740 50BE                                         u9727 5086  
                                       _UEIR 000F67                                         _UCON 000F60  
                                       u9747 50B4                                         _TMR2 000FBC  
                                       _TMR3 000FB2                              _CDCDataInHandle 0072  
     USBStdFeatureReqHandler@current_ep_data 0019                                         _pDst 007A  
                                       _main 2C58                     ??i2_USBTransferOnePacket 0005  
          __end_of_moteApp_add8bToDataBuffer 3E72                                         fsr0h 000FEA  
                                       fsr1h 000FE2                                         indf0 000FEF  
                                       fsr0l 000FE9                                         fsr2h 000FDA  
                                       indf1 000FE7                                  _BaudRateGen 0130  
                                       fsr1l 000FE1                                         indf2 000FDF  
                                       fsr2l 000FD9                              _USBDeviceAttach 5AEC  
                              __CFG_BORV$190 000000                                         pclat 000FFA  
               moteApp_addToDataBuffer@index 00B3                                         prodh 000FF4  
                                       prodl 000FF3                         _USBapp_setrxByteFlag 5F44  
                                       start 00C4                                __CFG_IESO$OFF 000000  
                            _TMR3_Initialize 5D0C                                  _storedLight 01F6  
                __end_of_USBapp_exitCDCState 5EF8                             __end_of_CMP1_ISR 5F60  
                            ?_oled_putString 00C0                   __end_of_USBCheckStdRequest 3CB2  
                     ??_USBCtrlTrfOutHandler 0014                  __size_of_moteRunningProcess 1274  
                           ?_oled_setDisplay 0001                                __CFG_MCLRE$ON 000000  
                               ___param_bank 000010                    ??_USBStdFeatureReqHandler 0016  
                                _TMRapp_Tick 5F4A                         ??_moteJoiningProcess 00C7  
                     moteApp_delayms@counter 00B2                ?_USART_mySetLineCodingHandler 0001  
                   ??_USBStdGetStatusHandler 0001                 __end_of_USBapp_getrxByteFlag 5F44  
                  __size_of_DATAEE_WriteByte 003E                               ?_USBDeviceInit 0001  
                     _moteApp_getLightString 5EB8                           MOTEapp@sendCommand 5B88  
                              ?_EUSART_Write 0001               __size_of_OSCILLATOR_Initialize 0018  
             __end_of_oled_initialDispayLine 5E5C                              ?_oled_writeData 0001  
              __end_of_OSCILLATOR_Initialize 5E1A                              ?MOTEapp@EndLine 0001  
                                      l12003 254A                                        l11061 57E2  
                                      l11109 5B38                                        l12005 2586  
                                      l11063 57E6                                        l11231 5C36  
                                      l12201 2258                                        l11049 57A6  
                                      l12121 36C4                                        l12113 367E  
                                      l11313 50CC                                        l11145 5B8A  
                                      l11137 596E                                        l11241 2306  
                                      l11411 3F2C                                        l12211 228C  
                                      l11083 5760                                        l12123 36CC  
                                      l12131 3732                                        l12115 368A  
                                      l11075 4744                                        l11307 5070  
                                      l11251 23B6                                        l11243 2318  
                                      l11323 56C8                                        l11171 5040  
                                      l11413 3F44                                        l12221 22CE  
                                      l11093 5794                                        l11149 5BA2  
                                      l11253 23C8                                        l11245 2358  
                                      l11237 22F0                                        l11181 571A  
                                      l13101 0EB4                                        l13013 0B4E  
                                      l12127 36FE                                        l12151 5CE6  
                                      l11263 243E                                        l11503 2F14  
                                      l11319 56BE                                        l11167 5028  
                                      l11175 5058                                        l13111 0F4A  
                                      l13103 0ED2                                        l12217 22A2  
                                      l12209 227E                                        l12161 2182  
                                      l12241 348C                                        l11441 1F78  
                                      l11329 56E4                                        l11601 46C0  
                                      l13201 126A                                        l13105 0EF0  
                                      l13041 0C5A                                        l13009 0B0E  
                                      l12313 33E6                                        l12305 337E  
                                      l12219 22A8                                        l12171 21A8  
                                      l11435 1F66                                        l11523 2FBA  
                                      l11515 2F64                                        l11187 573C  
                                      l13123 0FB2                                        l13107 0F0E  
                                      l13115 0F68                                        l13051 0CF0  
                                      l13043 0C78                                        l12323 3420  
                                      l12307 339C                                        l12165 2192  
                                      l13221 3924                                        l12261 353C  
                                      l12253 350A                                        l12245 34A8  
                                      l12237 3472                                        l11461 201A  
                                      l11429 1F28                                        l11293 4C92  
                                      l12093 37F8                                        l11613 470C  
                                      l11605 46E6                                        l13141 104C  
                                      l13133 1004                                        l13125 0FBC  
                                      l13109 0F2C                                        l13117 0F9A  
                                      l13045 0C96                                        l13061 0D5C  
                                      l13029 0BD8                                        l12325 3434  
                                      l11391 3E90                                        l12191 2222  
                                      l12183 21F8                                        l12159 2176  
                                      l12247 34BA                                        l12271 52C0  
                                      l12511 1410                                        l11455 1FEC  
                                      l11527 2FCE                                        l11543 261A  
                                      l11623 3148                                        l12087 37E6  
                                      l11383 4F54                                        l13151 10BE  
                                      l13047 0CB4                                        l13055 0D0E  
                                      l13215 12DC                                        l12319 3412  
                                      l13321 5AC0                                        l11393 3EAC  
                                      l12177 21DC                                        l12249 34C4  
                                      l12257 351E                                        l12273 52CA  
                                      l12601 1726                                        l11473 2096  
                                      l11457 1FFE                                        l11449 1FBA  
                                      l11537 25F4                                        l11609 46F6  
                                      l11801 4A5A                                        l11385 4F58  
                                      l13137 1028                                        l13129 0FE0  
                                      l13073 0DB6                                        l13049 0CD2  
                                      l13057 0D38                                        l11713 5934  
                                      l12443 5C58                                        l12603 172A  
                                      l12531 14C6                                        l12523 14A0  
                                      l11467 204C                                        l11459 200E  
                                      l11571 26E2                                        l11555 266A  
                                      l11651 31FC                                        l11643 31CC  
                                      l11299 4CB2                                        l11379 4F36  
                                      l13163 1114                                        l11731 35EC  
                                      l13325 5AD4                                        l13253 39D0  
                                      l12277 52F0                                        l12269 52B2  
                                      l12613 1784                                        l12541 150C  
                                      l12525 14A4                                        l11477 20BE  
                                      l11469 205E                                        l11565 26B2  
                                      l11653 320A                                        l13181 1186  
                                      l13173 113A                                        l13149 1092  
                                      l13077 0DCA                                        l13069 0D92  
                                      l11399 3EC6                                        l12199 2248  
                                      l13263 39FA                                        l12471 4E1A  
                                      l12463 4DE8                                        l12447 5C64  
                                      l12623 17F2                                        l12551 1554  
                                      l11487 2112                                        l11567 26BA  
                                      l11559 2692                                        l11639 31B8  
                                      l11671 5332                                        l13183 11A4  
                                      l13175 1140                                        l13087 0E2A  
                                      l13361 277A                                        l12481 4E50  
                                      l12473 4E20                                        l11833 4954  
                                      l12641 189C                                        l12625 17F6  
                                      l12609 1764                                        l11497 2EEE  
                                      l11577 2702                                        l11657 3228  
                                      l11649 31EA                                        l11593 4694  
                                      l11673 533C                                        l11761 5410  
                                      l11913 4BDA                                        l11809 4046  
                                      l13185 11C2                                        l13177 114A  
                                      l13193 121C                                        l13601 1ECE  
                                      l12483 4E58                                        l12475 4E26  
                                      l12651 18F0                                        l12635 186A  
                                      l12571 1606                                        l11667 5326  
                                      l11683 536A                                        l11763 541A  
                                      l11923 4C1C                                        l11915 4BE4  
                                      l13195 124E                                        l13187 11E0  
                                      l13179 1168                                        l13099 0E96  
                                      l12803 043C                                        l13373 27AC  
                                      l13381 27C0                                        l13365 2798  
                                      l11853 54EA                                        l11837 4996  
                                      l11829 4924                                        l12653 18F4  
                                      l12645 18AE                                        l12637 186E  
                                      l12557 158A                                        l12493 135E  
                                      l11597 46A8                                        l11589 4682  
                                      l11933 4E66                                        l11757 53F4  
                                      l11773 5682                                        l11925 4C26  
                                      l11909 4BBE                                        l13189 11FE  
                                      l12733 0268                                        l13541 1CEA  
                                      l13533 1CC4                                        l13517 1C86  
                                      l12479 4E4A                                        l13471 410A  
                                      l11847 549E                                        l11839 49A4  
                                      l12663 191A                                        l12639 1896  
                                      l12583 1676                                        l12567 15F0  
                                      l12671 196C                                        l11599 46B6  
                                      l11679 535C                                        l11951 4EDC  
                                      l11871 4468                                        l11863 4446  
                                      l11919 4C00                                        l12903 0704  
                                      l12807 0450                                        l13543 1CF2  
                                      l13527 1CA6                                        l13519 1C8E  
                                      l13385 27E8                                        l13481 4166  
                                      l11849 54AC                                        l12593 16C2  
                                      l12585 1686                                        l12569 1600  
                                      l12489 134C                                        l12673 19B4  
                                      l11945 4EBE                                        l11937 4E70  
                                      l11881 448E                                        l11777 569E  
                                      l12761 02F0                                        l12729 0254  
                                      l13561 1D94                                        l13537 1CDC  
                                      l13395 2858                                        l12667 1932  
                                      l12659 190A                                        l12587 168C  
                                      l11947 4ED6                                        l11883 4494  
                                      l11875 4472                                        l11859 443C  
                                      l11795 4A14                                        l11779 56A8  
                                      l12915 0754                                        l12923 07A6  
                                      l12851 0568                                        l12843 0530  
                                      l12771 0350                                        l12755 02CE  
                                      l12747 02B2                                        l13651 2CD6  
                                      l13389 27F2                                        l13485 4170  
                                      l11893 44BA                                        l11869 4462  
                                      l11789 49DC                                        l12933 0848  
                                      l12917 075C                                        l12909 070E  
                                      l12757 02DC                                        l13581 1E20  
                                      l13487 4178                                        l11991 24F0  
                                      l11983 24A8                                        l11887 449E  
                                      l11799 4A56                                        l12943 08C0  
                                      l12919 0760                                        l12855 057C  
                                      l12847 054C                                        l12783 03BA  
                                      l13671 2D60                                        l11993 2502  
                                      l11985 24BA                                        l12953 0920  
                                      l12929 07F8                                        l12937 0898  
                                      l12881 065E                                        l12873 0622  
                                      l13569 1DBE                                        l13665 2D4E  
                                      l13499 419C                                        l11995 2514  
                                      l11987 24CC                                        l11899 44CC  
                                      l12939 08AC                                        l13595 1E9C  
                                      l11997 2526                                        l11989 24DE  
                                      l12965 098A                                        l11999 2538  
                                      l13599 1EB2                                        l13679 2D78  
                                      l12985 0A4A                                        l12989 0A5E  
                                      l12999 0ABE                                ___fltol@sign1 00B7  
                            __end_of___almod 3550                              __end_of___fladd 2142  
                                      ?_main 0001                              __end_of___fldiv 2FFE  
                            __end_of___lbdiv 5372                                        _EEADR 000FA9  
                                      STR_10 7DEB                                        STR_11 7E67  
                                      STR_20 7F4F                                        STR_12 7E12  
                                      STR_21 7FFC                                        STR_13 7DF8  
                                      STR_30 7EF2                                        STR_14 7E05  
                                      STR_22 7AA5                                        STR_23 7AEA  
                                      STR_31 7FB8                                        STR_15 7EAA  
                                      STR_16 7EFC                                        STR_24 7ED4  
                                      STR_32 7B66                                        STR_40 7ADE  
                                      STR_17 7F58                                        STR_25 7F34  
                                      STR_41 7DDE                                        STR_33 7BBB  
                                      STR_18 7F69                                        STR_50 7ECA  
                                      STR_26 7BCC                                        STR_34 7B11  
                                      STR_42 7B00                                        STR_35 7FBD  
                                      STR_19 7F71                                        STR_51 7E89  
                                      STR_43 7D32                                        STR_27 7C21  
                                      STR_36 7B66                                        STR_60 7F22  
                                      STR_44 7FF7                                        STR_52 7EE8  
                                      STR_28 7C32                              __end_of___awmod 4718  
                                      STR_37 7BBB                                        STR_53 7FF7  
                                      STR_61 7E73                                        STR_45 7D4E  
                                      STR_29 7B55                                        STR_38 7B11  
                                      STR_62 7E89                                        STR_70 7E94  
                                      STR_54 7D4E                                        STR_46 7E9F  
                                      STR_55 7E9F                                        STR_39 7EF2  
                                      STR_63 7F95                                        STR_47 7F19  
                                      STR_71 7C54                                        STR_80 7CA6  
                                      STR_56 7F19                                        STR_48 7DDE  
                                      STR_64 7EDE                                        STR_72 7E2B  
                                      STR_65 7F8E                                        STR_49 7F22  
                                      STR_73 7D69                                        STR_57 7D40  
                                      STR_81 7BFF                                        STR_66 7D32  
                                      STR_58 7D32                                        STR_90 7FAA  
                                      STR_82 7D5C                                        STR_74 7A60  
                                      STR_67 7E7E                                        STR_59 7E7E  
                                      STR_91 7B77                                        STR_75 7B44  
                                      STR_83 7ACC                                        STR_84 7A60  
                                      STR_68 7E94                                        STR_76 7BAA  
                                      STR_92 7AEF                                        STR_85 7A60  
                                      STR_69 7D40                                        STR_93 7FB1  
                                      STR_77 7CA6                                        STR_86 7E43  
                                      STR_94 7BDD                                        STR_78 7B33  
                                      STR_95 7FA3                                        STR_87 7E37  
                                      STR_79 7B22                                        STR_88 7D69  
                                      STR_96 7AB9                              __end_of___flmul 2732  
                                      STR_89 7FF7                                        STR_97 7F9C  
                                      STR_98 7CD6                                        STR_99 7B44  
          __size_of_USBCtrlEPServiceComplete 010A                              __end_of___fltol 323C  
                            _TMR1_StartTimer 5F58                              __end_of___lldiv 4D52  
                                      u10180 3168                                        u10185 315C  
          __size_of_MOTEapp_setResponseReady 0008                                        u10285 58A8  
                                      u10286 58AA                                        _T1CON 000FCD  
                     __end_of_USBDeviceTasks 29DA                                        u10750 2166  
                                      u12270 1D0C                                        _T2CON 000FBA  
                                      u10690 366E                                        u12507 3604  
                                      u12517 3616                                        u12437 3428  
                                      u10758 216A                                        u12607 248A  
                                      u12527 3628                                        u12447 355C  
                                      _T3CON 000FB1                                        u12617 249C  
                                      u12537 593C                                        u12457 356E  
                                      u10698 3672                                        u12627 258E  
                                      u12547 08A0                                        u12467 3580  
                                      u12637 25A0                                        u12557 4F74  
                                      u12477 35AC                                        u12647 25B2  
                                      u12567 4F88                                        u12487 35BE  
                                      u12657 193A                                        u12577 4F9A  
                                      u12497 35D0                    ?_USBCtrlEPServiceComplete 0001  
                                      u12667 194C                                        u12587 5C90  
                                      u12677 195E                                        u12597 2478  
                                      u12687 5976                              __end_of___lwmod 530A  
                  ?_MOTEapp_setResponseReady 0001                          oled_putUint8@number 00C7  
                                      _UADDR 000F63                                        _RCREG 000FAE  
                                      _RCSTA 000FAB                                        _TMR1H 000FCF  
                                      _TMR3H 000FB3                                        _TMR1L 000FCE  
                                      _TMR3L 000FB2                                        _SPBRG 000FAF  
                                      _TRISD 000F95      moteApp_add8bToDataBuffer@bufferLocation 00B5  
                                      _USTAT 000F61                                        _TXREG 000FAD  
                                      _TXSTA 000FAC                                __CFG_WRT0$OFF 000000  
         __size_of_USBCtrlEPAllowStatusStage 00D0                              __end_of_delayms 5962  
                              __CFG_WRT1$OFF 000000                                __CFG_WRT2$OFF 000000  
                              __CFG_WRT3$OFF 000000                               __CFG_EBTR0$OFF 000000  
                             __CFG_FCMEN$OFF 000000                               __CFG_EBTR1$OFF 000000  
                             __CFG_EBTR2$OFF 000000                               __CFG_EBTR3$OFF 000000  
            __end_of_USBCtrlEPAllowDataStage 4B0C                            oled_putChar@index 00BA  
                           __end_of_TMR1_ISR 5EEE                                        _sd000 79BE  
                                      _sd001 7944              service_pushbutton@Release_Timer 00A9  
                                      _sd002 7978                                __CFG_WRTB$OFF 000000  
                           __end_of_TMR3_ISR 5D4E                                __CFG_WRTC$OFF 000000  
                              __CFG_WRTD$OFF 000000                              _DATAEE_ReadByte 5E1A  
                             __CFG_EBTRB$OFF 000000                                   i2memset@p1 0001  
                                      _light 0076                               __pbitbssCOMRAM 02D0  
                    __end_of_TMR1_Initialize 5A80                                 _runningState 00A5  
                                      pclath 000FFA                                        tablat 000FF5  
                                      plusw2 000FDB                            __end_of_CDCInitEP 529E  
                 oled_setDisplay@displayType 00B0                                        status 000FD8  
                             __CFG_T3CMX$RC0 000000                              _TMR2_StartTimer 5F54  
                            __end_of_strncmp 49C8                              ___lbdiv@divisor 00AF  
                             __CFG_ICPRT$OFF 000000                        ?_USBapp_setrxByteFlag 0001  
                           __end_ofi2_memset 5C1A                              ___lbdiv@counter 00B1  
                               _m10SecTicker 0078                 __end_of_moteApp_getTempValue 56B8  
                            putUSBUSART@data 00AF           USART_mySetLineCodingHandler@dwBaud 000E  
               __size_of_USBStdSetCfgHandler 00E2                              __initialization 50DC  
                      TMR2_ReadTimer@readVal 00AF                __size_of_TMRapp_ClearBitFlags 0008  
                               __end_of_main 2D90                        _control_signal_bitmap 0092  
              __size_of_MOTEapp_handlerState 000A                       _MOTEapp_TimerBasedTask 5C46  
                             ??_EUSART_Write 00AF                      __end_of_TMR2_Initialize 5E70  
                               ?_sendCommand 00B0                  ?_INTERRUPT_InterruptManager 0001  
                  __size_of_USBCtrlEPService 00D0                                       ??_main 00F6  
                               ?_moduleSleep 0001                                 ?_moteHandler 0001  
           __size_of_moteApp_addToDataBuffer 0084                              _TMR3_StartTimer 5F50  
                              __activetblptr 000002                              ?_USBDeviceTasks 0001  
                        i2_EUSART_Initialize 58EA                                  ?_USBSuspend 0001  
                                 _NextUSBOut 0045                               __CFG_SDOMX$RB3 000000  
                            __CFG_CCP2MX$RC1 000000                                 _cdc_mem_type 008F  
           moteApp_convertSensorValue@string 00C0                      __end_of_USBDeviceAttach 5B22  
                                     _ADCON0 000FC2                                       _ADCON1 000FC1  
                                     _ADCON2 000FC0                             _CDCDataOutHandle 0074  
                          _getsUSBUSART$6438 00BA                                       _ACTCON 000FB5  
                                     STR_100 7BAA                                       STR_101 7CA6  
                                     STR_110 7CA6                                       STR_102 7C86  
                                     STR_103 7C76                                       STR_111 7C43  
                                     STR_104 7CA6                                       STR_112 7CF6  
                                     STR_120 7B88                                       STR_121 7F87  
                                     STR_113 7D05                                       STR_105 7C65  
                                     STR_130 7D05                                       STR_122 7FC2  
                                     STR_106 7EC0                                       STR_114 7C96  
                                     _ADRESH 000FC4                                       STR_131 7CF6  
                                     STR_115 7C86                                       STR_107 7E48  
                                     STR_123 7DC2                                       STR_132 7C86  
                                     STR_108 7B33                                       STR_124 7FE0  
                                     STR_140 7FCF                                       STR_116 7F80  
                                     STR_133 7C76                                       STR_109 7B22  
                                     STR_125 7FEC                                       STR_141 7FD3  
                                     STR_117 7F79                                       STR_134 7CA6  
                                     STR_126 7FE4                                       STR_150 7FEF  
                                     STR_118 7FFA                                       STR_142 7FD7  
                                     _ADRESL 000FC3                                       STR_127 7FE8  
                                     STR_143 7FDB                                       STR_135 7C10  
                                     STR_151 7BEE                                       STR_119 7B99  
                                     STR_160 7B44                                       STR_144 7FF3  
                                     STR_128 7FEF                                       STR_136 7E4F  
                                     STR_152 7CB6                                       STR_137 7C96  
                                     STR_129 7C96                                       STR_153 7FC7  
                                     STR_145 7FDB                                       STR_161 7BAA  
                                     STR_162 7CA6                                       STR_154 7FCB  
                                     STR_146 7FDF                                       STR_138 7FC7  
                                     STR_170 7DC4                                       STR_155 7FCF  
                                     STR_147 7FEB                                       STR_139 7FCB  
                                     STR_171 7DD1                                       STR_163 7CC6  
                                     STR_156 7FD3                                       STR_180 7F71  
                                     STR_148 7FE3                                       STR_164 7D76  
                                     STR_172 7D14                                       STR_157 7FD7  
                                     STR_181 7F69                                       STR_149 7FE7  
                                     STR_173 7F2B                                       STR_165 7D83  
                                     _EEDATA 000FA8                                       STR_174 7A0F  
                                     STR_182 7AEA                                       STR_158 7FDB  
                                     STR_166 7D90                                       STR_159 7FF3  
                                     STR_167 7D9D                                       STR_175 7A2C  
                                     STR_183 79DD                                       STR_168 7DAA  
                                     STR_176 7A46                                       STR_184 79C2  
                                     STR_169 7DB7                                       STR_185 7A79  
                                     STR_177 79F8                                       STR_186 7A8F  
                                     STR_178 7A12                                       STR_179 7F58  
                                     STR_187 7F10                                       STR_188 7F61  
                                     STR_189 7E1F                             __end_of___flpack 2452  
                                     _EECON2 000FA7                             __end_of___lbtofl 5AB6  
                            getsUSBUSART@len 00B8                                       _T1GCON 000FCC  
                       oled_putUint8@numData 00C8                                       _T3GCON 000FB4  
                      __size_of_CDCTxService 0190                                       i2l1203 008A  
                    __end_of_TMR3_Initialize 5D2E                                       i2l2021 454C  
                                     i2l1151 59D0                                       i2l2023 457E  
                                     i2l1195 005C                                       i2l1197 006C  
                                     i2l1199 0078                                       i2l1801 32BC  
                                     i2l1715 2B7C                                       i2l1581 5D40  
                                     i2l1727 28BA                                       i2l1737 295A  
                                     i2l1914 3B9A                                       i2l1738 29D6  
                                     i2l1739 296A                                       i2l2564 4D40  
                                     i2l1943 19E8                                       i2l1864 45BA  
                                     i2l1928 3BE2                                       i2l1937 3C34  
                                     i2l1962 1BB8                                       i2l1867 464E  
                                     i2l1868 45D2                                       i2l1869 45D6  
                                     i2l1877 582A                                       i2l7111 4414  
                                     i2l7113 442A                                       i2l8003 2DE4  
                                     i2l7213 5594                                       i2l8015 2E3E  
                                     i2l7055 4B6E                                       i2l7225 4502  
                                     i2l7057 4B88                                       i2l7209 558C  
                                     i2l7401 5BF6                                       i2l8041 3BEC  
                                     i2l8019 2E58                                       i2l7251 4568  
                                     i2l7243 4540                                       i2l7235 452A  
                                     i2l7083 5850                                       i2l7091 438C  
                                     i2l7219 55AC                                       i2l8043 3BF2  
                                     i2l8029 2EB8                                       i2l7229 4514  
                                     i2l7093 43A6                                       i2l7405 5C08  
                                     i2l8053 3C0A                                       i2l8045 3BF8  
                                     i2l7343 3F6E                                       i2l7079 5840  
                                     i2l8055 3C12                                       i2l8071 3C6C  
                                     i2l8057 3C18                                       i2l7347 3F7A  
                                     i2l7259 4586                                       i2l7099 43B8  
                                     i2l7291 550C                                       i2l8067 3C4E  
                                     i2l7357 3FA6                                       i2l7365 3FDE  
                                     i2l7285 5500                                       i2l7701 1AA8  
                                     i2l7613 300E                                       i2l7605 3D6E  
                                     _TABLAT 000FF5                                       i2l7383 4CE8  
                                     i2l7367 3FEA                                       i2l7375 4022  
                                     i2l7287 5506                                       i2l7385 4CF6  
                                     i2l7529 42F4                                       i2l7721 1B50  
                                     i2l7705 1AC4                                       i2l7633 30FA  
                                     i2l7625 30A4                                       i2l7617 3020  
                                     i2l7395 4D30                                       i2l7387 4CFE  
                                     i2l7731 1B96                                       i2l7715 1B18  
                                     i2l7707 1AE6                                       i2l7635 3100  
                                     i2l7627 30AA                                       i2l7651 45F4  
                                     i2l7563 4AD8                                       i2l7741 1BD4  
                                     i2l7733 1BA4                                       i2l7717 1B36  
                                     i2l7653 4616                                       i2l7645 45C4  
                                     i2l7661 4636                                       i2l7743 1BF2  
                                     i2l7639 3106                                       i2l7583 3CFA  
                                     i2l7559 4ABE                                       i2l7747 1C1C  
                                     i2l7579 3CF2                                       i2l7749 1C2A  
                                     i2l7693 1A5E                                       i2l7589 3D26  
                                     i2l7695 1A9C                                       i2l7679 19E0  
                                     i2l7961 32D4                                       i2l7945 3258  
                                     i2l8923 5492                                       i2l8915 5448  
                                     i2l7699 1AA4                                       i2l7949 3266  
                                     i2l8951 3B60                                       i2l8937 3B18  
                                     i2l7993 2DB2                                       i2l7969 32EC  
                                     i2l8939 3B20                                       i2l8965 3BC2  
                                     i2l8957 3B80                                       i2l7997 2DC0  
                                     i2l8967 3BC6                                       _OSCCON 000FD3  
                              CDCTxService@i 00B9                                       _SPBRGH 000FB0  
                                     _SSPBUF 000FC9                     i2USBTransferOnePacket@ep 0005  
                          ??i2_USBDeviceInit 0009              __size_ofi2_USBTransferOnePacket 00C0  
                       ?i2_EUSART_Initialize 0001                         oled_displayOff@state 0001  
                              oled_putChar@k 00B9               __size_of_moteApp_getLightValue 0062  
              __end_of_moteApp_getLightValue 543A                            _shortPacketStatus 0051  
             moteRunningProcess@changeStates 00F4                               __CFG_XINST$OFF 000000  
                       _moteApp_clearBuffers 4436                         _moteApp_clearCommand 5E94  
                    _moteApp_lightStringSize 5F16                 ??_MOTEapp_SetDataRateSetting 00B2  
                            USBDeviceTasks@i 001F                   __end_of_Set_Column_Address 5D6C  
                USBStdFeatureReqHandler@pUEP 0017                     USBTransferOnePacket@data 00B0  
                 USBCtrlTrfInHandler@lastDTS 0012                              ??_USBDeviceInit 00B7  
                  __size_of_Set_Page_Address 001A                      __end_of_TMR1_StartTimer 5F5C  
                               ?_putUSBUSART 00AF                                    ??___almod 00B7  
                                  ??___fladd 00C1                                       ___wmul 5A10  
                                  ??___fldiv 00DC                                    ??___lbdiv 00B0  
                             __CFG_STVREN$ON 000000                                    ??___awmod 00B3  
                   ?_moteApp_setSensorsInput 0001                                    ??___flmul 00CD  
                                  ??___fltol 00B3                                    ??___lldiv 0009  
                                     _appKey 0280                         __end_of_getsUSBUSART 373A  
                                  ??___lwmod 00B3                            _USBEnableEndpoint 582E  
            __size_of_USBStdGetStatusHandler 00B8                          _EUSART_Transmit_ISR 599C  
                                     _memcpy 5708                                       _memset 5AB6  
                                     clear_0 50E2                                       clear_1 50EE  
                                     clear_2 50FA                                       clear_3 5108  
                            ___awmod@divisor 00B1                                    ??_delayms 00B1  
                            ___awmod@counter 00B3                           ?_USBEnableEndpoint 0009  
             ??_USART_mySetLineCodingHandler 000E                      __end_of_DATAEE_ReadByte 5E32  
                                     _strcmp 549C                   __end_of_ADC_TempConversion 3AE8  
              __size_of_USBTransferOnePacket 00DE                              _moteApp_delayms 5962  
                __size_of_service_pushbutton 0086                                 _CDCTxService 2142  
                               __mediumconst 75F8                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                        ??_USBEnableEndpoint 000A                                    ?_CMP1_ISR 0001  
                    __end_of_TMR2_StartTimer 5F58                                 _dataRateRead 0094  
                                _CtrlTrfData 000438                                    ??_strncmp 00B5  
                           ___lbdiv@dividend 00B0                                ?_oled_devInit 0001  
                       ?_EUSART_Transmit_ISR 0001                                   ___fladd@f1 00B9  
                                 ___fladd@f2 00BD                         _controlTransferState 004B  
                  USBapp_Handler@buttonPress 00C5                         _USBapp_getrxByteFlag 5F3E  
                           ?_TMR1_Initialize 0001                         __CFG_LS48MHZ$SYS48X8 000000  
        __size_of_MOTEapp_SetDataRateSetting 017C                         __size_of_EUSART_Read 004C  
                          _SYSTEM_Initialize 5CEA                 __size_of_USBapp_handlerState 000A  
                                 ___fldiv@f1 00D4                                   ___fldiv@f2 00D8  
                                 ___fldiv@f3 00DC           moteApp_getLightValue@escapeCounter 00BE  
                                 __accesstop 0060                      __end_of__initialization 5146  
                     ??_USBapp_setrxByteFlag 0001                              __CFG_PBADEN$OFF 000000  
                               ?_test_switch 0001                        ??i2_EUSART_Initialize 0001  
                            _CMP1_Initialize 5EA6                           ?_SYSTEM_Initialize 0001  
                         oled_writeData@data 00AF                                   ___flmul@f1 00C5  
                                 ___flmul@f2 00C9                                ___rparam_used 000001  
                              ?_oled_setFont 00AF                     __size_of_USBStallHandler 0044  
                                 ___fltol@f1 00AF                                ?_oled_putChar 00B1  
                                 ___lbtofl@c 00BD                        ?_moteApp_clearBuffers 0001  
                      ?_moteApp_clearCommand 0001                          __size_of_USBSuspend 002A  
                __size_of_EUSART_FlushBuffer 0050                                ?_oled_putint8 00C5  
                             __pcstackCOMRAM 0001                    __end_of_USBEnableEndpoint 586E  
                           __CFG_nPWRTEN$OFF 000000                                __end_of_sd000 79C2  
                              __end_of_sd001 7978                                __end_of_sd002 79AC  
                               __pidataBANK0 5F0C                                 __pidataBANK1 5F60  
                        ??_SYSTEM_Initialize 00B1                      __end_of_TMR3_StartTimer 5F54  
                                  ?_TMR1_ISR 0001                                    ?_TMR3_ISR 0001  
           __size_of_USBCtrlEPAllowDataStage 00A0                             _DATAEE_WriteByte 586E  
              __size_of_USBConfigureEndpoint 0096      __end_of_oled_setContrastControlRegister 5E48  
   __size_of_oled_setContrastControlRegister 0016             ?_oled_setContrastControlRegister 0001  
          ??_oled_setContrastControlRegister 00B0              _oled_setContrastControlRegister 5E32  
                __end_of_USBCtrlTrfInHandler 3BCE                             ?_TMR2_Initialize 0001  
                           ___lbdiv@quotient 00B2         moteApp_setSensorsInput@escapeCounter 00B4  
                     i2_USBTransferOnePacket 4376                              __CFG_PCLKEN$OFF 000000  
                             __CFG_nLPBOR$ON 000000                            __end_of_OledFont0 7901  
                          _CDCTxService$6486 00B7                                   _cdc_notice 01D8  
                                  ?i2_memset 0001                                   _cdc_rx_len 0090  
                                 _cdc_tx_len 0091                         _moteApp_getTempValue 5666  
                                 ??_CMP1_ISR 0001                              _responsePortNum 00AA  
                   ??_USBCtrlTrfSetupHandler 001C                                   _dataBuffer 0110  
                             ??_oled_devInit 00B1                             ?_USBDeviceAttach 0001  
                  __end_of_SYSTEM_Initialize 5D0C                        ??_EUSART_Transmit_ISR 0001  
                     _USBStdGetStatusHandler 45AC                                ?_moduleResync 0001  
                      ?_USBapp_getrxByteFlag 0001                         service_pushbutton@bs 00AF  
                                 __pbssBANK0 0060                                   __pbssBANK1 0100  
                                 __pbssBANK2 0200                         __end_of_EUSART_Write 57EA  
                    __size_of_TMR2_ReadTimer 000C                             ?_TMR3_Initialize 0001  
                           ??_oled_putString 00C4                  oled_regulorResistorSelect@r 00B0  
                    moduleResync@escapeEvent 00B6                               ??_oled_setFont 00B1  
               ??_moteApp_convertSensorValue 00C2                              _periodicUpValue 00FE  
                  ??_moteApp_lightStringSize 00AF                  __size_of_EUSART_Receive_ISR 003A  
                        oled_putString@index 00C4                               ??_oled_putChar 00B3  
                __size_of_USBWakeFromSuspend 0032                                  _pBDTEntryIn 0036  
                     __size_of_oled_clearRow 0034                                   _clearLight 01F1  
                __end_of_moteApp_testSensors 3914             __end_of_USBCtrlEPServiceComplete 3346  
           __end_of_MOTEapp_setResponseReady 5F3E                               ??_oled_putint8 00C7  
                     oled_putChar@start_page 00B2                  __size_of_USBCheckCDCRequest 00BA  
                          __CFG_PLLSEL$PLL3X 000000                           __size_of_oled_init 0032  
                    ?_moteApp_getLightString 00AF                             ??_oled_writeData 00AF  
                       USBCtrlTrfRxService@i 0012                                 ?_TMRapp_Tick 0001  
                           ??MOTEapp@EndLine 00B0                                      ?___wmul 00AF  
                           ?_TMR1_StartTimer 0001                                   ??_TMR1_ISR 0001  
                                 ??_TMR3_ISR 0001                      __end_of_moteApp_delayms 599C  
                                    _CM1CON0 000F98                      __size_of_USBapp_Handler 00D2  
                    __size_of_TMRapp_Handler 0144                                      ?_memcpy 00AF  
                                    _BAUDCON 000FB8                                      ?_memset 00AF  
                                  ?___flpack 00AF                                   _device_dsc 79AC  
                  Set_Column_Address@address 00B0                                    ?___lbtofl 00B9  
                   __size_of_oled_displayOff 0008                             _USBCtrlEPService 41D6  
                    _moteApp_addToDataBuffer 4E60                  __size_of_moteApp_toggleLeds 00F6  
                                 _ep_data_in 0066                      __size_of_ADC_Initialize 001A  
                                    ?_strcmp 00AF                             ?_DATAEE_ReadByte 0001  
                __end_of_USBCtrlTrfRxService 2EC8                           _USBCheckStdRequest 3BCE  
                              _eusartRxCount 004D                            _configDescriptor1 7901  
                                    i2l10115 4226                                      i2l10131 428E  
                                    i2l10133 4294                                      i2l10127 4274  
                                    i2l10119 422E                                      i2l10075 5BE2  
                                    i2l10155 2B5C                                      i2l10501 59E0  
                                    i2l10077 5BE6                                      i2l10183 2BCA  
                                    i2l10167 2B88                                      i2l10175 2B9C  
                                    i2l10159 2B76                                      i2l10601 2990  
                                    i2l10521 28A4                                      i2l10099 5828  
                                    i2l10179 2BC2                                      i2l10603 29A6  
                                    i2l10509 5A0A                                      i2l10189 2C26  
                                    i2l10607 29B2                                      i2l10551 28DE  
                                    i2l10543 28D0                                      i2l10609 29D2  
                                    i2l10529 28B2                                      i2l10563 2910  
                                    i2l10581 294E                                      i2l10573 2928  
                                    i2l10557 2904                                      i2l10495 59CC  
                                    i2l10567 291C                                      i2l10587 2962  
                                    i2l10843 0050                                      i2l10863 0084  
                                    i2l13827 5524                                      i2l13829 5554  
                                    _RS232cp 0047                              __CFG_WDTEN$SWON 000000  
                      ?_moteApp_getTempValue 00B2                           __size_of_test_leds 0066  
                                 ??i2_memset 0007                           __size_of_test_oled 00AE  
                       __size_of_moduleSleep 002A                  __end_of_USBCtrlTrfTxService 402E  
                       __size_of_moteHandler 0284                          _USBStdSetCfgHandler 3CB2  
                                    _OSCCON2 000FD2                                      _TBLPTRH 000FF7  
                                    _TBLPTRL 000FF6                                      _TBLPTRU 000FF8  
                                    _OSCTUNE 000F9B                       __size_of_oled_putUint8 00A8  
             USBapp_LEDUpdateStatus@ledCount 003C                              __CFG_WDTPS$8192 000000  
        __size_of_moteApp_convertSensorValue 00A4                                      _SSP1ADD 000FC8  
                    __end_of_CMP1_Initialize 5EB8                               ??_moduleResync 00B4  
                        ?_USBCheckStdRequest 0001                             ?_TMR2_StartTimer 0001  
               __size_of_USBStdGetDscHandler 0124                                      _UIEbits 000F64  
                      ADC_TempConversion@val 00E5                                      _UIRbits 000F65  
                     test_switch@buttonCheck 00C8              moteRunningProcess@bufferReadPos 00F3  
                              _cdc_trf_state 004A                         DATAEE_WriteByte@bAdd 00B0  
                    __size_of_USBapp_exitCDC 0008                   __end_of_moteRunningProcess 133C  
                     ??_moteApp_clearBuffers 00AF                       ??_moteApp_clearCommand 00B2  
                 ?_moteApp_add8bToDataBuffer 00B5                                      _pCDCDst 006C  
                                    _pCDCSrc 006F                        __size_of_getsUSBUSART 00F4  
             __end_of_moteApp_getLightString 5EC8           __end_of_MOTEapp_SetDataRateSetting 25CE  
                 _MOTEapp_SetDataRateSetting 2452                                      __Hparam 0000  
                       ?_USBStdSetCfgHandler 0001                                    _CDCInitEP 5230  
                    ?_MOTEapp_TimerBasedTask 0001                                      __Lparam 0000  
                 __size_of_USBEnableEndpoint 0040                  USBapp_exitCDCState@usbState 00AF  
                        moteHandler@s2Button 02A2                             _Set_Page_Address 5D86  
                       ??_USBCheckStdRequest 001C                 moteRunningProcess@sleepEvent 00EB  
                                    ___almod 344C                                      ___fladd 1ED6  
                          _timerMinTickCount 0080                __size_of_USBCtrlTrfOutHandler 0062  
                __size_of_moteJoiningProcess 0680                                      ___fldiv 2EC8  
                                    ___lbdiv 530A                                      ___awmod 4664  
                                    ___flmul 25CE                             ?_TMR3_StartTimer 0001  
                                    ___fltol 3122                                      ___lldiv 4CC6  
                           ??_USBDeviceTasks 001F                              __size_of___wmul 0038  
                          ??_USBStallHandler 0001                                      ___lwmod 529E  
                       oled_putint8@negative 00C7           oled_setContrastControlRegister@mod 00B0  
                                 ??___flpack 00B5                         __size_of_putUSBUSART 0024  
                                    __pcinit 50DC                           getsUSBUSART@buffer 00B6  
                            __size_of_memcpy 004C                                   ??___lbtofl 00BD  
               __size_of_USBapp_exitCDCState 000A                              __size_of_memset 0036  
                  __end_of_configDescriptor1 7944                                      __ramtop 0800  
                                    _delayms 5928                                      __ptext0 2C58  
                                    __ptext1 5150                                      __ptext2 3346  
                                    __ptext3 47CC                                      __ptext4 5372  
                                    __ptext5 51C2                                      __ptext6 3550  
                                    __ptext7 5928                                      __ptext8 3828  
                                    __ptext9 1C52                     __size_of_oled_setDisplay 002C  
                                    _inPipes 0052                  _USBDeferOUTDataStagePackets 0088  
            __end_of_moteApp_lightStringSize 5F1E                              __size_of_strcmp 0060  
                  moteRunningProcess@counter 00F2                             oled_setFont@font 00AF  
                                  _T1CONbits 000FCD                        _OSCILLATOR_Initialize 5E02  
                                    _exitUSB 00F9                                 ??_USBSuspend 0016  
                              _oled_clearRow 5B22                                    _T2CONbits 000FBA  
            moteApp_add8bToDataBuffer@number 00B8                                    _T3CONbits 000FB1  
                                 _oled_clear 5D6C                             ___awmod@dividend 00AF  
                   ??_PIN_MANAGER_Initialize 00AF                 __end_of_TMRapp_ClearBitFlags 5F36  
                               _LastRS232Out 0044                              i2_USBDeviceInit 2B1E  
                           i2USBDeviceInit@i 0009                            __end_of_oled_init 5B88  
               __end_of_MOTEapp_handlerState 5F0C                       ??_USBapp_getrxByteFlag 00AF  
                         __end_of_USB_CD_Ptr 7601                   moteRunningProcess@readByte 00EF  
                 __size_of_SYSTEM_Initialize 0022              __size_of_USBCtrlTrfSetupHandler 0088  
                                    _strncmp 4922                         end_of_initialization 5146  
                               _getsUSBUSART 3646                           __end_of_USB_SD_Ptr 75FF  
                                    memcpy@d 00B5                                      memcpy@n 00B3  
                                    memcpy@s 00B7                          _pBDTEntryEP0OutNext 0040  
                                    memset@c 00B1                                      memset@n 00B3  
                                    memset@p 00B5                                __Lmediumconst 75F8  
            _dummy_encapsulated_cmd_response 01E2     moteApp_convertSensorValue@convertedValue 00C6  
                   ?_USBStdFeatureReqHandler 0001               __end_of_MOTEapp_TimerBasedTask 5C72  
                          _EUSART_Initialize 58AC                            _oled_powerControl 5E82  
                                 _rxByteFlag 0050                        ??_USBStdSetCfgHandler 0016  
                            ___lldiv@divisor 0005                         __size_of_test_switch 0106  
                                 ?_CDCInitEP 0001                              ___lldiv@counter 000D  
                __size_ofMOTEapp@sendCommand 0032                            __end_of_test_leds 53D8  
                          __end_of_test_oled 487A               moteJoiningProcess@changeStates 00C5  
                         ?_EUSART_Initialize 0001                           ?_oled_powerControl 0001  
                              _oled_putUint8 487A                           __end_of_USBSuspend 5CC6  
             ??_USBapp_CdcEmulatorInitialize 000D                      _USBCtrlEPAllowDataStage 4A6C  
                                  _RCSTAbits 000FAB                     ??_moteApp_setLightString 00BB  
                         test_switch@timeout 00C6                                      postdec1 000FE5  
                                    postdec2 000FDD                                      postinc0 000FEE  
                                    postinc2 000FDE                    ??_moteApp_addToDataBuffer 00B3  
             moteApp_setLightString@stingPos 00BB                         __end_of_oled_devInit 4FE4  
                   _USBCtrlEPServiceComplete 323C                      moteApp_toggleLeds@state 00B3  
                                 _responseId 0120                                   _retryCount 00A3  
                           ?_moteApp_delayms 00AF                                _randomPortNum 00A1  
                   _MOTEapp_setResponseReady 5F36                                      strcmp@r 00B4  
                 _USBStatusStageEnabledFlag1 008A                   _USBStatusStageEnabledFlag2 008B  
                              _dataRateValue 00F8                          _USBapp_handlerState 5EF8  
                        ??_EUSART_Initialize 00AF                          ??_oled_powerControl 00B0  
                         USBEnableEndpoint@p 000A                                    _PORTAbits 000F80  
                                  _PORTBbits 000F81                                    _PORTCbits 000F82  
                    oled_putUint8@start_page 00C6                               ?_oled_clearRow 0001  
                                 _test_comms 51C2                       ??_moteApp_getTempValue 00B4  
                       __end_of_oled_setFont 5DD2                           _Set_Column_Address 5D4E  
                       __end_of_oled_putChar 47CC                                    _TRISAbits 000F92  
                                  _TRISBbits 000F93                                    _TRISCbits 000F94  
                                  _TRISEbits 000F96                            ??_oled_displayOff 00B0  
                      __size_of_EUSART_Write 004A                         __end_of_oled_putint8 4104  
                         _BothEP0OutUOWNsSet 0084             __size_of_moteApp_setSensorsInput 0094  
                              ?_test_powerup 0001                                  ___fldiv@exp 00E1  
                           ?_CMP1_Initialize 0001                    USBConfigureEndpoint@EPNum 0006  
                 ?_USBCtrlEPAllowStatusStage 0001                     __end_of_DATAEE_WriteByte 58AC  
                        ?_Set_Column_Address 0001          USER_USB_CALLBACK_EVENT_HANDLER@size 0012  
                             _TMR2_ReadTimer 5ED6                                    _USTATcopy 0059  
                          __size_of_CMP1_ISR 0004                         ?_USBapp_handlerState 0001  
                         _ADC_TempConversion 3A00                     oled_putString@start_page 00C3  
                                _CM1CON0bits 000F98                                  ___flmul@exp 00CD  
         __end_of_moteApp_convertSensorValue 4A6C                   _moteApp_convertSensorValue 49C8  
                  __end_of_EUSART_Initialize 58EA                    __end_of_oled_powerControl 5E94  
                    oled_putint8@station_dot 00C5                 ??_oled_regulorResistorSelect 00B0  
               __end_of_USBTransferOnePacket 3F50                                  _CM2CON1bits 000F9A  
                                  _TXSTAbits 000FAC                               ?_oled_putUint8 00C5  
                          putUSBUSART@length 00B1                          ?_ADC_TempConversion 0001  
                   ??_oled_initialDispayLine 00B0                        _moteApp_getLightValue 53D8  
                     _USBCtrlTrfSetupHandler 4D52                         ??_Set_Column_Address 00B0  
                    ?i2_USBTransferOnePacket 0001                         __end_of_moduleResync 4CC6  
                      __end_of_USBDeviceInit 288A                               _TMRapp_Handler 29DA  
                             _USBapp_Handler 4104                         __size_of_TMRapp_Tick 0006  
        MOTEapp_getModuleResponse@bufferByte 00B1                               __end_of___wmul 5A48  
                               _EUSART_Write 57A0                      __end_ofi2_USBDeviceInit 2C58  
                          __size_of_TMR1_ISR 000C                   __end_of_service_pushbutton 4E60  
                          __size_of_TMR3_ISR 0020                               _ADC_Initialize 5DA0  
                moteApp_clearBuffers@counter 00AF                      moteApp_GoToSleep@status 00BD  
                                  i2memset@c 0003                                    i2memset@n 0005  
                                  i2memset@p 0007                               __end_of_memcpy 5754  
                     ?_OSCILLATOR_Initialize 0001                               __end_of_memset 5AEC  
                          _USBBusIsSuspended 0086                     oled_writeCommand@command 00AF  
                             __end_of_strcmp 54FC                                  ?_oled_clear 0001  
                        start_initialization 50DC                         ??_ADC_TempConversion 00E3  
                    ?_USBStdGetStatusHandler 0001                USBCtrlTrfRxService@byteToRead 0013  
                             ??_test_powerup 00EA          __size_of_oled_regulorResistorSelect 0012  
            __size_of_PIN_MANAGER_Initialize 0056                            ??_oled_setDisplay 00B0  
                              ??_EUSART_Read 00AF                       __end_of_TMR2_ReadTimer 5EE2  
            __end_of_moteApp_addToDataBuffer 4EE4                                  _cdc_data_rx 000540  
                                _cdc_data_tx 000500                  __end_ofi2_EUSART_Initialize 5928  
                          __size_ofi2_memset 002E                                    _OledFont0 7601  
               __end_of_USBConfigureEndpoint 4BA2              __end_of_USBStdFeatureReqHandler 1C52  
                      ??_USBapp_handlerState 00AF              moteApp_convertSensorValue@index 00C5  
          __end_of_USBCtrlEPAllowStatusStage 4376                                _periodicState 00FC  
                             _USBapp_exitCDC 5F26                     __end_of_USBCtrlEPService 42A6  
       __end_of_USART_mySetLineCodingHandler 5610        __size_of_USART_mySetLineCodingHandler 005A  
               _USART_mySetLineCodingHandler 55B6                   __end_of_EUSART_FlushBuffer 5708  
                        DATAEE_ReadByte@bAdd 00AF                __size_of_USBapp_setrxByteFlag 0006  
                              _moteModeState 009E                    ??_USBCtrlEPAllowDataStage 0002  
                                ??_CDCInitEP 000D                               USBDeviceInit@i 00B7  
                         _periodicTimerValue 00FD                       _pBDTEntryEP0OutCurrent 003E  
                   __size_of_TMR1_Initialize 0038                      USBTransferOnePacket@dir 00AF  
                    USBTransferOnePacket@len 00B2                       __end_of_USBapp_Handler 41D6  
                     __end_of_TMRapp_Handler 2B1E               __end_ofi2_USBTransferOnePacket 4436  
                       _TMRapp_ClearBitFlags 5F2E                                     ??___wmul 00B3  
            __size_of_moteApp_setLightString 0080                          _USBStdGetDscHandler 2FFE  
                       _MOTEapp_handlerState 5F02                       __end_of_ADC_Initialize 5DBA  
                                __pdataBANK0 00F6                                  __pdataBANK1 01FB  
                                   ??_memcpy 00B5                                     ??_memset 00B5  
                            ??_oled_clearRow 00BB              MOTEapp_TimerBasedTask@timerTask 00AF  
                        _moduleResonseBuffer 0178                                     ??_strcmp 00B3  
                                ?_test_comms 0001                    oled_putString@station_dot 00C2  
                          __size_of___flpack 0180                       _USBActiveConfiguration 0058  
             __end_of_USBStdGetStatusHandler 4664                            __size_of___lbtofl 0036  
                __end_of_EUSART_Transmit_ISR 59D6                                  __pbssCOMRAM 002E  
                 service_pushbutton@PB_Timer 0134                                __pcstackBANK0 00AF  
                              __pcstackBANK2 02A0                 __size_of_USBCtrlTrfInHandler 00E6  
                   __size_of_TMR2_Initialize 0014                     __end_of_Set_Page_Address 5DA0  
                            ?_TMR2_ReadTimer 0001                                  _activeState 008C  
                       ?_USBStdGetDscHandler 0001                       __end_of_USBapp_exitCDC 5F2E  
         __size_of_MOTEapp_getModuleResponse 007C                   ?_MOTEapp_getModuleResponse 0001  
                  ADC_TempConversion@tempRaw 00E3                   __end_of_EUSART_Receive_ISR 5A10  
             moteRunningProcess@messageReady 00EA                          _USBapp_exitCDCState 5EEE  
                 __end_of_USBWakeFromSuspend 5BEC                   __size_of_EUSART_Initialize 003E  
                 __size_of_oled_powerControl 0012                              _USBStallHandler 57EA  
                               _pBDTEntryOut 0060                          __end_of_EUSART_Read 57A0  
                 __end_of_USBCheckCDCRequest 45AC                              ??_oled_putUint8 00C7  
                       oled_putString@string 00C0                     __size_of_USBDeviceAttach 0036  
                                  _appDevEui 0100                  ??_moteApp_add8bToDataBuffer 00B6  
                          _oled_writeCommand 5DEA                        __size_of_oled_devInit 0080  
                    oled_putChar@station_dot 00B1                  ?_MOTEapp_SetDataRateSetting 0001  
                     _PIN_MANAGER_Initialize 5610                       ?_moteApp_getLightValue 00BC  
                        __size_of_oled_clear 001A                        ?_TMRapp_ClearBitFlags 0001  
                            _messageReceived 009C                     __size_of_TMR3_Initialize 0022  
                       EUSART_Read@readValue 00AF              __size_of_oled_initialDispayLine 0014  
                            ?_TMRapp_Handler 0001                              ?_USBapp_Handler 0001  
                                  __pintcode 0008                           ?_oled_writeCommand 0001  
                              __pmediumconst 75F8                                     ?___almod 00AF  
                                   ?___fladd 00B9                        ?_MOTEapp_handlerState 0001  
                                   ?___fldiv 00D4                                    __ptext100 5F02  
                                  __ptext101 5E1A                                     ?___lbdiv 00AF  
                                  __ptext110 4D52                                    __ptext111 323C  
                                  __ptext103 5F44                                    __ptext120 555C  
                                  __ptext112 4A6C                                    __ptext104 288A  
                                  __ptext121 5230                                    __ptext113 3BCE  
                                  __ptext105 2B1E                                    __ptext130 3F50  
                                  __ptext122 4376                                    __ptext114 3CB2  
                                  __ptext106 5BBA                                    __ptext131 55B6  
                                  __ptext123 582E                                    __ptext115 5BEC  
                                  __ptext107 5C9C                                    __ptext140 0000  
                                  __ptext132 58EA                                    __ptext124 4B0C  
                                  __ptext116 45AC                                    __ptext108 57EA  
                                  __ptext133 4CC6                                    __ptext125 44F2  
                                  __ptext117 2FFE                                    __ptext109 41D6  
                                  __ptext134 5F4A                                    __ptext126 543A  
                                  __ptext118 19BC                                    __ptext135 5D2E  
                                  __ptext127 2D90                                    __ptext119 54FC  
                                  __ptext136 5EE2                                    __ptext128 42A6  
                                  __ptext137 599C                                    __ptext129 3AE8  
                                  __ptext138 59D6                                    __ptext139 5F5C  
                                   ?___awmod 00AF                                     ?___flmul 00C5  
                                   ?___fltol 00AF                   __end_of_moteApp_toggleLeds 3646  
                                   ?___lldiv 0001                                     ?___lwmod 00AF  
                            ?_ADC_Initialize 0001                        __size_of_oled_setFont 0018  
                               _eusartRxHead 0096                                ??_sendCommand 00B2  
          moteApp_getTempValue@escapeCounter 00B4                                 _eusartTxHead 0098  
                               _eusartRxTail 0097                 __size_of_moteApp_testSensors 00EC  
                               _eusartTxTail 0099                         ?_USBapp_exitCDCState 0001  
                      __size_of_oled_putChar 00B4                           _moteRunningProcess 00C8  
                          _moduleBufferIndex 004F                                     ?_delayms 00AF  
               ??_INTERRUPT_InterruptManager 0020                             ___almod@dividend 00AF  
                           ?i2_USBDeviceInit 0001                       moteHandler@readMessage 02A4  
                        ??_oled_writeCommand 00AF                                ??_moduleSleep 00B2  
                              ??_moteHandler 00F5                        __size_of_oled_putint8 00D6  
                    _eusartTxBufferRemaining 004E                         _USBTransferOnePacket 3E72  
                                  _mainState 009B                     __size_of_TMR1_StartTimer 0004  
                    _moteApp_setSensorsInput 4BA2                       moteHandler@buttonPress 02A3  
                        ?_moteRunningProcess 00E9                 __end_of_USBCtrlTrfOutHandler 549C  
                                  _minTicker 009D                        ??_USBStdGetDscHandler 0001  
                                   _CMP1_ISR 5F5C                       _moteApp_setLightString 4EE4  
                                _ep_data_out 0069                 __size_of_USBCtrlTrfRxService 0138  
                                  _secTicker 00A6                              ?_USBapp_exitCDC 0001  
              USBConfigureEndpoint@direction 0001                     __size_of_DATAEE_ReadByte 0018  
                                   ?_strncmp 00AF                          oled_putint8@numData 00C8  
                   ?_moteApp_lightStringSize 0001                                 _oled_devInit 4F64  
         __end_of_oled_regulorResistorSelect 5E82                   _oled_regulorResistorSelect 5E70  
                             _eusartRxBuffer 0200                moteApp_addToDataBuffer@string 00AF  
                          _dataRateSelection 00F7                             _timerMsTickCount 0082  
                                  _oled_init 5B56                 __size_of_USBCtrlTrfTxService 00DE  
          __end_of_MOTEapp_getModuleResponse 5060                               _eusartTxBuffer 0240  
                             ___wmul@product 00B3                                     _LATAbits 000F89  
                                   _IOCCbits 000F87                    __end_of_oled_writeCommand 5E02  
                                   _LATBbits 000F8A                                     _LATCbits 000F8B  
                                   _LATEbits 000F8D                   ??_USBCtrlEPServiceComplete 0002  
                 ??_MOTEapp_setResponseReady 00AF                                     _PIE1bits 000F9D  
                                   _IPR3bits 000FA5                                     _PIE2bits 000FA0  
                                   _PIE3bits 000FA3                          __size_of_test_comms 006E  
                   __size_of_TMR2_StartTimer 0004                                 _oled_setFont 5DBA  
                                  _moteState 00FB                                _operationType 009F  
                      __size_of_moduleResync 0090                         ??_moteRunningProcess 00EC  
                 __end_of_moteJoiningProcess 19BC          __size_of_INTERRUPT_InterruptManager 00BC  
                               _oled_putChar 4718                                     i2u600_48 2EA4  
                                   _PIR1bits 000F9E                                     i2u507_40 3FCE  
                                   _PIR2bits 000FA1                                     i2u507_47 3FC4  
              __size_of_moteApp_clearBuffers 00BC                __size_of_moteApp_clearCommand 0012  
                                   i2u509_40 4012                                     _PIR3bits 000FA4  
                                   i2u509_47 4008                                     i2u535_40 3072  
                                   i2u535_47 3068                                     i2u536_40 30A0  
                                   i2u536_47 3096                                     i2u538_40 30F0  
                                   i2u538_47 30E6                                     i2u714_48 3BAE  
                  USBCtrlEPService@setup_cnt 001E                                     _RCONbits 000FD0  
                       __end_of_test_powerup 51C2                                 _oled_putint8 402E  
                              ??_putUSBUSART 00B2                                     _UEP0bits 000F6A  
                 _USBDeferINDataStagePackets 0087                                     _SSP1CON1 000FC6  
                __size_of_USBCheckStdRequest 00E4                                     _TMR1_ISR 5EE2  
                    __size_of_oled_putString 007C                                     _TMR3_ISR 5D2E  
                                   _SSP1STAT 000FC7                                     _UCONbits 000F60  
                            _oled_displayOff 5F1E                                    _test_leds 5372  
                                   _VREFCON0 000F7D               moteRunningProcess@selectButton 00E9  
                       _USBConfigureEndpoint 4B0C                                    _test_oled 47CC  
                      ??_USBapp_exitCDCState 00AF             __size_of_USBStdFeatureReqHandler 0296  
                          ??_TMR1_Initialize 00AF                                   _ADCON0bits 000FC2  
                    Set_Page_Address@address 00B0                            ___wmul@multiplier 00AF  
                      ?_USBTransferOnePacket 00AF          moteRunningProcess@sizeOfUpdate_1692 00F1  
                     ADC_TempConversion@temp 00E4                       oled_putint8@start_page 00C6  
                  _moteApp_add8bToDataBuffer 3D94                      __size_of_oled_writeData 0018  
                    __size_ofMOTEapp@EndLine 000E                                ?_CDCTxService 0001  
                   __size_of_TMR3_StartTimer 0004                     moteHandler@gotoNextState 02A1  
                               _RemoteWakeup 0085                                     i2_memset 5BEC  
                          __CFG_CFGPLLEN$OFF 000000                       _oled_initialDispayLine 5E48  
                      DATAEE_WriteByte@bData 00AF                           _RS232_Out_Data_Rdy 0046  
          moteApp_setLightString@lightString 00B9                      __end_of_USBStallHandler 582E  
                        __end_of_moduleSleep 5C9C                          __end_of_moteHandler 1ED6  
                                _EUSART_Read 5754                            _moteApp_GoToSleep 373A  
                                _INTCON3bits 000FF0                                    copy_data0 513A  
                ??_USBCtrlEPAllowStatusStage 0001        moteApp_addToDataBuffer@bufferLocation 00B2  
                               _moduleResync 4C36                  __end_of_USBStdSetCfgHandler 3D94  
                          ?_DATAEE_WriteByte 00AF                __size_of_USBapp_getrxByteFlag 0006  
                         ?_moteApp_GoToSleep 0001                                   ?_oled_init 0001  
                          ??_TMR2_Initialize 00AF                                ??_test_switch 00C5  
MOTEapp_getModuleResponse@terminatorReceived 00B0                  ?_moteApp_convertSensorValue 00C0  
                         ??_DATAEE_WriteByte 00B0                   __end_ofMOTEapp@sendCommand 5BBA  
                         __end_of_device_dsc 79BE                                   _EECON1bits 000FA6  
                    ?_USBCtrlTrfSetupHandler 0001                USBapp_CdcEmulatorInitialize@i 000D  
                     ??_TMRapp_ClearBitFlags 00AF                      USBStdGetStatusHandler@p 0002  
                                   __Hrparam 0000                          ??_moteApp_GoToSleep 00BD  
                                   __Lrparam 0000                       USBTransferOnePacket@ep 00B3  
                     ??_MOTEapp_handlerState 00AF                           __CFG_BOREN$SBORDIS 000000  
                                   _SetupPkt 000430                      ??_OSCILLATOR_Initialize 00AF  
                      ?_USBConfigureEndpoint 0001                             __size_of___almod 0104  
                           __size_of___fladd 026C                            ??_USBDeviceAttach 00AF  
                                 ?_test_leds 0001                             __size_of___fldiv 0136  
                           __size_of___lbdiv 0068                                   ?_test_oled 0001  
                           __size_of___awmod 00B4                             __size_of___flmul 0164  
                           __size_of___fltol 011A                   oled_initialDispayLine@line 00B0  
             moteJoiningProcess@readDataRate 00C8                                 _selectedFont 01FB  
                           __size_of___lldiv 008C                              _oled_setDisplay 5C1A  
                                   ___flpack 22D2             moteApp_clearBuffers@counter_1904 00B0  
           moteApp_clearBuffers@counter_1905 00B1             moteApp_clearBuffers@counter_1906 00B2  
                           __size_of___lwmod 006C                                     ___lbtofl 5A80  
                  MOTEapp_handlerState@state 00AF                            ??_TMR3_Initialize 00AF  
                  ??_moteApp_setSensorsInput 00B4                             __size_of_delayms 003A  
                                 _ANSELAbits 000F5B                          __end_of_putUSBUSART 5CEA  
                                _line_coding 01EA                                   _ANSELCbits 000F5D  
                             ??_CDCTxService 00B6                                _responseReady 00A2  
                               ??_oled_clear 00BD                                  _menuTimeout 00FA  
                   __size_of_moteApp_delayms 003A                    __end_of_moteApp_GoToSleep 3828  
              __size_of_moteApp_getTempValue 0052                      __size_of_USBDeviceTasks 0150  
                                   _appTimer 008E                                     _appState 008D  
                                   __ptext10 00C8                                     __ptext11 402E  
                                   __ptext20 49C8                                     __ptext12 487A  
                                   __ptext21 5A10                                     __ptext13 4BA2  
                                 _T1GCONbits 000FCC                                     __ptext30 5C1A  
                                   __ptext22 4436                                     __ptext14 5F16  
                                   __ptext31 4F64                                     __ptext23 4E60  
                                   __ptext15 5666                                     __ptext40 56B8  
                                   __ptext32 5E32                                     __ptext24 3D94  
                                   __ptext16 53D8                                     __ptext41 5ED6  
                                   __ptext33 5E70                                     __ptext25 530A  
                                   __ptext17 4EE4                                     __ptext50 133C  
                                   __ptext42 2452                                     __ptext34 5E82  
                                   __ptext26 4664                                     __ptext18 5708  
                                   __ptext51 4922                                     __ptext43 3A00  
                                   __ptext35 5E48                                     __ptext27 373A  
                                   __ptext19 5EB8                                     __ptext60 5F2E  
                                   __ptext52 549C                                     __ptext44 5A80  
                                   __ptext36 5F1E                                     __ptext28 5B56  
                                   __ptext61 5C46                                     __ptext53 5962  
                                   __ptext45 3122                                     __ptext37 5C72  
                                   __ptext29 5DBA                                     __ptext70 5B22  
                                   __ptext62 5E94                                     __ptext54 586E  
                                   __ptext46 25CE                                     __ptext38 4C36  
                                   __ptext71 4718                                     __ptext63 5B88  
                                   __ptext55 5EEE                                     __ptext47 2EC8  
                                   __ptext39 4FE4                                     __ptext80 5F36  
                                   __ptext72 5DD2                                     __ptext64 5EC8  
                                   __ptext56 5F26                                     __ptext48 1ED6  
                                   __ptext81 57A0                                     __ptext73 5D86  
                                   __ptext65 5EF8                                     __ptext57 29DA  
                                   __ptext49 22D2                                     __ptext90 5F50  
                                   __ptext82 5754                                     __ptext74 5D4E  
                                   __ptext66 4104                                     __ptext58 529E  
                                   __ptext91 5E5C                                     __ptext83 2142  
                                   __ptext75 5DEA                                     __ptext67 4DDA  
                                   __ptext59 344C                                     __ptext92 5F54  
                                   __ptext84 3E72                                     __ptext76 3914  
                                   __ptext68 5060                                     __ptext93 5A48  
                                   __ptext85 2732                                     __ptext77 5CC6  
                                   __ptext69 5D6C                                     __ptext94 5F58  
                                   __ptext86 5AB6                                     __ptext78 3646  
                                   __ptext95 5610                                     __ptext87 5AEC  
                                   __ptext79 5F3E                                     __ptext96 5E02  
                                   __ptext88 5CEA                                     __ptext97 58AC  
                                   __ptext89 5D0C                                     __ptext98 5EA6  
                                   __ptext99 5DA0         __end_of_USBapp_CdcEmulatorInitialize 55B6  
      __size_of_USBapp_CdcEmulatorInitialize 005A                 _USBapp_CdcEmulatorInitialize 555C  
                               _SSP1CON1bits 000FC6                                     _dotCount 0095  
                         _service_pushbutton 4DDA                              ___almod@divisor 00B3  
                          ??_TMR1_StartTimer 00AF                              ___almod@counter 00B7  
                                 _T3GCONbits 000FB4                  DATAEE_WriteByte@GIEBitValue 00B1  
                   ??_moteApp_getLightString 00B1                                  _OSCCON2bits 000FD2  
                           __size_of_strncmp 00A6               __end_of_USBCtrlTrfSetupHandler 4DDA  
                              __size_of_main 0138                            ?_USBCtrlEPService 0001  
                 __size_of_oled_writeCommand 0018                               _Contrast_level 00F6  
                                   _rnModule 00A4                           oled_putint8@number 00CE  
                                 strncmp@len 00B3                          ?_service_pushbutton 0001  
                          ??_DATAEE_ReadByte 00AF                     __size_of_CMP1_Initialize 0012  
                   ?_moteApp_addToDataBuffer 00AF                      __end_of_oled_displayOff 5F26  
                         ??_USBCtrlEPService 001C                    moduleResync@escapeCounter 00B4  
                                   delayms@i 00B2                                     delayms@t 00AF  
                        _USBCtrlTrfInHandler 3AE8                                ??_TMRapp_Tick 0001  
                           _dataRatePosition 0093                           __end_of_oled_clear 5D86  
                        __end_of_test_switch 344C                                     _outPipes 002E  
                       _USBCtrlTrfOutHandler 543A                                     _usbState 00A8  
                  _USBCtrlEPAllowStatusStage 42A6                  __size_of_Set_Column_Address 001E  
                          ??_TMR2_StartTimer 00AF           __end_of_INTERRUPT_InterruptManager 00C4  
                 _INTERRUPT_InterruptManager 0008               moteRunningProcess@sizeOfUpdate 00F0  
                               _SSP1STATbits 000FC7                       ??_USBTransferOnePacket 00B3  
                         oled_clearRow@index 00BC                           _EUSART_FlushBuffer 56B8  
                               ??_test_comms 00C5                 __end_of_USBapp_setrxByteFlag 5F4A  
                      ___flmul@f3_as_product 00CE                                  _moduleSleep 5C72  
                                _moteHandler 1C52                             ??_TMR2_ReadTimer 00AF  
                       ??_service_pushbutton 00AF                    _USBDeferStatusStagePacket 0048  
                   CDCTxService@byte_to_send 00BA                    MOTEapp@sendCommand@string 00B0  
                                 _INTCONbits 000FF2                  __end_of_USBapp_handlerState 5F02  
                       ?_USBCtrlTrfInHandler 0001                          ?_EUSART_FlushBuffer 0001  
                                   memcpy@d1 00AF                  __size_of_ADC_TempConversion 00E8  
                                   memcpy@s1 00B1                USBCtrlTrfTxService@byteToSend 0001  
                                   memset@p1 00AF                             ?_USBStallHandler 0001  
                   USBStdFeatureReqHandler@p 001A                            ?_Set_Page_Address 0001  
                   ??_MOTEapp_TimerBasedTask 00AF                                 _responseData 01B8  
                          ??_TMR3_StartTimer 00AF                ?_USBapp_CdcEmulatorInitialize 0001  
                                   intlevel2 0000                          _moteApp_testSensors 3828  
                                ??_oled_init 00BD                  ??_MOTEapp_getModuleResponse 00B0  
                         ??_Set_Page_Address 00B0                       __size_of_USBDeviceInit 0158  
                       oled_powerControl@vol 00B0      __end_of_USER_USB_CALLBACK_EVENT_HANDLER 555C  
   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0060            ??_USER_USB_CALLBACK_EVENT_HANDLER 0014  
           ?_USER_USB_CALLBACK_EVENT_HANDLER 000E              _USER_USB_CALLBACK_EVENT_HANDLER 54FC  
             moteJoiningProcess@messageReady 00CA              __end_of_moteApp_setSensorsInput 4C36  
                           ___lwmod@dividend 00AF                 i2USBTransferOnePacket@handle 0006  
                               _VREFCON0bits 000F7D                             ___lldiv@dividend 0001  
                    ?_PIN_MANAGER_Initialize 0001                      ??_moteApp_getLightValue 00BE  
                           ??_USBapp_Handler 00C5                             ??_TMRapp_Handler 00B9  
                      __size_of_test_powerup 0072                         moteHandler@gotoSleep 02A0  
               __size_ofi2_EUSART_Initialize 003E                                    strncmp@s1 00AF  
                                  strncmp@s2 00B1                             ??_ADC_Initialize 00AF  
                         __end_of_test_comms 5230                         ??_EUSART_FlushBuffer 00AF  
                    __end_of_oled_setDisplay 5C46                   i2USBTransferOnePacket@data 0002  
                                _sleepTicker 00A7                       ??_USBConfigureEndpoint 0002  
                      ?_USBCtrlTrfOutHandler 0001                               _oled_putString 5060  
                                _putUSBUSART 5CC6                           _EUSART_Receive_ISR 59D6  
                          oled_clearRow@page 00BB                         __CFG_CPUDIV$NOCLKDIV 000000  
                        _USBCtrlTrfRxService 2D90                           _USBWakeFromSuspend 5BBA  
                                ??_test_leds 00C5                                _powerOnStatus 00A0  
                                ??_test_oled 00C5                      _USBStdFeatureReqHandler 19BC  
                       ?_moteApp_testSensors 0001      __end_of_USBapp_DeviceCdcEmulatorHandler 3A00  
   __size_of_USBapp_DeviceCdcEmulatorHandler 00EC             ?_USBapp_DeviceCdcEmulatorHandler 0001  
          ??_USBapp_DeviceCdcEmulatorHandler 00BC              _USBapp_DeviceCdcEmulatorHandler 3914  
                         _USBCheckCDCRequest 44F2                          _USBCtrlTrfTxService 3F50  
                        __end_of_TMRapp_Tick 5F50                        __end_of_oled_clearRow 5B56  
                                _temperature 007C                          ?_EUSART_Receive_ISR 0001  
                             _oled_writeData 5DD2                               MOTEapp@EndLine 5EC8  
                        ?_USBWakeFromSuspend 0001                                     strcmp@s1 00AF  
                                   strcmp@s2 00B1                      ?_moteApp_setLightString 00B9  
                           ___lldiv@quotient 0009                              ___lwmod@divisor 00B1  
                           ??_USBapp_exitCDC 00AF                        ??_USBCtrlTrfInHandler 0012  
                      _USBAlternateInterface 00AD                              ___lwmod@counter 00B3  
                        ?_USBCheckCDCRequest 0001                   __size_of_moteApp_GoToSleep 00EE  
                  i2USBTransferOnePacket@dir 0001                           _moteApp_toggleLeds 3550  
                  i2USBTransferOnePacket@len 0004                          USBEnableEndpoint@ep 000C  
                            _endpoint_number 004C                                   _WDTCONbits 000FD1  
                               _test_powerup 5150                         ?_USBCtrlTrfRxService 0001  
                              ?_getsUSBUSART 00B6                     oled_putUint8@station_dot 00C5  
                         __CFG_FOSC$INTOSCIO 000000                           EUSART_Write@txData 00AF  
               __size_of_EUSART_Transmit_ISR 003A               __end_of_PIN_MANAGER_Initialize 5666  
                   ?_USBCtrlEPAllowDataStage 0001           __size_of_moteApp_add8bToDataBuffer 00DE  
                               ___almod@sign 00B8                         ?_USBCtrlTrfTxService 0001  
                          ??_moteApp_delayms 00B1              __size_of_moteApp_getLightString 0010  
                ?_oled_regulorResistorSelect 0001                          ?_moteApp_toggleLeds 0001  
                               ___fladd@exp1 00C4                                 ___fladd@exp2 00C3  
                               ___fladd@sign 00C2                 _USBStatusStageTimeoutCounter 0049  
                                _test_switch 3346                         ??_EUSART_Receive_ISR 0001  
                       ??_USBWakeFromSuspend 0016                   USBTransferOnePacket@handle 00B4  
                       __end_of_CDCTxService 22D2                              _TMR1_Initialize 5A48  
          moteJoiningProcess@joiningComplete 00C9                             ?_oled_displayOff 0001  
                      __end_of_oled_putUint8 4922                       __end_of_oled_putString 50DC  
                       ??_USBCheckCDCRequest 0001                                   _USB_CD_Ptr 75FF  
