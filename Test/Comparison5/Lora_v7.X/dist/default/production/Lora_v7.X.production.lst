

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Aug 18 15:35:04 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1,group=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1,group=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1,group=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1,group=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   250                           	psect	text224,global,reloc=2,class=CODE,delta=1
   251                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   252                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   253  0000                     
   254                           ; Version 1.45
   255                           ; Generated 16/11/2017 GMT
   256                           ; 
   257                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   258                           ; All rights reserved.
   259                           ; 
   260                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   261                           ; 
   262                           ; Redistribution and use in source and binary forms, with or without modification, are
   263                           ; permitted provided that the following conditions are met:
   264                           ; 
   265                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   266                           ;        conditions and the following disclaimer.
   267                           ; 
   268                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   269                           ;        of conditions and the following disclaimer in the documentation and/or other
   270                           ;        materials provided with the distribution.
   271                           ; 
   272                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   273                           ;        software without specific prior written permission.
   274                           ; 
   275                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   276                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   277                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   278                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   279                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   280                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   281                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   282                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   283                           ; 
   284                           ; 
   285                           ; Code-generator required, PIC18LF46K22 Definitions
   286                           ; 
   287                           ; SFR Addresses
   288  0000                     
   289 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   290  0000                     
   291 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   292  0000                     
   293 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   294  0000                     
   295 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   296 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   297 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   298 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   299 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   300 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   301 ;;_LORAWAN_LinkCheckCallback$2506	offset	0
   302 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   303 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   304 ;;_DutyCycleCallback$1852	offset	0
   305 ;;DutyCycleCallback@minim	offset	4
   306 ;;DutyCycleCallback@i	offset	8
   307 ;;DutyCycleCallback@found	offset	9
   308 ;;DutyCycleCallback@param	offset=-1 (param)
   309 ;;AutomaticReplyCallback@param	offset=-1 (param)
   310 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   311 ;;AckRetransmissionCallback@param	offset=-1 (param)
   312 ;;_param	offset=-1 (param)
   313 ;;_UpdateJoinSuccessState$2523	offset	0
   314 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   315                           
   316                           	psect	idataCOMRAM
   317  008D88                     __pidataCOMRAM:
   318                           	opt stack 0
   319                           
   320                           ;initializer for _ticksToScheduledInterrupt
   321  008D88  FFFF               	dw	65535
   322  008D8A  FFFF               	dw	65535
   323                           
   324                           	psect	idataBANK1
   325  008AD2                     __pidataBANK1:
   326                           	opt stack 0
   327                           
   328                           ;initializer for GenerateSubkey@F7103
   329  008AD2  00                 	db	0
   330  008AD3  00                 	db	0
   331  008AD4  00                 	db	0
   332  008AD5  00                 	db	0
   333  008AD6  00                 	db	0
   334  008AD7  00                 	db	0
   335  008AD8  00                 	db	0
   336  008AD9  00                 	db	0
   337  008ADA  00                 	db	0
   338  008ADB  00                 	db	0
   339  008ADC  00                 	db	0
   340  008ADD  00                 	db	0
   341  008ADE  00                 	db	0
   342  008ADF  00                 	db	0
   343  008AE0  00                 	db	0
   344  008AE1  87                 	db	135
   345                           
   346                           ;initializer for _randx
   347  008AE2  0001               	dw	1
   348  008AE4  0000               	dw	0
   349                           
   350                           ;initializer for _devAddr
   351  008AE6  5E47               	dw	24135
   352  008AE8  3DEF               	dw	15855
   353                           
   354                           	psect	idataBANK3
   355  0088EC                     __pidataBANK3:
   356                           	opt stack 0
   357                           
   358                           ;initializer for _appSKey
   359  0088EC  96                 	db	150
   360  0088ED  23                 	db	35
   361  0088EE  5A                 	db	90
   362  0088EF  1F                 	db	31
   363  0088F0  9A                 	db	154
   364  0088F1  E1                 	db	225
   365  0088F2  60                 	db	96
   366  0088F3  36                 	db	54
   367  0088F4  81                 	db	129
   368  0088F5  C4                 	db	196
   369  0088F6  E4                 	db	228
   370  0088F7  B5                 	db	181
   371  0088F8  54                 	db	84
   372  0088F9  C3                 	db	195
   373  0088FA  CA                 	db	202
   374  0088FB  B5                 	db	181
   375                           
   376                           ;initializer for _nwkSKey
   377  0088FC  CB                 	db	203
   378  0088FD  1E                 	db	30
   379  0088FE  88                 	db	136
   380  0088FF  5D                 	db	93
   381  008900  5D                 	db	93
   382  008901  F1                 	db	241
   383  008902  12                 	db	18
   384  008903  D5                 	db	213
   385  008904  08                 	db	8
   386  008905  CC                 	db	204
   387  008906  B9                 	db	185
   388  008907  D1                 	db	209
   389  008908  D4                 	db	212
   390  008909  4B                 	db	75
   391  00890A  1E                 	db	30
   392  00890B  DF                 	db	223
   393                           
   394                           	psect	mediumconst
   395  00FE48                     __pmediumconst:
   396                           	opt stack 0
   397  00FE48  00                 	db	0
   398  00FE49                     _STable:
   399                           	opt stack 0
   400  00FE49  63                 	db	99
   401  00FE4A  7C                 	db	124
   402  00FE4B  77                 	db	119
   403  00FE4C  7B                 	db	123
   404  00FE4D  F2                 	db	242
   405  00FE4E  6B                 	db	107
   406  00FE4F  6F                 	db	111
   407  00FE50  C5                 	db	197
   408  00FE51  30                 	db	48
   409  00FE52  01                 	db	1
   410  00FE53  67                 	db	103
   411  00FE54  2B                 	db	43
   412  00FE55  FE                 	db	254
   413  00FE56  D7                 	db	215
   414  00FE57  AB                 	db	171
   415  00FE58  76                 	db	118
   416  00FE59  CA                 	db	202
   417  00FE5A  82                 	db	130
   418  00FE5B  C9                 	db	201
   419  00FE5C  7D                 	db	125
   420  00FE5D  FA                 	db	250
   421  00FE5E  59                 	db	89
   422  00FE5F  47                 	db	71
   423  00FE60  F0                 	db	240
   424  00FE61  AD                 	db	173
   425  00FE62  D4                 	db	212
   426  00FE63  A2                 	db	162
   427  00FE64  AF                 	db	175
   428  00FE65  9C                 	db	156
   429  00FE66  A4                 	db	164
   430  00FE67  72                 	db	114
   431  00FE68  C0                 	db	192
   432  00FE69  B7                 	db	183
   433  00FE6A  FD                 	db	253
   434  00FE6B  93                 	db	147
   435  00FE6C  26                 	db	38
   436  00FE6D  36                 	db	54
   437  00FE6E  3F                 	db	63
   438  00FE6F  F7                 	db	247
   439  00FE70  CC                 	db	204
   440  00FE71  34                 	db	52
   441  00FE72  A5                 	db	165
   442  00FE73  E5                 	db	229
   443  00FE74  F1                 	db	241
   444  00FE75  71                 	db	113
   445  00FE76  D8                 	db	216
   446  00FE77  31                 	db	49
   447  00FE78  15                 	db	21
   448  00FE79  04                 	db	4
   449  00FE7A  C7                 	db	199
   450  00FE7B  23                 	db	35
   451  00FE7C  C3                 	db	195
   452  00FE7D  18                 	db	24
   453  00FE7E  96                 	db	150
   454  00FE7F  05                 	db	5
   455  00FE80  9A                 	db	154
   456  00FE81  07                 	db	7
   457  00FE82  12                 	db	18
   458  00FE83  80                 	db	128
   459  00FE84  E2                 	db	226
   460  00FE85  EB                 	db	235
   461  00FE86  27                 	db	39
   462  00FE87  B2                 	db	178
   463  00FE88  75                 	db	117
   464  00FE89  09                 	db	9
   465  00FE8A  83                 	db	131
   466  00FE8B  2C                 	db	44
   467  00FE8C  1A                 	db	26
   468  00FE8D  1B                 	db	27
   469  00FE8E  6E                 	db	110
   470  00FE8F  5A                 	db	90
   471  00FE90  A0                 	db	160
   472  00FE91  52                 	db	82
   473  00FE92  3B                 	db	59
   474  00FE93  D6                 	db	214
   475  00FE94  B3                 	db	179
   476  00FE95  29                 	db	41
   477  00FE96  E3                 	db	227
   478  00FE97  2F                 	db	47
   479  00FE98  84                 	db	132
   480  00FE99  53                 	db	83
   481  00FE9A  D1                 	db	209
   482  00FE9B  00                 	db	0
   483  00FE9C  ED                 	db	237
   484  00FE9D  20                 	db	32
   485  00FE9E  FC                 	db	252
   486  00FE9F  B1                 	db	177
   487  00FEA0  5B                 	db	91
   488  00FEA1  6A                 	db	106
   489  00FEA2  CB                 	db	203
   490  00FEA3  BE                 	db	190
   491  00FEA4  39                 	db	57
   492  00FEA5  4A                 	db	74
   493  00FEA6  4C                 	db	76
   494  00FEA7  58                 	db	88
   495  00FEA8  CF                 	db	207
   496  00FEA9  D0                 	db	208
   497  00FEAA  EF                 	db	239
   498  00FEAB  AA                 	db	170
   499  00FEAC  FB                 	db	251
   500  00FEAD  43                 	db	67
   501  00FEAE  4D                 	db	77
   502  00FEAF  33                 	db	51
   503  00FEB0  85                 	db	133
   504  00FEB1  45                 	db	69
   505  00FEB2  F9                 	db	249
   506  00FEB3  02                 	db	2
   507  00FEB4  7F                 	db	127
   508  00FEB5  50                 	db	80
   509  00FEB6  3C                 	db	60
   510  00FEB7  9F                 	db	159
   511  00FEB8  A8                 	db	168
   512  00FEB9  51                 	db	81
   513  00FEBA  A3                 	db	163
   514  00FEBB  40                 	db	64
   515  00FEBC  8F                 	db	143
   516  00FEBD  92                 	db	146
   517  00FEBE  9D                 	db	157
   518  00FEBF  38                 	db	56
   519  00FEC0  F5                 	db	245
   520  00FEC1  BC                 	db	188
   521  00FEC2  B6                 	db	182
   522  00FEC3  DA                 	db	218
   523  00FEC4  21                 	db	33
   524  00FEC5  10                 	db	16
   525  00FEC6  FF                 	db	255
   526  00FEC7  F3                 	db	243
   527  00FEC8  D2                 	db	210
   528  00FEC9  CD                 	db	205
   529  00FECA  0C                 	db	12
   530  00FECB  13                 	db	19
   531  00FECC  EC                 	db	236
   532  00FECD  5F                 	db	95
   533  00FECE  97                 	db	151
   534  00FECF  44                 	db	68
   535  00FED0  17                 	db	23
   536  00FED1  C4                 	db	196
   537  00FED2  A7                 	db	167
   538  00FED3  7E                 	db	126
   539  00FED4  3D                 	db	61
   540  00FED5  64                 	db	100
   541  00FED6  5D                 	db	93
   542  00FED7  19                 	db	25
   543  00FED8  73                 	db	115
   544  00FED9  60                 	db	96
   545  00FEDA  81                 	db	129
   546  00FEDB  4F                 	db	79
   547  00FEDC  DC                 	db	220
   548  00FEDD  22                 	db	34
   549  00FEDE  2A                 	db	42
   550  00FEDF  90                 	db	144
   551  00FEE0  88                 	db	136
   552  00FEE1  46                 	db	70
   553  00FEE2  EE                 	db	238
   554  00FEE3  B8                 	db	184
   555  00FEE4  14                 	db	20
   556  00FEE5  DE                 	db	222
   557  00FEE6  5E                 	db	94
   558  00FEE7  0B                 	db	11
   559  00FEE8  DB                 	db	219
   560  00FEE9  E0                 	db	224
   561  00FEEA  32                 	db	50
   562  00FEEB  3A                 	db	58
   563  00FEEC  0A                 	db	10
   564  00FEED  49                 	db	73
   565  00FEEE  06                 	db	6
   566  00FEEF  24                 	db	36
   567  00FEF0  5C                 	db	92
   568  00FEF1  C2                 	db	194
   569  00FEF2  D3                 	db	211
   570  00FEF3  AC                 	db	172
   571  00FEF4  62                 	db	98
   572  00FEF5  91                 	db	145
   573  00FEF6  95                 	db	149
   574  00FEF7  E4                 	db	228
   575  00FEF8  79                 	db	121
   576  00FEF9  E7                 	db	231
   577  00FEFA  C8                 	db	200
   578  00FEFB  37                 	db	55
   579  00FEFC  6D                 	db	109
   580  00FEFD  8D                 	db	141
   581  00FEFE  D5                 	db	213
   582  00FEFF  4E                 	db	78
   583  00FF00  A9                 	db	169
   584  00FF01  6C                 	db	108
   585  00FF02  56                 	db	86
   586  00FF03  F4                 	db	244
   587  00FF04  EA                 	db	234
   588  00FF05  65                 	db	101
   589  00FF06  7A                 	db	122
   590  00FF07  AE                 	db	174
   591  00FF08  08                 	db	8
   592  00FF09  BA                 	db	186
   593  00FF0A  78                 	db	120
   594  00FF0B  25                 	db	37
   595  00FF0C  2E                 	db	46
   596  00FF0D  1C                 	db	28
   597  00FF0E  A6                 	db	166
   598  00FF0F  B4                 	db	180
   599  00FF10  C6                 	db	198
   600  00FF11  E8                 	db	232
   601  00FF12  DD                 	db	221
   602  00FF13  74                 	db	116
   603  00FF14  1F                 	db	31
   604  00FF15  4B                 	db	75
   605  00FF16  BD                 	db	189
   606  00FF17  8B                 	db	139
   607  00FF18  8A                 	db	138
   608  00FF19  70                 	db	112
   609  00FF1A  3E                 	db	62
   610  00FF1B  B5                 	db	181
   611  00FF1C  66                 	db	102
   612  00FF1D  48                 	db	72
   613  00FF1E  03                 	db	3
   614  00FF1F  F6                 	db	246
   615  00FF20  0E                 	db	14
   616  00FF21  61                 	db	97
   617  00FF22  35                 	db	53
   618  00FF23  57                 	db	87
   619  00FF24  B9                 	db	185
   620  00FF25  86                 	db	134
   621  00FF26  C1                 	db	193
   622  00FF27  1D                 	db	29
   623  00FF28  9E                 	db	158
   624  00FF29  E1                 	db	225
   625  00FF2A  F8                 	db	248
   626  00FF2B  98                 	db	152
   627  00FF2C  11                 	db	17
   628  00FF2D  69                 	db	105
   629  00FF2E  D9                 	db	217
   630  00FF2F  8E                 	db	142
   631  00FF30  94                 	db	148
   632  00FF31  9B                 	db	155
   633  00FF32  1E                 	db	30
   634  00FF33  87                 	db	135
   635  00FF34  E9                 	db	233
   636  00FF35  CE                 	db	206
   637  00FF36  55                 	db	85
   638  00FF37  28                 	db	40
   639  00FF38  DF                 	db	223
   640  00FF39  8C                 	db	140
   641  00FF3A  A1                 	db	161
   642  00FF3B  89                 	db	137
   643  00FF3C  0D                 	db	13
   644  00FF3D  BF                 	db	191
   645  00FF3E  E6                 	db	230
   646  00FF3F  42                 	db	66
   647  00FF40  68                 	db	104
   648  00FF41  41                 	db	65
   649  00FF42  99                 	db	153
   650  00FF43  2D                 	db	45
   651  00FF44  0F                 	db	15
   652  00FF45  B0                 	db	176
   653  00FF46  54                 	db	84
   654  00FF47  BB                 	db	187
   655  00FF48  16                 	db	22
   656  00FF49                     __end_of_STable:
   657                           	opt stack 0
   658  00FF49                     _modulation:
   659                           	opt stack 0
   660  00FF49  01                 	db	1
   661  00FF4A  01                 	db	1
   662  00FF4B  01                 	db	1
   663  00FF4C  01                 	db	1
   664  00FF4D  01                 	db	1
   665  00FF4E  01                 	db	1
   666  00FF4F  01                 	db	1
   667  00FF50  00                 	db	0
   668  00FF51                     __end_of_modulation:
   669                           	opt stack 0
   670  00FF51                     _rxWindowOffset:
   671                           	opt stack 0
   672  00FF51  DF                 	db	223
   673  00FF52  CE                 	db	206
   674  00FF53  C6                 	db	198
   675  00FF54  C2                 	db	194
   676  00FF55  BE                 	db	190
   677  00FF56  BC                 	db	188
   678  00FF57  F1                 	db	241
   679  00FF58  FE                 	db	254
   680  00FF59                     __end_of_rxWindowOffset:
   681                           	opt stack 0
   682  00FF59                     _maxPayloadSize:
   683                           	opt stack 0
   684  00FF59  33                 	db	51
   685  00FF5A  33                 	db	51
   686  00FF5B  33                 	db	51
   687  00FF5C  73                 	db	115
   688  00FF5D  F2                 	db	242
   689  00FF5E  F2                 	db	242
   690  00FF5F  F2                 	db	242
   691  00FF60  38                 	db	56
   692  00FF61                     __end_of_maxPayloadSize:
   693                           	opt stack 0
   694  00FF61                     _rxWindowSize:
   695                           	opt stack 0
   696  00FF61  08                 	db	8
   697  00FF62  0A                 	db	10
   698  00FF63  0E                 	db	14
   699  00FF64  1A                 	db	26
   700  00FF65  31                 	db	49
   701  00FF66  58                 	db	88
   702  00FF67  3C                 	db	60
   703  00FF68  08                 	db	8
   704  00FF69                     __end_of_rxWindowSize:
   705                           	opt stack 0
   706  00FF69                     _macEndDevCmdReplyLen:
   707                           	opt stack 0
   708  00FF69  01                 	db	1
   709  00FF6A  02                 	db	2
   710  00FF6B  01                 	db	1
   711  00FF6C  02                 	db	2
   712  00FF6D  03                 	db	3
   713  00FF6E  02                 	db	2
   714  00FF6F  01                 	db	1
   715  00FF70                     __end_of_macEndDevCmdReplyLen:
   716                           	opt stack 0
   717  00FF70                     _bandwidth:
   718                           	opt stack 0
   719  00FF70  07                 	db	7
   720  00FF71  07                 	db	7
   721  00FF72  07                 	db	7
   722  00FF73  07                 	db	7
   723  00FF74  07                 	db	7
   724  00FF75  07                 	db	7
   725  00FF76  08                 	db	8
   726  00FF77                     __end_of_bandwidth:
   727                           	opt stack 0
   728  00FF77                     _spreadingFactor:
   729                           	opt stack 0
   730  00FF77  0C                 	db	12
   731  00FF78  0B                 	db	11
   732  00FF79  0A                 	db	10
   733  00FF7A  09                 	db	9
   734  00FF7B  08                 	db	8
   735  00FF7C  07                 	db	7
   736  00FF7D  07                 	db	7
   737  00FF7E                     __end_of_spreadingFactor:
   738                           	opt stack 0
   739  00FF7E  0A                 	db	10
   740  00FF7F  07                 	db	7
   741  00FF80  04                 	db	4
   742  00FF81  01                 	db	1
   743  00FF82  FE                 	db	254
   744  00FF83  FB                 	db	251
   745  00FF84                     __end_of_txPower433:
   746                           	opt stack 0
   747  00FF84                     _txPower868:
   748                           	opt stack 0
   749  00FF84  14                 	db	20
   750  00FF85  0E                 	db	14
   751  00FF86  0B                 	db	11
   752  00FF87  08                 	db	8
   753  00FF88  05                 	db	5
   754  00FF89  02                 	db	2
   755  00FF8A                     __end_of_txPower868:
   756                           	opt stack 0
   757  00FF8A                     _DefaultChannels433:
   758                           	opt stack 0
   759  00FF8A  B9D8               	dw	47576
   760  00FF8C  19D1               	dw	6609
   761  00FF8E  01                 	db	1
   762  00FF8F  50                 	db	80
   763  00FF90  012E               	dw	302
   764  00FF92  0000               	dw	0
   765  00FF94  0000               	dw	0
   766  00FF96  01                 	db	1
   767  00FF97  FF                 	db	255
   768  00FF98  C718               	dw	50968
   769  00FF9A  19D4               	dw	6612
   770  00FF9C  01                 	db	1
   771  00FF9D  50                 	db	80
   772  00FF9E  012E               	dw	302
   773  00FFA0  0000               	dw	0
   774  00FFA2  0000               	dw	0
   775  00FFA4  01                 	db	1
   776  00FFA5  FF                 	db	255
   777  00FFA6  D458               	dw	54360
   778  00FFA8  19D7               	dw	6615
   779  00FFAA  01                 	db	1
   780  00FFAB  50                 	db	80
   781  00FFAC  012E               	dw	302
   782  00FFAE  0000               	dw	0
   783  00FFB0  0000               	dw	0
   784  00FFB2  01                 	db	1
   785  00FFB3  FF                 	db	255
   786  00FFB4                     __end_of_DefaultChannels433:
   787                           	opt stack 0
   788  00FFB4                     _DefaultChannels868:
   789                           	opt stack 0
   790  00FFB4  27A0               	dw	10144
   791  00FFB6  33BE               	dw	13246
   792  00FFB8  01                 	db	1
   793  00FFB9  50                 	db	80
   794  00FFBA  012E               	dw	302
   795  00FFBC  0000               	dw	0
   796  00FFBE  0000               	dw	0
   797  00FFC0  01                 	db	1
   798  00FFC1  FF                 	db	255
   799  00FFC2  34E0               	dw	13536
   800  00FFC4  33C1               	dw	13249
   801  00FFC6  01                 	db	1
   802  00FFC7  50                 	db	80
   803  00FFC8  012E               	dw	302
   804  00FFCA  0000               	dw	0
   805  00FFCC  0000               	dw	0
   806  00FFCE  01                 	db	1
   807  00FFCF  FF                 	db	255
   808  00FFD0  4220               	dw	16928
   809  00FFD2  33C4               	dw	13252
   810  00FFD4  01                 	db	1
   811  00FFD5  50                 	db	80
   812  00FFD6  012E               	dw	302
   813  00FFD8  0000               	dw	0
   814  00FFDA  0000               	dw	0
   815  00FFDC  01                 	db	1
   816  00FFDD  FF                 	db	255
   817  00FFDE                     __end_of_DefaultChannels868:
   818                           	opt stack 0
   819  00FFDE                     _FskSyncWordBuff:
   820                           	opt stack 0
   821  00FFDE  C1                 	db	193
   822  00FFDF  94                 	db	148
   823  00FFE0  C1                 	db	193
   824  00FFE1                     __end_of_FskSyncWordBuff:
   825                           	opt stack 0
   826  00FFE1                     STR_2:
   827                           
   828                           ; BSR set to: 1
   829  00FFE1  0D                 	db	13
   830  00FFE2  41                 	db	65	;'A'
   831  00FFE3  42                 	db	66	;'B'
   832  00FFE4  50                 	db	80	;'P'
   833  00FFE5  20                 	db	32
   834  00FFE6  4A                 	db	74	;'J'
   835  00FFE7  6F                 	db	111	;'o'
   836  00FFE8  69                 	db	105	;'i'
   837  00FFE9  6E                 	db	110	;'n'
   838  00FFEA  65                 	db	101	;'e'
   839  00FFEB  64                 	db	100	;'d'
   840  00FFEC  21                 	db	33
   841  00FFED  00                 	db	0
   842  00FFEE                     STR_1:
   843                           
   844                           ; BSR set to: 1
   845  00FFEE  0D                 	db	13
   846  00FFEF  53                 	db	83	;'S'
   847  00FFF0  59                 	db	89	;'Y'
   848  00FFF1  53                 	db	83	;'S'
   849  00FFF2  49                 	db	73	;'I'
   850  00FFF3  4E                 	db	78	;'N'
   851  00FFF4  49                 	db	73	;'I'
   852  00FFF5  54                 	db	84	;'T'
   853  00FFF6  21                 	db	33
   854  00FFF7  00                 	db	0
   855  00FFF8                     STR_3:
   856                           
   857                           ; BSR set to: 1
   858  00FFF8  6C                 	db	108	;'l'
   859  00FFF9  6F                 	db	111	;'o'
   860  00FFFA  72                 	db	114	;'r'
   861  00FFFB  61                 	db	97	;'a'
   862  00FFFC  31                 	db	49	;'1'
   863  00FFFD  00                 	db	0
   864                           
   865                           ; #config settings
   866  00FFFE  00                 	db	0	; dummy byte at the end
   867  0000                     
   868                           	psect	nvBANK1
   869  0001EB                     __pnvBANK1:
   870                           	opt stack 0
   871  0001EB                     _timer5ReloadVal:
   872                           	opt stack 0
   873  0001EB                     	ds	2
   874  0001ED                     _EUSART1_OverrunErrorHandler:
   875                           	opt stack 0
   876  0001ED                     	ds	2
   877  0001EF                     _EUSART1_FramingErrorHandler:
   878                           	opt stack 0
   879  0001EF                     	ds	2
   880  0001F1                     _TMR1_InterruptHandler:
   881                           	opt stack 0
   882  0001F1                     	ds	2
   883  0001F3                     _timer1ReloadVal:
   884                           	opt stack 0
   885  0001F3                     	ds	2
   886  0001F5                     _IOCB4_InterruptHandler:
   887                           	opt stack 0
   888  0001F5                     	ds	2
   889  0001F7                     _INT2_InterruptHandler:
   890                           	opt stack 0
   891  0001F7                     	ds	2
   892  0001F9                     _INT1_InterruptHandler:
   893                           	opt stack 0
   894  0001F9                     	ds	2
   895                           
   896                           	psect	nvBANK2
   897  0002F5                     __pnvBANK2:
   898                           	opt stack 0
   899  0002F5                     _EUSART1_ErrorHandler:
   900                           	opt stack 0
   901  0002F5                     	ds	2
   902  0000                     _TMR5	set	3919
   903  0000                     _T5GCONbits	set	3917
   904  0000                     _T5CONbits	set	3918
   905  0000                     _T5CON	set	3918
   906  0000                     _TMR5L	set	3919
   907  0000                     _TMR5H	set	3920
   908  0000                     _T5GCON	set	3917
   909  0000                     _CCPR5H	set	3926
   910  0000                     _CCPR5L	set	3925
   911  0000                     _CCP5CON	set	3924
   912  0000                     _ANSELA	set	3896
   913  0000                     _ANSELE	set	3900
   914  0000                     _ANSELB	set	3897
   915  0000                     _ANSELC	set	3898
   916  0000                     _ANSELD	set	3899
   917  0000                     _TMR1	set	4046
   918  0000                     _LATAbits	set	3977
   919  0000                     _OSCCONbits	set	4051
   920  0000                     _PIR5bits	set	3966
   921  0000                     _TXREG1	set	4013
   922  0000                     _RCREG1	set	4014
   923  0000                     _RCSTA1bits	set	4011
   924  0000                     _TXSTA1bits	set	4012
   925  0000                     _SPBRGH1	set	4016
   926  0000                     _SPBRG1	set	4015
   927  0000                     _TXSTA1	set	4012
   928  0000                     _RCSTA1	set	4011
   929  0000                     _BAUDCON1	set	4024
   930  0000                     _ADCON0bits	set	4034
   931  0000                     _ADRESH	set	4036
   932  0000                     _ADRESL	set	4035
   933  0000                     _ADCON2	set	4032
   934  0000                     _ADCON1	set	4033
   935  0000                     _ADCON0	set	4034
   936  0000                     _T1GCONbits	set	4044
   937  0000                     _T1CONbits	set	4045
   938  0000                     _T1CON	set	4045
   939  0000                     _TMR1L	set	4046
   940  0000                     _TMR1H	set	4047
   941  0000                     _T1GCON	set	4044
   942  0000                     _IOCBbits	set	3938
   943  0000                     _WPUB	set	3937
   944  0000                     _TRISD	set	3989
   945  0000                     _TRISC	set	3988
   946  0000                     _TRISB	set	3987
   947  0000                     _TRISA	set	3986
   948  0000                     _TRISE	set	3990
   949  0000                     _LATC	set	3979
   950  0000                     _LATB	set	3978
   951  0000                     _LATA	set	3977
   952  0000                     _LATD	set	3980
   953  0000                     _LATE	set	3981
   954  0000                     _OSCTUNE	set	3995
   955  0000                     _OSCCON2	set	4050
   956  0000                     _OSCCON	set	4051
   957  0000                     _PIR1bits	set	3998
   958  0000                     _PIE1bits	set	3997
   959  0000                     _RCONbits	set	4048
   960  0000                     _INTCON2bits	set	4081
   961  0000                     _INTCON3bits	set	4080
   962  0000                     _SSP2STATbits	set	3949
   963  0000                     _SSP2BUF	set	3951
   964  0000                     _SSP2CON1bits	set	3948
   965  0000                     _SSP2ADD	set	3950
   966  0000                     _SSP2CON1	set	3948
   967  0000                     _SSP2STAT	set	3949
   968  0000                     _PORTBbits	set	3969
   969  0000                     _INTCONbits	set	4082
   970  0000                     _TMR5IF	set	31729
   971  0000                     _LATD3	set	31843
   972  0000                     _LATC2	set	31834
   973  0000                     _TRISC2	set	31906
   974                           
   975                           	psect	cinit
   976  0069B4                     __pcinit:
   977                           	opt stack 0
   978  0069B4                     start_initialization:
   979                           	opt stack 0
   980  0069B4                     __initialization:
   981                           	opt stack 0
   982                           
   983                           ; Initialize objects allocated to BANK3 (32 bytes)
   984                           ; load TBLPTR registers with __pidataBANK3
   985  0069B4  0EEC               	movlw	low __pidataBANK3
   986  0069B6  6EF6               	movwf	tblptrl,c
   987  0069B8  0E88               	movlw	high __pidataBANK3
   988  0069BA  6EF7               	movwf	tblptrh,c
   989  0069BC  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   990  0069BE  6EF8               	movwf	tblptru,c
   991  0069C0  EE03  F0A0         	lfsr	0,__pdataBANK3
   992  0069C4  EE20 F020          	lfsr	2,32
   993  0069C8                     copy_data0:
   994  0069C8  0009               	tblrd		*+
   995  0069CA  CFF5 FFEE          	movff	tablat,postinc0
   996  0069CE  50DD               	movf	postdec2,w,c
   997  0069D0  50D9               	movf	fsr2l,w,c
   998  0069D2  E1FA               	bnz	copy_data0
   999                           
  1000                           ; Initialize objects allocated to BANK1 (24 bytes)
  1001                           ; load TBLPTR registers with __pidataBANK1
  1002  0069D4  0ED2               	movlw	low __pidataBANK1
  1003  0069D6  6EF6               	movwf	tblptrl,c
  1004  0069D8  0E8A               	movlw	high __pidataBANK1
  1005  0069DA  6EF7               	movwf	tblptrh,c
  1006  0069DC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1007  0069DE  6EF8               	movwf	tblptru,c
  1008  0069E0  EE01  F0D3         	lfsr	0,__pdataBANK1
  1009  0069E4  EE20 F018          	lfsr	2,24
  1010  0069E8                     copy_data1:
  1011  0069E8  0009               	tblrd		*+
  1012  0069EA  CFF5 FFEE          	movff	tablat,postinc0
  1013  0069EE  50DD               	movf	postdec2,w,c
  1014  0069F0  50D9               	movf	fsr2l,w,c
  1015  0069F2  E1FA               	bnz	copy_data1
  1016                           
  1017                           ; Initialize objects allocated to COMRAM (4 bytes)
  1018                           ; load TBLPTR registers with __pidataCOMRAM
  1019  0069F4  0E88               	movlw	low __pidataCOMRAM
  1020  0069F6  6EF6               	movwf	tblptrl,c
  1021  0069F8  0E8D               	movlw	high __pidataCOMRAM
  1022  0069FA  6EF7               	movwf	tblptrh,c
  1023  0069FC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1024  0069FE  6EF8               	movwf	tblptru,c
  1025  006A00  EE00  F054         	lfsr	0,__pdataCOMRAM
  1026  006A04  EE20 F004          	lfsr	2,4
  1027  006A08                     copy_data2:
  1028  006A08  0009               	tblrd		*+
  1029  006A0A  CFF5 FFEE          	movff	tablat,postinc0
  1030  006A0E  50DD               	movf	postdec2,w,c
  1031  006A10  50D9               	movf	fsr2l,w,c
  1032  006A12  E1FA               	bnz	copy_data2
  1033                           
  1034                           ; Clear objects allocated to BIGRAM (542 bytes)
  1035  006A14  EE04  F0E0         	lfsr	0,__pbssBIGRAM
  1036  006A18  EE22 F01E          	lfsr	2,542
  1037  006A1C                     clear_0:
  1038  006A1C  6AEE               	clrf	postinc0,c
  1039  006A1E  50DD               	movf	postdec2,w,c
  1040  006A20  50D9               	movf	fsr2l,w,c
  1041  006A22  E1FC               	bnz	clear_0
  1042  006A24  50DA               	movf	fsr2h,w,c
  1043  006A26  E1FA               	bnz	clear_0
  1044                           
  1045                           ; Clear objects allocated to BANK4 (224 bytes)
  1046  006A28  EE04  F000         	lfsr	0,__pbssBANK4
  1047  006A2C  0EE0               	movlw	224
  1048  006A2E                     clear_1:
  1049  006A2E  6AEE               	clrf	postinc0,c
  1050  006A30  06E8               	decf	wreg,f,c
  1051  006A32  E1FD               	bnz	clear_1
  1052                           
  1053                           ; Clear objects allocated to BANK3 (160 bytes)
  1054  006A34  EE03  F000         	lfsr	0,__pbssBANK3
  1055  006A38  0EA0               	movlw	160
  1056  006A3A                     clear_2:
  1057  006A3A  6AEE               	clrf	postinc0,c
  1058  006A3C  06E8               	decf	wreg,f,c
  1059  006A3E  E1FD               	bnz	clear_2
  1060                           
  1061                           ; Clear objects allocated to BANK2 (245 bytes)
  1062  006A40  EE02  F000         	lfsr	0,__pbssBANK2
  1063  006A44  0EF5               	movlw	245
  1064  006A46                     clear_3:
  1065  006A46  6AEE               	clrf	postinc0,c
  1066  006A48  06E8               	decf	wreg,f,c
  1067  006A4A  E1FD               	bnz	clear_3
  1068                           
  1069                           ; Clear objects allocated to BANK1 (106 bytes)
  1070  006A4C  EE01  F000         	lfsr	0,__pbssBANK1
  1071  006A50  0E6A               	movlw	106
  1072  006A52                     clear_4:
  1073  006A52  6AEE               	clrf	postinc0,c
  1074  006A54  06E8               	decf	wreg,f,c
  1075  006A56  E1FD               	bnz	clear_4
  1076                           
  1077                           ; Clear objects allocated to BANK0 (1 bytes)
  1078  006A58  0100               	movlb	0
  1079  006A5A  6BFB               	clrf	__pbssBANK0& (0+255),b
  1080                           
  1081                           ; Clear objects allocated to COMRAM (12 bytes)
  1082  006A5C  EE00  F03C         	lfsr	0,__pbssCOMRAM
  1083  006A60  0E0C               	movlw	12
  1084  006A62                     clear_5:
  1085  006A62  6AEE               	clrf	postinc0,c
  1086  006A64  06E8               	decf	wreg,f,c
  1087  006A66  E1FD               	bnz	clear_5
  1088  006A68                     end_of_initialization:
  1089                           	opt stack 0
  1090  006A68                     __end_of__initialization:
  1091                           	opt stack 0
  1092  006A68  0100               	movlb	0
  1093  006A6A  EFA2  F033         	goto	_main	;jump to C main() function
  1094                           tblptru	equ	0xFF8
  1095                           tblptrh	equ	0xFF7
  1096                           tblptrl	equ	0xFF6
  1097                           tablat	equ	0xFF5
  1098                           postinc0	equ	0xFEE
  1099                           wreg	equ	0xFE8
  1100                           postdec2	equ	0xFDD
  1101                           fsr2h	equ	0xFDA
  1102                           fsr2l	equ	0xFD9
  1103                           
  1104                           	psect	bssCOMRAM
  1105  00003C                     __pbssCOMRAM:
  1106                           	opt stack 0
  1107  00003C                     _ticksAccounted:
  1108                           	opt stack 0
  1109  00003C                     	ds	4
  1110  000040                     _ticksAdded:
  1111                           	opt stack 0
  1112  000040                     	ds	4
  1113  000044                     _reloadVal:
  1114                           	opt stack 0
  1115  000044                     	ds	2
  1116  000046                     __rcon:
  1117                           	opt stack 0
  1118  000046                     	ds	1
  1119  000047                     _timerOverflow:
  1120                           	opt stack 0
  1121  000047                     	ds	1
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           postinc0	equ	0xFEE
  1127                           wreg	equ	0xFE8
  1128                           postdec2	equ	0xFDD
  1129                           fsr2h	equ	0xFDA
  1130                           fsr2l	equ	0xFD9
  1131                           
  1132                           	psect	dataCOMRAM
  1133  000054                     __pdataCOMRAM:
  1134                           	opt stack 0
  1135  000054                     _ticksToScheduledInterrupt:
  1136                           	opt stack 0
  1137  000054                     	ds	4
  1138                           tblptru	equ	0xFF8
  1139                           tblptrh	equ	0xFF7
  1140                           tblptrl	equ	0xFF6
  1141                           tablat	equ	0xFF5
  1142                           postinc0	equ	0xFEE
  1143                           wreg	equ	0xFE8
  1144                           postdec2	equ	0xFDD
  1145                           fsr2h	equ	0xFDA
  1146                           fsr2l	equ	0xFD9
  1147                           
  1148                           	psect	bssBANK0
  1149  0000FB                     __pbssBANK0:
  1150                           	opt stack 0
  1151  0000FB                     _allocatedTimers:
  1152                           	opt stack 0
  1153  0000FB                     	ds	1
  1154                           tblptru	equ	0xFF8
  1155                           tblptrh	equ	0xFF7
  1156                           tblptrl	equ	0xFF6
  1157                           tablat	equ	0xFF5
  1158                           postinc0	equ	0xFEE
  1159                           wreg	equ	0xFE8
  1160                           postdec2	equ	0xFDD
  1161                           fsr2h	equ	0xFDA
  1162                           fsr2l	equ	0xFD9
  1163                           
  1164                           	psect	bssBANK1
  1165  000100                     __pbssBANK1:
  1166                           	opt stack 0
  1167  000100                     _data:
  1168                           	opt stack 0
  1169  000100                     	ds	8
  1170  000108                     _adcVoltage:
  1171                           	opt stack 0
  1172  000108                     	ds	4
  1173  00010C                     _adcResult:
  1174                           	opt stack 0
  1175  00010C                     	ds	4
  1176  000110                     _rxPayload:
  1177                           	opt stack 0
  1178  000110                     	ds	4
  1179  000114                     TMR_GetDeltaTime@retVal:
  1180                           	opt stack 0
  1181  000114                     	ds	4
  1182  000118                     TMR_SwapTimer@retVal:
  1183                           	opt stack 0
  1184  000118                     	ds	2
  1185  00011A                     TMR_SwapTimer@oldVal:
  1186                           	opt stack 0
  1187  00011A                     	ds	2
  1188  00011C                     TMR_GetDeltaTime@tmrVal:
  1189                           	opt stack 0
  1190  00011C                     	ds	2
  1191  00011E                     _counter:
  1192                           	opt stack 0
  1193  00011E                     	ds	1
  1194  00011F                     _activationMethod:
  1195                           	opt stack 0
  1196  00011F                     	ds	1
  1197  000120                     _eusart1RxLastError:
  1198                           	opt stack 0
  1199  000120                     	ds	1
  1200  000121                     _localDioStatus:
  1201                           	opt stack 0
  1202  000121                     	ds	1
  1203  000122                     __roundCounter:
  1204                           	opt stack 0
  1205  000122                     	ds	1
  1206  000123                     _dioStatus:
  1207                           	opt stack 0
  1208  000123                     	ds	1
  1209  000124                     _RadioConfiguration:
  1210                           	opt stack 0
  1211  000124                     	ds	54
  1212  00015A                     _aesBuffer:
  1213                           	opt stack 0
  1214  00015A                     	ds	16
  1215                           tblptru	equ	0xFF8
  1216                           tblptrh	equ	0xFF7
  1217                           tblptrl	equ	0xFF6
  1218                           tablat	equ	0xFF5
  1219                           postinc0	equ	0xFEE
  1220                           wreg	equ	0xFE8
  1221                           postdec2	equ	0xFDD
  1222                           fsr2h	equ	0xFDA
  1223                           fsr2l	equ	0xFD9
  1224                           
  1225                           	psect	dataBANK1
  1226  0001D3                     __pdataBANK1:
  1227                           	opt stack 0
  1228  0001D3                     GenerateSubkey@F7103:
  1229                           	opt stack 0
  1230  0001D3                     	ds	16
  1231  0001E3                     _randx:
  1232                           	opt stack 0
  1233  0001E3                     	ds	4
  1234  0001E7                     _devAddr:
  1235                           	opt stack 0
  1236  0001E7                     	ds	4
  1237                           tblptru	equ	0xFF8
  1238                           tblptrh	equ	0xFF7
  1239                           tblptrl	equ	0xFF6
  1240                           tablat	equ	0xFF5
  1241                           postinc0	equ	0xFEE
  1242                           wreg	equ	0xFE8
  1243                           postdec2	equ	0xFDD
  1244                           fsr2h	equ	0xFDA
  1245                           fsr2l	equ	0xFD9
  1246                           
  1247                           	psect	bssBANK2
  1248  000200                     __pbssBANK2:
  1249                           	opt stack 0
  1250  000200                     _loRa:
  1251                           	opt stack 0
  1252  000200                     	ds	245
  1253                           tblptru	equ	0xFF8
  1254                           tblptrh	equ	0xFF7
  1255                           tblptrl	equ	0xFF6
  1256                           tablat	equ	0xFF5
  1257                           postinc0	equ	0xFEE
  1258                           wreg	equ	0xFE8
  1259                           postdec2	equ	0xFDD
  1260                           fsr2h	equ	0xFDA
  1261                           fsr2l	equ	0xFD9
  1262                           
  1263                           	psect	bssBANK3
  1264  000300                     __pbssBANK3:
  1265                           	opt stack 0
  1266  000300                     _swTimers:
  1267                           	opt stack 0
  1268  000300                     	ds	160
  1269                           tblptru	equ	0xFF8
  1270                           tblptrh	equ	0xFF7
  1271                           tblptrl	equ	0xFF6
  1272                           tablat	equ	0xFF5
  1273                           postinc0	equ	0xFEE
  1274                           wreg	equ	0xFE8
  1275                           postdec2	equ	0xFDD
  1276                           fsr2h	equ	0xFDA
  1277                           fsr2l	equ	0xFD9
  1278                           
  1279                           	psect	dataBANK3
  1280  0003A0                     __pdataBANK3:
  1281                           	opt stack 0
  1282  0003A0                     _appSKey:
  1283                           	opt stack 0
  1284  0003A0                     	ds	16
  1285  0003B0                     _nwkSKey:
  1286                           	opt stack 0
  1287  0003B0                     	ds	16
  1288                           tblptru	equ	0xFF8
  1289                           tblptrh	equ	0xFF7
  1290                           tblptrl	equ	0xFF6
  1291                           tablat	equ	0xFF5
  1292                           postinc0	equ	0xFEE
  1293                           wreg	equ	0xFE8
  1294                           postdec2	equ	0xFDD
  1295                           fsr2h	equ	0xFDA
  1296                           fsr2l	equ	0xFD9
  1297                           
  1298                           	psect	bssBANK4
  1299  000400                     __pbssBANK4:
  1300                           	opt stack 0
  1301  000400                     _Channels:
  1302                           	opt stack 0
  1303  000400                     	ds	224
  1304                           tblptru	equ	0xFF8
  1305                           tblptrh	equ	0xFF7
  1306                           tblptrl	equ	0xFF6
  1307                           tablat	equ	0xFF5
  1308                           postinc0	equ	0xFEE
  1309                           wreg	equ	0xFE8
  1310                           postdec2	equ	0xFDD
  1311                           fsr2h	equ	0xFDA
  1312                           fsr2l	equ	0xFD9
  1313                           
  1314                           	psect	bssBIGRAM
  1315  0004E0                     __pbssBIGRAM:
  1316                           	opt stack 0
  1317  0004E0                     _macBuffer:
  1318                           	opt stack 0
  1319  0004E0                     	ds	271
  1320  0005EF                     _radioBuffer:
  1321                           	opt stack 0
  1322  0005EF                     	ds	271
  1323                           tblptru	equ	0xFF8
  1324                           tblptrh	equ	0xFF7
  1325                           tblptrl	equ	0xFF6
  1326                           tablat	equ	0xFF5
  1327                           postinc0	equ	0xFEE
  1328                           wreg	equ	0xFE8
  1329                           postdec2	equ	0xFDD
  1330                           fsr2h	equ	0xFDA
  1331                           fsr2l	equ	0xFD9
  1332                           
  1333                           	psect	cstackBANK1
  1334  00016A                     __pcstackBANK1:
  1335                           	opt stack 0
  1336  00016A                     AESCmac@k2:
  1337                           	opt stack 0
  1338                           
  1339                           ; 16 bytes @ 0x0
  1340  00016A                     	ds	16
  1341  00017A                     AESCmac@k1:
  1342                           	opt stack 0
  1343                           
  1344                           ; 16 bytes @ 0x10
  1345  00017A                     	ds	16
  1346  00018A                     AESCmac@mLast:
  1347                           	opt stack 0
  1348                           
  1349                           ; 16 bytes @ 0x20
  1350  00018A                     	ds	16
  1351  00019A                     AESCmac@padded:
  1352                           	opt stack 0
  1353                           
  1354                           ; 16 bytes @ 0x30
  1355  00019A                     	ds	16
  1356  0001AA                     AESCmac@y:
  1357                           	opt stack 0
  1358                           
  1359                           ; 16 bytes @ 0x40
  1360  0001AA                     	ds	16
  1361  0001BA                     AESCmac@x:
  1362                           	opt stack 0
  1363                           
  1364                           ; 16 bytes @ 0x50
  1365  0001BA                     	ds	16
  1366  0001CA                     AESCmac@ptr:
  1367                           	opt stack 0
  1368                           
  1369                           ; 2 bytes @ 0x60
  1370  0001CA                     	ds	2
  1371  0001CC                     AESCmac@flag:
  1372                           	opt stack 0
  1373                           
  1374                           ; 1 bytes @ 0x62
  1375  0001CC                     	ds	1
  1376  0001CD                     AESCmac@n:
  1377                           	opt stack 0
  1378                           
  1379                           ; 1 bytes @ 0x63
  1380  0001CD                     	ds	1
  1381  0001CE                     AESCmac@j:
  1382                           	opt stack 0
  1383                           
  1384                           ; 1 bytes @ 0x64
  1385  0001CE                     	ds	1
  1386  0001CF                     AESCmac@i:
  1387                           	opt stack 0
  1388                           
  1389                           ; 1 bytes @ 0x65
  1390  0001CF                     	ds	1
  1391  0001D0                     LORAWAN_RxDone@buffer:
  1392                           	opt stack 0
  1393                           
  1394                           ; 2 bytes @ 0x66
  1395  0001D0                     	ds	2
  1396  0001D2                     LORAWAN_RxDone@bufferLength:
  1397                           	opt stack 0
  1398                           
  1399                           ; 1 bytes @ 0x68
  1400  0001D2                     	ds	1
  1401                           tblptru	equ	0xFF8
  1402                           tblptrh	equ	0xFF7
  1403                           tblptrl	equ	0xFF6
  1404                           tablat	equ	0xFF5
  1405                           postinc0	equ	0xFEE
  1406                           wreg	equ	0xFE8
  1407                           postdec2	equ	0xFDD
  1408                           fsr2h	equ	0xFDA
  1409                           fsr2l	equ	0xFD9
  1410                           
  1411                           	psect	cstackBANK0
  1412  000060                     __pcstackBANK0:
  1413                           	opt stack 0
  1414  000060                     ??_UpdateMinMaxChDataRate:
  1415  000060                     ??_FindSmallestDataRate:
  1416  000060                     ??_CountfOptsLength:
  1417  000060                     ?_TMR1_ReadTimer:
  1418                           	opt stack 0
  1419  000060                     ?_ExecuteDutyCycle:
  1420                           	opt stack 0
  1421  000060                     ?_ExecuteDevStatus:
  1422                           	opt stack 0
  1423  000060                     ?_ExecuteLinkCheck:
  1424                           	opt stack 0
  1425  000060                     ?___wmul:
  1426                           	opt stack 0
  1427  000060                     ?___awdiv:
  1428                           	opt stack 0
  1429  000060                     ?_GetRx1Freq:
  1430                           	opt stack 0
  1431  000060                     ?___lldiv:
  1432                           	opt stack 0
  1433  000060                     ?___llmod:
  1434                           	opt stack 0
  1435  000060                     INTERRUPT_GetDioStatus@a:
  1436                           	opt stack 0
  1437  000060                     HALResetPinOutputValue@value:
  1438                           	opt stack 0
  1439  000060                     SwTimerCreate@retVal:
  1440                           	opt stack 0
  1441  000060                     SwTimerIsRunning@timerId:
  1442                           	opt stack 0
  1443  000060                     SwTimerStop@timerId:
  1444                           	opt stack 0
  1445  000060                     RADIO_SetLoRaSyncWord@syncWord:
  1446                           	opt stack 0
  1447  000060                     RADIO_SetSpreadingFactor@spreadingFactor:
  1448                           	opt stack 0
  1449  000060                     RADIO_SetOutputPower@power:
  1450                           	opt stack 0
  1451  000060                     RADIO_SetCRC@crc:
  1452                           	opt stack 0
  1453  000060                     RADIO_SetIQInverted@iqInverted:
  1454                           	opt stack 0
  1455  000060                     RADIO_SetBandwidth@bandwidth:
  1456                           	opt stack 0
  1457  000060                     RADIO_SetModulation@modulation:
  1458                           	opt stack 0
  1459  000060                     ValidateDataRate@dataRate:
  1460                           	opt stack 0
  1461  000060                     ValidateTxPower@result:
  1462                           	opt stack 0
  1463  000060                     UpdateDLSettings@dlRx1DrOffset:
  1464                           	opt stack 0
  1465  000060                     UpdateDataRange@dataRangeNew:
  1466                           	opt stack 0
  1467  000060                     UpdateChannelIdStatus@statusNew:
  1468                           	opt stack 0
  1469  000060                     ValidateRxOffset@rxOffset:
  1470                           	opt stack 0
  1471  000060                     ValidateChannelId@allowedForDefaultChannels:
  1472                           	opt stack 0
  1473  000060                     ValidateChannelMaskCntl@result:
  1474                           	opt stack 0
  1475  000060                     UpdateCurrentDataRate@valueNew:
  1476                           	opt stack 0
  1477  000060                     UpdateTxPower@txPowerNew:
  1478                           	opt stack 0
  1479  000060                     UpdateJoinInProgress@state:
  1480                           	opt stack 0
  1481  000060                     SPI2_Exchange8bit@data:
  1482                           	opt stack 0
  1483  000060                     EUSART1_Write@txData:
  1484                           	opt stack 0
  1485  000060                     ___abdiv@divisor:
  1486                           	opt stack 0
  1487  000060                     FillSubKey@source:
  1488                           	opt stack 0
  1489  000060                     SwTimerSetCallback@callback:
  1490                           	opt stack 0
  1491  000060                     EncKeySchedule@key:
  1492                           	opt stack 0
  1493  000060                     EncodeShiftRow@stateTable:
  1494                           	opt stack 0
  1495  000060                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1496                           	opt stack 0
  1497  000060                     ExecuteDutyCycle@ptr:
  1498                           	opt stack 0
  1499  000060                     ExecuteDevStatus@ptr:
  1500                           	opt stack 0
  1501  000060                     UpdateDutyCycle@dutyCycleNew:
  1502                           	opt stack 0
  1503  000060                     ValidateChannelMask@channelMask:
  1504                           	opt stack 0
  1505  000060                     ExecuteLinkCheck@ptr:
  1506                           	opt stack 0
  1507  000060                     IncludeMacCommandsResponse@macBuffer:
  1508                           	opt stack 0
  1509  000060                     CheckFlags@hdr:
  1510                           	opt stack 0
  1511  000060                     CheckMcastFlags@hdr:
  1512                           	opt stack 0
  1513  000060                     INT1_SetInterruptHandler@InterruptHandler:
  1514                           	opt stack 0
  1515  000060                     INT2_SetInterruptHandler@InterruptHandler:
  1516                           	opt stack 0
  1517  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
  1518                           	opt stack 0
  1519  000060                     TMR1_WriteTimer@timerVal:
  1520                           	opt stack 0
  1521  000060                     TMR1_SetInterruptHandler@InterruptHandler:
  1522                           	opt stack 0
  1523  000060                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1524                           	opt stack 0
  1525  000060                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1526                           	opt stack 0
  1527  000060                     EUSART1_SetErrorHandler@interruptHandler:
  1528                           	opt stack 0
  1529  000060                     RxData@pData:
  1530                           	opt stack 0
  1531  000060                     ___wmul@multiplier:
  1532                           	opt stack 0
  1533  000060                     ___awdiv@dividend:
  1534                           	opt stack 0
  1535  000060                     memcpy@d1:
  1536                           	opt stack 0
  1537  000060                     memset@p1:
  1538                           	opt stack 0
  1539  000060                     SystemBlockingWaitMs@ms:
  1540                           	opt stack 0
  1541  000060                     RADIO_SetChannelFrequency@frequency:
  1542                           	opt stack 0
  1543  000060                     ValidateFrequency@frequencyNew:
  1544                           	opt stack 0
  1545  000060                     UpdateFrequency@frequencyNew:
  1546                           	opt stack 0
  1547  000060                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1548                           	opt stack 0
  1549  000060                     UpdateReceiveWindow2Parameters@frequency:
  1550                           	opt stack 0
  1551  000060                     ___lldiv@dividend:
  1552                           	opt stack 0
  1553  000060                     ___llmod@dividend:
  1554                           	opt stack 0
  1555                           
  1556                           ; 4 bytes @ 0x0
  1557  000060                     	ds	1
  1558  000061                     ??_UpdateDataRange:
  1559  000061                     ??_UpdateChannelIdStatus:
  1560  000061                     ??___abdiv:
  1561  000061                     HALSPISend@data:
  1562                           	opt stack 0
  1563  000061                     SwTimerIsRunning@isRunning:
  1564                           	opt stack 0
  1565  000061                     ValidateDataRate@result:
  1566                           	opt stack 0
  1567  000061                     ValidateTxPower@txPowerNew:
  1568                           	opt stack 0
  1569  000061                     UpdateDLSettings@dlRx2Dr:
  1570                           	opt stack 0
  1571  000061                     ValidateRxOffset@result:
  1572                           	opt stack 0
  1573  000061                     ValidateChannelId@result:
  1574                           	opt stack 0
  1575  000061                     ValidateChannelMaskCntl@channelMaskCntl:
  1576                           	opt stack 0
  1577  000061                     UpdateMinMaxChDataRate@i:
  1578                           	opt stack 0
  1579  000061                     FindSmallestDataRate@found:
  1580                           	opt stack 0
  1581  000061                     putch@txData:
  1582                           	opt stack 0
  1583                           
  1584                           ; 1 bytes @ 0x1
  1585  000061                     	ds	1
  1586  000062                     ??_TMR1_ReadTimer:
  1587  000062                     ??_EncKeySchedule:
  1588  000062                     ??_ValidateChannelMask:
  1589  000062                     ??_ExecuteDutyCycle:
  1590  000062                     ?_printf:
  1591                           	opt stack 0
  1592  000062                     SwTimerSetCallback@callbackParameter:
  1593                           	opt stack 0
  1594  000062                     EncodeShiftRow@temp:
  1595                           	opt stack 0
  1596  000062                     RADIO_RegisterWrite@value:
  1597                           	opt stack 0
  1598  000062                     RADIO_RegisterRead@reg:
  1599                           	opt stack 0
  1600  000062                     UpdateDataRange@channelId:
  1601                           	opt stack 0
  1602  000062                     UpdateChannelIdStatus@channelId:
  1603                           	opt stack 0
  1604  000062                     ValidateDataRange@result:
  1605                           	opt stack 0
  1606  000062                     ValidateChannelId@channelId:
  1607                           	opt stack 0
  1608  000062                     UpdateDutyCycle@channelId:
  1609                           	opt stack 0
  1610  000062                     FindSmallestDataRate@i:
  1611                           	opt stack 0
  1612  000062                     RxData@dataLength:
  1613                           	opt stack 0
  1614  000062                     FillSubKey@key:
  1615                           	opt stack 0
  1616  000062                     IncludeMacCommandsResponse@pBufferIndex:
  1617                           	opt stack 0
  1618  000062                     printf@f:
  1619                           	opt stack 0
  1620  000062                     ___wmul@multiplicand:
  1621                           	opt stack 0
  1622  000062                     ___awdiv@divisor:
  1623                           	opt stack 0
  1624  000062                     memcpy@s1:
  1625                           	opt stack 0
  1626  000062                     memset@c:
  1627                           	opt stack 0
  1628                           
  1629                           ; 2 bytes @ 0x2
  1630  000062                     	ds	1
  1631  000063                     SwTimerSetCallback@timerId:
  1632                           	opt stack 0
  1633  000063                     RADIO_RegisterWrite@reg:
  1634                           	opt stack 0
  1635  000063                     RADIO_RegisterRead@readValue:
  1636                           	opt stack 0
  1637  000063                     UpdateDataRange@i:
  1638                           	opt stack 0
  1639  000063                     UpdateChannelIdStatus@i:
  1640                           	opt stack 0
  1641  000063                     ValidateDataRange@dataRangeNew:
  1642                           	opt stack 0
  1643  000063                     FindSmallestDataRate@dataRate:
  1644                           	opt stack 0
  1645  000063                     RxData@status:
  1646                           	opt stack 0
  1647  000063                     ___abdiv@counter:
  1648                           	opt stack 0
  1649                           
  1650                           ; 1 bytes @ 0x3
  1651  000063                     	ds	1
  1652  000064                     ??_SystemBlockingWaitMs:
  1653  000064                     FillSubKey@size:
  1654                           	opt stack 0
  1655  000064                     RADIO_WritePower@ocp:
  1656                           	opt stack 0
  1657  000064                     RADIO_UnhandledInterrupt@modulation:
  1658                           	opt stack 0
  1659  000064                     LORAWAN_SetChannelIdStatus@statusNew:
  1660                           	opt stack 0
  1661  000064                     ValidateFrequency@result:
  1662                           	opt stack 0
  1663  000064                     ValidateDataRange@dataRateMax:
  1664                           	opt stack 0
  1665  000064                     UpdateFrequency@channelId:
  1666                           	opt stack 0
  1667  000064                     ValidateChannelMask@i:
  1668                           	opt stack 0
  1669  000064                     UpdateReceiveWindow2Parameters@dataRate:
  1670                           	opt stack 0
  1671  000064                     IncludeMacCommandsResponse@bIncludeInFopts:
  1672                           	opt stack 0
  1673  000064                     ___abdiv@sign:
  1674                           	opt stack 0
  1675  000064                     ___awdiv@counter:
  1676                           	opt stack 0
  1677  000064                     _EncKeySchedule$514:
  1678                           	opt stack 0
  1679  000064                     EnableChannels1@channelMask:
  1680                           	opt stack 0
  1681  000064                     TMR1_ReadTimer@readVal:
  1682                           	opt stack 0
  1683  000064                     printf@ap:
  1684                           	opt stack 0
  1685  000064                     ___wmul@product:
  1686                           	opt stack 0
  1687  000064                     memcpy@n:
  1688                           	opt stack 0
  1689  000064                     memset@n:
  1690                           	opt stack 0
  1691  000064                     ___lldiv@divisor:
  1692                           	opt stack 0
  1693  000064                     ___llmod@divisor:
  1694                           	opt stack 0
  1695                           
  1696                           ; 4 bytes @ 0x4
  1697  000064                     	ds	1
  1698  000065                     ??_FillSubKey:
  1699  000065                     ??_IncludeMacCommandsResponse:
  1700  000065                     ??_RADIO_DIO3:
  1701  000065                     ??_RADIO_DIO4:
  1702  000065                     ??_RADIO_DIO5:
  1703  000065                     RADIO_WriteMode@newModulation:
  1704                           	opt stack 0
  1705  000065                     RADIO_WritePower@paDac:
  1706                           	opt stack 0
  1707  000065                     LORAWAN_SetChannelIdStatus@result:
  1708                           	opt stack 0
  1709  000065                     ExecuteDutyCycle@maxDCycle:
  1710                           	opt stack 0
  1711  000065                     ValidateDataRange@dataRateMin:
  1712                           	opt stack 0
  1713  000065                     ___abdiv@quotient:
  1714                           	opt stack 0
  1715  000065                     ___awdiv@sign:
  1716                           	opt stack 0
  1717                           
  1718                           ; 1 bytes @ 0x5
  1719  000065                     	ds	1
  1720  000066                     FillSubKey@carry:
  1721                           	opt stack 0
  1722  000066                     RADIO_WriteMode@blocking:
  1723                           	opt stack 0
  1724  000066                     RADIO_WritePower@power:
  1725                           	opt stack 0
  1726  000066                     RADIO_DIO3@dioMapping:
  1727                           	opt stack 0
  1728  000066                     RADIO_DIO5@dioMapping:
  1729                           	opt stack 0
  1730  000066                     LORAWAN_SetChannelIdStatus@channelId:
  1731                           	opt stack 0
  1732  000066                     EnableChannels1@channelMaskCntl:
  1733                           	opt stack 0
  1734  000066                     UpdateReceiveDelays@delay:
  1735                           	opt stack 0
  1736  000066                     CountfOptsLength@macCommandLength:
  1737                           	opt stack 0
  1738  000066                     TMR1_ReadTimer@readValHigh:
  1739                           	opt stack 0
  1740  000066                     printf@c:
  1741                           	opt stack 0
  1742  000066                     ___abdiv@dividend:
  1743                           	opt stack 0
  1744  000066                     memcpy@tmp:
  1745                           	opt stack 0
  1746  000066                     AESEncode@block:
  1747                           	opt stack 0
  1748  000066                     ___awdiv@quotient:
  1749                           	opt stack 0
  1750  000066                     memset@p:
  1751                           	opt stack 0
  1752                           
  1753                           ; 2 bytes @ 0x6
  1754  000066                     	ds	1
  1755  000067                     ?_ExecuteRxTimingSetup:
  1756                           	opt stack 0
  1757  000067                     FillSubKey@i:
  1758                           	opt stack 0
  1759  000067                     RADIO_WriteMode@currentModulation:
  1760                           	opt stack 0
  1761  000067                     RADIO_DIO4@dioMapping:
  1762                           	opt stack 0
  1763  000067                     EnableChannels1@channelIndexMin:
  1764                           	opt stack 0
  1765  000067                     CountfOptsLength@i:
  1766                           	opt stack 0
  1767  000067                     TMR1_ReadTimer@readValLow:
  1768                           	opt stack 0
  1769  000067                     ExecuteRxTimingSetup@ptr:
  1770                           	opt stack 0
  1771  000067                     memcpy@d:
  1772                           	opt stack 0
  1773                           
  1774                           ; 2 bytes @ 0x7
  1775  000067                     	ds	1
  1776  000068                     ??_LORAWAN_GetMaxPayloadSize:
  1777  000068                     ?_TMR_SwapTimer:
  1778                           	opt stack 0
  1779  000068                     ?_TMR_GetDeltaTime:
  1780                           	opt stack 0
  1781  000068                     RADIO_WriteMode@dioMapping:
  1782                           	opt stack 0
  1783  000068                     EnableChannels1@channelIndexMax:
  1784                           	opt stack 0
  1785  000068                     ___llmod@counter:
  1786                           	opt stack 0
  1787  000068                     TMR_SwapTimer@timerVal:
  1788                           	opt stack 0
  1789  000068                     AESEncode@key:
  1790                           	opt stack 0
  1791  000068                     ___lldiv@quotient:
  1792                           	opt stack 0
  1793                           
  1794                           ; 4 bytes @ 0x8
  1795  000068                     	ds	1
  1796  000069                     ??_EnableChannels1:
  1797  000069                     RADIO_WriteMode@currentMode:
  1798                           	opt stack 0
  1799  000069                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1800                           	opt stack 0
  1801  000069                     ExecuteRxTimingSetup@delay:
  1802                           	opt stack 0
  1803  000069                     memcpy@s:
  1804                           	opt stack 0
  1805                           
  1806                           ; 2 bytes @ 0x9
  1807  000069                     	ds	1
  1808  00006A                     ??_AESEncode:
  1809  00006A                     RADIO_WriteMode@newMode:
  1810                           	opt stack 0
  1811  00006A                     LORAWAN_GetMaxPayloadSize@result:
  1812                           	opt stack 0
  1813  00006A                     TMR_OverrideRemaining@ticksRemaining:
  1814                           	opt stack 0
  1815                           
  1816                           ; 4 bytes @ 0xA
  1817  00006A                     	ds	1
  1818  00006B                     ?_ExtractMic:
  1819                           	opt stack 0
  1820  00006B                     RADIO_WriteMode@opMode:
  1821                           	opt stack 0
  1822  00006B                     InitDefault868Channels@i:
  1823                           	opt stack 0
  1824  00006B                     InitDefault433Channels@i:
  1825                           	opt stack 0
  1826  00006B                     EnableChannels1@i:
  1827                           	opt stack 0
  1828  00006B                     RADIO_SetFSKSyncWord@syncWord:
  1829                           	opt stack 0
  1830  00006B                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1831                           	opt stack 0
  1832  00006B                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1833                           	opt stack 0
  1834  00006B                     PrepareSessionKeys@sessionKey:
  1835                           	opt stack 0
  1836  00006B                     ExtractMic@buffer:
  1837                           	opt stack 0
  1838  00006B                     AssembleEncryptionBlock@frameCounter:
  1839                           	opt stack 0
  1840                           
  1841                           ; 4 bytes @ 0xB
  1842  00006B                     	ds	1
  1843  00006C                     ??_TMR_GetDeltaTime:
  1844  00006C                     ?_RADIO_ReadRandom:
  1845                           	opt stack 0
  1846  00006C                     ___lldiv@counter:
  1847                           	opt stack 0
  1848  00006C                     EnableChannels@channelMask:
  1849                           	opt stack 0
  1850                           
  1851                           ; 2 bytes @ 0xC
  1852  00006C                     	ds	1
  1853  00006D                     RADIO_SetFSKSyncWord@syncWordLen:
  1854                           	opt stack 0
  1855  00006D                     IncludeMacCommandsResponse@i:
  1856                           	opt stack 0
  1857  00006D                     ExtractMic@bufferLength:
  1858                           	opt stack 0
  1859  00006D                     PrepareSessionKeys@appNonce:
  1860                           	opt stack 0
  1861  00006D                     SwTimerSetTimeout@timeout:
  1862                           	opt stack 0
  1863  00006D                     RADIO_WriteFrequency@frequency:
  1864                           	opt stack 0
  1865  00006D                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1866                           	opt stack 0
  1867  00006D                     RADIO_WriteFSKBitRate@bitRate:
  1868                           	opt stack 0
  1869                           
  1870                           ; 4 bytes @ 0xD
  1871  00006D                     	ds	1
  1872  00006E                     ??_TMR_OverrideRemaining:
  1873  00006E                     ??_RADIO_ReadRandom:
  1874  00006E                     EnableChannels@channelMaskCntl:
  1875                           	opt stack 0
  1876  00006E                     IncludeMacCommandsResponse@bufferIndex:
  1877                           	opt stack 0
  1878  00006E                     ConfigureRadio@freq:
  1879                           	opt stack 0
  1880                           
  1881                           ; 4 bytes @ 0xE
  1882  00006E                     	ds	1
  1883  00006F                     ??_ExtractMic:
  1884  00006F                     ?_ExecuteLinkAdr:
  1885                           	opt stack 0
  1886  00006F                     AssembleEncryptionBlock@blockId:
  1887                           	opt stack 0
  1888  00006F                     RADIO_ReadRandom@retVal:
  1889                           	opt stack 0
  1890  00006F                     ExecuteLinkAdr@ptr:
  1891                           	opt stack 0
  1892  00006F                     PrepareSessionKeys@networkId:
  1893                           	opt stack 0
  1894                           
  1895                           ; 2 bytes @ 0xF
  1896  00006F                     	ds	1
  1897  000070                     AssembleEncryptionBlock@firstByte:
  1898                           	opt stack 0
  1899  000070                     TMR_OverrideRemaining@tmrVal:
  1900                           	opt stack 0
  1901                           
  1902                           ; 2 bytes @ 0x10
  1903  000070                     	ds	1
  1904  000071                     ??_ExecuteLinkAdr:
  1905  000071                     ??_SwTimerSetTimeout:
  1906  000071                     RADIO_ReadRandom@i:
  1907                           	opt stack 0
  1908  000071                     PrepareSessionKeys@index:
  1909                           	opt stack 0
  1910  000071                     AssembleEncryptionBlock@multicastStatus:
  1911                           	opt stack 0
  1912  000071                     RADIO_WriteFrequency@num_mod:
  1913                           	opt stack 0
  1914  000071                     RADIO_WriteFSKFrequencyDeviation@num:
  1915                           	opt stack 0
  1916  000071                     RADIO_WriteFSKBitRate@num:
  1917                           	opt stack 0
  1918                           
  1919                           ; 4 bytes @ 0x11
  1920  000071                     	ds	1
  1921  000072                     ConfigureRadio@dataRate:
  1922                           	opt stack 0
  1923  000072                     AssembleEncryptionBlock@dir:
  1924                           	opt stack 0
  1925  000072                     TMR_OverrideRemaining@oldReloadVal:
  1926                           	opt stack 0
  1927  000072                     _AESEncode$509:
  1928                           	opt stack 0
  1929  000072                     srand@x:
  1930                           	opt stack 0
  1931                           
  1932                           ; 2 bytes @ 0x12
  1933  000072                     	ds	1
  1934  000073                     AssembleEncryptionBlock@bufferIndex:
  1935                           	opt stack 0
  1936  000073                     ExecuteLinkAdr@channelMask:
  1937                           	opt stack 0
  1938  000073                     ConfigureRadioTx@freq:
  1939                           	opt stack 0
  1940  000073                     ConfigureRadioRx@freq:
  1941                           	opt stack 0
  1942  000073                     ExtractMic@mic:
  1943                           	opt stack 0
  1944                           
  1945                           ; 4 bytes @ 0x13
  1946  000073                     	ds	1
  1947  000074                     _AESEncode$510:
  1948                           	opt stack 0
  1949                           
  1950                           ; 2 bytes @ 0x14
  1951  000074                     	ds	1
  1952  000075                     SwTimerSetTimeout@timerId:
  1953                           	opt stack 0
  1954  000075                     ExecuteLinkAdr@txPower:
  1955                           	opt stack 0
  1956  000075                     RADIO_WriteFrequency@num:
  1957                           	opt stack 0
  1958                           
  1959                           ; 4 bytes @ 0x15
  1960  000075                     	ds	1
  1961  000076                     _AESEncode$511:
  1962                           	opt stack 0
  1963  000076                     ExecuteLinkAdr@redundancy:
  1964                           	opt stack 0
  1965                           
  1966                           ; 2 bytes @ 0x16
  1967  000076                     	ds	1
  1968  000077                     ConfigureRadioTx@dataRate:
  1969                           	opt stack 0
  1970  000077                     ConfigureRadioRx@dataRate:
  1971                           	opt stack 0
  1972                           
  1973                           ; 1 bytes @ 0x17
  1974  000077                     	ds	1
  1975  000078                     AESEncode@aux:
  1976                           	opt stack 0
  1977  000078                     ExecuteLinkAdr@dataRate:
  1978                           	opt stack 0
  1979  000078                     ConfigureRadioTx@txPower:
  1980                           	opt stack 0
  1981                           
  1982                           ; 1 bytes @ 0x18
  1983  000078                     	ds	1
  1984  000079                     AESEncode@aux2:
  1985                           	opt stack 0
  1986  000079                     RADIO_FHSSChangeChannel@irqFlags:
  1987                           	opt stack 0
  1988  000079                     RADIO_Init@radioBuffer:
  1989                           	opt stack 0
  1990                           
  1991                           ; 2 bytes @ 0x19
  1992  000079                     	ds	1
  1993  00007A                     ??_RADIO_DIO2:
  1994  00007A                     AESEncode@aux1:
  1995                           	opt stack 0
  1996                           
  1997                           ; 1 bytes @ 0x1A
  1998  00007A                     	ds	1
  1999  00007B                     AESEncode@aux3:
  2000                           	opt stack 0
  2001  00007B                     RADIO_DIO2@opMode:
  2002                           	opt stack 0
  2003  00007B                     RADIO_Init@frequency:
  2004                           	opt stack 0
  2005                           
  2006                           ; 4 bytes @ 0x1B
  2007  00007B                     	ds	1
  2008  00007C                     AESEncode@i:
  2009                           	opt stack 0
  2010  00007C                     RADIO_DIO2@dioMapping:
  2011                           	opt stack 0
  2012                           
  2013                           ; 1 bytes @ 0x1C
  2014  00007C                     	ds	1
  2015  00007D                     AESEncodeLoRa@block:
  2016                           	opt stack 0
  2017                           
  2018                           ; 2 bytes @ 0x1D
  2019  00007D                     	ds	2
  2020  00007F                     ??_RADIO_Init:
  2021  00007F                     AESEncodeLoRa@key:
  2022                           	opt stack 0
  2023                           
  2024                           ; 2 bytes @ 0x1F
  2025  00007F                     	ds	1
  2026  000080                     ?_SwTimersInterrupt:
  2027                           	opt stack 0
  2028                           
  2029                           ; 4 bytes @ 0x20
  2030  000080                     	ds	1
  2031  000081                     AESEncodeLoRa@useKey:
  2032                           	opt stack 0
  2033                           
  2034                           ; 16 bytes @ 0x21
  2035  000081                     	ds	3
  2036  000084                     
  2037                           ; 1 bytes @ 0x24
  2038  000084                     	ds	4
  2039  000088                     SwTimersInterrupt@timeElapsed:
  2040                           	opt stack 0
  2041                           
  2042                           ; 4 bytes @ 0x28
  2043  000088                     	ds	4
  2044  00008C                     SwTimersInterrupt@ticksToNextTimerEvent:
  2045                           	opt stack 0
  2046                           
  2047                           ; 4 bytes @ 0x2C
  2048  00008C                     	ds	4
  2049  000090                     SwTimersInterrupt@i:
  2050                           	opt stack 0
  2051                           
  2052                           ; 1 bytes @ 0x30
  2053  000090                     	ds	1
  2054  000091                     ?_SwTimerReadValue:
  2055                           	opt stack 0
  2056  000091                     GenerateSubkey@key:
  2057                           	opt stack 0
  2058  000091                     ComputeSessionKeys@joinAcceptBuffer:
  2059                           	opt stack 0
  2060  000091                     EncryptFRMPayload@buffer:
  2061                           	opt stack 0
  2062                           
  2063                           ; 2 bytes @ 0x31
  2064  000091                     	ds	2
  2065  000093                     EncryptFRMPayload@bufferLength:
  2066                           	opt stack 0
  2067  000093                     GenerateSubkey@k1:
  2068                           	opt stack 0
  2069                           
  2070                           ; 2 bytes @ 0x33
  2071  000093                     	ds	1
  2072  000094                     EncryptFRMPayload@dir:
  2073                           	opt stack 0
  2074                           
  2075                           ; 1 bytes @ 0x34
  2076  000094                     	ds	1
  2077  000095                     GenerateSubkey@k2:
  2078                           	opt stack 0
  2079  000095                     SwTimerReadValue@ticksCount:
  2080                           	opt stack 0
  2081  000095                     SwTimerStart@ticksRemaining:
  2082                           	opt stack 0
  2083  000095                     EncryptFRMPayload@frameCounter:
  2084                           	opt stack 0
  2085                           
  2086                           ; 4 bytes @ 0x35
  2087  000095                     	ds	2
  2088  000097                     ??_GenerateSubkey:
  2089                           
  2090                           ; 1 bytes @ 0x37
  2091  000097                     	ds	1
  2092  000098                     GenerateSubkey@const_Rb:
  2093                           	opt stack 0
  2094                           
  2095                           ; 16 bytes @ 0x38
  2096  000098                     	ds	1
  2097  000099                     SwTimerReadValue@timerId:
  2098                           	opt stack 0
  2099  000099                     SwTimerStart@timerId:
  2100                           	opt stack 0
  2101  000099                     EncryptFRMPayload@key:
  2102                           	opt stack 0
  2103                           
  2104                           ; 2 bytes @ 0x39
  2105  000099                     	ds	1
  2106  00009A                     ??_UpdateRetransmissionAckTimeoutState:
  2107  00009A                     ??_StartReTxTimer:
  2108  00009A                     ?___lmul:
  2109                           	opt stack 0
  2110  00009A                     ___lmul@multiplier:
  2111                           	opt stack 0
  2112                           
  2113                           ; 4 bytes @ 0x3A
  2114  00009A                     	ds	1
  2115  00009B                     EncryptFRMPayload@macBufferIndex:
  2116                           	opt stack 0
  2117                           
  2118                           ; 1 bytes @ 0x3B
  2119  00009B                     	ds	1
  2120  00009C                     EncryptFRMPayload@bufferToBeEncrypted:
  2121                           	opt stack 0
  2122                           
  2123                           ; 2 bytes @ 0x3C
  2124  00009C                     	ds	2
  2125  00009E                     EncryptFRMPayload@multicastStatus:
  2126                           	opt stack 0
  2127  00009E                     StartReTxTimer@minim:
  2128                           	opt stack 0
  2129  00009E                     ___lmul@multiplicand:
  2130                           	opt stack 0
  2131                           
  2132                           ; 4 bytes @ 0x3E
  2133  00009E                     	ds	1
  2134  00009F                     ??_EncryptFRMPayload:
  2135                           
  2136                           ; 1 bytes @ 0x3F
  2137  00009F                     	ds	3
  2138  0000A2                     StartReTxTimer@i:
  2139                           	opt stack 0
  2140  0000A2                     ___lmul@product:
  2141                           	opt stack 0
  2142                           
  2143                           ; 4 bytes @ 0x42
  2144  0000A2                     	ds	4
  2145  0000A6                     ?_ExecuteNewChannel:
  2146                           	opt stack 0
  2147  0000A6                     ?_ExecuteRxParamSetupReq:
  2148                           	opt stack 0
  2149  0000A6                     ?_rand:
  2150                           	opt stack 0
  2151  0000A6                     EncryptFRMPayload@k:
  2152                           	opt stack 0
  2153  0000A6                     RADIO_WriteConfiguration@symbolTimeout:
  2154                           	opt stack 0
  2155  0000A6                     ExecuteNewChannel@ptr:
  2156                           	opt stack 0
  2157  0000A6                     ExecuteRxParamSetupReq@ptr:
  2158                           	opt stack 0
  2159  0000A6                     UpdateCfList@joinAccept:
  2160                           	opt stack 0
  2161  0000A6                     LORAWAN_LinkCheckConfigure@period:
  2162                           	opt stack 0
  2163                           
  2164                           ; 2 bytes @ 0x46
  2165  0000A6                     	ds	1
  2166  0000A7                     EncryptFRMPayload@i:
  2167                           	opt stack 0
  2168                           
  2169                           ; 1 bytes @ 0x47
  2170  0000A7                     	ds	1
  2171  0000A8                     ??_LORAWAN_LinkCheckConfigure:
  2172  0000A8                     ??_ExecuteNewChannel:
  2173  0000A8                     ??_ExecuteRxParamSetupReq:
  2174  0000A8                     ??_RADIO_WriteConfiguration:
  2175  0000A8                     ?___lwmod:
  2176                           	opt stack 0
  2177  0000A8                     UpdateCfList@bufferLength:
  2178                           	opt stack 0
  2179  0000A8                     EncryptFRMPayload@j:
  2180                           	opt stack 0
  2181  0000A8                     ___lwmod@dividend:
  2182                           	opt stack 0
  2183  0000A8                     GenerateSubkey@l:
  2184                           	opt stack 0
  2185                           
  2186                           ; 16 bytes @ 0x48
  2187  0000A8                     	ds	1
  2188  0000A9                     UpdateCfList@frequency:
  2189                           	opt stack 0
  2190                           
  2191                           ; 4 bytes @ 0x49
  2192  0000A9                     	ds	1
  2193  0000AA                     ExecuteNewChannel@drRange:
  2194                           	opt stack 0
  2195  0000AA                     ___lwmod@divisor:
  2196                           	opt stack 0
  2197  0000AA                     ExecuteRxParamSetupReq@frequency:
  2198                           	opt stack 0
  2199                           
  2200                           ; 4 bytes @ 0x4A
  2201  0000AA                     	ds	1
  2202  0000AB                     RADIO_WriteConfiguration@i:
  2203                           	opt stack 0
  2204  0000AB                     ExecuteNewChannel@frequency:
  2205                           	opt stack 0
  2206                           
  2207                           ; 4 bytes @ 0x4B
  2208  0000AB                     	ds	1
  2209  0000AC                     ___lwmod@counter:
  2210                           	opt stack 0
  2211  0000AC                     RADIO_WriteConfiguration@tempValue:
  2212                           	opt stack 0
  2213  0000AC                     _LORAWAN_LinkCheckConfigure$2492:
  2214                           	opt stack 0
  2215                           
  2216                           ; 4 bytes @ 0x4C
  2217  0000AC                     	ds	1
  2218  0000AD                     ?_Random:
  2219                           	opt stack 0
  2220  0000AD                     UpdateCfList@channelIndex:
  2221                           	opt stack 0
  2222  0000AD                     Random@max:
  2223                           	opt stack 0
  2224                           
  2225                           ; 2 bytes @ 0x4D
  2226  0000AD                     	ds	1
  2227  0000AE                     ExecuteRxParamSetupReq@dlSettings:
  2228                           	opt stack 0
  2229  0000AE                     UpdateCfList@i:
  2230                           	opt stack 0
  2231                           
  2232                           ; 1 bytes @ 0x4E
  2233  0000AE                     	ds	1
  2234  0000AF                     ExecuteNewChannel@channelIndex:
  2235                           	opt stack 0
  2236  0000AF                     SearchAvailableChannel@transmissionType:
  2237                           	opt stack 0
  2238                           
  2239                           ; 1 bytes @ 0x4F
  2240  0000AF                     	ds	1
  2241  0000B0                     ?_MacExecuteCommands:
  2242                           	opt stack 0
  2243  0000B0                     RADIO_WriteConfiguration@regValue:
  2244                           	opt stack 0
  2245  0000B0                     LORAWAN_LinkCheckConfigure@iCtr:
  2246                           	opt stack 0
  2247  0000B0                     SearchAvailableChannel@channelIndex:
  2248                           	opt stack 0
  2249  0000B0                     MacExecuteCommands@buffer:
  2250                           	opt stack 0
  2251                           
  2252                           ; 2 bytes @ 0x50
  2253  0000B0                     	ds	1
  2254  0000B1                     ?_RADIO_Transmit:
  2255                           	opt stack 0
  2256  0000B1                     ?_RADIO_ReceiveStart:
  2257                           	opt stack 0
  2258  0000B1                     LORAWAN_Reset@ismBandNew:
  2259                           	opt stack 0
  2260  0000B1                     RADIO_Transmit@buffer:
  2261                           	opt stack 0
  2262  0000B1                     RADIO_ReceiveStart@rxWindowSize:
  2263                           	opt stack 0
  2264                           
  2265                           ; 2 bytes @ 0x51
  2266  0000B1                     	ds	1
  2267  0000B2                     ??_SearchAvailableChannel:
  2268  0000B2                     MacExecuteCommands@fOptsLen:
  2269                           	opt stack 0
  2270  0000B2                     LORAWAN_Init@RxPayload:
  2271                           	opt stack 0
  2272                           
  2273                           ; 2 bytes @ 0x52
  2274  0000B2                     	ds	1
  2275  0000B3                     ??_MacExecuteCommands:
  2276  0000B3                     ??_RADIO_ReceiveStart:
  2277  0000B3                     RADIO_Transmit@bufferLen:
  2278                           	opt stack 0
  2279                           
  2280                           ; 1 bytes @ 0x53
  2281  0000B3                     	ds	1
  2282  0000B4                     ??_RADIO_Transmit:
  2283  0000B4                     LORAWAN_Init@RxJoinResponse:
  2284                           	opt stack 0
  2285                           
  2286                           ; 2 bytes @ 0x54
  2287  0000B4                     	ds	1
  2288  0000B5                     MacExecuteCommands@done:
  2289                           	opt stack 0
  2290                           
  2291                           ; 1 bytes @ 0x55
  2292  0000B5                     	ds	1
  2293  0000B6                     SearchAvailableChannel@randomNumberCopy:
  2294                           	opt stack 0
  2295  0000B6                     MacExecuteCommands@ptr:
  2296                           	opt stack 0
  2297                           
  2298                           ; 2 bytes @ 0x56
  2299  0000B6                     	ds	1
  2300  0000B7                     SearchAvailableChannel@result:
  2301                           	opt stack 0
  2302  0000B7                     _RADIO_ReceiveStart$777:
  2303                           	opt stack 0
  2304                           
  2305                           ; 4 bytes @ 0x57
  2306  0000B7                     	ds	1
  2307  0000B8                     GenerateSubkey@i:
  2308                           	opt stack 0
  2309  0000B8                     SearchAvailableChannel@maxChannels:
  2310                           	opt stack 0
  2311  0000B8                     _RADIO_Transmit$772:
  2312                           	opt stack 0
  2313                           
  2314                           ; 4 bytes @ 0x58
  2315  0000B8                     	ds	1
  2316  0000B9                     SearchAvailableChannel@randomNumber:
  2317                           	opt stack 0
  2318  0000B9                     AESCmac@key:
  2319                           	opt stack 0
  2320                           
  2321                           ; 2 bytes @ 0x59
  2322  0000B9                     	ds	1
  2323  0000BA                     SearchAvailableChannel@i:
  2324                           	opt stack 0
  2325                           
  2326                           ; 1 bytes @ 0x5A
  2327  0000BA                     	ds	1
  2328  0000BB                     SelectChannelForTransmission@transmissionType:
  2329                           	opt stack 0
  2330  0000BB                     AESCmac@output:
  2331                           	opt stack 0
  2332  0000BB                     LORAWAN_TxDone@timeOnAir:
  2333                           	opt stack 0
  2334                           
  2335                           ; 2 bytes @ 0x5B
  2336  0000BB                     	ds	1
  2337  0000BC                     SelectChannelForTransmission@result:
  2338                           	opt stack 0
  2339  0000BC                     _RADIO_Transmit$774:
  2340                           	opt stack 0
  2341                           
  2342                           ; 4 bytes @ 0x5C
  2343  0000BC                     	ds	1
  2344  0000BD                     ??_LORAWAN_TxDone:
  2345  0000BD                     SelectChannelForTransmission@channelIndex:
  2346                           	opt stack 0
  2347  0000BD                     AESCmac@input:
  2348                           	opt stack 0
  2349                           
  2350                           ; 2 bytes @ 0x5D
  2351  0000BD                     	ds	2
  2352  0000BF                     AESCmac@size:
  2353                           	opt stack 0
  2354                           
  2355                           ; 1 bytes @ 0x5F
  2356  0000BF                     	ds	1
  2357  0000C0                     ??_AESCmac:
  2358  0000C0                     RADIO_Transmit@regValue:
  2359                           	opt stack 0
  2360                           
  2361                           ; 1 bytes @ 0x60
  2362  0000C0                     	ds	1
  2363  0000C1                     RADIO_Transmit@i:
  2364                           	opt stack 0
  2365                           
  2366                           ; 1 bytes @ 0x61
  2367  0000C1                     	ds	1
  2368  0000C2                     ??_LORAWAN_RxTimeout:
  2369                           
  2370                           ; 1 bytes @ 0x62
  2371  0000C2                     	ds	4
  2372  0000C6                     LORAWAN_RxTimeout@minim:
  2373                           	opt stack 0
  2374                           
  2375                           ; 4 bytes @ 0x66
  2376  0000C6                     	ds	1
  2377  0000C7                     ?_ComputeMic:
  2378                           	opt stack 0
  2379  0000C7                     AssemblePacket@port:
  2380                           	opt stack 0
  2381  0000C7                     ComputeMic@key:
  2382                           	opt stack 0
  2383                           
  2384                           ; 2 bytes @ 0x67
  2385  0000C7                     	ds	1
  2386  0000C8                     AssemblePacket@buffer:
  2387                           	opt stack 0
  2388                           
  2389                           ; 2 bytes @ 0x68
  2390  0000C8                     	ds	1
  2391  0000C9                     ComputeMic@buffer:
  2392                           	opt stack 0
  2393  0000C9                     _LORAWAN_TxDone$1666:
  2394                           	opt stack 0
  2395                           
  2396                           ; 4 bytes @ 0x69
  2397  0000C9                     	ds	1
  2398  0000CA                     LORAWAN_RxTimeout@i:
  2399                           	opt stack 0
  2400  0000CA                     AssemblePacket@bufferLength:
  2401                           	opt stack 0
  2402                           
  2403                           ; 2 bytes @ 0x6A
  2404  0000CA                     	ds	1
  2405  0000CB                     ??_RADIO_DIO1:
  2406  0000CB                     ComputeMic@bufferLength:
  2407                           	opt stack 0
  2408                           
  2409                           ; 1 bytes @ 0x6B
  2410  0000CB                     	ds	1
  2411  0000CC                     ??_AssemblePacket:
  2412  0000CC                     RADIO_DIO1@dioMapping:
  2413                           	opt stack 0
  2414  0000CC                     ComputeMic@mic:
  2415                           	opt stack 0
  2416                           
  2417                           ; 4 bytes @ 0x6C
  2418  0000CC                     	ds	1
  2419  0000CD                     _LORAWAN_TxDone$1667:
  2420                           	opt stack 0
  2421                           
  2422                           ; 4 bytes @ 0x6D
  2423  0000CD                     	ds	1
  2424  0000CE                     AssemblePacket@confirmed:
  2425                           	opt stack 0
  2426                           
  2427                           ; 1 bytes @ 0x6E
  2428  0000CE                     	ds	1
  2429  0000CF                     AssemblePacket@mhdr:
  2430                           	opt stack 0
  2431                           
  2432                           ; 1 bytes @ 0x6F
  2433  0000CF                     	ds	1
  2434  0000D0                     ??_PrepareJoinRequestFrame:
  2435  0000D0                     AssemblePacket@fCtrl:
  2436                           	opt stack 0
  2437                           
  2438                           ; 1 bytes @ 0x70
  2439  0000D0                     	ds	1
  2440  0000D1                     LORAWAN_TxDone@found:
  2441                           	opt stack 0
  2442  0000D1                     AssemblePacket@macCmdIdx:
  2443                           	opt stack 0
  2444                           
  2445                           ; 1 bytes @ 0x71
  2446  0000D1                     	ds	1
  2447  0000D2                     AssemblePacket@bufferIndex:
  2448                           	opt stack 0
  2449  0000D2                     LORAWAN_TxDone@delta:
  2450                           	opt stack 0
  2451                           
  2452                           ; 4 bytes @ 0x72
  2453  0000D2                     	ds	1
  2454  0000D3                     LORAWAN_Send@port:
  2455                           	opt stack 0
  2456                           
  2457                           ; 1 bytes @ 0x73
  2458  0000D3                     	ds	1
  2459  0000D4                     LORAWAN_Send@buffer:
  2460                           	opt stack 0
  2461  0000D4                     PrepareJoinRequestFrame@mic:
  2462                           	opt stack 0
  2463                           
  2464                           ; 4 bytes @ 0x74
  2465  0000D4                     	ds	2
  2466  0000D6                     LORAWAN_Send@bufferLength:
  2467                           	opt stack 0
  2468  0000D6                     _LORAWAN_TxDone$5688:
  2469                           	opt stack 0
  2470                           
  2471                           ; 4 bytes @ 0x76
  2472  0000D6                     	ds	1
  2473  0000D7                     ??_LORAWAN_Send:
  2474                           
  2475                           ; 1 bytes @ 0x77
  2476  0000D7                     	ds	1
  2477  0000D8                     LORAWAN_Send@result:
  2478                           	opt stack 0
  2479  0000D8                     PrepareJoinRequestFrame@mhdr:
  2480                           	opt stack 0
  2481                           
  2482                           ; 1 bytes @ 0x78
  2483  0000D8                     	ds	1
  2484  0000D9                     LORAWAN_Send@confirmed:
  2485                           	opt stack 0
  2486  0000D9                     PrepareJoinRequestFrame@iCtr:
  2487                           	opt stack 0
  2488                           
  2489                           ; 1 bytes @ 0x79
  2490  0000D9                     	ds	1
  2491  0000DA                     ??_LORAWAN_RxDone:
  2492  0000DA                     ??_SwTimersExecute:
  2493  0000DA                     PrepareJoinRequestFrame@bufferIndex:
  2494                           	opt stack 0
  2495  0000DA                     LORAWAN_TxDone@ticks:
  2496                           	opt stack 0
  2497                           
  2498                           ; 4 bytes @ 0x7A
  2499  0000DA                     	ds	1
  2500  0000DB                     LORAWAN_Join@bufferIndex:
  2501                           	opt stack 0
  2502                           
  2503                           ; 1 bytes @ 0x7B
  2504  0000DB                     	ds	1
  2505  0000DC                     LORAWAN_Join@result:
  2506                           	opt stack 0
  2507                           
  2508                           ; 1 bytes @ 0x7C
  2509  0000DC                     	ds	1
  2510  0000DD                     LORAWAN_Join@activationTypeNew:
  2511                           	opt stack 0
  2512                           
  2513                           ; 1 bytes @ 0x7D
  2514  0000DD                     	ds	1
  2515  0000DE                     SwTimersExecute@i:
  2516                           	opt stack 0
  2517  0000DE                     LORAWAN_TxDone@minim:
  2518                           	opt stack 0
  2519                           
  2520                           ; 4 bytes @ 0x7E
  2521  0000DE                     	ds	1
  2522  0000DF                     LORAWAN_RxDone@fPort:
  2523                           	opt stack 0
  2524                           
  2525                           ; 1 bytes @ 0x7F
  2526  0000DF                     	ds	1
  2527  0000E0                     LORAWAN_RxDone@channelIndex:
  2528                           	opt stack 0
  2529                           
  2530                           ; 1 bytes @ 0x80
  2531  0000E0                     	ds	1
  2532  0000E1                     LORAWAN_RxDone@mhdr:
  2533                           	opt stack 0
  2534                           
  2535                           ; 1 bytes @ 0x81
  2536  0000E1                     	ds	1
  2537  0000E2                     LORAWAN_TxDone@i:
  2538                           	opt stack 0
  2539  0000E2                     LORAWAN_RxDone@extractedMic:
  2540                           	opt stack 0
  2541                           
  2542                           ; 4 bytes @ 0x82
  2543  0000E2                     	ds	1
  2544  0000E3                     ??_RADIO_TxDone:
  2545  0000E3                     ??_RADIO_FSKPacketSent:
  2546                           
  2547                           ; 1 bytes @ 0x83
  2548  0000E3                     	ds	3
  2549  0000E6                     LORAWAN_RxDone@bufferIndex:
  2550                           	opt stack 0
  2551                           
  2552                           ; 1 bytes @ 0x86
  2553  0000E6                     	ds	1
  2554  0000E7                     LORAWAN_RxDone@temp:
  2555                           	opt stack 0
  2556  0000E7                     RADIO_TxDone@timeOnAir:
  2557                           	opt stack 0
  2558  0000E7                     RADIO_FSKPacketSent@timeOnAir:
  2559                           	opt stack 0
  2560                           
  2561                           ; 4 bytes @ 0x87
  2562  0000E7                     	ds	1
  2563  0000E8                     LORAWAN_RxDone@packet:
  2564                           	opt stack 0
  2565                           
  2566                           ; 2 bytes @ 0x88
  2567  0000E8                     	ds	2
  2568  0000EA                     LORAWAN_RxDone@computedMic:
  2569                           	opt stack 0
  2570                           
  2571                           ; 4 bytes @ 0x8A
  2572  0000EA                     	ds	1
  2573  0000EB                     _RADIO_TxDone$789:
  2574                           	opt stack 0
  2575  0000EB                     _RADIO_FSKPacketSent$793:
  2576                           	opt stack 0
  2577                           
  2578                           ; 4 bytes @ 0x8B
  2579  0000EB                     	ds	3
  2580  0000EE                     LORAWAN_RxDone@joinAccept:
  2581                           	opt stack 0
  2582                           
  2583                           ; 2 bytes @ 0x8E
  2584  0000EE                     	ds	1
  2585  0000EF                     RADIO_FSKPacketSent@irqFlags:
  2586                           	opt stack 0
  2587                           
  2588                           ; 1 bytes @ 0x8F
  2589  0000EF                     	ds	1
  2590  0000F0                     LORAWAN_RxDone@frmPayloadLength:
  2591                           	opt stack 0
  2592                           
  2593                           ; 1 bytes @ 0x90
  2594  0000F0                     	ds	1
  2595  0000F1                     LORAWAN_RxDone@hdr:
  2596                           	opt stack 0
  2597                           
  2598                           ; 2 bytes @ 0x91
  2599  0000F1                     	ds	2
  2600  0000F3                     RADIO_RxDone@irqFlags:
  2601                           	opt stack 0
  2602  0000F3                     RADIO_FSKPayloadReady@irqFlags:
  2603                           	opt stack 0
  2604                           
  2605                           ; 1 bytes @ 0x93
  2606  0000F3                     	ds	1
  2607  0000F4                     RADIO_RxDone@i:
  2608                           	opt stack 0
  2609  0000F4                     RADIO_FSKPayloadReady@i:
  2610                           	opt stack 0
  2611                           
  2612                           ; 1 bytes @ 0x94
  2613  0000F4                     	ds	1
  2614  0000F5                     ??_RADIO_DIO0:
  2615                           
  2616                           ; 1 bytes @ 0x95
  2617  0000F5                     	ds	2
  2618  0000F7                     RADIO_DIO0@dioMapping:
  2619                           	opt stack 0
  2620                           
  2621                           ; 1 bytes @ 0x97
  2622  0000F7                     	ds	1
  2623  0000F8                     RADIO_DIO0@opMode:
  2624                           	opt stack 0
  2625                           
  2626                           ; 1 bytes @ 0x98
  2627  0000F8                     	ds	1
  2628  0000F9                     ??_main:
  2629                           
  2630                           ; 1 bytes @ 0x99
  2631  0000F9                     	ds	2
  2632                           tblptru	equ	0xFF8
  2633                           tblptrh	equ	0xFF7
  2634                           tblptrl	equ	0xFF6
  2635                           tablat	equ	0xFF5
  2636                           postinc0	equ	0xFEE
  2637                           wreg	equ	0xFE8
  2638                           postdec2	equ	0xFDD
  2639                           fsr2h	equ	0xFDA
  2640                           fsr2l	equ	0xFD9
  2641                           
  2642                           	psect	cstackCOMRAM
  2643  000001                     __pcstackCOMRAM:
  2644                           	opt stack 0
  2645  000001                     ?i2_TMR1_ReadTimer:
  2646                           	opt stack 0
  2647  000001                     i2TMR1_WriteTimer@timerVal:
  2648                           	opt stack 0
  2649                           
  2650                           ; 2 bytes @ 0x0
  2651  000001                     	ds	2
  2652  000003                     ??i2_TMR1_ReadTimer:
  2653  000003                     
  2654                           ; 1 bytes @ 0x2
  2655  000003                     	ds	2
  2656  000005                     i2TMR1_ReadTimer@readVal:
  2657                           	opt stack 0
  2658                           
  2659                           ; 2 bytes @ 0x4
  2660  000005                     	ds	2
  2661  000007                     i2TMR1_ReadTimer@readValHigh:
  2662                           	opt stack 0
  2663                           
  2664                           ; 1 bytes @ 0x6
  2665  000007                     	ds	1
  2666  000008                     i2TMR1_ReadTimer@readValLow:
  2667                           	opt stack 0
  2668                           
  2669                           ; 1 bytes @ 0x7
  2670  000008                     	ds	1
  2671  000009                     ?i2_TMR_SwapTimer:
  2672                           	opt stack 0
  2673  000009                     ?i2_TMR_GetDeltaTime:
  2674                           	opt stack 0
  2675  000009                     i2TMR_SwapTimer@timerVal:
  2676                           	opt stack 0
  2677                           
  2678                           ; 2 bytes @ 0x8
  2679  000009                     	ds	2
  2680  00000B                     
  2681                           ; 1 bytes @ 0xA
  2682  00000B                     	ds	2
  2683  00000D                     ??i2_TMR_GetDeltaTime:
  2684                           
  2685                           ; 1 bytes @ 0xC
  2686  00000D                     	ds	20
  2687  000021                     ?i2_SwTimersInterrupt:
  2688                           	opt stack 0
  2689                           
  2690                           ; 4 bytes @ 0x20
  2691  000021                     	ds	4
  2692  000025                     
  2693                           ; 1 bytes @ 0x24
  2694  000025                     	ds	4
  2695  000029                     i2SwTimersInterrupt@timeElapsed:
  2696                           	opt stack 0
  2697                           
  2698                           ; 4 bytes @ 0x28
  2699  000029                     	ds	4
  2700  00002D                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  2701                           	opt stack 0
  2702                           
  2703                           ; 4 bytes @ 0x2C
  2704  00002D                     	ds	4
  2705  000031                     i2SwTimersInterrupt@i:
  2706                           	opt stack 0
  2707                           
  2708                           ; 1 bytes @ 0x30
  2709  000031                     	ds	1
  2710  000032                     ??_TMR_ISR_lora:
  2711                           
  2712                           ; 1 bytes @ 0x31
  2713  000032                     	ds	2
  2714  000034                     ??_INTERRUPT_InterruptManager:
  2715                           
  2716                           ; 1 bytes @ 0x33
  2717  000034                     	ds	8
  2718                           tblptru	equ	0xFF8
  2719                           tblptrh	equ	0xFF7
  2720                           tblptrl	equ	0xFF6
  2721                           tablat	equ	0xFF5
  2722                           postinc0	equ	0xFEE
  2723                           wreg	equ	0xFE8
  2724                           postdec2	equ	0xFDD
  2725                           fsr2h	equ	0xFDA
  2726                           fsr2l	equ	0xFD9
  2727                           
  2728 ;;
  2729 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2730 ;;
  2731 ;; *************** function _main *****************
  2732 ;; Defined at:
  2733 ;;		line 76 in file "main.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  i               2    0        unsigned int 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;Total ram usage:        2 bytes
  2752 ;; Hardware stack levels required when called:   19
  2753 ;; This function calls:
  2754 ;;		_LORAWAN_Init
  2755 ;;		_LORAWAN_Join
  2756 ;;		_LORAWAN_Mainloop
  2757 ;;		_LORAWAN_Send
  2758 ;;		_LORAWAN_SetApplicationSessionKey
  2759 ;;		_LORAWAN_SetDeviceAddress
  2760 ;;		_LORAWAN_SetNetworkSessionKey
  2761 ;;		_SYSTEM_Initialize
  2762 ;;		_TMR5_HasOverflowOccured
  2763 ;;		_printf
  2764 ;; This function is called by:
  2765 ;;		Startup code after reset
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text0
  2770  006744                     __ptext0:
  2771                           	opt stack 0
  2772  006744                     _main:
  2773                           	opt stack 12
  2774                           
  2775                           ;main.c: 79: SYSTEM_Initialize();
  2776                           
  2777                           ;incstack = 0
  2778  006744  ECE3  F042         	call	_SYSTEM_Initialize	;wreg free
  2779                           
  2780                           ;main.c: 86: (INTCONbits.GIE = 1);
  2781  006748  8EF2               	bsf	intcon,7,c	;volatile
  2782                           
  2783                           ;main.c: 89: (INTCONbits.PEIE = 1);
  2784  00674A  8CF2               	bsf	intcon,6,c	;volatile
  2785                           
  2786                           ;main.c: 97: printf("\rSYSINIT!");
  2787  00674C  0EEE               	movlw	low STR_1
  2788  00674E  0100               	movlb	0	; () banked
  2789  006750  6F62               	movwf	printf@f& (0+255),b
  2790  006752  0EFF               	movlw	high STR_1
  2791  006754  6F63               	movwf	(printf@f+1)& (0+255),b
  2792  006756  EC6B  F042         	call	_printf	;wreg free
  2793                           
  2794                           ;main.c: 100: LORAWAN_Init(RxData, RxJoinResponse);
  2795  00675A  0EA8               	movlw	low _RxData
  2796  00675C  0100               	movlb	0	; () banked
  2797  00675E  6FB2               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  2798  006760  0E8D               	movlw	high _RxData
  2799  006762  6FB3               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  2800  006764  0EA6               	movlw	low _RxJoinResponse
  2801  006766  6FB4               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  2802  006768  0E8D               	movlw	high _RxJoinResponse
  2803  00676A  6FB5               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  2804  00676C  ECFB  F03C         	call	_LORAWAN_Init	;wreg free
  2805                           
  2806                           ;main.c: 105: LORAWAN_SetNetworkSessionKey(nwkSKey);
  2807  006770  0EB0               	movlw	low _nwkSKey
  2808  006772  0100               	movlb	0	; () banked
  2809  006774  6F6B               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  2810  006776  0E03               	movlw	high _nwkSKey
  2811  006778  6F6C               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  2812  00677A  ECFA  F042         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  2813                           
  2814                           ;main.c: 106: LORAWAN_SetApplicationSessionKey(appSKey);
  2815  00677E  0EA0               	movlw	low _appSKey
  2816  006780  0100               	movlb	0	; () banked
  2817  006782  6F6B               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  2818  006784  0E03               	movlw	high _appSKey
  2819  006786  6F6C               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  2820  006788  EC11  F043         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  2821                           
  2822                           ;main.c: 107: LORAWAN_SetDeviceAddress(devAddr);
  2823  00678C  C1E7  F060         	movff	_devAddr,LORAWAN_SetDeviceAddress@deviceAddressNew
  2824  006790  C1E8  F061         	movff	_devAddr+1,LORAWAN_SetDeviceAddress@deviceAddressNew+1
  2825  006794  C1E9  F062         	movff	_devAddr+2,LORAWAN_SetDeviceAddress@deviceAddressNew+2
  2826  006798  C1EA  F063         	movff	_devAddr+3,LORAWAN_SetDeviceAddress@deviceAddressNew+3
  2827  00679C  EC75  F045         	call	_LORAWAN_SetDeviceAddress	;wreg free
  2828                           
  2829                           ;main.c: 109: LORAWAN_Join(ABP);
  2830  0067A0  0E01               	movlw	1
  2831  0067A2  EC97  F036         	call	_LORAWAN_Join
  2832                           
  2833                           ;main.c: 110: printf("\rABP Joined!");
  2834  0067A6  0EE1               	movlw	low STR_2
  2835  0067A8  0100               	movlb	0	; () banked
  2836  0067AA  6F62               	movwf	printf@f& (0+255),b
  2837  0067AC  0EFF               	movlw	high STR_2
  2838  0067AE  6F63               	movwf	(printf@f+1)& (0+255),b
  2839  0067B0  EC6B  F042         	call	_printf	;wreg free
  2840                           
  2841                           ;main.c: 114: TRISA = 0x00;
  2842  0067B4  0E00               	movlw	0
  2843  0067B6  6E92               	movwf	3986,c	;volatile
  2844                           
  2845                           ;main.c: 118: unsigned int i;
  2846                           ;main.c: 125: OSCCONbits.SCS = 0b11;
  2847  0067B8  0E03               	movlw	3
  2848  0067BA  12D3               	iorwf	4051,f,c	;volatile
  2849                           
  2850                           ;main.c: 126: OSCCONbits.IDLEN = 0;
  2851  0067BC  9ED3               	bcf	4051,7,c	;volatile
  2852  0067BE                     
  2853                           ;main.c: 131: {
  2854                           ;main.c: 139: LORAWAN_Mainloop();
  2855  0067BE  ECC8  F041         	call	_LORAWAN_Mainloop	;wreg free
  2856                           
  2857                           ;main.c: 144: if (TMR5_HasOverflowOccured())
  2858  0067C2  EC3B  F046         	call	_TMR5_HasOverflowOccured	;wreg free
  2859  0067C6  0900               	iorlw	0
  2860  0067C8  B4D8               	btfsc	status,2,c
  2861  0067CA  D011               	goto	l2711
  2862                           
  2863                           ;main.c: 145: {
  2864                           ;main.c: 146: counter ++;
  2865  0067CC  0101               	movlb	1	; () banked
  2866  0067CE  2B1E               	incf	_counter& (0+255),f,b
  2867                           
  2868                           ; BSR set to: 1
  2869                           ;main.c: 151: TMR5IF = 0;
  2870  0067D0  927E               	bcf	3966,1,c	;volatile
  2871                           
  2872                           ; BSR set to: 1
  2873                           ;main.c: 157: LATAbits.LATA0=1;
  2874  0067D2  8089               	bsf	3977,0,c	;volatile
  2875                           
  2876                           ; BSR set to: 1
  2877                           ;main.c: 158: _delay((unsigned long)((2000)*(16000000/4000.0)));
  2878  0067D4  0E29               	movlw	41
  2879  0067D6  0100               	movlb	0	; () banked
  2880  0067D8  6FFA               	movwf	(??_main+1)& (0+255),b
  2881  0067DA  0E96               	movlw	150
  2882  0067DC  6FF9               	movwf	??_main& (0+255),b
  2883  0067DE  0E7F               	movlw	127
  2884  0067E0                     u22067:
  2885  0067E0  2EE8               	decfsz	wreg,f,c
  2886  0067E2  D7FE               	bra	u22067
  2887  0067E4  2FF9               	decfsz	??_main& (0+255),f,b
  2888  0067E6  D7FC               	bra	u22067
  2889  0067E8  2FFA               	decfsz	(??_main+1)& (0+255),f,b
  2890  0067EA  D7FA               	bra	u22067
  2891                           
  2892                           ;main.c: 159: LATAbits.LATA0=0;
  2893  0067EC  9089               	bcf	3977,0,c	;volatile
  2894  0067EE                     l2711:
  2895                           
  2896                           ;main.c: 162: }
  2897                           ;main.c: 164: if (counter == 4)
  2898  0067EE  0E04               	movlw	4
  2899  0067F0  0101               	movlb	1	; () banked
  2900  0067F2  191E               	xorwf	_counter& (0+255),w,b
  2901  0067F4  A4D8               	btfss	status,2,c
  2902  0067F6  D7E3               	goto	l2710
  2903                           
  2904                           ; BSR set to: 1
  2905                           ;main.c: 165: {
  2906                           ;main.c: 173: LORAWAN_Send(UNCNF, 2, "lora1", 5);
  2907  0067F8  0E02               	movlw	2
  2908  0067FA  0100               	movlb	0	; () banked
  2909  0067FC  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
  2910  0067FE  0EF8               	movlw	low STR_3
  2911  006800  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
  2912  006802  0EFF               	movlw	high STR_3
  2913  006804  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  2914  006806  0E05               	movlw	5
  2915  006808  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  2916  00680A  0E00               	movlw	0
  2917  00680C  EC0C  F034         	call	_LORAWAN_Send
  2918                           
  2919                           ;main.c: 175: counter = 0;
  2920  006810  0E00               	movlw	0
  2921  006812  0101               	movlb	1	; () banked
  2922  006814  6F1E               	movwf	_counter& (0+255),b
  2923                           
  2924                           ; BSR set to: 1
  2925                           
  2926                           ; BSR set to: 1
  2927  006816  D7D3               	goto	l2710
  2928  006818                     __end_of_main:
  2929                           	opt stack 0
  2930                           tblptru	equ	0xFF8
  2931                           tblptrh	equ	0xFF7
  2932                           tblptrl	equ	0xFF6
  2933                           tablat	equ	0xFF5
  2934                           intcon	equ	0xFF2
  2935                           postinc0	equ	0xFEE
  2936                           wreg	equ	0xFE8
  2937                           postdec2	equ	0xFDD
  2938                           fsr2h	equ	0xFDA
  2939                           fsr2l	equ	0xFD9
  2940                           status	equ	0xFD8
  2941                           
  2942 ;; *************** function _printf *****************
  2943 ;; Defined at:
  2944 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  2947 ;;		 -> STR_2(13), STR_1(10), 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  tmpval          4    0        struct .
  2950 ;;  cp              3    0        PTR const unsigned char 
  2951 ;;  ap              2    4[BANK0 ] PTR void [1]
  2952 ;;		 -> ?_printf(2), 
  2953 ;;  len             2    0        unsigned int 
  2954 ;;  val             2    0        unsigned int 
  2955 ;;  c               1    6[BANK0 ] char 
  2956 ;;  flag            1    0        unsigned char 
  2957 ;;  prec            1    0        char 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  2    2[BANK0 ] int 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2967 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;Total ram usage:        5 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    9
  2974 ;; This function calls:
  2975 ;;		_putch
  2976 ;; This function is called by:
  2977 ;;		_main
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           	psect	text1
  2982  0084D6                     __ptext1:
  2983                           	opt stack 0
  2984  0084D6                     _printf:
  2985                           	opt stack 21
  2986                           
  2987                           ;doprnt.c: 466: va_list ap;
  2988                           ;doprnt.c: 499: signed char c;
  2989                           ;doprnt.c: 506: signed char prec;
  2990                           ;doprnt.c: 508: unsigned char flag;
  2991                           ;doprnt.c: 523: union {
  2992                           ;doprnt.c: 524: unsigned long vd;
  2993                           ;doprnt.c: 525: double integ;
  2994                           ;doprnt.c: 526: } tmpval;
  2995                           ;doprnt.c: 528: unsigned int val;
  2996                           ;doprnt.c: 529: unsigned len;
  2997                           ;doprnt.c: 530: const char * cp;
  2998                           ;doprnt.c: 533: *ap = __va_start();
  2999                           
  3000                           ; BSR set to: 1
  3001                           ;incstack = 0
  3002  0084D6  0E64               	movlw	low (?_printf+2)
  3003  0084D8  0100               	movlb	0	; () banked
  3004  0084DA  6F64               	movwf	printf@ap& (0+255),b
  3005  0084DC  0E00               	movlw	high (?_printf+2)
  3006  0084DE  6F65               	movwf	(printf@ap+1)& (0+255),b
  3007                           
  3008                           ;doprnt.c: 536: while(c = *f++) {
  3009  0084E0  D003               	goto	l2722
  3010  0084E2                     
  3011                           ; BSR set to: 0
  3012                           ;doprnt.c: 540: {
  3013                           ;doprnt.c: 541: (putch(c) );
  3014                           
  3015                           ; BSR set to: 0
  3016  0084E2  5166               	movf	printf@c& (0+255),w,b
  3017  0084E4  EC18  F046         	call	_putch
  3018  0084E8                     l2722:
  3019  0084E8  C062  FFF6         	movff	printf@f,tblptrl
  3020  0084EC  C063  FFF7         	movff	printf@f+1,tblptrh
  3021  0084F0  0100               	movlb	0	; () banked
  3022  0084F2  4B62               	infsnz	printf@f& (0+255),f,b
  3023  0084F4  2B63               	incf	(printf@f+1)& (0+255),f,b
  3024  0084F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3025  0084F6  6AF8               	clrf	tblptru,c
  3026  0084F8                     	endif
  3027  0084F8                     	if	0	;tblptru may be non-zero
  3028  0084F8                     	endif
  3029  0084F8  0008               	tblrd		*
  3030  0084FA  CFF5 F066          	movff	tablat,printf@c
  3031  0084FE  5166               	movf	printf@c& (0+255),w,b
  3032  008500  B4D8               	btfsc	status,2,c
  3033  008502  0012               	return	
  3034  008504  D7EE               	goto	l2723
  3035  008506                     __end_of_printf:
  3036                           	opt stack 0
  3037                           tblptru	equ	0xFF8
  3038                           tblptrh	equ	0xFF7
  3039                           tblptrl	equ	0xFF6
  3040                           tablat	equ	0xFF5
  3041                           intcon	equ	0xFF2
  3042                           postinc0	equ	0xFEE
  3043                           wreg	equ	0xFE8
  3044                           postdec2	equ	0xFDD
  3045                           fsr2h	equ	0xFDA
  3046                           fsr2l	equ	0xFD9
  3047                           status	equ	0xFD8
  3048                           
  3049 ;; *************** function _putch *****************
  3050 ;; Defined at:
  3051 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  txData          1    wreg     unsigned char 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  txData          1    1[BANK0 ] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;Total ram usage:        1 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    8
  3072 ;; This function calls:
  3073 ;;		_EUSART1_Write
  3074 ;; This function is called by:
  3075 ;;		_printf
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text2
  3080  008C30                     __ptext2:
  3081                           	opt stack 0
  3082  008C30                     _putch:
  3083                           	opt stack 21
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;incstack = 0
  3087                           ;putch@txData stored from wreg
  3088  008C30  0100               	movlb	0	; () banked
  3089  008C32  6F61               	movwf	putch@txData& (0+255),b
  3090                           
  3091                           ;eusart1.c: 148: EUSART1_Write(txData);
  3092  008C34  0100               	movlb	0	; () banked
  3093  008C36  5161               	movf	putch@txData& (0+255),w,b
  3094  008C38  EC1F  F046         	call	_EUSART1_Write
  3095  008C3C  0012               	return		;funcret
  3096  008C3E                     __end_of_putch:
  3097                           	opt stack 0
  3098                           tblptru	equ	0xFF8
  3099                           tblptrh	equ	0xFF7
  3100                           tblptrl	equ	0xFF6
  3101                           tablat	equ	0xFF5
  3102                           intcon	equ	0xFF2
  3103                           postinc0	equ	0xFEE
  3104                           wreg	equ	0xFE8
  3105                           postdec2	equ	0xFDD
  3106                           fsr2h	equ	0xFDA
  3107                           fsr2l	equ	0xFD9
  3108                           status	equ	0xFD8
  3109                           
  3110 ;; *************** function _EUSART1_Write *****************
  3111 ;; Defined at:
  3112 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  txData          1    wreg     unsigned char 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  txData          1    0[BANK0 ] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;Total ram usage:        1 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    7
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_putch
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text3
  3141  008C3E                     __ptext3:
  3142                           	opt stack 0
  3143  008C3E                     _EUSART1_Write:
  3144                           	opt stack 21
  3145                           
  3146                           ;incstack = 0
  3147                           ;EUSART1_Write@txData stored from wreg
  3148  008C3E  0100               	movlb	0	; () banked
  3149  008C40  6F60               	movwf	EUSART1_Write@txData& (0+255),b
  3150  008C42                     
  3151                           ;eusart1.c: 135: {
  3152                           
  3153                           ;eusart1.c: 134: while(0 == PIR1bits.TX1IF)
  3154  008C42  A89E               	btfss	3998,4,c	;volatile
  3155  008C44  D7FE               	goto	l11933
  3156                           
  3157                           ;eusart1.c: 136: }
  3158                           ;eusart1.c: 138: TXREG1 = txData;
  3159  008C46  C060  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3160  008C4A  0012               	return		;funcret
  3161  008C4C                     __end_of_EUSART1_Write:
  3162                           	opt stack 0
  3163                           tblptru	equ	0xFF8
  3164                           tblptrh	equ	0xFF7
  3165                           tblptrl	equ	0xFF6
  3166                           tablat	equ	0xFF5
  3167                           intcon	equ	0xFF2
  3168                           postinc0	equ	0xFEE
  3169                           wreg	equ	0xFE8
  3170                           postdec2	equ	0xFDD
  3171                           fsr2h	equ	0xFDA
  3172                           fsr2l	equ	0xFD9
  3173                           status	equ	0xFD8
  3174                           
  3175 ;; *************** function _TMR5_HasOverflowOccured *****************
  3176 ;; Defined at:
  3177 ;;		line 151 in file "mcc_generated_files/tmr5.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      unsigned char 
  3184 ;; Registers used:
  3185 ;;		wreg
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;Total ram usage:        0 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    7
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_main
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text4
  3206  008C76                     __ptext4:
  3207                           	opt stack 0
  3208  008C76                     _TMR5_HasOverflowOccured:
  3209                           	opt stack 23
  3210                           
  3211                           ;tmr5.c: 154: return(PIR5bits.TMR5IF);
  3212                           
  3213                           ;incstack = 0
  3214  008C76  A27E               	btfss	3966,1,c	;volatile
  3215  008C78  D002               	goto	u13600
  3216  008C7A  0E01               	movlw	1
  3217  008C7C  0012               	return	
  3218  008C7E                     u13600:
  3219  008C7E  0E00               	movlw	0
  3220  008C80  0012               	return	
  3221  008C82                     __end_of_TMR5_HasOverflowOccured:
  3222                           	opt stack 0
  3223                           tblptru	equ	0xFF8
  3224                           tblptrh	equ	0xFF7
  3225                           tblptrl	equ	0xFF6
  3226                           tablat	equ	0xFF5
  3227                           intcon	equ	0xFF2
  3228                           postinc0	equ	0xFEE
  3229                           wreg	equ	0xFE8
  3230                           postdec2	equ	0xFDD
  3231                           fsr2h	equ	0xFDA
  3232                           fsr2l	equ	0xFD9
  3233                           status	equ	0xFD8
  3234                           
  3235 ;; *************** function _SYSTEM_Initialize *****************
  3236 ;; Defined at:
  3237 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;		None
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;Total ram usage:        0 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:   10
  3258 ;; This function calls:
  3259 ;;		_ADC_Initialize
  3260 ;;		_CCP5_Initialize
  3261 ;;		_EUSART1_Initialize
  3262 ;;		_EXT_INT_Initialize
  3263 ;;		_INTERRUPT_Initialize
  3264 ;;		_LORAWAN_PlatformInit
  3265 ;;		_OSCILLATOR_Initialize
  3266 ;;		_PIN_MANAGER_Initialize
  3267 ;;		_SPI2_Initialize
  3268 ;;		_TMR1_Initialize
  3269 ;;		_TMR5_Initialize
  3270 ;; This function is called by:
  3271 ;;		_main
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text5
  3276  0085C6                     __ptext5:
  3277                           	opt stack 0
  3278  0085C6                     _SYSTEM_Initialize:
  3279                           	opt stack 20
  3280                           
  3281                           ;mcc.c: 53: INTERRUPT_Initialize();
  3282                           
  3283                           ;incstack = 0
  3284  0085C6  ECC6  F046         	call	_INTERRUPT_Initialize	;wreg free
  3285                           
  3286                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  3287  0085CA  ECF4  F03E         	call	_PIN_MANAGER_Initialize	;wreg free
  3288                           
  3289                           ;mcc.c: 55: OSCILLATOR_Initialize();
  3290  0085CE  EC2D  F046         	call	_OSCILLATOR_Initialize	;wreg free
  3291                           
  3292                           ;mcc.c: 56: SPI2_Initialize();
  3293  0085D2  EC26  F046         	call	_SPI2_Initialize	;wreg free
  3294                           
  3295                           ;mcc.c: 57: ADC_Initialize();
  3296  0085D6  EC99  F045         	call	_ADC_Initialize	;wreg free
  3297                           
  3298                           ;mcc.c: 58: CCP5_Initialize();
  3299  0085DA  EC08  F046         	call	_CCP5_Initialize	;wreg free
  3300                           
  3301                           ;mcc.c: 59: TMR5_Initialize();
  3302  0085DE  EC16  F045         	call	_TMR5_Initialize	;wreg free
  3303                           
  3304                           ;mcc.c: 60: EXT_INT_Initialize();
  3305  0085E2  EC55  F043         	call	_EXT_INT_Initialize	;wreg free
  3306                           
  3307                           ;mcc.c: 61: TMR1_Initialize();
  3308  0085E6  EC3F  F043         	call	_TMR1_Initialize	;wreg free
  3309                           
  3310                           ;mcc.c: 62: EUSART1_Initialize();
  3311  0085EA  EC0F  F040         	call	_EUSART1_Initialize	;wreg free
  3312                           
  3313                           ;mcc.c: 63: LORAWAN_PlatformInit();
  3314  0085EE  EC32  F044         	call	_LORAWAN_PlatformInit	;wreg free
  3315  0085F2  0012               	return		;funcret
  3316  0085F4                     __end_of_SYSTEM_Initialize:
  3317                           	opt stack 0
  3318                           tblptru	equ	0xFF8
  3319                           tblptrh	equ	0xFF7
  3320                           tblptrl	equ	0xFF6
  3321                           tablat	equ	0xFF5
  3322                           intcon	equ	0xFF2
  3323                           postinc0	equ	0xFEE
  3324                           wreg	equ	0xFE8
  3325                           postdec2	equ	0xFDD
  3326                           fsr2h	equ	0xFDA
  3327                           fsr2l	equ	0xFD9
  3328                           status	equ	0xFD8
  3329                           
  3330 ;; *************** function _TMR5_Initialize *****************
  3331 ;; Defined at:
  3332 ;;		line 63 in file "mcc_generated_files/tmr5.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;Total ram usage:        0 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    7
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_SYSTEM_Initialize
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text6
  3361  008A2C                     __ptext6:
  3362                           	opt stack 0
  3363  008A2C                     _TMR5_Initialize:
  3364                           	opt stack 22
  3365                           
  3366                           ;tmr5.c: 68: T5GCON = 0x00;
  3367                           
  3368                           ;incstack = 0
  3369  008A2C  0E00               	movlw	0
  3370  008A2E  010F               	movlb	15	; () banked
  3371  008A30  6F4D               	movwf	77,b	;volatile
  3372                           
  3373                           ;tmr5.c: 71: TMR5H = 0x10;
  3374  008A32  0E10               	movlw	16
  3375  008A34  6F50               	movwf	80,b	;volatile
  3376                           
  3377                           ;tmr5.c: 74: TMR5L = 0x00;
  3378  008A36  0E00               	movlw	0
  3379  008A38  6F4F               	movwf	79,b	;volatile
  3380                           
  3381                           ; BSR set to: 15
  3382                           ;tmr5.c: 77: timer5ReloadVal=TMR5;
  3383  008A3A  CF4F F1EB          	movff	3919,_timer5ReloadVal	;volatile
  3384  008A3E  CF50 F1EC          	movff	3920,_timer5ReloadVal+1	;volatile
  3385                           
  3386                           ; BSR set to: 15
  3387                           ;tmr5.c: 80: PIR5bits.TMR5IF = 0;
  3388  008A42  927E               	bcf	3966,1,c	;volatile
  3389                           
  3390                           ;tmr5.c: 83: T5CON = 0xBD;
  3391  008A44  0EBD               	movlw	189
  3392  008A46  6F4E               	movwf	78,b	;volatile
  3393                           
  3394                           ; BSR set to: 15
  3395  008A48  0012               	return		;funcret
  3396  008A4A                     __end_of_TMR5_Initialize:
  3397                           	opt stack 0
  3398                           tblptru	equ	0xFF8
  3399                           tblptrh	equ	0xFF7
  3400                           tblptrl	equ	0xFF6
  3401                           tablat	equ	0xFF5
  3402                           intcon	equ	0xFF2
  3403                           postinc0	equ	0xFEE
  3404                           wreg	equ	0xFE8
  3405                           postdec2	equ	0xFDD
  3406                           fsr2h	equ	0xFDA
  3407                           fsr2l	equ	0xFD9
  3408                           status	equ	0xFD8
  3409                           
  3410 ;; *************** function _TMR1_Initialize *****************
  3411 ;; Defined at:
  3412 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;Total ram usage:        0 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    8
  3433 ;; This function calls:
  3434 ;;		_TMR1_SetInterruptHandler
  3435 ;; This function is called by:
  3436 ;;		_SYSTEM_Initialize
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text7
  3441  00867E                     __ptext7:
  3442                           	opt stack 0
  3443  00867E                     _TMR1_Initialize:
  3444                           	opt stack 21
  3445                           
  3446                           ;tmr1.c: 69: T1GCON = 0x00;
  3447                           
  3448                           ; BSR set to: 15
  3449                           ;incstack = 0
  3450  00867E  0E00               	movlw	0
  3451  008680  6ECC               	movwf	4044,c	;volatile
  3452                           
  3453                           ;tmr1.c: 72: TMR1H = 0x00;
  3454  008682  0E00               	movlw	0
  3455  008684  6ECF               	movwf	4047,c	;volatile
  3456                           
  3457                           ;tmr1.c: 75: TMR1L = 0x00;
  3458  008686  0E00               	movlw	0
  3459  008688  6ECE               	movwf	4046,c	;volatile
  3460                           
  3461                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
  3462  00868A  CFCE F1F3          	movff	4046,_timer1ReloadVal	;volatile
  3463  00868E  CFCF F1F4          	movff	4047,_timer1ReloadVal+1	;volatile
  3464                           
  3465                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  3466  008692  909E               	bcf	3998,0,c	;volatile
  3467                           
  3468                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  3469  008694  809D               	bsf	3997,0,c	;volatile
  3470                           
  3471                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  3472  008696  0EAA               	movlw	low _TMR1_DefaultInterruptHandler
  3473  008698  0100               	movlb	0	; () banked
  3474  00869A  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3475  00869C  0E8D               	movlw	high _TMR1_DefaultInterruptHandler
  3476  00869E  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3477  0086A0  EC47  F046         	call	_TMR1_SetInterruptHandler	;wreg free
  3478                           
  3479                           ;tmr1.c: 90: T1CON = 0x8D;
  3480  0086A4  0E8D               	movlw	141
  3481  0086A6  6ECD               	movwf	4045,c	;volatile
  3482  0086A8  0012               	return		;funcret
  3483  0086AA                     __end_of_TMR1_Initialize:
  3484                           	opt stack 0
  3485                           tblptru	equ	0xFF8
  3486                           tblptrh	equ	0xFF7
  3487                           tblptrl	equ	0xFF6
  3488                           tablat	equ	0xFF5
  3489                           intcon	equ	0xFF2
  3490                           postinc0	equ	0xFEE
  3491                           wreg	equ	0xFE8
  3492                           postdec2	equ	0xFDD
  3493                           fsr2h	equ	0xFDA
  3494                           fsr2l	equ	0xFD9
  3495                           status	equ	0xFD8
  3496                           
  3497 ;; *************** function _SPI2_Initialize *****************
  3498 ;; Defined at:
  3499 ;;		line 65 in file "mcc_generated_files/spi2.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;Total ram usage:        0 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    7
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_SYSTEM_Initialize
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text8
  3528  008C4C                     __ptext8:
  3529                           	opt stack 0
  3530  008C4C                     _SPI2_Initialize:
  3531                           	opt stack 22
  3532                           
  3533                           ;spi2.c: 70: SSP2STAT = 0x40;
  3534                           
  3535                           ;incstack = 0
  3536  008C4C  0E40               	movlw	64
  3537  008C4E  6E6D               	movwf	3949,c	;volatile
  3538                           
  3539                           ;spi2.c: 73: SSP2CON1 = 0x20;
  3540  008C50  0E20               	movlw	32
  3541  008C52  6E6C               	movwf	3948,c	;volatile
  3542                           
  3543                           ;spi2.c: 76: SSP2ADD = 0x00;
  3544  008C54  0E00               	movlw	0
  3545  008C56  6E6E               	movwf	3950,c	;volatile
  3546  008C58  0012               	return		;funcret
  3547  008C5A                     __end_of_SPI2_Initialize:
  3548                           	opt stack 0
  3549                           tblptru	equ	0xFF8
  3550                           tblptrh	equ	0xFF7
  3551                           tblptrl	equ	0xFF6
  3552                           tablat	equ	0xFF5
  3553                           intcon	equ	0xFF2
  3554                           postinc0	equ	0xFEE
  3555                           wreg	equ	0xFE8
  3556                           postdec2	equ	0xFDD
  3557                           fsr2h	equ	0xFDA
  3558                           fsr2l	equ	0xFD9
  3559                           status	equ	0xFD8
  3560                           
  3561 ;; *************** function _PIN_MANAGER_Initialize *****************
  3562 ;; Defined at:
  3563 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;		None
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;Total ram usage:        0 bytes
  3582 ;; Hardware stack levels used:    1
  3583 ;; Hardware stack levels required when called:    8
  3584 ;; This function calls:
  3585 ;;		_IOCB4_SetInterruptHandler
  3586 ;; This function is called by:
  3587 ;;		_SYSTEM_Initialize
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text9
  3592  007DE8                     __ptext9:
  3593                           	opt stack 0
  3594  007DE8                     _PIN_MANAGER_Initialize:
  3595                           	opt stack 21
  3596                           
  3597                           ;pin_manager.c: 62: LATE = 0x00;
  3598                           
  3599                           ;incstack = 0
  3600  007DE8  0E00               	movlw	0
  3601  007DEA  6E8D               	movwf	3981,c	;volatile
  3602                           
  3603                           ;pin_manager.c: 63: LATD = 0x00;
  3604  007DEC  0E00               	movlw	0
  3605  007DEE  6E8C               	movwf	3980,c	;volatile
  3606                           
  3607                           ;pin_manager.c: 64: LATA = 0x00;
  3608  007DF0  0E00               	movlw	0
  3609  007DF2  6E89               	movwf	3977,c	;volatile
  3610                           
  3611                           ;pin_manager.c: 65: LATB = 0x00;
  3612  007DF4  0E00               	movlw	0
  3613  007DF6  6E8A               	movwf	3978,c	;volatile
  3614                           
  3615                           ;pin_manager.c: 66: LATC = 0x00;
  3616  007DF8  0E00               	movlw	0
  3617  007DFA  6E8B               	movwf	3979,c	;volatile
  3618                           
  3619                           ;pin_manager.c: 71: TRISE = 0x07;
  3620  007DFC  0E07               	movlw	7
  3621  007DFE  6E96               	movwf	3990,c	;volatile
  3622                           
  3623                           ;pin_manager.c: 72: TRISA = 0xFF;
  3624  007E00  6892               	setf	3986,c	;volatile
  3625                           
  3626                           ;pin_manager.c: 73: TRISB = 0xFF;
  3627  007E02  6893               	setf	3987,c	;volatile
  3628                           
  3629                           ;pin_manager.c: 74: TRISC = 0xBE;
  3630  007E04  0EBE               	movlw	190
  3631  007E06  6E94               	movwf	3988,c	;volatile
  3632                           
  3633                           ;pin_manager.c: 75: TRISD = 0xE6;
  3634  007E08  0EE6               	movlw	230
  3635  007E0A  6E95               	movwf	3989,c	;volatile
  3636                           
  3637                           ;pin_manager.c: 80: ANSELD = 0xE4;
  3638  007E0C  0EE4               	movlw	228
  3639  007E0E  010F               	movlb	15	; () banked
  3640  007E10  6F3B               	movwf	59,b	;volatile
  3641                           
  3642                           ;pin_manager.c: 81: ANSELC = 0x38;
  3643  007E12  0E38               	movlw	56
  3644  007E14  6F3A               	movwf	58,b	;volatile
  3645                           
  3646                           ;pin_manager.c: 82: ANSELB = 0x28;
  3647  007E16  0E28               	movlw	40
  3648  007E18  6F39               	movwf	57,b	;volatile
  3649                           
  3650                           ;pin_manager.c: 83: ANSELE = 0x07;
  3651  007E1A  0E07               	movlw	7
  3652  007E1C  6F3C               	movwf	60,b	;volatile
  3653                           
  3654                           ;pin_manager.c: 84: ANSELA = 0x2F;
  3655  007E1E  0E2F               	movlw	47
  3656  007E20  6F38               	movwf	56,b	;volatile
  3657                           
  3658                           ;pin_manager.c: 89: WPUB = 0x00;
  3659  007E22  0E00               	movlw	0
  3660  007E24  6E61               	movwf	3937,c	;volatile
  3661                           
  3662                           ; BSR set to: 15
  3663                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
  3664  007E26  8EF1               	bsf	intcon2,7,c	;volatile
  3665                           
  3666                           ; BSR set to: 15
  3667                           ;pin_manager.c: 98: IOCBbits.IOCB4 = 1;
  3668  007E28  8862               	bsf	3938,4,c	;volatile
  3669                           
  3670                           ; BSR set to: 15
  3671                           ;pin_manager.c: 103: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  3672  007E2A  0EAC               	movlw	low _IOCB4_DefaultInterruptHandler
  3673  007E2C  0100               	movlb	0	; () banked
  3674  007E2E  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3675  007E30  0E8D               	movlw	high _IOCB4_DefaultInterruptHandler
  3676  007E32  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3677  007E34  EC4C  F046         	call	_IOCB4_SetInterruptHandler	;wreg free
  3678                           
  3679                           ;pin_manager.c: 106: INTCONbits.RBIE = 1;
  3680  007E38  86F2               	bsf	intcon,3,c	;volatile
  3681  007E3A  0012               	return		;funcret
  3682  007E3C                     __end_of_PIN_MANAGER_Initialize:
  3683                           	opt stack 0
  3684                           tblptru	equ	0xFF8
  3685                           tblptrh	equ	0xFF7
  3686                           tblptrl	equ	0xFF6
  3687                           tablat	equ	0xFF5
  3688                           intcon	equ	0xFF2
  3689                           intcon2	equ	0xFF1
  3690                           postinc0	equ	0xFEE
  3691                           wreg	equ	0xFE8
  3692                           postdec2	equ	0xFDD
  3693                           fsr2h	equ	0xFDA
  3694                           fsr2l	equ	0xFD9
  3695                           status	equ	0xFD8
  3696                           
  3697 ;; *************** function _OSCILLATOR_Initialize *****************
  3698 ;; Defined at:
  3699 ;;		line 66 in file "mcc_generated_files/mcc.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;Total ram usage:        0 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    7
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_SYSTEM_Initialize
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text10
  3728  008C5A                     __ptext10:
  3729                           	opt stack 0
  3730  008C5A                     _OSCILLATOR_Initialize:
  3731                           	opt stack 22
  3732                           
  3733                           ;mcc.c: 69: OSCCON = 0x70;
  3734                           
  3735                           ;incstack = 0
  3736  008C5A  0E70               	movlw	112
  3737  008C5C  6ED3               	movwf	4051,c	;volatile
  3738                           
  3739                           ;mcc.c: 71: OSCCON2 = 0x04;
  3740  008C5E  0E04               	movlw	4
  3741  008C60  6ED2               	movwf	4050,c	;volatile
  3742                           
  3743                           ;mcc.c: 73: OSCTUNE = 0x00;
  3744  008C62  0E00               	movlw	0
  3745  008C64  6E9B               	movwf	3995,c	;volatile
  3746  008C66  0012               	return		;funcret
  3747  008C68                     __end_of_OSCILLATOR_Initialize:
  3748                           	opt stack 0
  3749                           tblptru	equ	0xFF8
  3750                           tblptrh	equ	0xFF7
  3751                           tblptrl	equ	0xFF6
  3752                           tablat	equ	0xFF5
  3753                           intcon	equ	0xFF2
  3754                           intcon2	equ	0xFF1
  3755                           postinc0	equ	0xFEE
  3756                           wreg	equ	0xFE8
  3757                           postdec2	equ	0xFDD
  3758                           fsr2h	equ	0xFDA
  3759                           fsr2l	equ	0xFD9
  3760                           status	equ	0xFD8
  3761                           
  3762 ;; *************** function _LORAWAN_PlatformInit *****************
  3763 ;; Defined at:
  3764 ;;		line 73 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      void 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;Total ram usage:        0 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    9
  3785 ;; This function calls:
  3786 ;;		_DIO0_ISR_Lora_Init
  3787 ;;		_DIO1_ISR_Lora_Init
  3788 ;;		_DIO2_ISR_Lora_Init
  3789 ;;		_DIO3_ISR_Lora_Init
  3790 ;;		_DIO4_ISR_Lora_Init
  3791 ;;		_DIO5_ISR_Lora_Init
  3792 ;;		_SystemTimerInit
  3793 ;;		_TMR_ISR_Lora_Init
  3794 ;; This function is called by:
  3795 ;;		_SYSTEM_Initialize
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text11
  3800  008864                     __ptext11:
  3801                           	opt stack 0
  3802  008864                     _LORAWAN_PlatformInit:
  3803                           	opt stack 20
  3804                           
  3805                           ;lorawan_init.c: 75: TMR_ISR_Lora_Init();
  3806                           
  3807                           ;incstack = 0
  3808  008864  ECE8  F045         	call	_TMR_ISR_Lora_Init	;wreg free
  3809                           
  3810                           ;lorawan_init.c: 76: DIO0_ISR_Lora_Init();
  3811  008868  EC00  F046         	call	_DIO0_ISR_Lora_Init	;wreg free
  3812                           
  3813                           ;lorawan_init.c: 77: DIO1_ISR_Lora_Init();
  3814  00886C  ECF8  F045         	call	_DIO1_ISR_Lora_Init	;wreg free
  3815                           
  3816                           ;lorawan_init.c: 78: DIO2_ISR_Lora_Init();
  3817  008870  ECF0  F045         	call	_DIO2_ISR_Lora_Init	;wreg free
  3818                           
  3819                           ;lorawan_init.c: 79: DIO3_ISR_Lora_Init();
  3820  008874  ECD2  F046         	call	_DIO3_ISR_Lora_Init	;wreg free
  3821                           
  3822                           ;lorawan_init.c: 80: DIO4_ISR_Lora_Init();
  3823  008878  ECD1  F046         	call	_DIO4_ISR_Lora_Init	;wreg free
  3824                           
  3825                           ;lorawan_init.c: 81: DIO5_ISR_Lora_Init();
  3826  00887C  ECD0  F046         	call	_DIO5_ISR_Lora_Init	;wreg free
  3827                           
  3828                           ;lorawan_init.c: 82: SystemTimerInit();
  3829  008880  ECA6  F046         	call	_SystemTimerInit	;wreg free
  3830  008884  0012               	return		;funcret
  3831  008886                     __end_of_LORAWAN_PlatformInit:
  3832                           	opt stack 0
  3833                           tblptru	equ	0xFF8
  3834                           tblptrh	equ	0xFF7
  3835                           tblptrl	equ	0xFF6
  3836                           tablat	equ	0xFF5
  3837                           intcon	equ	0xFF2
  3838                           intcon2	equ	0xFF1
  3839                           postinc0	equ	0xFEE
  3840                           wreg	equ	0xFE8
  3841                           postdec2	equ	0xFDD
  3842                           fsr2h	equ	0xFDA
  3843                           fsr2l	equ	0xFD9
  3844                           status	equ	0xFD8
  3845                           
  3846 ;; *************** function _TMR_ISR_Lora_Init *****************
  3847 ;; Defined at:
  3848 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    8
  3869 ;; This function calls:
  3870 ;;		_TMR1_SetInterruptHandler
  3871 ;; This function is called by:
  3872 ;;		_LORAWAN_PlatformInit
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text12
  3877  008BD0                     __ptext12:
  3878                           	opt stack 0
  3879  008BD0                     _TMR_ISR_Lora_Init:
  3880                           	opt stack 20
  3881                           
  3882                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  3883                           
  3884                           ;incstack = 0
  3885  008BD0  0E92               	movlw	low _TMR_ISR_lora
  3886  008BD2  0100               	movlb	0	; () banked
  3887  008BD4  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3888  008BD6  0E7D               	movlw	high _TMR_ISR_lora
  3889  008BD8  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3890  008BDA  EC47  F046         	call	_TMR1_SetInterruptHandler	;wreg free
  3891  008BDE  0012               	return		;funcret
  3892  008BE0                     __end_of_TMR_ISR_Lora_Init:
  3893                           	opt stack 0
  3894                           tblptru	equ	0xFF8
  3895                           tblptrh	equ	0xFF7
  3896                           tblptrl	equ	0xFF6
  3897                           tablat	equ	0xFF5
  3898                           intcon	equ	0xFF2
  3899                           intcon2	equ	0xFF1
  3900                           postinc0	equ	0xFEE
  3901                           wreg	equ	0xFE8
  3902                           postdec2	equ	0xFDD
  3903                           fsr2h	equ	0xFDA
  3904                           fsr2l	equ	0xFD9
  3905                           status	equ	0xFD8
  3906                           
  3907 ;; *************** function _TMR1_SetInterruptHandler *****************
  3908 ;; Defined at:
  3909 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3912 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3924 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;Total ram usage:        2 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    7
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_TMR_ISR_Lora_Init
  3935 ;;		_TMR1_Initialize
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text13
  3940  008C8E                     __ptext13:
  3941                           	opt stack 0
  3942  008C8E                     _TMR1_SetInterruptHandler:
  3943                           	opt stack 21
  3944                           
  3945                           ;tmr1.c: 180: TMR1_InterruptHandler = InterruptHandler;
  3946                           
  3947                           ;incstack = 0
  3948  008C8E  C060  F1F1         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  3949  008C92  C061  F1F2         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  3950  008C96  0012               	return		;funcret
  3951  008C98                     __end_of_TMR1_SetInterruptHandler:
  3952                           	opt stack 0
  3953                           tblptru	equ	0xFF8
  3954                           tblptrh	equ	0xFF7
  3955                           tblptrl	equ	0xFF6
  3956                           tablat	equ	0xFF5
  3957                           intcon	equ	0xFF2
  3958                           intcon2	equ	0xFF1
  3959                           postinc0	equ	0xFEE
  3960                           wreg	equ	0xFE8
  3961                           postdec2	equ	0xFDD
  3962                           fsr2h	equ	0xFDA
  3963                           fsr2l	equ	0xFD9
  3964                           status	equ	0xFD8
  3965                           
  3966 ;; *************** function _SystemTimerInit *****************
  3967 ;; Defined at:
  3968 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;		None
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		wreg, status,2
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;Total ram usage:        0 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    7
  3989 ;; This function calls:
  3990 ;;		Nothing
  3991 ;; This function is called by:
  3992 ;;		_LORAWAN_PlatformInit
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text14
  3997  008D4C                     __ptext14:
  3998                           	opt stack 0
  3999  008D4C                     _SystemTimerInit:
  4000                           	opt stack 21
  4001                           
  4002                           ;sw_timer.c: 137: allocatedTimers = 0;
  4003                           
  4004                           ;incstack = 0
  4005  008D4C  0E00               	movlw	0
  4006  008D4E  0100               	movlb	0	; () banked
  4007  008D50  6FFB               	movwf	_allocatedTimers& (0+255),b	;volatile
  4008                           
  4009                           ; BSR set to: 0
  4010  008D52  0012               	return		;funcret
  4011  008D54                     __end_of_SystemTimerInit:
  4012                           	opt stack 0
  4013                           tblptru	equ	0xFF8
  4014                           tblptrh	equ	0xFF7
  4015                           tblptrl	equ	0xFF6
  4016                           tablat	equ	0xFF5
  4017                           intcon	equ	0xFF2
  4018                           intcon2	equ	0xFF1
  4019                           postinc0	equ	0xFEE
  4020                           wreg	equ	0xFE8
  4021                           postdec2	equ	0xFDD
  4022                           fsr2h	equ	0xFDA
  4023                           fsr2l	equ	0xFD9
  4024                           status	equ	0xFD8
  4025                           
  4026 ;; *************** function _DIO5_ISR_Lora_Init *****************
  4027 ;; Defined at:
  4028 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		None
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;Total ram usage:        0 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    7
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_LORAWAN_PlatformInit
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text15
  4057  008DA0                     __ptext15:
  4058                           	opt stack 0
  4059  008DA0                     _DIO5_ISR_Lora_Init:
  4060                           	opt stack 21
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;incstack = 0
  4064  008DA0  0012               	return		;funcret
  4065  008DA2                     __end_of_DIO5_ISR_Lora_Init:
  4066                           	opt stack 0
  4067                           tblptru	equ	0xFF8
  4068                           tblptrh	equ	0xFF7
  4069                           tblptrl	equ	0xFF6
  4070                           tablat	equ	0xFF5
  4071                           intcon	equ	0xFF2
  4072                           intcon2	equ	0xFF1
  4073                           postinc0	equ	0xFEE
  4074                           wreg	equ	0xFE8
  4075                           postdec2	equ	0xFDD
  4076                           fsr2h	equ	0xFDA
  4077                           fsr2l	equ	0xFD9
  4078                           status	equ	0xFD8
  4079                           
  4080 ;; *************** function _DIO4_ISR_Lora_Init *****************
  4081 ;; Defined at:
  4082 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		None
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    7
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_LORAWAN_PlatformInit
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text16
  4111  008DA2                     __ptext16:
  4112                           	opt stack 0
  4113  008DA2                     _DIO4_ISR_Lora_Init:
  4114                           	opt stack 21
  4115                           
  4116                           ;incstack = 0
  4117  008DA2  0012               	return		;funcret
  4118  008DA4                     __end_of_DIO4_ISR_Lora_Init:
  4119                           	opt stack 0
  4120                           tblptru	equ	0xFF8
  4121                           tblptrh	equ	0xFF7
  4122                           tblptrl	equ	0xFF6
  4123                           tablat	equ	0xFF5
  4124                           intcon	equ	0xFF2
  4125                           intcon2	equ	0xFF1
  4126                           postinc0	equ	0xFEE
  4127                           wreg	equ	0xFE8
  4128                           postdec2	equ	0xFDD
  4129                           fsr2h	equ	0xFDA
  4130                           fsr2l	equ	0xFD9
  4131                           status	equ	0xFD8
  4132                           
  4133 ;; *************** function _DIO3_ISR_Lora_Init *****************
  4134 ;; Defined at:
  4135 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		None
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    7
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_LORAWAN_PlatformInit
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text17
  4164  008DA4                     __ptext17:
  4165                           	opt stack 0
  4166  008DA4                     _DIO3_ISR_Lora_Init:
  4167                           	opt stack 21
  4168                           
  4169                           ;incstack = 0
  4170  008DA4  0012               	return		;funcret
  4171  008DA6                     __end_of_DIO3_ISR_Lora_Init:
  4172                           	opt stack 0
  4173                           tblptru	equ	0xFF8
  4174                           tblptrh	equ	0xFF7
  4175                           tblptrl	equ	0xFF6
  4176                           tablat	equ	0xFF5
  4177                           intcon	equ	0xFF2
  4178                           intcon2	equ	0xFF1
  4179                           postinc0	equ	0xFEE
  4180                           wreg	equ	0xFE8
  4181                           postdec2	equ	0xFDD
  4182                           fsr2h	equ	0xFDA
  4183                           fsr2l	equ	0xFD9
  4184                           status	equ	0xFD8
  4185                           
  4186 ;; *************** function _DIO2_ISR_Lora_Init *****************
  4187 ;; Defined at:
  4188 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;		None
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, status,0, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;Total ram usage:        0 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:    8
  4209 ;; This function calls:
  4210 ;;		_IOCB4_SetInterruptHandler
  4211 ;; This function is called by:
  4212 ;;		_LORAWAN_PlatformInit
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           	psect	text18
  4217  008BE0                     __ptext18:
  4218                           	opt stack 0
  4219  008BE0                     _DIO2_ISR_Lora_Init:
  4220                           	opt stack 20
  4221                           
  4222                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  4223                           
  4224                           ;incstack = 0
  4225  008BE0  0E76               	movlw	low _DIO2_ISR_Lora
  4226  008BE2  0100               	movlb	0	; () banked
  4227  008BE4  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  4228  008BE6  0E8D               	movlw	high _DIO2_ISR_Lora
  4229  008BE8  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4230  008BEA  EC4C  F046         	call	_IOCB4_SetInterruptHandler	;wreg free
  4231  008BEE  0012               	return		;funcret
  4232  008BF0                     __end_of_DIO2_ISR_Lora_Init:
  4233                           	opt stack 0
  4234                           tblptru	equ	0xFF8
  4235                           tblptrh	equ	0xFF7
  4236                           tblptrl	equ	0xFF6
  4237                           tablat	equ	0xFF5
  4238                           intcon	equ	0xFF2
  4239                           intcon2	equ	0xFF1
  4240                           postinc0	equ	0xFEE
  4241                           wreg	equ	0xFE8
  4242                           postdec2	equ	0xFDD
  4243                           fsr2h	equ	0xFDA
  4244                           fsr2l	equ	0xFD9
  4245                           status	equ	0xFD8
  4246                           
  4247 ;; *************** function _IOCB4_SetInterruptHandler *****************
  4248 ;; Defined at:
  4249 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4252 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;		None
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      void 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;Total ram usage:        2 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:    7
  4271 ;; This function calls:
  4272 ;;		Nothing
  4273 ;; This function is called by:
  4274 ;;		_DIO2_ISR_Lora_Init
  4275 ;;		_PIN_MANAGER_Initialize
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text19
  4280  008C98                     __ptext19:
  4281                           	opt stack 0
  4282  008C98                     _IOCB4_SetInterruptHandler:
  4283                           	opt stack 21
  4284                           
  4285                           ;pin_manager.c: 139: IOCB4_InterruptHandler = InterruptHandler;
  4286                           
  4287                           ;incstack = 0
  4288  008C98  C060  F1F5         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  4289  008C9C  C061  F1F6         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  4290  008CA0  0012               	return		;funcret
  4291  008CA2                     __end_of_IOCB4_SetInterruptHandler:
  4292                           	opt stack 0
  4293                           tblptru	equ	0xFF8
  4294                           tblptrh	equ	0xFF7
  4295                           tblptrl	equ	0xFF6
  4296                           tablat	equ	0xFF5
  4297                           intcon	equ	0xFF2
  4298                           intcon2	equ	0xFF1
  4299                           postinc0	equ	0xFEE
  4300                           wreg	equ	0xFE8
  4301                           postdec2	equ	0xFDD
  4302                           fsr2h	equ	0xFDA
  4303                           fsr2l	equ	0xFD9
  4304                           status	equ	0xFD8
  4305                           
  4306 ;; *************** function _DIO1_ISR_Lora_Init *****************
  4307 ;; Defined at:
  4308 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		wreg, status,2, status,0, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;Total ram usage:        0 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    8
  4329 ;; This function calls:
  4330 ;;		_INT2_SetInterruptHandler
  4331 ;; This function is called by:
  4332 ;;		_LORAWAN_PlatformInit
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text20
  4337  008BF0                     __ptext20:
  4338                           	opt stack 0
  4339  008BF0                     _DIO1_ISR_Lora_Init:
  4340                           	opt stack 20
  4341                           
  4342                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  4343                           
  4344                           ;incstack = 0
  4345  008BF0  0E7C               	movlw	low _DIO1_ISR_Lora
  4346  008BF2  0100               	movlb	0	; () banked
  4347  008BF4  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4348  008BF6  0E8D               	movlw	high _DIO1_ISR_Lora
  4349  008BF8  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4350  008BFA  EC51  F046         	call	_INT2_SetInterruptHandler	;wreg free
  4351  008BFE  0012               	return		;funcret
  4352  008C00                     __end_of_DIO1_ISR_Lora_Init:
  4353                           	opt stack 0
  4354                           tblptru	equ	0xFF8
  4355                           tblptrh	equ	0xFF7
  4356                           tblptrl	equ	0xFF6
  4357                           tablat	equ	0xFF5
  4358                           intcon	equ	0xFF2
  4359                           intcon2	equ	0xFF1
  4360                           postinc0	equ	0xFEE
  4361                           wreg	equ	0xFE8
  4362                           postdec2	equ	0xFDD
  4363                           fsr2h	equ	0xFDA
  4364                           fsr2l	equ	0xFD9
  4365                           status	equ	0xFD8
  4366                           
  4367 ;; *************** function _DIO0_ISR_Lora_Init *****************
  4368 ;; Defined at:
  4369 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;		None
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;		None
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  1    wreg      void 
  4376 ;; Registers used:
  4377 ;;		wreg, status,2, status,0, cstack
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;Total ram usage:        0 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:    8
  4390 ;; This function calls:
  4391 ;;		_INT1_SetInterruptHandler
  4392 ;; This function is called by:
  4393 ;;		_LORAWAN_PlatformInit
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text21
  4398  008C00                     __ptext21:
  4399                           	opt stack 0
  4400  008C00                     _DIO0_ISR_Lora_Init:
  4401                           	opt stack 20
  4402                           
  4403                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  4404                           
  4405                           ;incstack = 0
  4406  008C00  0E82               	movlw	low _DIO0_ISR_Lora
  4407  008C02  0100               	movlb	0	; () banked
  4408  008C04  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4409  008C06  0E8D               	movlw	high _DIO0_ISR_Lora
  4410  008C08  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4411  008C0A  EC56  F046         	call	_INT1_SetInterruptHandler	;wreg free
  4412  008C0E  0012               	return		;funcret
  4413  008C10                     __end_of_DIO0_ISR_Lora_Init:
  4414                           	opt stack 0
  4415                           tblptru	equ	0xFF8
  4416                           tblptrh	equ	0xFF7
  4417                           tblptrl	equ	0xFF6
  4418                           tablat	equ	0xFF5
  4419                           intcon	equ	0xFF2
  4420                           intcon2	equ	0xFF1
  4421                           postinc0	equ	0xFEE
  4422                           wreg	equ	0xFE8
  4423                           postdec2	equ	0xFDD
  4424                           fsr2h	equ	0xFDA
  4425                           fsr2l	equ	0xFD9
  4426                           status	equ	0xFD8
  4427                           
  4428 ;; *************** function _INTERRUPT_Initialize *****************
  4429 ;; Defined at:
  4430 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;		None
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;		None
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      void 
  4437 ;; Registers used:
  4438 ;;		None
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;Total ram usage:        0 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    7
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_SYSTEM_Initialize
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text22
  4459  008D8C                     __ptext22:
  4460                           	opt stack 0
  4461  008D8C                     _INTERRUPT_Initialize:
  4462                           	opt stack 22
  4463                           
  4464                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  4465                           
  4466                           ;incstack = 0
  4467  008D8C  9ED0               	bcf	4048,7,c	;volatile
  4468  008D8E  0012               	return		;funcret
  4469  008D90                     __end_of_INTERRUPT_Initialize:
  4470                           	opt stack 0
  4471                           tblptru	equ	0xFF8
  4472                           tblptrh	equ	0xFF7
  4473                           tblptrl	equ	0xFF6
  4474                           tablat	equ	0xFF5
  4475                           intcon	equ	0xFF2
  4476                           intcon2	equ	0xFF1
  4477                           postinc0	equ	0xFEE
  4478                           wreg	equ	0xFE8
  4479                           postdec2	equ	0xFDD
  4480                           fsr2h	equ	0xFDA
  4481                           fsr2l	equ	0xFD9
  4482                           status	equ	0xFD8
  4483                           
  4484 ;; *************** function _EXT_INT_Initialize *****************
  4485 ;; Defined at:
  4486 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;		None
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;		None
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;Total ram usage:        0 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; Hardware stack levels required when called:    8
  4507 ;; This function calls:
  4508 ;;		_INT1_SetInterruptHandler
  4509 ;;		_INT2_SetInterruptHandler
  4510 ;; This function is called by:
  4511 ;;		_SYSTEM_Initialize
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text23
  4516  0086AA                     __ptext23:
  4517                           	opt stack 0
  4518  0086AA                     _EXT_INT_Initialize:
  4519                           	opt stack 21
  4520                           
  4521                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  4522                           
  4523                           ;incstack = 0
  4524  0086AA  90F0               	bcf	intcon3,0,c	;volatile
  4525                           
  4526                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  4527  0086AC  8AF1               	bsf	intcon2,5,c	;volatile
  4528                           
  4529                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  4530  0086AE  0EB0               	movlw	low _INT1_DefaultInterruptHandler
  4531  0086B0  0100               	movlb	0	; () banked
  4532  0086B2  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4533  0086B4  0E8D               	movlw	high _INT1_DefaultInterruptHandler
  4534  0086B6  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4535  0086B8  EC56  F046         	call	_INT1_SetInterruptHandler	;wreg free
  4536                           
  4537                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  4538  0086BC  86F0               	bsf	intcon3,3,c	;volatile
  4539                           
  4540                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
  4541  0086BE  92F0               	bcf	intcon3,1,c	;volatile
  4542                           
  4543                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
  4544  0086C0  88F1               	bsf	intcon2,4,c	;volatile
  4545                           
  4546                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  4547  0086C2  0EAE               	movlw	low _INT2_DefaultInterruptHandler
  4548  0086C4  0100               	movlb	0	; () banked
  4549  0086C6  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4550  0086C8  0E8D               	movlw	high _INT2_DefaultInterruptHandler
  4551  0086CA  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4552  0086CC  EC51  F046         	call	_INT2_SetInterruptHandler	;wreg free
  4553                           
  4554                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
  4555  0086D0  88F0               	bsf	intcon3,4,c	;volatile
  4556  0086D2  0012               	return		;funcret
  4557  0086D4                     __end_of_EXT_INT_Initialize:
  4558                           	opt stack 0
  4559                           tblptru	equ	0xFF8
  4560                           tblptrh	equ	0xFF7
  4561                           tblptrl	equ	0xFF6
  4562                           tablat	equ	0xFF5
  4563                           intcon	equ	0xFF2
  4564                           intcon2	equ	0xFF1
  4565                           intcon3	equ	0xFF0
  4566                           postinc0	equ	0xFEE
  4567                           wreg	equ	0xFE8
  4568                           postdec2	equ	0xFDD
  4569                           fsr2h	equ	0xFDA
  4570                           fsr2l	equ	0xFD9
  4571                           status	equ	0xFD8
  4572                           
  4573 ;; *************** function _INT2_SetInterruptHandler *****************
  4574 ;; Defined at:
  4575 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4578 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4590 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;Total ram usage:        2 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    7
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_DIO1_ISR_Lora_Init
  4601 ;;		_EXT_INT_Initialize
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           	psect	text24
  4606  008CA2                     __ptext24:
  4607                           	opt stack 0
  4608  008CA2                     _INT2_SetInterruptHandler:
  4609                           	opt stack 20
  4610                           
  4611                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
  4612                           
  4613                           ;incstack = 0
  4614  008CA2  C060  F1F7         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4615  008CA6  C061  F1F8         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4616  008CAA  0012               	return		;funcret
  4617  008CAC                     __end_of_INT2_SetInterruptHandler:
  4618                           	opt stack 0
  4619                           tblptru	equ	0xFF8
  4620                           tblptrh	equ	0xFF7
  4621                           tblptrl	equ	0xFF6
  4622                           tablat	equ	0xFF5
  4623                           intcon	equ	0xFF2
  4624                           intcon2	equ	0xFF1
  4625                           intcon3	equ	0xFF0
  4626                           postinc0	equ	0xFEE
  4627                           wreg	equ	0xFE8
  4628                           postdec2	equ	0xFDD
  4629                           fsr2h	equ	0xFDA
  4630                           fsr2l	equ	0xFD9
  4631                           status	equ	0xFD8
  4632                           
  4633 ;; *************** function _INT1_SetInterruptHandler *****************
  4634 ;; Defined at:
  4635 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4638 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4650 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4653 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4654 ;;Total ram usage:        2 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    7
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_DIO0_ISR_Lora_Init
  4661 ;;		_EXT_INT_Initialize
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text25
  4666  008CAC                     __ptext25:
  4667                           	opt stack 0
  4668  008CAC                     _INT1_SetInterruptHandler:
  4669                           	opt stack 20
  4670                           
  4671                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  4672                           
  4673                           ;incstack = 0
  4674  008CAC  C060  F1F9         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4675  008CB0  C061  F1FA         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4676  008CB4  0012               	return		;funcret
  4677  008CB6                     __end_of_INT1_SetInterruptHandler:
  4678                           	opt stack 0
  4679                           tblptru	equ	0xFF8
  4680                           tblptrh	equ	0xFF7
  4681                           tblptrl	equ	0xFF6
  4682                           tablat	equ	0xFF5
  4683                           intcon	equ	0xFF2
  4684                           intcon2	equ	0xFF1
  4685                           intcon3	equ	0xFF0
  4686                           postinc0	equ	0xFEE
  4687                           wreg	equ	0xFE8
  4688                           postdec2	equ	0xFDD
  4689                           fsr2h	equ	0xFDA
  4690                           fsr2l	equ	0xFD9
  4691                           status	equ	0xFD8
  4692                           
  4693 ;; *************** function _EUSART1_Initialize *****************
  4694 ;; Defined at:
  4695 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;		None
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;		None
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2, status,0, cstack
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;Total ram usage:        0 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    8
  4716 ;; This function calls:
  4717 ;;		_EUSART1_SetErrorHandler
  4718 ;;		_EUSART1_SetFramingErrorHandler
  4719 ;;		_EUSART1_SetOverrunErrorHandler
  4720 ;; This function is called by:
  4721 ;;		_SYSTEM_Initialize
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text26
  4726  00801E                     __ptext26:
  4727                           	opt stack 0
  4728  00801E                     _EUSART1_Initialize:
  4729                           	opt stack 21
  4730                           
  4731                           ;eusart1.c: 71: BAUDCON1 = 0x08;
  4732                           
  4733                           ;incstack = 0
  4734  00801E  0E08               	movlw	8
  4735  008020  6EB8               	movwf	4024,c	;volatile
  4736                           
  4737                           ;eusart1.c: 74: RCSTA1 = 0x90;
  4738  008022  0E90               	movlw	144
  4739  008024  6EAB               	movwf	4011,c	;volatile
  4740                           
  4741                           ;eusart1.c: 77: TXSTA1 = 0x24;
  4742  008026  0E24               	movlw	36
  4743  008028  6EAC               	movwf	4012,c	;volatile
  4744                           
  4745                           ;eusart1.c: 80: SPBRG1 = 0xA0;
  4746  00802A  0EA0               	movlw	160
  4747  00802C  6EAF               	movwf	4015,c	;volatile
  4748                           
  4749                           ;eusart1.c: 83: SPBRGH1 = 0x01;
  4750  00802E  0E01               	movlw	1
  4751  008030  6EB0               	movwf	4016,c	;volatile
  4752                           
  4753                           ;eusart1.c: 86: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  4754  008032  0E00               	movlw	0
  4755  008034  0100               	movlb	0	; () banked
  4756  008036  6F60               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  4757  008038  0E00               	movlw	0
  4758  00803A  6F61               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  4759  00803C  EC60  F046         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4760                           
  4761                           ;eusart1.c: 87: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  4762  008040  0E00               	movlw	0
  4763  008042  0100               	movlb	0	; () banked
  4764  008044  6F60               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  4765  008046  0E00               	movlw	0
  4766  008048  6F61               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  4767  00804A  EC5B  F046         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4768                           
  4769                           ;eusart1.c: 88: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  4770  00804E  0E00               	movlw	0
  4771  008050  0100               	movlb	0	; () banked
  4772  008052  6F60               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  4773  008054  0E00               	movlw	0
  4774  008056  6F61               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  4775  008058  EC65  F046         	call	_EUSART1_SetErrorHandler	;wreg free
  4776                           
  4777                           ;eusart1.c: 90: eusart1RxLastError.status = 0;
  4778  00805C  0E00               	movlw	0
  4779  00805E  0101               	movlb	1	; () banked
  4780  008060  6F20               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4781                           
  4782                           ; BSR set to: 1
  4783  008062  0012               	return		;funcret
  4784  008064                     __end_of_EUSART1_Initialize:
  4785                           	opt stack 0
  4786                           tblptru	equ	0xFF8
  4787                           tblptrh	equ	0xFF7
  4788                           tblptrl	equ	0xFF6
  4789                           tablat	equ	0xFF5
  4790                           intcon	equ	0xFF2
  4791                           intcon2	equ	0xFF1
  4792                           intcon3	equ	0xFF0
  4793                           postinc0	equ	0xFEE
  4794                           wreg	equ	0xFE8
  4795                           postdec2	equ	0xFDD
  4796                           fsr2h	equ	0xFDA
  4797                           fsr2l	equ	0xFD9
  4798                           status	equ	0xFD8
  4799                           
  4800 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4801 ;; Defined at:
  4802 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4805 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg, status,2, status,0
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4817 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;Total ram usage:        2 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    7
  4824 ;; This function calls:
  4825 ;;		Nothing
  4826 ;; This function is called by:
  4827 ;;		_EUSART1_Initialize
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text27
  4832  008CB6                     __ptext27:
  4833                           	opt stack 0
  4834  008CB6                     _EUSART1_SetOverrunErrorHandler:
  4835                           	opt stack 21
  4836                           
  4837                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
  4838                           
  4839                           ; BSR set to: 1
  4840                           ;incstack = 0
  4841  008CB6  C060  F1ED         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4842  008CBA  C061  F1EE         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4843  008CBE  0012               	return		;funcret
  4844  008CC0                     __end_of_EUSART1_SetOverrunErrorHandler:
  4845                           	opt stack 0
  4846                           tblptru	equ	0xFF8
  4847                           tblptrh	equ	0xFF7
  4848                           tblptrl	equ	0xFF6
  4849                           tablat	equ	0xFF5
  4850                           intcon	equ	0xFF2
  4851                           intcon2	equ	0xFF1
  4852                           intcon3	equ	0xFF0
  4853                           postinc0	equ	0xFEE
  4854                           wreg	equ	0xFE8
  4855                           postdec2	equ	0xFDD
  4856                           fsr2h	equ	0xFDA
  4857                           fsr2l	equ	0xFD9
  4858                           status	equ	0xFD8
  4859                           
  4860 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4861 ;; Defined at:
  4862 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4865 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      void 
  4870 ;; Registers used:
  4871 ;;		wreg, status,2, status,0
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4877 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;Total ram usage:        2 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; Hardware stack levels required when called:    7
  4884 ;; This function calls:
  4885 ;;		Nothing
  4886 ;; This function is called by:
  4887 ;;		_EUSART1_Initialize
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text28
  4892  008CC0                     __ptext28:
  4893                           	opt stack 0
  4894  008CC0                     _EUSART1_SetFramingErrorHandler:
  4895                           	opt stack 21
  4896                           
  4897                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
  4898                           
  4899                           ;incstack = 0
  4900  008CC0  C060  F1EF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4901  008CC4  C061  F1F0         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4902  008CC8  0012               	return		;funcret
  4903  008CCA                     __end_of_EUSART1_SetFramingErrorHandler:
  4904                           	opt stack 0
  4905                           tblptru	equ	0xFF8
  4906                           tblptrh	equ	0xFF7
  4907                           tblptrl	equ	0xFF6
  4908                           tablat	equ	0xFF5
  4909                           intcon	equ	0xFF2
  4910                           intcon2	equ	0xFF1
  4911                           intcon3	equ	0xFF0
  4912                           postinc0	equ	0xFEE
  4913                           wreg	equ	0xFE8
  4914                           postdec2	equ	0xFDD
  4915                           fsr2h	equ	0xFDA
  4916                           fsr2l	equ	0xFD9
  4917                           status	equ	0xFD8
  4918                           
  4919 ;; *************** function _EUSART1_SetErrorHandler *****************
  4920 ;; Defined at:
  4921 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4924 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;		None
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  1    wreg      void 
  4929 ;; Registers used:
  4930 ;;		wreg, status,2, status,0
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4936 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4939 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4940 ;;Total ram usage:        2 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:    7
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		_EUSART1_Initialize
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text29
  4951  008CCA                     __ptext29:
  4952                           	opt stack 0
  4953  008CCA                     _EUSART1_SetErrorHandler:
  4954                           	opt stack 21
  4955                           
  4956                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
  4957                           
  4958                           ;incstack = 0
  4959  008CCA  C060  F2F5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4960  008CCE  C061  F2F6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4961  008CD2  0012               	return		;funcret
  4962  008CD4                     __end_of_EUSART1_SetErrorHandler:
  4963                           	opt stack 0
  4964                           tblptru	equ	0xFF8
  4965                           tblptrh	equ	0xFF7
  4966                           tblptrl	equ	0xFF6
  4967                           tablat	equ	0xFF5
  4968                           intcon	equ	0xFF2
  4969                           intcon2	equ	0xFF1
  4970                           intcon3	equ	0xFF0
  4971                           postinc0	equ	0xFEE
  4972                           wreg	equ	0xFE8
  4973                           postdec2	equ	0xFDD
  4974                           fsr2h	equ	0xFDA
  4975                           fsr2l	equ	0xFD9
  4976                           status	equ	0xFD8
  4977                           
  4978 ;; *************** function _CCP5_Initialize *****************
  4979 ;; Defined at:
  4980 ;;		line 49 in file "mcc_generated_files/ccp5.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		wreg, status,2
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4998 ;;Total ram usage:        0 bytes
  4999 ;; Hardware stack levels used:    1
  5000 ;; Hardware stack levels required when called:    7
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_SYSTEM_Initialize
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text30
  5009  008C10                     __ptext30:
  5010                           	opt stack 0
  5011  008C10                     _CCP5_Initialize:
  5012                           	opt stack 22
  5013                           
  5014                           ;ccp5.c: 53: CCP5CON = 0x00;
  5015                           
  5016                           ;incstack = 0
  5017  008C10  0E00               	movlw	0
  5018  008C12  010F               	movlb	15	; () banked
  5019  008C14  6F54               	movwf	84,b	;volatile
  5020                           
  5021                           ;ccp5.c: 56: CCPR5L = 0x00;
  5022  008C16  0E00               	movlw	0
  5023  008C18  6F55               	movwf	85,b	;volatile
  5024                           
  5025                           ;ccp5.c: 59: CCPR5H = 0x00;
  5026  008C1A  0E00               	movlw	0
  5027  008C1C  6F56               	movwf	86,b	;volatile
  5028                           
  5029                           ; BSR set to: 15
  5030  008C1E  0012               	return		;funcret
  5031  008C20                     __end_of_CCP5_Initialize:
  5032                           	opt stack 0
  5033                           tblptru	equ	0xFF8
  5034                           tblptrh	equ	0xFF7
  5035                           tblptrl	equ	0xFF6
  5036                           tablat	equ	0xFF5
  5037                           intcon	equ	0xFF2
  5038                           intcon2	equ	0xFF1
  5039                           intcon3	equ	0xFF0
  5040                           postinc0	equ	0xFEE
  5041                           wreg	equ	0xFE8
  5042                           postdec2	equ	0xFDD
  5043                           fsr2h	equ	0xFDA
  5044                           fsr2l	equ	0xFD9
  5045                           status	equ	0xFD8
  5046                           
  5047 ;; *************** function _ADC_Initialize *****************
  5048 ;; Defined at:
  5049 ;;		line 60 in file "mcc_generated_files/adc.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;		None
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;		None
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  1    wreg      void 
  5056 ;; Registers used:
  5057 ;;		wreg, status,2
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;Total ram usage:        0 bytes
  5068 ;; Hardware stack levels used:    1
  5069 ;; Hardware stack levels required when called:    7
  5070 ;; This function calls:
  5071 ;;		Nothing
  5072 ;; This function is called by:
  5073 ;;		_SYSTEM_Initialize
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text31
  5078  008B32                     __ptext31:
  5079                           	opt stack 0
  5080  008B32                     _ADC_Initialize:
  5081                           	opt stack 22
  5082                           
  5083                           ;adc.c: 65: ADCON0 = 0x01;
  5084                           
  5085                           ; BSR set to: 15
  5086                           ;incstack = 0
  5087  008B32  0E01               	movlw	1
  5088  008B34  6EC2               	movwf	4034,c	;volatile
  5089                           
  5090                           ;adc.c: 68: ADCON1 = 0x00;
  5091  008B36  0E00               	movlw	0
  5092  008B38  6EC1               	movwf	4033,c	;volatile
  5093                           
  5094                           ;adc.c: 71: ADCON2 = 0x85;
  5095  008B3A  0E85               	movlw	133
  5096  008B3C  6EC0               	movwf	4032,c	;volatile
  5097                           
  5098                           ;adc.c: 74: ADRESL = 0x00;
  5099  008B3E  0E00               	movlw	0
  5100  008B40  6EC3               	movwf	4035,c	;volatile
  5101                           
  5102                           ;adc.c: 77: ADRESH = 0x00;
  5103  008B42  0E00               	movlw	0
  5104  008B44  6EC4               	movwf	4036,c	;volatile
  5105  008B46  0012               	return		;funcret
  5106  008B48                     __end_of_ADC_Initialize:
  5107                           	opt stack 0
  5108                           tblptru	equ	0xFF8
  5109                           tblptrh	equ	0xFF7
  5110                           tblptrl	equ	0xFF6
  5111                           tablat	equ	0xFF5
  5112                           intcon	equ	0xFF2
  5113                           intcon2	equ	0xFF1
  5114                           intcon3	equ	0xFF0
  5115                           postinc0	equ	0xFEE
  5116                           wreg	equ	0xFE8
  5117                           postdec2	equ	0xFDD
  5118                           fsr2h	equ	0xFDA
  5119                           fsr2l	equ	0xFD9
  5120                           status	equ	0xFD8
  5121                           
  5122 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  5123 ;; Defined at:
  5124 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  networkSessi    2   11[BANK0 ] PTR unsigned char 
  5127 ;;		 -> nwkSKey(16), 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;		None
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  1    wreg      void 
  5132 ;; Registers used:
  5133 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5139 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;Total ram usage:        2 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:    8
  5146 ;; This function calls:
  5147 ;;		_memcpy
  5148 ;; This function is called by:
  5149 ;;		_main
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text32
  5154  0085F4                     __ptext32:
  5155                           	opt stack 0
  5156  0085F4                     _LORAWAN_SetNetworkSessionKey:
  5157                           	opt stack 22
  5158                           
  5159                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  5160                           
  5161                           ;incstack = 0
  5162  0085F4  0100               	movlb	0	; () banked
  5163  0085F6  516B               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  5164  0085F8  116C               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  5165  0085FA  B4D8               	btfsc	status,2,c
  5166  0085FC  0012               	return	
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;lorawan.c: 382: {
  5170                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  5171  0085FE  0E22               	movlw	low (_loRa+34)
  5172  008600  6F60               	movwf	memcpy@d1& (0+255),b
  5173  008602  0E02               	movlw	high (_loRa+34)
  5174  008604  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  5175  008606  C06B  F062         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  5176  00860A  C06C  F063         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  5177  00860E  0E00               	movlw	0
  5178  008610  6F65               	movwf	(memcpy@n+1)& (0+255),b
  5179  008612  0E10               	movlw	16
  5180  008614  6F64               	movwf	memcpy@n& (0+255),b
  5181  008616  EC5C  F03D         	call	_memcpy	;wreg free
  5182                           
  5183                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  5184  00861A  0102               	movlb	2	; () banked
  5185  00861C  89A5               	bsf	(_loRa+165)& (0+255),4,b
  5186                           
  5187                           ; BSR set to: 2
  5188                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  5189  00861E  9902               	bcf	(_loRa+2)& (0+255),4,b
  5190  008620  0012               	return	
  5191  008622                     __end_of_LORAWAN_SetNetworkSessionKey:
  5192                           	opt stack 0
  5193                           tblptru	equ	0xFF8
  5194                           tblptrh	equ	0xFF7
  5195                           tblptrl	equ	0xFF6
  5196                           tablat	equ	0xFF5
  5197                           intcon	equ	0xFF2
  5198                           intcon2	equ	0xFF1
  5199                           intcon3	equ	0xFF0
  5200                           postinc0	equ	0xFEE
  5201                           wreg	equ	0xFE8
  5202                           postdec2	equ	0xFDD
  5203                           fsr2h	equ	0xFDA
  5204                           fsr2l	equ	0xFD9
  5205                           status	equ	0xFD8
  5206                           
  5207 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  5208 ;; Defined at:
  5209 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  deviceAddres    4    0[BANK0 ] unsigned long 
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;		None
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  1    wreg      void 
  5216 ;; Registers used:
  5217 ;;		None
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5223 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5226 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5227 ;;Total ram usage:        4 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:    7
  5230 ;; This function calls:
  5231 ;;		Nothing
  5232 ;; This function is called by:
  5233 ;;		_main
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           	psect	text33
  5238  008AEA                     __ptext33:
  5239                           	opt stack 0
  5240  008AEA                     _LORAWAN_SetDeviceAddress:
  5241                           	opt stack 23
  5242                           
  5243                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  5244                           
  5245                           ;incstack = 0
  5246  008AEA  C060  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  5247  008AEE  C061  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  5248  008AF2  C062  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  5249  008AF6  C063  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  5250                           
  5251                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  5252  008AFA  0102               	movlb	2	; () banked
  5253  008AFC  85A5               	bsf	(_loRa+165)& (0+255),2,b
  5254                           
  5255                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  5256  008AFE  9902               	bcf	(_loRa+2)& (0+255),4,b
  5257                           
  5258                           ; BSR set to: 2
  5259  008B00  0012               	return		;funcret
  5260  008B02                     __end_of_LORAWAN_SetDeviceAddress:
  5261                           	opt stack 0
  5262                           tblptru	equ	0xFF8
  5263                           tblptrh	equ	0xFF7
  5264                           tblptrl	equ	0xFF6
  5265                           tablat	equ	0xFF5
  5266                           intcon	equ	0xFF2
  5267                           intcon2	equ	0xFF1
  5268                           intcon3	equ	0xFF0
  5269                           postinc0	equ	0xFEE
  5270                           wreg	equ	0xFE8
  5271                           postdec2	equ	0xFDD
  5272                           fsr2h	equ	0xFDA
  5273                           fsr2l	equ	0xFD9
  5274                           status	equ	0xFD8
  5275                           
  5276 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  5277 ;; Defined at:
  5278 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  applicationS    2   11[BANK0 ] PTR unsigned char 
  5281 ;;		 -> appSKey(16), 
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;		None
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  1    wreg      void 
  5286 ;; Registers used:
  5287 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5293 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;Total ram usage:        2 bytes
  5298 ;; Hardware stack levels used:    1
  5299 ;; Hardware stack levels required when called:    8
  5300 ;; This function calls:
  5301 ;;		_memcpy
  5302 ;; This function is called by:
  5303 ;;		_main
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307                           	psect	text34
  5308  008622                     __ptext34:
  5309                           	opt stack 0
  5310  008622                     _LORAWAN_SetApplicationSessionKey:
  5311                           	opt stack 22
  5312                           
  5313                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  5314                           
  5315                           ; BSR set to: 2
  5316                           ;incstack = 0
  5317  008622  0100               	movlb	0	; () banked
  5318  008624  516B               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  5319  008626  116C               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  5320  008628  B4D8               	btfsc	status,2,c
  5321  00862A  0012               	return	
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;lorawan.c: 397: {
  5325                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  5326  00862C  0E32               	movlw	low (_loRa+50)
  5327  00862E  6F60               	movwf	memcpy@d1& (0+255),b
  5328  008630  0E02               	movlw	high (_loRa+50)
  5329  008632  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  5330  008634  C06B  F062         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  5331  008638  C06C  F063         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  5332  00863C  0E00               	movlw	0
  5333  00863E  6F65               	movwf	(memcpy@n+1)& (0+255),b
  5334  008640  0E10               	movlw	16
  5335  008642  6F64               	movwf	memcpy@n& (0+255),b
  5336  008644  EC5C  F03D         	call	_memcpy	;wreg free
  5337                           
  5338                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  5339  008648  0102               	movlb	2	; () banked
  5340  00864A  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  5341                           
  5342                           ; BSR set to: 2
  5343                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  5344  00864C  9902               	bcf	(_loRa+2)& (0+255),4,b
  5345  00864E  0012               	return	
  5346  008650                     __end_of_LORAWAN_SetApplicationSessionKey:
  5347                           	opt stack 0
  5348                           tblptru	equ	0xFF8
  5349                           tblptrh	equ	0xFF7
  5350                           tblptrl	equ	0xFF6
  5351                           tablat	equ	0xFF5
  5352                           intcon	equ	0xFF2
  5353                           intcon2	equ	0xFF1
  5354                           intcon3	equ	0xFF0
  5355                           postinc0	equ	0xFEE
  5356                           wreg	equ	0xFE8
  5357                           postdec2	equ	0xFDD
  5358                           fsr2h	equ	0xFDA
  5359                           fsr2l	equ	0xFD9
  5360                           status	equ	0xFD8
  5361                           
  5362 ;; *************** function _LORAWAN_Mainloop *****************
  5363 ;; Defined at:
  5364 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;		None
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;		None
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      void 
  5371 ;; Registers used:
  5372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;Total ram usage:        0 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:   18
  5385 ;; This function calls:
  5386 ;;		_INTERRUPT_GetDioStatus
  5387 ;;		_RADIO_DIO0
  5388 ;;		_RADIO_DIO1
  5389 ;;		_RADIO_DIO2
  5390 ;;		_RADIO_DIO3
  5391 ;;		_RADIO_DIO4
  5392 ;;		_RADIO_DIO5
  5393 ;;		_SwTimersExecute
  5394 ;; This function is called by:
  5395 ;;		_main
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           	psect	text35
  5400  008390                     __ptext35:
  5401                           	opt stack 0
  5402  008390                     _LORAWAN_Mainloop:
  5403                           	opt stack 12
  5404                           
  5405                           ;lorawan.c: 2240: SwTimersExecute();
  5406                           
  5407                           ;incstack = 0
  5408  008390  EC73  F031         	call	_SwTimersExecute	;wreg free
  5409                           
  5410                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  5411  008394  ECB9  F045         	call	_INTERRUPT_GetDioStatus	;wreg free
  5412  008398  0101               	movlb	1	; () banked
  5413  00839A  6F21               	movwf	_localDioStatus& (0+255),b
  5414                           
  5415                           ; BSR set to: 1
  5416                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  5417  00839C  B121               	btfsc	_localDioStatus& (0+255),0,b
  5418                           
  5419                           ; BSR set to: 1
  5420                           ;lorawan.c: 2246: {
  5421                           ;lorawan.c: 2247: RADIO_DIO0();
  5422  00839E  ECD1  F037         	call	_RADIO_DIO0	;wreg free
  5423                           
  5424                           ;lorawan.c: 2248: }
  5425                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  5426  0083A2  0101               	movlb	1	; () banked
  5427  0083A4  B321               	btfsc	_localDioStatus& (0+255),1,b
  5428                           
  5429                           ; BSR set to: 1
  5430                           ;lorawan.c: 2250: {
  5431                           ;lorawan.c: 2251: RADIO_DIO1();
  5432  0083A6  ECC3  F03F         	call	_RADIO_DIO1	;wreg free
  5433                           
  5434                           ;lorawan.c: 2252: }
  5435                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  5436  0083AA  0101               	movlb	1	; () banked
  5437  0083AC  B521               	btfsc	_localDioStatus& (0+255),2,b
  5438                           
  5439                           ; BSR set to: 1
  5440                           ;lorawan.c: 2254: {
  5441                           ;lorawan.c: 2255: RADIO_DIO2();
  5442  0083AE  EC9E  F03E         	call	_RADIO_DIO2	;wreg free
  5443                           
  5444                           ;lorawan.c: 2256: }
  5445                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  5446  0083B2  0101               	movlb	1	; () banked
  5447  0083B4  B721               	btfsc	_localDioStatus& (0+255),3,b
  5448                           
  5449                           ; BSR set to: 1
  5450                           ;lorawan.c: 2258: {
  5451                           ;lorawan.c: 2259: RADIO_DIO3();
  5452  0083B6  EC43  F044         	call	_RADIO_DIO3	;wreg free
  5453                           
  5454                           ;lorawan.c: 2260: }
  5455                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  5456  0083BA  0101               	movlb	1	; () banked
  5457  0083BC  B921               	btfsc	_localDioStatus& (0+255),4,b
  5458                           
  5459                           ; BSR set to: 1
  5460                           ;lorawan.c: 2262: {
  5461                           ;lorawan.c: 2263: RADIO_DIO4();
  5462  0083BE  EC20  F042         	call	_RADIO_DIO4	;wreg free
  5463                           
  5464                           ;lorawan.c: 2264: }
  5465                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  5466  0083C2  0101               	movlb	1	; () banked
  5467  0083C4  AB21               	btfss	_localDioStatus& (0+255),5,b
  5468  0083C6  0012               	return	
  5469                           
  5470                           ; BSR set to: 1
  5471                           ;lorawan.c: 2266: {
  5472                           ;lorawan.c: 2267: RADIO_DIO5();
  5473  0083C8  ECA9  F043         	call	_RADIO_DIO5	;wreg free
  5474  0083CC  0012               	return	
  5475  0083CE                     __end_of_LORAWAN_Mainloop:
  5476                           	opt stack 0
  5477                           tblptru	equ	0xFF8
  5478                           tblptrh	equ	0xFF7
  5479                           tblptrl	equ	0xFF6
  5480                           tablat	equ	0xFF5
  5481                           intcon	equ	0xFF2
  5482                           intcon2	equ	0xFF1
  5483                           intcon3	equ	0xFF0
  5484                           postinc0	equ	0xFEE
  5485                           wreg	equ	0xFE8
  5486                           postdec2	equ	0xFDD
  5487                           fsr2h	equ	0xFDA
  5488                           fsr2l	equ	0xFD9
  5489                           status	equ	0xFD8
  5490                           
  5491 ;; *************** function _SwTimersExecute *****************
  5492 ;; Defined at:
  5493 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;		None
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  i               1  126[BANK0 ] unsigned char 
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  1    wreg      void 
  5500 ;; Registers used:
  5501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;Total ram usage:        5 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; Hardware stack levels required when called:   17
  5514 ;; This function calls:
  5515 ;;		Absolute function
  5516 ;;		_AckRetransmissionCallback
  5517 ;;		_AutomaticReplyCallback
  5518 ;;		_DutyCycleCallback
  5519 ;;		_LORAWAN_LinkCheckCallback
  5520 ;;		_LORAWAN_ReceiveWindow1Callback
  5521 ;;		_LORAWAN_ReceiveWindow2Callback
  5522 ;;		_RADIO_RxFSKTimeout
  5523 ;;		_RADIO_WatchdogTimeout
  5524 ;;		_UnconfirmedTransmissionCallback
  5525 ;;		_UpdateJoinSuccessState
  5526 ;; This function is called by:
  5527 ;;		_LORAWAN_Mainloop
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           	psect	text36
  5532  0062E6                     __ptext36:
  5533                           	opt stack 0
  5534  0062E6                     _SwTimersExecute:
  5535                           	opt stack 12
  5536                           
  5537                           ;sw_timer.c: 262: uint8_t i;
  5538                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  5539                           
  5540                           ;incstack = 0
  5541  0062E6  9EF2               	bcf	intcon,7,c	;volatile
  5542                           
  5543                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  5544  0062E8  0E00               	movlw	0
  5545  0062EA  0100               	movlb	0	; () banked
  5546  0062EC  6FDE               	movwf	SwTimersExecute@i& (0+255),b
  5547  0062EE  D068               	goto	l274
  5548  0062F0                     
  5549                           ; BSR set to: 0
  5550                           ;sw_timer.c: 266: {
  5551                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  5552                           
  5553                           ; BSR set to: 0
  5554  0062F0  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  5555  0062F2  0D08               	mullw	8
  5556  0062F4  0E04               	movlw	4
  5557  0062F6  26F3               	addwf	prodl,f,c
  5558  0062F8  0E00               	movlw	0
  5559  0062FA  22F4               	addwfc	prodh,f,c
  5560  0062FC  0E00               	movlw	low _swTimers
  5561  0062FE  24F3               	addwf	prodl,w,c
  5562  006300  6ED9               	movwf	fsr2l,c
  5563  006302  0E03               	movlw	high _swTimers
  5564  006304  20F4               	addwfc	prodh,w,c
  5565  006306  6EDA               	movwf	fsr2h,c
  5566  006308  04DE               	decf	postinc2,w,c
  5567  00630A  A4D8               	btfss	status,2,c
  5568  00630C  D057               	goto	l278
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;sw_timer.c: 270: {
  5572                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  5573  00630E  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  5574  006310  0D08               	mullw	8
  5575  006312  0E00               	movlw	low _swTimers
  5576  006314  24F3               	addwf	prodl,w,c
  5577  006316  6ED9               	movwf	fsr2l,c
  5578  006318  0E03               	movlw	high _swTimers
  5579  00631A  20F4               	addwfc	prodh,w,c
  5580  00631C  6EDA               	movwf	fsr2h,c
  5581  00631E  50DE               	movf	postinc2,w,c
  5582  006320  10DE               	iorwf	postinc2,w,c
  5583  006322  10DE               	iorwf	postinc2,w,c
  5584  006324  10DE               	iorwf	postinc2,w,c
  5585  006326  A4D8               	btfss	status,2,c
  5586  006328  D049               	goto	l278
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;sw_timer.c: 272: {
  5590                           ;sw_timer.c: 273: swTimers[i].running = 0;
  5591  00632A  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  5592  00632C  0D08               	mullw	8
  5593  00632E  0E04               	movlw	4
  5594  006330  26F3               	addwf	prodl,f,c
  5595  006332  0E00               	movlw	0
  5596  006334  22F4               	addwfc	prodh,f,c
  5597  006336  0E00               	movlw	low _swTimers
  5598  006338  24F3               	addwf	prodl,w,c
  5599  00633A  6ED9               	movwf	fsr2l,c
  5600  00633C  0E03               	movlw	high _swTimers
  5601  00633E  20F4               	addwfc	prodh,w,c
  5602  006340  6EDA               	movwf	fsr2h,c
  5603  006342  0E00               	movlw	0
  5604  006344  6EDF               	movwf	indf2,c
  5605                           
  5606                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  5607  006346  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  5608  006348  0D08               	mullw	8
  5609  00634A  0E06               	movlw	6
  5610  00634C  26F3               	addwf	prodl,f,c
  5611  00634E  0E00               	movlw	0
  5612  006350  22F4               	addwfc	prodh,f,c
  5613  006352  0E00               	movlw	low _swTimers
  5614  006354  24F3               	addwf	prodl,w,c
  5615  006356  6ED9               	movwf	fsr2l,c
  5616  006358  0E03               	movlw	high _swTimers
  5617  00635A  20F4               	addwfc	prodh,w,c
  5618  00635C  6EDA               	movwf	fsr2h,c
  5619  00635E  50DE               	movf	postinc2,w,c
  5620  006360  10DE               	iorwf	postinc2,w,c
  5621  006362  B4D8               	btfsc	status,2,c
  5622  006364  D02B               	goto	l278
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;sw_timer.c: 275: {
  5626                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  5627  006366  8EF2               	bsf	intcon,7,c	;volatile
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  5631  006368  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  5632  00636A  0D08               	mullw	8
  5633  00636C  0E05               	movlw	5
  5634  00636E  26F3               	addwf	prodl,f,c
  5635  006370  0E00               	movlw	0
  5636  006372  22F4               	addwfc	prodh,f,c
  5637  006374  0E00               	movlw	low _swTimers
  5638  006376  24F3               	addwf	prodl,w,c
  5639  006378  6ED9               	movwf	fsr2l,c
  5640  00637A  0E03               	movlw	high _swTimers
  5641  00637C  20F4               	addwfc	prodh,w,c
  5642  00637E  6EDA               	movwf	fsr2h,c
  5643  006380  50DF               	movf	indf2,w,c
  5644  006382  6EE6               	movwf	postinc1,c
  5645  006384  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  5646  006386  0D08               	mullw	8
  5647  006388  0E06               	movlw	6
  5648  00638A  26F3               	addwf	prodl,f,c
  5649  00638C  0E00               	movlw	0
  5650  00638E  22F4               	addwfc	prodh,f,c
  5651  006390  0E00               	movlw	low _swTimers
  5652  006392  24F3               	addwf	prodl,w,c
  5653  006394  6ED9               	movwf	fsr2l,c
  5654  006396  0E03               	movlw	high _swTimers
  5655  006398  20F4               	addwfc	prodh,w,c
  5656  00639A  6EDA               	movwf	fsr2h,c
  5657  00639C  CFDE F0DA          	movff	postinc2,??_SwTimersExecute
  5658  0063A0  CFDD F0DB          	movff	postdec2,??_SwTimersExecute+1
  5659  0063A4  D801               	call	u21788
  5660  0063A6  D009               	goto	u21789
  5661  0063A8                     u21788:
  5662  0063A8  0005               	push	
  5663  0063AA  6EFA               	movwf	pclath,c
  5664  0063AC  51DA               	movf	??_SwTimersExecute& (0+255),w,b
  5665  0063AE  6EFD               	movwf	tosl,c
  5666  0063B0  51DB               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  5667  0063B2  6EFE               	movwf	tosh,c
  5668  0063B4  6AFF               	clrf	tosu,c
  5669  0063B6  50FA               	movf	pclath,w,c
  5670  0063B8  0012               	return		;indir
  5671  0063BA                     u21789:
  5672                           
  5673                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  5674  0063BA  9EF2               	bcf	intcon,7,c	;volatile
  5675  0063BC                     l278:
  5676  0063BC  0100               	movlb	0	; () banked
  5677  0063BE  2BDE               	incf	SwTimersExecute@i& (0+255),f,b
  5678  0063C0                     l274:
  5679                           
  5680                           ; BSR set to: 0
  5681                           
  5682                           ; BSR set to: 0
  5683  0063C0  51FB               	movf	_allocatedTimers& (0+255),w,b	;volatile
  5684  0063C2  5DDE               	subwf	SwTimersExecute@i& (0+255),w,b
  5685  0063C4  A0D8               	btfss	status,0,c
  5686  0063C6  D794               	goto	l275
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;sw_timer.c: 279: }
  5690                           ;sw_timer.c: 280: }
  5691                           ;sw_timer.c: 281: }
  5692                           ;sw_timer.c: 282: }
  5693                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  5694  0063C8  8EF2               	bsf	intcon,7,c	;volatile
  5695                           
  5696                           ; BSR set to: 0
  5697  0063CA  0012               	return		;funcret
  5698  0063CC                     __end_of_SwTimersExecute:
  5699                           	opt stack 0
  5700                           tosu	equ	0xFFF
  5701                           tosh	equ	0xFFE
  5702                           tosl	equ	0xFFD
  5703                           pclath	equ	0xFFA
  5704                           tblptru	equ	0xFF8
  5705                           tblptrh	equ	0xFF7
  5706                           tblptrl	equ	0xFF6
  5707                           tablat	equ	0xFF5
  5708                           prodh	equ	0xFF4
  5709                           prodl	equ	0xFF3
  5710                           intcon	equ	0xFF2
  5711                           intcon2	equ	0xFF1
  5712                           intcon3	equ	0xFF0
  5713                           postinc0	equ	0xFEE
  5714                           wreg	equ	0xFE8
  5715                           postinc1	equ	0xFE6
  5716                           indf2	equ	0xFDF
  5717                           postinc2	equ	0xFDE
  5718                           postdec2	equ	0xFDD
  5719                           fsr2h	equ	0xFDA
  5720                           fsr2l	equ	0xFD9
  5721                           status	equ	0xFD8
  5722                           
  5723 ;; *************** function _DutyCycleCallback *****************
  5724 ;; Defined at:
  5725 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  param           1  [STACK] unsigned char 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  minim           4  [STACK] unsigned long 
  5730 ;;  i               1  [STACK] unsigned char 
  5731 ;;  found           1  [STACK] unsigned char 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1  [STACK] void 
  5734 ;; Registers used:
  5735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, prodl, prodh, cstack
  5736 ;; Tracked objects:
  5737 ;;		On entry : 3F/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;Total ram usage:        0 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:   11
  5748 ;; This function calls:
  5749 ;;		_SwTimerSetTimeout
  5750 ;;		_SwTimerStart
  5751 ;;		___lldiv
  5752 ;; This function is called by:
  5753 ;;		_SetCallbackSoftwareTimers
  5754 ;;		_SwTimersExecute
  5755 ;; This function uses a reentrant model
  5756 ;;
  5757                           
  5758                           	psect	text37
  5759  002C48                     __ptext37:
  5760                           	opt stack 0
  5761  002C48                     _DutyCycleCallback:
  5762                           	opt stack 0
  5763                           
  5764                           ; BSR set to: 0
  5765                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
  5766  002C48  0E0A               	movlw	10
  5767  002C4A  26E1               	addwf	fsr1l,f,c
  5768  002C4C  0E00               	movlw	0
  5769  002C4E  22E2               	addwfc	fsr1h,f,c
  5770                           
  5771                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  5772                           
  5773                           ;incstack = 0
  5774  002C50  0EFF               	movlw	255
  5775  002C52  6E50               	movwf	btemp+8,c
  5776  002C54  0EFF               	movlw	255
  5777  002C56  6E51               	movwf	btemp+9,c
  5778  002C58  0EFF               	movlw	255
  5779  002C5A  6E52               	movwf	btemp+10,c
  5780  002C5C  0EFF               	movlw	255
  5781  002C5E  6E53               	movwf	btemp+11,c
  5782                           
  5783                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5784  002C60  0EFA               	movlw	-6
  5785  002C62  C050  FFE3         	movff	btemp+8,plusw1
  5786  002C66  0EFB               	movlw	-5
  5787  002C68  C051  FFE3         	movff	btemp+9,plusw1
  5788  002C6C  0EFC               	movlw	-4
  5789  002C6E  C052  FFE3         	movff	btemp+10,plusw1
  5790  002C72  0EFD               	movlw	-3
  5791  002C74  C053  FFE3         	movff	btemp+11,plusw1
  5792                           
  5793                           ;lorawan_eu.c: 1224: bool found = 0;
  5794                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5795  002C78  0EFF               	movlw	-1
  5796  002C7A  6AE3               	clrf	plusw1,c
  5797                           
  5798                           ;lorawan_eu.c: 1225: uint8_t i;
  5799                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  5800                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5801  002C7C  0EFE               	movlw	-2
  5802  002C7E  6AE3               	clrf	plusw1,c
  5803  002C80                     l16285:
  5804                           
  5805                           ;lorawan_eu.c: 1228: {
  5806                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
  5807                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5808  002C80  0EFE               	movlw	-2
  5809  002C82  50E3               	movf	plusw1,w,c
  5810  002C84  0D0E               	mullw	14
  5811  002C86  0E04               	movlw	low (_Channels+4)
  5812  002C88  24F3               	addwf	prodl,w,c
  5813  002C8A  6ED9               	movwf	fsr2l,c
  5814  002C8C  0E04               	movlw	high (_Channels+4)
  5815  002C8E  20F4               	addwfc	prodh,w,c
  5816  002C90  6EDA               	movwf	fsr2h,c
  5817  002C92  04DE               	decf	postinc2,w,c
  5818  002C94  A4D8               	btfss	status,2,c
  5819  002C96  D0AD               	goto	l16303
  5820                           
  5821                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5822  002C98  0EFE               	movlw	-2
  5823  002C9A  50E3               	movf	plusw1,w,c
  5824  002C9C  0D0E               	mullw	14
  5825  002C9E  0E08               	movlw	low (_Channels+8)
  5826  002CA0  24F3               	addwf	prodl,w,c
  5827  002CA2  6ED9               	movwf	fsr2l,c
  5828  002CA4  0E04               	movlw	high (_Channels+8)
  5829  002CA6  20F4               	addwfc	prodh,w,c
  5830  002CA8  6EDA               	movwf	fsr2h,c
  5831  002CAA  50DE               	movf	postinc2,w,c
  5832  002CAC  10DE               	iorwf	postinc2,w,c
  5833  002CAE  10DE               	iorwf	postinc2,w,c
  5834  002CB0  10DE               	iorwf	postinc2,w,c
  5835  002CB2  B4D8               	btfsc	status,2,c
  5836  002CB4  D09E               	goto	l16303
  5837                           
  5838                           ;lorawan_eu.c: 1231: {
  5839                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
  5840                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5841  002CB6  0EFE               	movlw	-2
  5842  002CB8  50E3               	movf	plusw1,w,c
  5843  002CBA  0D0E               	mullw	14
  5844  002CBC  0E08               	movlw	low (_Channels+8)
  5845  002CBE  24F3               	addwf	prodl,w,c
  5846  002CC0  6ED9               	movwf	fsr2l,c
  5847  002CC2  0E04               	movlw	high (_Channels+8)
  5848  002CC4  20F4               	addwfc	prodh,w,c
  5849  002CC6  6EDA               	movwf	fsr2h,c
  5850  002CC8  50DE               	movf	postinc2,w,c
  5851  002CCA  0102               	movlb	2	; () banked
  5852  002CCC  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  5853  002CCE  50DE               	movf	postinc2,w,c
  5854  002CD0  59C9               	subwfb	(_loRa+201)& (0+255),w,b
  5855  002CD2  50DE               	movf	postinc2,w,c
  5856  002CD4  59CA               	subwfb	(_loRa+202)& (0+255),w,b
  5857  002CD6  50DE               	movf	postinc2,w,c
  5858  002CD8  59CB               	subwfb	(_loRa+203)& (0+255),w,b
  5859  002CDA  B0D8               	btfsc	status,0,c
  5860  002CDC  D02F               	goto	l16293
  5861                           
  5862                           ; BSR set to: 2
  5863                           ;lorawan_eu.c: 1233: {
  5864                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
  5865                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5866  002CDE  0EFE               	movlw	-2
  5867  002CE0  50E3               	movf	plusw1,w,c
  5868  002CE2  0D0E               	mullw	14
  5869  002CE4  0E08               	movlw	low (_Channels+8)
  5870  002CE6  24F3               	addwf	prodl,w,c
  5871  002CE8  6ED9               	movwf	fsr2l,c
  5872  002CEA  0E04               	movlw	high (_Channels+8)
  5873  002CEC  20F4               	addwfc	prodh,w,c
  5874  002CEE  6EDA               	movwf	fsr2h,c
  5875  002CF0  CFDE F050          	movff	postinc2,btemp+8
  5876  002CF4  CFDE F051          	movff	postinc2,btemp+9
  5877  002CF8  CFDE F052          	movff	postinc2,btemp+10
  5878  002CFC  CFDE F053          	movff	postinc2,btemp+11
  5879  002D00  51C8               	movf	(_loRa+200)& (0+255),w,b
  5880  002D02  5C50               	subwf	btemp+8,w,c
  5881  002D04  6E4C               	movwf	btemp+4,c
  5882  002D06  51C9               	movf	(_loRa+201)& (0+255),w,b
  5883  002D08  5851               	subwfb	btemp+9,w,c
  5884  002D0A  6E4D               	movwf	btemp+5,c
  5885  002D0C  51CA               	movf	(_loRa+202)& (0+255),w,b
  5886  002D0E  5852               	subwfb	btemp+10,w,c
  5887  002D10  6E4E               	movwf	btemp+6,c
  5888  002D12  51CB               	movf	(_loRa+203)& (0+255),w,b
  5889  002D14  5853               	subwfb	btemp+11,w,c
  5890  002D16  6E4F               	movwf	btemp+7,c
  5891                           
  5892                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5893  002D18  0EFE               	movlw	-2
  5894  002D1A  50E3               	movf	plusw1,w,c
  5895  002D1C  0D0E               	mullw	14
  5896  002D1E  0E08               	movlw	low (_Channels+8)
  5897  002D20  24F3               	addwf	prodl,w,c
  5898  002D22  6ED9               	movwf	fsr2l,c
  5899  002D24  0E04               	movlw	high (_Channels+8)
  5900  002D26  20F4               	addwfc	prodh,w,c
  5901  002D28  6EDA               	movwf	fsr2h,c
  5902  002D2A  C04C  FFDE         	movff	btemp+4,postinc2
  5903  002D2E  C04D  FFDE         	movff	btemp+5,postinc2
  5904  002D32  C04E  FFDE         	movff	btemp+6,postinc2
  5905  002D36  C04F  FFDE         	movff	btemp+7,postinc2
  5906                           
  5907                           ;lorawan_eu.c: 1235: }
  5908  002D3A  D00D               	goto	l16295
  5909  002D3C                     l16293:
  5910                           
  5911                           ; BSR set to: 2
  5912                           ;lorawan_eu.c: 1236: else
  5913                           ;lorawan_eu.c: 1237: {
  5914                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
  5915                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5916  002D3C  0EFE               	movlw	-2
  5917  002D3E  50E3               	movf	plusw1,w,c
  5918  002D40  0D0E               	mullw	14
  5919  002D42  0E08               	movlw	low (_Channels+8)
  5920  002D44  24F3               	addwf	prodl,w,c
  5921  002D46  6ED9               	movwf	fsr2l,c
  5922  002D48  0E04               	movlw	high (_Channels+8)
  5923  002D4A  20F4               	addwfc	prodh,w,c
  5924  002D4C  6EDA               	movwf	fsr2h,c
  5925  002D4E  6ADE               	clrf	postinc2,c
  5926  002D50  6ADE               	clrf	postinc2,c
  5927  002D52  6ADE               	clrf	postinc2,c
  5928  002D54  6ADD               	clrf	postdec2,c
  5929  002D56                     l16295:
  5930                           
  5931                           ; BSR set to: 2
  5932                           ;lorawan_eu.c: 1239: }
  5933                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
  5934                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5935  002D56  0EFE               	movlw	-2
  5936  002D58  50E3               	movf	plusw1,w,c
  5937  002D5A  0D0E               	mullw	14
  5938  002D5C  0E08               	movlw	low (_Channels+8)
  5939  002D5E  24F3               	addwf	prodl,w,c
  5940  002D60  6ED9               	movwf	fsr2l,c
  5941  002D62  0E04               	movlw	high (_Channels+8)
  5942  002D64  20F4               	addwfc	prodh,w,c
  5943  002D66  6EDA               	movwf	fsr2h,c
  5944                           
  5945                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5946  002D68  0EFA               	movlw	-6
  5947  002D6A  CFE3 F048          	movff	plusw1,btemp
  5948  002D6E  50DE               	movf	postinc2,w,c
  5949  002D70  5C48               	subwf	btemp,w,c
  5950  002D72  0EFB               	movlw	-5
  5951  002D74  CFE3 F048          	movff	plusw1,btemp
  5952  002D78  50DE               	movf	postinc2,w,c
  5953  002D7A  5848               	subwfb	btemp,w,c
  5954  002D7C  0EFC               	movlw	-4
  5955  002D7E  CFE3 F048          	movff	plusw1,btemp
  5956  002D82  50DE               	movf	postinc2,w,c
  5957  002D84  5848               	subwfb	btemp,w,c
  5958  002D86  0EFD               	movlw	-3
  5959  002D88  CFE3 F048          	movff	plusw1,btemp
  5960  002D8C  50DE               	movf	postinc2,w,c
  5961  002D8E  5848               	subwfb	btemp,w,c
  5962  002D90  A0D8               	btfss	status,0,c
  5963  002D92  D02F               	goto	l16303
  5964                           
  5965                           ; BSR set to: 2
  5966                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5967  002D94  0EFE               	movlw	-2
  5968  002D96  50E3               	movf	plusw1,w,c
  5969  002D98  0D0E               	mullw	14
  5970  002D9A  0E08               	movlw	low (_Channels+8)
  5971  002D9C  24F3               	addwf	prodl,w,c
  5972  002D9E  6ED9               	movwf	fsr2l,c
  5973  002DA0  0E04               	movlw	high (_Channels+8)
  5974  002DA2  20F4               	addwfc	prodh,w,c
  5975  002DA4  6EDA               	movwf	fsr2h,c
  5976  002DA6  50DE               	movf	postinc2,w,c
  5977  002DA8  10DE               	iorwf	postinc2,w,c
  5978  002DAA  10DE               	iorwf	postinc2,w,c
  5979  002DAC  10DE               	iorwf	postinc2,w,c
  5980  002DAE  B4D8               	btfsc	status,2,c
  5981  002DB0  D020               	goto	l16303
  5982                           
  5983                           ; BSR set to: 2
  5984                           ;lorawan_eu.c: 1241: {
  5985                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  5986                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5987  002DB2  0EFE               	movlw	-2
  5988  002DB4  50E3               	movf	plusw1,w,c
  5989  002DB6  0D0E               	mullw	14
  5990  002DB8  0E08               	movlw	low (_Channels+8)
  5991  002DBA  24F3               	addwf	prodl,w,c
  5992  002DBC  6ED9               	movwf	fsr2l,c
  5993  002DBE  0E04               	movlw	high (_Channels+8)
  5994  002DC0  20F4               	addwfc	prodh,w,c
  5995  002DC2  6EDA               	movwf	fsr2h,c
  5996  002DC4  CFDE F050          	movff	postinc2,btemp+8
  5997  002DC8  CFDE F051          	movff	postinc2,btemp+9
  5998  002DCC  CFDE F052          	movff	postinc2,btemp+10
  5999  002DD0  CFDE F053          	movff	postinc2,btemp+11
  6000                           
  6001                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6002  002DD4  0EFA               	movlw	-6
  6003  002DD6  C050  FFE3         	movff	btemp+8,plusw1
  6004  002DDA  0EFB               	movlw	-5
  6005  002DDC  C051  FFE3         	movff	btemp+9,plusw1
  6006  002DE0  0EFC               	movlw	-4
  6007  002DE2  C052  FFE3         	movff	btemp+10,plusw1
  6008  002DE6  0EFD               	movlw	-3
  6009  002DE8  C053  FFE3         	movff	btemp+11,plusw1
  6010                           
  6011                           ; BSR set to: 2
  6012                           ;lorawan_eu.c: 1243: found = 1;
  6013                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  6014  002DEC  0EFF               	movlw	-1
  6015  002DEE  6AE3               	clrf	plusw1,c
  6016  002DF0  2AE3               	incf	plusw1,f,c
  6017  002DF2                     l16303:
  6018                           
  6019                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6020  002DF2  0EFE               	movlw	-2
  6021  002DF4  2AE3               	incf	plusw1,f,c
  6022                           
  6023                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6024  002DF6  0EFE               	movlw	-2
  6025  002DF8  CFE3 F048          	movff	plusw1,btemp
  6026  002DFC  0E0F               	movlw	15
  6027  002DFE  6448               	cpfsgt	btemp,c
  6028  002E00  D73F               	goto	l16285
  6029                           
  6030                           ;lorawan_eu.c: 1244: }
  6031                           ;lorawan_eu.c: 1245: }
  6032                           ;lorawan_eu.c: 1246: }
  6033                           ;lorawan_eu.c: 1247: if ( found == 1 )
  6034                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  6035  002E02  0EFF               	movlw	-1
  6036  002E04  04E3               	decf	plusw1,w,c
  6037  002E06  A4D8               	btfss	status,2,c
  6038  002E08  D09D               	goto	l1306
  6039                           
  6040                           ;lorawan_eu.c: 1248: {
  6041                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  6042                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6043  002E0A  50E1               	movf	fsr1l,w,c
  6044  002E0C  0FFA               	addlw	-6
  6045  002E0E  6ED9               	movwf	fsr2l,c
  6046  002E10  50E2               	movf	fsr1h,w,c
  6047  002E12  6EDA               	movwf	fsr2h,c
  6048  002E14  0EFF               	movlw	255
  6049  002E16  22DA               	addwfc	fsr2h,f,c
  6050  002E18  CFDE F2C8          	movff	postinc2,_loRa+200
  6051  002E1C  CFDE F2C9          	movff	postinc2,_loRa+201
  6052  002E20  CFDE F2CA          	movff	postinc2,_loRa+202
  6053  002E24  CFDE F2CB          	movff	postinc2,_loRa+203
  6054                           
  6055                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  6056                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6057  002E28  0EFD               	movlw	-3
  6058  002E2A  50E3               	movf	plusw1,w,c
  6059  002E2C  E10E               	bnz	u19660
  6060  002E2E  0EFA               	movlw	-6
  6061  002E30  28E3               	incf	plusw1,w,c
  6062  002E32  0EFB               	movlw	-5
  6063  002E34  CFE3 F048          	movff	plusw1,btemp
  6064  002E38  0EFF               	movlw	255
  6065  002E3A  5A48               	subwfb	btemp,f,c
  6066  002E3C  0EFC               	movlw	-4
  6067  002E3E  CFE3 F048          	movff	plusw1,btemp
  6068  002E42  0E0F               	movlw	15
  6069  002E44  5A48               	subwfb	btemp,f,c
  6070  002E46  A0D8               	btfss	status,0,c
  6071  002E48  D02B               	goto	l16315
  6072  002E4A                     u19660:
  6073                           
  6074                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6075  002E4A  50E1               	movf	fsr1l,w,c
  6076  002E4C  0FFA               	addlw	-6
  6077  002E4E  6ED9               	movwf	fsr2l,c
  6078  002E50  50E2               	movf	fsr1h,w,c
  6079  002E52  6EDA               	movwf	fsr2h,c
  6080  002E54  0EFF               	movlw	255
  6081  002E56  22DA               	addwfc	fsr2h,f,c
  6082  002E58  CFDE F060          	movff	postinc2,___lldiv@dividend
  6083  002E5C  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  6084  002E60  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  6085  002E64  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  6086  002E68  0E7D               	movlw	125
  6087  002E6A  0100               	movlb	0	; () banked
  6088  002E6C  6F64               	movwf	___lldiv@divisor& (0+255),b
  6089  002E6E  0E00               	movlw	0
  6090  002E70  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  6091  002E72  0E00               	movlw	0
  6092  002E74  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  6093  002E76  0E00               	movlw	0
  6094  002E78  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  6095  002E7A  ECB4  F039         	call	___lldiv	;wreg free
  6096  002E7E  C060  F050         	movff	?___lldiv,btemp+8
  6097  002E82  C061  F051         	movff	?___lldiv+1,btemp+9
  6098  002E86  C062  F052         	movff	?___lldiv+2,btemp+10
  6099  002E8A  C063  F053         	movff	?___lldiv+3,btemp+11
  6100  002E8E  0E0C               	movlw	12
  6101  002E90                     u19675:
  6102  002E90  90D8               	bcf	status,0,c
  6103  002E92  3650               	rlcf	btemp+8,f,c
  6104  002E94  3651               	rlcf	btemp+9,f,c
  6105  002E96  3652               	rlcf	btemp+10,f,c
  6106  002E98  3653               	rlcf	btemp+11,f,c
  6107  002E9A  2EE8               	decfsz	wreg,f,c
  6108  002E9C  D7F9               	goto	u19675
  6109  002E9E  D02F               	goto	L1
  6110  002EA0                     l16315:
  6111                           
  6112                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6113  002EA0  0EFA               	movlw	-6
  6114  002EA2  CFE3 F050          	movff	plusw1,btemp+8
  6115  002EA6  0EFB               	movlw	-5
  6116  002EA8  CFE3 F051          	movff	plusw1,btemp+9
  6117  002EAC  0EFC               	movlw	-4
  6118  002EAE  CFE3 F052          	movff	plusw1,btemp+10
  6119  002EB2  0EFD               	movlw	-3
  6120  002EB4  CFE3 F053          	movff	plusw1,btemp+11
  6121  002EB8  0E0C               	movlw	12
  6122  002EBA                     u19685:
  6123  002EBA  90D8               	bcf	status,0,c
  6124  002EBC  3650               	rlcf	btemp+8,f,c
  6125  002EBE  3651               	rlcf	btemp+9,f,c
  6126  002EC0  3652               	rlcf	btemp+10,f,c
  6127  002EC2  3653               	rlcf	btemp+11,f,c
  6128  002EC4  2EE8               	decfsz	wreg,f,c
  6129  002EC6  D7F9               	goto	u19685
  6130  002EC8  C050  F060         	movff	btemp+8,___lldiv@dividend
  6131  002ECC  C051  F061         	movff	btemp+9,___lldiv@dividend+1
  6132  002ED0  C052  F062         	movff	btemp+10,___lldiv@dividend+2
  6133  002ED4  C053  F063         	movff	btemp+11,___lldiv@dividend+3
  6134  002ED8  0E7D               	movlw	125
  6135  002EDA  0100               	movlb	0	; () banked
  6136  002EDC  6F64               	movwf	___lldiv@divisor& (0+255),b
  6137  002EDE  0E00               	movlw	0
  6138  002EE0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  6139  002EE2  0E00               	movlw	0
  6140  002EE4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  6141  002EE6  0E00               	movlw	0
  6142  002EE8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  6143  002EEA  ECB4  F039         	call	___lldiv	;wreg free
  6144  002EEE  C060  F050         	movff	?___lldiv,btemp+8
  6145  002EF2  C061  F051         	movff	?___lldiv+1,btemp+9
  6146  002EF6  C062  F052         	movff	?___lldiv+2,btemp+10
  6147  002EFA  C063  F053         	movff	?___lldiv+3,btemp+11
  6148  002EFE                     L1:
  6149                           
  6150                           ;stkvar	_DutyCycleCallback$1852 @ sp[(-10)+0]
  6151  002EFE  0EF6               	movlw	-10
  6152  002F00  C050  FFE3         	movff	btemp+8,plusw1
  6153  002F04  0EF7               	movlw	-9
  6154  002F06  C051  FFE3         	movff	btemp+9,plusw1
  6155  002F0A  0EF8               	movlw	-8
  6156  002F0C  C052  FFE3         	movff	btemp+10,plusw1
  6157  002F10  0EF9               	movlw	-7
  6158  002F12  C053  FFE3         	movff	btemp+11,plusw1
  6159                           
  6160                           ;stkvar	_DutyCycleCallback$1852 @ sp[(-10)+0]
  6161  002F16  50E1               	movf	fsr1l,w,c
  6162  002F18  0FF6               	addlw	-10
  6163  002F1A  6ED9               	movwf	fsr2l,c
  6164  002F1C  50E2               	movf	fsr1h,w,c
  6165  002F1E  6EDA               	movwf	fsr2h,c
  6166  002F20  0EFF               	movlw	255
  6167  002F22  22DA               	addwfc	fsr2h,f,c
  6168  002F24  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  6169  002F28  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6170  002F2C  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6171  002F30  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6172  002F34  0102               	movlb	2	; () banked
  6173  002F36  51E9               	movf	(_loRa+233)& (0+255),w,b
  6174  002F38  EC23  F041         	call	_SwTimerSetTimeout
  6175                           
  6176                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  6177  002F3C  0102               	movlb	2	; () banked
  6178  002F3E  51E9               	movf	(_loRa+233)& (0+255),w,b
  6179  002F40  EC3B  F037         	call	_SwTimerStart
  6180  002F44                     l1306:
  6181                           
  6182                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  6183  002F44  0EF5               	movlw	245
  6184  002F46  26E1               	addwf	fsr1l,f,c
  6185  002F48  0EFF               	movlw	255
  6186  002F4A  22E2               	addwfc	fsr1h,f,c
  6187  002F4C  0012               	return		;funcret
  6188  002F4E                     __end_of_DutyCycleCallback:
  6189                           	opt stack 0
  6190                           tosu	equ	0xFFF
  6191                           tosh	equ	0xFFE
  6192                           tosl	equ	0xFFD
  6193                           pclath	equ	0xFFA
  6194                           tblptru	equ	0xFF8
  6195                           tblptrh	equ	0xFF7
  6196                           tblptrl	equ	0xFF6
  6197                           tablat	equ	0xFF5
  6198                           prodh	equ	0xFF4
  6199                           prodl	equ	0xFF3
  6200                           intcon	equ	0xFF2
  6201                           intcon2	equ	0xFF1
  6202                           intcon3	equ	0xFF0
  6203                           postinc0	equ	0xFEE
  6204                           wreg	equ	0xFE8
  6205                           postinc1	equ	0xFE6
  6206                           plusw1	equ	0xFE3
  6207                           fsr1h	equ	0xFE2
  6208                           fsr1l	equ	0xFE1
  6209                           indf2	equ	0xFDF
  6210                           postinc2	equ	0xFDE
  6211                           postdec2	equ	0xFDD
  6212                           fsr2h	equ	0xFDA
  6213                           fsr2l	equ	0xFD9
  6214                           status	equ	0xFD8
  6215                           
  6216 ;; *************** function _UpdateJoinSuccessState *****************
  6217 ;; Defined at:
  6218 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  param           1  [STACK] unsigned char 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;		None
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  1  [STACK] void 
  6225 ;; Registers used:
  6226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, pro
      +dh, cstack
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;Total ram usage:        0 bytes
  6237 ;; Hardware stack levels used:    1
  6238 ;; Hardware stack levels required when called:   11
  6239 ;; This function calls:
  6240 ;;		_RxJoinResponse
  6241 ;;		_SwTimerSetTimeout
  6242 ;;		_SwTimerStart
  6243 ;;		___lldiv
  6244 ;; This function is called by:
  6245 ;;		_SetCallbackSoftwareTimers
  6246 ;;		_LORAWAN_RxDone
  6247 ;;		_SwTimersExecute
  6248 ;; This function uses a reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text38
  6252  00563E                     __ptext38:
  6253                           	opt stack 0
  6254  00563E                     _UpdateJoinSuccessState:
  6255                           	opt stack 0
  6256                           
  6257                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6258  00563E  52E6               	movf	postinc1,f,c
  6259  005640  52E6               	movf	postinc1,f,c
  6260  005642  52E6               	movf	postinc1,f,c
  6261  005644  52E6               	movf	postinc1,f,c
  6262                           
  6263                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  6264                           
  6265                           ;incstack = 0
  6266  005646  0102               	movlb	2	; () banked
  6267  005648  9500               	bcf	_loRa& (0+255),2,b
  6268                           
  6269                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  6270  00564A  8902               	bsf	(_loRa+2)& (0+255),4,b
  6271                           
  6272                           ; BSR set to: 2
  6273                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  6274  00564C  0EF0               	movlw	-16
  6275  00564E  1702               	andwf	(_loRa+2)& (0+255),f,b
  6276                           
  6277                           ; BSR set to: 2
  6278                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  6279  005650  6BD0               	clrf	(_loRa+208)& (0+255),b
  6280  005652  6BD1               	clrf	(_loRa+209)& (0+255),b
  6281                           
  6282                           ; BSR set to: 2
  6283                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  6284  005654  6BEE               	clrf	(_loRa+238)& (0+255),b
  6285                           
  6286                           ; BSR set to: 2
  6287                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  6288  005656  A503               	btfss	(_loRa+3)& (0+255),2,b
  6289  005658  D07B               	goto	l15203
  6290                           
  6291                           ; BSR set to: 2
  6292                           ;lorawan.c: 1052: {
  6293                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6294  00565A  51CF               	movf	(_loRa+207)& (0+255),w,b
  6295  00565C  E107               	bnz	u17610
  6296  00565E  29CC               	incf	(_loRa+204)& (0+255),w,b
  6297  005660  0EFF               	movlw	255
  6298  005662  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6299  005664  0E0F               	movlw	15
  6300  005666  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6301  005668  A0D8               	btfss	status,0,c
  6302  00566A  D024               	goto	l15197
  6303  00566C                     u17610:
  6304                           
  6305                           ; BSR set to: 2
  6306  00566C  C2CC  F060         	movff	_loRa+204,___lldiv@dividend
  6307  005670  C2CD  F061         	movff	_loRa+205,___lldiv@dividend+1
  6308  005674  C2CE  F062         	movff	_loRa+206,___lldiv@dividend+2
  6309  005678  C2CF  F063         	movff	_loRa+207,___lldiv@dividend+3
  6310  00567C  0E7D               	movlw	125
  6311  00567E  0100               	movlb	0	; () banked
  6312  005680  6F64               	movwf	___lldiv@divisor& (0+255),b
  6313  005682  0E00               	movlw	0
  6314  005684  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  6315  005686  0E00               	movlw	0
  6316  005688  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  6317  00568A  0E00               	movlw	0
  6318  00568C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  6319  00568E  ECB4  F039         	call	___lldiv	;wreg free
  6320  005692  C060  F050         	movff	?___lldiv,btemp+8
  6321  005696  C061  F051         	movff	?___lldiv+1,btemp+9
  6322  00569A  C062  F052         	movff	?___lldiv+2,btemp+10
  6323  00569E  C063  F053         	movff	?___lldiv+3,btemp+11
  6324  0056A2  0E0C               	movlw	12
  6325  0056A4                     u17625:
  6326  0056A4  90D8               	bcf	status,0,c
  6327  0056A6  3650               	rlcf	btemp+8,f,c
  6328  0056A8  3651               	rlcf	btemp+9,f,c
  6329  0056AA  3652               	rlcf	btemp+10,f,c
  6330  0056AC  3653               	rlcf	btemp+11,f,c
  6331  0056AE  2EE8               	decfsz	wreg,f,c
  6332  0056B0  D7F9               	goto	u17625
  6333  0056B2  D02B               	goto	L2
  6334  0056B4                     l15197:
  6335                           
  6336                           ; BSR set to: 2
  6337  0056B4  C2CC  F050         	movff	_loRa+204,btemp+8
  6338  0056B8  C2CD  F051         	movff	_loRa+205,btemp+9
  6339  0056BC  C2CE  F052         	movff	_loRa+206,btemp+10
  6340  0056C0  C2CF  F053         	movff	_loRa+207,btemp+11
  6341  0056C4  0E0C               	movlw	12
  6342  0056C6                     u17635:
  6343  0056C6  90D8               	bcf	status,0,c
  6344  0056C8  3650               	rlcf	btemp+8,f,c
  6345  0056CA  3651               	rlcf	btemp+9,f,c
  6346  0056CC  3652               	rlcf	btemp+10,f,c
  6347  0056CE  3653               	rlcf	btemp+11,f,c
  6348  0056D0  2EE8               	decfsz	wreg,f,c
  6349  0056D2  D7F9               	goto	u17635
  6350  0056D4  C050  F060         	movff	btemp+8,___lldiv@dividend
  6351  0056D8  C051  F061         	movff	btemp+9,___lldiv@dividend+1
  6352  0056DC  C052  F062         	movff	btemp+10,___lldiv@dividend+2
  6353  0056E0  C053  F063         	movff	btemp+11,___lldiv@dividend+3
  6354  0056E4  0E7D               	movlw	125
  6355  0056E6  0100               	movlb	0	; () banked
  6356  0056E8  6F64               	movwf	___lldiv@divisor& (0+255),b
  6357  0056EA  0E00               	movlw	0
  6358  0056EC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  6359  0056EE  0E00               	movlw	0
  6360  0056F0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  6361  0056F2  0E00               	movlw	0
  6362  0056F4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  6363  0056F6  ECB4  F039         	call	___lldiv	;wreg free
  6364  0056FA  C060  F050         	movff	?___lldiv,btemp+8
  6365  0056FE  C061  F051         	movff	?___lldiv+1,btemp+9
  6366  005702  C062  F052         	movff	?___lldiv+2,btemp+10
  6367  005706  C063  F053         	movff	?___lldiv+3,btemp+11
  6368  00570A                     L2:
  6369                           
  6370                           ;stkvar	_UpdateJoinSuccessState$2523 @ sp[(-4)+0]
  6371  00570A  0EFC               	movlw	-4
  6372  00570C  C050  FFE3         	movff	btemp+8,plusw1
  6373  005710  0EFD               	movlw	-3
  6374  005712  C051  FFE3         	movff	btemp+9,plusw1
  6375  005716  0EFE               	movlw	-2
  6376  005718  C052  FFE3         	movff	btemp+10,plusw1
  6377  00571C  0EFF               	movlw	-1
  6378  00571E  C053  FFE3         	movff	btemp+11,plusw1
  6379                           
  6380                           ;stkvar	_UpdateJoinSuccessState$2523 @ sp[(-4)+0]
  6381  005722  50E1               	movf	fsr1l,w,c
  6382  005724  0FFC               	addlw	-4
  6383  005726  6ED9               	movwf	fsr2l,c
  6384  005728  50E2               	movf	fsr1h,w,c
  6385  00572A  6EDA               	movwf	fsr2h,c
  6386  00572C  0EFF               	movlw	255
  6387  00572E  22DA               	addwfc	fsr2h,f,c
  6388  005730  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  6389  005734  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6390  005738  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6391  00573C  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6392  005740  0102               	movlb	2	; () banked
  6393  005742  51E7               	movf	(_loRa+231)& (0+255),w,b
  6394  005744  EC23  F041         	call	_SwTimerSetTimeout
  6395                           
  6396                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  6397  005748  0102               	movlb	2	; () banked
  6398  00574A  51E7               	movf	(_loRa+231)& (0+255),w,b
  6399  00574C  EC3B  F037         	call	_SwTimerStart
  6400  005750                     l15203:
  6401                           
  6402                           ;lorawan.c: 1055: }
  6403                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  6404  005750  0101               	movlb	1	; () banked
  6405  005752  5112               	movf	(_rxPayload+2)& (0+255),w,b
  6406  005754  1113               	iorwf	(_rxPayload+3)& (0+255),w,b
  6407  005756  B4D8               	btfsc	status,2,c
  6408  005758  D00C               	goto	u17659
  6409                           
  6410                           ; BSR set to: 1
  6411                           ;lorawan.c: 1058: {
  6412                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  6413  00575A  D801               	call	u17658
  6414  00575C  D00A               	goto	u17659
  6415  00575E                     u17658:
  6416  00575E  0005               	push	
  6417  005760  6EFA               	movwf	pclath,c
  6418  005762  5112               	movf	(_rxPayload+2)& (0+255),w,b
  6419  005764  6EFD               	movwf	tosl,c
  6420  005766  5113               	movf	(_rxPayload+3)& (0+255),w,b
  6421  005768  6EFE               	movwf	tosh,c
  6422  00576A  6AFF               	clrf	tosu,c
  6423  00576C  50FA               	movf	pclath,w,c
  6424  00576E  0E01               	movlw	1
  6425  005770  0012               	return		;indir
  6426  005772                     u17659:
  6427                           
  6428                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6429  005772  0EFB               	movlw	251
  6430  005774  26E1               	addwf	fsr1l,f,c
  6431  005776  0EFF               	movlw	255
  6432  005778  22E2               	addwfc	fsr1h,f,c
  6433  00577A  0012               	return		;funcret
  6434  00577C                     __end_of_UpdateJoinSuccessState:
  6435                           	opt stack 0
  6436                           tosu	equ	0xFFF
  6437                           tosh	equ	0xFFE
  6438                           tosl	equ	0xFFD
  6439                           pclath	equ	0xFFA
  6440                           tblptru	equ	0xFF8
  6441                           tblptrh	equ	0xFF7
  6442                           tblptrl	equ	0xFF6
  6443                           tablat	equ	0xFF5
  6444                           prodh	equ	0xFF4
  6445                           prodl	equ	0xFF3
  6446                           intcon	equ	0xFF2
  6447                           intcon2	equ	0xFF1
  6448                           intcon3	equ	0xFF0
  6449                           postinc0	equ	0xFEE
  6450                           wreg	equ	0xFE8
  6451                           postinc1	equ	0xFE6
  6452                           plusw1	equ	0xFE3
  6453                           fsr1h	equ	0xFE2
  6454                           fsr1l	equ	0xFE1
  6455                           indf2	equ	0xFDF
  6456                           postinc2	equ	0xFDE
  6457                           postdec2	equ	0xFDD
  6458                           fsr2h	equ	0xFDA
  6459                           fsr2l	equ	0xFD9
  6460                           status	equ	0xFD8
  6461                           
  6462 ;; *************** function _AutomaticReplyCallback *****************
  6463 ;; Defined at:
  6464 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;  param           1  [STACK] unsigned char 
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;		None
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  1  [STACK] void 
  6471 ;; Registers used:
  6472 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6473 ;; Tracked objects:
  6474 ;;		On entry : 3F/0
  6475 ;;		On exit  : 3F/2
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6482 ;;Total ram usage:        0 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:   14
  6485 ;; This function calls:
  6486 ;;		_LORAWAN_Send
  6487 ;; This function is called by:
  6488 ;;		_SetCallbackSoftwareTimers
  6489 ;;		_SwTimersExecute
  6490 ;; This function uses a reentrant model
  6491 ;;
  6492                           
  6493                           	psect	text39
  6494  00881A                     __ptext39:
  6495                           	opt stack 0
  6496  00881A                     _AutomaticReplyCallback:
  6497                           	opt stack 14
  6498                           
  6499                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  6500                           
  6501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6502                           ;incstack = 0
  6503  00881A  0EF0               	movlw	-16
  6504  00881C  0102               	movlb	2	; () banked
  6505  00881E  1702               	andwf	(_loRa+2)& (0+255),f,b
  6506                           
  6507                           ; BSR set to: 2
  6508                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  6509  008820  0E00               	movlw	0
  6510  008822  0100               	movlb	0	; () banked
  6511  008824  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
  6512  008826  0E00               	movlw	0
  6513  008828  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
  6514  00882A  0E00               	movlw	0
  6515  00882C  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  6516  00882E  0E00               	movlw	0
  6517  008830  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  6518  008832  0E00               	movlw	0
  6519  008834  EC0C  F034         	call	_LORAWAN_Send
  6520                           
  6521                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  6522  008838  0102               	movlb	2	; () banked
  6523  00883A  9700               	bcf	_loRa& (0+255),3,b
  6524                           
  6525                           ; BSR set to: 2
  6526                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6527  00883C  52E5               	movf	postdec1,f,c
  6528  00883E  0012               	return		;funcret
  6529  008840                     __end_of_AutomaticReplyCallback:
  6530                           	opt stack 0
  6531                           tosu	equ	0xFFF
  6532                           tosh	equ	0xFFE
  6533                           tosl	equ	0xFFD
  6534                           pclath	equ	0xFFA
  6535                           tblptru	equ	0xFF8
  6536                           tblptrh	equ	0xFF7
  6537                           tblptrl	equ	0xFF6
  6538                           tablat	equ	0xFF5
  6539                           prodh	equ	0xFF4
  6540                           prodl	equ	0xFF3
  6541                           intcon	equ	0xFF2
  6542                           intcon2	equ	0xFF1
  6543                           intcon3	equ	0xFF0
  6544                           postinc0	equ	0xFEE
  6545                           wreg	equ	0xFE8
  6546                           postinc1	equ	0xFE6
  6547                           postdec1	equ	0xFE5
  6548                           plusw1	equ	0xFE3
  6549                           fsr1h	equ	0xFE2
  6550                           fsr1l	equ	0xFE1
  6551                           indf2	equ	0xFDF
  6552                           postinc2	equ	0xFDE
  6553                           postdec2	equ	0xFDD
  6554                           fsr2h	equ	0xFDA
  6555                           fsr2l	equ	0xFD9
  6556                           status	equ	0xFD8
  6557                           
  6558 ;; *************** function _AckRetransmissionCallback *****************
  6559 ;; Defined at:
  6560 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  param           1  [STACK] unsigned char 
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;  maximumPacke    1  [STACK] unsigned char 
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1  [STACK] void 
  6567 ;; Registers used:
  6568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6569 ;; Tracked objects:
  6570 ;;		On entry : 3F/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;Total ram usage:        0 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; Hardware stack levels required when called:   13
  6581 ;; This function calls:
  6582 ;;		_FindSmallestDataRate
  6583 ;;		_LORAWAN_GetMaxPayloadSize
  6584 ;;		_RADIO_Transmit
  6585 ;;		_ResetParametersForConfirmedTransmission
  6586 ;;		_RxData
  6587 ;;		_SelectChannelForTransmission
  6588 ;;		_UpdateRetransmissionAckTimeoutState
  6589 ;; This function is called by:
  6590 ;;		_SetCallbackSoftwareTimers
  6591 ;;		_SwTimersExecute
  6592 ;; This function uses a reentrant model
  6593 ;;
  6594                           
  6595                           	psect	text40
  6596  005AFA                     __ptext40:
  6597                           	opt stack 0
  6598  005AFA                     _AckRetransmissionCallback:
  6599                           	opt stack 0
  6600                           
  6601                           ; BSR set to: 2
  6602                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6603  005AFA  52E6               	movf	postinc1,f,c
  6604                           
  6605                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  6606                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  6607                           
  6608                           ;incstack = 0
  6609  005AFC  0102               	movlb	2	; () banked
  6610  005AFE  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6611  005B00  D086               	goto	l16421
  6612                           
  6613                           ; BSR set to: 2
  6614                           ;lorawan.c: 939: {
  6615                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  6616  005B02  51D9               	movf	(_loRa+217)& (0+255),w,b
  6617  005B04  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6618  005B06  A0D8               	btfss	status,0,c
  6619  005B08  D061               	goto	l16411
  6620                           
  6621                           ; BSR set to: 2
  6622                           ;lorawan.c: 941: {
  6623                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  6624  005B0A  EC2C  F03D         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  6625  005B0E  6E53               	movwf	btemp+11,c
  6626  005B10  0E0D               	movlw	13
  6627  005B12  2653               	addwf	btemp+11,f,c
  6628                           
  6629                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6630  005B14  0EFF               	movlw	-1
  6631  005B16  C053  FFE3         	movff	btemp+11,plusw1
  6632                           
  6633                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  6634                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6635  005B1A  0EFF               	movlw	-1
  6636  005B1C  50E3               	movf	plusw1,w,c
  6637  005B1E  6E49               	movwf	btemp+1,c
  6638  005B20  6A4A               	clrf	btemp+2,c
  6639  005B22  0102               	movlb	2	; () banked
  6640  005B24  51D4               	movf	(_loRa+212)& (0+255),w,b
  6641  005B26  5C49               	subwf	btemp+1,w,c
  6642  005B28  51D5               	movf	(_loRa+213)& (0+255),w,b
  6643  005B2A  584A               	subwfb	btemp+2,w,c
  6644  005B2C  A0D8               	btfss	status,0,c
  6645  005B2E  D039               	goto	l16405
  6646                           
  6647                           ; BSR set to: 2
  6648                           ;lorawan.c: 946: {
  6649                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  6650  005B30  0E01               	movlw	1
  6651  005B32  EC60  F03B         	call	_SelectChannelForTransmission
  6652  005B36  0900               	iorlw	0
  6653  005B38  A4D8               	btfss	status,2,c
  6654  005B3A  D030               	goto	l16401
  6655                           
  6656                           ;lorawan.c: 948: {
  6657                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  6658  005B3C  0EF0               	movlw	low (_macBuffer+16)
  6659  005B3E  0100               	movlb	0	; () banked
  6660  005B40  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
  6661  005B42  0E04               	movlw	high (_macBuffer+16)
  6662  005B44  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  6663  005B46  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
  6664  005B4A  EC10  F01D         	call	_RADIO_Transmit	;wreg free
  6665  005B4E  C0B1  F049         	movff	?_RADIO_Transmit,btemp+1
  6666  005B52  C0B2  F04A         	movff	?_RADIO_Transmit+1,btemp+2
  6667  005B56  5049               	movf	btemp+1,w,c
  6668  005B58  104A               	iorwf	btemp+2,w,c
  6669  005B5A  A4D8               	btfss	status,2,c
  6670  005B5C  D01F               	goto	l16401
  6671                           
  6672                           ;lorawan.c: 951: {
  6673                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  6674  005B5E  0102               	movlb	2	; () banked
  6675  005B60  5102               	movf	(_loRa+2)& (0+255),w,b
  6676  005B62  0BF0               	andlw	-16
  6677  005B64  0901               	iorlw	1
  6678  005B66  6F02               	movwf	(_loRa+2)& (0+255),b
  6679                           
  6680                           ; BSR set to: 2
  6681                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  6682  005B68  2BD9               	incf	(_loRa+217)& (0+255),f,b
  6683                           
  6684                           ; BSR set to: 2
  6685                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  6686  005B6A  B1D9               	btfsc	(_loRa+217)& (0+255),0,b
  6687  005B6C  D052               	goto	l1847
  6688                           
  6689                           ; BSR set to: 2
  6690  005B6E  51DF               	movf	(_loRa+223)& (0+255),w,b
  6691  005B70  B4D8               	btfsc	status,2,c
  6692  005B72  D04F               	goto	l1847
  6693                           
  6694                           ; BSR set to: 2
  6695  005B74  51D9               	movf	(_loRa+217)& (0+255),w,b
  6696  005B76  6E49               	movwf	btemp+1,c
  6697  005B78  6A4A               	clrf	btemp+2,c
  6698  005B7A  51D7               	movf	(_loRa+215)& (0+255),w,b
  6699  005B7C  6E52               	movwf	btemp+10,c
  6700  005B7E  6A53               	clrf	btemp+11,c
  6701  005B80  0E01               	movlw	1
  6702  005B82  2652               	addwf	btemp+10,f,c
  6703  005B84  0E00               	movlw	0
  6704  005B86  2253               	addwfc	btemp+11,f,c
  6705  005B88  5049               	movf	btemp+1,w,c
  6706  005B8A  1852               	xorwf	btemp+10,w,c
  6707  005B8C  E104               	bnz	u19890
  6708  005B8E  504A               	movf	btemp+2,w,c
  6709  005B90  1853               	xorwf	btemp+11,w,c
  6710  005B92  B4D8               	btfsc	status,2,c
  6711  005B94  D03E               	goto	l1847
  6712  005B96                     u19890:
  6713                           
  6714                           ; BSR set to: 2
  6715                           ;lorawan.c: 957: {
  6716                           ;lorawan.c: 958: FindSmallestDataRate();
  6717  005B96  EC58  F032         	call	_FindSmallestDataRate	;wreg free
  6718  005B9A  D03B               	goto	l1847
  6719  005B9C                     l16401:
  6720                           
  6721                           ;lorawan.c: 961: else
  6722                           ;lorawan.c: 962: {
  6723                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  6724  005B9C  ECF1  F03A         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  6725  005BA0  D038               	goto	l1847
  6726  005BA2                     l16405:
  6727                           
  6728                           ; BSR set to: 2
  6729                           ;lorawan.c: 973: else
  6730                           ;lorawan.c: 974: {
  6731                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  6732  005BA2  ECD6  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6733                           
  6734                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  6735  005BA6  0101               	movlb	1	; () banked
  6736  005BA8  5110               	movf	_rxPayload& (0+255),w,b
  6737  005BAA  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
  6738  005BAC  B4D8               	btfsc	status,2,c
  6739  005BAE  D031               	goto	l1847
  6740                           
  6741                           ; BSR set to: 1
  6742                           ;lorawan.c: 977: {
  6743                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  6744  005BB0  0E00               	movlw	0
  6745  005BB2  0100               	movlb	0	; () banked
  6746  005BB4  6F60               	movwf	RxData@pData& (0+255),b
  6747  005BB6  0E00               	movlw	0
  6748  005BB8  6F61               	movwf	(RxData@pData+1)& (0+255),b
  6749  005BBA  0E00               	movlw	0
  6750  005BBC  6F62               	movwf	RxData@dataLength& (0+255),b
  6751  005BBE  0E04               	movlw	4
  6752  005BC0  6F63               	movwf	RxData@status& (0+255),b
  6753  005BC2  D801               	call	u19918
  6754  005BC4  D026               	goto	l1847
  6755  005BC6                     u19918:
  6756  005BC6  0005               	push	
  6757  005BC8  6EFA               	movwf	pclath,c
  6758  005BCA  D019               	goto	L3
  6759  005BCC                     l16411:
  6760                           
  6761                           ; BSR set to: 2
  6762                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  6763  005BCC  51D9               	movf	(_loRa+217)& (0+255),w,b
  6764  005BCE  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6765  005BD0  A0D8               	btfss	status,0,c
  6766                           
  6767                           ; BSR set to: 2
  6768  005BD2  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6769  005BD4  D01E               	goto	l1847
  6770                           
  6771                           ; BSR set to: 2
  6772                           ;lorawan.c: 983: {
  6773                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  6774  005BD6  ECD6  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6775                           
  6776                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  6777  005BDA  0101               	movlb	1	; () banked
  6778  005BDC  5110               	movf	_rxPayload& (0+255),w,b
  6779  005BDE  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
  6780  005BE0  B4D8               	btfsc	status,2,c
  6781  005BE2  D017               	goto	l1847
  6782                           
  6783                           ; BSR set to: 1
  6784                           ;lorawan.c: 986: {
  6785                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  6786  005BE4  0E00               	movlw	0
  6787  005BE6  0100               	movlb	0	; () banked
  6788  005BE8  6F60               	movwf	RxData@pData& (0+255),b
  6789  005BEA  0E00               	movlw	0
  6790  005BEC  6F61               	movwf	(RxData@pData+1)& (0+255),b
  6791  005BEE  0E00               	movlw	0
  6792  005BF0  6F62               	movwf	RxData@dataLength& (0+255),b
  6793  005BF2  0E00               	movlw	0
  6794  005BF4  6F63               	movwf	RxData@status& (0+255),b
  6795  005BF6  D801               	call	u19958
  6796  005BF8  D00C               	goto	l1847
  6797  005BFA                     u19958:
  6798  005BFA  0005               	push	
  6799  005BFC  6EFA               	movwf	pclath,c
  6800  005BFE                     L3:
  6801  005BFE  0101               	movlb	1	; () banked
  6802  005C00  5110               	movf	_rxPayload& (0+255),w,b
  6803  005C02  6EFD               	movwf	tosl,c
  6804  005C04  5111               	movf	(_rxPayload+1)& (0+255),w,b
  6805  005C06  6EFE               	movwf	tosh,c
  6806  005C08  6AFF               	clrf	tosu,c
  6807  005C0A  50FA               	movf	pclath,w,c
  6808  005C0C  0012               	return		;indir
  6809  005C0E                     l16421:
  6810                           
  6811                           ; BSR set to: 2
  6812                           ;lorawan.c: 991: else
  6813                           ;lorawan.c: 992: {
  6814                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  6815  005C0E  ECD6  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6816  005C12                     l1847:
  6817                           
  6818                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  6819  005C12  52E5               	movf	postdec1,f,c
  6820  005C14  52E5               	movf	postdec1,f,c
  6821  005C16  0012               	return		;funcret
  6822  005C18                     __end_of_AckRetransmissionCallback:
  6823                           	opt stack 0
  6824                           tosu	equ	0xFFF
  6825                           tosh	equ	0xFFE
  6826                           tosl	equ	0xFFD
  6827                           pclath	equ	0xFFA
  6828                           tblptru	equ	0xFF8
  6829                           tblptrh	equ	0xFF7
  6830                           tblptrl	equ	0xFF6
  6831                           tablat	equ	0xFF5
  6832                           prodh	equ	0xFF4
  6833                           prodl	equ	0xFF3
  6834                           intcon	equ	0xFF2
  6835                           intcon2	equ	0xFF1
  6836                           intcon3	equ	0xFF0
  6837                           postinc0	equ	0xFEE
  6838                           wreg	equ	0xFE8
  6839                           postinc1	equ	0xFE6
  6840                           postdec1	equ	0xFE5
  6841                           plusw1	equ	0xFE3
  6842                           fsr1h	equ	0xFE2
  6843                           fsr1l	equ	0xFE1
  6844                           indf2	equ	0xFDF
  6845                           postinc2	equ	0xFDE
  6846                           postdec2	equ	0xFDD
  6847                           fsr2h	equ	0xFDA
  6848                           fsr2l	equ	0xFD9
  6849                           status	equ	0xFD8
  6850                           
  6851 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  6852 ;; Defined at:
  6853 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  param           1  [STACK] unsigned char 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  iCtr            1  [STACK] unsigned char 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1  [STACK] void 
  6860 ;; Registers used:
  6861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, cst
      +ack
  6862 ;; Tracked objects:
  6863 ;;		On entry : 3F/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;Total ram usage:        0 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:   11
  6874 ;; This function calls:
  6875 ;;		_SwTimerSetTimeout
  6876 ;;		_SwTimerStart
  6877 ;;		___lldiv
  6878 ;; This function is called by:
  6879 ;;		_SetCallbackSoftwareTimers
  6880 ;;		_SwTimersExecute
  6881 ;; This function uses a reentrant model
  6882 ;;
  6883                           
  6884                           	psect	text41
  6885  004CA4                     __ptext41:
  6886                           	opt stack 0
  6887  004CA4                     _LORAWAN_LinkCheckCallback:
  6888                           	opt stack 0
  6889                           
  6890                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6891  004CA4  0E05               	movlw	5
  6892  004CA6  26E1               	addwf	fsr1l,f,c
  6893  004CA8  0E00               	movlw	0
  6894  004CAA  22E2               	addwfc	fsr1h,f,c
  6895                           
  6896                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  6897                           
  6898                           ;incstack = 0
  6899  004CAC  0102               	movlb	2	; () banked
  6900  004CAE  A103               	btfss	(_loRa+3)& (0+255),0,b
  6901                           
  6902                           ; BSR set to: 2
  6903  004CB0  A503               	btfss	(_loRa+3)& (0+255),2,b
  6904  004CB2  D02C               	goto	l16365
  6905                           
  6906                           ; BSR set to: 2
  6907                           ;lorawan.c: 886: {
  6908                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  6909                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6910  004CB4  0EFF               	movlw	-1
  6911  004CB6  6AE3               	clrf	plusw1,c
  6912  004CB8  D00F               	goto	l16355
  6913  004CBA                     l16349:
  6914                           
  6915                           ; BSR set to: 2
  6916                           ;lorawan.c: 889: {
  6917                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  6918                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6919  004CBA  0EFF               	movlw	-1
  6920  004CBC  50E3               	movf	plusw1,w,c
  6921  004CBE  0D02               	mullw	2
  6922  004CC0  0EA8               	movlw	low (_loRa+168)
  6923  004CC2  24F3               	addwf	prodl,w,c
  6924  004CC4  6ED9               	movwf	fsr2l,c
  6925  004CC6  0E02               	movlw	high (_loRa+168)
  6926  004CC8  20F4               	addwfc	prodh,w,c
  6927  004CCA  6EDA               	movwf	fsr2h,c
  6928  004CCC  0E02               	movlw	2
  6929  004CCE  18DE               	xorwf	postinc2,w,c
  6930  004CD0  B4D8               	btfsc	status,2,c
  6931  004CD2  D009               	goto	u19750
  6932                           
  6933                           ; BSR set to: 2
  6934                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6935  004CD4  0EFF               	movlw	-1
  6936  004CD6  2AE3               	incf	plusw1,f,c
  6937  004CD8                     l16355:
  6938                           
  6939                           ; BSR set to: 2
  6940                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6941  004CD8  0EFF               	movlw	-1
  6942  004CDA  CFE3 F048          	movff	plusw1,btemp
  6943  004CDE  51A7               	movf	(_loRa+167)& (0+255),w,b
  6944  004CE0  5C48               	subwf	btemp,w,c
  6945  004CE2  A0D8               	btfss	status,0,c
  6946  004CE4  D7EA               	goto	l16349
  6947  004CE6                     u19750:
  6948                           
  6949                           ; BSR set to: 2
  6950                           ;lorawan.c: 893: }
  6951                           ;lorawan.c: 894: }
  6952                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  6953                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6954  004CE6  0EFF               	movlw	-1
  6955  004CE8  50E3               	movf	plusw1,w,c
  6956  004CEA  19A7               	xorwf	(_loRa+167)& (0+255),w,b
  6957  004CEC  A4D8               	btfss	status,2,c
  6958  004CEE  D00E               	goto	l16365
  6959                           
  6960                           ; BSR set to: 2
  6961                           ;lorawan.c: 897: {
  6962                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  6963  004CF0  51A7               	movf	(_loRa+167)& (0+255),w,b
  6964  004CF2  0D02               	mullw	2
  6965  004CF4  0EA8               	movlw	low (_loRa+168)
  6966  004CF6  24F3               	addwf	prodl,w,c
  6967  004CF8  6ED9               	movwf	fsr2l,c
  6968  004CFA  0E02               	movlw	high (_loRa+168)
  6969  004CFC  20F4               	addwfc	prodh,w,c
  6970  004CFE  6EDA               	movwf	fsr2h,c
  6971  004D00  0E02               	movlw	2
  6972  004D02  6EDF               	movwf	indf2,c
  6973                           
  6974                           ; BSR set to: 2
  6975                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  6976  004D04  0E10               	movlw	16
  6977  004D06  61A7               	cpfslt	(_loRa+167)& (0+255),b
  6978  004D08  D001               	goto	l16365
  6979                           
  6980                           ; BSR set to: 2
  6981                           ;lorawan.c: 901: {
  6982                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  6983  004D0A  2BA7               	incf	(_loRa+167)& (0+255),f,b
  6984  004D0C                     l16365:
  6985                           
  6986                           ; BSR set to: 2
  6987                           ;lorawan.c: 903: }
  6988                           ;lorawan.c: 904: }
  6989                           ;lorawan.c: 905: }
  6990                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  6991  004D0C  A503               	btfss	(_loRa+3)& (0+255),2,b
  6992  004D0E  D07B               	goto	l1825
  6993                           
  6994                           ; BSR set to: 2
  6995                           ;lorawan.c: 909: {
  6996                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6997  004D10  51CF               	movf	(_loRa+207)& (0+255),w,b
  6998  004D12  E107               	bnz	u19790
  6999  004D14  29CC               	incf	(_loRa+204)& (0+255),w,b
  7000  004D16  0EFF               	movlw	255
  7001  004D18  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  7002  004D1A  0E0F               	movlw	15
  7003  004D1C  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  7004  004D1E  A0D8               	btfss	status,0,c
  7005  004D20  D024               	goto	l16371
  7006  004D22                     u19790:
  7007                           
  7008                           ; BSR set to: 2
  7009  004D22  C2CC  F060         	movff	_loRa+204,___lldiv@dividend
  7010  004D26  C2CD  F061         	movff	_loRa+205,___lldiv@dividend+1
  7011  004D2A  C2CE  F062         	movff	_loRa+206,___lldiv@dividend+2
  7012  004D2E  C2CF  F063         	movff	_loRa+207,___lldiv@dividend+3
  7013  004D32  0E7D               	movlw	125
  7014  004D34  0100               	movlb	0	; () banked
  7015  004D36  6F64               	movwf	___lldiv@divisor& (0+255),b
  7016  004D38  0E00               	movlw	0
  7017  004D3A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  7018  004D3C  0E00               	movlw	0
  7019  004D3E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  7020  004D40  0E00               	movlw	0
  7021  004D42  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  7022  004D44  ECB4  F039         	call	___lldiv	;wreg free
  7023  004D48  C060  F050         	movff	?___lldiv,btemp+8
  7024  004D4C  C061  F051         	movff	?___lldiv+1,btemp+9
  7025  004D50  C062  F052         	movff	?___lldiv+2,btemp+10
  7026  004D54  C063  F053         	movff	?___lldiv+3,btemp+11
  7027  004D58  0E0C               	movlw	12
  7028  004D5A                     u19805:
  7029  004D5A  90D8               	bcf	status,0,c
  7030  004D5C  3650               	rlcf	btemp+8,f,c
  7031  004D5E  3651               	rlcf	btemp+9,f,c
  7032  004D60  3652               	rlcf	btemp+10,f,c
  7033  004D62  3653               	rlcf	btemp+11,f,c
  7034  004D64  2EE8               	decfsz	wreg,f,c
  7035  004D66  D7F9               	goto	u19805
  7036  004D68  D02B               	goto	L4
  7037  004D6A                     l16371:
  7038                           
  7039                           ; BSR set to: 2
  7040  004D6A  C2CC  F050         	movff	_loRa+204,btemp+8
  7041  004D6E  C2CD  F051         	movff	_loRa+205,btemp+9
  7042  004D72  C2CE  F052         	movff	_loRa+206,btemp+10
  7043  004D76  C2CF  F053         	movff	_loRa+207,btemp+11
  7044  004D7A  0E0C               	movlw	12
  7045  004D7C                     u19815:
  7046  004D7C  90D8               	bcf	status,0,c
  7047  004D7E  3650               	rlcf	btemp+8,f,c
  7048  004D80  3651               	rlcf	btemp+9,f,c
  7049  004D82  3652               	rlcf	btemp+10,f,c
  7050  004D84  3653               	rlcf	btemp+11,f,c
  7051  004D86  2EE8               	decfsz	wreg,f,c
  7052  004D88  D7F9               	goto	u19815
  7053  004D8A  C050  F060         	movff	btemp+8,___lldiv@dividend
  7054  004D8E  C051  F061         	movff	btemp+9,___lldiv@dividend+1
  7055  004D92  C052  F062         	movff	btemp+10,___lldiv@dividend+2
  7056  004D96  C053  F063         	movff	btemp+11,___lldiv@dividend+3
  7057  004D9A  0E7D               	movlw	125
  7058  004D9C  0100               	movlb	0	; () banked
  7059  004D9E  6F64               	movwf	___lldiv@divisor& (0+255),b
  7060  004DA0  0E00               	movlw	0
  7061  004DA2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  7062  004DA4  0E00               	movlw	0
  7063  004DA6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  7064  004DA8  0E00               	movlw	0
  7065  004DAA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  7066  004DAC  ECB4  F039         	call	___lldiv	;wreg free
  7067  004DB0  C060  F050         	movff	?___lldiv,btemp+8
  7068  004DB4  C061  F051         	movff	?___lldiv+1,btemp+9
  7069  004DB8  C062  F052         	movff	?___lldiv+2,btemp+10
  7070  004DBC  C063  F053         	movff	?___lldiv+3,btemp+11
  7071  004DC0                     L4:
  7072                           
  7073                           ;stkvar	_LORAWAN_LinkCheckCallback$2506 @ sp[(-5)+0]
  7074  004DC0  0EFB               	movlw	-5
  7075  004DC2  C050  FFE3         	movff	btemp+8,plusw1
  7076  004DC6  0EFC               	movlw	-4
  7077  004DC8  C051  FFE3         	movff	btemp+9,plusw1
  7078  004DCC  0EFD               	movlw	-3
  7079  004DCE  C052  FFE3         	movff	btemp+10,plusw1
  7080  004DD2  0EFE               	movlw	-2
  7081  004DD4  C053  FFE3         	movff	btemp+11,plusw1
  7082                           
  7083                           ;stkvar	_LORAWAN_LinkCheckCallback$2506 @ sp[(-5)+0]
  7084  004DD8  50E1               	movf	fsr1l,w,c
  7085  004DDA  0FFB               	addlw	-5
  7086  004DDC  6ED9               	movwf	fsr2l,c
  7087  004DDE  50E2               	movf	fsr1h,w,c
  7088  004DE0  6EDA               	movwf	fsr2h,c
  7089  004DE2  0EFF               	movlw	255
  7090  004DE4  22DA               	addwfc	fsr2h,f,c
  7091  004DE6  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  7092  004DEA  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  7093  004DEE  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  7094  004DF2  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  7095  004DF6  0102               	movlb	2	; () banked
  7096  004DF8  51E7               	movf	(_loRa+231)& (0+255),w,b
  7097  004DFA  EC23  F041         	call	_SwTimerSetTimeout
  7098                           
  7099                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  7100  004DFE  0102               	movlb	2	; () banked
  7101  004E00  51E7               	movf	(_loRa+231)& (0+255),w,b
  7102  004E02  EC3B  F037         	call	_SwTimerStart
  7103  004E06                     l1825:
  7104                           
  7105                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  7106  004E06  0EFA               	movlw	250
  7107  004E08  26E1               	addwf	fsr1l,f,c
  7108  004E0A  0EFF               	movlw	255
  7109  004E0C  22E2               	addwfc	fsr1h,f,c
  7110  004E0E  0012               	return		;funcret
  7111  004E10                     __end_of_LORAWAN_LinkCheckCallback:
  7112                           	opt stack 0
  7113                           tosu	equ	0xFFF
  7114                           tosh	equ	0xFFE
  7115                           tosl	equ	0xFFD
  7116                           pclath	equ	0xFFA
  7117                           tblptru	equ	0xFF8
  7118                           tblptrh	equ	0xFF7
  7119                           tblptrl	equ	0xFF6
  7120                           tablat	equ	0xFF5
  7121                           prodh	equ	0xFF4
  7122                           prodl	equ	0xFF3
  7123                           intcon	equ	0xFF2
  7124                           intcon2	equ	0xFF1
  7125                           intcon3	equ	0xFF0
  7126                           postinc0	equ	0xFEE
  7127                           wreg	equ	0xFE8
  7128                           postinc1	equ	0xFE6
  7129                           postdec1	equ	0xFE5
  7130                           plusw1	equ	0xFE3
  7131                           fsr1h	equ	0xFE2
  7132                           fsr1l	equ	0xFE1
  7133                           indf2	equ	0xFDF
  7134                           postinc2	equ	0xFDE
  7135                           postdec2	equ	0xFDD
  7136                           fsr2h	equ	0xFDA
  7137                           fsr2l	equ	0xFD9
  7138                           status	equ	0xFD8
  7139                           
  7140 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  7141 ;; Defined at:
  7142 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;  param           1  [STACK] unsigned char 
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;  freq            4  [STACK] unsigned long 
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  1  [STACK] void 
  7149 ;; Registers used:
  7150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  7151 ;; Tracked objects:
  7152 ;;		On entry : 3F/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7160 ;;Total ram usage:        0 bytes
  7161 ;; Hardware stack levels used:    1
  7162 ;; Hardware stack levels required when called:   13
  7163 ;; This function calls:
  7164 ;;		_ConfigureRadioRx
  7165 ;;		_GetRx1Freq
  7166 ;;		_RADIO_ReceiveStart
  7167 ;;		_RADIO_ReceiveStop
  7168 ;;		_RADIO_ReleaseData
  7169 ;; This function is called by:
  7170 ;;		_SetCallbackSoftwareTimers
  7171 ;;		_SwTimersExecute
  7172 ;; This function uses a reentrant model
  7173 ;;
  7174                           
  7175                           	psect	text42
  7176  006A6E                     __ptext42:
  7177                           	opt stack 0
  7178  006A6E                     _LORAWAN_ReceiveWindow1Callback:
  7179                           	opt stack 0
  7180                           
  7181                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7182  006A6E  52E6               	movf	postinc1,f,c
  7183  006A70  52E6               	movf	postinc1,f,c
  7184  006A72  52E6               	movf	postinc1,f,c
  7185  006A74  52E6               	movf	postinc1,f,c
  7186                           
  7187                           ;lorawan.c: 798: uint32_t freq;
  7188                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  7189                           
  7190                           ;incstack = 0
  7191  006A76  0102               	movlb	2	; () banked
  7192  006A78  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7193  006A7A  D050               	goto	l1798
  7194                           
  7195                           ; BSR set to: 2
  7196                           ;lorawan.c: 801: {
  7197                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  7198  006A7C  0E02               	movlw	2
  7199  006A7E  1912               	xorwf	(_loRa+18)& (0+255),w,b
  7200  006A80  B4D8               	btfsc	status,2,c
  7201                           
  7202                           ; BSR set to: 2
  7203                           ;lorawan.c: 803: {
  7204                           ;lorawan.c: 804: RADIO_ReceiveStop();
  7205  006A82  EC96  F044         	call	_RADIO_ReceiveStop	;wreg free
  7206                           
  7207                           ;lorawan.c: 805: }
  7208                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  7209  006A86  0102               	movlb	2	; () banked
  7210  006A88  51EF               	movf	(_loRa+239)& (0+255),w,b
  7211  006A8A  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7212  006A8C  A0D8               	btfss	status,0,c
  7213  006A8E  D004               	goto	l1796
  7214                           
  7215                           ; BSR set to: 2
  7216                           ;lorawan.c: 807: {
  7217                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  7218  006A90  51EF               	movf	(_loRa+239)& (0+255),w,b
  7219  006A92  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7220  006A94  6F17               	movwf	(_loRa+23)& (0+255),b
  7221                           
  7222                           ;lorawan.c: 809: }
  7223  006A96  D001               	goto	l16331
  7224  006A98                     l1796:
  7225                           
  7226                           ; BSR set to: 2
  7227                           ;lorawan.c: 810: else
  7228                           ;lorawan.c: 811: {
  7229                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  7230  006A98  6B17               	clrf	(_loRa+23)& (0+255),b
  7231  006A9A                     l16331:
  7232                           
  7233                           ; BSR set to: 2
  7234                           ;lorawan.c: 813: }
  7235                           ;lorawan.c: 815: freq = GetRx1Freq();
  7236  006A9A  ECCD  F045         	call	_GetRx1Freq	;wreg free
  7237  006A9E  C060  F050         	movff	?_GetRx1Freq,btemp+8
  7238  006AA2  C061  F051         	movff	?_GetRx1Freq+1,btemp+9
  7239  006AA6  C062  F052         	movff	?_GetRx1Freq+2,btemp+10
  7240  006AAA  C063  F053         	movff	?_GetRx1Freq+3,btemp+11
  7241                           
  7242                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7243  006AAE  0EFC               	movlw	-4
  7244  006AB0  C050  FFE3         	movff	btemp+8,plusw1
  7245  006AB4  0EFD               	movlw	-3
  7246  006AB6  C051  FFE3         	movff	btemp+9,plusw1
  7247  006ABA  0EFE               	movlw	-2
  7248  006ABC  C052  FFE3         	movff	btemp+10,plusw1
  7249  006AC0  0EFF               	movlw	-1
  7250  006AC2  C053  FFE3         	movff	btemp+11,plusw1
  7251                           
  7252                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  7253  006AC6  0102               	movlb	2	; () banked
  7254  006AC8  5102               	movf	(_loRa+2)& (0+255),w,b
  7255  006ACA  0BF0               	andlw	-16
  7256  006ACC  0903               	iorlw	3
  7257  006ACE  6F02               	movwf	(_loRa+2)& (0+255),b
  7258                           
  7259                           ; BSR set to: 2
  7260                           ;lorawan.c: 819: RADIO_ReleaseData();
  7261  006AD0  ECB8  F046         	call	_RADIO_ReleaseData	;wreg free
  7262                           
  7263                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  7264                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7265  006AD4  50E1               	movf	fsr1l,w,c
  7266  006AD6  0FFC               	addlw	-4
  7267  006AD8  6ED9               	movwf	fsr2l,c
  7268  006ADA  50E2               	movf	fsr1h,w,c
  7269  006ADC  6EDA               	movwf	fsr2h,c
  7270  006ADE  0EFF               	movlw	255
  7271  006AE0  22DA               	addwfc	fsr2h,f,c
  7272  006AE2  CFDE F073          	movff	postinc2,ConfigureRadioRx@freq
  7273  006AE6  CFDE F074          	movff	postinc2,ConfigureRadioRx@freq+1
  7274  006AEA  CFDE F075          	movff	postinc2,ConfigureRadioRx@freq+2
  7275  006AEE  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq+3
  7276  006AF2  0102               	movlb	2	; () banked
  7277  006AF4  5117               	movf	(_loRa+23)& (0+255),w,b
  7278  006AF6  EC94  F043         	call	_ConfigureRadioRx
  7279                           
  7280                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  7281  006AFA  0E61               	movlw	low _rxWindowSize
  7282  006AFC  0102               	movlb	2	; () banked
  7283  006AFE  2517               	addwf	(_loRa+23)& (0+255),w,b
  7284  006B00  6EF6               	movwf	tblptrl,c
  7285  006B02  6AF7               	clrf	tblptrh,c
  7286  006B04  0EFF               	movlw	high _rxWindowSize
  7287  006B06  22F7               	addwfc	tblptrh,f,c
  7288  006B08                     	if	1	;There are 3 active tblptr bytes
  7289  006B08  6AF8               	clrf	tblptru,c
  7290  006B0A  0E00               	movlw	low (__mediumconst shr (0+16))
  7291  006B0C  22F8               	addwfc	tblptru,f,c
  7292  006B0E                     	endif
  7293  006B0E  0008               	tblrd		*
  7294  006B10  50F5               	movf	tablat,w,c
  7295  006B12  0100               	movlb	0	; () banked
  7296  006B14  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7297  006B16  6BB2               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7298  006B18  EC2C  F01E         	call	_RADIO_ReceiveStart	;wreg free
  7299  006B1C                     l1798:
  7300                           
  7301                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7302  006B1C  0EFB               	movlw	251
  7303  006B1E  26E1               	addwf	fsr1l,f,c
  7304  006B20  0EFF               	movlw	255
  7305  006B22  22E2               	addwfc	fsr1h,f,c
  7306  006B24  0012               	return		;funcret
  7307  006B26                     __end_of_LORAWAN_ReceiveWindow1Callback:
  7308                           	opt stack 0
  7309                           tosu	equ	0xFFF
  7310                           tosh	equ	0xFFE
  7311                           tosl	equ	0xFFD
  7312                           pclath	equ	0xFFA
  7313                           tblptru	equ	0xFF8
  7314                           tblptrh	equ	0xFF7
  7315                           tblptrl	equ	0xFF6
  7316                           tablat	equ	0xFF5
  7317                           prodh	equ	0xFF4
  7318                           prodl	equ	0xFF3
  7319                           intcon	equ	0xFF2
  7320                           intcon2	equ	0xFF1
  7321                           intcon3	equ	0xFF0
  7322                           postinc0	equ	0xFEE
  7323                           wreg	equ	0xFE8
  7324                           postinc1	equ	0xFE6
  7325                           postdec1	equ	0xFE5
  7326                           plusw1	equ	0xFE3
  7327                           fsr1h	equ	0xFE2
  7328                           fsr1l	equ	0xFE1
  7329                           indf2	equ	0xFDF
  7330                           postinc2	equ	0xFDE
  7331                           postdec2	equ	0xFDD
  7332                           fsr2h	equ	0xFDA
  7333                           fsr2l	equ	0xFD9
  7334                           status	equ	0xFD8
  7335                           
  7336 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  7337 ;; Defined at:
  7338 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;  param           1  [STACK] unsigned char 
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;		None
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  1  [STACK] void 
  7345 ;; Registers used:
  7346 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  7347 ;; Tracked objects:
  7348 ;;		On entry : 3D/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;Total ram usage:        0 bytes
  7357 ;; Hardware stack levels used:    1
  7358 ;; Hardware stack levels required when called:   14
  7359 ;; This function calls:
  7360 ;;		_ConfigureRadioRx
  7361 ;;		_LORAWAN_EnterContinuousReceive
  7362 ;;		_RADIO_GetStatus
  7363 ;;		_RADIO_ReceiveStart
  7364 ;;		_RADIO_ReceiveStop
  7365 ;;		_RADIO_ReleaseData
  7366 ;;		_ResetParametersForConfirmedTransmission
  7367 ;;		_ResetParametersForUnconfirmedTransmission
  7368 ;;		_RxData
  7369 ;; This function is called by:
  7370 ;;		_LORAWAN_RxTimeout
  7371 ;;		_SetCallbackSoftwareTimers
  7372 ;;		_SwTimersExecute
  7373 ;; This function uses a reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text43
  7377  00666C                     __ptext43:
  7378                           	opt stack 0
  7379  00666C                     _LORAWAN_ReceiveWindow2Callback:
  7380                           	opt stack 12
  7381                           
  7382                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  7383                           
  7384                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7385                           ;incstack = 0
  7386  00666C  0102               	movlb	2	; () banked
  7387  00666E  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7388  006670  D05F               	goto	l1801
  7389                           
  7390                           ; BSR set to: 2
  7391                           ;lorawan.c: 831: {
  7392                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  7393  006672  ECB5  F046         	call	_RADIO_GetStatus	;wreg free
  7394  006676  6E53               	movwf	btemp+11,c
  7395  006678  B253               	btfsc	btemp+11,1,c
  7396  00667A  D056               	goto	l15053
  7397                           
  7398                           ;lorawan.c: 833: {
  7399                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  7400  00667C  0102               	movlb	2	; () banked
  7401  00667E  5102               	movf	(_loRa+2)& (0+255),w,b
  7402  006680  0BF0               	andlw	-16
  7403  006682  0905               	iorlw	5
  7404  006684  6F02               	movwf	(_loRa+2)& (0+255),b
  7405                           
  7406                           ; BSR set to: 2
  7407                           ;lorawan.c: 836: RADIO_ReceiveStop();
  7408  006686  EC96  F044         	call	_RADIO_ReceiveStop	;wreg free
  7409                           
  7410                           ;lorawan.c: 837: RADIO_ReleaseData();
  7411  00668A  ECB8  F046         	call	_RADIO_ReleaseData	;wreg free
  7412                           
  7413                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  7414  00668E  C218  F073         	movff	_loRa+24,ConfigureRadioRx@freq
  7415  006692  C219  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
  7416  006696  C21A  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
  7417  00669A  C21B  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
  7418  00669E  0102               	movlb	2	; () banked
  7419  0066A0  511C               	movf	(_loRa+28)& (0+255),w,b
  7420  0066A2  EC94  F043         	call	_ConfigureRadioRx
  7421                           
  7422                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  7423  0066A6  0102               	movlb	2	; () banked
  7424  0066A8  5112               	movf	(_loRa+18)& (0+255),w,b
  7425  0066AA  A4D8               	btfss	status,2,c
  7426  0066AC  D036               	goto	l15049
  7427                           
  7428                           ; BSR set to: 2
  7429                           ;lorawan.c: 842: {
  7430                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  7431  0066AE  0E61               	movlw	low _rxWindowSize
  7432  0066B0  251C               	addwf	(_loRa+28)& (0+255),w,b
  7433  0066B2  6EF6               	movwf	tblptrl,c
  7434  0066B4  6AF7               	clrf	tblptrh,c
  7435  0066B6  0EFF               	movlw	high _rxWindowSize
  7436  0066B8  22F7               	addwfc	tblptrh,f,c
  7437  0066BA                     	if	1	;There are 3 active tblptr bytes
  7438  0066BA  6AF8               	clrf	tblptru,c
  7439  0066BC  0E00               	movlw	low (__mediumconst shr (0+16))
  7440  0066BE  22F8               	addwfc	tblptru,f,c
  7441  0066C0                     	endif
  7442  0066C0  0008               	tblrd		*
  7443  0066C2  50F5               	movf	tablat,w,c
  7444  0066C4  0100               	movlb	0	; () banked
  7445  0066C6  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7446  0066C8  6BB2               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7447  0066CA  EC2C  F01E         	call	_RADIO_ReceiveStart	;wreg free
  7448  0066CE  C0B1  F049         	movff	?_RADIO_ReceiveStart,btemp+1
  7449  0066D2  C0B2  F04A         	movff	?_RADIO_ReceiveStart+1,btemp+2
  7450  0066D6  5049               	movf	btemp+1,w,c
  7451  0066D8  104A               	iorwf	btemp+2,w,c
  7452  0066DA  B4D8               	btfsc	status,2,c
  7453  0066DC  D031               	goto	l1810
  7454                           
  7455                           ;lorawan.c: 844: {
  7456                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  7457  0066DE  ECD6  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7458                           
  7459                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  7460  0066E2  ECAF  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7461                           
  7462                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  7463  0066E6  0101               	movlb	1	; () banked
  7464  0066E8  5110               	movf	_rxPayload& (0+255),w,b
  7465  0066EA  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
  7466  0066EC  B4D8               	btfsc	status,2,c
  7467  0066EE  D028               	goto	l1810
  7468                           
  7469                           ; BSR set to: 1
  7470                           ;lorawan.c: 848: {
  7471                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  7472  0066F0  0E00               	movlw	0
  7473  0066F2  0100               	movlb	0	; () banked
  7474  0066F4  6F60               	movwf	RxData@pData& (0+255),b
  7475  0066F6  0E00               	movlw	0
  7476  0066F8  6F61               	movwf	(RxData@pData+1)& (0+255),b
  7477  0066FA  0E00               	movlw	0
  7478  0066FC  6F62               	movwf	RxData@dataLength& (0+255),b
  7479  0066FE  0E00               	movlw	0
  7480  006700  6F63               	movwf	RxData@status& (0+255),b
  7481  006702  D801               	call	u17288
  7482  006704  D01D               	goto	l1810
  7483  006706                     u17288:
  7484  006706  0005               	push	
  7485  006708  6EFA               	movwf	pclath,c
  7486  00670A  0101               	movlb	1	; () banked
  7487  00670C  5110               	movf	_rxPayload& (0+255),w,b
  7488  00670E  6EFD               	movwf	tosl,c
  7489  006710  5111               	movf	(_rxPayload+1)& (0+255),w,b
  7490  006712  6EFE               	movwf	tosh,c
  7491  006714  6AFF               	clrf	tosu,c
  7492  006716  50FA               	movf	pclath,w,c
  7493  006718  0012               	return		;indir
  7494  00671A                     l15049:
  7495                           
  7496                           ; BSR set to: 2
  7497                           ;lorawan.c: 853: else
  7498                           ;lorawan.c: 854: {
  7499                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  7500  00671A  5102               	movf	(_loRa+2)& (0+255),w,b
  7501  00671C  0BF0               	andlw	-16
  7502  00671E  0909               	iorlw	9
  7503  006720  6F02               	movwf	(_loRa+2)& (0+255),b
  7504                           
  7505                           ; BSR set to: 2
  7506                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  7507  006722  EC76  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  7508  006726  D00C               	goto	l1810
  7509  006728                     l15053:
  7510                           
  7511                           ;lorawan.c: 859: else
  7512                           ;lorawan.c: 860: {
  7513                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  7514  006728  0E01               	movlw	1
  7515  00672A  0102               	movlb	2	; () banked
  7516  00672C  6FF1               	movwf	(_loRa+241)& (0+255),b
  7517                           
  7518                           ; BSR set to: 1
  7519                           ;lorawan.c: 864: }
  7520                           ;lorawan.c: 865: }
  7521  00672E  D008               	goto	l1810
  7522  006730                     l1801:
  7523                           
  7524                           ; BSR set to: 2
  7525                           ;lorawan.c: 866: else
  7526                           ;lorawan.c: 867: {
  7527                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  7528  006730  A500               	btfss	_loRa& (0+255),2,b
  7529  006732  D002               	goto	l15057
  7530                           
  7531                           ; BSR set to: 2
  7532                           ;lorawan.c: 871: {
  7533                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  7534  006734  9500               	bcf	_loRa& (0+255),2,b
  7535                           
  7536                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  7537  006736  9902               	bcf	(_loRa+2)& (0+255),4,b
  7538  006738                     l15057:
  7539                           
  7540                           ; BSR set to: 2
  7541                           ;lorawan.c: 874: }
  7542                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  7543  006738  ECAF  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7544                           
  7545                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  7546  00673C  ECD6  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7547  006740                     l1810:
  7548                           
  7549                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7550  006740  52E5               	movf	postdec1,f,c
  7551  006742  0012               	return		;funcret
  7552  006744                     __end_of_LORAWAN_ReceiveWindow2Callback:
  7553                           	opt stack 0
  7554                           tosu	equ	0xFFF
  7555                           tosh	equ	0xFFE
  7556                           tosl	equ	0xFFD
  7557                           pclath	equ	0xFFA
  7558                           tblptru	equ	0xFF8
  7559                           tblptrh	equ	0xFF7
  7560                           tblptrl	equ	0xFF6
  7561                           tablat	equ	0xFF5
  7562                           prodh	equ	0xFF4
  7563                           prodl	equ	0xFF3
  7564                           intcon	equ	0xFF2
  7565                           intcon2	equ	0xFF1
  7566                           intcon3	equ	0xFF0
  7567                           postinc0	equ	0xFEE
  7568                           wreg	equ	0xFE8
  7569                           postinc1	equ	0xFE6
  7570                           postdec1	equ	0xFE5
  7571                           plusw1	equ	0xFE3
  7572                           fsr1h	equ	0xFE2
  7573                           fsr1l	equ	0xFE1
  7574                           indf2	equ	0xFDF
  7575                           postinc2	equ	0xFDE
  7576                           postdec2	equ	0xFDD
  7577                           fsr2h	equ	0xFDA
  7578                           fsr2l	equ	0xFD9
  7579                           status	equ	0xFD8
  7580                           
  7581 ;; *************** function _RADIO_WatchdogTimeout *****************
  7582 ;; Defined at:
  7583 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;  param           1  [STACK] unsigned char 
  7586 ;; Auto vars:     Size  Location     Type
  7587 ;;		None
  7588 ;; Return value:  Size  Location     Type
  7589 ;;                  1  [STACK] void 
  7590 ;; Registers used:
  7591 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  7592 ;; Tracked objects:
  7593 ;;		On entry : 3F/0
  7594 ;;		On exit  : 0/0
  7595 ;;		Unchanged: 0/0
  7596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7601 ;;Total ram usage:        0 bytes
  7602 ;; Hardware stack levels used:    1
  7603 ;; Hardware stack levels required when called:   16
  7604 ;; This function calls:
  7605 ;;		_LORAWAN_RxTimeout
  7606 ;;		_LORAWAN_TxDone
  7607 ;;		_RADIO_WriteMode
  7608 ;; This function is called by:
  7609 ;;		_RADIO_Init
  7610 ;;		_SwTimersExecute
  7611 ;; This function uses a reentrant model
  7612 ;;
  7613                           
  7614                           	psect	text44
  7615  008064                     __ptext44:
  7616                           	opt stack 0
  7617  008064                     _RADIO_WatchdogTimeout:
  7618                           	opt stack 12
  7619                           
  7620                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  7621                           
  7622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7623                           ;incstack = 0
  7624  008064  C13C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7625  008068  0E01               	movlw	1
  7626  00806A  0100               	movlb	0	; () banked
  7627  00806C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7628  00806E  0E01               	movlw	1
  7629  008070  EC0D  F02F         	call	_RADIO_WriteMode
  7630                           
  7631                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7632  008074  C13C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7633  008078  0E00               	movlw	0
  7634  00807A  0100               	movlb	0	; () banked
  7635  00807C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7636  00807E  0E00               	movlw	0
  7637  008080  EC0D  F02F         	call	_RADIO_WriteMode
  7638                           
  7639                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  7640  008084  0101               	movlb	1	; () banked
  7641  008086  8947               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  7642                           
  7643                           ; BSR set to: 1
  7644                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  7645  008088  A347               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  7646  00808A  D004               	goto	l682
  7647                           
  7648                           ; BSR set to: 1
  7649                           ;radio_driver_SX1276.c: 1414: {
  7650                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
  7651  00808C  9347               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7652                           
  7653                           ; BSR set to: 1
  7654                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  7655  00808E  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
  7656                           
  7657                           ;radio_driver_SX1276.c: 1417: }
  7658  008092  D009               	goto	l685
  7659  008094                     l682:
  7660                           
  7661                           ; BSR set to: 1
  7662                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  7663  008094  A147               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  7664  008096  D007               	goto	l685
  7665                           
  7666                           ; BSR set to: 1
  7667                           ;radio_driver_SX1276.c: 1419: {
  7668                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
  7669  008098  9147               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  7670                           
  7671                           ; BSR set to: 1
  7672                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  7673  00809A  C14E  F0BB         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  7674  00809E  C14F  F0BC         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  7675  0080A2  EC96  F006         	call	_LORAWAN_TxDone	;wreg free
  7676  0080A6                     l685:
  7677                           
  7678                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  7679  0080A6  52E5               	movf	postdec1,f,c
  7680  0080A8  0012               	return		;funcret
  7681  0080AA                     __end_of_RADIO_WatchdogTimeout:
  7682                           	opt stack 0
  7683                           tosu	equ	0xFFF
  7684                           tosh	equ	0xFFE
  7685                           tosl	equ	0xFFD
  7686                           pclath	equ	0xFFA
  7687                           tblptru	equ	0xFF8
  7688                           tblptrh	equ	0xFF7
  7689                           tblptrl	equ	0xFF6
  7690                           tablat	equ	0xFF5
  7691                           prodh	equ	0xFF4
  7692                           prodl	equ	0xFF3
  7693                           intcon	equ	0xFF2
  7694                           intcon2	equ	0xFF1
  7695                           intcon3	equ	0xFF0
  7696                           postinc0	equ	0xFEE
  7697                           wreg	equ	0xFE8
  7698                           postinc1	equ	0xFE6
  7699                           postdec1	equ	0xFE5
  7700                           plusw1	equ	0xFE3
  7701                           fsr1h	equ	0xFE2
  7702                           fsr1l	equ	0xFE1
  7703                           indf2	equ	0xFDF
  7704                           postinc2	equ	0xFDE
  7705                           postdec2	equ	0xFDD
  7706                           fsr2h	equ	0xFDA
  7707                           fsr2l	equ	0xFD9
  7708                           status	equ	0xFD8
  7709                           
  7710 ;; *************** function _RADIO_RxFSKTimeout *****************
  7711 ;; Defined at:
  7712 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  param           1  [STACK] unsigned char 
  7715 ;; Auto vars:     Size  Location     Type
  7716 ;;  irqFlags        1  [STACK] unsigned char 
  7717 ;; Return value:  Size  Location     Type
  7718 ;;                  1  [STACK] void 
  7719 ;; Registers used:
  7720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptr
      +l, tblptrh, tblptru, prodl, prodh, cstack
  7721 ;; Tracked objects:
  7722 ;;		On entry : 3F/0
  7723 ;;		On exit  : 0/0
  7724 ;;		Unchanged: 0/0
  7725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7730 ;;Total ram usage:        0 bytes
  7731 ;; Hardware stack levels used:    1
  7732 ;; Hardware stack levels required when called:   16
  7733 ;; This function calls:
  7734 ;;		_LORAWAN_RxTimeout
  7735 ;;		_RADIO_RegisterRead
  7736 ;;		_RADIO_WriteMode
  7737 ;;		_SwTimerStop
  7738 ;; This function is called by:
  7739 ;;		_RADIO_Init
  7740 ;;		_SwTimersExecute
  7741 ;; This function uses a reentrant model
  7742 ;;
  7743                           
  7744                           	psect	text45
  7745  0083CE                     __ptext45:
  7746                           	opt stack 0
  7747  0083CE                     _RADIO_RxFSKTimeout:
  7748                           	opt stack 0
  7749                           
  7750                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7751  0083CE  52E6               	movf	postinc1,f,c
  7752                           
  7753                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
  7754                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
  7755                           
  7756                           ;incstack = 0
  7757  0083D0  0E3E               	movlw	62
  7758  0083D2  ECE5  F043         	call	_RADIO_RegisterRead
  7759  0083D6  6E53               	movwf	btemp+11,c
  7760                           
  7761                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7762  0083D8  0EFF               	movlw	-1
  7763  0083DA  C053  FFE3         	movff	btemp+11,plusw1
  7764                           
  7765                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  7766                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7767  0083DE  0EFF               	movlw	-1
  7768  0083E0  B0E3               	btfsc	plusw1,0,c
  7769  0083E2  D010               	goto	l679
  7770                           
  7771                           ;radio_driver_SX1276.c: 1397: {
  7772                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7773  0083E4  C13C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7774  0083E8  0E00               	movlw	0
  7775  0083EA  0100               	movlb	0	; () banked
  7776  0083EC  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7777  0083EE  0E00               	movlw	0
  7778  0083F0  EC0D  F02F         	call	_RADIO_WriteMode
  7779                           
  7780                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  7781  0083F4  0101               	movlb	1	; () banked
  7782  0083F6  514D               	movf	(_RadioConfiguration+41)& (0+255),w,b
  7783  0083F8  ECF9  F043         	call	_SwTimerStop
  7784                           
  7785                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  7786  0083FC  0101               	movlb	1	; () banked
  7787  0083FE  9347               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7788                           
  7789                           ; BSR set to: 1
  7790                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  7791  008400  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
  7792  008404                     l679:
  7793                           
  7794                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7795  008404  52E5               	movf	postdec1,f,c
  7796  008406  52E5               	movf	postdec1,f,c
  7797  008408  0012               	return		;funcret
  7798  00840A                     __end_of_RADIO_RxFSKTimeout:
  7799                           	opt stack 0
  7800                           tosu	equ	0xFFF
  7801                           tosh	equ	0xFFE
  7802                           tosl	equ	0xFFD
  7803                           pclath	equ	0xFFA
  7804                           tblptru	equ	0xFF8
  7805                           tblptrh	equ	0xFF7
  7806                           tblptrl	equ	0xFF6
  7807                           tablat	equ	0xFF5
  7808                           prodh	equ	0xFF4
  7809                           prodl	equ	0xFF3
  7810                           intcon	equ	0xFF2
  7811                           intcon2	equ	0xFF1
  7812                           intcon3	equ	0xFF0
  7813                           postinc0	equ	0xFEE
  7814                           wreg	equ	0xFE8
  7815                           postinc1	equ	0xFE6
  7816                           postdec1	equ	0xFE5
  7817                           plusw1	equ	0xFE3
  7818                           fsr1h	equ	0xFE2
  7819                           fsr1l	equ	0xFE1
  7820                           indf2	equ	0xFDF
  7821                           postinc2	equ	0xFDE
  7822                           postdec2	equ	0xFDD
  7823                           fsr2h	equ	0xFDA
  7824                           fsr2l	equ	0xFD9
  7825                           status	equ	0xFD8
  7826                           
  7827 ;; *************** function _UnconfirmedTransmissionCallback *****************
  7828 ;; Defined at:
  7829 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;  param           1  [STACK] unsigned char 
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;		None
  7834 ;; Return value:  Size  Location     Type
  7835 ;;                  1  [STACK] void 
  7836 ;; Registers used:
  7837 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, pro
      +dl, prodh, cstack
  7838 ;; Tracked objects:
  7839 ;;		On entry : 3F/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7847 ;;Total ram usage:        0 bytes
  7848 ;; Hardware stack levels used:    1
  7849 ;; Hardware stack levels required when called:   13
  7850 ;; This function calls:
  7851 ;;		_RADIO_Transmit
  7852 ;;		_ResetParametersForUnconfirmedTransmission
  7853 ;;		_RxData
  7854 ;;		_SelectChannelForTransmission
  7855 ;; This function is called by:
  7856 ;;		_SetCallbackSoftwareTimers
  7857 ;;		_SwTimersExecute
  7858 ;; This function uses a reentrant model
  7859 ;;
  7860                           
  7861                           	psect	text46
  7862  00756A                     __ptext46:
  7863                           	opt stack 0
  7864  00756A                     _UnconfirmedTransmissionCallback:
  7865                           	opt stack 15
  7866                           
  7867                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  7868                           
  7869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7870                           ;incstack = 0
  7871  00756A  0E01               	movlw	1
  7872  00756C  EC60  F03B         	call	_SelectChannelForTransmission
  7873  007570  0900               	iorlw	0
  7874  007572  A4D8               	btfss	status,2,c
  7875  007574  D018               	goto	l16431
  7876  007576  0EF0               	movlw	low (_macBuffer+16)
  7877  007578  0100               	movlb	0	; () banked
  7878  00757A  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
  7879  00757C  0E04               	movlw	high (_macBuffer+16)
  7880  00757E  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  7881  007580  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
  7882  007584  EC10  F01D         	call	_RADIO_Transmit	;wreg free
  7883  007588  C0B1  F049         	movff	?_RADIO_Transmit,btemp+1
  7884  00758C  C0B2  F04A         	movff	?_RADIO_Transmit+1,btemp+2
  7885  007590  5049               	movf	btemp+1,w,c
  7886  007592  104A               	iorwf	btemp+2,w,c
  7887  007594  A4D8               	btfss	status,2,c
  7888  007596  D007               	goto	l16431
  7889                           
  7890                           ;lorawan.c: 1001: {
  7891                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  7892  007598  0102               	movlb	2	; () banked
  7893  00759A  2BD8               	incf	(_loRa+216)& (0+255),f,b
  7894                           
  7895                           ; BSR set to: 2
  7896                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  7897  00759C  5102               	movf	(_loRa+2)& (0+255),w,b
  7898  00759E  0BF0               	andlw	-16
  7899  0075A0  0901               	iorlw	1
  7900  0075A2  6F02               	movwf	(_loRa+2)& (0+255),b
  7901                           
  7902                           ;lorawan.c: 1005: }
  7903  0075A4  D01C               	goto	u19999
  7904  0075A6                     l16431:
  7905                           
  7906                           ;lorawan.c: 1006: else
  7907                           ;lorawan.c: 1008: {
  7908                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  7909  0075A6  ECAF  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7910                           
  7911                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  7912  0075AA  0101               	movlb	1	; () banked
  7913  0075AC  5110               	movf	_rxPayload& (0+255),w,b
  7914  0075AE  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
  7915  0075B0  B4D8               	btfsc	status,2,c
  7916  0075B2  D015               	goto	u19999
  7917                           
  7918                           ; BSR set to: 1
  7919                           ;lorawan.c: 1011: {
  7920                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  7921  0075B4  0E00               	movlw	0
  7922  0075B6  0100               	movlb	0	; () banked
  7923  0075B8  6F60               	movwf	RxData@pData& (0+255),b
  7924  0075BA  0E00               	movlw	0
  7925  0075BC  6F61               	movwf	(RxData@pData+1)& (0+255),b
  7926  0075BE  0E00               	movlw	0
  7927  0075C0  6F62               	movwf	RxData@dataLength& (0+255),b
  7928  0075C2  0E00               	movlw	0
  7929  0075C4  6F63               	movwf	RxData@status& (0+255),b
  7930  0075C6  D801               	call	u19998
  7931  0075C8  D00A               	goto	u19999
  7932  0075CA                     u19998:
  7933  0075CA  0005               	push	
  7934  0075CC  6EFA               	movwf	pclath,c
  7935  0075CE  0101               	movlb	1	; () banked
  7936  0075D0  5110               	movf	_rxPayload& (0+255),w,b
  7937  0075D2  6EFD               	movwf	tosl,c
  7938  0075D4  5111               	movf	(_rxPayload+1)& (0+255),w,b
  7939  0075D6  6EFE               	movwf	tosh,c
  7940  0075D8  6AFF               	clrf	tosu,c
  7941  0075DA  50FA               	movf	pclath,w,c
  7942  0075DC  0012               	return		;indir
  7943  0075DE                     u19999:
  7944                           
  7945                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  7946  0075DE  52E5               	movf	postdec1,f,c
  7947  0075E0  0012               	return		;funcret
  7948  0075E2                     __end_of_UnconfirmedTransmissionCallback:
  7949                           	opt stack 0
  7950                           tosu	equ	0xFFF
  7951                           tosh	equ	0xFFE
  7952                           tosl	equ	0xFFD
  7953                           pclath	equ	0xFFA
  7954                           tblptru	equ	0xFF8
  7955                           tblptrh	equ	0xFF7
  7956                           tblptrl	equ	0xFF6
  7957                           tablat	equ	0xFF5
  7958                           prodh	equ	0xFF4
  7959                           prodl	equ	0xFF3
  7960                           intcon	equ	0xFF2
  7961                           intcon2	equ	0xFF1
  7962                           intcon3	equ	0xFF0
  7963                           postinc0	equ	0xFEE
  7964                           wreg	equ	0xFE8
  7965                           postinc1	equ	0xFE6
  7966                           postdec1	equ	0xFE5
  7967                           plusw1	equ	0xFE3
  7968                           fsr1h	equ	0xFE2
  7969                           fsr1l	equ	0xFE1
  7970                           indf2	equ	0xFDF
  7971                           postinc2	equ	0xFDE
  7972                           postdec2	equ	0xFDD
  7973                           fsr2h	equ	0xFDA
  7974                           fsr2l	equ	0xFD9
  7975                           status	equ	0xFD8
  7976                           
  7977 ;; *************** function _GetRx1Freq *****************
  7978 ;; Defined at:
  7979 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;		None
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;		None
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  4    0[BANK0 ] unsigned long 
  7986 ;; Registers used:
  7987 ;;		None
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7993 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7996 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;Total ram usage:        4 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; Hardware stack levels required when called:    7
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_LORAWAN_ReceiveWindow1Callback
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text47
  8008  008B9A                     __ptext47:
  8009                           	opt stack 0
  8010  008B9A                     _GetRx1Freq:
  8011                           	opt stack 20
  8012                           
  8013                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  8014                           
  8015                           ;incstack = 0
  8016  008B9A  C213  F060         	movff	_loRa+19,?_GetRx1Freq
  8017  008B9E  C214  F061         	movff	_loRa+20,?_GetRx1Freq+1
  8018  008BA2  C215  F062         	movff	_loRa+21,?_GetRx1Freq+2
  8019  008BA6  C216  F063         	movff	_loRa+22,?_GetRx1Freq+3
  8020  008BAA  0012               	return		;funcret
  8021  008BAC                     __end_of_GetRx1Freq:
  8022                           	opt stack 0
  8023                           tosu	equ	0xFFF
  8024                           tosh	equ	0xFFE
  8025                           tosl	equ	0xFFD
  8026                           pclath	equ	0xFFA
  8027                           tblptru	equ	0xFF8
  8028                           tblptrh	equ	0xFF7
  8029                           tblptrl	equ	0xFF6
  8030                           tablat	equ	0xFF5
  8031                           prodh	equ	0xFF4
  8032                           prodl	equ	0xFF3
  8033                           intcon	equ	0xFF2
  8034                           intcon2	equ	0xFF1
  8035                           intcon3	equ	0xFF0
  8036                           postinc0	equ	0xFEE
  8037                           wreg	equ	0xFE8
  8038                           postinc1	equ	0xFE6
  8039                           postdec1	equ	0xFE5
  8040                           plusw1	equ	0xFE3
  8041                           fsr1h	equ	0xFE2
  8042                           fsr1l	equ	0xFE1
  8043                           indf2	equ	0xFDF
  8044                           postinc2	equ	0xFDE
  8045                           postdec2	equ	0xFDD
  8046                           fsr2h	equ	0xFDA
  8047                           fsr2l	equ	0xFD9
  8048                           status	equ	0xFD8
  8049                           
  8050 ;; *************** function _RADIO_DIO5 *****************
  8051 ;; Defined at:
  8052 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;		None
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;  dioMapping      1    6[BANK0 ] unsigned char 
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  1    wreg      void 
  8059 ;; Registers used:
  8060 ;;		wreg, status,2, status,0, cstack
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8070 ;;Total ram usage:        2 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; Hardware stack levels required when called:   11
  8073 ;; This function calls:
  8074 ;;		_RADIO_RegisterRead
  8075 ;;		_RADIO_UnhandledInterrupt
  8076 ;; This function is called by:
  8077 ;;		_LORAWAN_Mainloop
  8078 ;; This function uses a non-reentrant model
  8079 ;;
  8080                           
  8081                           	psect	text48
  8082  008752                     __ptext48:
  8083                           	opt stack 0
  8084  008752                     _RADIO_DIO5:
  8085                           	opt stack 18
  8086                           
  8087                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
  8088                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  8089                           
  8090                           ;incstack = 0
  8091  008752  0E41               	movlw	65
  8092  008754  ECE5  F043         	call	_RADIO_RegisterRead
  8093  008758  0100               	movlb	0	; () banked
  8094  00875A  6F65               	movwf	??_RADIO_DIO5& (0+255),b
  8095  00875C  3965               	swapf	??_RADIO_DIO5& (0+255),w,b
  8096  00875E  0B0F               	andlw	15
  8097  008760  0B03               	andlw	3
  8098  008762  6F66               	movwf	RADIO_DIO5@dioMapping& (0+255),b
  8099                           
  8100                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8101  008764  0E01               	movlw	1
  8102  008766  ECE5  F043         	call	_RADIO_RegisterRead
  8103  00876A  0100               	movlb	0	; () banked
  8104  00876C  6F65               	movwf	??_RADIO_DIO5& (0+255),b
  8105  00876E  AF65               	btfss	??_RADIO_DIO5& (0+255),7,b
  8106  008770  0012               	return	
  8107                           
  8108                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8109                           
  8110                           ; BSR set to: 0
  8111                           
  8112                           ;radio_driver_SX1276.c: 1354: {
  8113                           ;radio_driver_SX1276.c: 1355: default:
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;radio_driver_SX1276.c: 1351: {
  8117                           ;radio_driver_SX1276.c: 1353: switch (dioMapping)
  8118  008772  0E01               	movlw	1
  8119  008774  EC39  F042         	call	_RADIO_UnhandledInterrupt
  8120                           
  8121                           ;radio_driver_SX1276.c: 1358: }
  8122                           
  8123                           ;radio_driver_SX1276.c: 1357: break;
  8124  008778  0012               	return	
  8125  00877A                     __end_of_RADIO_DIO5:
  8126                           	opt stack 0
  8127                           tosu	equ	0xFFF
  8128                           tosh	equ	0xFFE
  8129                           tosl	equ	0xFFD
  8130                           pclath	equ	0xFFA
  8131                           tblptru	equ	0xFF8
  8132                           tblptrh	equ	0xFF7
  8133                           tblptrl	equ	0xFF6
  8134                           tablat	equ	0xFF5
  8135                           prodh	equ	0xFF4
  8136                           prodl	equ	0xFF3
  8137                           intcon	equ	0xFF2
  8138                           intcon2	equ	0xFF1
  8139                           intcon3	equ	0xFF0
  8140                           postinc0	equ	0xFEE
  8141                           wreg	equ	0xFE8
  8142                           postinc1	equ	0xFE6
  8143                           postdec1	equ	0xFE5
  8144                           plusw1	equ	0xFE3
  8145                           fsr1h	equ	0xFE2
  8146                           fsr1l	equ	0xFE1
  8147                           indf2	equ	0xFDF
  8148                           postinc2	equ	0xFDE
  8149                           postdec2	equ	0xFDD
  8150                           fsr2h	equ	0xFDA
  8151                           fsr2l	equ	0xFD9
  8152                           status	equ	0xFD8
  8153                           
  8154 ;; *************** function _RADIO_DIO4 *****************
  8155 ;; Defined at:
  8156 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8157 ;; Parameters:    Size  Location     Type
  8158 ;;		None
  8159 ;; Auto vars:     Size  Location     Type
  8160 ;;  dioMapping      1    7[BANK0 ] unsigned char 
  8161 ;; Return value:  Size  Location     Type
  8162 ;;                  1    wreg      void 
  8163 ;; Registers used:
  8164 ;;		wreg, status,2, status,0, cstack
  8165 ;; Tracked objects:
  8166 ;;		On entry : 0/0
  8167 ;;		On exit  : 0/0
  8168 ;;		Unchanged: 0/0
  8169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8171 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8172 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8173 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8174 ;;Total ram usage:        3 bytes
  8175 ;; Hardware stack levels used:    1
  8176 ;; Hardware stack levels required when called:   11
  8177 ;; This function calls:
  8178 ;;		_RADIO_RegisterRead
  8179 ;;		_RADIO_UnhandledInterrupt
  8180 ;; This function is called by:
  8181 ;;		_LORAWAN_Mainloop
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           	psect	text49
  8186  008440                     __ptext49:
  8187                           	opt stack 0
  8188  008440                     _RADIO_DIO4:
  8189                           	opt stack 18
  8190                           
  8191                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
  8192                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  8193                           
  8194                           ;incstack = 0
  8195  008440  0E41               	movlw	65
  8196  008442  ECE5  F043         	call	_RADIO_RegisterRead
  8197  008446  0100               	movlb	0	; () banked
  8198  008448  6F65               	movwf	??_RADIO_DIO4& (0+255),b
  8199  00844A  0E06               	movlw	6
  8200  00844C  6F66               	movwf	(??_RADIO_DIO4+1)& (0+255),b
  8201  00844E                     u20125:
  8202  00844E  90D8               	bcf	status,0,c
  8203  008450  3365               	rrcf	??_RADIO_DIO4& (0+255),f,b
  8204  008452  2F66               	decfsz	(??_RADIO_DIO4+1)& (0+255),f,b
  8205  008454  D7FC               	goto	u20125
  8206  008456  5165               	movf	??_RADIO_DIO4& (0+255),w,b
  8207  008458  0B03               	andlw	3
  8208  00845A  6F67               	movwf	RADIO_DIO4@dioMapping& (0+255),b
  8209                           
  8210                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8211  00845C  0E01               	movlw	1
  8212  00845E  ECE5  F043         	call	_RADIO_RegisterRead
  8213  008462  0100               	movlb	0	; () banked
  8214  008464  6F65               	movwf	??_RADIO_DIO4& (0+255),b
  8215  008466  AF65               	btfss	??_RADIO_DIO4& (0+255),7,b
  8216  008468  0012               	return	
  8217                           
  8218                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8219                           
  8220                           ; BSR set to: 0
  8221                           
  8222                           ;radio_driver_SX1276.c: 1331: {
  8223                           ;radio_driver_SX1276.c: 1332: default:
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;radio_driver_SX1276.c: 1328: {
  8227                           ;radio_driver_SX1276.c: 1330: switch (dioMapping)
  8228  00846A  0E01               	movlw	1
  8229  00846C  EC39  F042         	call	_RADIO_UnhandledInterrupt
  8230                           
  8231                           ;radio_driver_SX1276.c: 1335: }
  8232                           
  8233                           ;radio_driver_SX1276.c: 1334: break;
  8234  008470  0012               	return	
  8235  008472                     __end_of_RADIO_DIO4:
  8236                           	opt stack 0
  8237                           tosu	equ	0xFFF
  8238                           tosh	equ	0xFFE
  8239                           tosl	equ	0xFFD
  8240                           pclath	equ	0xFFA
  8241                           tblptru	equ	0xFF8
  8242                           tblptrh	equ	0xFF7
  8243                           tblptrl	equ	0xFF6
  8244                           tablat	equ	0xFF5
  8245                           prodh	equ	0xFF4
  8246                           prodl	equ	0xFF3
  8247                           intcon	equ	0xFF2
  8248                           intcon2	equ	0xFF1
  8249                           intcon3	equ	0xFF0
  8250                           postinc0	equ	0xFEE
  8251                           wreg	equ	0xFE8
  8252                           postinc1	equ	0xFE6
  8253                           postdec1	equ	0xFE5
  8254                           plusw1	equ	0xFE3
  8255                           fsr1h	equ	0xFE2
  8256                           fsr1l	equ	0xFE1
  8257                           indf2	equ	0xFDF
  8258                           postinc2	equ	0xFDE
  8259                           postdec2	equ	0xFDD
  8260                           fsr2h	equ	0xFDA
  8261                           fsr2l	equ	0xFD9
  8262                           status	equ	0xFD8
  8263                           
  8264 ;; *************** function _RADIO_DIO3 *****************
  8265 ;; Defined at:
  8266 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;		None
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;  dioMapping      1    6[BANK0 ] unsigned char 
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  1    wreg      void 
  8273 ;; Registers used:
  8274 ;;		wreg, status,2, status,0, cstack
  8275 ;; Tracked objects:
  8276 ;;		On entry : 0/0
  8277 ;;		On exit  : 0/0
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8281 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8282 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8283 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8284 ;;Total ram usage:        2 bytes
  8285 ;; Hardware stack levels used:    1
  8286 ;; Hardware stack levels required when called:   11
  8287 ;; This function calls:
  8288 ;;		_RADIO_RegisterRead
  8289 ;;		_RADIO_UnhandledInterrupt
  8290 ;; This function is called by:
  8291 ;;		_LORAWAN_Mainloop
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           	psect	text50
  8296  008886                     __ptext50:
  8297                           	opt stack 0
  8298  008886                     _RADIO_DIO3:
  8299                           	opt stack 18
  8300                           
  8301                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
  8302                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  8303                           
  8304                           ;incstack = 0
  8305  008886  0E40               	movlw	64
  8306  008888  ECE5  F043         	call	_RADIO_RegisterRead
  8307  00888C  0B03               	andlw	3
  8308  00888E  0100               	movlb	0	; () banked
  8309  008890  6F66               	movwf	RADIO_DIO3@dioMapping& (0+255),b
  8310                           
  8311                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8312  008892  0E01               	movlw	1
  8313  008894  ECE5  F043         	call	_RADIO_RegisterRead
  8314  008898  0100               	movlb	0	; () banked
  8315  00889A  6F65               	movwf	??_RADIO_DIO3& (0+255),b
  8316  00889C  AF65               	btfss	??_RADIO_DIO3& (0+255),7,b
  8317  00889E  0012               	return	
  8318                           
  8319                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8320                           
  8321                           ; BSR set to: 0
  8322                           
  8323                           ;radio_driver_SX1276.c: 1308: {
  8324                           ;radio_driver_SX1276.c: 1309: default:
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;radio_driver_SX1276.c: 1305: {
  8328                           ;radio_driver_SX1276.c: 1307: switch (dioMapping)
  8329  0088A0  0E01               	movlw	1
  8330  0088A2  EC39  F042         	call	_RADIO_UnhandledInterrupt
  8331                           
  8332                           ;radio_driver_SX1276.c: 1312: }
  8333                           
  8334                           ;radio_driver_SX1276.c: 1311: break;
  8335  0088A6  0012               	return	
  8336  0088A8                     __end_of_RADIO_DIO3:
  8337                           	opt stack 0
  8338                           tosu	equ	0xFFF
  8339                           tosh	equ	0xFFE
  8340                           tosl	equ	0xFFD
  8341                           pclath	equ	0xFFA
  8342                           tblptru	equ	0xFF8
  8343                           tblptrh	equ	0xFF7
  8344                           tblptrl	equ	0xFF6
  8345                           tablat	equ	0xFF5
  8346                           prodh	equ	0xFF4
  8347                           prodl	equ	0xFF3
  8348                           intcon	equ	0xFF2
  8349                           intcon2	equ	0xFF1
  8350                           intcon3	equ	0xFF0
  8351                           postinc0	equ	0xFEE
  8352                           wreg	equ	0xFE8
  8353                           postinc1	equ	0xFE6
  8354                           postdec1	equ	0xFE5
  8355                           plusw1	equ	0xFE3
  8356                           fsr1h	equ	0xFE2
  8357                           fsr1l	equ	0xFE1
  8358                           indf2	equ	0xFDF
  8359                           postinc2	equ	0xFDE
  8360                           postdec2	equ	0xFDD
  8361                           fsr2h	equ	0xFDA
  8362                           fsr2l	equ	0xFD9
  8363                           status	equ	0xFD8
  8364                           
  8365 ;; *************** function _RADIO_DIO2 *****************
  8366 ;; Defined at:
  8367 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;		None
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;  dioMapping      1   28[BANK0 ] unsigned char 
  8372 ;;  opMode          1   27[BANK0 ] unsigned char 
  8373 ;; Return value:  Size  Location     Type
  8374 ;;                  1    wreg      void 
  8375 ;; Registers used:
  8376 ;;		wreg, status,2, status,0, cstack
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/0
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8383 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8384 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8385 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8386 ;;Total ram usage:        3 bytes
  8387 ;; Hardware stack levels used:    1
  8388 ;; Hardware stack levels required when called:   12
  8389 ;; This function calls:
  8390 ;;		_RADIO_FHSSChangeChannel
  8391 ;;		_RADIO_RegisterRead
  8392 ;;		_RADIO_UnhandledInterrupt
  8393 ;; This function is called by:
  8394 ;;		_LORAWAN_Mainloop
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text51
  8399  007D3C                     __ptext51:
  8400                           	opt stack 0
  8401  007D3C                     _RADIO_DIO2:
  8402                           	opt stack 17
  8403                           
  8404                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
  8405                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
  8406                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  8407                           
  8408                           ;incstack = 0
  8409  007D3C  0E40               	movlw	64
  8410  007D3E  ECE5  F043         	call	_RADIO_RegisterRead
  8411  007D42  0100               	movlb	0	; () banked
  8412  007D44  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
  8413  007D46  90D8               	bcf	status,0,c
  8414  007D48  337A               	rrcf	??_RADIO_DIO2& (0+255),f,b
  8415  007D4A  90D8               	bcf	status,0,c
  8416  007D4C  317A               	rrcf	??_RADIO_DIO2& (0+255),w,b
  8417  007D4E  0B03               	andlw	3
  8418  007D50  6F7C               	movwf	RADIO_DIO2@dioMapping& (0+255),b
  8419                           
  8420                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
  8421  007D52  0E01               	movlw	1
  8422  007D54  ECE5  F043         	call	_RADIO_RegisterRead
  8423  007D58  0100               	movlb	0	; () banked
  8424  007D5A  6F7B               	movwf	RADIO_DIO2@opMode& (0+255),b
  8425                           
  8426                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8427  007D5C  0E01               	movlw	1
  8428  007D5E  ECE5  F043         	call	_RADIO_RegisterRead
  8429  007D62  0100               	movlb	0	; () banked
  8430  007D64  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
  8431  007D66  AF7A               	btfss	??_RADIO_DIO2& (0+255),7,b
  8432  007D68  0012               	return	
  8433  007D6A  D007               	goto	l639
  8434  007D6C                     
  8435                           ; BSR set to: 0
  8436                           ;radio_driver_SX1276.c: 1283: case 0x01:
  8437                           ;radio_driver_SX1276.c: 1284: case 0x02:
  8438                           ;radio_driver_SX1276.c: 1285: RADIO_FHSSChangeChannel();
  8439                           
  8440                           ; BSR set to: 0
  8441                           
  8442                           ; BSR set to: 0
  8443                           
  8444                           ; BSR set to: 0
  8445  007D6C  EC88  F041         	call	_RADIO_FHSSChangeChannel	;wreg free
  8446                           
  8447                           ;radio_driver_SX1276.c: 1286: break;
  8448  007D70  0012               	return	
  8449  007D72                     
  8450                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8451  007D72  0E01               	movlw	1
  8452  007D74  EC39  F042         	call	_RADIO_UnhandledInterrupt
  8453                           
  8454                           ;radio_driver_SX1276.c: 1290: }
  8455                           
  8456                           ;radio_driver_SX1276.c: 1289: break;
  8457  007D78  0012               	return	
  8458  007D7A                     l639:
  8459  007D7A  0100               	movlb	0	; () banked
  8460  007D7C  517C               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  8461                           
  8462                           ; Switch size 1, requested type "space"
  8463                           ; Number of cases is 3, Range of values is 0 to 2
  8464                           ; switch strategies available:
  8465                           ; Name         Instructions Cycles
  8466                           ; simple_byte           10     6 (average)
  8467                           ;	Chosen strategy is simple_byte
  8468  007D7E  0A00               	xorlw	0	; case 0
  8469  007D80  B4D8               	btfsc	status,2,c
  8470  007D82  D7F4               	goto	l640
  8471  007D84  0A01               	xorlw	1	; case 1
  8472  007D86  B4D8               	btfsc	status,2,c
  8473  007D88  D7F1               	goto	l640
  8474  007D8A  0A03               	xorlw	3	; case 2
  8475  007D8C  B4D8               	btfsc	status,2,c
  8476  007D8E  D7EE               	goto	l640
  8477  007D90  D7F0               	goto	l644
  8478  007D92                     __end_of_RADIO_DIO2:
  8479                           	opt stack 0
  8480                           tosu	equ	0xFFF
  8481                           tosh	equ	0xFFE
  8482                           tosl	equ	0xFFD
  8483                           pclath	equ	0xFFA
  8484                           tblptru	equ	0xFF8
  8485                           tblptrh	equ	0xFF7
  8486                           tblptrl	equ	0xFF6
  8487                           tablat	equ	0xFF5
  8488                           prodh	equ	0xFF4
  8489                           prodl	equ	0xFF3
  8490                           intcon	equ	0xFF2
  8491                           intcon2	equ	0xFF1
  8492                           intcon3	equ	0xFF0
  8493                           postinc0	equ	0xFEE
  8494                           wreg	equ	0xFE8
  8495                           postinc1	equ	0xFE6
  8496                           postdec1	equ	0xFE5
  8497                           plusw1	equ	0xFE3
  8498                           fsr1h	equ	0xFE2
  8499                           fsr1l	equ	0xFE1
  8500                           indf2	equ	0xFDF
  8501                           postinc2	equ	0xFDE
  8502                           postdec2	equ	0xFDD
  8503                           fsr2h	equ	0xFDA
  8504                           fsr2l	equ	0xFD9
  8505                           status	equ	0xFD8
  8506                           
  8507 ;; *************** function _RADIO_DIO1 *****************
  8508 ;; Defined at:
  8509 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;		None
  8512 ;; Auto vars:     Size  Location     Type
  8513 ;;  dioMapping      1  108[BANK0 ] unsigned char 
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  1    wreg      void 
  8516 ;; Registers used:
  8517 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8524 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8525 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8526 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8527 ;;Total ram usage:        2 bytes
  8528 ;; Hardware stack levels used:    1
  8529 ;; Hardware stack levels required when called:   17
  8530 ;; This function calls:
  8531 ;;		_RADIO_FHSSChangeChannel
  8532 ;;		_RADIO_RegisterRead
  8533 ;;		_RADIO_RxTimeout
  8534 ;;		_RADIO_UnhandledInterrupt
  8535 ;; This function is called by:
  8536 ;;		_LORAWAN_Mainloop
  8537 ;; This function uses a non-reentrant model
  8538 ;;
  8539                           
  8540                           	psect	text52
  8541  007F86                     __ptext52:
  8542                           	opt stack 0
  8543  007F86                     _RADIO_DIO1:
  8544                           	opt stack 12
  8545                           
  8546                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
  8547                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  8548                           
  8549                           ;incstack = 0
  8550  007F86  0E40               	movlw	64
  8551  007F88  ECE5  F043         	call	_RADIO_RegisterRead
  8552  007F8C  0100               	movlb	0	; () banked
  8553  007F8E  6FCB               	movwf	??_RADIO_DIO1& (0+255),b
  8554  007F90  39CB               	swapf	??_RADIO_DIO1& (0+255),w,b
  8555  007F92  0B0F               	andlw	15
  8556  007F94  0B03               	andlw	3
  8557  007F96  6FCC               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  8558                           
  8559                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8560  007F98  0E01               	movlw	1
  8561  007F9A  ECE5  F043         	call	_RADIO_RegisterRead
  8562  007F9E  0100               	movlb	0	; () banked
  8563  007FA0  6FCB               	movwf	??_RADIO_DIO1& (0+255),b
  8564  007FA2  BFCB               	btfsc	??_RADIO_DIO1& (0+255),7,b
  8565  007FA4  D00B               	goto	l625
  8566  007FA6  D013               	goto	l631
  8567  007FA8                     
  8568                           ; BSR set to: 0
  8569                           ;radio_driver_SX1276.c: 1243: RADIO_RxTimeout();
  8570                           
  8571                           ; BSR set to: 0
  8572  007FA8  EC28  F043         	call	_RADIO_RxTimeout	;wreg free
  8573                           
  8574                           ;radio_driver_SX1276.c: 1244: break;
  8575  007FAC  0012               	return	
  8576  007FAE                     
  8577                           ;radio_driver_SX1276.c: 1246: RADIO_FHSSChangeChannel();
  8578  007FAE  EC88  F041         	call	_RADIO_FHSSChangeChannel	;wreg free
  8579                           
  8580                           ;radio_driver_SX1276.c: 1247: break;
  8581  007FB2  0012               	return	
  8582  007FB4                     
  8583                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8584  007FB4  0E01               	movlw	1
  8585  007FB6  EC39  F042         	call	_RADIO_UnhandledInterrupt
  8586                           
  8587                           ;radio_driver_SX1276.c: 1251: }
  8588                           
  8589                           ;radio_driver_SX1276.c: 1250: break;
  8590  007FBA  0012               	return	
  8591  007FBC                     l625:
  8592  007FBC  0100               	movlb	0	; () banked
  8593  007FBE  51CC               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8594                           
  8595                           ; Switch size 1, requested type "space"
  8596                           ; Number of cases is 2, Range of values is 0 to 1
  8597                           ; switch strategies available:
  8598                           ; Name         Instructions Cycles
  8599                           ; simple_byte            7     4 (average)
  8600                           ;	Chosen strategy is simple_byte
  8601  007FC0  0A00               	xorlw	0	; case 0
  8602  007FC2  B4D8               	btfsc	status,2,c
  8603  007FC4  D7F1               	goto	l626
  8604  007FC6  0A01               	xorlw	1	; case 1
  8605  007FC8  B4D8               	btfsc	status,2,c
  8606  007FCA  D7F1               	goto	l628
  8607  007FCC  D7F3               	goto	l629
  8608  007FCE                     l631:
  8609                           
  8610                           ; BSR set to: 0
  8611                           
  8612                           ; BSR set to: 0
  8613  007FCE  51CC               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8614                           
  8615                           ; Switch size 1, requested type "space"
  8616                           ; Number of cases is 1, Range of values is 0 to 0
  8617                           ; switch strategies available:
  8618                           ; Name         Instructions Cycles
  8619                           ; simple_byte            4     3 (average)
  8620                           ;	Chosen strategy is simple_byte
  8621  007FD0  0A00               	xorlw	0	; case 0
  8622                           
  8623                           ; BSR set to: 0
  8624  007FD2  0012               	return	
  8625  007FD4                     __end_of_RADIO_DIO1:
  8626                           	opt stack 0
  8627                           tosu	equ	0xFFF
  8628                           tosh	equ	0xFFE
  8629                           tosl	equ	0xFFD
  8630                           pclath	equ	0xFFA
  8631                           tblptru	equ	0xFF8
  8632                           tblptrh	equ	0xFF7
  8633                           tblptrl	equ	0xFF6
  8634                           tablat	equ	0xFF5
  8635                           prodh	equ	0xFF4
  8636                           prodl	equ	0xFF3
  8637                           intcon	equ	0xFF2
  8638                           intcon2	equ	0xFF1
  8639                           intcon3	equ	0xFF0
  8640                           postinc0	equ	0xFEE
  8641                           wreg	equ	0xFE8
  8642                           postinc1	equ	0xFE6
  8643                           postdec1	equ	0xFE5
  8644                           plusw1	equ	0xFE3
  8645                           fsr1h	equ	0xFE2
  8646                           fsr1l	equ	0xFE1
  8647                           indf2	equ	0xFDF
  8648                           postinc2	equ	0xFDE
  8649                           postdec2	equ	0xFDD
  8650                           fsr2h	equ	0xFDA
  8651                           fsr2l	equ	0xFD9
  8652                           status	equ	0xFD8
  8653                           
  8654 ;; *************** function _RADIO_RxTimeout *****************
  8655 ;; Defined at:
  8656 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;		None
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;		None
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  1    wreg      void 
  8663 ;; Registers used:
  8664 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  8665 ;; Tracked objects:
  8666 ;;		On entry : 0/0
  8667 ;;		On exit  : 0/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8674 ;;Total ram usage:        0 bytes
  8675 ;; Hardware stack levels used:    1
  8676 ;; Hardware stack levels required when called:   16
  8677 ;; This function calls:
  8678 ;;		_LORAWAN_RxTimeout
  8679 ;;		_RADIO_RegisterWrite
  8680 ;;		_RADIO_WriteMode
  8681 ;;		_SwTimerStop
  8682 ;; This function is called by:
  8683 ;;		_RADIO_DIO1
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           	psect	text53
  8688  008650                     __ptext53:
  8689                           	opt stack 0
  8690  008650                     _RADIO_RxTimeout:
  8691                           	opt stack 12
  8692                           
  8693                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8694                           
  8695                           ;incstack = 0
  8696  008650  0101               	movlb	1	; () banked
  8697  008652  514D               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8698  008654  ECF9  F043         	call	_SwTimerStop
  8699                           
  8700                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
  8701  008658  0E80               	movlw	128
  8702  00865A  0100               	movlb	0	; () banked
  8703  00865C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8704  00865E  0E12               	movlw	18
  8705  008660  ECA6  F044         	call	_RADIO_RegisterWrite
  8706                           
  8707                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8708  008664  C13C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8709  008668  0E00               	movlw	0
  8710  00866A  0100               	movlb	0	; () banked
  8711  00866C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8712  00866E  0E00               	movlw	0
  8713  008670  EC0D  F02F         	call	_RADIO_WriteMode
  8714                           
  8715                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
  8716  008674  0101               	movlb	1	; () banked
  8717  008676  9347               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8718                           
  8719                           ; BSR set to: 1
  8720                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
  8721  008678  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
  8722  00867C  0012               	return		;funcret
  8723  00867E                     __end_of_RADIO_RxTimeout:
  8724                           	opt stack 0
  8725                           tosu	equ	0xFFF
  8726                           tosh	equ	0xFFE
  8727                           tosl	equ	0xFFD
  8728                           pclath	equ	0xFFA
  8729                           tblptru	equ	0xFF8
  8730                           tblptrh	equ	0xFF7
  8731                           tblptrl	equ	0xFF6
  8732                           tablat	equ	0xFF5
  8733                           prodh	equ	0xFF4
  8734                           prodl	equ	0xFF3
  8735                           intcon	equ	0xFF2
  8736                           intcon2	equ	0xFF1
  8737                           intcon3	equ	0xFF0
  8738                           postinc0	equ	0xFEE
  8739                           wreg	equ	0xFE8
  8740                           postinc1	equ	0xFE6
  8741                           postdec1	equ	0xFE5
  8742                           plusw1	equ	0xFE3
  8743                           fsr1h	equ	0xFE2
  8744                           fsr1l	equ	0xFE1
  8745                           indf2	equ	0xFDF
  8746                           postinc2	equ	0xFDE
  8747                           postdec2	equ	0xFDD
  8748                           fsr2h	equ	0xFDA
  8749                           fsr2l	equ	0xFD9
  8750                           status	equ	0xFD8
  8751                           
  8752 ;; *************** function _RADIO_FHSSChangeChannel *****************
  8753 ;; Defined at:
  8754 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;		None
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;  irqFlags        1   25[BANK0 ] unsigned char 
  8759 ;; Return value:  Size  Location     Type
  8760 ;;                  1    wreg      void 
  8761 ;; Registers used:
  8762 ;;		wreg, status,2, status,0, cstack
  8763 ;; Tracked objects:
  8764 ;;		On entry : 0/0
  8765 ;;		On exit  : 0/0
  8766 ;;		Unchanged: 0/0
  8767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8769 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8771 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8772 ;;Total ram usage:        1 bytes
  8773 ;; Hardware stack levels used:    1
  8774 ;; Hardware stack levels required when called:   11
  8775 ;; This function calls:
  8776 ;;		_RADIO_RegisterRead
  8777 ;;		_RADIO_RegisterWrite
  8778 ;;		_RADIO_WriteFrequency
  8779 ;; This function is called by:
  8780 ;;		_RADIO_DIO1
  8781 ;;		_RADIO_DIO2
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           	psect	text54
  8786  008310                     __ptext54:
  8787                           	opt stack 0
  8788  008310                     _RADIO_FHSSChangeChannel:
  8789                           	opt stack 17
  8790                           
  8791                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
  8792                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
  8793                           
  8794                           ;incstack = 0
  8795  008310  0E12               	movlw	18
  8796  008312  ECE5  F043         	call	_RADIO_RegisterRead
  8797  008316  0100               	movlb	0	; () banked
  8798  008318  6F79               	movwf	RADIO_FHSSChangeChannel@irqFlags& (0+255),b
  8799                           
  8800                           ; BSR set to: 0
  8801                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
  8802  00831A  0101               	movlb	1	; () banked
  8803  00831C  5142               	movf	(_RadioConfiguration+30)& (0+255),w,b
  8804  00831E  1143               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  8805  008320  B4D8               	btfsc	status,2,c
  8806  008322  D00F               	goto	l602
  8807                           
  8808                           ; BSR set to: 1
  8809                           ;radio_driver_SX1276.c: 1164: {
  8810                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
  8811  008324  5153               	movf	(_RadioConfiguration+47)& (0+255),w,b
  8812  008326  1154               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  8813  008328  B4D8               	btfsc	status,2,c
  8814  00832A  D00B               	goto	l602
  8815                           
  8816                           ; BSR set to: 1
  8817                           ;radio_driver_SX1276.c: 1166: {
  8818                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
  8819  00832C  0E00               	movlw	0
  8820  00832E  0100               	movlb	0	; () banked
  8821  008330  6F6D               	movwf	RADIO_WriteFrequency@frequency& (0+255),b
  8822  008332  0E00               	movlw	0
  8823  008334  6F6E               	movwf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
  8824  008336  0E00               	movlw	0
  8825  008338  6F6F               	movwf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
  8826  00833A  0E00               	movlw	0
  8827  00833C  6F70               	movwf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
  8828  00833E  ECFB  F030         	call	_RADIO_WriteFrequency	;wreg free
  8829  008342                     l602:
  8830                           
  8831                           ;radio_driver_SX1276.c: 1168: }
  8832                           ;radio_driver_SX1276.c: 1169: }
  8833                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
  8834  008342  0E02               	movlw	2
  8835  008344  0100               	movlb	0	; () banked
  8836  008346  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8837  008348  0E12               	movlw	18
  8838  00834A  ECA6  F044         	call	_RADIO_RegisterWrite
  8839  00834E  0012               	return		;funcret
  8840  008350                     __end_of_RADIO_FHSSChangeChannel:
  8841                           	opt stack 0
  8842                           tosu	equ	0xFFF
  8843                           tosh	equ	0xFFE
  8844                           tosl	equ	0xFFD
  8845                           pclath	equ	0xFFA
  8846                           tblptru	equ	0xFF8
  8847                           tblptrh	equ	0xFF7
  8848                           tblptrl	equ	0xFF6
  8849                           tablat	equ	0xFF5
  8850                           prodh	equ	0xFF4
  8851                           prodl	equ	0xFF3
  8852                           intcon	equ	0xFF2
  8853                           intcon2	equ	0xFF1
  8854                           intcon3	equ	0xFF0
  8855                           postinc0	equ	0xFEE
  8856                           wreg	equ	0xFE8
  8857                           postinc1	equ	0xFE6
  8858                           postdec1	equ	0xFE5
  8859                           plusw1	equ	0xFE3
  8860                           fsr1h	equ	0xFE2
  8861                           fsr1l	equ	0xFE1
  8862                           indf2	equ	0xFDF
  8863                           postinc2	equ	0xFDE
  8864                           postdec2	equ	0xFDD
  8865                           fsr2h	equ	0xFDA
  8866                           fsr2l	equ	0xFD9
  8867                           status	equ	0xFD8
  8868                           
  8869 ;; *************** function _RADIO_DIO0 *****************
  8870 ;; Defined at:
  8871 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;		None
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;  opMode          1  152[BANK0 ] unsigned char 
  8876 ;;  dioMapping      1  151[BANK0 ] unsigned char 
  8877 ;; Return value:  Size  Location     Type
  8878 ;;                  1    wreg      void 
  8879 ;; Registers used:
  8880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+8, btemp+9, btem
      +p+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8881 ;; Tracked objects:
  8882 ;;		On entry : 0/0
  8883 ;;		On exit  : 0/0
  8884 ;;		Unchanged: 0/0
  8885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8887 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8888 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8889 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8890 ;;Total ram usage:        4 bytes
  8891 ;; Hardware stack levels used:    1
  8892 ;; Hardware stack levels required when called:   17
  8893 ;; This function calls:
  8894 ;;		_RADIO_FSKPacketSent
  8895 ;;		_RADIO_FSKPayloadReady
  8896 ;;		_RADIO_RegisterRead
  8897 ;;		_RADIO_RxDone
  8898 ;;		_RADIO_TxDone
  8899 ;;		_RADIO_UnhandledInterrupt
  8900 ;; This function is called by:
  8901 ;;		_LORAWAN_Mainloop
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           	psect	text55
  8906  006FA2                     __ptext55:
  8907                           	opt stack 0
  8908  006FA2                     _RADIO_DIO0:
  8909                           	opt stack 12
  8910                           
  8911                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
  8912                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
  8913                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
  8914                           
  8915                           ;incstack = 0
  8916  006FA2  0E40               	movlw	64
  8917  006FA4  ECE5  F043         	call	_RADIO_RegisterRead
  8918  006FA8  0100               	movlb	0	; () banked
  8919  006FAA  6FF5               	movwf	??_RADIO_DIO0& (0+255),b
  8920  006FAC  0E06               	movlw	6
  8921  006FAE  6FF6               	movwf	(??_RADIO_DIO0+1)& (0+255),b
  8922  006FB0                     u20055:
  8923  006FB0  90D8               	bcf	status,0,c
  8924  006FB2  33F5               	rrcf	??_RADIO_DIO0& (0+255),f,b
  8925  006FB4  2FF6               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  8926  006FB6  D7FC               	goto	u20055
  8927  006FB8  51F5               	movf	??_RADIO_DIO0& (0+255),w,b
  8928  006FBA  0B03               	andlw	3
  8929  006FBC  6FF7               	movwf	RADIO_DIO0@dioMapping& (0+255),b
  8930                           
  8931                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
  8932  006FBE  0E01               	movlw	1
  8933  006FC0  ECE5  F043         	call	_RADIO_RegisterRead
  8934  006FC4  0100               	movlb	0	; () banked
  8935  006FC6  6FF8               	movwf	RADIO_DIO0@opMode& (0+255),b
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
  8939  006FC8  BFF8               	btfsc	RADIO_DIO0@opMode& (0+255),7,b
  8940  006FCA  D00B               	goto	l607
  8941  006FCC  D02C               	goto	l613
  8942  006FCE                     
  8943                           ; BSR set to: 0
  8944                           ;radio_driver_SX1276.c: 1190: RADIO_RxDone();
  8945                           
  8946                           ; BSR set to: 0
  8947  006FCE  ECE6  F031         	call	_RADIO_RxDone	;wreg free
  8948                           
  8949                           ;radio_driver_SX1276.c: 1191: break;
  8950  006FD2  0012               	return	
  8951  006FD4                     
  8952                           ;radio_driver_SX1276.c: 1193: RADIO_TxDone();
  8953  006FD4  ECEA  F02C         	call	_RADIO_TxDone	;wreg free
  8954                           
  8955                           ;radio_driver_SX1276.c: 1194: break;
  8956  006FD8  0012               	return	
  8957  006FDA                     
  8958                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8959  006FDA  0E01               	movlw	1
  8960  006FDC  EC39  F042         	call	_RADIO_UnhandledInterrupt
  8961                           
  8962                           ;radio_driver_SX1276.c: 1198: }
  8963                           
  8964                           ;radio_driver_SX1276.c: 1197: break;
  8965  006FE0  0012               	return	
  8966  006FE2                     l607:
  8967  006FE2  0100               	movlb	0	; () banked
  8968  006FE4  51F7               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8969                           
  8970                           ; Switch size 1, requested type "space"
  8971                           ; Number of cases is 2, Range of values is 0 to 1
  8972                           ; switch strategies available:
  8973                           ; Name         Instructions Cycles
  8974                           ; simple_byte            7     4 (average)
  8975                           ;	Chosen strategy is simple_byte
  8976  006FE6  0A00               	xorlw	0	; case 0
  8977  006FE8  B4D8               	btfsc	status,2,c
  8978  006FEA  D7F1               	goto	l608
  8979  006FEC  0A01               	xorlw	1	; case 1
  8980  006FEE  B4D8               	btfsc	status,2,c
  8981  006FF0  D7F1               	goto	l610
  8982  006FF2  D7F3               	goto	l611
  8983  006FF4                     
  8984                           ; BSR set to: 0
  8985                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
  8986                           
  8987                           ; BSR set to: 0
  8988  006FF4  0E07               	movlw	7
  8989  006FF6  17F8               	andwf	RADIO_DIO0@opMode& (0+255),f,b
  8990                           
  8991                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
  8992  006FF8  0E03               	movlw	3
  8993  006FFA  19F8               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8994  006FFC  A4D8               	btfss	status,2,c
  8995  006FFE  D003               	goto	l615
  8996                           
  8997                           ; BSR set to: 0
  8998                           ;radio_driver_SX1276.c: 1209: {
  8999                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
  9000  007000  ECBE  F02B         	call	_RADIO_FSKPacketSent	;wreg free
  9001                           
  9002                           ;radio_driver_SX1276.c: 1212: }
  9003  007004  0012               	return	
  9004  007006                     l615:
  9005                           
  9006                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
  9007  007006  0E05               	movlw	5
  9008  007008  0100               	movlb	0	; () banked
  9009  00700A  19F8               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  9010  00700C  A4D8               	btfss	status,2,c
  9011  00700E  D003               	goto	l617
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;radio_driver_SX1276.c: 1214: {
  9015                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
  9016  007010  EC93  F035         	call	_RADIO_FSKPayloadReady	;wreg free
  9017                           
  9018                           ;radio_driver_SX1276.c: 1217: }
  9019  007014  0012               	return	
  9020  007016                     l617:
  9021                           
  9022                           ;radio_driver_SX1276.c: 1218: else
  9023                           ;radio_driver_SX1276.c: 1219: {
  9024                           ;radio_driver_SX1276.c: 1220: RADIO_UnhandledInterrupt(MODULATION_FSK);
  9025  007016  0E00               	movlw	0
  9026  007018  EC39  F042         	call	_RADIO_UnhandledInterrupt
  9027                           
  9028                           ;radio_driver_SX1276.c: 1221: }
  9029                           ;radio_driver_SX1276.c: 1222: break;
  9030  00701C  0012               	return	
  9031  00701E                     
  9032                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
  9033  00701E  0E00               	movlw	0
  9034  007020  EC39  F042         	call	_RADIO_UnhandledInterrupt
  9035                           
  9036                           ;radio_driver_SX1276.c: 1226: }
  9037                           
  9038                           ;radio_driver_SX1276.c: 1225: break;
  9039  007024  0012               	return	
  9040  007026                     l613:
  9041  007026  0100               	movlb	0	; () banked
  9042  007028  51F7               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  9043                           
  9044                           ; Switch size 1, requested type "space"
  9045                           ; Number of cases is 1, Range of values is 0 to 0
  9046                           ; switch strategies available:
  9047                           ; Name         Instructions Cycles
  9048                           ; simple_byte            4     3 (average)
  9049                           ;	Chosen strategy is simple_byte
  9050  00702A  0A00               	xorlw	0	; case 0
  9051  00702C  B4D8               	btfsc	status,2,c
  9052  00702E  D7E2               	goto	l614
  9053  007030  D7F6               	goto	l620
  9054  007032                     __end_of_RADIO_DIO0:
  9055                           	opt stack 0
  9056                           tosu	equ	0xFFF
  9057                           tosh	equ	0xFFE
  9058                           tosl	equ	0xFFD
  9059                           pclath	equ	0xFFA
  9060                           tblptru	equ	0xFF8
  9061                           tblptrh	equ	0xFF7
  9062                           tblptrl	equ	0xFF6
  9063                           tablat	equ	0xFF5
  9064                           prodh	equ	0xFF4
  9065                           prodl	equ	0xFF3
  9066                           intcon	equ	0xFF2
  9067                           intcon2	equ	0xFF1
  9068                           intcon3	equ	0xFF0
  9069                           postinc0	equ	0xFEE
  9070                           wreg	equ	0xFE8
  9071                           postinc1	equ	0xFE6
  9072                           postdec1	equ	0xFE5
  9073                           plusw1	equ	0xFE3
  9074                           fsr1h	equ	0xFE2
  9075                           fsr1l	equ	0xFE1
  9076                           indf2	equ	0xFDF
  9077                           postinc2	equ	0xFDE
  9078                           postdec2	equ	0xFDD
  9079                           fsr2h	equ	0xFDA
  9080                           fsr2l	equ	0xFD9
  9081                           status	equ	0xFD8
  9082                           
  9083 ;; *************** function _RADIO_UnhandledInterrupt *****************
  9084 ;; Defined at:
  9085 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;  modulation      1    wreg     enum E6984
  9088 ;; Auto vars:     Size  Location     Type
  9089 ;;  modulation      1    4[BANK0 ] enum E6984
  9090 ;; Return value:  Size  Location     Type
  9091 ;;                  1    wreg      void 
  9092 ;; Registers used:
  9093 ;;		wreg, status,2, status,0, cstack
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9100 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9102 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9103 ;;Total ram usage:        1 bytes
  9104 ;; Hardware stack levels used:    1
  9105 ;; Hardware stack levels required when called:   10
  9106 ;; This function calls:
  9107 ;;		_RADIO_RegisterWrite
  9108 ;; This function is called by:
  9109 ;;		_RADIO_DIO0
  9110 ;;		_RADIO_DIO1
  9111 ;;		_RADIO_DIO2
  9112 ;;		_RADIO_DIO3
  9113 ;;		_RADIO_DIO4
  9114 ;;		_RADIO_DIO5
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           	psect	text56
  9119  008472                     __ptext56:
  9120                           	opt stack 0
  9121  008472                     _RADIO_UnhandledInterrupt:
  9122                           	opt stack 18
  9123                           
  9124                           ;incstack = 0
  9125                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  9126  008472  0100               	movlb	0	; () banked
  9127  008474  6F64               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
  9128                           
  9129                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
  9130  008476  0100               	movlb	0	; () banked
  9131  008478  0564               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
  9132  00847A  A4D8               	btfss	status,2,c
  9133  00847C  D006               	goto	l596
  9134                           
  9135                           ; BSR set to: 0
  9136                           ;radio_driver_SX1276.c: 1145: {
  9137                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
  9138  00847E  0EFF               	movlw	255
  9139  008480  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9140  008482  0E12               	movlw	18
  9141  008484  ECA6  F044         	call	_RADIO_RegisterWrite
  9142                           
  9143                           ;radio_driver_SX1276.c: 1147: }
  9144  008488  0012               	return	
  9145  00848A                     l596:
  9146                           
  9147                           ;radio_driver_SX1276.c: 1148: else
  9148                           ;radio_driver_SX1276.c: 1149: {
  9149                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
  9150  00848A  0EFF               	movlw	255
  9151  00848C  0100               	movlb	0	; () banked
  9152  00848E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9153  008490  0E3E               	movlw	62
  9154  008492  ECA6  F044         	call	_RADIO_RegisterWrite
  9155                           
  9156                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
  9157  008496  0EFF               	movlw	255
  9158  008498  0100               	movlb	0	; () banked
  9159  00849A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9160  00849C  0E3F               	movlw	63
  9161  00849E  ECA6  F044         	call	_RADIO_RegisterWrite
  9162  0084A2  0012               	return	
  9163  0084A4                     __end_of_RADIO_UnhandledInterrupt:
  9164                           	opt stack 0
  9165                           tosu	equ	0xFFF
  9166                           tosh	equ	0xFFE
  9167                           tosl	equ	0xFFD
  9168                           pclath	equ	0xFFA
  9169                           tblptru	equ	0xFF8
  9170                           tblptrh	equ	0xFF7
  9171                           tblptrl	equ	0xFF6
  9172                           tablat	equ	0xFF5
  9173                           prodh	equ	0xFF4
  9174                           prodl	equ	0xFF3
  9175                           intcon	equ	0xFF2
  9176                           intcon2	equ	0xFF1
  9177                           intcon3	equ	0xFF0
  9178                           postinc0	equ	0xFEE
  9179                           wreg	equ	0xFE8
  9180                           postinc1	equ	0xFE6
  9181                           postdec1	equ	0xFE5
  9182                           plusw1	equ	0xFE3
  9183                           fsr1h	equ	0xFE2
  9184                           fsr1l	equ	0xFE1
  9185                           indf2	equ	0xFDF
  9186                           postinc2	equ	0xFDE
  9187                           postdec2	equ	0xFDD
  9188                           fsr2h	equ	0xFDA
  9189                           fsr2l	equ	0xFD9
  9190                           status	equ	0xFD8
  9191                           
  9192 ;; *************** function _RADIO_TxDone *****************
  9193 ;; Defined at:
  9194 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;		None
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;  timeOnAir       4  135[BANK0 ] unsigned long 
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  1    wreg      void 
  9201 ;; Registers used:
  9202 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9203 ;; Tracked objects:
  9204 ;;		On entry : 0/0
  9205 ;;		On exit  : 0/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9209 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9210 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9211 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9212 ;;Total ram usage:       12 bytes
  9213 ;; Hardware stack levels used:    1
  9214 ;; Hardware stack levels required when called:   15
  9215 ;; This function calls:
  9216 ;;		_LORAWAN_TxDone
  9217 ;;		_RADIO_RegisterWrite
  9218 ;;		_RADIO_WriteMode
  9219 ;;		_SwTimerReadValue
  9220 ;;		_SwTimerStop
  9221 ;;		___lmul
  9222 ;; This function is called by:
  9223 ;;		_RADIO_DIO0
  9224 ;; This function uses a non-reentrant model
  9225 ;;
  9226                           
  9227                           	psect	text57
  9228  0059D4                     __ptext57:
  9229                           	opt stack 0
  9230  0059D4                     _RADIO_TxDone:
  9231                           	opt stack 13
  9232                           
  9233                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
  9234                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9235                           
  9236                           ;incstack = 0
  9237  0059D4  0101               	movlb	1	; () banked
  9238  0059D6  514D               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9239  0059D8  ECF9  F043         	call	_SwTimerStop
  9240                           
  9241                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
  9242  0059DC  0E08               	movlw	8
  9243  0059DE  0100               	movlb	0	; () banked
  9244  0059E0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9245  0059E2  0E12               	movlw	18
  9246  0059E4  ECA6  F044         	call	_RADIO_RegisterWrite
  9247                           
  9248                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9249  0059E8  C13C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9250  0059EC  0E00               	movlw	0
  9251  0059EE  0100               	movlb	0	; () banked
  9252  0059F0  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9253  0059F2  0E00               	movlw	0
  9254  0059F4  EC0D  F02F         	call	_RADIO_WriteMode
  9255                           
  9256                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
  9257  0059F8  0101               	movlb	1	; () banked
  9258  0059FA  9147               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  9259                           
  9260                           ; BSR set to: 1
  9261                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  9262  0059FC  B947               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  9263  0059FE  0012               	return	
  9264                           
  9265                           ; BSR set to: 1
  9266                           ;radio_driver_SX1276.c: 1087: {
  9267                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
  9268  005A00  514B               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9269  005A02  ECA8  F041         	call	_SwTimerReadValue
  9270  005A06  0100               	movlb	0	; () banked
  9271  005A08  5194               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
  9272  005A0A  E108               	bnz	u19340
  9273  005A0C  0E1F               	movlw	31
  9274  005A0E  5D91               	subwf	?_SwTimerReadValue& (0+255),w,b
  9275  005A10  0EAC               	movlw	172
  9276  005A12  5992               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
  9277  005A14  0EDF               	movlw	223
  9278  005A16  5993               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
  9279  005A18  A0D8               	btfss	status,0,c
  9280  005A1A  D021               	goto	l571
  9281  005A1C                     u19340:
  9282                           
  9283                           ; BSR set to: 0
  9284  005A1C  0101               	movlb	1	; () banked
  9285  005A1E  514B               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9286  005A20  ECA8  F041         	call	_SwTimerReadValue
  9287  005A24  0E0D               	movlw	13
  9288  005A26  D006               	goto	u19350
  9289  005A28                     u19355:
  9290  005A28  0100               	movlb	0	; () banked
  9291  005A2A  90D8               	bcf	status,0,c
  9292  005A2C  3394               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
  9293  005A2E  3393               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
  9294  005A30  3392               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
  9295  005A32  3391               	rrcf	?_SwTimerReadValue& (0+255),f,b
  9296  005A34                     u19350:
  9297  005A34  2EE8               	decfsz	wreg,f,c
  9298  005A36  D7F8               	goto	u19355
  9299  005A38  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
  9300  005A3C  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  9301  005A40  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  9302  005A44  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  9303  005A48  0E7D               	movlw	125
  9304  005A4A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
  9305  005A4C  0E00               	movlw	0
  9306  005A4E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9307  005A50  0E00               	movlw	0
  9308  005A52  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9309  005A54  0E00               	movlw	0
  9310  005A56  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9311  005A58  EC72  F03E         	call	___lmul	;wreg free
  9312  005A5C  D021               	goto	L5
  9313  005A5E                     l571:
  9314  005A5E  0101               	movlb	1	; () banked
  9315  005A60  514B               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9316  005A62  ECA8  F041         	call	_SwTimerReadValue
  9317  005A66  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
  9318  005A6A  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  9319  005A6E  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  9320  005A72  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  9321  005A76  0E7D               	movlw	125
  9322  005A78  0100               	movlb	0	; () banked
  9323  005A7A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
  9324  005A7C  0E00               	movlw	0
  9325  005A7E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9326  005A80  0E00               	movlw	0
  9327  005A82  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9328  005A84  0E00               	movlw	0
  9329  005A86  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9330  005A88  EC72  F03E         	call	___lmul	;wreg free
  9331  005A8C  0E0D               	movlw	13
  9332  005A8E  D006               	goto	u19360
  9333  005A90                     u19365:
  9334  005A90  0100               	movlb	0	; () banked
  9335  005A92  90D8               	bcf	status,0,c
  9336  005A94  339D               	rrcf	(?___lmul+3)& (0+255),f,b
  9337  005A96  339C               	rrcf	(?___lmul+2)& (0+255),f,b
  9338  005A98  339B               	rrcf	(?___lmul+1)& (0+255),f,b
  9339  005A9A  339A               	rrcf	?___lmul& (0+255),f,b
  9340  005A9C                     u19360:
  9341  005A9C  2EE8               	decfsz	wreg,f,c
  9342  005A9E  D7F8               	goto	u19365
  9343  005AA0                     L5:
  9344  005AA0  C09A  F0EB         	movff	?___lmul,_RADIO_TxDone$789
  9345  005AA4  C09B  F0EC         	movff	?___lmul+1,_RADIO_TxDone$789+1
  9346  005AA8  C09C  F0ED         	movff	?___lmul+2,_RADIO_TxDone$789+2
  9347  005AAC  C09D  F0EE         	movff	?___lmul+3,_RADIO_TxDone$789+3
  9348                           
  9349                           ; BSR set to: 0
  9350  005AB0  C0EB  F0E3         	movff	_RADIO_TxDone$789,??_RADIO_TxDone
  9351  005AB4  C0EC  F0E4         	movff	_RADIO_TxDone$789+1,??_RADIO_TxDone+1
  9352  005AB8  C0ED  F0E5         	movff	_RADIO_TxDone$789+2,??_RADIO_TxDone+2
  9353  005ABC  C0EE  F0E6         	movff	_RADIO_TxDone$789+3,??_RADIO_TxDone+3
  9354  005AC0  0100               	movlb	0	; () banked
  9355  005AC2  1FE3               	comf	??_RADIO_TxDone& (0+255),f,b
  9356  005AC4  1FE4               	comf	(??_RADIO_TxDone+1)& (0+255),f,b
  9357  005AC6  1FE5               	comf	(??_RADIO_TxDone+2)& (0+255),f,b
  9358  005AC8  1FE6               	comf	(??_RADIO_TxDone+3)& (0+255),f,b
  9359  005ACA  2BE3               	incf	??_RADIO_TxDone& (0+255),f,b
  9360  005ACC  0E00               	movlw	0
  9361  005ACE  23E4               	addwfc	(??_RADIO_TxDone+1)& (0+255),f,b
  9362  005AD0  23E5               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9363  005AD2  23E6               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9364  005AD4  0E20               	movlw	32
  9365  005AD6  25E3               	addwf	??_RADIO_TxDone& (0+255),w,b
  9366  005AD8  6FE7               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  9367  005ADA  0E4E               	movlw	78
  9368  005ADC  21E4               	addwfc	(??_RADIO_TxDone+1)& (0+255),w,b
  9369  005ADE  6FE8               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  9370  005AE0  0E00               	movlw	0
  9371  005AE2  21E5               	addwfc	(??_RADIO_TxDone+2)& (0+255),w,b
  9372  005AE4  6FE9               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  9373  005AE6  0E00               	movlw	0
  9374  005AE8  21E6               	addwfc	(??_RADIO_TxDone+3)& (0+255),w,b
  9375  005AEA  6FEA               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  9376                           
  9377                           ; BSR set to: 0
  9378                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
  9379  005AEC  C0E7  F0BB         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  9380  005AF0  C0E8  F0BC         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  9381  005AF4  EC96  F006         	call	_LORAWAN_TxDone	;wreg free
  9382  005AF8  0012               	return	
  9383  005AFA                     __end_of_RADIO_TxDone:
  9384                           	opt stack 0
  9385                           tosu	equ	0xFFF
  9386                           tosh	equ	0xFFE
  9387                           tosl	equ	0xFFD
  9388                           pclath	equ	0xFFA
  9389                           tblptru	equ	0xFF8
  9390                           tblptrh	equ	0xFF7
  9391                           tblptrl	equ	0xFF6
  9392                           tablat	equ	0xFF5
  9393                           prodh	equ	0xFF4
  9394                           prodl	equ	0xFF3
  9395                           intcon	equ	0xFF2
  9396                           intcon2	equ	0xFF1
  9397                           intcon3	equ	0xFF0
  9398                           postinc0	equ	0xFEE
  9399                           wreg	equ	0xFE8
  9400                           postinc1	equ	0xFE6
  9401                           postdec1	equ	0xFE5
  9402                           plusw1	equ	0xFE3
  9403                           fsr1h	equ	0xFE2
  9404                           fsr1l	equ	0xFE1
  9405                           indf2	equ	0xFDF
  9406                           postinc2	equ	0xFDE
  9407                           postdec2	equ	0xFDD
  9408                           fsr2h	equ	0xFDA
  9409                           fsr2l	equ	0xFD9
  9410                           status	equ	0xFD8
  9411                           
  9412 ;; *************** function _RADIO_RxDone *****************
  9413 ;; Defined at:
  9414 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;		None
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;  i               1  148[BANK0 ] unsigned char 
  9419 ;;  irqFlags        1  147[BANK0 ] unsigned char 
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  1    wreg      void 
  9422 ;; Registers used:
  9423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9430 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9432 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9433 ;;Total ram usage:        2 bytes
  9434 ;; Hardware stack levels used:    1
  9435 ;; Hardware stack levels required when called:   16
  9436 ;; This function calls:
  9437 ;;		_HALSPICSAssert
  9438 ;;		_HALSPICSDeassert
  9439 ;;		_HALSPISend
  9440 ;;		_LORAWAN_RxDone
  9441 ;;		_RADIO_RegisterRead
  9442 ;;		_RADIO_RegisterWrite
  9443 ;;		_RADIO_WriteMode
  9444 ;;		_SwTimerStop
  9445 ;;		___abdiv
  9446 ;; This function is called by:
  9447 ;;		_RADIO_DIO0
  9448 ;; This function uses a non-reentrant model
  9449 ;;
  9450                           
  9451                           	psect	text58
  9452  0063CC                     __ptext58:
  9453                           	opt stack 0
  9454  0063CC                     _RADIO_RxDone:
  9455                           	opt stack 12
  9456                           
  9457                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
  9458                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
  9459                           
  9460                           ;incstack = 0
  9461  0063CC  0E12               	movlw	18
  9462  0063CE  ECE5  F043         	call	_RADIO_RegisterRead
  9463  0063D2  0100               	movlb	0	; () banked
  9464  0063D4  6FF3               	movwf	RADIO_RxDone@irqFlags& (0+255),b
  9465                           
  9466                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  9467  0063D6  0E70               	movlw	112
  9468  0063D8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9469  0063DA  0E12               	movlw	18
  9470  0063DC  ECA6  F044         	call	_RADIO_RegisterWrite
  9471                           
  9472                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
  9473  0063E0  0100               	movlb	0	; () banked
  9474  0063E2  51F3               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  9475  0063E4  0B50               	andlw	80
  9476  0063E6  0A50               	xorlw	80
  9477  0063E8  A4D8               	btfss	status,2,c
  9478  0063EA  0012               	return	
  9479                           
  9480                           ; BSR set to: 0
  9481                           ;radio_driver_SX1276.c: 969: {
  9482                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9483  0063EC  0101               	movlb	1	; () banked
  9484  0063EE  514D               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9485  0063F0  ECF9  F043         	call	_SwTimerStop
  9486                           
  9487                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
  9488  0063F4  0E1C               	movlw	28
  9489  0063F6  ECE5  F043         	call	_RADIO_RegisterRead
  9490  0063FA  0100               	movlb	0	; () banked
  9491  0063FC  6FF4               	movwf	RADIO_RxDone@i& (0+255),b
  9492                           
  9493                           ; BSR set to: 0
  9494                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
  9495  0063FE  0101               	movlb	1	; () banked
  9496  006400  5140               	movf	(_RadioConfiguration+28)& (0+255),w,b
  9497  006402  B4D8               	btfsc	status,2,c
  9498  006404  D004               	goto	u19260
  9499                           
  9500                           ; BSR set to: 1
  9501  006406  0100               	movlb	0	; () banked
  9502  006408  ABF3               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
  9503                           
  9504                           ; BSR set to: 0
  9505  00640A  ADF4               	btfss	RADIO_RxDone@i& (0+255),6,b
  9506  00640C  D03C               	goto	l543
  9507  00640E                     u19260:
  9508                           
  9509                           ;radio_driver_SX1276.c: 976: {
  9510                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
  9511                           
  9512                           ; BSR set to: 0
  9513  00640E  0E13               	movlw	19
  9514  006410  ECE5  F043         	call	_RADIO_RegisterRead
  9515  006414  0101               	movlb	1	; () banked
  9516  006416  6F48               	movwf	(_RadioConfiguration+36)& (0+255),b
  9517                           
  9518                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
  9519  006418  0E00               	movlw	0
  9520  00641A  0100               	movlb	0	; () banked
  9521  00641C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9522  00641E  0E0D               	movlw	13
  9523  006420  ECA6  F044         	call	_RADIO_RegisterWrite
  9524                           
  9525                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
  9526  006424  ECCA  F046         	call	_HALSPICSAssert	;wreg free
  9527                           
  9528                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
  9529  006428  0E00               	movlw	0
  9530  00642A  EC34  F046         	call	_HALSPISend
  9531                           
  9532                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9533  00642E  0E00               	movlw	0
  9534  006430  0100               	movlb	0	; () banked
  9535  006432  6FF4               	movwf	RADIO_RxDone@i& (0+255),b
  9536  006434  D00F               	goto	l546
  9537  006436                     
  9538                           ; BSR set to: 0
  9539                           ;radio_driver_SX1276.c: 990: {
  9540                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9541                           
  9542                           ; BSR set to: 0
  9543  006436  51F4               	movf	RADIO_RxDone@i& (0+255),w,b
  9544  006438  0D01               	mullw	1
  9545  00643A  50F3               	movf	prodl,w,c
  9546  00643C  0101               	movlb	1	; () banked
  9547  00643E  2549               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9548  006440  6ED9               	movwf	fsr2l,c
  9549  006442  50F4               	movf	prodh,w,c
  9550  006444  214A               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9551  006446  6EDA               	movwf	fsr2h,c
  9552  006448  0EFF               	movlw	255
  9553  00644A  EC34  F046         	call	_HALSPISend
  9554  00644E  6EDF               	movwf	indf2,c
  9555  006450  0100               	movlb	0	; () banked
  9556  006452  2BF4               	incf	RADIO_RxDone@i& (0+255),f,b
  9557  006454                     l546:
  9558                           
  9559                           ; BSR set to: 0
  9560                           
  9561                           ; BSR set to: 0
  9562  006454  0101               	movlb	1	; () banked
  9563  006456  5148               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9564  006458  0100               	movlb	0	; () banked
  9565  00645A  5DF4               	subwf	RADIO_RxDone@i& (0+255),w,b
  9566  00645C  A0D8               	btfss	status,0,c
  9567  00645E  D7EB               	goto	l547
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;radio_driver_SX1276.c: 992: }
  9571                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
  9572                           
  9573                           ; BSR set to: 0
  9574  006460  ECC8  F046         	call	_HALSPICSDeassert	;wreg free
  9575                           
  9576                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
  9577  006464  0101               	movlb	1	; () banked
  9578  006466  8547               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9579                           
  9580                           ; BSR set to: 1
  9581                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  9582  006468  0E19               	movlw	25
  9583  00646A  ECE5  F043         	call	_RADIO_RegisterRead
  9584  00646E  0101               	movlb	1	; () banked
  9585  006470  6F56               	movwf	(_RadioConfiguration+50)& (0+255),b
  9586                           
  9587                           ; BSR set to: 1
  9588                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
  9589  006472  0E04               	movlw	4
  9590  006474  0100               	movlb	0	; () banked
  9591  006476  6F60               	movwf	___abdiv@divisor& (0+255),b
  9592  006478  0101               	movlb	1	; () banked
  9593  00647A  5156               	movf	(_RadioConfiguration+50)& (0+255),w,b
  9594  00647C  EC33  F03C         	call	___abdiv
  9595  006480  0101               	movlb	1	; () banked
  9596  006482  6F56               	movwf	(_RadioConfiguration+50)& (0+255),b
  9597                           
  9598                           ;radio_driver_SX1276.c: 998: }
  9599  006484  D002               	goto	l549
  9600  006486                     l543:
  9601                           
  9602                           ;radio_driver_SX1276.c: 999: else
  9603                           ;radio_driver_SX1276.c: 1000: {
  9604                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
  9605                           
  9606                           ; BSR set to: 1
  9607  006486  0101               	movlb	1	; () banked
  9608  006488  8747               	bsf	(_RadioConfiguration+35)& (0+255),3,b
  9609  00648A                     l549:
  9610                           
  9611                           ; BSR set to: 1
  9612                           ;radio_driver_SX1276.c: 1003: }
  9613                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9614                           
  9615                           ; BSR set to: 1
  9616  00648A  C13C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9617  00648E  0E00               	movlw	0
  9618  006490  0100               	movlb	0	; () banked
  9619  006492  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9620  006494  0E00               	movlw	0
  9621  006496  EC0D  F02F         	call	_RADIO_WriteMode
  9622                           
  9623                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
  9624  00649A  0101               	movlb	1	; () banked
  9625  00649C  9347               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9626                           
  9627                           ; BSR set to: 1
  9628                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9629  00649E  C149  F1D0         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9630  0064A2  C14A  F1D1         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9631  0064A6  C148  F1D2         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9632  0064AA  EC43  F000         	call	_LORAWAN_RxDone	;wreg free
  9633  0064AE  0012               	return	
  9634  0064B0                     __end_of_RADIO_RxDone:
  9635                           	opt stack 0
  9636                           tosu	equ	0xFFF
  9637                           tosh	equ	0xFFE
  9638                           tosl	equ	0xFFD
  9639                           pclath	equ	0xFFA
  9640                           tblptru	equ	0xFF8
  9641                           tblptrh	equ	0xFF7
  9642                           tblptrl	equ	0xFF6
  9643                           tablat	equ	0xFF5
  9644                           prodh	equ	0xFF4
  9645                           prodl	equ	0xFF3
  9646                           intcon	equ	0xFF2
  9647                           intcon2	equ	0xFF1
  9648                           intcon3	equ	0xFF0
  9649                           postinc0	equ	0xFEE
  9650                           wreg	equ	0xFE8
  9651                           postinc1	equ	0xFE6
  9652                           postdec1	equ	0xFE5
  9653                           plusw1	equ	0xFE3
  9654                           fsr1h	equ	0xFE2
  9655                           fsr1l	equ	0xFE1
  9656                           indf2	equ	0xFDF
  9657                           postinc2	equ	0xFDE
  9658                           postdec2	equ	0xFDD
  9659                           fsr2h	equ	0xFDA
  9660                           fsr2l	equ	0xFD9
  9661                           status	equ	0xFD8
  9662                           
  9663 ;; *************** function ___abdiv *****************
  9664 ;; Defined at:
  9665 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abdiv.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;  dividend        1    wreg     char 
  9668 ;;  divisor         1    0[BANK0 ] char 
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;  dividend        1    6[BANK0 ] char 
  9671 ;;  quotient        1    5[BANK0 ] char 
  9672 ;;  sign            1    4[BANK0 ] unsigned char 
  9673 ;;  counter         1    3[BANK0 ] unsigned char 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      char 
  9676 ;; Registers used:
  9677 ;;		wreg, status,2, status,0
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9683 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9684 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;Total ram usage:        7 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:    7
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_RADIO_RxDone
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           	psect	text59
  9698  007866                     __ptext59:
  9699                           	opt stack 0
  9700  007866                     ___abdiv:
  9701                           	opt stack 20
  9702                           
  9703                           ;incstack = 0
  9704                           ;___abdiv@dividend stored from wreg
  9705  007866  0100               	movlb	0	; () banked
  9706  007868  6F66               	movwf	___abdiv@dividend& (0+255),b
  9707  00786A  0E00               	movlw	0
  9708  00786C  0100               	movlb	0	; () banked
  9709  00786E  6F64               	movwf	___abdiv@sign& (0+255),b
  9710                           
  9711                           ; BSR set to: 0
  9712  007870  AF60               	btfss	___abdiv@divisor& (0+255),7,b
  9713  007872  D003               	goto	l2749
  9714                           
  9715                           ; BSR set to: 0
  9716  007874  6D60               	negf	___abdiv@divisor& (0+255),b
  9717                           
  9718                           ; BSR set to: 0
  9719  007876  0E01               	movlw	1
  9720  007878  6F64               	movwf	___abdiv@sign& (0+255),b
  9721  00787A                     l2749:
  9722                           
  9723                           ; BSR set to: 0
  9724                           
  9725                           ; BSR set to: 0
  9726  00787A  AF66               	btfss	___abdiv@dividend& (0+255),7,b
  9727  00787C  D003               	goto	l2750
  9728                           
  9729                           ; BSR set to: 0
  9730  00787E  6D66               	negf	___abdiv@dividend& (0+255),b
  9731                           
  9732                           ; BSR set to: 0
  9733  007880  0E01               	movlw	1
  9734  007882  1B64               	xorwf	___abdiv@sign& (0+255),f,b
  9735  007884                     l2750:
  9736                           
  9737                           ; BSR set to: 0
  9738                           
  9739                           ; BSR set to: 0
  9740  007884  0E00               	movlw	0
  9741  007886  6F65               	movwf	___abdiv@quotient& (0+255),b
  9742                           
  9743                           ; BSR set to: 0
  9744  007888  5160               	movf	___abdiv@divisor& (0+255),w,b
  9745  00788A  B4D8               	btfsc	status,2,c
  9746  00788C  D01A               	goto	l2757
  9747                           
  9748                           ; BSR set to: 0
  9749  00788E  0E01               	movlw	1
  9750  007890  6F63               	movwf	___abdiv@counter& (0+255),b
  9751  007892  D003               	goto	l2752
  9752  007894                     
  9753                           ; BSR set to: 0
  9754                           
  9755                           ; BSR set to: 0
  9756  007894  90D8               	bcf	status,0,c
  9757  007896  3760               	rlcf	___abdiv@divisor& (0+255),f,b
  9758                           
  9759                           ; BSR set to: 0
  9760  007898  2B63               	incf	___abdiv@counter& (0+255),f,b
  9761  00789A                     l2752:
  9762                           
  9763                           ; BSR set to: 0
  9764                           
  9765                           ; BSR set to: 0
  9766  00789A  C060  F061         	movff	___abdiv@divisor,??___abdiv
  9767  00789E  6B62               	clrf	(??___abdiv+1)& (0+255),b
  9768  0078A0  BF61               	btfsc	??___abdiv& (0+255),7,b
  9769  0078A2  0762               	decf	(??___abdiv+1)& (0+255),f,b
  9770  0078A4  AF61               	btfss	??___abdiv& (0+255),7,b
  9771  0078A6  D7F6               	goto	l2753
  9772  0078A8                     u19180:
  9773                           
  9774                           ; BSR set to: 0
  9775                           
  9776                           ; BSR set to: 0
  9777                           
  9778                           ; BSR set to: 0
  9779  0078A8  90D8               	bcf	status,0,c
  9780  0078AA  3765               	rlcf	___abdiv@quotient& (0+255),f,b
  9781  0078AC  5160               	movf	___abdiv@divisor& (0+255),w,b
  9782  0078AE  5D66               	subwf	___abdiv@dividend& (0+255),w,b
  9783  0078B0  A0D8               	btfss	status,0,c
  9784  0078B2  D003               	goto	l2756
  9785                           
  9786                           ; BSR set to: 0
  9787  0078B4  5160               	movf	___abdiv@divisor& (0+255),w,b
  9788  0078B6  5F66               	subwf	___abdiv@dividend& (0+255),f,b
  9789                           
  9790                           ; BSR set to: 0
  9791  0078B8  8165               	bsf	___abdiv@quotient& (0+255),0,b
  9792  0078BA                     l2756:
  9793                           
  9794                           ; BSR set to: 0
  9795                           
  9796                           ; BSR set to: 0
  9797  0078BA  90D8               	bcf	status,0,c
  9798  0078BC  3360               	rrcf	___abdiv@divisor& (0+255),f,b
  9799                           
  9800                           ; BSR set to: 0
  9801  0078BE  2F63               	decfsz	___abdiv@counter& (0+255),f,b
  9802  0078C0  D7F3               	goto	u19180
  9803  0078C2                     l2757:
  9804                           
  9805                           ; BSR set to: 0
  9806                           
  9807                           ; BSR set to: 0
  9808                           
  9809                           ; BSR set to: 0
  9810  0078C2  5164               	movf	___abdiv@sign& (0+255),w,b
  9811  0078C4  A4D8               	btfss	status,2,c
  9812                           
  9813                           ; BSR set to: 0
  9814  0078C6  6D65               	negf	___abdiv@quotient& (0+255),b
  9815                           
  9816                           ; BSR set to: 0
  9817                           
  9818                           ; BSR set to: 0
  9819  0078C8  5165               	movf	___abdiv@quotient& (0+255),w,b
  9820  0078CA  0012               	return	
  9821  0078CC                     __end_of___abdiv:
  9822                           	opt stack 0
  9823                           tosu	equ	0xFFF
  9824                           tosh	equ	0xFFE
  9825                           tosl	equ	0xFFD
  9826                           pclath	equ	0xFFA
  9827                           tblptru	equ	0xFF8
  9828                           tblptrh	equ	0xFF7
  9829                           tblptrl	equ	0xFF6
  9830                           tablat	equ	0xFF5
  9831                           prodh	equ	0xFF4
  9832                           prodl	equ	0xFF3
  9833                           intcon	equ	0xFF2
  9834                           intcon2	equ	0xFF1
  9835                           intcon3	equ	0xFF0
  9836                           postinc0	equ	0xFEE
  9837                           wreg	equ	0xFE8
  9838                           postinc1	equ	0xFE6
  9839                           postdec1	equ	0xFE5
  9840                           plusw1	equ	0xFE3
  9841                           fsr1h	equ	0xFE2
  9842                           fsr1l	equ	0xFE1
  9843                           indf2	equ	0xFDF
  9844                           postinc2	equ	0xFDE
  9845                           postdec2	equ	0xFDD
  9846                           fsr2h	equ	0xFDA
  9847                           fsr2l	equ	0xFD9
  9848                           status	equ	0xFD8
  9849                           
  9850 ;; *************** function _RADIO_FSKPayloadReady *****************
  9851 ;; Defined at:
  9852 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9853 ;; Parameters:    Size  Location     Type
  9854 ;;		None
  9855 ;; Auto vars:     Size  Location     Type
  9856 ;;  i               1  148[BANK0 ] unsigned char 
  9857 ;;  irqFlags        1  147[BANK0 ] unsigned char 
  9858 ;; Return value:  Size  Location     Type
  9859 ;;                  1    wreg      void 
  9860 ;; Registers used:
  9861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+8, btemp+9, btem
      +p+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9862 ;; Tracked objects:
  9863 ;;		On entry : 0/0
  9864 ;;		On exit  : 0/0
  9865 ;;		Unchanged: 0/0
  9866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9868 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9870 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9871 ;;Total ram usage:        2 bytes
  9872 ;; Hardware stack levels used:    1
  9873 ;; Hardware stack levels required when called:   16
  9874 ;; This function calls:
  9875 ;;		_HALSPICSAssert
  9876 ;;		_HALSPICSDeassert
  9877 ;;		_HALSPISend
  9878 ;;		_LORAWAN_RxDone
  9879 ;;		_LORAWAN_RxTimeout
  9880 ;;		_RADIO_RegisterRead
  9881 ;;		_RADIO_WriteMode
  9882 ;;		_SwTimerStop
  9883 ;; This function is called by:
  9884 ;;		_RADIO_DIO0
  9885 ;; This function uses a non-reentrant model
  9886 ;;
  9887                           
  9888                           	psect	text60
  9889  006B26                     __ptext60:
  9890                           	opt stack 0
  9891  006B26                     _RADIO_FSKPayloadReady:
  9892                           	opt stack 12
  9893                           
  9894                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
  9895                           ;radio_driver_SX1276.c: 1013: uint8_t i;
  9896                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
  9897                           
  9898                           ; BSR set to: 0
  9899                           ;incstack = 0
  9900  006B26  0E3F               	movlw	63
  9901  006B28  ECE5  F043         	call	_RADIO_RegisterRead
  9902  006B2C  0100               	movlb	0	; () banked
  9903  006B2E  6FF3               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
  9904                           
  9905                           ; BSR set to: 0
  9906                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
  9907  006B30  A5F3               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
  9908  006B32  0012               	return	
  9909                           
  9910                           ; BSR set to: 0
  9911                           ;radio_driver_SX1276.c: 1017: {
  9912                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9913  006B34  0101               	movlb	1	; () banked
  9914  006B36  514D               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9915  006B38  ECF9  F043         	call	_SwTimerStop
  9916                           
  9917                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
  9918  006B3C  0101               	movlb	1	; () banked
  9919  006B3E  514C               	movf	(_RadioConfiguration+40)& (0+255),w,b
  9920  006B40  ECF9  F043         	call	_SwTimerStop
  9921                           
  9922                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
  9923  006B44  ECCA  F046         	call	_HALSPICSAssert	;wreg free
  9924                           
  9925                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
  9926  006B48  0E00               	movlw	0
  9927  006B4A  EC34  F046         	call	_HALSPISend
  9928                           
  9929                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
  9930  006B4E  0EFF               	movlw	255
  9931  006B50  EC34  F046         	call	_HALSPISend
  9932  006B54  0101               	movlb	1	; () banked
  9933  006B56  6F48               	movwf	(_RadioConfiguration+36)& (0+255),b
  9934                           
  9935                           ; BSR set to: 1
  9936                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9937  006B58  0E00               	movlw	0
  9938  006B5A  0100               	movlb	0	; () banked
  9939  006B5C  6FF4               	movwf	RADIO_FSKPayloadReady@i& (0+255),b
  9940  006B5E  D00F               	goto	l554
  9941  006B60                     
  9942                           ; BSR set to: 0
  9943                           ;radio_driver_SX1276.c: 1029: {
  9944                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9945                           
  9946                           ; BSR set to: 0
  9947  006B60  51F4               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9948  006B62  0D01               	mullw	1
  9949  006B64  50F3               	movf	prodl,w,c
  9950  006B66  0101               	movlb	1	; () banked
  9951  006B68  2549               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9952  006B6A  6ED9               	movwf	fsr2l,c
  9953  006B6C  50F4               	movf	prodh,w,c
  9954  006B6E  214A               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9955  006B70  6EDA               	movwf	fsr2h,c
  9956  006B72  0EFF               	movlw	255
  9957  006B74  EC34  F046         	call	_HALSPISend
  9958  006B78  6EDF               	movwf	indf2,c
  9959  006B7A  0100               	movlb	0	; () banked
  9960  006B7C  2BF4               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
  9961  006B7E                     l554:
  9962                           
  9963                           ; BSR set to: 0
  9964                           
  9965                           ; BSR set to: 0
  9966  006B7E  0101               	movlb	1	; () banked
  9967  006B80  5148               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9968  006B82  0100               	movlb	0	; () banked
  9969  006B84  5DF4               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9970  006B86  A0D8               	btfss	status,0,c
  9971  006B88  D7EB               	goto	l555
  9972                           
  9973                           ; BSR set to: 0
  9974                           ;radio_driver_SX1276.c: 1031: }
  9975                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
  9976                           
  9977                           ; BSR set to: 0
  9978  006B8A  ECC8  F046         	call	_HALSPICSDeassert	;wreg free
  9979                           
  9980                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9981  006B8E  C13C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9982  006B92  0E00               	movlw	0
  9983  006B94  0100               	movlb	0	; () banked
  9984  006B96  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9985  006B98  0E00               	movlw	0
  9986  006B9A  EC0D  F02F         	call	_RADIO_WriteMode
  9987                           
  9988                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
  9989  006B9E  0101               	movlb	1	; () banked
  9990  006BA0  9347               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9991                           
  9992                           ; BSR set to: 1
  9993                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
  9994  006BA2  0E80               	movlw	128
  9995  006BA4  6F56               	movwf	(_RadioConfiguration+50)& (0+255),b
  9996                           
  9997                           ; BSR set to: 1
  9998                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
  9999  006BA6  0540               	decf	(_RadioConfiguration+28)& (0+255),w,b
 10000  006BA8  A4D8               	btfss	status,2,c
 10001  006BAA  D008               	goto	l557
 10002                           
 10003                           ; BSR set to: 1
 10004                           ;radio_driver_SX1276.c: 1040: {
 10005                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
 10006  006BAC  0100               	movlb	0	; () banked
 10007  006BAE  A3F3               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
 10008  006BB0  D002               	goto	l558
 10009                           
 10010                           ; BSR set to: 0
 10011                           ;radio_driver_SX1276.c: 1042: {
 10012                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
 10013  006BB2  0101               	movlb	1	; () banked
 10014  006BB4  D003               	goto	l557
 10015  006BB6                     l558:
 10016                           
 10017                           ;radio_driver_SX1276.c: 1045: else
 10018                           ;radio_driver_SX1276.c: 1046: {
 10019                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
 10020                           
 10021                           ; BSR set to: 1
 10022  006BB6  0101               	movlb	1	; () banked
 10023  006BB8  9547               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 10024                           
 10025                           ; BSR set to: 1
 10026                           ;radio_driver_SX1276.c: 1048: }
 10027                           ;radio_driver_SX1276.c: 1049: }
 10028  006BBA  D001               	goto	l560
 10029  006BBC                     l557:
 10030                           
 10031                           ; BSR set to: 1
 10032                           ;radio_driver_SX1276.c: 1050: else
 10033                           ;radio_driver_SX1276.c: 1051: {
 10034                           ;radio_driver_SX1276.c: 1052: RadioConfiguration.flags |= (1 << (2));
 10035                           
 10036                           ; BSR set to: 1
 10037  006BBC  8547               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 10038  006BBE                     l560:
 10039                           
 10040                           ; BSR set to: 1
 10041                           ;radio_driver_SX1276.c: 1053: }
 10042                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 10043                           
 10044                           ; BSR set to: 1
 10045  006BBE  A547               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 10046  006BC0  D009               	goto	l561
 10047                           
 10048                           ; BSR set to: 1
 10049                           ;radio_driver_SX1276.c: 1056: {
 10050                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
 10051  006BC2  C149  F1D0         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 10052  006BC6  C14A  F1D1         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 10053  006BCA  C148  F1D2         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 10054  006BCE  EC43  F000         	call	_LORAWAN_RxDone	;wreg free
 10055                           
 10056                           ;radio_driver_SX1276.c: 1058: }
 10057  006BD2  0012               	return	
 10058  006BD4                     l561:
 10059                           
 10060                           ;radio_driver_SX1276.c: 1059: else
 10061                           ;radio_driver_SX1276.c: 1060: {
 10062                           ;radio_driver_SX1276.c: 1061: LORAWAN_RxTimeout();
 10063  006BD4  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
 10064  006BD8  0012               	return	
 10065  006BDA                     __end_of_RADIO_FSKPayloadReady:
 10066                           	opt stack 0
 10067                           tosu	equ	0xFFF
 10068                           tosh	equ	0xFFE
 10069                           tosl	equ	0xFFD
 10070                           pclath	equ	0xFFA
 10071                           tblptru	equ	0xFF8
 10072                           tblptrh	equ	0xFF7
 10073                           tblptrl	equ	0xFF6
 10074                           tablat	equ	0xFF5
 10075                           prodh	equ	0xFF4
 10076                           prodl	equ	0xFF3
 10077                           intcon	equ	0xFF2
 10078                           intcon2	equ	0xFF1
 10079                           intcon3	equ	0xFF0
 10080                           postinc0	equ	0xFEE
 10081                           wreg	equ	0xFE8
 10082                           postinc1	equ	0xFE6
 10083                           postdec1	equ	0xFE5
 10084                           plusw1	equ	0xFE3
 10085                           fsr1h	equ	0xFE2
 10086                           fsr1l	equ	0xFE1
 10087                           indf2	equ	0xFDF
 10088                           postinc2	equ	0xFDE
 10089                           postdec2	equ	0xFDD
 10090                           fsr2h	equ	0xFDA
 10091                           fsr2l	equ	0xFD9
 10092                           status	equ	0xFD8
 10093                           
 10094 ;; *************** function _LORAWAN_RxTimeout *****************
 10095 ;; Defined at:
 10096 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;		None
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;  minim           4  102[BANK0 ] unsigned long 
 10101 ;;  i               1  106[BANK0 ] unsigned char 
 10102 ;; Return value:  Size  Location     Type
 10103 ;;                  1    wreg      void 
 10104 ;; Registers used:
 10105 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10112 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10113 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10114 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10115 ;;Total ram usage:        9 bytes
 10116 ;; Hardware stack levels used:    1
 10117 ;; Hardware stack levels required when called:   15
 10118 ;; This function calls:
 10119 ;;		_LORAWAN_ReceiveWindow2Callback
 10120 ;;		_RADIO_Transmit
 10121 ;;		_ResetParametersForConfirmedTransmission
 10122 ;;		_ResetParametersForUnconfirmedTransmission
 10123 ;;		_RxData
 10124 ;;		_SelectChannelForTransmission
 10125 ;;		_SetJoinFailState
 10126 ;;		_SwTimerSetTimeout
 10127 ;;		_SwTimerStart
 10128 ;;		___lldiv
 10129 ;; This function is called by:
 10130 ;;		_RADIO_FSKPayloadReady
 10131 ;;		_RADIO_RxTimeout
 10132 ;;		_RADIO_RxFSKTimeout
 10133 ;;		_RADIO_WatchdogTimeout
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137                           	psect	text61
 10138  00259A                     __ptext61:
 10139                           	opt stack 0
 10140  00259A                     _LORAWAN_RxTimeout:
 10141                           	opt stack 12
 10142                           
 10143                           ;lorawan_eu.c: 466: uint8_t i;
 10144                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
 10145                           
 10146                           ;incstack = 0
 10147  00259A  0100               	movlb	0	; () banked
 10148  00259C  69C6               	setf	LORAWAN_RxTimeout@minim& (0+255),b
 10149  00259E  69C7               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
 10150  0025A0  69C8               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
 10151  0025A2  69C9               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
 10152                           
 10153                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
 10154  0025A4  0102               	movlb	2	; () banked
 10155  0025A6  B103               	btfsc	(_loRa+3)& (0+255),0,b
 10156  0025A8  D190               	goto	l1057
 10157                           
 10158                           ; BSR set to: 2
 10159                           ;lorawan_eu.c: 470: {
 10160                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
 10161  0025AA  5102               	movf	(_loRa+2)& (0+255),w,b
 10162  0025AC  0B0F               	andlw	15
 10163  0025AE  0A03               	xorlw	3
 10164  0025B0  A4D8               	btfss	status,2,c
 10165  0025B2  D011               	goto	l1058
 10166                           
 10167                           ; BSR set to: 2
 10168                           ;lorawan_eu.c: 473: {
 10169                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
 10170  0025B4  5112               	movf	(_loRa+18)& (0+255),w,b
 10171  0025B6  A4D8               	btfss	status,2,c
 10172  0025B8  D005               	goto	l1059
 10173                           
 10174                           ; BSR set to: 2
 10175                           ;lorawan_eu.c: 475: {
 10176                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
 10177  0025BA  5102               	movf	(_loRa+2)& (0+255),w,b
 10178  0025BC  0BF0               	andlw	-16
 10179  0025BE  0904               	iorlw	4
 10180  0025C0  6F02               	movwf	(_loRa+2)& (0+255),b
 10181                           
 10182                           ;lorawan_eu.c: 477: }
 10183  0025C2  0012               	return	
 10184  0025C4                     l1059:
 10185                           
 10186                           ; BSR set to: 2
 10187                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
 10188                           
 10189                           ; BSR set to: 2
 10190  0025C4  0E02               	movlw	2
 10191  0025C6  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10192  0025C8  A4D8               	btfss	status,2,c
 10193  0025CA  0012               	return	
 10194                           
 10195                           ; BSR set to: 2
 10196                           ;lorawan_eu.c: 479: {
 10197                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
 10198  0025CC  0E00               	movlw	0
 10199  0025CE  6EE6               	movwf	postinc1,c
 10200  0025D0  EC36  F033         	call	_LORAWAN_ReceiveWindow2Callback	;wreg free
 10201                           
 10202                           ;lorawan_eu.c: 481: }
 10203                           ;lorawan_eu.c: 482: }
 10204  0025D4  0012               	return	
 10205  0025D6                     l1058:
 10206                           
 10207                           ; BSR set to: 2
 10208                           ;lorawan_eu.c: 483: else
 10209                           ;lorawan_eu.c: 484: {
 10210                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
 10211  0025D6  A500               	btfss	_loRa& (0+255),2,b
 10212  0025D8  D003               	goto	l1063
 10213                           
 10214                           ; BSR set to: 2
 10215                           ;lorawan_eu.c: 487: {
 10216                           ;lorawan_eu.c: 488: SetJoinFailState();
 10217  0025DA  EC83  F042         	call	_SetJoinFailState	;wreg free
 10218                           
 10219                           ;lorawan_eu.c: 489: }
 10220  0025DE  0012               	return	
 10221  0025E0                     l1063:
 10222                           
 10223                           ; BSR set to: 2
 10224                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
 10225  0025E0  A902               	btfss	(_loRa+2)& (0+255),4,b
 10226  0025E2  0012               	return	
 10227                           
 10228                           ; BSR set to: 2
 10229                           ;lorawan_eu.c: 492: {
 10230                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
 10231  0025E4  A100               	btfss	_loRa& (0+255),0,b
 10232  0025E6  D058               	goto	l1066
 10233                           
 10234                           ; BSR set to: 2
 10235                           ;lorawan_eu.c: 494: {
 10236                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
 10237  0025E8  51D9               	movf	(_loRa+217)& (0+255),w,b
 10238  0025EA  5DD7               	subwf	(_loRa+215)& (0+255),w,b
 10239  0025EC  A0D8               	btfss	status,0,c
 10240  0025EE  D038               	goto	l1067
 10241                           
 10242                           ; BSR set to: 2
 10243                           ;lorawan_eu.c: 496: {
 10244                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 10245  0025F0  5102               	movf	(_loRa+2)& (0+255),w,b
 10246  0025F2  0BF0               	andlw	-16
 10247  0025F4  0906               	iorlw	6
 10248  0025F6  6F02               	movwf	(_loRa+2)& (0+255),b
 10249                           
 10250                           ; BSR set to: 2
 10251                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
 10252  0025F8  51A0               	movf	(_loRa+160)& (0+255),w,b
 10253  0025FA  0100               	movlb	0	; () banked
 10254  0025FC  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10255  0025FE  0102               	movlb	2	; () banked
 10256  002600  51A1               	movf	(_loRa+161)& (0+255),w,b
 10257  002602  0100               	movlb	0	; () banked
 10258  002604  6FC3               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
 10259  002606  6BC4               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
 10260  002608  6BC5               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
 10261  00260A  0E0C               	movlw	12
 10262  00260C                     u18685:
 10263  00260C  90D8               	bcf	status,0,c
 10264  00260E  37C2               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10265  002610  37C3               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10266  002612  37C4               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10267  002614  37C5               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10268  002616  2EE8               	decfsz	wreg,f,c
 10269  002618  D7F9               	goto	u18685
 10270  00261A  C0C2  F060         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
 10271  00261E  C0C3  F061         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
 10272  002622  C0C4  F062         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
 10273  002626  C0C5  F063         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
 10274  00262A  0E7D               	movlw	125
 10275  00262C  6F64               	movwf	___lldiv@divisor& (0+255),b
 10276  00262E  0E00               	movlw	0
 10277  002630  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 10278  002632  0E00               	movlw	0
 10279  002634  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 10280  002636  0E00               	movlw	0
 10281  002638  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 10282  00263A  ECB4  F039         	call	___lldiv	;wreg free
 10283  00263E  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10284  002642  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10285  002646  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10286  00264A  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10287  00264E  0102               	movlb	2	; () banked
 10288  002650  51E8               	movf	(_loRa+232)& (0+255),w,b
 10289  002652  EC23  F041         	call	_SwTimerSetTimeout
 10290                           
 10291                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
 10292  002656  0102               	movlb	2	; () banked
 10293  002658  51E8               	movf	(_loRa+232)& (0+255),w,b
 10294  00265A  EC3B  F037         	call	_SwTimerStart
 10295                           
 10296                           ;lorawan_eu.c: 500: }
 10297  00265E  0012               	return	
 10298  002660                     l1067:
 10299                           
 10300                           ;lorawan_eu.c: 501: else
 10301                           ;lorawan_eu.c: 502: {
 10302                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
 10303  002660  ECD6  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
 10304                           
 10305                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
 10306  002664  0101               	movlb	1	; () banked
 10307  002666  5110               	movf	_rxPayload& (0+255),w,b
 10308  002668  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
 10309  00266A  B4D8               	btfsc	status,2,c
 10310  00266C  0012               	return	
 10311                           
 10312                           ; BSR set to: 1
 10313                           ;lorawan_eu.c: 505: {
 10314                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 10315  00266E  0E00               	movlw	0
 10316  002670  0100               	movlb	0	; () banked
 10317  002672  6F60               	movwf	RxData@pData& (0+255),b
 10318  002674  0E00               	movlw	0
 10319  002676  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10320  002678  0E00               	movlw	0
 10321  00267A  6F62               	movwf	RxData@dataLength& (0+255),b
 10322  00267C  0E00               	movlw	0
 10323  00267E  6F63               	movwf	RxData@status& (0+255),b
 10324  002680  D801               	call	u18708
 10325  002682  0012               	return	
 10326  002684                     u18708:
 10327  002684  0005               	push	
 10328  002686  6EFA               	movwf	pclath,c
 10329  002688  0101               	movlb	1	; () banked
 10330  00268A  5110               	movf	_rxPayload& (0+255),w,b
 10331  00268C  6EFD               	movwf	tosl,c
 10332  00268E  5111               	movf	(_rxPayload+1)& (0+255),w,b
 10333  002690  6EFE               	movwf	tosh,c
 10334  002692  6AFF               	clrf	tosu,c
 10335  002694  50FA               	movf	pclath,w,c
 10336  002696  0012               	return		;indir
 10337  002698                     l1066:
 10338                           
 10339                           ;lorawan_eu.c: 511: else
 10340                           ;lorawan_eu.c: 512: {
 10341                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
 10342  002698  0102               	movlb	2	; () banked
 10343  00269A  51D8               	movf	(_loRa+216)& (0+255),w,b
 10344  00269C  5DD6               	subwf	(_loRa+214)& (0+255),w,b
 10345  00269E  A0D8               	btfss	status,0,c
 10346  0026A0  D0F8               	goto	l1071
 10347                           
 10348                           ; BSR set to: 2
 10349                           ;lorawan_eu.c: 514: {
 10350                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 10351  0026A2  5102               	movf	(_loRa+2)& (0+255),w,b
 10352  0026A4  0BF0               	andlw	-16
 10353  0026A6  0906               	iorlw	6
 10354  0026A8  6F02               	movwf	(_loRa+2)& (0+255),b
 10355                           
 10356                           ; BSR set to: 2
 10357                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
 10358  0026AA  0E01               	movlw	1
 10359  0026AC  EC60  F03B         	call	_SelectChannelForTransmission
 10360  0026B0  0900               	iorlw	0
 10361  0026B2  A4D8               	btfss	status,2,c
 10362  0026B4  D031               	goto	l1072
 10363                           
 10364                           ;lorawan_eu.c: 517: {
 10365                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 10366  0026B6  0EF0               	movlw	low (_macBuffer+16)
 10367  0026B8  0100               	movlb	0	; () banked
 10368  0026BA  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 10369  0026BC  0E04               	movlw	high (_macBuffer+16)
 10370  0026BE  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 10371  0026C0  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
 10372  0026C4  EC10  F01D         	call	_RADIO_Transmit	;wreg free
 10373  0026C8  0100               	movlb	0	; () banked
 10374  0026CA  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 10375  0026CC  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 10376  0026CE  A4D8               	btfss	status,2,c
 10377  0026D0  D007               	goto	l1073
 10378                           
 10379                           ; BSR set to: 0
 10380                           ;lorawan_eu.c: 520: {
 10381                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 10382  0026D2  0102               	movlb	2	; () banked
 10383  0026D4  2BD8               	incf	(_loRa+216)& (0+255),f,b
 10384                           
 10385                           ; BSR set to: 2
 10386                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 10387  0026D6  5102               	movf	(_loRa+2)& (0+255),w,b
 10388  0026D8  0BF0               	andlw	-16
 10389  0026DA  0901               	iorlw	1
 10390  0026DC  6F02               	movwf	(_loRa+2)& (0+255),b
 10391                           
 10392                           ;lorawan_eu.c: 523: }
 10393  0026DE  0012               	return	
 10394  0026E0                     l1073:
 10395                           
 10396                           ;lorawan_eu.c: 524: else
 10397                           ;lorawan_eu.c: 526: {
 10398                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
 10399                           
 10400                           ; BSR set to: 2
 10401  0026E0  ECAF  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10402                           
 10403                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
 10404  0026E4  0101               	movlb	1	; () banked
 10405  0026E6  5110               	movf	_rxPayload& (0+255),w,b
 10406  0026E8  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
 10407  0026EA  B4D8               	btfsc	status,2,c
 10408  0026EC  0012               	return	
 10409                           
 10410                           ; BSR set to: 1
 10411                           ;lorawan_eu.c: 529: {
 10412                           ;lorawan_eu.c: 530: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
 10413  0026EE  0E00               	movlw	0
 10414  0026F0  0100               	movlb	0	; () banked
 10415  0026F2  6F60               	movwf	RxData@pData& (0+255),b
 10416  0026F4  0E00               	movlw	0
 10417  0026F6  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10418  0026F8  0E00               	movlw	0
 10419  0026FA  6F62               	movwf	RxData@dataLength& (0+255),b
 10420  0026FC  0E00               	movlw	0
 10421  0026FE  6F63               	movwf	RxData@status& (0+255),b
 10422  002700  D801               	call	u18758
 10423  002702  0012               	return	
 10424  002704                     u18758:
 10425  002704  0005               	push	
 10426  002706  6EFA               	movwf	pclath,c
 10427  002708  0101               	movlb	1	; () banked
 10428  00270A  5110               	movf	_rxPayload& (0+255),w,b
 10429  00270C  6EFD               	movwf	tosl,c
 10430  00270E  5111               	movf	(_rxPayload+1)& (0+255),w,b
 10431  002710  6EFE               	movwf	tosh,c
 10432  002712  6AFF               	clrf	tosu,c
 10433  002714  50FA               	movf	pclath,w,c
 10434  002716  0012               	return		;indir
 10435  002718                     l1072:
 10436                           
 10437                           ;lorawan_eu.c: 534: else
 10438                           ;lorawan_eu.c: 535: {
 10439                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
 10440  002718  0E00               	movlw	0
 10441  00271A  0100               	movlb	0	; () banked
 10442  00271C  6FCA               	movwf	LORAWAN_RxTimeout@i& (0+255),b
 10443  00271E  D07C               	goto	l1077
 10444  002720                     
 10445                           ;lorawan_eu.c: 538: {
 10446                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 10447                           
 10448                           ; BSR set to: 0
 10449  002720  0100               	movlb	0	; () banked
 10450  002722  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10451  002724  0D0E               	mullw	14
 10452  002726  0E04               	movlw	4
 10453  002728  26F3               	addwf	prodl,f,c
 10454  00272A  0E00               	movlw	0
 10455  00272C  22F4               	addwfc	prodh,f,c
 10456  00272E  0E00               	movlw	low _Channels
 10457  002730  24F3               	addwf	prodl,w,c
 10458  002732  6ED9               	movwf	fsr2l,c
 10459  002734  0E04               	movlw	high _Channels
 10460  002736  20F4               	addwfc	prodh,w,c
 10461  002738  6EDA               	movwf	fsr2h,c
 10462  00273A  04DE               	decf	postinc2,w,c
 10463  00273C  A4D8               	btfss	status,2,c
 10464  00273E  D06A               	goto	l1079
 10465                           
 10466                           ; BSR set to: 0
 10467  002740  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10468  002742  0D0E               	mullw	14
 10469  002744  0E08               	movlw	8
 10470  002746  26F3               	addwf	prodl,f,c
 10471  002748  0E00               	movlw	0
 10472  00274A  22F4               	addwfc	prodh,f,c
 10473  00274C  0E00               	movlw	low _Channels
 10474  00274E  24F3               	addwf	prodl,w,c
 10475  002750  6ED9               	movwf	fsr2l,c
 10476  002752  0E04               	movlw	high _Channels
 10477  002754  20F4               	addwfc	prodh,w,c
 10478  002756  6EDA               	movwf	fsr2h,c
 10479  002758  50DE               	movf	postinc2,w,c
 10480  00275A  10DE               	iorwf	postinc2,w,c
 10481  00275C  10DE               	iorwf	postinc2,w,c
 10482  00275E  10DE               	iorwf	postinc2,w,c
 10483  002760  B4D8               	btfsc	status,2,c
 10484  002762  D058               	goto	l1079
 10485                           
 10486                           ; BSR set to: 0
 10487  002764  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10488  002766  0D0E               	mullw	14
 10489  002768  0E08               	movlw	8
 10490  00276A  26F3               	addwf	prodl,f,c
 10491  00276C  0E00               	movlw	0
 10492  00276E  22F4               	addwfc	prodh,f,c
 10493  002770  0E00               	movlw	low _Channels
 10494  002772  24F3               	addwf	prodl,w,c
 10495  002774  6ED9               	movwf	fsr2l,c
 10496  002776  0E04               	movlw	high _Channels
 10497  002778  20F4               	addwfc	prodh,w,c
 10498  00277A  6EDA               	movwf	fsr2h,c
 10499  00277C  50DE               	movf	postinc2,w,c
 10500  00277E  5DC6               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 10501  002780  50DE               	movf	postinc2,w,c
 10502  002782  59C7               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 10503  002784  50DE               	movf	postinc2,w,c
 10504  002786  59C8               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 10505  002788  50DE               	movf	postinc2,w,c
 10506  00278A  59C9               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 10507  00278C  A0D8               	btfss	status,0,c
 10508  00278E  D042               	goto	l1079
 10509                           
 10510                           ; BSR set to: 0
 10511  002790  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10512  002792  0D0E               	mullw	14
 10513  002794  0E05               	movlw	5
 10514  002796  26F3               	addwf	prodl,f,c
 10515  002798  0E00               	movlw	0
 10516  00279A  22F4               	addwfc	prodh,f,c
 10517  00279C  0E00               	movlw	low _Channels
 10518  00279E  24F3               	addwf	prodl,w,c
 10519  0027A0  6ED9               	movwf	fsr2l,c
 10520  0027A2  0E04               	movlw	high _Channels
 10521  0027A4  20F4               	addwfc	prodh,w,c
 10522  0027A6  6EDA               	movwf	fsr2h,c
 10523  0027A8  0104               	movlb	4	; () banked
 10524  0027AA  50DF               	movf	223,w,c
 10525  0027AC  0B0F               	andlw	15
 10526  0027AE  0100               	movlb	0	; () banked
 10527  0027B0  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10528  0027B2  51C2               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 10529  0027B4  0102               	movlb	2	; () banked
 10530  0027B6  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 10531  0027B8  A0D8               	btfss	status,0,c
 10532  0027BA  D02C               	goto	l1079
 10533                           
 10534                           ; BSR set to: 2
 10535  0027BC  0100               	movlb	0	; () banked
 10536  0027BE  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10537  0027C0  0D0E               	mullw	14
 10538  0027C2  0E05               	movlw	5
 10539  0027C4  26F3               	addwf	prodl,f,c
 10540  0027C6  0E00               	movlw	0
 10541  0027C8  22F4               	addwfc	prodh,f,c
 10542  0027CA  0E00               	movlw	low _Channels
 10543  0027CC  24F3               	addwf	prodl,w,c
 10544  0027CE  6ED9               	movwf	fsr2l,c
 10545  0027D0  0E04               	movlw	high _Channels
 10546  0027D2  20F4               	addwfc	prodh,w,c
 10547  0027D4  6EDA               	movwf	fsr2h,c
 10548  0027D6  0104               	movlb	4	; () banked
 10549  0027D8  38DF               	swapf	223,w,c
 10550  0027DA  0B0F               	andlw	15
 10551  0027DC  0100               	movlb	0	; () banked
 10552  0027DE  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10553  0027E0  0102               	movlb	2	; () banked
 10554  0027E2  51DF               	movf	(_loRa+223)& (0+255),w,b
 10555  0027E4  0100               	movlb	0	; () banked
 10556  0027E6  5DC2               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10557  0027E8  A0D8               	btfss	status,0,c
 10558  0027EA  D014               	goto	l1079
 10559                           
 10560                           ; BSR set to: 0
 10561                           ;lorawan_eu.c: 540: {
 10562                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
 10563  0027EC  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10564  0027EE  0D0E               	mullw	14
 10565  0027F0  0E08               	movlw	8
 10566  0027F2  26F3               	addwf	prodl,f,c
 10567  0027F4  0E00               	movlw	0
 10568  0027F6  22F4               	addwfc	prodh,f,c
 10569  0027F8  0E00               	movlw	low _Channels
 10570  0027FA  24F3               	addwf	prodl,w,c
 10571  0027FC  6ED9               	movwf	fsr2l,c
 10572  0027FE  0E04               	movlw	high _Channels
 10573  002800  20F4               	addwfc	prodh,w,c
 10574  002802  6EDA               	movwf	fsr2h,c
 10575  002804  CFDE F0C6          	movff	postinc2,LORAWAN_RxTimeout@minim
 10576  002808  CFDE F0C7          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 10577  00280C  CFDE F0C8          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 10578  002810  CFDE F0C9          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 10579  002814                     l1079:
 10580                           
 10581                           ; BSR set to: 0
 10582  002814  0100               	movlb	0	; () banked
 10583  002816  2BCA               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 10584  002818                     l1077:
 10585                           
 10586                           ; BSR set to: 0
 10587                           
 10588                           ; BSR set to: 0
 10589  002818  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10590  00281A  0102               	movlb	2	; () banked
 10591  00281C  5DED               	subwf	(_loRa+237)& (0+255),w,b
 10592  00281E  B0D8               	btfsc	status,0,c
 10593  002820  D77F               	goto	l1078
 10594                           
 10595                           ; BSR set to: 2
 10596                           ;lorawan_eu.c: 542: }
 10597                           ;lorawan_eu.c: 543: }
 10598                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
 10599                           
 10600                           ; BSR set to: 2
 10601  002822  C0C6  F0C2         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 10602  002826  C0C7  F0C3         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 10603  00282A  C0C8  F0C4         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 10604  00282E  C0C9  F0C5         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 10605  002832  0E0C               	movlw	12
 10606  002834                     u18825:
 10607  002834  90D8               	bcf	status,0,c
 10608  002836  0100               	movlb	0	; () banked
 10609  002838  37C2               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10610  00283A  37C3               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10611  00283C  37C4               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10612  00283E  37C5               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10613  002840  2EE8               	decfsz	wreg,f,c
 10614  002842  D7F8               	goto	u18825
 10615  002844  0E00               	movlw	0
 10616  002846  25C2               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10617  002848  6F60               	movwf	___lldiv@dividend& (0+255),b
 10618  00284A  0E20               	movlw	32
 10619  00284C  21C3               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 10620  00284E  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 10621  002850  0E03               	movlw	3
 10622  002852  21C4               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 10623  002854  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 10624  002856  0E00               	movlw	0
 10625  002858  21C5               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 10626  00285A  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 10627  00285C  0E7D               	movlw	125
 10628  00285E  6F64               	movwf	___lldiv@divisor& (0+255),b
 10629  002860  0E00               	movlw	0
 10630  002862  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 10631  002864  0E00               	movlw	0
 10632  002866  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 10633  002868  0E00               	movlw	0
 10634  00286A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 10635  00286C  ECB4  F039         	call	___lldiv	;wreg free
 10636  002870  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10637  002874  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10638  002878  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10639  00287C  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10640  002880  0102               	movlb	2	; () banked
 10641  002882  51EA               	movf	(_loRa+234)& (0+255),w,b
 10642  002884  EC23  F041         	call	_SwTimerSetTimeout
 10643                           
 10644                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 10645  002888  0102               	movlb	2	; () banked
 10646  00288A  51EA               	movf	(_loRa+234)& (0+255),w,b
 10647  00288C  EC3B  F037         	call	_SwTimerStart
 10648                           
 10649                           ;lorawan_eu.c: 546: }
 10650                           ;lorawan_eu.c: 547: }
 10651  002890  0012               	return	
 10652  002892                     l1071:
 10653                           
 10654                           ;lorawan_eu.c: 548: else
 10655                           ;lorawan_eu.c: 549: {
 10656                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
 10657  002892  ECAF  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10658                           
 10659                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
 10660  002896  0101               	movlb	1	; () banked
 10661  002898  5110               	movf	_rxPayload& (0+255),w,b
 10662  00289A  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
 10663  00289C  B4D8               	btfsc	status,2,c
 10664  00289E  0012               	return	
 10665                           
 10666                           ; BSR set to: 1
 10667                           ;lorawan_eu.c: 552: {
 10668                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
 10669  0028A0  0E00               	movlw	0
 10670  0028A2  0100               	movlb	0	; () banked
 10671  0028A4  6F60               	movwf	RxData@pData& (0+255),b
 10672  0028A6  0E00               	movlw	0
 10673  0028A8  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10674  0028AA  0E00               	movlw	0
 10675  0028AC  6F62               	movwf	RxData@dataLength& (0+255),b
 10676  0028AE  0E01               	movlw	1
 10677  0028B0  6F63               	movwf	RxData@status& (0+255),b
 10678  0028B2  D801               	call	u18848
 10679  0028B4  0012               	return	
 10680  0028B6                     u18848:
 10681  0028B6  0005               	push	
 10682  0028B8  6EFA               	movwf	pclath,c
 10683  0028BA  0101               	movlb	1	; () banked
 10684  0028BC  5110               	movf	_rxPayload& (0+255),w,b
 10685  0028BE  6EFD               	movwf	tosl,c
 10686  0028C0  5111               	movf	(_rxPayload+1)& (0+255),w,b
 10687  0028C2  6EFE               	movwf	tosh,c
 10688  0028C4  6AFF               	clrf	tosu,c
 10689  0028C6  50FA               	movf	pclath,w,c
 10690  0028C8  0012               	return		;indir
 10691  0028CA                     l1057:
 10692                           
 10693                           ;lorawan_eu.c: 560: else
 10694                           ;lorawan_eu.c: 561: {
 10695                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
 10696  0028CA  0101               	movlb	1	; () banked
 10697  0028CC  5110               	movf	_rxPayload& (0+255),w,b
 10698  0028CE  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
 10699  0028D0  B4D8               	btfsc	status,2,c
 10700  0028D2  0012               	return	
 10701                           
 10702                           ; BSR set to: 1
 10703                           ;lorawan_eu.c: 564: {
 10704                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 10705  0028D4  0E00               	movlw	0
 10706  0028D6  0100               	movlb	0	; () banked
 10707  0028D8  6F60               	movwf	RxData@pData& (0+255),b
 10708  0028DA  0E00               	movlw	0
 10709  0028DC  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10710  0028DE  0E00               	movlw	0
 10711  0028E0  6F62               	movwf	RxData@dataLength& (0+255),b
 10712  0028E2  0E02               	movlw	2
 10713  0028E4  6F63               	movwf	RxData@status& (0+255),b
 10714  0028E6  D801               	call	u18868
 10715  0028E8  0012               	return	
 10716  0028EA                     u18868:
 10717  0028EA  0005               	push	
 10718  0028EC  6EFA               	movwf	pclath,c
 10719  0028EE  0101               	movlb	1	; () banked
 10720  0028F0  5110               	movf	_rxPayload& (0+255),w,b
 10721  0028F2  6EFD               	movwf	tosl,c
 10722  0028F4  5111               	movf	(_rxPayload+1)& (0+255),w,b
 10723  0028F6  6EFE               	movwf	tosh,c
 10724  0028F8  6AFF               	clrf	tosu,c
 10725  0028FA  50FA               	movf	pclath,w,c
 10726  0028FC  0012               	return		;indir
 10727  0028FE                     __end_of_LORAWAN_RxTimeout:
 10728                           	opt stack 0
 10729                           tosu	equ	0xFFF
 10730                           tosh	equ	0xFFE
 10731                           tosl	equ	0xFFD
 10732                           pclath	equ	0xFFA
 10733                           tblptru	equ	0xFF8
 10734                           tblptrh	equ	0xFF7
 10735                           tblptrl	equ	0xFF6
 10736                           tablat	equ	0xFF5
 10737                           prodh	equ	0xFF4
 10738                           prodl	equ	0xFF3
 10739                           intcon	equ	0xFF2
 10740                           intcon2	equ	0xFF1
 10741                           intcon3	equ	0xFF0
 10742                           postinc0	equ	0xFEE
 10743                           wreg	equ	0xFE8
 10744                           postinc1	equ	0xFE6
 10745                           postdec1	equ	0xFE5
 10746                           plusw1	equ	0xFE3
 10747                           fsr1h	equ	0xFE2
 10748                           fsr1l	equ	0xFE1
 10749                           indf2	equ	0xFDF
 10750                           postinc2	equ	0xFDE
 10751                           postdec2	equ	0xFDD
 10752                           fsr2h	equ	0xFDA
 10753                           fsr2l	equ	0xFD9
 10754                           status	equ	0xFD8
 10755                           
 10756 ;; *************** function _LORAWAN_RxDone *****************
 10757 ;; Defined at:
 10758 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 10759 ;; Parameters:    Size  Location     Type
 10760 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
 10761 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10762 ;;  bufferLength    1  104[BANK1 ] unsigned char 
 10763 ;; Auto vars:     Size  Location     Type
 10764 ;;  hdr             2  145[BANK0 ] PTR struct .
 10765 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10766 ;;  joinAccept      2  142[BANK0 ] PTR struct .
 10767 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10768 ;;  computedMic     4  138[BANK0 ] unsigned long 
 10769 ;;  extractedMic    4  130[BANK0 ] unsigned long 
 10770 ;;  packet          2  136[BANK0 ] PTR unsigned char 
 10771 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 10772 ;;  frmPayloadLe    1  144[BANK0 ] unsigned char 
 10773 ;;  temp            1  135[BANK0 ] unsigned char 
 10774 ;;  bufferIndex     1  134[BANK0 ] unsigned char 
 10775 ;;  mhdr            1  129[BANK0 ] struct .
 10776 ;;  channelIndex    1  128[BANK0 ] unsigned char 
 10777 ;;  fPort           1  127[BANK0 ] unsigned char 
 10778 ;; Return value:  Size  Location     Type
 10779 ;;                  1    wreg      enum E7426
 10780 ;; Registers used:
 10781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10782 ;; Tracked objects:
 10783 ;;		On entry : 0/0
 10784 ;;		On exit  : 0/0
 10785 ;;		Unchanged: 0/0
 10786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10787 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10788 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10789 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10790 ;;      Totals:         0      25       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10791 ;;Total ram usage:       28 bytes
 10792 ;; Hardware stack levels used:    1
 10793 ;; Hardware stack levels required when called:   15
 10794 ;; This function calls:
 10795 ;;		_AESCmac
 10796 ;;		_AESEncodeLoRa
 10797 ;;		_AssembleEncryptionBlock
 10798 ;;		_CheckFlags
 10799 ;;		_CheckMcastFlags
 10800 ;;		_ComputeMic
 10801 ;;		_ComputeSessionKeys
 10802 ;;		_EncryptFRMPayload
 10803 ;;		_ExtractMic
 10804 ;;		_LORAWAN_EnterContinuousReceive
 10805 ;;		_LORAWAN_Send
 10806 ;;		_MacExecuteCommands
 10807 ;;		_RADIO_GetStatus
 10808 ;;		_RADIO_ReleaseData
 10809 ;;		_RxData
 10810 ;;		_SearchAvailableChannel
 10811 ;;		_SetJoinFailState
 10812 ;;		_SetReceptionNotOkState
 10813 ;;		_StartReTxTimer
 10814 ;;		_SwTimerStop
 10815 ;;		_UpdateCfList
 10816 ;;		_UpdateDLSettings
 10817 ;;		_UpdateJoinSuccessState
 10818 ;;		_UpdateReceiveDelays
 10819 ;;		_UpdateRetransmissionAckTimeoutState
 10820 ;;		_memcpy
 10821 ;; This function is called by:
 10822 ;;		_RADIO_RxDone
 10823 ;;		_RADIO_FSKPayloadReady
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827                           	psect	text62
 10828  000086                     __ptext62:
 10829                           	opt stack 0
 10830  000086                     _LORAWAN_RxDone:
 10831                           	opt stack 12
 10832                           
 10833                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
 10834                           ;lorawan.c: 1124: Mhdr_t mhdr;
 10835                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
 10836                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
 10837                           ;lorawan.c: 1127: uint8_t *packet;
 10838                           ;lorawan.c: 1128: uint8_t temp;
 10839                           ;lorawan.c: 1130: RADIO_ReleaseData();
 10840                           
 10841                           ;incstack = 0
 10842  000086  ECB8  F046         	call	_RADIO_ReleaseData	;wreg free
 10843                           
 10844                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 10845  00008A  0102               	movlb	2	; () banked
 10846  00008C  B103               	btfsc	(_loRa+3)& (0+255),0,b
 10847  00008E  EF62  F006         	goto	l1901
 10848                           
 10849                           ; BSR set to: 2
 10850                           ;lorawan.c: 1133: {
 10851                           ;lorawan.c: 1134: mhdr.value = buffer[0];
 10852  000092  C1D0  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 10853  000096  C1D1  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 10854  00009A  50DF               	movf	indf2,w,c
 10855  00009C  0100               	movlb	0	; () banked
 10856  00009E  6FE1               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 10857                           
 10858                           ; BSR set to: 0
 10859                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 10860  0000A0  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10861  0000A2  32E8               	rrcf	wreg,f,c
 10862  0000A4  0B07               	andlw	7
 10863  0000A6  06E8               	decf	wreg,f,c
 10864  0000A8  A4D8               	btfss	status,2,c
 10865  0000AA  D0D8               	goto	l1902
 10866                           
 10867                           ; BSR set to: 0
 10868  0000AC  0102               	movlb	2	; () banked
 10869  0000AE  511D               	movf	(_loRa+29)& (0+255),w,b
 10870  0000B0  A4D8               	btfss	status,2,c
 10871  0000B2  D0D4               	goto	l1902
 10872                           
 10873                           ; BSR set to: 2
 10874                           ;lorawan.c: 1136: {
 10875                           ;lorawan.c: 1137: temp = bufferLength - 1;
 10876  0000B4  0101               	movlb	1	; () banked
 10877  0000B6  05D2               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10878  0000B8  0100               	movlb	0	; () banked
 10879  0000BA  D028               	goto	L6
 10880  0000BC                     
 10881                           ; BSR set to: 0
 10882                           ;lorawan.c: 1139: {
 10883                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
 10884                           
 10885                           ; BSR set to: 0
 10886  0000BC  51E7               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10887  0000BE  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 10888  0000C0  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 10889  0000C2  1FDA               	comf	??_LORAWAN_RxDone& (0+255),f,b
 10890  0000C4  1FDB               	comf	(??_LORAWAN_RxDone+1)& (0+255),f,b
 10891  0000C6  4BDA               	infsnz	??_LORAWAN_RxDone& (0+255),f,b
 10892  0000C8  2BDB               	incf	(??_LORAWAN_RxDone+1)& (0+255),f,b
 10893  0000CA  0101               	movlb	1	; () banked
 10894  0000CC  51D2               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10895  0000CE  0100               	movlb	0	; () banked
 10896  0000D0  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 10897  0000D2  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 10898  0000D4  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 10899  0000D6  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10900  0000D8  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10901  0000DA  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10902  0000DC  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 10903  0000DE  0101               	movlb	1	; () banked
 10904  0000E0  25D0               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10905  0000E2  0100               	movlb	0	; () banked
 10906  0000E4  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 10907  0000E6  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 10908  0000E8  0101               	movlb	1	; () banked
 10909  0000EA  21D1               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10910  0000EC  0100               	movlb	0	; () banked
 10911  0000EE  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 10912  0000F0  0E42               	movlw	low (_loRa+66)
 10913  0000F2  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 10914  0000F4  0E02               	movlw	high (_loRa+66)
 10915  0000F6  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 10916  0000F8  EC05  F042         	call	_AESEncodeLoRa	;wreg free
 10917                           
 10918                           ;lorawan.c: 1142: if (temp > 16)
 10919  0000FC  0E10               	movlw	16
 10920  0000FE  0100               	movlb	0	; () banked
 10921  000100  65E7               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 10922  000102  D003               	goto	l1905
 10923                           
 10924                           ; BSR set to: 0
 10925                           ;lorawan.c: 1143: {
 10926                           ;lorawan.c: 1144: temp -= 16;
 10927  000104  0E10               	movlw	16
 10928  000106  5FE7               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 10929                           
 10930                           ;lorawan.c: 1145: }
 10931  000108  D002               	goto	l1906
 10932  00010A                     l1905:
 10933                           
 10934                           ; BSR set to: 0
 10935                           ;lorawan.c: 1146: else
 10936                           ;lorawan.c: 1147: {
 10937                           ;lorawan.c: 1148: temp = 0;
 10938                           
 10939                           ; BSR set to: 0
 10940  00010A  0E00               	movlw	0
 10941  00010C                     L6:
 10942  00010C  6FE7               	movwf	LORAWAN_RxDone@temp& (0+255),b
 10943  00010E                     l1906:
 10944                           
 10945                           ; BSR set to: 0
 10946                           
 10947                           ; BSR set to: 0
 10948  00010E  51E7               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10949  000110  A4D8               	btfss	status,2,c
 10950  000112  D7D4               	goto	l1904
 10951                           
 10952                           ; BSR set to: 0
 10953                           ;lorawan.c: 1149: }
 10954                           ;lorawan.c: 1150: }
 10955                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 10956                           
 10957                           ; BSR set to: 0
 10958  000114  0E42               	movlw	low (_loRa+66)
 10959  000116  6FC7               	movwf	ComputeMic@key& (0+255),b
 10960  000118  0E02               	movlw	high (_loRa+66)
 10961  00011A  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
 10962  00011C  C1D0  F0C9         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 10963  000120  C1D1  F0CA         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 10964  000124  0101               	movlb	1	; () banked
 10965  000126  51D2               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10966  000128  0FFC               	addlw	252
 10967  00012A  0100               	movlb	0	; () banked
 10968  00012C  6FCB               	movwf	ComputeMic@bufferLength& (0+255),b
 10969  00012E  EC99  F03C         	call	_ComputeMic	;wreg free
 10970  000132  C0C7  F0EA         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 10971  000136  C0C8  F0EB         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 10972  00013A  C0C9  F0EC         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 10973  00013E  C0CA  F0ED         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 10974                           
 10975                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 10976  000142  C1D0  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10977  000146  C1D1  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10978  00014A  C1D2  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10979  00014E  EC45  F03E         	call	_ExtractMic	;wreg free
 10980  000152  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10981  000156  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10982  00015A  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10983  00015E  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10984                           
 10985                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 10986  000162  0100               	movlb	0	; () banked
 10987  000164  51EA               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10988  000166  19E2               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10989  000168  E10A               	bnz	u17920
 10990  00016A  51EB               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10991  00016C  19E3               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10992  00016E  E107               	bnz	u17920
 10993  000170  51EC               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10994  000172  19E4               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10995  000174  E104               	bnz	u17920
 10996  000176  51ED               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10997  000178  19E5               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10998  00017A  B4D8               	btfsc	status,2,c
 10999  00017C  D011               	goto	l1908
 11000  00017E                     u17920:
 11001                           
 11002                           ; BSR set to: 0
 11003                           ;lorawan.c: 1156: {
 11004                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 11005  00017E  0102               	movlb	2	; () banked
 11006  000180  5102               	movf	(_loRa+2)& (0+255),w,b
 11007  000182  0B0F               	andlw	15
 11008  000184  0A05               	xorlw	5
 11009  000186  B4D8               	btfsc	status,2,c
 11010  000188  D008               	goto	u17950
 11011                           
 11012                           ; BSR set to: 2
 11013  00018A  5102               	movf	(_loRa+2)& (0+255),w,b
 11014  00018C  0B0F               	andlw	15
 11015  00018E  0A03               	xorlw	3
 11016  000190  A4D8               	btfss	status,2,c
 11017  000192  0012               	return	
 11018                           
 11019                           ; BSR set to: 2
 11020  000194  51F1               	movf	(_loRa+241)& (0+255),w,b
 11021  000196  B4D8               	btfsc	status,2,c
 11022  000198  0012               	return	
 11023  00019A                     u17950:
 11024                           
 11025                           ; BSR set to: 2
 11026                           ;lorawan.c: 1158: {
 11027                           ;lorawan.c: 1159: SetJoinFailState();
 11028                           
 11029                           ; BSR set to: 2
 11030  00019A  EC83  F042         	call	_SetJoinFailState	;wreg free
 11031                           
 11032                           ;lorawan.c: 1160: }
 11033                           ;lorawan.c: 1162: return INVALID_PARAMETER;
 11034                           ;	Return value of _LORAWAN_RxDone is never used
 11035  00019E  0012               	return	
 11036  0001A0                     l1908:
 11037                           
 11038                           ;lorawan.c: 1163: }
 11039                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 11040  0001A0  0102               	movlb	2	; () banked
 11041  0001A2  5102               	movf	(_loRa+2)& (0+255),w,b
 11042  0001A4  0B0F               	andlw	15
 11043  0001A6  0A03               	xorlw	3
 11044  0001A8  A4D8               	btfss	status,2,c
 11045  0001AA  D003               	goto	l1913
 11046                           
 11047                           ; BSR set to: 2
 11048                           ;lorawan.c: 1167: {
 11049                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 11050  0001AC  51E3               	movf	(_loRa+227)& (0+255),w,b
 11051  0001AE  ECF9  F043         	call	_SwTimerStop
 11052  0001B2                     l1913:
 11053                           
 11054                           ;lorawan.c: 1169: }
 11055                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 11056                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 11057  0001B2  C1D0  F0EE         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 11058  0001B6  C1D1  F0EF         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 11059                           
 11060                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 11061  0001BA  0100               	movlb	0	; () banked
 11062  0001BC  EE20 F007          	lfsr	2,7
 11063  0001C0  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11064  0001C2  26D9               	addwf	fsr2l,f,c
 11065  0001C4  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11066  0001C6  22DA               	addwfc	fsr2h,f,c
 11067  0001C8  CFDE F21E          	movff	postinc2,_loRa+30
 11068  0001CC  CFDE F21F          	movff	postinc2,_loRa+31
 11069  0001D0  CFDE F220          	movff	postinc2,_loRa+32
 11070  0001D4  CFDE F221          	movff	postinc2,_loRa+33
 11071                           
 11072                           ; BSR set to: 0
 11073                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 11074  0001D8  EE20 F00C          	lfsr	2,12
 11075  0001DC  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11076  0001DE  26D9               	addwf	fsr2l,f,c
 11077  0001E0  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11078  0001E2  22DA               	addwfc	fsr2h,f,c
 11079  0001E4  50DF               	movf	indf2,w,c
 11080  0001E6  0B0F               	andlw	15
 11081  0001E8  EC67  F041         	call	_UpdateReceiveDelays
 11082                           
 11083                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 11084  0001EC  0100               	movlb	0	; () banked
 11085  0001EE  EE20 F00B          	lfsr	2,11
 11086  0001F2  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11087  0001F4  26D9               	addwf	fsr2l,f,c
 11088  0001F6  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11089  0001F8  22DA               	addwfc	fsr2h,f,c
 11090  0001FA  38DF               	swapf	223,w,c
 11091  0001FC  0B07               	andlw	7
 11092  0001FE  6F60               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 11093  000200  EE20 F00B          	lfsr	2,11
 11094  000204  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11095  000206  26D9               	addwf	fsr2l,f,c
 11096  000208  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11097  00020A  22DA               	addwfc	fsr2h,f,c
 11098  00020C  50DF               	movf	223,w,c
 11099  00020E  0B0F               	andlw	15
 11100  000210  EC25  F045         	call	_UpdateDLSettings
 11101                           
 11102                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 11103  000214  C0EE  F0A6         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 11104  000218  C0EF  F0A7         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 11105  00021C  0101               	movlb	1	; () banked
 11106  00021E  51D2               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11107  000220  EC4E  F020         	call	_UpdateCfList
 11108                           
 11109                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 11110  000224  C0EE  F091         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 11111  000228  C0EF  F092         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 11112  00022C  EC71  F039         	call	_ComputeSessionKeys	;wreg free
 11113                           
 11114                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 11115  000230  0E00               	movlw	0
 11116  000232  6EE6               	movwf	postinc1,c
 11117  000234  EC1F  F02B         	call	_UpdateJoinSuccessState	;wreg free
 11118                           
 11119                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 11120  000238  0E00               	movlw	0
 11121  00023A  0102               	movlb	2	; () banked
 11122  00023C  6F06               	movwf	(_loRa+6)& (0+255),b
 11123  00023E  0E00               	movlw	0
 11124  000240  6F07               	movwf	(_loRa+7)& (0+255),b
 11125  000242  0E00               	movlw	0
 11126  000244  6F08               	movwf	(_loRa+8)& (0+255),b
 11127  000246  0E00               	movlw	0
 11128  000248  6F09               	movwf	(_loRa+9)& (0+255),b
 11129                           
 11130                           ; BSR set to: 2
 11131                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 11132  00024A  0E00               	movlw	0
 11133  00024C  6F0A               	movwf	(_loRa+10)& (0+255),b
 11134  00024E  0E00               	movlw	0
 11135  000250  6F0B               	movwf	(_loRa+11)& (0+255),b
 11136  000252  0E00               	movlw	0
 11137  000254  6F0C               	movwf	(_loRa+12)& (0+255),b
 11138  000256  0E00               	movlw	0
 11139  000258  6F0D               	movwf	(_loRa+13)& (0+255),b
 11140                           
 11141                           ; BSR set to: 2
 11142                           ;lorawan.c: 1190: }
 11143                           
 11144                           ; BSR set to: 2
 11145                           ;lorawan.c: 1189: return OK;
 11146                           ;	Return value of _LORAWAN_RxDone is never used
 11147  00025A  0012               	return	
 11148  00025C                     l1902:
 11149                           
 11150                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 11151                           
 11152                           ; BSR set to: 2
 11153  00025C  0100               	movlb	0	; () banked
 11154  00025E  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 11155  000260  32E8               	rrcf	wreg,f,c
 11156  000262  0B07               	andlw	7
 11157  000264  0A03               	xorlw	3
 11158  000266  B4D8               	btfsc	status,2,c
 11159  000268  D007               	goto	u17980
 11160                           
 11161                           ; BSR set to: 0
 11162  00026A  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 11163  00026C  32E8               	rrcf	wreg,f,c
 11164  00026E  0B07               	andlw	7
 11165  000270  0A05               	xorlw	5
 11166  000272  A4D8               	btfss	status,2,c
 11167  000274  EF5F  F006         	goto	l1915
 11168  000278                     u17980:
 11169                           
 11170                           ; BSR set to: 0
 11171                           ;lorawan.c: 1192: {
 11172                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 11173                           
 11174                           ; BSR set to: 0
 11175  000278  0E00               	movlw	0
 11176  00027A  0102               	movlb	2	; () banked
 11177  00027C  6FA7               	movwf	(_loRa+167)& (0+255),b
 11178                           
 11179                           ; BSR set to: 2
 11180                           ;lorawan.c: 1195: Hdr_t *hdr;
 11181                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 11182  00027E  C1D0  F0F1         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 11183  000282  C1D1  F0F2         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 11184                           
 11185                           ; BSR set to: 2
 11186                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 11187  000286  0E02               	movlw	2
 11188  000288  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11189  00028A  A4D8               	btfss	status,2,c
 11190  00028C  D210               	goto	l1918
 11191                           
 11192                           ; BSR set to: 2
 11193  00028E  0100               	movlb	0	; () banked
 11194  000290  EE20 F001          	lfsr	2,1
 11195  000294  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11196  000296  26D9               	addwf	fsr2l,f,c
 11197  000298  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11198  00029A  22DA               	addwfc	fsr2h,f,c
 11199  00029C  0102               	movlb	2	; () banked
 11200  00029E  5162               	movf	(_loRa+98)& (0+255),w,b
 11201  0002A0  18DE               	xorwf	postinc2,w,c
 11202  0002A2  E109               	bnz	u18001
 11203  0002A4  5163               	movf	(_loRa+99)& (0+255),w,b
 11204  0002A6  18DE               	xorwf	postinc2,w,c
 11205  0002A8  E106               	bnz	u18001
 11206  0002AA  5164               	movf	(_loRa+100)& (0+255),w,b
 11207  0002AC  18DE               	xorwf	postinc2,w,c
 11208  0002AE  E103               	bnz	u18001
 11209  0002B0  5165               	movf	(_loRa+101)& (0+255),w,b
 11210  0002B2  18DE               	xorwf	postinc2,w,c
 11211  0002B4  A4D8               	btfss	status,2,c
 11212  0002B6                     u18001:
 11213  0002B6  D1FB               	goto	l1918
 11214                           
 11215                           ; BSR set to: 2
 11216  0002B8  A504               	btfss	(_loRa+4)& (0+255),2,b
 11217  0002BA  D1F9               	goto	l1918
 11218                           
 11219                           ; BSR set to: 2
 11220                           ;lorawan.c: 1200: {
 11221                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 11222  0002BC  C0F1  F060         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 11223  0002C0  C0F2  F061         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 11224  0002C4  ECF6  F039         	call	_CheckMcastFlags	;wreg free
 11225  0002C8  0900               	iorlw	0
 11226  0002CA  A4D8               	btfss	status,2,c
 11227  0002CC  D008               	goto	l1919
 11228                           
 11229                           ;lorawan.c: 1203: {
 11230                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11231  0002CE  0102               	movlb	2	; () banked
 11232  0002D0  5102               	movf	(_loRa+2)& (0+255),w,b
 11233  0002D2  0BF0               	andlw	-16
 11234  0002D4  0909               	iorlw	9
 11235  0002D6  6F02               	movwf	(_loRa+2)& (0+255),b
 11236                           
 11237                           ; BSR set to: 2
 11238                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 11239  0002D8  EC76  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11240                           
 11241                           ;lorawan.c: 1206: return MCAST_MSG_ERROR;
 11242                           ;	Return value of _LORAWAN_RxDone is never used
 11243  0002DC  0012               	return	
 11244  0002DE                     l1919:
 11245                           
 11246                           ;lorawan.c: 1207: }
 11247                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 11248  0002DE  0100               	movlb	0	; () banked
 11249  0002E0  EE20 F006          	lfsr	2,6
 11250  0002E4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11251  0002E6  26D9               	addwf	fsr2l,f,c
 11252  0002E8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11253  0002EA  22DA               	addwfc	fsr2h,f,c
 11254  0002EC  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 11255  0002F0  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 11256  0002F4  C0DA  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 11257  0002F8  C0DB  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 11258  0002FC  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 11259  0002FE  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 11260  000300  0101               	movlb	1	; () banked
 11261  000302  51D2               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11262  000304  0FFC               	addlw	252
 11263  000306  0100               	movlb	0	; () banked
 11264  000308  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 11265  00030A  0E49               	movlw	73
 11266  00030C  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 11267  00030E  0E01               	movlw	1
 11268  000310  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 11269  000312  0E01               	movlw	1
 11270  000314  EC09  F030         	call	_AssembleEncryptionBlock
 11271                           
 11272                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 11273  000318  0EEF               	movlw	low _radioBuffer
 11274  00031A  0100               	movlb	0	; () banked
 11275  00031C  6F60               	movwf	memcpy@d1& (0+255),b
 11276  00031E  0E05               	movlw	high _radioBuffer
 11277  000320  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11278  000322  0E5A               	movlw	low _aesBuffer
 11279  000324  6F62               	movwf	memcpy@s1& (0+255),b
 11280  000326  0E01               	movlw	high _aesBuffer
 11281  000328  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11282  00032A  0E00               	movlw	0
 11283  00032C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11284  00032E  0E10               	movlw	16
 11285  000330  6F64               	movwf	memcpy@n& (0+255),b
 11286  000332  EC5C  F03D         	call	_memcpy	;wreg free
 11287                           
 11288                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 11289  000336  0EFF               	movlw	low (_radioBuffer+16)
 11290  000338  0100               	movlb	0	; () banked
 11291  00033A  6F60               	movwf	memcpy@d1& (0+255),b
 11292  00033C  0E05               	movlw	high (_radioBuffer+16)
 11293  00033E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11294  000340  C1D0  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 11295  000344  C1D1  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 11296  000348  0EFC               	movlw	252
 11297  00034A  0101               	movlb	1	; () banked
 11298  00034C  25D2               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11299  00034E  0100               	movlb	0	; () banked
 11300  000350  6F64               	movwf	memcpy@n& (0+255),b
 11301  000352  6B65               	clrf	(memcpy@n+1)& (0+255),b
 11302  000354  0EFF               	movlw	255
 11303  000356  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 11304  000358  EC5C  F03D         	call	_memcpy	;wreg free
 11305                           
 11306                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 11307  00035C  0E66               	movlw	low (_loRa+102)
 11308  00035E  0100               	movlb	0	; () banked
 11309  000360  6FB9               	movwf	AESCmac@key& (0+255),b
 11310  000362  0E02               	movlw	high (_loRa+102)
 11311  000364  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 11312  000366  0E5A               	movlw	low _aesBuffer
 11313  000368  6FBB               	movwf	AESCmac@output& (0+255),b
 11314  00036A  0E01               	movlw	high _aesBuffer
 11315  00036C  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 11316  00036E  0EEF               	movlw	low _radioBuffer
 11317  000370  6FBD               	movwf	AESCmac@input& (0+255),b
 11318  000372  0E05               	movlw	high _radioBuffer
 11319  000374  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 11320  000376  0101               	movlb	1	; () banked
 11321  000378  51D2               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11322  00037A  0F0C               	addlw	12
 11323  00037C  0100               	movlb	0	; () banked
 11324  00037E  6FBF               	movwf	AESCmac@size& (0+255),b
 11325  000380  ECF8  F010         	call	_AESCmac	;wreg free
 11326                           
 11327                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 11328  000384  0EEA               	movlw	low LORAWAN_RxDone@computedMic
 11329  000386  0100               	movlb	0	; () banked
 11330  000388  6F60               	movwf	memcpy@d1& (0+255),b
 11331  00038A  0E00               	movlw	high LORAWAN_RxDone@computedMic
 11332  00038C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11333  00038E  0E5A               	movlw	low _aesBuffer
 11334  000390  6F62               	movwf	memcpy@s1& (0+255),b
 11335  000392  0E01               	movlw	high _aesBuffer
 11336  000394  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11337  000396  0E00               	movlw	0
 11338  000398  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11339  00039A  0E04               	movlw	4
 11340  00039C  6F64               	movwf	memcpy@n& (0+255),b
 11341  00039E  EC5C  F03D         	call	_memcpy	;wreg free
 11342                           
 11343                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 11344  0003A2  C1D0  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11345  0003A6  C1D1  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11346  0003AA  C1D2  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11347  0003AE  EC45  F03E         	call	_ExtractMic	;wreg free
 11348  0003B2  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11349  0003B6  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11350  0003BA  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11351  0003BE  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11352                           
 11353                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 11354  0003C2  0100               	movlb	0	; () banked
 11355  0003C4  51E2               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11356  0003C6  19EA               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11357  0003C8  E10A               	bnz	u18030
 11358  0003CA  51E3               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11359  0003CC  19EB               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11360  0003CE  E107               	bnz	u18030
 11361  0003D0  51E4               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11362  0003D2  19EC               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11363  0003D4  E104               	bnz	u18030
 11364  0003D6  51E5               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11365  0003D8  19ED               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11366  0003DA  B4D8               	btfsc	status,2,c
 11367  0003DC  D008               	goto	l1920
 11368  0003DE                     u18030:
 11369                           
 11370                           ; BSR set to: 0
 11371                           ;lorawan.c: 1218: {
 11372                           ;lorawan.c: 1219: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11373  0003DE  0102               	movlb	2	; () banked
 11374  0003E0  5102               	movf	(_loRa+2)& (0+255),w,b
 11375  0003E2  0BF0               	andlw	-16
 11376  0003E4  0909               	iorlw	9
 11377  0003E6  6F02               	movwf	(_loRa+2)& (0+255),b
 11378                           
 11379                           ; BSR set to: 2
 11380                           ;lorawan.c: 1220: LORAWAN_EnterContinuousReceive();
 11381  0003E8  EC76  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11382                           
 11383                           ;lorawan.c: 1221: return MCAST_MSG_ERROR;
 11384                           ;	Return value of _LORAWAN_RxDone is never used
 11385  0003EC  0012               	return	
 11386  0003EE                     l1920:
 11387                           
 11388                           ;lorawan.c: 1222: }
 11389                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 11390  0003EE  0100               	movlb	0	; () banked
 11391  0003F0  EE20 F006          	lfsr	2,6
 11392  0003F4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11393  0003F6  26D9               	addwf	fsr2l,f,c
 11394  0003F8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11395  0003FA  22DA               	addwfc	fsr2h,f,c
 11396  0003FC  0102               	movlb	2	; () banked
 11397  0003FE  510E               	movf	(_loRa+14)& (0+255),w,b
 11398  000400  5CDE               	subwf	postinc2,w,c
 11399  000402  510F               	movf	(_loRa+15)& (0+255),w,b
 11400  000404  58DE               	subwfb	postinc2,w,c
 11401  000406  A0D8               	btfss	status,0,c
 11402  000408  D050               	goto	l1921
 11403                           
 11404                           ; BSR set to: 2
 11405                           ;lorawan.c: 1225: {
 11406                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 11407  00040A  0100               	movlb	0	; () banked
 11408  00040C  EE20 F006          	lfsr	2,6
 11409  000410  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11410  000412  26D9               	addwf	fsr2l,f,c
 11411  000414  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11412  000416  22DA               	addwfc	fsr2h,f,c
 11413  000418  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 11414  00041C  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 11415  000420  EE22  F00E         	lfsr	2,_loRa+14
 11416  000424  CFDE F0DC          	movff	postinc2,??_LORAWAN_RxDone+2
 11417  000428  CFDD F0DD          	movff	postdec2,??_LORAWAN_RxDone+3
 11418  00042C  1FDC               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11419  00042E  1FDD               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11420  000430  4BDC               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11421  000432  2BDD               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11422  000434  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11423  000436  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11424  000438  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11425  00043A  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11426  00043C  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11427  00043E  0102               	movlb	2	; () banked
 11428  000440  5D9E               	subwf	(_loRa+158)& (0+255),w,b
 11429  000442  0100               	movlb	0	; () banked
 11430  000444  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11431  000446  0102               	movlb	2	; () banked
 11432  000448  599F               	subwfb	(_loRa+159)& (0+255),w,b
 11433  00044A  B0D8               	btfsc	status,0,c
 11434  00044C  D022               	goto	l1922
 11435                           
 11436                           ; BSR set to: 2
 11437                           ;lorawan.c: 1227: {
 11438                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 11439  00044E  0101               	movlb	1	; () banked
 11440  000450  5110               	movf	_rxPayload& (0+255),w,b
 11441  000452  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
 11442  000454  B4D8               	btfsc	status,2,c
 11443  000456  D015               	goto	u18079
 11444                           
 11445                           ; BSR set to: 1
 11446                           ;lorawan.c: 1229: {
 11447                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 11448  000458  0E00               	movlw	0
 11449  00045A  0100               	movlb	0	; () banked
 11450  00045C  6F60               	movwf	RxData@pData& (0+255),b
 11451  00045E  0E00               	movlw	0
 11452  000460  6F61               	movwf	(RxData@pData+1)& (0+255),b
 11453  000462  0E00               	movlw	0
 11454  000464  6F62               	movwf	RxData@dataLength& (0+255),b
 11455  000466  0E05               	movlw	5
 11456  000468  6F63               	movwf	RxData@status& (0+255),b
 11457  00046A  D801               	call	u18078
 11458  00046C  D00A               	goto	u18079
 11459  00046E                     u18078:
 11460  00046E  0005               	push	
 11461  000470  6EFA               	movwf	pclath,c
 11462  000472  0101               	movlb	1	; () banked
 11463  000474  5110               	movf	_rxPayload& (0+255),w,b
 11464  000476  6EFD               	movwf	tosl,c
 11465  000478  5111               	movf	(_rxPayload+1)& (0+255),w,b
 11466  00047A  6EFE               	movwf	tosh,c
 11467  00047C  6AFF               	clrf	tosu,c
 11468  00047E  50FA               	movf	pclath,w,c
 11469  000480  0012               	return		;indir
 11470  000482                     u18079:
 11471                           
 11472                           ;lorawan.c: 1231: }
 11473                           ;lorawan.c: 1233: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11474  000482  0102               	movlb	2	; () banked
 11475  000484  5102               	movf	(_loRa+2)& (0+255),w,b
 11476  000486  0BF0               	andlw	-16
 11477  000488  0909               	iorlw	9
 11478  00048A  6F02               	movwf	(_loRa+2)& (0+255),b
 11479                           
 11480                           ; BSR set to: 2
 11481                           ;lorawan.c: 1234: LORAWAN_EnterContinuousReceive();
 11482  00048C  EC76  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11483                           
 11484                           ;lorawan.c: 1235: return MCAST_MSG_ERROR;
 11485                           ;	Return value of _LORAWAN_RxDone is never used
 11486  000490  0012               	return	
 11487  000492                     l1922:
 11488                           
 11489                           ;lorawan.c: 1237: else
 11490                           ;lorawan.c: 1238: {
 11491                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 11492  000492  0100               	movlb	0	; () banked
 11493  000494  EE20 F006          	lfsr	2,6
 11494  000498  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11495  00049A  26D9               	addwf	fsr2l,f,c
 11496  00049C  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11497  00049E  22DA               	addwfc	fsr2h,f,c
 11498  0004A0  CFDE F20E          	movff	postinc2,_loRa+14
 11499  0004A4  CFDD F20F          	movff	postdec2,_loRa+15
 11500                           
 11501                           ; BSR set to: 0
 11502                           ;lorawan.c: 1240: }
 11503                           ;lorawan.c: 1241: }
 11504  0004A8  D03A               	goto	l1927
 11505  0004AA                     l1921:
 11506                           
 11507                           ;lorawan.c: 1242: else
 11508                           ;lorawan.c: 1243: {
 11509                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 11510                           
 11511                           ; BSR set to: 0
 11512  0004AA  0100               	movlb	0	; () banked
 11513  0004AC  EE20 F006          	lfsr	2,6
 11514  0004B0  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11515  0004B2  26D9               	addwf	fsr2l,f,c
 11516  0004B4  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11517  0004B6  22DA               	addwfc	fsr2h,f,c
 11518  0004B8  50DE               	movf	postinc2,w,c
 11519  0004BA  10DE               	iorwf	postinc2,w,c
 11520  0004BC  A4D8               	btfss	status,2,c
 11521  0004BE  D00D               	goto	l1926
 11522                           
 11523                           ; BSR set to: 0
 11524  0004C0  0102               	movlb	2	; () banked
 11525  0004C2  290E               	incf	(_loRa+14)& (0+255),w,b
 11526  0004C4  E10A               	bnz	l15491
 11527  0004C6  290F               	incf	(_loRa+15)& (0+255),w,b
 11528  0004C8  A4D8               	btfss	status,2,c
 11529  0004CA  D007               	goto	l1926
 11530                           
 11531                           ; BSR set to: 2
 11532                           ;lorawan.c: 1245: {
 11533                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 11534  0004CC  0E00               	movlw	0
 11535  0004CE  6F0F               	movwf	(_loRa+15)& (0+255),b
 11536  0004D0  0E00               	movlw	0
 11537  0004D2  6F0E               	movwf	(_loRa+14)& (0+255),b
 11538                           
 11539                           ; BSR set to: 2
 11540                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 11541  0004D4  4B10               	infsnz	(_loRa+16)& (0+255),f,b
 11542  0004D6  2B11               	incf	(_loRa+17)& (0+255),f,b
 11543                           
 11544                           ;lorawan.c: 1248: }
 11545  0004D8  D022               	goto	l1927
 11546  0004DA                     l1926:
 11547  0004DA                     l15491:
 11548                           
 11549                           ;lorawan.c: 1249: else
 11550                           ;lorawan.c: 1250: {
 11551                           ;lorawan.c: 1251: if (rxPayload.RxAppData != (0))
 11552  0004DA  0101               	movlb	1	; () banked
 11553  0004DC  5110               	movf	_rxPayload& (0+255),w,b
 11554  0004DE  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
 11555  0004E0  B4D8               	btfsc	status,2,c
 11556  0004E2  D015               	goto	u18119
 11557                           
 11558                           ; BSR set to: 1
 11559                           ;lorawan.c: 1252: {
 11560                           ;lorawan.c: 1253: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 11561  0004E4  0E00               	movlw	0
 11562  0004E6  0100               	movlb	0	; () banked
 11563  0004E8  6F60               	movwf	RxData@pData& (0+255),b
 11564  0004EA  0E00               	movlw	0
 11565  0004EC  6F61               	movwf	(RxData@pData+1)& (0+255),b
 11566  0004EE  0E00               	movlw	0
 11567  0004F0  6F62               	movwf	RxData@dataLength& (0+255),b
 11568  0004F2  0E05               	movlw	5
 11569  0004F4  6F63               	movwf	RxData@status& (0+255),b
 11570  0004F6  D801               	call	u18118
 11571  0004F8  D00A               	goto	u18119
 11572  0004FA                     u18118:
 11573  0004FA  0005               	push	
 11574  0004FC  6EFA               	movwf	pclath,c
 11575  0004FE  0101               	movlb	1	; () banked
 11576  000500  5110               	movf	_rxPayload& (0+255),w,b
 11577  000502  6EFD               	movwf	tosl,c
 11578  000504  5111               	movf	(_rxPayload+1)& (0+255),w,b
 11579  000506  6EFE               	movwf	tosh,c
 11580  000508  6AFF               	clrf	tosu,c
 11581  00050A  50FA               	movf	pclath,w,c
 11582  00050C  0012               	return		;indir
 11583  00050E                     u18119:
 11584                           
 11585                           ;lorawan.c: 1254: }
 11586                           ;lorawan.c: 1256: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11587  00050E  0102               	movlb	2	; () banked
 11588  000510  5102               	movf	(_loRa+2)& (0+255),w,b
 11589  000512  0BF0               	andlw	-16
 11590  000514  0909               	iorlw	9
 11591  000516  6F02               	movwf	(_loRa+2)& (0+255),b
 11592                           
 11593                           ; BSR set to: 2
 11594                           ;lorawan.c: 1257: LORAWAN_EnterContinuousReceive();
 11595  000518  EC76  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11596                           
 11597                           ;lorawan.c: 1258: return MCAST_MSG_ERROR;
 11598                           ;	Return value of _LORAWAN_RxDone is never used
 11599  00051C  0012               	return	
 11600  00051E                     l1927:
 11601                           
 11602                           ;lorawan.c: 1259: }
 11603                           ;lorawan.c: 1260: }
 11604                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 11605  00051E  0102               	movlb	2	; () banked
 11606  000520  290E               	incf	(_loRa+14)& (0+255),w,b
 11607  000522  E129               	bnz	l15513
 11608  000524  290F               	incf	(_loRa+15)& (0+255),w,b
 11609  000526  E127               	bnz	l15513
 11610  000528  2910               	incf	(_loRa+16)& (0+255),w,b
 11611  00052A  E125               	bnz	l15513
 11612  00052C  2911               	incf	(_loRa+17)& (0+255),w,b
 11613  00052E  A4D8               	btfss	status,2,c
 11614  000530  D022               	goto	l1929
 11615                           
 11616                           ; BSR set to: 2
 11617                           ;lorawan.c: 1263: {
 11618                           ;lorawan.c: 1264: if (rxPayload.RxAppData != (0))
 11619  000532  0101               	movlb	1	; () banked
 11620  000534  5110               	movf	_rxPayload& (0+255),w,b
 11621  000536  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
 11622  000538  B4D8               	btfsc	status,2,c
 11623  00053A  D015               	goto	u18149
 11624                           
 11625                           ; BSR set to: 1
 11626                           ;lorawan.c: 1265: {
 11627                           ;lorawan.c: 1266: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 11628  00053C  0E00               	movlw	0
 11629  00053E  0100               	movlb	0	; () banked
 11630  000540  6F60               	movwf	RxData@pData& (0+255),b
 11631  000542  0E00               	movlw	0
 11632  000544  6F61               	movwf	(RxData@pData+1)& (0+255),b
 11633  000546  0E00               	movlw	0
 11634  000548  6F62               	movwf	RxData@dataLength& (0+255),b
 11635  00054A  0E05               	movlw	5
 11636  00054C  6F63               	movwf	RxData@status& (0+255),b
 11637  00054E  D801               	call	u18148
 11638  000550  D00A               	goto	u18149
 11639  000552                     u18148:
 11640  000552  0005               	push	
 11641  000554  6EFA               	movwf	pclath,c
 11642  000556  0101               	movlb	1	; () banked
 11643  000558  5110               	movf	_rxPayload& (0+255),w,b
 11644  00055A  6EFD               	movwf	tosl,c
 11645  00055C  5111               	movf	(_rxPayload+1)& (0+255),w,b
 11646  00055E  6EFE               	movwf	tosh,c
 11647  000560  6AFF               	clrf	tosu,c
 11648  000562  50FA               	movf	pclath,w,c
 11649  000564  0012               	return		;indir
 11650  000566                     u18149:
 11651                           
 11652                           ;lorawan.c: 1267: }
 11653                           ;lorawan.c: 1269: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11654  000566  0102               	movlb	2	; () banked
 11655  000568  5102               	movf	(_loRa+2)& (0+255),w,b
 11656  00056A  0BF0               	andlw	-16
 11657  00056C  0909               	iorlw	9
 11658  00056E  6F02               	movwf	(_loRa+2)& (0+255),b
 11659                           
 11660                           ; BSR set to: 2
 11661                           ;lorawan.c: 1270: LORAWAN_EnterContinuousReceive();
 11662  000570  EC76  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11663                           
 11664                           ;lorawan.c: 1271: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 11665                           ;	Return value of _LORAWAN_RxDone is never used
 11666  000574  0012               	return	
 11667  000576                     l1929:
 11668  000576                     l15513:
 11669                           
 11670                           ;lorawan.c: 1272: }
 11671                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 11672  000576  0102               	movlb	2	; () banked
 11673  000578  5102               	movf	(_loRa+2)& (0+255),w,b
 11674  00057A  0B0F               	andlw	15
 11675  00057C  0A08               	xorlw	8
 11676  00057E  A4D8               	btfss	status,2,c
 11677  000580  D008               	goto	l1931
 11678                           
 11679                           ; BSR set to: 2
 11680                           ;lorawan.c: 1275: {
 11681                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 11682  000582  51E4               	movf	(_loRa+228)& (0+255),w,b
 11683  000584  ECF9  F043         	call	_SwTimerStop
 11684                           
 11685                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 11686  000588  0102               	movlb	2	; () banked
 11687  00058A  51E5               	movf	(_loRa+229)& (0+255),w,b
 11688  00058C  ECF9  F043         	call	_SwTimerStop
 11689                           
 11690                           ;lorawan.c: 1278: }
 11691  000590  D009               	goto	l1933
 11692  000592                     l1931:
 11693                           
 11694                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 11695  000592  0102               	movlb	2	; () banked
 11696  000594  5102               	movf	(_loRa+2)& (0+255),w,b
 11697  000596  0B0F               	andlw	15
 11698  000598  0A03               	xorlw	3
 11699  00059A  A4D8               	btfss	status,2,c
 11700  00059C  D003               	goto	l1933
 11701                           
 11702                           ; BSR set to: 2
 11703                           ;lorawan.c: 1280: {
 11704                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 11705  00059E  51E5               	movf	(_loRa+229)& (0+255),w,b
 11706  0005A0  ECF9  F043         	call	_SwTimerStop
 11707  0005A4                     l1933:
 11708                           
 11709                           ;lorawan.c: 1282: }
 11710                           ;lorawan.c: 1284: buffer = buffer + 8;
 11711  0005A4  0E08               	movlw	8
 11712  0005A6  0101               	movlb	1	; () banked
 11713  0005A8  25D0               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11714  0005AA  6FD0               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 11715  0005AC  0E00               	movlw	0
 11716  0005AE  21D1               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11717  0005B0  6FD1               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 11718                           
 11719                           ; BSR set to: 1
 11720                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11721  0005B2  51D2               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11722  0005B4  0100               	movlb	0	; () banked
 11723  0005B6  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 11724  0005B8  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11725  0005BA  EE20 F005          	lfsr	2,5
 11726  0005BE  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11727  0005C0  26D9               	addwf	fsr2l,f,c
 11728  0005C2  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11729  0005C4  22DA               	addwfc	fsr2h,f,c
 11730  0005C6  50DF               	movf	223,w,c
 11731  0005C8  0B0F               	andlw	15
 11732  0005CA  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11733  0005CC  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11734  0005CE  0E0C               	movlw	12
 11735  0005D0  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11736  0005D2  0E00               	movlw	0
 11737  0005D4  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11738  0005D6  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11739  0005D8  19DC               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11740  0005DA  E104               	bnz	u18170
 11741  0005DC  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11742  0005DE  19DD               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11743  0005E0  B4D8               	btfsc	status,2,c
 11744  0005E2  D037               	goto	l1934
 11745  0005E4                     u18170:
 11746                           
 11747                           ; BSR set to: 0
 11748                           ;lorawan.c: 1287: {
 11749                           ;lorawan.c: 1288: fPort = *(buffer++);
 11750  0005E4  C1D0  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11751  0005E8  C1D1  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11752  0005EC  50DF               	movf	indf2,w,c
 11753  0005EE  6FDF               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11754                           
 11755                           ; BSR set to: 0
 11756  0005F0  0101               	movlb	1	; () banked
 11757  0005F2  4BD0               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11758  0005F4  2BD1               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11759                           
 11760                           ; BSR set to: 1
 11761                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 11762  0005F6  51D2               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11763  0005F8  0FF4               	addlw	244
 11764  0005FA  0100               	movlb	0	; () banked
 11765  0005FC  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11766                           
 11767                           ; BSR set to: 0
 11768                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 11769  0005FE  0E19               	movlw	25
 11770  000600  6FE6               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11771                           
 11772                           ; BSR set to: 0
 11773                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 11774  000602  C1D0  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11775  000606  C1D1  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11776  00060A  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11777  00060C  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11778  00060E  0E01               	movlw	1
 11779  000610  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 11780  000612  C20E  F095         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 11781  000616  C20F  F096         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 11782  00061A  C210  F097         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 11783  00061E  C211  F098         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 11784  000622  0E76               	movlw	low (_loRa+118)
 11785  000624  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 11786  000626  0E02               	movlw	high (_loRa+118)
 11787  000628  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11788  00062A  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11789  00062E  0EEF               	movlw	low _radioBuffer
 11790  000630  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11791  000632  0E05               	movlw	high _radioBuffer
 11792  000634  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11793  000636  0E01               	movlw	1
 11794  000638  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11795  00063A  EC45  F021         	call	_EncryptFRMPayload	;wreg free
 11796                           
 11797                           ;lorawan.c: 1294: packet = buffer - 1;
 11798  00063E  0EFF               	movlw	255
 11799  000640  0101               	movlb	1	; () banked
 11800  000642  25D0               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11801  000644  0100               	movlb	0	; () banked
 11802  000646  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11803  000648  0EFF               	movlw	255
 11804  00064A  0101               	movlb	1	; () banked
 11805  00064C  21D1               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11806  00064E  0100               	movlb	0	; () banked
 11807  000650  D005               	goto	L7
 11808  000652                     l1934:
 11809                           
 11810                           ; BSR set to: 0
 11811                           ;lorawan.c: 1296: else
 11812                           ;lorawan.c: 1297: {
 11813                           ;lorawan.c: 1298: frmPayloadLength = 0;
 11814                           
 11815                           ; BSR set to: 0
 11816  000652  0E00               	movlw	0
 11817  000654  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11818                           
 11819                           ; BSR set to: 0
 11820                           ;lorawan.c: 1299: packet = (0);
 11821  000656  0E00               	movlw	0
 11822  000658  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11823  00065A  0E00               	movlw	0
 11824  00065C                     L7:
 11825  00065C  6FE9               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11826                           
 11827                           ; BSR set to: 0
 11828                           ;lorawan.c: 1300: }
 11829                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 11830                           
 11831                           ; BSR set to: 0
 11832  00065E  0102               	movlb	2	; () banked
 11833  000660  8303               	bsf	(_loRa+3)& (0+255),1,b
 11834                           
 11835                           ; BSR set to: 2
 11836                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 11837  000662  9102               	bcf	(_loRa+2)& (0+255),0,b
 11838  000664  9302               	bcf	(_loRa+2)& (0+255),1,b
 11839  000666  9502               	bcf	(_loRa+2)& (0+255),2,b
 11840  000668  9702               	bcf	(_loRa+2)& (0+255),3,b
 11841                           
 11842                           ; BSR set to: 2
 11843                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 11844  00066A  0101               	movlb	1	; () banked
 11845  00066C  5110               	movf	_rxPayload& (0+255),w,b
 11846  00066E  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
 11847  000670  B4D8               	btfsc	status,2,c
 11848  000672  D015               	goto	u18199
 11849                           
 11850                           ; BSR set to: 1
 11851                           ;lorawan.c: 1306: {
 11852                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11853  000674  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 11854  000678  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 11855  00067C  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 11856  000680  0E01               	movlw	1
 11857  000682  0100               	movlb	0	; () banked
 11858  000684  6F63               	movwf	RxData@status& (0+255),b
 11859  000686  D801               	call	u18198
 11860  000688  D00A               	goto	u18199
 11861  00068A                     u18198:
 11862  00068A  0005               	push	
 11863  00068C  6EFA               	movwf	pclath,c
 11864  00068E  0101               	movlb	1	; () banked
 11865  000690  5110               	movf	_rxPayload& (0+255),w,b
 11866  000692  6EFD               	movwf	tosl,c
 11867  000694  5111               	movf	(_rxPayload+1)& (0+255),w,b
 11868  000696  6EFE               	movwf	tosh,c
 11869  000698  6AFF               	clrf	tosu,c
 11870  00069A  50FA               	movf	pclath,w,c
 11871  00069C  0012               	return		;indir
 11872  00069E                     u18199:
 11873                           
 11874                           ;lorawan.c: 1308: }
 11875                           ;lorawan.c: 1310: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11876  00069E  0102               	movlb	2	; () banked
 11877  0006A0  5102               	movf	(_loRa+2)& (0+255),w,b
 11878  0006A2  0BF0               	andlw	-16
 11879  0006A4  0909               	iorlw	9
 11880  0006A6  6F02               	movwf	(_loRa+2)& (0+255),b
 11881                           
 11882                           ; BSR set to: 2
 11883                           ;lorawan.c: 1311: LORAWAN_EnterContinuousReceive();
 11884  0006A8  EC76  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11885                           
 11886                           ;lorawan.c: 1312: return MAC_OK;
 11887                           ;	Return value of _LORAWAN_RxDone is never used
 11888  0006AC  0012               	return	
 11889  0006AE                     l1918:
 11890                           
 11891                           ;lorawan.c: 1313: }
 11892                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 11893  0006AE  0100               	movlb	0	; () banked
 11894  0006B0  EE20 F001          	lfsr	2,1
 11895  0006B4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11896  0006B6  26D9               	addwf	fsr2l,f,c
 11897  0006B8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11898  0006BA  22DA               	addwfc	fsr2h,f,c
 11899  0006BC  0102               	movlb	2	; () banked
 11900  0006BE  511E               	movf	(_loRa+30)& (0+255),w,b
 11901  0006C0  18DE               	xorwf	postinc2,w,c
 11902  0006C2  E10A               	bnz	u18200
 11903  0006C4  511F               	movf	(_loRa+31)& (0+255),w,b
 11904  0006C6  18DE               	xorwf	postinc2,w,c
 11905  0006C8  E107               	bnz	u18200
 11906  0006CA  5120               	movf	(_loRa+32)& (0+255),w,b
 11907  0006CC  18DE               	xorwf	postinc2,w,c
 11908  0006CE  E104               	bnz	u18200
 11909  0006D0  5121               	movf	(_loRa+33)& (0+255),w,b
 11910  0006D2  18DE               	xorwf	postinc2,w,c
 11911  0006D4  B4D8               	btfsc	status,2,c
 11912  0006D6  D00E               	goto	l1937
 11913  0006D8                     u18200:
 11914                           
 11915                           ; BSR set to: 2
 11916                           ;lorawan.c: 1317: {
 11917                           ;lorawan.c: 1318: SetReceptionNotOkState();
 11918  0006D8  EC37  F03A         	call	_SetReceptionNotOkState	;wreg free
 11919                           
 11920                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 11921  0006DC  0E02               	movlw	2
 11922  0006DE  0102               	movlb	2	; () banked
 11923  0006E0  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11924  0006E2  A4D8               	btfss	status,2,c
 11925  0006E4  0012               	return	
 11926                           
 11927                           ; BSR set to: 2
 11928                           ;lorawan.c: 1320: {
 11929                           ;lorawan.c: 1321: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11930  0006E6  5102               	movf	(_loRa+2)& (0+255),w,b
 11931  0006E8  0BF0               	andlw	-16
 11932  0006EA  0909               	iorlw	9
 11933  0006EC  6F02               	movwf	(_loRa+2)& (0+255),b
 11934                           
 11935                           ; BSR set to: 2
 11936                           ;lorawan.c: 1322: LORAWAN_EnterContinuousReceive();
 11937  0006EE  EC76  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11938                           
 11939                           ;lorawan.c: 1323: }
 11940                           ;lorawan.c: 1324: return INVALID_PARAMETER;
 11941                           ;	Return value of _LORAWAN_RxDone is never used
 11942  0006F2  0012               	return	
 11943  0006F4                     l1937:
 11944                           
 11945                           ;lorawan.c: 1325: }
 11946                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 11947  0006F4  0100               	movlb	0	; () banked
 11948  0006F6  EE20 F006          	lfsr	2,6
 11949  0006FA  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11950  0006FC  26D9               	addwf	fsr2l,f,c
 11951  0006FE  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11952  000700  22DA               	addwfc	fsr2h,f,c
 11953  000702  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 11954  000706  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 11955  00070A  C0DA  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 11956  00070E  C0DB  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 11957  000712  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 11958  000714  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 11959  000716  0101               	movlb	1	; () banked
 11960  000718  51D2               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11961  00071A  0FFC               	addlw	252
 11962  00071C  0100               	movlb	0	; () banked
 11963  00071E  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 11964  000720  0E49               	movlw	73
 11965  000722  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 11966  000724  0E00               	movlw	0
 11967  000726  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 11968  000728  0E01               	movlw	1
 11969  00072A  EC09  F030         	call	_AssembleEncryptionBlock
 11970                           
 11971                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 11972  00072E  0EEF               	movlw	low _radioBuffer
 11973  000730  0100               	movlb	0	; () banked
 11974  000732  6F60               	movwf	memcpy@d1& (0+255),b
 11975  000734  0E05               	movlw	high _radioBuffer
 11976  000736  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11977  000738  0E5A               	movlw	low _aesBuffer
 11978  00073A  6F62               	movwf	memcpy@s1& (0+255),b
 11979  00073C  0E01               	movlw	high _aesBuffer
 11980  00073E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11981  000740  0E00               	movlw	0
 11982  000742  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11983  000744  0E10               	movlw	16
 11984  000746  6F64               	movwf	memcpy@n& (0+255),b
 11985  000748  EC5C  F03D         	call	_memcpy	;wreg free
 11986                           
 11987                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 11988  00074C  0EFF               	movlw	low (_radioBuffer+16)
 11989  00074E  0100               	movlb	0	; () banked
 11990  000750  6F60               	movwf	memcpy@d1& (0+255),b
 11991  000752  0E05               	movlw	high (_radioBuffer+16)
 11992  000754  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11993  000756  C1D0  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 11994  00075A  C1D1  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 11995  00075E  0EFC               	movlw	252
 11996  000760  0101               	movlb	1	; () banked
 11997  000762  25D2               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11998  000764  0100               	movlb	0	; () banked
 11999  000766  6F64               	movwf	memcpy@n& (0+255),b
 12000  000768  6B65               	clrf	(memcpy@n+1)& (0+255),b
 12001  00076A  0EFF               	movlw	255
 12002  00076C  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 12003  00076E  EC5C  F03D         	call	_memcpy	;wreg free
 12004                           
 12005                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 12006  000772  0E22               	movlw	low (_loRa+34)
 12007  000774  0100               	movlb	0	; () banked
 12008  000776  6FB9               	movwf	AESCmac@key& (0+255),b
 12009  000778  0E02               	movlw	high (_loRa+34)
 12010  00077A  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 12011  00077C  0E5A               	movlw	low _aesBuffer
 12012  00077E  6FBB               	movwf	AESCmac@output& (0+255),b
 12013  000780  0E01               	movlw	high _aesBuffer
 12014  000782  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 12015  000784  0EEF               	movlw	low _radioBuffer
 12016  000786  6FBD               	movwf	AESCmac@input& (0+255),b
 12017  000788  0E05               	movlw	high _radioBuffer
 12018  00078A  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 12019  00078C  0101               	movlb	1	; () banked
 12020  00078E  51D2               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12021  000790  0F0C               	addlw	12
 12022  000792  0100               	movlb	0	; () banked
 12023  000794  6FBF               	movwf	AESCmac@size& (0+255),b
 12024  000796  ECF8  F010         	call	_AESCmac	;wreg free
 12025                           
 12026                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 12027  00079A  0EEA               	movlw	low LORAWAN_RxDone@computedMic
 12028  00079C  0100               	movlb	0	; () banked
 12029  00079E  6F60               	movwf	memcpy@d1& (0+255),b
 12030  0007A0  0E00               	movlw	high LORAWAN_RxDone@computedMic
 12031  0007A2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12032  0007A4  0E5A               	movlw	low _aesBuffer
 12033  0007A6  6F62               	movwf	memcpy@s1& (0+255),b
 12034  0007A8  0E01               	movlw	high _aesBuffer
 12035  0007AA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12036  0007AC  0E00               	movlw	0
 12037  0007AE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12038  0007B0  0E04               	movlw	4
 12039  0007B2  6F64               	movwf	memcpy@n& (0+255),b
 12040  0007B4  EC5C  F03D         	call	_memcpy	;wreg free
 12041                           
 12042                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 12043  0007B8  C1D0  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 12044  0007BC  C1D1  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 12045  0007C0  C1D2  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 12046  0007C4  EC45  F03E         	call	_ExtractMic	;wreg free
 12047  0007C8  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 12048  0007CC  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 12049  0007D0  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 12050  0007D4  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 12051                           
 12052                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 12053  0007D8  0100               	movlb	0	; () banked
 12054  0007DA  51E2               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 12055  0007DC  19EA               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 12056  0007DE  E10A               	bnz	u18220
 12057  0007E0  51E3               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 12058  0007E2  19EB               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 12059  0007E4  E107               	bnz	u18220
 12060  0007E6  51E4               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 12061  0007E8  19EC               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 12062  0007EA  E104               	bnz	u18220
 12063  0007EC  51E5               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 12064  0007EE  19ED               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 12065  0007F0  B4D8               	btfsc	status,2,c
 12066  0007F2  D00E               	goto	l1939
 12067  0007F4                     u18220:
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;lorawan.c: 1337: {
 12071                           ;lorawan.c: 1338: SetReceptionNotOkState();
 12072  0007F4  EC37  F03A         	call	_SetReceptionNotOkState	;wreg free
 12073                           
 12074                           ;lorawan.c: 1339: if (CLASS_C == loRa.deviceClass)
 12075  0007F8  0E02               	movlw	2
 12076  0007FA  0102               	movlb	2	; () banked
 12077  0007FC  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12078  0007FE  A4D8               	btfss	status,2,c
 12079  000800  0012               	return	
 12080                           
 12081                           ; BSR set to: 2
 12082                           ;lorawan.c: 1340: {
 12083                           ;lorawan.c: 1341: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12084  000802  5102               	movf	(_loRa+2)& (0+255),w,b
 12085  000804  0BF0               	andlw	-16
 12086  000806  0909               	iorlw	9
 12087  000808  6F02               	movwf	(_loRa+2)& (0+255),b
 12088                           
 12089                           ; BSR set to: 2
 12090                           ;lorawan.c: 1342: LORAWAN_EnterContinuousReceive();
 12091  00080A  EC76  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12092                           
 12093                           ;lorawan.c: 1343: }
 12094                           ;lorawan.c: 1344: return INVALID_PARAMETER;
 12095                           ;	Return value of _LORAWAN_RxDone is never used
 12096  00080E  0012               	return	
 12097  000810                     l1939:
 12098                           
 12099                           ;lorawan.c: 1345: }
 12100                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 12101  000810  0100               	movlb	0	; () banked
 12102  000812  EE20 F006          	lfsr	2,6
 12103  000816  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12104  000818  26D9               	addwf	fsr2l,f,c
 12105  00081A  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12106  00081C  22DA               	addwfc	fsr2h,f,c
 12107  00081E  0102               	movlb	2	; () banked
 12108  000820  510A               	movf	(_loRa+10)& (0+255),w,b
 12109  000822  5CDE               	subwf	postinc2,w,c
 12110  000824  510B               	movf	(_loRa+11)& (0+255),w,b
 12111  000826  58DE               	subwfb	postinc2,w,c
 12112  000828  A0D8               	btfss	status,0,c
 12113  00082A  D05D               	goto	l1941
 12114                           
 12115                           ; BSR set to: 2
 12116                           ;lorawan.c: 1349: {
 12117                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 12118  00082C  0100               	movlb	0	; () banked
 12119  00082E  EE20 F006          	lfsr	2,6
 12120  000832  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12121  000834  26D9               	addwf	fsr2l,f,c
 12122  000836  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12123  000838  22DA               	addwfc	fsr2h,f,c
 12124  00083A  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 12125  00083E  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 12126  000842  EE22  F00A         	lfsr	2,_loRa+10
 12127  000846  CFDE F0DC          	movff	postinc2,??_LORAWAN_RxDone+2
 12128  00084A  CFDD F0DD          	movff	postdec2,??_LORAWAN_RxDone+3
 12129  00084E  1FDC               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12130  000850  1FDD               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12131  000852  4BDC               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12132  000854  2BDD               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12133  000856  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12134  000858  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12135  00085A  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12136  00085C  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12137  00085E  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12138  000860  0102               	movlb	2	; () banked
 12139  000862  5D9C               	subwf	(_loRa+156)& (0+255),w,b
 12140  000864  0100               	movlb	0	; () banked
 12141  000866  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 12142  000868  0102               	movlb	2	; () banked
 12143  00086A  599D               	subwfb	(_loRa+157)& (0+255),w,b
 12144  00086C  B0D8               	btfsc	status,0,c
 12145  00086E  D02F               	goto	l1942
 12146                           
 12147                           ; BSR set to: 2
 12148                           ;lorawan.c: 1351: {
 12149                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 12150  000870  9100               	bcf	_loRa& (0+255),0,b
 12151                           
 12152                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 12153  000872  9102               	bcf	(_loRa+2)& (0+255),0,b
 12154  000874  9302               	bcf	(_loRa+2)& (0+255),1,b
 12155  000876  9502               	bcf	(_loRa+2)& (0+255),2,b
 12156  000878  9702               	bcf	(_loRa+2)& (0+255),3,b
 12157                           
 12158                           ; BSR set to: 2
 12159                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 12160  00087A  0101               	movlb	1	; () banked
 12161  00087C  5110               	movf	_rxPayload& (0+255),w,b
 12162  00087E  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
 12163  000880  B4D8               	btfsc	status,2,c
 12164  000882  D017               	goto	u18279
 12165                           
 12166                           ; BSR set to: 1
 12167                           ;lorawan.c: 1355: {
 12168                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 12169  000884  0102               	movlb	2	; () banked
 12170  000886  9B00               	bcf	_loRa& (0+255),5,b
 12171                           
 12172                           ; BSR set to: 2
 12173                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 12174  000888  0E00               	movlw	0
 12175  00088A  0100               	movlb	0	; () banked
 12176  00088C  6F60               	movwf	RxData@pData& (0+255),b
 12177  00088E  0E00               	movlw	0
 12178  000890  6F61               	movwf	(RxData@pData+1)& (0+255),b
 12179  000892  0E00               	movlw	0
 12180  000894  6F62               	movwf	RxData@dataLength& (0+255),b
 12181  000896  0E00               	movlw	0
 12182  000898  6F63               	movwf	RxData@status& (0+255),b
 12183  00089A  D801               	call	u18278
 12184  00089C  D00A               	goto	u18279
 12185  00089E                     u18278:
 12186  00089E  0005               	push	
 12187  0008A0  6EFA               	movwf	pclath,c
 12188  0008A2  0101               	movlb	1	; () banked
 12189  0008A4  5110               	movf	_rxPayload& (0+255),w,b
 12190  0008A6  6EFD               	movwf	tosl,c
 12191  0008A8  5111               	movf	(_rxPayload+1)& (0+255),w,b
 12192  0008AA  6EFE               	movwf	tosh,c
 12193  0008AC  6AFF               	clrf	tosu,c
 12194  0008AE  50FA               	movf	pclath,w,c
 12195  0008B0  0012               	return		;indir
 12196  0008B2                     u18279:
 12197                           
 12198                           ;lorawan.c: 1358: }
 12199                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 12200  0008B2  0102               	movlb	2	; () banked
 12201  0008B4  9303               	bcf	(_loRa+3)& (0+255),1,b
 12202                           
 12203                           ; BSR set to: 2
 12204                           ;lorawan.c: 1362: loRa.macStatus.rejoinNeeded = 1;
 12205  0008B6  8304               	bsf	(_loRa+4)& (0+255),1,b
 12206                           
 12207                           ; BSR set to: 2
 12208                           ;lorawan.c: 1363: if (CLASS_C == loRa.deviceClass)
 12209  0008B8  0E02               	movlw	2
 12210  0008BA  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12211  0008BC  A4D8               	btfss	status,2,c
 12212  0008BE  0012               	return	
 12213                           
 12214                           ; BSR set to: 2
 12215                           ;lorawan.c: 1364: {
 12216                           ;lorawan.c: 1365: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12217  0008C0  5102               	movf	(_loRa+2)& (0+255),w,b
 12218  0008C2  0BF0               	andlw	-16
 12219  0008C4  0909               	iorlw	9
 12220  0008C6  6F02               	movwf	(_loRa+2)& (0+255),b
 12221                           
 12222                           ; BSR set to: 2
 12223                           ;lorawan.c: 1366: LORAWAN_EnterContinuousReceive();
 12224  0008C8  EC76  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12225                           
 12226                           ;lorawan.c: 1367: }
 12227                           ;lorawan.c: 1368: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 12228                           ;	Return value of _LORAWAN_RxDone is never used
 12229  0008CC  0012               	return	
 12230  0008CE                     l1942:
 12231                           
 12232                           ;lorawan.c: 1370: else
 12233                           ;lorawan.c: 1371: {
 12234                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 12235  0008CE  0100               	movlb	0	; () banked
 12236  0008D0  EE20 F006          	lfsr	2,6
 12237  0008D4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12238  0008D6  26D9               	addwf	fsr2l,f,c
 12239  0008D8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12240  0008DA  22DA               	addwfc	fsr2h,f,c
 12241  0008DC  CFDE F20A          	movff	postinc2,_loRa+10
 12242  0008E0  CFDD F20B          	movff	postdec2,_loRa+11
 12243                           
 12244                           ; BSR set to: 0
 12245                           ;lorawan.c: 1373: }
 12246                           ;lorawan.c: 1374: }
 12247  0008E4  D02E               	goto	l1948
 12248  0008E6                     l1941:
 12249                           
 12250                           ;lorawan.c: 1375: else
 12251                           ;lorawan.c: 1376: {
 12252                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 12253                           
 12254                           ; BSR set to: 0
 12255  0008E6  0100               	movlb	0	; () banked
 12256  0008E8  EE20 F006          	lfsr	2,6
 12257  0008EC  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12258  0008EE  26D9               	addwf	fsr2l,f,c
 12259  0008F0  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12260  0008F2  22DA               	addwfc	fsr2h,f,c
 12261  0008F4  50DE               	movf	postinc2,w,c
 12262  0008F6  10DE               	iorwf	postinc2,w,c
 12263  0008F8  A4D8               	btfss	status,2,c
 12264  0008FA  D015               	goto	l1947
 12265                           
 12266                           ; BSR set to: 0
 12267  0008FC  0102               	movlb	2	; () banked
 12268  0008FE  290A               	incf	(_loRa+10)& (0+255),w,b
 12269  000900  E112               	bnz	l15625
 12270  000902  290B               	incf	(_loRa+11)& (0+255),w,b
 12271  000904  A4D8               	btfss	status,2,c
 12272  000906  D00F               	goto	l1947
 12273                           
 12274                           ; BSR set to: 2
 12275                           ;lorawan.c: 1378: {
 12276                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 12277  000908  0100               	movlb	0	; () banked
 12278  00090A  EE20 F006          	lfsr	2,6
 12279  00090E  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12280  000910  26D9               	addwf	fsr2l,f,c
 12281  000912  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12282  000914  22DA               	addwfc	fsr2h,f,c
 12283  000916  CFDE F20A          	movff	postinc2,_loRa+10
 12284  00091A  CFDD F20B          	movff	postdec2,_loRa+11
 12285                           
 12286                           ; BSR set to: 0
 12287                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 12288  00091E  0102               	movlb	2	; () banked
 12289  000920  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
 12290  000922  2B0D               	incf	(_loRa+13)& (0+255),f,b
 12291                           
 12292                           ;lorawan.c: 1382: }
 12293  000924  D00E               	goto	l1948
 12294  000926                     l1947:
 12295  000926                     l15625:
 12296                           
 12297                           ;lorawan.c: 1383: else
 12298                           ;lorawan.c: 1384: {
 12299                           ;lorawan.c: 1385: SetReceptionNotOkState();
 12300  000926  EC37  F03A         	call	_SetReceptionNotOkState	;wreg free
 12301                           
 12302                           ;lorawan.c: 1386: if (CLASS_C == loRa.deviceClass)
 12303  00092A  0E02               	movlw	2
 12304  00092C  0102               	movlb	2	; () banked
 12305  00092E  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12306  000930  A4D8               	btfss	status,2,c
 12307  000932  0012               	return	
 12308                           
 12309                           ; BSR set to: 2
 12310                           ;lorawan.c: 1387: {
 12311                           ;lorawan.c: 1388: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12312  000934  5102               	movf	(_loRa+2)& (0+255),w,b
 12313  000936  0BF0               	andlw	-16
 12314  000938  0909               	iorlw	9
 12315  00093A  6F02               	movwf	(_loRa+2)& (0+255),b
 12316                           
 12317                           ; BSR set to: 2
 12318                           ;lorawan.c: 1389: LORAWAN_EnterContinuousReceive();
 12319  00093C  EC76  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12320                           
 12321                           ;lorawan.c: 1390: }
 12322                           ;lorawan.c: 1392: return INVALID_PARAMETER;
 12323                           ;	Return value of _LORAWAN_RxDone is never used
 12324  000940  0012               	return	
 12325  000942                     l1948:
 12326                           
 12327                           ;lorawan.c: 1393: }
 12328                           ;lorawan.c: 1394: }
 12329                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 12330  000942  0102               	movlb	2	; () banked
 12331  000944  290A               	incf	(_loRa+10)& (0+255),w,b
 12332  000946  E113               	bnz	l15647
 12333  000948  290B               	incf	(_loRa+11)& (0+255),w,b
 12334  00094A  E111               	bnz	l15647
 12335  00094C  290C               	incf	(_loRa+12)& (0+255),w,b
 12336  00094E  E10F               	bnz	l15647
 12337  000950  290D               	incf	(_loRa+13)& (0+255),w,b
 12338  000952  A4D8               	btfss	status,2,c
 12339  000954  D00C               	goto	l1950
 12340                           
 12341                           ; BSR set to: 2
 12342                           ;lorawan.c: 1397: {
 12343                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 12344  000956  8304               	bsf	(_loRa+4)& (0+255),1,b
 12345                           
 12346                           ; BSR set to: 2
 12347                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 12348  000958  0E02               	movlw	2
 12349  00095A  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12350  00095C  A4D8               	btfss	status,2,c
 12351  00095E  0012               	return	
 12352                           
 12353                           ; BSR set to: 2
 12354                           ;lorawan.c: 1402: {
 12355                           ;lorawan.c: 1403: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12356  000960  5102               	movf	(_loRa+2)& (0+255),w,b
 12357  000962  0BF0               	andlw	-16
 12358  000964  0909               	iorlw	9
 12359  000966  6F02               	movwf	(_loRa+2)& (0+255),b
 12360                           
 12361                           ; BSR set to: 2
 12362                           ;lorawan.c: 1404: LORAWAN_EnterContinuousReceive();
 12363  000968  EC76  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12364                           
 12365                           ;lorawan.c: 1405: }
 12366                           ;lorawan.c: 1406: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 12367                           ;	Return value of _LORAWAN_RxDone is never used
 12368  00096C  0012               	return	
 12369  00096E                     l1950:
 12370  00096E                     l15647:
 12371                           
 12372                           ;lorawan.c: 1407: }
 12373                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 12374  00096E  0102               	movlb	2	; () banked
 12375  000970  5102               	movf	(_loRa+2)& (0+255),w,b
 12376  000972  0B0F               	andlw	15
 12377  000974  0A03               	xorlw	3
 12378  000976  A4D8               	btfss	status,2,c
 12379  000978  D003               	goto	l1952
 12380                           
 12381                           ; BSR set to: 2
 12382                           ;lorawan.c: 1411: {
 12383                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 12384  00097A  51E5               	movf	(_loRa+229)& (0+255),w,b
 12385  00097C  ECF9  F043         	call	_SwTimerStop
 12386  000980                     l1952:
 12387                           
 12388                           ;lorawan.c: 1413: }
 12389                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 12390  000980  0E01               	movlw	1
 12391  000982  0102               	movlb	2	; () banked
 12392  000984  6FD8               	movwf	(_loRa+216)& (0+255),b
 12393                           
 12394                           ; BSR set to: 2
 12395                           ;lorawan.c: 1417: CheckFlags (hdr);
 12396  000986  C0F1  F060         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 12397  00098A  C0F2  F061         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 12398  00098E  ECBB  F03D         	call	_CheckFlags	;wreg free
 12399                           
 12400                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 12401  000992  0100               	movlb	0	; () banked
 12402  000994  EE20 F005          	lfsr	2,5
 12403  000998  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12404  00099A  26D9               	addwf	fsr2l,f,c
 12405  00099C  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12406  00099E  22DA               	addwfc	fsr2h,f,c
 12407  0009A0  50DF               	movf	223,w,c
 12408  0009A2  0B0F               	andlw	15
 12409  0009A4  0900               	iorlw	0
 12410  0009A6  B4D8               	btfsc	status,2,c
 12411  0009A8  D016               	goto	l1953
 12412                           
 12413                           ; BSR set to: 0
 12414                           ;lorawan.c: 1420: {
 12415                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 12416  0009AA  0E08               	movlw	8
 12417  0009AC  25F1               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 12418  0009AE  6FB0               	movwf	MacExecuteCommands@buffer& (0+255),b
 12419  0009B0  0E00               	movlw	0
 12420  0009B2  21F2               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12421  0009B4  6FB1               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 12422  0009B6  EE20 F005          	lfsr	2,5
 12423  0009BA  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12424  0009BC  26D9               	addwf	fsr2l,f,c
 12425  0009BE  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12426  0009C0  22DA               	addwfc	fsr2h,f,c
 12427  0009C2  50DF               	movf	223,w,c
 12428  0009C4  0B0F               	andlw	15
 12429  0009C6  6FB2               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 12430  0009C8  ECA7  F017         	call	_MacExecuteCommands	;wreg free
 12431  0009CC  C0B0  F1D0         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 12432  0009D0  C0B1  F1D1         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 12433                           
 12434                           ;lorawan.c: 1422: }
 12435  0009D4  D007               	goto	l1954
 12436  0009D6                     l1953:
 12437                           
 12438                           ;lorawan.c: 1423: else
 12439                           ;lorawan.c: 1424: {
 12440                           ;lorawan.c: 1425: buffer = buffer + 8;
 12441  0009D6  0E08               	movlw	8
 12442  0009D8  0101               	movlb	1	; () banked
 12443  0009DA  25D0               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12444  0009DC  6FD0               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 12445  0009DE  0E00               	movlw	0
 12446  0009E0  21D1               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12447  0009E2  6FD1               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 12448  0009E4                     l1954:
 12449                           
 12450                           ;lorawan.c: 1426: }
 12451                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 12452                           
 12453                           ; BSR set to: 1
 12454  0009E4  0101               	movlb	1	; () banked
 12455  0009E6  51D2               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12456  0009E8  0100               	movlb	0	; () banked
 12457  0009EA  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 12458  0009EC  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 12459  0009EE  EE20 F005          	lfsr	2,5
 12460  0009F2  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12461  0009F4  26D9               	addwf	fsr2l,f,c
 12462  0009F6  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12463  0009F8  22DA               	addwfc	fsr2h,f,c
 12464  0009FA  50DF               	movf	223,w,c
 12465  0009FC  0B0F               	andlw	15
 12466  0009FE  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 12467  000A00  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 12468  000A02  0E0C               	movlw	12
 12469  000A04  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12470  000A06  0E00               	movlw	0
 12471  000A08  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12472  000A0A  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12473  000A0C  19DC               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12474  000A0E  E104               	bnz	u18360
 12475  000A10  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12476  000A12  19DD               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 12477  000A14  B4D8               	btfsc	status,2,c
 12478  000A16  D098               	goto	l1955
 12479  000A18                     u18360:
 12480                           
 12481                           ; BSR set to: 0
 12482                           ;lorawan.c: 1428: {
 12483                           ;lorawan.c: 1429: fPort = *(buffer++);
 12484  000A18  C1D0  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 12485  000A1C  C1D1  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 12486  000A20  50DF               	movf	indf2,w,c
 12487  000A22  6FDF               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 12488                           
 12489                           ; BSR set to: 0
 12490  000A24  0101               	movlb	1	; () banked
 12491  000A26  4BD0               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 12492  000A28  2BD1               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 12493                           
 12494                           ; BSR set to: 1
 12495                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 12496  000A2A  0100               	movlb	0	; () banked
 12497  000A2C  EE20 F005          	lfsr	2,5
 12498  000A30  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12499  000A32  26D9               	addwf	fsr2l,f,c
 12500  000A34  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12501  000A36  22DA               	addwfc	fsr2h,f,c
 12502  000A38  50DF               	movf	223,w,c
 12503  000A3A  0B0F               	andlw	15
 12504  000A3C  0800               	sublw	0
 12505  000A3E  0101               	movlb	1	; () banked
 12506  000A40  25D2               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12507  000A42  0FF4               	addlw	244
 12508  000A44  0100               	movlb	0	; () banked
 12509  000A46  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 12510                           
 12511                           ; BSR set to: 0
 12512                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 12513  000A48  EE20 F005          	lfsr	2,5
 12514  000A4C  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12515  000A4E  26D9               	addwf	fsr2l,f,c
 12516  000A50  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12517  000A52  22DA               	addwfc	fsr2h,f,c
 12518  000A54  50DF               	movf	223,w,c
 12519  000A56  0B0F               	andlw	15
 12520  000A58  0F19               	addlw	25
 12521  000A5A  6FE6               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 12522                           
 12523                           ; BSR set to: 0
 12524                           ;lorawan.c: 1434: if (fPort != 0)
 12525  000A5C  51DF               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 12526  000A5E  B4D8               	btfsc	status,2,c
 12527  000A60  D028               	goto	l1956
 12528                           
 12529                           ; BSR set to: 0
 12530                           ;lorawan.c: 1435: {
 12531                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 12532  000A62  C1D0  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 12533  000A66  C1D1  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 12534  000A6A  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 12535  000A6C  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 12536  000A6E  0E01               	movlw	1
 12537  000A70  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 12538  000A72  C20A  F095         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 12539  000A76  C20B  F096         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 12540  000A7A  C20C  F097         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 12541  000A7E  C20D  F098         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 12542  000A82  0E32               	movlw	low (_loRa+50)
 12543  000A84  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 12544  000A86  0E02               	movlw	high (_loRa+50)
 12545  000A88  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 12546  000A8A  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 12547  000A8E  0EEF               	movlw	low _radioBuffer
 12548  000A90  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 12549  000A92  0E05               	movlw	high _radioBuffer
 12550  000A94  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 12551  000A96  0E00               	movlw	0
 12552  000A98  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 12553  000A9A  EC45  F021         	call	_EncryptFRMPayload	;wreg free
 12554                           
 12555                           ;lorawan.c: 1437: packet = buffer - 1;
 12556  000A9E  0EFF               	movlw	255
 12557  000AA0  0101               	movlb	1	; () banked
 12558  000AA2  25D0               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12559  000AA4  0100               	movlb	0	; () banked
 12560  000AA6  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 12561  000AA8  0EFF               	movlw	255
 12562  000AAA  0101               	movlb	1	; () banked
 12563  000AAC  21D1               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12564  000AAE  0100               	movlb	0	; () banked
 12565  000AB0  D050               	goto	L29
 12566  000AB2                     l1956:
 12567                           
 12568                           ; BSR set to: 0
 12569                           ;lorawan.c: 1439: else
 12570                           ;lorawan.c: 1440: {
 12571                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 12572                           
 12573                           ; BSR set to: 0
 12574  000AB2  0101               	movlb	1	; () banked
 12575  000AB4  51D2               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12576  000AB6  0100               	movlb	0	; () banked
 12577  000AB8  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 12578  000ABA  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 12579  000ABC  EE20 F005          	lfsr	2,5
 12580  000AC0  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12581  000AC2  26D9               	addwf	fsr2l,f,c
 12582  000AC4  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12583  000AC6  22DA               	addwfc	fsr2h,f,c
 12584  000AC8  50DF               	movf	223,w,c
 12585  000ACA  0B0F               	andlw	15
 12586  000ACC  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 12587  000ACE  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 12588  000AD0  0E0D               	movlw	13
 12589  000AD2  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12590  000AD4  0E00               	movlw	0
 12591  000AD6  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12592  000AD8  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12593  000ADA  5DDC               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12594  000ADC  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 12595  000ADE  0A80               	xorlw	128
 12596  000AE0  6FDE               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 12597  000AE2  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12598  000AE4  0A80               	xorlw	128
 12599  000AE6  59DE               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 12600  000AE8  B0D8               	btfsc	status,0,c
 12601  000AEA  D02B               	goto	l1958
 12602                           
 12603                           ; BSR set to: 0
 12604                           ;lorawan.c: 1443: {
 12605                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 12606  000AEC  C1D0  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 12607  000AF0  C1D1  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 12608  000AF4  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 12609  000AF6  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 12610  000AF8  0E01               	movlw	1
 12611  000AFA  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 12612  000AFC  C20A  F095         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 12613  000B00  C20B  F096         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 12614  000B04  C20C  F097         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 12615  000B08  C20D  F098         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 12616  000B0C  0E22               	movlw	low (_loRa+34)
 12617  000B0E  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 12618  000B10  0E02               	movlw	high (_loRa+34)
 12619  000B12  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 12620  000B14  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 12621  000B18  0EEF               	movlw	low _radioBuffer
 12622  000B1A  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 12623  000B1C  0E05               	movlw	high _radioBuffer
 12624  000B1E  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 12625  000B20  0E00               	movlw	0
 12626  000B22  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 12627  000B24  EC45  F021         	call	_EncryptFRMPayload	;wreg free
 12628                           
 12629                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 12630  000B28  C1D0  F0B0         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 12631  000B2C  C1D1  F0B1         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 12632  000B30  0100               	movlb	0	; () banked
 12633  000B32  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 12634  000B34  6FB2               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 12635  000B36  ECA7  F017         	call	_MacExecuteCommands	;wreg free
 12636  000B3A  C0B0  F1D0         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 12637  000B3E  C0B1  F1D1         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 12638  000B42                     l1958:
 12639                           
 12640                           ;lorawan.c: 1447: }
 12641                           ;lorawan.c: 1449: frmPayloadLength = 0;
 12642  000B42  0E00               	movlw	0
 12643  000B44  0100               	movlb	0	; () banked
 12644  000B46  D001               	goto	L9
 12645  000B48                     l1955:
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;lorawan.c: 1453: else
 12649                           ;lorawan.c: 1454: {
 12650                           ;lorawan.c: 1455: frmPayloadLength = 0;
 12651                           
 12652                           ; BSR set to: 0
 12653  000B48  0E00               	movlw	0
 12654  000B4A                     L9:
 12655  000B4A  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 12656                           
 12657                           ; BSR set to: 0
 12658                           ;lorawan.c: 1456: packet = (0);
 12659  000B4C  0E00               	movlw	0
 12660  000B4E  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 12661  000B50  0E00               	movlw	0
 12662  000B52                     L29:
 12663  000B52  6FE9               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;lorawan.c: 1457: }
 12667                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 12668                           
 12669                           ; BSR set to: 0
 12670  000B54  0E01               	movlw	1
 12671  000B56  0102               	movlb	2	; () banked
 12672  000B58  6FD8               	movwf	(_loRa+216)& (0+255),b
 12673                           
 12674                           ; BSR set to: 2
 12675                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 12676  000B5A  0E00               	movlw	0
 12677  000B5C  6FD1               	movwf	(_loRa+209)& (0+255),b
 12678  000B5E  0E00               	movlw	0
 12679  000B60  6FD0               	movwf	(_loRa+208)& (0+255),b
 12680                           
 12681                           ; BSR set to: 2
 12682                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 12683  000B62  0E00               	movlw	0
 12684  000B64  6FEE               	movwf	(_loRa+238)& (0+255),b
 12685                           
 12686                           ; BSR set to: 2
 12687                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 12688  000B66  9900               	bcf	_loRa& (0+255),4,b
 12689                           
 12690                           ; BSR set to: 2
 12691                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 12692  000B68  8303               	bsf	(_loRa+3)& (0+255),1,b
 12693                           
 12694                           ; BSR set to: 2
 12695                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 12696  000B6A  A100               	btfss	_loRa& (0+255),0,b
 12697  000B6C  D055               	goto	l1960
 12698                           
 12699                           ; BSR set to: 2
 12700                           ;lorawan.c: 1468: {
 12701                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 12702  000B6E  0100               	movlb	0	; () banked
 12703  000B70  EE20 F005          	lfsr	2,5
 12704  000B74  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12705  000B76  26D9               	addwf	fsr2l,f,c
 12706  000B78  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12707  000B7A  22DA               	addwfc	fsr2h,f,c
 12708  000B7C  AADF               	btfss	indf2,5,c
 12709  000B7E  D049               	goto	l1961
 12710                           
 12711                           ; BSR set to: 0
 12712                           ;lorawan.c: 1470: {
 12713                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 12714  000B80  0102               	movlb	2	; () banked
 12715  000B82  9100               	bcf	_loRa& (0+255),0,b
 12716                           
 12717                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 12718  000B84  9102               	bcf	(_loRa+2)& (0+255),0,b
 12719  000B86  9302               	bcf	(_loRa+2)& (0+255),1,b
 12720  000B88  9502               	bcf	(_loRa+2)& (0+255),2,b
 12721  000B8A  9702               	bcf	(_loRa+2)& (0+255),3,b
 12722                           
 12723                           ; BSR set to: 2
 12724                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 12725  000B8C  0101               	movlb	1	; () banked
 12726  000B8E  5110               	movf	_rxPayload& (0+255),w,b
 12727  000B90  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
 12728  000B92  B4D8               	btfsc	status,2,c
 12729  000B94  D017               	goto	u18429
 12730                           
 12731                           ; BSR set to: 1
 12732                           ;lorawan.c: 1474: {
 12733                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 12734  000B96  0102               	movlb	2	; () banked
 12735  000B98  9B00               	bcf	_loRa& (0+255),5,b
 12736                           
 12737                           ; BSR set to: 2
 12738                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 12739  000B9A  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 12740  000B9E  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 12741  000BA2  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 12742  000BA6  0E01               	movlw	1
 12743  000BA8  0100               	movlb	0	; () banked
 12744  000BAA  6F63               	movwf	RxData@status& (0+255),b
 12745  000BAC  D801               	call	u18428
 12746  000BAE  D00A               	goto	u18429
 12747  000BB0                     u18428:
 12748  000BB0  0005               	push	
 12749  000BB2  6EFA               	movwf	pclath,c
 12750  000BB4  0101               	movlb	1	; () banked
 12751  000BB6  5110               	movf	_rxPayload& (0+255),w,b
 12752  000BB8  6EFD               	movwf	tosl,c
 12753  000BBA  5111               	movf	(_rxPayload+1)& (0+255),w,b
 12754  000BBC  6EFE               	movwf	tosh,c
 12755  000BBE  6AFF               	clrf	tosu,c
 12756  000BC0  50FA               	movf	pclath,w,c
 12757  000BC2  0012               	return		;indir
 12758  000BC4                     u18429:
 12759                           
 12760                           ;lorawan.c: 1477: }
 12761                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 12762  000BC4  0102               	movlb	2	; () banked
 12763  000BC6  9303               	bcf	(_loRa+3)& (0+255),1,b
 12764                           
 12765                           ; BSR set to: 2
 12766                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 12767  000BC8  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 12768                           
 12769                           ; BSR set to: 2
 12770  000BCA  BB00               	btfsc	_loRa& (0+255),5,b
 12771  000BCC  D06C               	goto	l1975
 12772                           
 12773                           ; BSR set to: 2
 12774  000BCE  B300               	btfsc	_loRa& (0+255),1,b
 12775  000BD0  D002               	goto	u18460
 12776                           
 12777                           ; BSR set to: 2
 12778  000BD2  A700               	btfss	_loRa& (0+255),3,b
 12779  000BD4  D068               	goto	l1975
 12780  000BD6                     u18460:
 12781                           
 12782                           ; BSR set to: 2
 12783                           ;lorawan.c: 1480: {
 12784                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 12785                           
 12786                           ; BSR set to: 2
 12787  000BD6  0E01               	movlw	1
 12788  000BD8  0100               	movlb	0	; () banked
 12789  000BDA  6FAF               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12790  000BDC  0EE0               	movlw	low LORAWAN_RxDone@channelIndex
 12791  000BDE  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12792  000BE0  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 12793  000BE2  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12794  000BE4  0102               	movlb	2	; () banked
 12795  000BE6  51ED               	movf	(_loRa+237)& (0+255),w,b
 12796  000BE8  EC55  F02C         	call	_SearchAvailableChannel
 12797  000BEC  0900               	iorlw	0
 12798  000BEE  A4D8               	btfss	status,2,c
 12799  000BF0  D00D               	goto	l1966
 12800                           
 12801                           ;lorawan.c: 1482: {
 12802                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 12803  000BF2  0E00               	movlw	0
 12804  000BF4  0100               	movlb	0	; () banked
 12805  000BF6  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 12806  000BF8  0E00               	movlw	0
 12807  000BFA  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 12808  000BFC  0E00               	movlw	0
 12809  000BFE  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12810  000C00  0E00               	movlw	0
 12811  000C02  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12812  000C04  0E00               	movlw	0
 12813  000C06  EC0C  F034         	call	_LORAWAN_Send
 12814  000C0A  D048               	goto	l15751
 12815  000C0C                     l1966:
 12816                           
 12817                           ;lorawan.c: 1486: else
 12818                           ;lorawan.c: 1487: {
 12819                           ;lorawan.c: 1489: StartReTxTimer();
 12820                           
 12821                           ; BSR set to: 2
 12822  000C0C  EC91  F025         	call	_StartReTxTimer	;wreg free
 12823                           
 12824                           ;lorawan.c: 1490: }
 12825                           ;lorawan.c: 1491: }
 12826                           ;lorawan.c: 1492: }
 12827  000C10  D04A               	goto	l1975
 12828  000C12                     l1961:
 12829                           
 12830                           ;lorawan.c: 1494: else
 12831                           ;lorawan.c: 1495: {
 12832                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 12833  000C12  ECF1  F03A         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 12834                           
 12835                           ;lorawan.c: 1497: }
 12836                           ;lorawan.c: 1498: }
 12837  000C16  D047               	goto	l1975
 12838  000C18                     l1960:
 12839                           
 12840                           ; BSR set to: 2
 12841                           ;lorawan.c: 1499: else
 12842                           ;lorawan.c: 1500: {
 12843                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 12844  000C18  9102               	bcf	(_loRa+2)& (0+255),0,b
 12845  000C1A  9302               	bcf	(_loRa+2)& (0+255),1,b
 12846  000C1C  9502               	bcf	(_loRa+2)& (0+255),2,b
 12847  000C1E  9702               	bcf	(_loRa+2)& (0+255),3,b
 12848                           
 12849                           ; BSR set to: 2
 12850                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 12851  000C20  0101               	movlb	1	; () banked
 12852  000C22  5110               	movf	_rxPayload& (0+255),w,b
 12853  000C24  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
 12854  000C26  B4D8               	btfsc	status,2,c
 12855  000C28  D017               	goto	u18499
 12856                           
 12857                           ; BSR set to: 1
 12858                           ;lorawan.c: 1504: {
 12859                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 12860  000C2A  0102               	movlb	2	; () banked
 12861  000C2C  9B00               	bcf	_loRa& (0+255),5,b
 12862                           
 12863                           ; BSR set to: 2
 12864                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 12865  000C2E  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 12866  000C32  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 12867  000C36  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 12868  000C3A  0E01               	movlw	1
 12869  000C3C  0100               	movlb	0	; () banked
 12870  000C3E  6F63               	movwf	RxData@status& (0+255),b
 12871  000C40  D801               	call	u18498
 12872  000C42  D00A               	goto	u18499
 12873  000C44                     u18498:
 12874  000C44  0005               	push	
 12875  000C46  6EFA               	movwf	pclath,c
 12876  000C48  0101               	movlb	1	; () banked
 12877  000C4A  5110               	movf	_rxPayload& (0+255),w,b
 12878  000C4C  6EFD               	movwf	tosl,c
 12879  000C4E  5111               	movf	(_rxPayload+1)& (0+255),w,b
 12880  000C50  6EFE               	movwf	tosh,c
 12881  000C52  6AFF               	clrf	tosu,c
 12882  000C54  50FA               	movf	pclath,w,c
 12883  000C56  0012               	return		;indir
 12884  000C58                     u18499:
 12885                           
 12886                           ;lorawan.c: 1507: }
 12887                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 12888  000C58  0102               	movlb	2	; () banked
 12889  000C5A  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 12890                           
 12891                           ; BSR set to: 2
 12892  000C5C  BB00               	btfsc	_loRa& (0+255),5,b
 12893  000C5E  D023               	goto	l1975
 12894                           
 12895                           ; BSR set to: 2
 12896  000C60  B300               	btfsc	_loRa& (0+255),1,b
 12897  000C62  D002               	goto	u18530
 12898                           
 12899                           ; BSR set to: 2
 12900  000C64  A700               	btfss	_loRa& (0+255),3,b
 12901  000C66  D01F               	goto	l1975
 12902  000C68                     u18530:
 12903                           
 12904                           ; BSR set to: 2
 12905                           ;lorawan.c: 1510: {
 12906                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 12907                           
 12908                           ; BSR set to: 2
 12909  000C68  0E01               	movlw	1
 12910  000C6A  0100               	movlb	0	; () banked
 12911  000C6C  6FAF               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12912  000C6E  0EE0               	movlw	low LORAWAN_RxDone@channelIndex
 12913  000C70  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12914  000C72  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 12915  000C74  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12916  000C76  0102               	movlb	2	; () banked
 12917  000C78  51ED               	movf	(_loRa+237)& (0+255),w,b
 12918  000C7A  EC55  F02C         	call	_SearchAvailableChannel
 12919  000C7E  0900               	iorlw	0
 12920  000C80  A4D8               	btfss	status,2,c
 12921  000C82  D00F               	goto	l1974
 12922                           
 12923                           ;lorawan.c: 1512: {
 12924                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 12925  000C84  0E00               	movlw	0
 12926  000C86  0100               	movlb	0	; () banked
 12927  000C88  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 12928  000C8A  0E00               	movlw	0
 12929  000C8C  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 12930  000C8E  0E00               	movlw	0
 12931  000C90  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12932  000C92  0E00               	movlw	0
 12933  000C94  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12934  000C96  0E00               	movlw	0
 12935  000C98  EC0C  F034         	call	_LORAWAN_Send
 12936  000C9C                     l15751:
 12937                           
 12938                           ;lorawan.c: 1514: loRa.lorawanMacStatus.fPending = 0;
 12939  000C9C  0102               	movlb	2	; () banked
 12940  000C9E  9700               	bcf	_loRa& (0+255),3,b
 12941                           
 12942                           ;lorawan.c: 1515: }
 12943  000CA0  D002               	goto	l1975
 12944  000CA2                     l1974:
 12945                           
 12946                           ;lorawan.c: 1516: else
 12947                           ;lorawan.c: 1517: {
 12948                           ;lorawan.c: 1519: StartReTxTimer();
 12949                           
 12950                           ; BSR set to: 2
 12951  000CA2  EC91  F025         	call	_StartReTxTimer	;wreg free
 12952  000CA6                     l1975:
 12953                           
 12954                           ;lorawan.c: 1520: }
 12955                           ;lorawan.c: 1521: }
 12956                           ;lorawan.c: 1522: }
 12957                           ;lorawan.c: 1524: if (CLASS_C == loRa.deviceClass)
 12958  000CA6  0E02               	movlw	2
 12959  000CA8  0102               	movlb	2	; () banked
 12960  000CAA  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12961  000CAC  A4D8               	btfss	status,2,c
 12962  000CAE  0012               	return	
 12963                           
 12964                           ; BSR set to: 2
 12965                           ;lorawan.c: 1525: {
 12966                           ;lorawan.c: 1526: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12967  000CB0  5102               	movf	(_loRa+2)& (0+255),w,b
 12968  000CB2  0BF0               	andlw	-16
 12969  000CB4  0909               	iorlw	9
 12970  000CB6  6F02               	movwf	(_loRa+2)& (0+255),b
 12971                           
 12972                           ; BSR set to: 2
 12973                           ;lorawan.c: 1527: LORAWAN_EnterContinuousReceive();
 12974  000CB8  EC76  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12975                           
 12976                           ;lorawan.c: 1528: }
 12977                           ;lorawan.c: 1529: }
 12978  000CBC  0012               	return	
 12979  000CBE                     l1915:
 12980                           
 12981                           ;lorawan.c: 1530: else
 12982                           ;lorawan.c: 1531: {
 12983                           ;lorawan.c: 1533: SetReceptionNotOkState ();
 12984  000CBE  EC37  F03A         	call	_SetReceptionNotOkState	;wreg free
 12985                           
 12986                           ;lorawan.c: 1535: }
 12987                           ;lorawan.c: 1536: }
 12988                           
 12989                           ;lorawan.c: 1534: return INVALID_PARAMETER;
 12990                           ;	Return value of _LORAWAN_RxDone is never used
 12991  000CC2  0012               	return	
 12992  000CC4                     l1901:
 12993                           
 12994                           ;lorawan.c: 1537: else
 12995                           ;lorawan.c: 1538: {
 12996                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 12997  000CC4  0101               	movlb	1	; () banked
 12998  000CC6  5110               	movf	_rxPayload& (0+255),w,b
 12999  000CC8  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
 13000  000CCA  B4D8               	btfsc	status,2,c
 13001  000CCC  0012               	return	
 13002                           
 13003                           ; BSR set to: 1
 13004                           ;lorawan.c: 1541: {
 13005                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 13006  000CCE  ECB5  F046         	call	_RADIO_GetStatus	;wreg free
 13007  000CD2  0100               	movlb	0	; () banked
 13008  000CD4  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 13009  000CD6  B7DA               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 13010  000CD8  D014               	goto	l1980
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;lorawan.c: 1543: {
 13014                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 13015  000CDA  C1D0  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 13016  000CDE  C1D1  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 13017  000CE2  C1D2  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 13018  000CE6  0E03               	movlw	3
 13019  000CE8  6F63               	movwf	RxData@status& (0+255),b
 13020  000CEA  D801               	call	u18588
 13021  000CEC  0012               	return	
 13022  000CEE                     u18588:
 13023  000CEE  0005               	push	
 13024  000CF0  6EFA               	movwf	pclath,c
 13025  000CF2  0101               	movlb	1	; () banked
 13026  000CF4  5110               	movf	_rxPayload& (0+255),w,b
 13027  000CF6  6EFD               	movwf	tosl,c
 13028  000CF8  5111               	movf	(_rxPayload+1)& (0+255),w,b
 13029  000CFA  6EFE               	movwf	tosh,c
 13030  000CFC  6AFF               	clrf	tosu,c
 13031  000CFE  50FA               	movf	pclath,w,c
 13032  000D00  0012               	return		;indir
 13033  000D02                     l1980:
 13034                           
 13035                           ;lorawan.c: 1546: else
 13036                           ;lorawan.c: 1547: {
 13037                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 13038  000D02  C1D0  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 13039  000D06  C1D1  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 13040  000D0A  C1D2  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 13041  000D0E  0E02               	movlw	2
 13042  000D10  0100               	movlb	0	; () banked
 13043  000D12  6F63               	movwf	RxData@status& (0+255),b
 13044  000D14  D801               	call	u18598
 13045  000D16  0012               	return	
 13046  000D18                     u18598:
 13047  000D18  0005               	push	
 13048  000D1A  6EFA               	movwf	pclath,c
 13049  000D1C  0101               	movlb	1	; () banked
 13050  000D1E  5110               	movf	_rxPayload& (0+255),w,b
 13051  000D20  6EFD               	movwf	tosl,c
 13052  000D22  5111               	movf	(_rxPayload+1)& (0+255),w,b
 13053  000D24  6EFE               	movwf	tosh,c
 13054  000D26  6AFF               	clrf	tosu,c
 13055  000D28  50FA               	movf	pclath,w,c
 13056  000D2A  0012               	return		;indir
 13057  000D2C                     __end_of_LORAWAN_RxDone:
 13058                           	opt stack 0
 13059                           tosu	equ	0xFFF
 13060                           tosh	equ	0xFFE
 13061                           tosl	equ	0xFFD
 13062                           pclath	equ	0xFFA
 13063                           tblptru	equ	0xFF8
 13064                           tblptrh	equ	0xFF7
 13065                           tblptrl	equ	0xFF6
 13066                           tablat	equ	0xFF5
 13067                           prodh	equ	0xFF4
 13068                           prodl	equ	0xFF3
 13069                           intcon	equ	0xFF2
 13070                           intcon2	equ	0xFF1
 13071                           intcon3	equ	0xFF0
 13072                           postinc0	equ	0xFEE
 13073                           wreg	equ	0xFE8
 13074                           postinc1	equ	0xFE6
 13075                           postdec1	equ	0xFE5
 13076                           plusw1	equ	0xFE3
 13077                           fsr1h	equ	0xFE2
 13078                           fsr1l	equ	0xFE1
 13079                           indf2	equ	0xFDF
 13080                           postinc2	equ	0xFDE
 13081                           postdec2	equ	0xFDD
 13082                           fsr2h	equ	0xFDA
 13083                           fsr2l	equ	0xFD9
 13084                           status	equ	0xFD8
 13085                           
 13086 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 13087 ;; Defined at:
 13088 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13089 ;; Parameters:    Size  Location     Type
 13090 ;;		None
 13091 ;; Auto vars:     Size  Location     Type
 13092 ;;		None
 13093 ;; Return value:  Size  Location     Type
 13094 ;;                  1    wreg      void 
 13095 ;; Registers used:
 13096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13097 ;; Tracked objects:
 13098 ;;		On entry : 0/0
 13099 ;;		On exit  : 0/0
 13100 ;;		Unchanged: 0/0
 13101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13104 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13105 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13106 ;;Total ram usage:        4 bytes
 13107 ;; Hardware stack levels used:    1
 13108 ;; Hardware stack levels required when called:   11
 13109 ;; This function calls:
 13110 ;;		_SwTimerSetTimeout
 13111 ;;		_SwTimerStart
 13112 ;;		___lldiv
 13113 ;; This function is called by:
 13114 ;;		_AckRetransmissionCallback
 13115 ;;		_LORAWAN_RxDone
 13116 ;; This function uses a non-reentrant model
 13117 ;;
 13118                           
 13119                           	psect	text63
 13120  0075E2                     __ptext63:
 13121                           	opt stack 0
 13122  0075E2                     _UpdateRetransmissionAckTimeoutState:
 13123                           	opt stack 16
 13124                           
 13125                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 13126                           
 13127                           ;incstack = 0
 13128  0075E2  0102               	movlb	2	; () banked
 13129  0075E4  5102               	movf	(_loRa+2)& (0+255),w,b
 13130  0075E6  0BF0               	andlw	-16
 13131  0075E8  0906               	iorlw	6
 13132  0075EA  6F02               	movwf	(_loRa+2)& (0+255),b
 13133                           
 13134                           ; BSR set to: 2
 13135                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 13136  0075EC  51A0               	movf	(_loRa+160)& (0+255),w,b
 13137  0075EE  0100               	movlb	0	; () banked
 13138  0075F0  6F9A               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 13139  0075F2  0102               	movlb	2	; () banked
 13140  0075F4  51A1               	movf	(_loRa+161)& (0+255),w,b
 13141  0075F6  0100               	movlb	0	; () banked
 13142  0075F8  6F9B               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 13143  0075FA  6B9C               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 13144  0075FC  6B9D               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 13145  0075FE  0E0C               	movlw	12
 13146  007600                     u17595:
 13147  007600  90D8               	bcf	status,0,c
 13148  007602  379A               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 13149  007604  379B               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 13150  007606  379C               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 13151  007608  379D               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 13152  00760A  2EE8               	decfsz	wreg,f,c
 13153  00760C  D7F9               	goto	u17595
 13154  00760E  C09A  F060         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 13155  007612  C09B  F061         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 13156  007616  C09C  F062         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 13157  00761A  C09D  F063         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 13158  00761E  0E7D               	movlw	125
 13159  007620  6F64               	movwf	___lldiv@divisor& (0+255),b
 13160  007622  0E00               	movlw	0
 13161  007624  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 13162  007626  0E00               	movlw	0
 13163  007628  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13164  00762A  0E00               	movlw	0
 13165  00762C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13166  00762E  ECB4  F039         	call	___lldiv	;wreg free
 13167  007632  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 13168  007636  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 13169  00763A  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 13170  00763E  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 13171  007642  0102               	movlb	2	; () banked
 13172  007644  51E8               	movf	(_loRa+232)& (0+255),w,b
 13173  007646  EC23  F041         	call	_SwTimerSetTimeout
 13174                           
 13175                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 13176  00764A  0102               	movlb	2	; () banked
 13177  00764C  51E8               	movf	(_loRa+232)& (0+255),w,b
 13178  00764E  EC3B  F037         	call	_SwTimerStart
 13179  007652  0012               	return		;funcret
 13180  007654                     __end_of_UpdateRetransmissionAckTimeoutState:
 13181                           	opt stack 0
 13182                           tosu	equ	0xFFF
 13183                           tosh	equ	0xFFE
 13184                           tosl	equ	0xFFD
 13185                           pclath	equ	0xFFA
 13186                           tblptru	equ	0xFF8
 13187                           tblptrh	equ	0xFF7
 13188                           tblptrl	equ	0xFF6
 13189                           tablat	equ	0xFF5
 13190                           prodh	equ	0xFF4
 13191                           prodl	equ	0xFF3
 13192                           intcon	equ	0xFF2
 13193                           intcon2	equ	0xFF1
 13194                           intcon3	equ	0xFF0
 13195                           postinc0	equ	0xFEE
 13196                           wreg	equ	0xFE8
 13197                           postinc1	equ	0xFE6
 13198                           postdec1	equ	0xFE5
 13199                           plusw1	equ	0xFE3
 13200                           fsr1h	equ	0xFE2
 13201                           fsr1l	equ	0xFE1
 13202                           indf2	equ	0xFDF
 13203                           postinc2	equ	0xFDE
 13204                           postdec2	equ	0xFDD
 13205                           fsr2h	equ	0xFDA
 13206                           fsr2l	equ	0xFD9
 13207                           status	equ	0xFD8
 13208                           
 13209 ;; *************** function _UpdateDLSettings *****************
 13210 ;; Defined at:
 13211 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13212 ;; Parameters:    Size  Location     Type
 13213 ;;  dlRx2Dr         1    wreg     unsigned char 
 13214 ;;  dlRx1DrOffse    1    0[BANK0 ] unsigned char 
 13215 ;; Auto vars:     Size  Location     Type
 13216 ;;  dlRx2Dr         1    1[BANK0 ] unsigned char 
 13217 ;; Return value:  Size  Location     Type
 13218 ;;                  1    wreg      void 
 13219 ;; Registers used:
 13220 ;;		wreg, status,2, status,0
 13221 ;; Tracked objects:
 13222 ;;		On entry : 0/0
 13223 ;;		On exit  : 0/0
 13224 ;;		Unchanged: 0/0
 13225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13226 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13227 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13229 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13230 ;;Total ram usage:        2 bytes
 13231 ;; Hardware stack levels used:    1
 13232 ;; Hardware stack levels required when called:    7
 13233 ;; This function calls:
 13234 ;;		Nothing
 13235 ;; This function is called by:
 13236 ;;		_LORAWAN_RxDone
 13237 ;; This function uses a non-reentrant model
 13238 ;;
 13239                           
 13240                           	psect	text64
 13241  008A4A                     __ptext64:
 13242                           	opt stack 0
 13243  008A4A                     _UpdateDLSettings:
 13244                           	opt stack 19
 13245                           
 13246                           ;incstack = 0
 13247                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 13248  008A4A  0100               	movlb	0	; () banked
 13249  008A4C  6F61               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 13250                           
 13251                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 13252  008A4E  0E08               	movlw	8
 13253  008A50  0100               	movlb	0	; () banked
 13254  008A52  6161               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 13255  008A54  D002               	goto	l1176
 13256                           
 13257                           ; BSR set to: 0
 13258                           ;lorawan_eu.c: 891: {
 13259                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 13260  008A56  C061  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 13261  008A5A                     l1176:
 13262                           
 13263                           ; BSR set to: 0
 13264                           ;lorawan_eu.c: 893: }
 13265                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 13266                           
 13267                           ; BSR set to: 0
 13268  008A5A  0E06               	movlw	6
 13269  008A5C  6160               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 13270  008A5E  0012               	return	
 13271                           
 13272                           ; BSR set to: 0
 13273                           ;lorawan_eu.c: 896: {
 13274                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 13275  008A60  C060  F2EF         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 13276  008A64  0012               	return	
 13277  008A66                     __end_of_UpdateDLSettings:
 13278                           	opt stack 0
 13279                           tosu	equ	0xFFF
 13280                           tosh	equ	0xFFE
 13281                           tosl	equ	0xFFD
 13282                           pclath	equ	0xFFA
 13283                           tblptru	equ	0xFF8
 13284                           tblptrh	equ	0xFF7
 13285                           tblptrl	equ	0xFF6
 13286                           tablat	equ	0xFF5
 13287                           prodh	equ	0xFF4
 13288                           prodl	equ	0xFF3
 13289                           intcon	equ	0xFF2
 13290                           intcon2	equ	0xFF1
 13291                           intcon3	equ	0xFF0
 13292                           postinc0	equ	0xFEE
 13293                           wreg	equ	0xFE8
 13294                           postinc1	equ	0xFE6
 13295                           postdec1	equ	0xFE5
 13296                           plusw1	equ	0xFE3
 13297                           fsr1h	equ	0xFE2
 13298                           fsr1l	equ	0xFE1
 13299                           indf2	equ	0xFDF
 13300                           postinc2	equ	0xFDE
 13301                           postdec2	equ	0xFDD
 13302                           fsr2h	equ	0xFDA
 13303                           fsr2l	equ	0xFD9
 13304                           status	equ	0xFD8
 13305                           
 13306 ;; *************** function _UpdateCfList *****************
 13307 ;; Defined at:
 13308 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13309 ;; Parameters:    Size  Location     Type
 13310 ;;  bufferLength    1    wreg     unsigned char 
 13311 ;;  joinAccept      2   70[BANK0 ] PTR struct .
 13312 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13313 ;; Auto vars:     Size  Location     Type
 13314 ;;  bufferLength    1   72[BANK0 ] unsigned char 
 13315 ;;  frequency       4   73[BANK0 ] unsigned long 
 13316 ;;  i               1   78[BANK0 ] unsigned char 
 13317 ;;  channelIndex    1   77[BANK0 ] unsigned char 
 13318 ;; Return value:  Size  Location     Type
 13319 ;;                  1    wreg      void 
 13320 ;; Registers used:
 13321 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13322 ;; Tracked objects:
 13323 ;;		On entry : 0/0
 13324 ;;		On exit  : 0/0
 13325 ;;		Unchanged: 0/0
 13326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13327 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13328 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13330 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13331 ;;Total ram usage:        9 bytes
 13332 ;; Hardware stack levels used:    1
 13333 ;; Hardware stack levels required when called:    9
 13334 ;; This function calls:
 13335 ;;		_LORAWAN_SetChannelIdStatus
 13336 ;;		_ValidateFrequency
 13337 ;;		___lmul
 13338 ;;		___wmul
 13339 ;;		_memcpy
 13340 ;; This function is called by:
 13341 ;;		_LORAWAN_RxDone
 13342 ;; This function uses a non-reentrant model
 13343 ;;
 13344                           
 13345                           	psect	text65
 13346  00409C                     __ptext65:
 13347                           	opt stack 0
 13348  00409C                     _UpdateCfList:
 13349                           	opt stack 17
 13350                           
 13351                           ; BSR set to: 0
 13352                           ;incstack = 0
 13353                           ;UpdateCfList@bufferLength stored from wreg
 13354  00409C  0100               	movlb	0	; () banked
 13355  00409E  6FA8               	movwf	UpdateCfList@bufferLength& (0+255),b
 13356                           
 13357                           ;lorawan_eu.c: 826: uint8_t i;
 13358                           ;lorawan_eu.c: 827: uint32_t frequency;
 13359                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 13360                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 13361  0040A0  0E21               	movlw	33
 13362  0040A2  0100               	movlb	0	; () banked
 13363  0040A4  19A8               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 13364  0040A6  A4D8               	btfss	status,2,c
 13365  0040A8  0012               	return	
 13366                           
 13367                           ; BSR set to: 0
 13368                           ;lorawan_eu.c: 831: {
 13369                           ;lorawan_eu.c: 833: channelIndex = 3;
 13370  0040AA  0E03               	movlw	3
 13371  0040AC  6FAD               	movwf	UpdateCfList@channelIndex& (0+255),b
 13372                           
 13373                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 13374  0040AE  0E00               	movlw	0
 13375  0040B0  6FAE               	movwf	UpdateCfList@i& (0+255),b
 13376  0040B2                     l15069:
 13377                           
 13378                           ; BSR set to: 0
 13379  0040B2  0E04               	movlw	4
 13380  0040B4  65AE               	cpfsgt	UpdateCfList@i& (0+255),b
 13381  0040B6  D001               	goto	l1160
 13382  0040B8  D0E5               	goto	u17360
 13383  0040BA                     l1160:
 13384                           
 13385                           ; BSR set to: 0
 13386                           ;lorawan_eu.c: 836: {
 13387                           ;lorawan_eu.c: 837: frequency = 0;
 13388                           
 13389                           ; BSR set to: 0
 13390  0040BA  0E00               	movlw	0
 13391  0040BC  6FA9               	movwf	UpdateCfList@frequency& (0+255),b
 13392  0040BE  0E00               	movlw	0
 13393  0040C0  6FAA               	movwf	(UpdateCfList@frequency+1)& (0+255),b
 13394  0040C2  0E00               	movlw	0
 13395  0040C4  6FAB               	movwf	(UpdateCfList@frequency+2)& (0+255),b
 13396  0040C6  0E00               	movlw	0
 13397  0040C8  6FAC               	movwf	(UpdateCfList@frequency+3)& (0+255),b
 13398                           
 13399                           ; BSR set to: 0
 13400                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 13401  0040CA  0EA9               	movlw	low UpdateCfList@frequency
 13402  0040CC  6F60               	movwf	memcpy@d1& (0+255),b
 13403  0040CE  0E00               	movlw	high UpdateCfList@frequency
 13404  0040D0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13405  0040D2  51AE               	movf	UpdateCfList@i& (0+255),w,b
 13406  0040D4  0D03               	mullw	3
 13407  0040D6  0E0D               	movlw	13
 13408  0040D8  26F3               	addwf	prodl,f,c
 13409  0040DA  0E00               	movlw	0
 13410  0040DC  22F4               	addwfc	prodh,f,c
 13411  0040DE  50F3               	movf	prodl,w,c
 13412  0040E0  25A6               	addwf	UpdateCfList@joinAccept& (0+255),w,b
 13413  0040E2  6F62               	movwf	memcpy@s1& (0+255),b
 13414  0040E4  50F4               	movf	prodh,w,c
 13415  0040E6  21A7               	addwfc	(UpdateCfList@joinAccept+1)& (0+255),w,b
 13416  0040E8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13417  0040EA  0E00               	movlw	0
 13418  0040EC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13419  0040EE  0E03               	movlw	3
 13420  0040F0  6F64               	movwf	memcpy@n& (0+255),b
 13421  0040F2  EC5C  F03D         	call	_memcpy	;wreg free
 13422                           
 13423                           ;lorawan_eu.c: 839: frequency *= 100;
 13424  0040F6  C0A9  F09A         	movff	UpdateCfList@frequency,___lmul@multiplier
 13425  0040FA  C0AA  F09B         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 13426  0040FE  C0AB  F09C         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 13427  004102  C0AC  F09D         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 13428  004106  0E64               	movlw	100
 13429  004108  0100               	movlb	0	; () banked
 13430  00410A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 13431  00410C  0E00               	movlw	0
 13432  00410E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13433  004110  0E00               	movlw	0
 13434  004112  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13435  004114  0E00               	movlw	0
 13436  004116  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13437  004118  EC72  F03E         	call	___lmul	;wreg free
 13438  00411C  C09A  F0A9         	movff	?___lmul,UpdateCfList@frequency
 13439  004120  C09B  F0AA         	movff	?___lmul+1,UpdateCfList@frequency+1
 13440  004124  C09C  F0AB         	movff	?___lmul+2,UpdateCfList@frequency+2
 13441  004128  C09D  F0AC         	movff	?___lmul+3,UpdateCfList@frequency+3
 13442                           
 13443                           ;lorawan_eu.c: 840: if (frequency != 0)
 13444  00412C  0100               	movlb	0	; () banked
 13445  00412E  51A9               	movf	UpdateCfList@frequency& (0+255),w,b
 13446  004130  11AA               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 13447  004132  11AB               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 13448  004134  11AC               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 13449  004136  B4D8               	btfsc	status,2,c
 13450  004138  D09B               	goto	l1162
 13451                           
 13452                           ; BSR set to: 0
 13453                           ;lorawan_eu.c: 841: {
 13454                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 13455  00413A  C0A9  F060         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 13456  00413E  C0AA  F061         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 13457  004142  C0AB  F062         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 13458  004146  C0AC  F063         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 13459  00414A  EC66  F03C         	call	_ValidateFrequency	;wreg free
 13460  00414E  0900               	iorlw	0
 13461  004150  A4D8               	btfss	status,2,c
 13462  004152  D095               	goto	l1164
 13463                           
 13464                           ;lorawan_eu.c: 843: {
 13465                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 13466  004154  0100               	movlb	0	; () banked
 13467  004156  51AE               	movf	UpdateCfList@i& (0+255),w,b
 13468  004158  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 13469  00415A  6F60               	movwf	___wmul@multiplier& (0+255),b
 13470  00415C  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 13471  00415E  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 13472  004160  0E00               	movlw	0
 13473  004162  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13474  004164  0E0E               	movlw	14
 13475  004166  6F62               	movwf	___wmul@multiplicand& (0+255),b
 13476  004168  ECD1  F043         	call	___wmul	;wreg free
 13477  00416C  0E00               	movlw	low _Channels
 13478  00416E  0100               	movlb	0	; () banked
 13479  004170  2560               	addwf	?___wmul& (0+255),w,b
 13480  004172  6ED9               	movwf	fsr2l,c
 13481  004174  0E04               	movlw	high _Channels
 13482  004176  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 13483  004178  6EDA               	movwf	fsr2h,c
 13484  00417A  C0A9  FFDE         	movff	UpdateCfList@frequency,postinc2
 13485  00417E  C0AA  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 13486  004182  C0AB  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 13487  004186  C0AC  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 13488                           
 13489                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 13490  00418A  51AE               	movf	UpdateCfList@i& (0+255),w,b
 13491  00418C  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 13492  00418E  6F60               	movwf	___wmul@multiplier& (0+255),b
 13493  004190  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 13494  004192  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 13495  004194  0E00               	movlw	0
 13496  004196  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13497  004198  0E0E               	movlw	14
 13498  00419A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 13499  00419C  ECD1  F043         	call	___wmul	;wreg free
 13500  0041A0  0E05               	movlw	5
 13501  0041A2  0100               	movlb	0	; () banked
 13502  0041A4  2760               	addwf	?___wmul& (0+255),f,b
 13503  0041A6  0E00               	movlw	0
 13504  0041A8  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 13505  0041AA  0E00               	movlw	low _Channels
 13506  0041AC  2560               	addwf	?___wmul& (0+255),w,b
 13507  0041AE  6ED9               	movwf	fsr2l,c
 13508  0041B0  0E04               	movlw	high _Channels
 13509  0041B2  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 13510  0041B4  6EDA               	movwf	fsr2h,c
 13511  0041B6  0104               	movlb	4	; () banked
 13512  0041B8  50DF               	movf	223,w,c
 13513  0041BA  0B0F               	andlw	-241
 13514  0041BC  0950               	iorlw	80
 13515  0041BE  6EDF               	movwf	223,c
 13516                           
 13517                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 13518  0041C0  0100               	movlb	0	; () banked
 13519  0041C2  51AE               	movf	UpdateCfList@i& (0+255),w,b
 13520  0041C4  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 13521  0041C6  6F60               	movwf	___wmul@multiplier& (0+255),b
 13522  0041C8  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 13523  0041CA  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 13524  0041CC  0E00               	movlw	0
 13525  0041CE  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13526  0041D0  0E0E               	movlw	14
 13527  0041D2  6F62               	movwf	___wmul@multiplicand& (0+255),b
 13528  0041D4  ECD1  F043         	call	___wmul	;wreg free
 13529  0041D8  0E05               	movlw	5
 13530  0041DA  0100               	movlb	0	; () banked
 13531  0041DC  2760               	addwf	?___wmul& (0+255),f,b
 13532  0041DE  0E00               	movlw	0
 13533  0041E0  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 13534  0041E2  0E00               	movlw	low _Channels
 13535  0041E4  2560               	addwf	?___wmul& (0+255),w,b
 13536  0041E6  6ED9               	movwf	fsr2l,c
 13537  0041E8  0E04               	movlw	high _Channels
 13538  0041EA  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 13539  0041EC  6EDA               	movwf	fsr2h,c
 13540  0041EE  0104               	movlb	4	; () banked
 13541  0041F0  90DF               	bcf	223,0,c
 13542  0041F2  92DF               	bcf	223,1,c
 13543  0041F4  94DF               	bcf	223,2,c
 13544  0041F6  96DF               	bcf	223,3,c
 13545                           
 13546                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 13547  0041F8  0100               	movlb	0	; () banked
 13548  0041FA  51AE               	movf	UpdateCfList@i& (0+255),w,b
 13549  0041FC  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 13550  0041FE  6F60               	movwf	___wmul@multiplier& (0+255),b
 13551  004200  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 13552  004202  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 13553  004204  0E00               	movlw	0
 13554  004206  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13555  004208  0E0E               	movlw	14
 13556  00420A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 13557  00420C  ECD1  F043         	call	___wmul	;wreg free
 13558  004210  0E06               	movlw	6
 13559  004212  0100               	movlb	0	; () banked
 13560  004214  2760               	addwf	?___wmul& (0+255),f,b
 13561  004216  0E00               	movlw	0
 13562  004218  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 13563  00421A  0E00               	movlw	low _Channels
 13564  00421C  2560               	addwf	?___wmul& (0+255),w,b
 13565  00421E  6ED9               	movwf	fsr2l,c
 13566  004220  0E04               	movlw	high _Channels
 13567  004222  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 13568  004224  6EDA               	movwf	fsr2h,c
 13569  004226  0EE7               	movlw	231
 13570  004228  6EDE               	movwf	postinc2,c
 13571  00422A  0E03               	movlw	3
 13572  00422C  6EDD               	movwf	postdec2,c
 13573                           
 13574                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 13575  00422E  51AE               	movf	UpdateCfList@i& (0+255),w,b
 13576  004230  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 13577  004232  6F60               	movwf	___wmul@multiplier& (0+255),b
 13578  004234  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 13579  004236  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 13580  004238  0E00               	movlw	0
 13581  00423A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13582  00423C  0E0E               	movlw	14
 13583  00423E  6F62               	movwf	___wmul@multiplicand& (0+255),b
 13584  004240  ECD1  F043         	call	___wmul	;wreg free
 13585  004244  0E0D               	movlw	13
 13586  004246  0100               	movlb	0	; () banked
 13587  004248  2760               	addwf	?___wmul& (0+255),f,b
 13588  00424A  0E00               	movlw	0
 13589  00424C  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 13590  00424E  0E00               	movlw	low _Channels
 13591  004250  2560               	addwf	?___wmul& (0+255),w,b
 13592  004252  6ED9               	movwf	fsr2l,c
 13593  004254  0E04               	movlw	high _Channels
 13594  004256  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 13595  004258  6EDA               	movwf	fsr2h,c
 13596  00425A  0EFF               	movlw	255
 13597  00425C  6EDF               	movwf	indf2,c
 13598                           
 13599                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 13600  00425E  0E01               	movlw	1
 13601  004260  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 13602  004262  51AE               	movf	UpdateCfList@i& (0+255),w,b
 13603  004264  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 13604  004266  EC18  F03E         	call	_LORAWAN_SetChannelIdStatus
 13605                           
 13606                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 13607  00426A  0102               	movlb	2	; () banked
 13608  00426C  8703               	bsf	(_loRa+3)& (0+255),3,b
 13609                           
 13610                           ; BSR set to: 2
 13611                           ;lorawan_eu.c: 851: }
 13612                           ;lorawan_eu.c: 852: }
 13613  00426E  D007               	goto	l1164
 13614  004270                     l1162:
 13615                           
 13616                           ;lorawan_eu.c: 853: else
 13617                           ;lorawan_eu.c: 854: {
 13618                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 13619                           
 13620                           ; BSR set to: 2
 13621  004270  0E00               	movlw	0
 13622  004272  0100               	movlb	0	; () banked
 13623  004274  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 13624  004276  51AE               	movf	UpdateCfList@i& (0+255),w,b
 13625  004278  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 13626  00427A  EC18  F03E         	call	_LORAWAN_SetChannelIdStatus
 13627  00427E                     l1164:
 13628  00427E  0100               	movlb	0	; () banked
 13629  004280  2BAE               	incf	UpdateCfList@i& (0+255),f,b
 13630  004282  D717               	goto	l15069
 13631  004284                     u17360:
 13632                           
 13633                           ; BSR set to: 0
 13634                           ;lorawan_eu.c: 856: }
 13635                           ;lorawan_eu.c: 857: }
 13636                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 13637  004284  0102               	movlb	2	; () banked
 13638  004286  8703               	bsf	(_loRa+3)& (0+255),3,b
 13639  004288  0012               	return	
 13640  00428A                     __end_of_UpdateCfList:
 13641                           	opt stack 0
 13642                           tosu	equ	0xFFF
 13643                           tosh	equ	0xFFE
 13644                           tosl	equ	0xFFD
 13645                           pclath	equ	0xFFA
 13646                           tblptru	equ	0xFF8
 13647                           tblptrh	equ	0xFF7
 13648                           tblptrl	equ	0xFF6
 13649                           tablat	equ	0xFF5
 13650                           prodh	equ	0xFF4
 13651                           prodl	equ	0xFF3
 13652                           intcon	equ	0xFF2
 13653                           intcon2	equ	0xFF1
 13654                           intcon3	equ	0xFF0
 13655                           postinc0	equ	0xFEE
 13656                           wreg	equ	0xFE8
 13657                           postinc1	equ	0xFE6
 13658                           postdec1	equ	0xFE5
 13659                           plusw1	equ	0xFE3
 13660                           fsr1h	equ	0xFE2
 13661                           fsr1l	equ	0xFE1
 13662                           indf2	equ	0xFDF
 13663                           postinc2	equ	0xFDE
 13664                           postdec2	equ	0xFDD
 13665                           fsr2h	equ	0xFDA
 13666                           fsr2l	equ	0xFD9
 13667                           status	equ	0xFD8
 13668                           
 13669 ;; *************** function _StartReTxTimer *****************
 13670 ;; Defined at:
 13671 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13672 ;; Parameters:    Size  Location     Type
 13673 ;;		None
 13674 ;; Auto vars:     Size  Location     Type
 13675 ;;  minim           4   62[BANK0 ] unsigned long 
 13676 ;;  i               1   66[BANK0 ] unsigned char 
 13677 ;; Return value:  Size  Location     Type
 13678 ;;                  1    wreg      void 
 13679 ;; Registers used:
 13680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13681 ;; Tracked objects:
 13682 ;;		On entry : 0/0
 13683 ;;		On exit  : 0/0
 13684 ;;		Unchanged: 0/0
 13685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13687 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13688 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13689 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13690 ;;Total ram usage:        9 bytes
 13691 ;; Hardware stack levels used:    1
 13692 ;; Hardware stack levels required when called:   11
 13693 ;; This function calls:
 13694 ;;		_SwTimerSetTimeout
 13695 ;;		_SwTimerStart
 13696 ;;		___lldiv
 13697 ;; This function is called by:
 13698 ;;		_LORAWAN_RxDone
 13699 ;; This function uses a non-reentrant model
 13700 ;;
 13701                           
 13702                           	psect	text66
 13703  004B22                     __ptext66:
 13704                           	opt stack 0
 13705  004B22                     _StartReTxTimer:
 13706                           	opt stack 15
 13707                           
 13708                           ;lorawan_eu.c: 904: uint8_t i;
 13709                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 13710                           
 13711                           ;incstack = 0
 13712  004B22  0100               	movlb	0	; () banked
 13713  004B24  699E               	setf	StartReTxTimer@minim& (0+255),b
 13714  004B26  699F               	setf	(StartReTxTimer@minim+1)& (0+255),b
 13715  004B28  69A0               	setf	(StartReTxTimer@minim+2)& (0+255),b
 13716  004B2A  69A1               	setf	(StartReTxTimer@minim+3)& (0+255),b
 13717                           
 13718                           ; BSR set to: 0
 13719                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 13720  004B2C  0E00               	movlw	0
 13721  004B2E  6FA2               	movwf	StartReTxTimer@i& (0+255),b
 13722  004B30  D07C               	goto	l1181
 13723  004B32                     
 13724                           ;lorawan_eu.c: 908: {
 13725                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 13726                           
 13727                           ; BSR set to: 0
 13728  004B32  0100               	movlb	0	; () banked
 13729  004B34  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 13730  004B36  0D0E               	mullw	14
 13731  004B38  0E04               	movlw	4
 13732  004B3A  26F3               	addwf	prodl,f,c
 13733  004B3C  0E00               	movlw	0
 13734  004B3E  22F4               	addwfc	prodh,f,c
 13735  004B40  0E00               	movlw	low _Channels
 13736  004B42  24F3               	addwf	prodl,w,c
 13737  004B44  6ED9               	movwf	fsr2l,c
 13738  004B46  0E04               	movlw	high _Channels
 13739  004B48  20F4               	addwfc	prodh,w,c
 13740  004B4A  6EDA               	movwf	fsr2h,c
 13741  004B4C  04DE               	decf	postinc2,w,c
 13742  004B4E  A4D8               	btfss	status,2,c
 13743  004B50  D06A               	goto	l1183
 13744                           
 13745                           ; BSR set to: 0
 13746  004B52  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 13747  004B54  0D0E               	mullw	14
 13748  004B56  0E08               	movlw	8
 13749  004B58  26F3               	addwf	prodl,f,c
 13750  004B5A  0E00               	movlw	0
 13751  004B5C  22F4               	addwfc	prodh,f,c
 13752  004B5E  0E00               	movlw	low _Channels
 13753  004B60  24F3               	addwf	prodl,w,c
 13754  004B62  6ED9               	movwf	fsr2l,c
 13755  004B64  0E04               	movlw	high _Channels
 13756  004B66  20F4               	addwfc	prodh,w,c
 13757  004B68  6EDA               	movwf	fsr2h,c
 13758  004B6A  50DE               	movf	postinc2,w,c
 13759  004B6C  10DE               	iorwf	postinc2,w,c
 13760  004B6E  10DE               	iorwf	postinc2,w,c
 13761  004B70  10DE               	iorwf	postinc2,w,c
 13762  004B72  B4D8               	btfsc	status,2,c
 13763  004B74  D058               	goto	l1183
 13764                           
 13765                           ; BSR set to: 0
 13766  004B76  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 13767  004B78  0D0E               	mullw	14
 13768  004B7A  0E08               	movlw	8
 13769  004B7C  26F3               	addwf	prodl,f,c
 13770  004B7E  0E00               	movlw	0
 13771  004B80  22F4               	addwfc	prodh,f,c
 13772  004B82  0E00               	movlw	low _Channels
 13773  004B84  24F3               	addwf	prodl,w,c
 13774  004B86  6ED9               	movwf	fsr2l,c
 13775  004B88  0E04               	movlw	high _Channels
 13776  004B8A  20F4               	addwfc	prodh,w,c
 13777  004B8C  6EDA               	movwf	fsr2h,c
 13778  004B8E  50DE               	movf	postinc2,w,c
 13779  004B90  5D9E               	subwf	StartReTxTimer@minim& (0+255),w,b
 13780  004B92  50DE               	movf	postinc2,w,c
 13781  004B94  599F               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 13782  004B96  50DE               	movf	postinc2,w,c
 13783  004B98  59A0               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 13784  004B9A  50DE               	movf	postinc2,w,c
 13785  004B9C  59A1               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 13786  004B9E  A0D8               	btfss	status,0,c
 13787  004BA0  D042               	goto	l1183
 13788                           
 13789                           ; BSR set to: 0
 13790  004BA2  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 13791  004BA4  0D0E               	mullw	14
 13792  004BA6  0E05               	movlw	5
 13793  004BA8  26F3               	addwf	prodl,f,c
 13794  004BAA  0E00               	movlw	0
 13795  004BAC  22F4               	addwfc	prodh,f,c
 13796  004BAE  0E00               	movlw	low _Channels
 13797  004BB0  24F3               	addwf	prodl,w,c
 13798  004BB2  6ED9               	movwf	fsr2l,c
 13799  004BB4  0E04               	movlw	high _Channels
 13800  004BB6  20F4               	addwfc	prodh,w,c
 13801  004BB8  6EDA               	movwf	fsr2h,c
 13802  004BBA  0104               	movlb	4	; () banked
 13803  004BBC  50DF               	movf	223,w,c
 13804  004BBE  0B0F               	andlw	15
 13805  004BC0  0100               	movlb	0	; () banked
 13806  004BC2  6F9A               	movwf	??_StartReTxTimer& (0+255),b
 13807  004BC4  519A               	movf	??_StartReTxTimer& (0+255),w,b
 13808  004BC6  0102               	movlb	2	; () banked
 13809  004BC8  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 13810  004BCA  A0D8               	btfss	status,0,c
 13811  004BCC  D02C               	goto	l1183
 13812                           
 13813                           ; BSR set to: 2
 13814  004BCE  0100               	movlb	0	; () banked
 13815  004BD0  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 13816  004BD2  0D0E               	mullw	14
 13817  004BD4  0E05               	movlw	5
 13818  004BD6  26F3               	addwf	prodl,f,c
 13819  004BD8  0E00               	movlw	0
 13820  004BDA  22F4               	addwfc	prodh,f,c
 13821  004BDC  0E00               	movlw	low _Channels
 13822  004BDE  24F3               	addwf	prodl,w,c
 13823  004BE0  6ED9               	movwf	fsr2l,c
 13824  004BE2  0E04               	movlw	high _Channels
 13825  004BE4  20F4               	addwfc	prodh,w,c
 13826  004BE6  6EDA               	movwf	fsr2h,c
 13827  004BE8  0104               	movlb	4	; () banked
 13828  004BEA  38DF               	swapf	223,w,c
 13829  004BEC  0B0F               	andlw	15
 13830  004BEE  0100               	movlb	0	; () banked
 13831  004BF0  6F9A               	movwf	??_StartReTxTimer& (0+255),b
 13832  004BF2  0102               	movlb	2	; () banked
 13833  004BF4  51DF               	movf	(_loRa+223)& (0+255),w,b
 13834  004BF6  0100               	movlb	0	; () banked
 13835  004BF8  5D9A               	subwf	??_StartReTxTimer& (0+255),w,b
 13836  004BFA  A0D8               	btfss	status,0,c
 13837  004BFC  D014               	goto	l1183
 13838                           
 13839                           ; BSR set to: 0
 13840                           ;lorawan_eu.c: 910: {
 13841                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 13842  004BFE  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 13843  004C00  0D0E               	mullw	14
 13844  004C02  0E08               	movlw	8
 13845  004C04  26F3               	addwf	prodl,f,c
 13846  004C06  0E00               	movlw	0
 13847  004C08  22F4               	addwfc	prodh,f,c
 13848  004C0A  0E00               	movlw	low _Channels
 13849  004C0C  24F3               	addwf	prodl,w,c
 13850  004C0E  6ED9               	movwf	fsr2l,c
 13851  004C10  0E04               	movlw	high _Channels
 13852  004C12  20F4               	addwfc	prodh,w,c
 13853  004C14  6EDA               	movwf	fsr2h,c
 13854  004C16  CFDE F09E          	movff	postinc2,StartReTxTimer@minim
 13855  004C1A  CFDE F09F          	movff	postinc2,StartReTxTimer@minim+1
 13856  004C1E  CFDE F0A0          	movff	postinc2,StartReTxTimer@minim+2
 13857  004C22  CFDE F0A1          	movff	postinc2,StartReTxTimer@minim+3
 13858  004C26                     l1183:
 13859                           
 13860                           ; BSR set to: 0
 13861  004C26  0100               	movlb	0	; () banked
 13862  004C28  2BA2               	incf	StartReTxTimer@i& (0+255),f,b
 13863  004C2A                     l1181:
 13864                           
 13865                           ; BSR set to: 0
 13866                           
 13867                           ; BSR set to: 0
 13868  004C2A  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 13869  004C2C  0102               	movlb	2	; () banked
 13870  004C2E  5DED               	subwf	(_loRa+237)& (0+255),w,b
 13871  004C30  B0D8               	btfsc	status,0,c
 13872  004C32  D77F               	goto	l1182
 13873                           
 13874                           ; BSR set to: 2
 13875                           ;lorawan_eu.c: 912: }
 13876                           ;lorawan_eu.c: 913: }
 13877                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 13878                           
 13879                           ; BSR set to: 2
 13880  004C34  5102               	movf	(_loRa+2)& (0+255),w,b
 13881  004C36  0BF0               	andlw	-16
 13882  004C38  0906               	iorlw	6
 13883  004C3A  6F02               	movwf	(_loRa+2)& (0+255),b
 13884                           
 13885                           ; BSR set to: 2
 13886                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 13887  004C3C  C09E  F09A         	movff	StartReTxTimer@minim,??_StartReTxTimer
 13888  004C40  C09F  F09B         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 13889  004C44  C0A0  F09C         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 13890  004C48  C0A1  F09D         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 13891  004C4C  0E0C               	movlw	12
 13892  004C4E                     u17455:
 13893  004C4E  90D8               	bcf	status,0,c
 13894  004C50  0100               	movlb	0	; () banked
 13895  004C52  379A               	rlcf	??_StartReTxTimer& (0+255),f,b
 13896  004C54  379B               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 13897  004C56  379C               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 13898  004C58  379D               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 13899  004C5A  2EE8               	decfsz	wreg,f,c
 13900  004C5C  D7F8               	goto	u17455
 13901  004C5E  C09A  F060         	movff	??_StartReTxTimer,___lldiv@dividend
 13902  004C62  C09B  F061         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 13903  004C66  C09C  F062         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 13904  004C6A  C09D  F063         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 13905  004C6E  0E7D               	movlw	125
 13906  004C70  6F64               	movwf	___lldiv@divisor& (0+255),b
 13907  004C72  0E00               	movlw	0
 13908  004C74  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 13909  004C76  0E00               	movlw	0
 13910  004C78  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13911  004C7A  0E00               	movlw	0
 13912  004C7C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13913  004C7E  ECB4  F039         	call	___lldiv	;wreg free
 13914  004C82  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 13915  004C86  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 13916  004C8A  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 13917  004C8E  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 13918  004C92  0102               	movlb	2	; () banked
 13919  004C94  51E6               	movf	(_loRa+230)& (0+255),w,b
 13920  004C96  EC23  F041         	call	_SwTimerSetTimeout
 13921                           
 13922                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 13923  004C9A  0102               	movlb	2	; () banked
 13924  004C9C  51E6               	movf	(_loRa+230)& (0+255),w,b
 13925  004C9E  EC3B  F037         	call	_SwTimerStart
 13926  004CA2  0012               	return		;funcret
 13927  004CA4                     __end_of_StartReTxTimer:
 13928                           	opt stack 0
 13929                           tosu	equ	0xFFF
 13930                           tosh	equ	0xFFE
 13931                           tosl	equ	0xFFD
 13932                           pclath	equ	0xFFA
 13933                           tblptru	equ	0xFF8
 13934                           tblptrh	equ	0xFF7
 13935                           tblptrl	equ	0xFF6
 13936                           tablat	equ	0xFF5
 13937                           prodh	equ	0xFF4
 13938                           prodl	equ	0xFF3
 13939                           intcon	equ	0xFF2
 13940                           intcon2	equ	0xFF1
 13941                           intcon3	equ	0xFF0
 13942                           postinc0	equ	0xFEE
 13943                           wreg	equ	0xFE8
 13944                           postinc1	equ	0xFE6
 13945                           postdec1	equ	0xFE5
 13946                           plusw1	equ	0xFE3
 13947                           fsr1h	equ	0xFE2
 13948                           fsr1l	equ	0xFE1
 13949                           indf2	equ	0xFDF
 13950                           postinc2	equ	0xFDE
 13951                           postdec2	equ	0xFDD
 13952                           fsr2h	equ	0xFDA
 13953                           fsr2l	equ	0xFD9
 13954                           status	equ	0xFD8
 13955                           
 13956 ;; *************** function _SetReceptionNotOkState *****************
 13957 ;; Defined at:
 13958 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13959 ;; Parameters:    Size  Location     Type
 13960 ;;		None
 13961 ;; Auto vars:     Size  Location     Type
 13962 ;;		None
 13963 ;; Return value:  Size  Location     Type
 13964 ;;                  1    wreg      void 
 13965 ;; Registers used:
 13966 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13967 ;; Tracked objects:
 13968 ;;		On entry : 0/0
 13969 ;;		On exit  : 0/0
 13970 ;;		Unchanged: 0/0
 13971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13976 ;;Total ram usage:        0 bytes
 13977 ;; Hardware stack levels used:    1
 13978 ;; Hardware stack levels required when called:   14
 13979 ;; This function calls:
 13980 ;;		_LORAWAN_EnterContinuousReceive
 13981 ;;		_RxData
 13982 ;; This function is called by:
 13983 ;;		_LORAWAN_RxDone
 13984 ;; This function uses a non-reentrant model
 13985 ;;
 13986                           
 13987                           	psect	text67
 13988  00746E                     __ptext67:
 13989                           	opt stack 0
 13990  00746E                     _SetReceptionNotOkState:
 13991                           	opt stack 12
 13992                           
 13993                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 13994                           
 13995                           ;incstack = 0
 13996  00746E  0102               	movlb	2	; () banked
 13997  007470  5102               	movf	(_loRa+2)& (0+255),w,b
 13998  007472  0B0F               	andlw	15
 13999  007474  0A05               	xorlw	5
 14000  007476  B4D8               	btfsc	status,2,c
 14001  007478  D008               	goto	u17740
 14002                           
 14003                           ; BSR set to: 2
 14004  00747A  5102               	movf	(_loRa+2)& (0+255),w,b
 14005  00747C  0B0F               	andlw	15
 14006  00747E  0A03               	xorlw	3
 14007  007480  A4D8               	btfss	status,2,c
 14008  007482  D029               	goto	l2089
 14009                           
 14010                           ; BSR set to: 2
 14011  007484  51F1               	movf	(_loRa+241)& (0+255),w,b
 14012  007486  B4D8               	btfsc	status,2,c
 14013  007488  D026               	goto	l2089
 14014  00748A                     u17740:
 14015                           
 14016                           ; BSR set to: 2
 14017                           ;lorawan.c: 2000: {
 14018                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 14019  00748A  9100               	bcf	_loRa& (0+255),0,b
 14020                           
 14021                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 14022  00748C  9102               	bcf	(_loRa+2)& (0+255),0,b
 14023  00748E  9302               	bcf	(_loRa+2)& (0+255),1,b
 14024  007490  9502               	bcf	(_loRa+2)& (0+255),2,b
 14025  007492  9702               	bcf	(_loRa+2)& (0+255),3,b
 14026                           
 14027                           ; BSR set to: 2
 14028                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 14029  007494  5112               	movf	(_loRa+18)& (0+255),w,b
 14030  007496  A4D8               	btfss	status,2,c
 14031  007498  D01C               	goto	u17779
 14032                           
 14033                           ; BSR set to: 2
 14034  00749A  0101               	movlb	1	; () banked
 14035  00749C  5110               	movf	_rxPayload& (0+255),w,b
 14036  00749E  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
 14037  0074A0  B4D8               	btfsc	status,2,c
 14038  0074A2  D017               	goto	u17779
 14039                           
 14040                           ; BSR set to: 1
 14041                           ;lorawan.c: 2005: {
 14042                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 14043  0074A4  0102               	movlb	2	; () banked
 14044  0074A6  9B00               	bcf	_loRa& (0+255),5,b
 14045                           
 14046                           ; BSR set to: 2
 14047                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 14048  0074A8  0E00               	movlw	0
 14049  0074AA  0100               	movlb	0	; () banked
 14050  0074AC  6F60               	movwf	RxData@pData& (0+255),b
 14051  0074AE  0E00               	movlw	0
 14052  0074B0  6F61               	movwf	(RxData@pData+1)& (0+255),b
 14053  0074B2  0E00               	movlw	0
 14054  0074B4  6F62               	movwf	RxData@dataLength& (0+255),b
 14055  0074B6  0E00               	movlw	0
 14056  0074B8  6F63               	movwf	RxData@status& (0+255),b
 14057  0074BA  D801               	call	u17778
 14058  0074BC  D00A               	goto	u17779
 14059  0074BE                     u17778:
 14060  0074BE  0005               	push	
 14061  0074C0  6EFA               	movwf	pclath,c
 14062  0074C2  0101               	movlb	1	; () banked
 14063  0074C4  5110               	movf	_rxPayload& (0+255),w,b
 14064  0074C6  6EFD               	movwf	tosl,c
 14065  0074C8  5111               	movf	(_rxPayload+1)& (0+255),w,b
 14066  0074CA  6EFE               	movwf	tosh,c
 14067  0074CC  6AFF               	clrf	tosu,c
 14068  0074CE  50FA               	movf	pclath,w,c
 14069  0074D0  0012               	return		;indir
 14070  0074D2                     u17779:
 14071                           
 14072                           ;lorawan.c: 2008: }
 14073                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 14074  0074D2  0102               	movlb	2	; () banked
 14075  0074D4  9303               	bcf	(_loRa+3)& (0+255),1,b
 14076  0074D6                     l2089:
 14077                           
 14078                           ; BSR set to: 2
 14079                           ;lorawan.c: 2010: }
 14080                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 14081                           
 14082                           ; BSR set to: 2
 14083  0074D6  0E02               	movlw	2
 14084  0074D8  1912               	xorwf	(_loRa+18)& (0+255),w,b
 14085  0074DA  A4D8               	btfss	status,2,c
 14086  0074DC  0012               	return	
 14087                           
 14088                           ; BSR set to: 2
 14089                           ;lorawan.c: 2013: {
 14090                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 14091  0074DE  5102               	movf	(_loRa+2)& (0+255),w,b
 14092  0074E0  0BF0               	andlw	-16
 14093  0074E2  0909               	iorlw	9
 14094  0074E4  6F02               	movwf	(_loRa+2)& (0+255),b
 14095                           
 14096                           ; BSR set to: 2
 14097                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 14098  0074E6  EC76  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 14099  0074EA  0012               	return	
 14100  0074EC                     __end_of_SetReceptionNotOkState:
 14101                           	opt stack 0
 14102                           tosu	equ	0xFFF
 14103                           tosh	equ	0xFFE
 14104                           tosl	equ	0xFFD
 14105                           pclath	equ	0xFFA
 14106                           tblptru	equ	0xFF8
 14107                           tblptrh	equ	0xFF7
 14108                           tblptrl	equ	0xFF6
 14109                           tablat	equ	0xFF5
 14110                           prodh	equ	0xFF4
 14111                           prodl	equ	0xFF3
 14112                           intcon	equ	0xFF2
 14113                           intcon2	equ	0xFF1
 14114                           intcon3	equ	0xFF0
 14115                           postinc0	equ	0xFEE
 14116                           wreg	equ	0xFE8
 14117                           postinc1	equ	0xFE6
 14118                           postdec1	equ	0xFE5
 14119                           plusw1	equ	0xFE3
 14120                           fsr1h	equ	0xFE2
 14121                           fsr1l	equ	0xFE1
 14122                           indf2	equ	0xFDF
 14123                           postinc2	equ	0xFDE
 14124                           postdec2	equ	0xFDD
 14125                           fsr2h	equ	0xFDA
 14126                           fsr2l	equ	0xFD9
 14127                           status	equ	0xFD8
 14128                           
 14129 ;; *************** function _SetJoinFailState *****************
 14130 ;; Defined at:
 14131 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14132 ;; Parameters:    Size  Location     Type
 14133 ;;		None
 14134 ;; Auto vars:     Size  Location     Type
 14135 ;;		None
 14136 ;; Return value:  Size  Location     Type
 14137 ;;                  1    wreg      void 
 14138 ;; Registers used:
 14139 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 14140 ;; Tracked objects:
 14141 ;;		On entry : 0/0
 14142 ;;		On exit  : 0/0
 14143 ;;		Unchanged: 0/0
 14144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14149 ;;Total ram usage:        0 bytes
 14150 ;; Hardware stack levels used:    1
 14151 ;; Hardware stack levels required when called:    8
 14152 ;; This function calls:
 14153 ;;		_RxJoinResponse
 14154 ;; This function is called by:
 14155 ;;		_LORAWAN_RxTimeout
 14156 ;;		_LORAWAN_RxDone
 14157 ;; This function uses a non-reentrant model
 14158 ;;
 14159                           
 14160                           	psect	text68
 14161  008506                     __ptext68:
 14162                           	opt stack 0
 14163  008506                     _SetJoinFailState:
 14164                           	opt stack 18
 14165                           
 14166                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 14167                           
 14168                           ;incstack = 0
 14169  008506  0102               	movlb	2	; () banked
 14170  008508  9902               	bcf	(_loRa+2)& (0+255),4,b
 14171                           
 14172                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 14173  00850A  9500               	bcf	_loRa& (0+255),2,b
 14174                           
 14175                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 14176  00850C  9102               	bcf	(_loRa+2)& (0+255),0,b
 14177  00850E  9302               	bcf	(_loRa+2)& (0+255),1,b
 14178  008510  9502               	bcf	(_loRa+2)& (0+255),2,b
 14179  008512  9702               	bcf	(_loRa+2)& (0+255),3,b
 14180                           
 14181                           ; BSR set to: 2
 14182                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 14183  008514  0101               	movlb	1	; () banked
 14184  008516  5112               	movf	(_rxPayload+2)& (0+255),w,b
 14185  008518  1113               	iorwf	(_rxPayload+3)& (0+255),w,b
 14186  00851A  B4D8               	btfsc	status,2,c
 14187  00851C  0012               	return	
 14188                           
 14189                           ; BSR set to: 1
 14190                           ;lorawan.c: 1110: {
 14191                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 14192  00851E  D801               	call	u17318
 14193  008520  0012               	return	
 14194  008522                     u17318:
 14195  008522  0005               	push	
 14196  008524  6EFA               	movwf	pclath,c
 14197  008526  5112               	movf	(_rxPayload+2)& (0+255),w,b
 14198  008528  6EFD               	movwf	tosl,c
 14199  00852A  5113               	movf	(_rxPayload+3)& (0+255),w,b
 14200  00852C  6EFE               	movwf	tosh,c
 14201  00852E  6AFF               	clrf	tosu,c
 14202  008530  50FA               	movf	pclath,w,c
 14203  008532  0E00               	movlw	0
 14204  008534  0012               	return		;indir
 14205  008536                     __end_of_SetJoinFailState:
 14206                           	opt stack 0
 14207                           tosu	equ	0xFFF
 14208                           tosh	equ	0xFFE
 14209                           tosl	equ	0xFFD
 14210                           pclath	equ	0xFFA
 14211                           tblptru	equ	0xFF8
 14212                           tblptrh	equ	0xFF7
 14213                           tblptrl	equ	0xFF6
 14214                           tablat	equ	0xFF5
 14215                           prodh	equ	0xFF4
 14216                           prodl	equ	0xFF3
 14217                           intcon	equ	0xFF2
 14218                           intcon2	equ	0xFF1
 14219                           intcon3	equ	0xFF0
 14220                           postinc0	equ	0xFEE
 14221                           wreg	equ	0xFE8
 14222                           postinc1	equ	0xFE6
 14223                           postdec1	equ	0xFE5
 14224                           plusw1	equ	0xFE3
 14225                           fsr1h	equ	0xFE2
 14226                           fsr1l	equ	0xFE1
 14227                           indf2	equ	0xFDF
 14228                           postinc2	equ	0xFDE
 14229                           postdec2	equ	0xFDD
 14230                           fsr2h	equ	0xFDA
 14231                           fsr2l	equ	0xFD9
 14232                           status	equ	0xFD8
 14233                           
 14234 ;; *************** function _RxJoinResponse *****************
 14235 ;; Defined at:
 14236 ;;		line 71 in file "main.c"
 14237 ;; Parameters:    Size  Location     Type
 14238 ;;  status          1    wreg     unsigned char 
 14239 ;; Auto vars:     Size  Location     Type
 14240 ;;  status          1    0[COMRAM] unsigned char 
 14241 ;; Return value:  Size  Location     Type
 14242 ;;                  1    wreg      void 
 14243 ;; Registers used:
 14244 ;;		wreg
 14245 ;; Tracked objects:
 14246 ;;		On entry : 0/0
 14247 ;;		On exit  : 0/0
 14248 ;;		Unchanged: 0/0
 14249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14254 ;;Total ram usage:        0 bytes
 14255 ;; Hardware stack levels used:    1
 14256 ;; Hardware stack levels required when called:    7
 14257 ;; This function calls:
 14258 ;;		Nothing
 14259 ;; This function is called by:
 14260 ;;		_main
 14261 ;;		_SetJoinFailState
 14262 ;;		_UpdateJoinSuccessState
 14263 ;; This function uses a non-reentrant model
 14264 ;;
 14265                           
 14266                           	psect	text69
 14267  008DA6                     __ptext69:
 14268                           	opt stack 0
 14269  008DA6                     _RxJoinResponse:
 14270                           	opt stack 20
 14271                           
 14272                           ;incstack = 0
 14273  008DA6  0012               	return		;funcret
 14274  008DA8                     __end_of_RxJoinResponse:
 14275                           	opt stack 0
 14276                           tosu	equ	0xFFF
 14277                           tosh	equ	0xFFE
 14278                           tosl	equ	0xFFD
 14279                           pclath	equ	0xFFA
 14280                           tblptru	equ	0xFF8
 14281                           tblptrh	equ	0xFF7
 14282                           tblptrl	equ	0xFF6
 14283                           tablat	equ	0xFF5
 14284                           prodh	equ	0xFF4
 14285                           prodl	equ	0xFF3
 14286                           intcon	equ	0xFF2
 14287                           intcon2	equ	0xFF1
 14288                           intcon3	equ	0xFF0
 14289                           postinc0	equ	0xFEE
 14290                           wreg	equ	0xFE8
 14291                           postinc1	equ	0xFE6
 14292                           postdec1	equ	0xFE5
 14293                           plusw1	equ	0xFE3
 14294                           fsr1h	equ	0xFE2
 14295                           fsr1l	equ	0xFE1
 14296                           indf2	equ	0xFDF
 14297                           postinc2	equ	0xFDE
 14298                           postdec2	equ	0xFDD
 14299                           fsr2h	equ	0xFDA
 14300                           fsr2l	equ	0xFD9
 14301                           status	equ	0xFD8
 14302                           
 14303 ;; *************** function _MacExecuteCommands *****************
 14304 ;; Defined at:
 14305 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14306 ;; Parameters:    Size  Location     Type
 14307 ;;  buffer          2   80[BANK0 ] PTR unsigned char 
 14308 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14309 ;;  fOptsLen        1   82[BANK0 ] unsigned char 
 14310 ;; Auto vars:     Size  Location     Type
 14311 ;;  ptr             2   86[BANK0 ] PTR unsigned char 
 14312 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14313 ;;  done            1   85[BANK0 ] unsigned char 
 14314 ;; Return value:  Size  Location     Type
 14315 ;;                  2   80[BANK0 ] PTR unsigned char 
 14316 ;; Registers used:
 14317 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14318 ;; Tracked objects:
 14319 ;;		On entry : 0/0
 14320 ;;		On exit  : 0/0
 14321 ;;		Unchanged: 0/0
 14322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14323 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14324 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14325 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14326 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14327 ;;Total ram usage:        8 bytes
 14328 ;; Hardware stack levels used:    1
 14329 ;; Hardware stack levels required when called:   11
 14330 ;; This function calls:
 14331 ;;		_ExecuteDevStatus
 14332 ;;		_ExecuteDutyCycle
 14333 ;;		_ExecuteLinkAdr
 14334 ;;		_ExecuteLinkCheck
 14335 ;;		_ExecuteNewChannel
 14336 ;;		_ExecuteRxParamSetupReq
 14337 ;;		_ExecuteRxTimingSetup
 14338 ;; This function is called by:
 14339 ;;		_LORAWAN_RxDone
 14340 ;; This function uses a non-reentrant model
 14341 ;;
 14342                           
 14343                           	psect	text70
 14344  002F4E                     __ptext70:
 14345                           	opt stack 0
 14346  002F4E                     _MacExecuteCommands:
 14347                           	opt stack 15
 14348                           
 14349                           ;lorawan.c: 1577: bool done = 0;
 14350                           
 14351                           ;incstack = 0
 14352  002F4E  0E00               	movlw	0
 14353  002F50  0100               	movlb	0	; () banked
 14354  002F52  6FB5               	movwf	MacExecuteCommands@done& (0+255),b
 14355                           
 14356                           ; BSR set to: 0
 14357                           ;lorawan.c: 1578: uint8_t *ptr;
 14358                           ;lorawan.c: 1579: ptr = buffer;
 14359  002F54  C0B0  F0B6         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 14360  002F58  C0B1  F0B7         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 14361                           
 14362                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 14363  002F5C  D15A               	goto	l2001
 14364  002F5E                     
 14365                           ; BSR set to: 0
 14366                           ;lorawan.c: 1581: {
 14367                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 14368                           
 14369                           ; BSR set to: 0
 14370  002F5E  0102               	movlb	2	; () banked
 14371  002F60  51A7               	movf	(_loRa+167)& (0+255),w,b
 14372  002F62  0D02               	mullw	2
 14373  002F64  0E00               	movlw	low _loRa
 14374  002F66  0100               	movlb	0	; () banked
 14375  002F68  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 14376  002F6A  0E02               	movlw	high _loRa
 14377  002F6C  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 14378  002F6E  0EA8               	movlw	168
 14379  002F70  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14380  002F72  0E00               	movlw	0
 14381  002F74  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14382  002F76  50F3               	movf	prodl,w,c
 14383  002F78  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14384  002F7A  50F4               	movf	prodh,w,c
 14385  002F7C  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14386  002F7E  0E01               	movlw	1
 14387  002F80  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 14388  002F82  6ED9               	movwf	fsr2l,c
 14389  002F84  0E00               	movlw	0
 14390  002F86  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 14391  002F88  6EDA               	movwf	fsr2h,c
 14392  002F8A  0102               	movlb	2	; () banked
 14393  002F8C  90DF               	bcf	indf2,0,c
 14394                           
 14395                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 14396  002F8E  51A7               	movf	(_loRa+167)& (0+255),w,b
 14397  002F90  0D02               	mullw	2
 14398  002F92  0E00               	movlw	low _loRa
 14399  002F94  0100               	movlb	0	; () banked
 14400  002F96  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 14401  002F98  0E02               	movlw	high _loRa
 14402  002F9A  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 14403  002F9C  0EA8               	movlw	168
 14404  002F9E  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14405  002FA0  0E00               	movlw	0
 14406  002FA2  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14407  002FA4  50F3               	movf	prodl,w,c
 14408  002FA6  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14409  002FA8  50F4               	movf	prodh,w,c
 14410  002FAA  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14411  002FAC  0E01               	movlw	1
 14412  002FAE  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 14413  002FB0  6ED9               	movwf	fsr2l,c
 14414  002FB2  0E00               	movlw	0
 14415  002FB4  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 14416  002FB6  6EDA               	movwf	fsr2h,c
 14417  002FB8  0102               	movlb	2	; () banked
 14418  002FBA  92DF               	bcf	indf2,1,c
 14419                           
 14420                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 14421  002FBC  51A7               	movf	(_loRa+167)& (0+255),w,b
 14422  002FBE  0D02               	mullw	2
 14423  002FC0  0E00               	movlw	low _loRa
 14424  002FC2  0100               	movlb	0	; () banked
 14425  002FC4  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 14426  002FC6  0E02               	movlw	high _loRa
 14427  002FC8  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 14428  002FCA  0EA8               	movlw	168
 14429  002FCC  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14430  002FCE  0E00               	movlw	0
 14431  002FD0  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14432  002FD2  50F3               	movf	prodl,w,c
 14433  002FD4  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14434  002FD6  50F4               	movf	prodh,w,c
 14435  002FD8  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14436  002FDA  0E01               	movlw	1
 14437  002FDC  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 14438  002FDE  6ED9               	movwf	fsr2l,c
 14439  002FE0  0E00               	movlw	0
 14440  002FE2  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 14441  002FE4  6EDA               	movwf	fsr2h,c
 14442  002FE6  0102               	movlb	2	; () banked
 14443  002FE8  94DF               	bcf	indf2,2,c
 14444                           
 14445                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 14446  002FEA  51A7               	movf	(_loRa+167)& (0+255),w,b
 14447  002FEC  0D02               	mullw	2
 14448  002FEE  0E00               	movlw	low _loRa
 14449  002FF0  0100               	movlb	0	; () banked
 14450  002FF2  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 14451  002FF4  0E02               	movlw	high _loRa
 14452  002FF6  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 14453  002FF8  0EA8               	movlw	168
 14454  002FFA  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14455  002FFC  0E00               	movlw	0
 14456  002FFE  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14457  003000  50F3               	movf	prodl,w,c
 14458  003002  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14459  003004  50F4               	movf	prodh,w,c
 14460  003006  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14461  003008  0E01               	movlw	1
 14462  00300A  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 14463  00300C  6ED9               	movwf	fsr2l,c
 14464  00300E  0E00               	movlw	0
 14465  003010  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 14466  003012  6EDA               	movwf	fsr2h,c
 14467  003014  0102               	movlb	2	; () banked
 14468  003016  96DF               	bcf	indf2,3,c
 14469                           
 14470                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 14471  003018  51A7               	movf	(_loRa+167)& (0+255),w,b
 14472  00301A  0D02               	mullw	2
 14473  00301C  0E00               	movlw	low _loRa
 14474  00301E  0100               	movlb	0	; () banked
 14475  003020  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 14476  003022  0E02               	movlw	high _loRa
 14477  003024  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 14478  003026  0EA8               	movlw	168
 14479  003028  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14480  00302A  0E00               	movlw	0
 14481  00302C  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14482  00302E  50F3               	movf	prodl,w,c
 14483  003030  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14484  003032  50F4               	movf	prodh,w,c
 14485  003034  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14486  003036  0E01               	movlw	1
 14487  003038  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 14488  00303A  6ED9               	movwf	fsr2l,c
 14489  00303C  0E00               	movlw	0
 14490  00303E  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 14491  003040  6EDA               	movwf	fsr2h,c
 14492  003042  0102               	movlb	2	; () banked
 14493  003044  98DF               	bcf	indf2,4,c
 14494                           
 14495                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 14496  003046  51A7               	movf	(_loRa+167)& (0+255),w,b
 14497  003048  0D02               	mullw	2
 14498  00304A  0E00               	movlw	low _loRa
 14499  00304C  0100               	movlb	0	; () banked
 14500  00304E  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 14501  003050  0E02               	movlw	high _loRa
 14502  003052  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 14503  003054  0EA8               	movlw	168
 14504  003056  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14505  003058  0E00               	movlw	0
 14506  00305A  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14507  00305C  50F3               	movf	prodl,w,c
 14508  00305E  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14509  003060  50F4               	movf	prodh,w,c
 14510  003062  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14511  003064  0E01               	movlw	1
 14512  003066  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 14513  003068  6ED9               	movwf	fsr2l,c
 14514  00306A  0E00               	movlw	0
 14515  00306C  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 14516  00306E  6EDA               	movwf	fsr2h,c
 14517  003070  0102               	movlb	2	; () banked
 14518  003072  9ADF               	bcf	indf2,5,c
 14519                           
 14520                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 14521  003074  51A7               	movf	(_loRa+167)& (0+255),w,b
 14522  003076  0D02               	mullw	2
 14523  003078  0E00               	movlw	low _loRa
 14524  00307A  0100               	movlb	0	; () banked
 14525  00307C  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 14526  00307E  0E02               	movlw	high _loRa
 14527  003080  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 14528  003082  0EA8               	movlw	168
 14529  003084  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14530  003086  0E00               	movlw	0
 14531  003088  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14532  00308A  50F3               	movf	prodl,w,c
 14533  00308C  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14534  00308E  50F4               	movf	prodh,w,c
 14535  003090  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14536  003092  0E01               	movlw	1
 14537  003094  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 14538  003096  6ED9               	movwf	fsr2l,c
 14539  003098  0E00               	movlw	0
 14540  00309A  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 14541  00309C  6EDA               	movwf	fsr2h,c
 14542  00309E  0102               	movlb	2	; () banked
 14543  0030A0  9CDF               	bcf	indf2,6,c
 14544                           
 14545                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 14546  0030A2  51A7               	movf	(_loRa+167)& (0+255),w,b
 14547  0030A4  0D02               	mullw	2
 14548  0030A6  0E00               	movlw	low _loRa
 14549  0030A8  0100               	movlb	0	; () banked
 14550  0030AA  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 14551  0030AC  0E02               	movlw	high _loRa
 14552  0030AE  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 14553  0030B0  0EA8               	movlw	168
 14554  0030B2  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14555  0030B4  0E00               	movlw	0
 14556  0030B6  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14557  0030B8  50F3               	movf	prodl,w,c
 14558  0030BA  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14559  0030BC  50F4               	movf	prodh,w,c
 14560  0030BE  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14561  0030C0  0E01               	movlw	1
 14562  0030C2  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 14563  0030C4  6ED9               	movwf	fsr2l,c
 14564  0030C6  0E00               	movlw	0
 14565  0030C8  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 14566  0030CA  6EDA               	movwf	fsr2h,c
 14567  0030CC  0102               	movlb	2	; () banked
 14568  0030CE  9EDF               	bcf	indf2,7,c
 14569                           
 14570                           ; BSR set to: 2
 14571                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 14572  0030D0  C0B6  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 14573  0030D4  C0B7  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 14574  0030D8  51A7               	movf	(_loRa+167)& (0+255),w,b
 14575  0030DA  0D02               	mullw	2
 14576  0030DC  0EA8               	movlw	low (_loRa+168)
 14577  0030DE  24F3               	addwf	prodl,w,c
 14578  0030E0  6EE9               	movwf	fsr0l,c
 14579  0030E2  0E02               	movlw	high (_loRa+168)
 14580  0030E4  20F4               	addwfc	prodh,w,c
 14581  0030E6  6EEA               	movwf	fsr0h,c
 14582  0030E8  CFDF FFEF          	movff	indf2,indf0
 14583                           
 14584                           ;lorawan.c: 1595: switch (*ptr ++)
 14585  0030EC  D064               	goto	l1991
 14586  0030EE                     
 14587                           ;lorawan.c: 1598: {
 14588                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 14589                           
 14590                           ; BSR set to: 2
 14591  0030EE  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 14592  0030F2  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 14593  0030F6  EC52  F042         	call	_ExecuteLinkCheck
 14594  0030FA  C060  F0B6         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 14595  0030FE  C061  F0B7         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 14596  003102  D04D               	goto	l15333
 14597  003104                     
 14598                           ;lorawan.c: 1605: {
 14599                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 14600                           
 14601                           ; BSR set to: 2
 14602  003104  C0B6  F06F         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 14603  003108  C0B7  F070         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 14604  00310C  EC22  F019         	call	_ExecuteLinkAdr	;wreg free
 14605  003110  C06F  F0B6         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 14606  003114  C070  F0B7         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 14607                           
 14608                           ;lorawan.c: 1607: } break;
 14609  003118  D06C               	goto	l1993
 14610  00311A                     
 14611                           ;lorawan.c: 1610: {
 14612                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 14613  00311A  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 14614  00311E  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 14615  003122  EC1E  F03F         	call	_ExecuteDutyCycle	;wreg free
 14616  003126  C060  F0B6         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 14617  00312A  C061  F0B7         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 14618                           
 14619                           ;lorawan.c: 1612: } break;
 14620  00312E  D061               	goto	l1993
 14621  003130                     
 14622                           ;lorawan.c: 1615: {
 14623                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 14624  003130  C0B6  F0A6         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 14625  003134  C0B7  F0A7         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 14626  003138  EC44  F01F         	call	_ExecuteRxParamSetupReq	;wreg free
 14627  00313C  C0A6  F0B6         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 14628  003140  C0A7  F0B7         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 14629                           
 14630                           ;lorawan.c: 1617: } break;
 14631  003144  D056               	goto	l1993
 14632  003146                     
 14633                           ;lorawan.c: 1620: {
 14634                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 14635  003146  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 14636  00314A  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 14637  00314E  EC74  F046         	call	_ExecuteDevStatus	;wreg free
 14638  003152  C060  F0B6         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 14639  003156  C061  F0B7         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 14640                           
 14641                           ;lorawan.c: 1622: } break;
 14642  00315A  D04B               	goto	l1993
 14643  00315C                     
 14644                           ;lorawan.c: 1625: {
 14645                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 14646  00315C  C0B6  F0A6         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 14647  003160  C0B7  F0A7         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 14648  003164  ECD8  F01B         	call	_ExecuteNewChannel	;wreg free
 14649  003168  C0A6  F0B6         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 14650  00316C  C0A7  F0B7         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 14651                           
 14652                           ;lorawan.c: 1628: } break;
 14653  003170  D040               	goto	l1993
 14654  003172                     
 14655                           ;lorawan.c: 1631: {
 14656                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 14657  003172  C0B6  F067         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 14658  003176  C0B7  F068         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 14659  00317A  ECBD  F043         	call	_ExecuteRxTimingSetup	;wreg free
 14660  00317E  C067  F0B6         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 14661  003182  C068  F0B7         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 14662                           
 14663                           ;lorawan.c: 1633: } break;
 14664  003186  D035               	goto	l1993
 14665  003188                     
 14666                           ;lorawan.c: 1636: {
 14667                           ;lorawan.c: 1637: done = 1;
 14668  003188  0E01               	movlw	1
 14669  00318A  0100               	movlb	0	; () banked
 14670  00318C  6FB5               	movwf	MacExecuteCommands@done& (0+255),b
 14671                           
 14672                           ; BSR set to: 0
 14673                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 14674  00318E  51B2               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 14675  003190  0D01               	mullw	1
 14676  003192  50F3               	movf	prodl,w,c
 14677  003194  25B0               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 14678  003196  6FB6               	movwf	MacExecuteCommands@ptr& (0+255),b
 14679  003198  50F4               	movf	prodh,w,c
 14680  00319A  21B1               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 14681  00319C  6FB7               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 14682  00319E                     l15333:
 14683                           
 14684                           ; BSR set to: 0
 14685                           ;lorawan.c: 1639: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 14686  00319E  0102               	movlb	2	; () banked
 14687  0031A0  51A7               	movf	(_loRa+167)& (0+255),w,b
 14688  0031A2  0D02               	mullw	2
 14689  0031A4  0EA8               	movlw	low (_loRa+168)
 14690  0031A6  24F3               	addwf	prodl,w,c
 14691  0031A8  6ED9               	movwf	fsr2l,c
 14692  0031AA  0E02               	movlw	high (_loRa+168)
 14693  0031AC  20F4               	addwfc	prodh,w,c
 14694  0031AE  6EDA               	movwf	fsr2h,c
 14695  0031B0  0EFF               	movlw	255
 14696  0031B2  6EDF               	movwf	indf2,c
 14697                           
 14698                           ; BSR set to: 2
 14699                           ;lorawan.c: 1641: }
 14700                           
 14701                           ;lorawan.c: 1640: } break;
 14702  0031B4  D01E               	goto	l1993
 14703  0031B6                     l1991:
 14704                           
 14705                           ; BSR set to: 2
 14706                           
 14707                           ; BSR set to: 2
 14708  0031B6  C0B6  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 14709  0031BA  C0B7  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 14710  0031BE  0100               	movlb	0	; () banked
 14711  0031C0  4BB6               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 14712  0031C2  2BB7               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 14713  0031C4  50DF               	movf	indf2,w,c
 14714                           
 14715                           ; Switch size 1, requested type "space"
 14716                           ; Number of cases is 7, Range of values is 2 to 8
 14717                           ; switch strategies available:
 14718                           ; Name         Instructions Cycles
 14719                           ; simple_byte           22    12 (average)
 14720                           ;	Chosen strategy is simple_byte
 14721  0031C6  0A02               	xorlw	2	; case 2
 14722  0031C8  B4D8               	btfsc	status,2,c
 14723  0031CA  D791               	goto	l1992
 14724  0031CC  0A01               	xorlw	1	; case 3
 14725  0031CE  B4D8               	btfsc	status,2,c
 14726  0031D0  D799               	goto	l1994
 14727  0031D2  0A07               	xorlw	7	; case 4
 14728  0031D4  B4D8               	btfsc	status,2,c
 14729  0031D6  D7A1               	goto	l1995
 14730  0031D8  0A01               	xorlw	1	; case 5
 14731  0031DA  B4D8               	btfsc	status,2,c
 14732  0031DC  D7A9               	goto	l1996
 14733  0031DE  0A03               	xorlw	3	; case 6
 14734  0031E0  B4D8               	btfsc	status,2,c
 14735  0031E2  D7B1               	goto	l1997
 14736  0031E4  0A01               	xorlw	1	; case 7
 14737  0031E6  B4D8               	btfsc	status,2,c
 14738  0031E8  D7B9               	goto	l1998
 14739  0031EA  0A0F               	xorlw	15	; case 8
 14740  0031EC  B4D8               	btfsc	status,2,c
 14741  0031EE  D7C1               	goto	l1999
 14742  0031F0  D7CB               	goto	l2000
 14743  0031F2                     l1993:
 14744                           
 14745                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 14746                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 14747                           
 14748                           ; BSR set to: 0
 14749  0031F2  0102               	movlb	2	; () banked
 14750  0031F4  51A7               	movf	(_loRa+167)& (0+255),w,b
 14751  0031F6  0D02               	mullw	2
 14752  0031F8  0EA8               	movlw	low (_loRa+168)
 14753  0031FA  24F3               	addwf	prodl,w,c
 14754  0031FC  6ED9               	movwf	fsr2l,c
 14755  0031FE  0E02               	movlw	high (_loRa+168)
 14756  003200  20F4               	addwfc	prodh,w,c
 14757  003202  6EDA               	movwf	fsr2h,c
 14758  003204  28DE               	incf	postinc2,w,c
 14759  003206  B4D8               	btfsc	status,2,c
 14760  003208  D004               	goto	l2001
 14761                           
 14762                           ; BSR set to: 2
 14763  00320A  0E10               	movlw	16
 14764  00320C  61A7               	cpfslt	(_loRa+167)& (0+255),b
 14765  00320E  D001               	goto	l2001
 14766                           
 14767                           ; BSR set to: 2
 14768                           ;lorawan.c: 1645: {
 14769                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 14770  003210  2BA7               	incf	(_loRa+167)& (0+255),f,b
 14771  003212                     l2001:
 14772                           
 14773                           ; BSR set to: 2
 14774                           
 14775                           ; BSR set to: 2
 14776  003212  0100               	movlb	0	; () banked
 14777  003214  51B2               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 14778  003216  0D01               	mullw	1
 14779  003218  C0B0  F0B3         	movff	MacExecuteCommands@buffer,??_MacExecuteCommands
 14780  00321C  C0B1  F0B4         	movff	MacExecuteCommands@buffer+1,??_MacExecuteCommands+1
 14781  003220  50F3               	movf	prodl,w,c
 14782  003222  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14783  003224  50F4               	movf	prodh,w,c
 14784  003226  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14785  003228  51B3               	movf	??_MacExecuteCommands& (0+255),w,b
 14786  00322A  5DB6               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 14787  00322C  51B4               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 14788  00322E  59B7               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 14789  003230  B0D8               	btfsc	status,0,c
 14790  003232  D003               	goto	u17860
 14791                           
 14792                           ; BSR set to: 0
 14793  003234  51B5               	movf	MacExecuteCommands@done& (0+255),w,b
 14794  003236  B4D8               	btfsc	status,2,c
 14795  003238  D692               	goto	l1990
 14796  00323A                     u17860:
 14797                           
 14798                           ; BSR set to: 0
 14799                           ;lorawan.c: 1647: }
 14800                           ;lorawan.c: 1648: }
 14801                           ;lorawan.c: 1649: return ptr;
 14802                           
 14803                           ; BSR set to: 0
 14804                           
 14805                           ; BSR set to: 0
 14806  00323A  C0B6  F0B0         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 14807  00323E  C0B7  F0B1         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 14808  003242  0012               	return	
 14809  003244                     __end_of_MacExecuteCommands:
 14810                           	opt stack 0
 14811                           tosu	equ	0xFFF
 14812                           tosh	equ	0xFFE
 14813                           tosl	equ	0xFFD
 14814                           pclath	equ	0xFFA
 14815                           tblptru	equ	0xFF8
 14816                           tblptrh	equ	0xFF7
 14817                           tblptrl	equ	0xFF6
 14818                           tablat	equ	0xFF5
 14819                           prodh	equ	0xFF4
 14820                           prodl	equ	0xFF3
 14821                           intcon	equ	0xFF2
 14822                           intcon2	equ	0xFF1
 14823                           intcon3	equ	0xFF0
 14824                           indf0	equ	0xFEF
 14825                           postinc0	equ	0xFEE
 14826                           fsr0h	equ	0xFEA
 14827                           fsr0l	equ	0xFE9
 14828                           wreg	equ	0xFE8
 14829                           postinc1	equ	0xFE6
 14830                           postdec1	equ	0xFE5
 14831                           plusw1	equ	0xFE3
 14832                           fsr1h	equ	0xFE2
 14833                           fsr1l	equ	0xFE1
 14834                           indf2	equ	0xFDF
 14835                           postinc2	equ	0xFDE
 14836                           postdec2	equ	0xFDD
 14837                           fsr2h	equ	0xFDA
 14838                           fsr2l	equ	0xFD9
 14839                           status	equ	0xFD8
 14840                           
 14841 ;; *************** function _ExecuteRxTimingSetup *****************
 14842 ;; Defined at:
 14843 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14844 ;; Parameters:    Size  Location     Type
 14845 ;;  ptr             2    7[BANK0 ] PTR unsigned char 
 14846 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14847 ;; Auto vars:     Size  Location     Type
 14848 ;;  delay           1    9[BANK0 ] unsigned char 
 14849 ;; Return value:  Size  Location     Type
 14850 ;;                  2    7[BANK0 ] PTR unsigned char 
 14851 ;; Registers used:
 14852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14853 ;; Tracked objects:
 14854 ;;		On entry : 0/0
 14855 ;;		On exit  : 0/0
 14856 ;;		Unchanged: 0/0
 14857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14858 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14859 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14861 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14862 ;;Total ram usage:        3 bytes
 14863 ;; Hardware stack levels used:    1
 14864 ;; Hardware stack levels required when called:    9
 14865 ;; This function calls:
 14866 ;;		_UpdateReceiveDelays
 14867 ;; This function is called by:
 14868 ;;		_MacExecuteCommands
 14869 ;; This function uses a non-reentrant model
 14870 ;;
 14871                           
 14872                           	psect	text71
 14873  00877A                     __ptext71:
 14874                           	opt stack 0
 14875  00877A                     _ExecuteRxTimingSetup:
 14876                           	opt stack 16
 14877                           
 14878                           ;lorawan.c: 1661: uint8_t delay;
 14879                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 14880                           
 14881                           ; BSR set to: 0
 14882                           ;incstack = 0
 14883  00877A  C067  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 14884  00877E  C068  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 14885  008782  50DF               	movf	indf2,w,c
 14886  008784  0B0F               	andlw	15
 14887  008786  0100               	movlb	0	; () banked
 14888  008788  6F69               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 14889                           
 14890                           ; BSR set to: 0
 14891                           ;lorawan.c: 1664: ptr++;
 14892  00878A  4B67               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 14893  00878C  2B68               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 14894                           
 14895                           ; BSR set to: 0
 14896                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 14897  00878E  5169               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 14898  008790  EC67  F041         	call	_UpdateReceiveDelays
 14899                           
 14900                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 14901  008794  0102               	movlb	2	; () banked
 14902  008796  8104               	bsf	(_loRa+4)& (0+255),0,b
 14903                           
 14904                           ; BSR set to: 2
 14905                           ;lorawan.c: 1669: return ptr;
 14906  008798  C067  F067         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 14907  00879C  C068  F068         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 14908  0087A0  0012               	return	
 14909  0087A2                     __end_of_ExecuteRxTimingSetup:
 14910                           	opt stack 0
 14911                           tosu	equ	0xFFF
 14912                           tosh	equ	0xFFE
 14913                           tosl	equ	0xFFD
 14914                           pclath	equ	0xFFA
 14915                           tblptru	equ	0xFF8
 14916                           tblptrh	equ	0xFF7
 14917                           tblptrl	equ	0xFF6
 14918                           tablat	equ	0xFF5
 14919                           prodh	equ	0xFF4
 14920                           prodl	equ	0xFF3
 14921                           intcon	equ	0xFF2
 14922                           intcon2	equ	0xFF1
 14923                           intcon3	equ	0xFF0
 14924                           indf0	equ	0xFEF
 14925                           postinc0	equ	0xFEE
 14926                           fsr0h	equ	0xFEA
 14927                           fsr0l	equ	0xFE9
 14928                           wreg	equ	0xFE8
 14929                           postinc1	equ	0xFE6
 14930                           postdec1	equ	0xFE5
 14931                           plusw1	equ	0xFE3
 14932                           fsr1h	equ	0xFE2
 14933                           fsr1l	equ	0xFE1
 14934                           indf2	equ	0xFDF
 14935                           postinc2	equ	0xFDE
 14936                           postdec2	equ	0xFDD
 14937                           fsr2h	equ	0xFDA
 14938                           fsr2l	equ	0xFD9
 14939                           status	equ	0xFD8
 14940                           
 14941 ;; *************** function _UpdateReceiveDelays *****************
 14942 ;; Defined at:
 14943 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14944 ;; Parameters:    Size  Location     Type
 14945 ;;  delay           1    wreg     unsigned char 
 14946 ;; Auto vars:     Size  Location     Type
 14947 ;;  delay           1    6[BANK0 ] unsigned char 
 14948 ;; Return value:  Size  Location     Type
 14949 ;;                  1    wreg      void 
 14950 ;; Registers used:
 14951 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14952 ;; Tracked objects:
 14953 ;;		On entry : 0/0
 14954 ;;		On exit  : 0/0
 14955 ;;		Unchanged: 0/0
 14956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14958 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14960 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14961 ;;Total ram usage:        1 bytes
 14962 ;; Hardware stack levels used:    1
 14963 ;; Hardware stack levels required when called:    8
 14964 ;; This function calls:
 14965 ;;		___wmul
 14966 ;; This function is called by:
 14967 ;;		_LORAWAN_RxDone
 14968 ;;		_ExecuteRxTimingSetup
 14969 ;; This function uses a non-reentrant model
 14970 ;;
 14971                           
 14972                           	psect	text72
 14973  0082CE                     __ptext72:
 14974                           	opt stack 0
 14975  0082CE                     _UpdateReceiveDelays:
 14976                           	opt stack 18
 14977                           
 14978                           ; BSR set to: 2
 14979                           ;incstack = 0
 14980                           ;UpdateReceiveDelays@delay stored from wreg
 14981  0082CE  0100               	movlb	0	; () banked
 14982  0082D0  6F66               	movwf	UpdateReceiveDelays@delay& (0+255),b
 14983                           
 14984                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 14985  0082D2  C066  F060         	movff	UpdateReceiveDelays@delay,___wmul@multiplier
 14986  0082D6  0100               	movlb	0	; () banked
 14987  0082D8  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 14988  0082DA  0E03               	movlw	3
 14989  0082DC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14990  0082DE  0EE8               	movlw	232
 14991  0082E0  6F62               	movwf	___wmul@multiplicand& (0+255),b
 14992  0082E2  ECD1  F043         	call	___wmul	;wreg free
 14993  0082E6  C060  F294         	movff	?___wmul,_loRa+148
 14994  0082EA  C061  F295         	movff	?___wmul+1,_loRa+149
 14995                           
 14996                           ;lorawan.c: 2029: if (delay == 0)
 14997  0082EE  0100               	movlb	0	; () banked
 14998  0082F0  5166               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 14999  0082F2  A4D8               	btfss	status,2,c
 15000  0082F4  D005               	goto	l2100
 15001                           
 15002                           ; BSR set to: 0
 15003                           ;lorawan.c: 2030: {
 15004                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 15005  0082F6  0E03               	movlw	3
 15006  0082F8  0102               	movlb	2	; () banked
 15007  0082FA  6F95               	movwf	(_loRa+149)& (0+255),b
 15008  0082FC  0EE8               	movlw	232
 15009  0082FE  6F94               	movwf	(_loRa+148)& (0+255),b
 15010  008300                     l2100:
 15011                           
 15012                           ;lorawan.c: 2032: }
 15013                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 15014                           
 15015                           ; BSR set to: 2
 15016  008300  0EE8               	movlw	232
 15017  008302  0102               	movlb	2	; () banked
 15018  008304  2594               	addwf	(_loRa+148)& (0+255),w,b
 15019  008306  6F96               	movwf	(_loRa+150)& (0+255),b
 15020  008308  0E03               	movlw	3
 15021  00830A  2195               	addwfc	(_loRa+149)& (0+255),w,b
 15022  00830C  6F97               	movwf	(_loRa+151)& (0+255),b
 15023                           
 15024                           ; BSR set to: 2
 15025  00830E  0012               	return		;funcret
 15026  008310                     __end_of_UpdateReceiveDelays:
 15027                           	opt stack 0
 15028                           tosu	equ	0xFFF
 15029                           tosh	equ	0xFFE
 15030                           tosl	equ	0xFFD
 15031                           pclath	equ	0xFFA
 15032                           tblptru	equ	0xFF8
 15033                           tblptrh	equ	0xFF7
 15034                           tblptrl	equ	0xFF6
 15035                           tablat	equ	0xFF5
 15036                           prodh	equ	0xFF4
 15037                           prodl	equ	0xFF3
 15038                           intcon	equ	0xFF2
 15039                           intcon2	equ	0xFF1
 15040                           intcon3	equ	0xFF0
 15041                           indf0	equ	0xFEF
 15042                           postinc0	equ	0xFEE
 15043                           fsr0h	equ	0xFEA
 15044                           fsr0l	equ	0xFE9
 15045                           wreg	equ	0xFE8
 15046                           postinc1	equ	0xFE6
 15047                           postdec1	equ	0xFE5
 15048                           plusw1	equ	0xFE3
 15049                           fsr1h	equ	0xFE2
 15050                           fsr1l	equ	0xFE1
 15051                           indf2	equ	0xFDF
 15052                           postinc2	equ	0xFDE
 15053                           postdec2	equ	0xFDD
 15054                           fsr2h	equ	0xFDA
 15055                           fsr2l	equ	0xFD9
 15056                           status	equ	0xFD8
 15057                           
 15058 ;; *************** function ___wmul *****************
 15059 ;; Defined at:
 15060 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 15061 ;; Parameters:    Size  Location     Type
 15062 ;;  multiplier      2    0[BANK0 ] unsigned int 
 15063 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 15064 ;; Auto vars:     Size  Location     Type
 15065 ;;  product         2    4[BANK0 ] unsigned int 
 15066 ;; Return value:  Size  Location     Type
 15067 ;;                  2    0[BANK0 ] unsigned int 
 15068 ;; Registers used:
 15069 ;;		wreg, status,2, status,0, prodl, prodh
 15070 ;; Tracked objects:
 15071 ;;		On entry : 0/0
 15072 ;;		On exit  : 0/0
 15073 ;;		Unchanged: 0/0
 15074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15075 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15076 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15078 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15079 ;;Total ram usage:        6 bytes
 15080 ;; Hardware stack levels used:    1
 15081 ;; Hardware stack levels required when called:    7
 15082 ;; This function calls:
 15083 ;;		Nothing
 15084 ;; This function is called by:
 15085 ;;		_UpdateCfList
 15086 ;;		_UpdateReceiveDelays
 15087 ;; This function uses a non-reentrant model
 15088 ;;
 15089                           
 15090                           	psect	text73
 15091  0087A2                     __ptext73:
 15092                           	opt stack 0
 15093  0087A2                     ___wmul:
 15094                           	opt stack 18
 15095                           
 15096                           ; BSR set to: 2
 15097                           ;incstack = 0
 15098  0087A2  0100               	movlb	0	; () banked
 15099  0087A4  5160               	movf	___wmul@multiplier& (0+255),w,b
 15100  0087A6  0362               	mulwf	___wmul@multiplicand& (0+255),b
 15101  0087A8  CFF3 F064          	movff	prodl,___wmul@product
 15102  0087AC  CFF4 F065          	movff	prodh,___wmul@product+1
 15103  0087B0  5160               	movf	___wmul@multiplier& (0+255),w,b
 15104  0087B2  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15105  0087B4  50F3               	movf	prodl,w,c
 15106  0087B6  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 15107  0087B8  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15108  0087BA  0362               	mulwf	___wmul@multiplicand& (0+255),b
 15109  0087BC  50F3               	movf	prodl,w,c
 15110  0087BE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 15111                           
 15112                           ; BSR set to: 0
 15113  0087C0  C064  F060         	movff	___wmul@product,?___wmul
 15114  0087C4  C065  F061         	movff	___wmul@product+1,?___wmul+1
 15115  0087C8  0012               	return	
 15116  0087CA                     __end_of___wmul:
 15117                           	opt stack 0
 15118                           tosu	equ	0xFFF
 15119                           tosh	equ	0xFFE
 15120                           tosl	equ	0xFFD
 15121                           pclath	equ	0xFFA
 15122                           tblptru	equ	0xFF8
 15123                           tblptrh	equ	0xFF7
 15124                           tblptrl	equ	0xFF6
 15125                           tablat	equ	0xFF5
 15126                           prodh	equ	0xFF4
 15127                           prodl	equ	0xFF3
 15128                           intcon	equ	0xFF2
 15129                           intcon2	equ	0xFF1
 15130                           intcon3	equ	0xFF0
 15131                           indf0	equ	0xFEF
 15132                           postinc0	equ	0xFEE
 15133                           fsr0h	equ	0xFEA
 15134                           fsr0l	equ	0xFE9
 15135                           wreg	equ	0xFE8
 15136                           postinc1	equ	0xFE6
 15137                           postdec1	equ	0xFE5
 15138                           plusw1	equ	0xFE3
 15139                           fsr1h	equ	0xFE2
 15140                           fsr1l	equ	0xFE1
 15141                           indf2	equ	0xFDF
 15142                           postinc2	equ	0xFDE
 15143                           postdec2	equ	0xFDD
 15144                           fsr2h	equ	0xFDA
 15145                           fsr2l	equ	0xFD9
 15146                           status	equ	0xFD8
 15147                           
 15148 ;; *************** function _ExecuteRxParamSetupReq *****************
 15149 ;; Defined at:
 15150 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15151 ;; Parameters:    Size  Location     Type
 15152 ;;  ptr             2   70[BANK0 ] PTR unsigned char 
 15153 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15154 ;; Auto vars:     Size  Location     Type
 15155 ;;  frequency       4   74[BANK0 ] unsigned long 
 15156 ;;  dlSettings      1   78[BANK0 ] struct .
 15157 ;; Return value:  Size  Location     Type
 15158 ;;                  2   70[BANK0 ] PTR unsigned char 
 15159 ;; Registers used:
 15160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15161 ;; Tracked objects:
 15162 ;;		On entry : 0/0
 15163 ;;		On exit  : 0/0
 15164 ;;		Unchanged: 0/0
 15165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15166 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15167 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15168 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15169 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15170 ;;Total ram usage:        9 bytes
 15171 ;; Hardware stack levels used:    1
 15172 ;; Hardware stack levels required when called:    8
 15173 ;; This function calls:
 15174 ;;		_UpdateReceiveWindow2Parameters
 15175 ;;		_ValidateDataRate
 15176 ;;		_ValidateFrequency
 15177 ;;		_ValidateRxOffset
 15178 ;;		___lmul
 15179 ;; This function is called by:
 15180 ;;		_MacExecuteCommands
 15181 ;; This function uses a non-reentrant model
 15182 ;;
 15183                           
 15184                           	psect	text74
 15185  003E88                     __ptext74:
 15186                           	opt stack 0
 15187  003E88                     _ExecuteRxParamSetupReq:
 15188                           	opt stack 17
 15189                           
 15190                           ;lorawan_eu.c: 742: DlSettings_t dlSettings;
 15191                           ;lorawan_eu.c: 743: uint32_t frequency = 0;
 15192                           
 15193                           ; BSR set to: 0
 15194                           ;incstack = 0
 15195  003E88  0E00               	movlw	0
 15196  003E8A  0100               	movlb	0	; () banked
 15197  003E8C  6FAA               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 15198  003E8E  0E00               	movlw	0
 15199  003E90  6FAB               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 15200  003E92  0E00               	movlw	0
 15201  003E94  6FAC               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 15202  003E96  0E00               	movlw	0
 15203  003E98  6FAD               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 15204                           
 15205                           ; BSR set to: 0
 15206                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 15207  003E9A  C0A6  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 15208  003E9E  C0A7  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 15209  003EA2  50DF               	movf	indf2,w,c
 15210  003EA4  6FAE               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 15211                           
 15212                           ; BSR set to: 0
 15213  003EA6  4BA6               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 15214  003EA8  2BA7               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 15215                           
 15216                           ; BSR set to: 0
 15217                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 15218  003EAA  C0A6  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 15219  003EAE  C0A7  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 15220  003EB2  0EFF               	movlw	255
 15221  003EB4  14DE               	andwf	postinc2,w,c
 15222  003EB6  6FAA               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 15223  003EB8  0EFF               	movlw	255
 15224  003EBA  14DE               	andwf	postinc2,w,c
 15225  003EBC  6FAB               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 15226  003EBE  0EFF               	movlw	255
 15227  003EC0  14DE               	andwf	postinc2,w,c
 15228  003EC2  6FAC               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 15229  003EC4  0E00               	movlw	0
 15230  003EC6  14DE               	andwf	postinc2,w,c
 15231  003EC8  6FAD               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 15232                           
 15233                           ; BSR set to: 0
 15234                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 15235  003ECA  C0AA  F09A         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 15236  003ECE  C0AB  F09B         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 15237  003ED2  C0AC  F09C         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 15238  003ED6  C0AD  F09D         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 15239  003EDA  0E64               	movlw	100
 15240  003EDC  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 15241  003EDE  0E00               	movlw	0
 15242  003EE0  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15243  003EE2  0E00               	movlw	0
 15244  003EE4  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15245  003EE6  0E00               	movlw	0
 15246  003EE8  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15247  003EEA  EC72  F03E         	call	___lmul	;wreg free
 15248  003EEE  C09A  F0AA         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 15249  003EF2  C09B  F0AB         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 15250  003EF6  C09C  F0AC         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 15251  003EFA  C09D  F0AD         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 15252                           
 15253                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 15254  003EFE  0E03               	movlw	3
 15255  003F00  0100               	movlb	0	; () banked
 15256  003F02  25A6               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),w,b
 15257  003F04  6FA6               	movwf	ExecuteRxParamSetupReq@ptr& (0+255),b
 15258  003F06  0E00               	movlw	0
 15259  003F08  21A7               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),w,b
 15260  003F0A  6FA7               	movwf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),b
 15261                           
 15262                           ; BSR set to: 0
 15263                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 15264  003F0C  C0AA  F060         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 15265  003F10  C0AB  F061         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 15266  003F14  C0AC  F062         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 15267  003F18  C0AD  F063         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 15268  003F1C  EC66  F03C         	call	_ValidateFrequency	;wreg free
 15269  003F20  0900               	iorlw	0
 15270  003F22  A4D8               	btfss	status,2,c
 15271  003F24  D018               	goto	l1134
 15272                           
 15273                           ;lorawan_eu.c: 754: {
 15274                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 15275  003F26  0102               	movlb	2	; () banked
 15276  003F28  51A7               	movf	(_loRa+167)& (0+255),w,b
 15277  003F2A  0D02               	mullw	2
 15278  003F2C  0E00               	movlw	low _loRa
 15279  003F2E  0100               	movlb	0	; () banked
 15280  003F30  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 15281  003F32  0E02               	movlw	high _loRa
 15282  003F34  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 15283  003F36  0EA8               	movlw	168
 15284  003F38  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15285  003F3A  0E00               	movlw	0
 15286  003F3C  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15287  003F3E  50F3               	movf	prodl,w,c
 15288  003F40  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15289  003F42  50F4               	movf	prodh,w,c
 15290  003F44  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15291  003F46  0E01               	movlw	1
 15292  003F48  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 15293  003F4A  6ED9               	movwf	fsr2l,c
 15294  003F4C  0E00               	movlw	0
 15295  003F4E  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 15296  003F50  6EDA               	movwf	fsr2h,c
 15297  003F52  0102               	movlb	2	; () banked
 15298  003F54  86DF               	bsf	indf2,3,c
 15299  003F56                     l1134:
 15300                           
 15301                           ;lorawan_eu.c: 756: }
 15302                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 15303                           
 15304                           ; BSR set to: 2
 15305  003F56  0100               	movlb	0	; () banked
 15306  003F58  51AE               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15307  003F5A  0B0F               	andlw	15
 15308  003F5C  EC8D  F045         	call	_ValidateDataRate
 15309  003F60  0900               	iorlw	0
 15310  003F62  A4D8               	btfss	status,2,c
 15311  003F64  D018               	goto	l1135
 15312                           
 15313                           ;lorawan_eu.c: 759: {
 15314                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 15315  003F66  0102               	movlb	2	; () banked
 15316  003F68  51A7               	movf	(_loRa+167)& (0+255),w,b
 15317  003F6A  0D02               	mullw	2
 15318  003F6C  0E00               	movlw	low _loRa
 15319  003F6E  0100               	movlb	0	; () banked
 15320  003F70  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 15321  003F72  0E02               	movlw	high _loRa
 15322  003F74  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 15323  003F76  0EA8               	movlw	168
 15324  003F78  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15325  003F7A  0E00               	movlw	0
 15326  003F7C  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15327  003F7E  50F3               	movf	prodl,w,c
 15328  003F80  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15329  003F82  50F4               	movf	prodh,w,c
 15330  003F84  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15331  003F86  0E01               	movlw	1
 15332  003F88  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 15333  003F8A  6ED9               	movwf	fsr2l,c
 15334  003F8C  0E00               	movlw	0
 15335  003F8E  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 15336  003F90  6EDA               	movwf	fsr2h,c
 15337  003F92  0102               	movlb	2	; () banked
 15338  003F94  88DF               	bsf	indf2,4,c
 15339  003F96                     l1135:
 15340                           
 15341                           ;lorawan_eu.c: 761: }
 15342                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 15343                           
 15344                           ; BSR set to: 2
 15345  003F96  0100               	movlb	0	; () banked
 15346  003F98  39AE               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15347  003F9A  0B07               	andlw	7
 15348  003F9C  EC81  F045         	call	_ValidateRxOffset
 15349  003FA0  0900               	iorlw	0
 15350  003FA2  A4D8               	btfss	status,2,c
 15351  003FA4  D018               	goto	l1136
 15352                           
 15353                           ;lorawan_eu.c: 764: {
 15354                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 15355  003FA6  0102               	movlb	2	; () banked
 15356  003FA8  51A7               	movf	(_loRa+167)& (0+255),w,b
 15357  003FAA  0D02               	mullw	2
 15358  003FAC  0E00               	movlw	low _loRa
 15359  003FAE  0100               	movlb	0	; () banked
 15360  003FB0  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 15361  003FB2  0E02               	movlw	high _loRa
 15362  003FB4  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 15363  003FB6  0EA8               	movlw	168
 15364  003FB8  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15365  003FBA  0E00               	movlw	0
 15366  003FBC  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15367  003FBE  50F3               	movf	prodl,w,c
 15368  003FC0  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15369  003FC2  50F4               	movf	prodh,w,c
 15370  003FC4  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15371  003FC6  0E01               	movlw	1
 15372  003FC8  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 15373  003FCA  6ED9               	movwf	fsr2l,c
 15374  003FCC  0E00               	movlw	0
 15375  003FCE  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 15376  003FD0  6EDA               	movwf	fsr2h,c
 15377  003FD2  0102               	movlb	2	; () banked
 15378  003FD4  8ADF               	bsf	indf2,5,c
 15379  003FD6                     l1136:
 15380                           
 15381                           ;lorawan_eu.c: 766: }
 15382                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 15383  003FD6  0102               	movlb	2	; () banked
 15384  003FD8  51A7               	movf	(_loRa+167)& (0+255),w,b
 15385  003FDA  0D02               	mullw	2
 15386  003FDC  0E00               	movlw	low _loRa
 15387  003FDE  0100               	movlb	0	; () banked
 15388  003FE0  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 15389  003FE2  0E02               	movlw	high _loRa
 15390  003FE4  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 15391  003FE6  0EA8               	movlw	168
 15392  003FE8  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15393  003FEA  0E00               	movlw	0
 15394  003FEC  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15395  003FEE  50F3               	movf	prodl,w,c
 15396  003FF0  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15397  003FF2  50F4               	movf	prodh,w,c
 15398  003FF4  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15399  003FF6  0E01               	movlw	1
 15400  003FF8  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 15401  003FFA  6ED9               	movwf	fsr2l,c
 15402  003FFC  0E00               	movlw	0
 15403  003FFE  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 15404  004000  6EDA               	movwf	fsr2h,c
 15405  004002  0102               	movlb	2	; () banked
 15406  004004  A8DF               	btfss	indf2,4,c
 15407  004006  D045               	goto	l1137
 15408                           
 15409                           ; BSR set to: 2
 15410  004008  51A7               	movf	(_loRa+167)& (0+255),w,b
 15411  00400A  0D02               	mullw	2
 15412  00400C  0E00               	movlw	low _loRa
 15413  00400E  0100               	movlb	0	; () banked
 15414  004010  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 15415  004012  0E02               	movlw	high _loRa
 15416  004014  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 15417  004016  0EA8               	movlw	168
 15418  004018  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15419  00401A  0E00               	movlw	0
 15420  00401C  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15421  00401E  50F3               	movf	prodl,w,c
 15422  004020  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15423  004022  50F4               	movf	prodh,w,c
 15424  004024  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15425  004026  0E01               	movlw	1
 15426  004028  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 15427  00402A  6ED9               	movwf	fsr2l,c
 15428  00402C  0E00               	movlw	0
 15429  00402E  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 15430  004030  6EDA               	movwf	fsr2h,c
 15431  004032  0102               	movlb	2	; () banked
 15432  004034  A6DF               	btfss	indf2,3,c
 15433  004036  D02D               	goto	l1137
 15434                           
 15435                           ; BSR set to: 2
 15436  004038  51A7               	movf	(_loRa+167)& (0+255),w,b
 15437  00403A  0D02               	mullw	2
 15438  00403C  0E00               	movlw	low _loRa
 15439  00403E  0100               	movlb	0	; () banked
 15440  004040  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 15441  004042  0E02               	movlw	high _loRa
 15442  004044  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 15443  004046  0EA8               	movlw	168
 15444  004048  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15445  00404A  0E00               	movlw	0
 15446  00404C  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15447  00404E  50F3               	movf	prodl,w,c
 15448  004050  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15449  004052  50F4               	movf	prodh,w,c
 15450  004054  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15451  004056  0E01               	movlw	1
 15452  004058  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 15453  00405A  6ED9               	movwf	fsr2l,c
 15454  00405C  0E00               	movlw	0
 15455  00405E  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 15456  004060  6EDA               	movwf	fsr2h,c
 15457  004062  0102               	movlb	2	; () banked
 15458  004064  AADF               	btfss	indf2,5,c
 15459  004066  D015               	goto	l1137
 15460                           
 15461                           ; BSR set to: 2
 15462                           ;lorawan_eu.c: 769: {
 15463                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 15464  004068  0100               	movlb	0	; () banked
 15465  00406A  39AE               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15466  00406C  0B07               	andlw	7
 15467  00406E  0102               	movlb	2	; () banked
 15468  004070  6FEF               	movwf	(_loRa+239)& (0+255),b
 15469                           
 15470                           ; BSR set to: 2
 15471                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 15472  004072  C0AA  F060         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 15473  004076  C0AB  F061         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 15474  00407A  C0AC  F062         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 15475  00407E  C0AD  F063         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 15476  004082  0100               	movlb	0	; () banked
 15477  004084  51AE               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15478  004086  0B0F               	andlw	15
 15479  004088  6F64               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 15480  00408A  ECA4  F045         	call	_UpdateReceiveWindow2Parameters	;wreg free
 15481                           
 15482                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 15483  00408E  0102               	movlb	2	; () banked
 15484  004090  8F03               	bsf	(_loRa+3)& (0+255),7,b
 15485  004092                     l1137:
 15486                           
 15487                           ; BSR set to: 2
 15488                           ;lorawan_eu.c: 773: }
 15489                           ;lorawan_eu.c: 775: return ptr;
 15490                           
 15491                           ; BSR set to: 2
 15492  004092  C0A6  F0A6         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 15493  004096  C0A7  F0A7         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 15494  00409A  0012               	return	
 15495  00409C                     __end_of_ExecuteRxParamSetupReq:
 15496                           	opt stack 0
 15497                           tosu	equ	0xFFF
 15498                           tosh	equ	0xFFE
 15499                           tosl	equ	0xFFD
 15500                           pclath	equ	0xFFA
 15501                           tblptru	equ	0xFF8
 15502                           tblptrh	equ	0xFF7
 15503                           tblptrl	equ	0xFF6
 15504                           tablat	equ	0xFF5
 15505                           prodh	equ	0xFF4
 15506                           prodl	equ	0xFF3
 15507                           intcon	equ	0xFF2
 15508                           intcon2	equ	0xFF1
 15509                           intcon3	equ	0xFF0
 15510                           indf0	equ	0xFEF
 15511                           postinc0	equ	0xFEE
 15512                           fsr0h	equ	0xFEA
 15513                           fsr0l	equ	0xFE9
 15514                           wreg	equ	0xFE8
 15515                           postinc1	equ	0xFE6
 15516                           postdec1	equ	0xFE5
 15517                           plusw1	equ	0xFE3
 15518                           fsr1h	equ	0xFE2
 15519                           fsr1l	equ	0xFE1
 15520                           indf2	equ	0xFDF
 15521                           postinc2	equ	0xFDE
 15522                           postdec2	equ	0xFDD
 15523                           fsr2h	equ	0xFDA
 15524                           fsr2l	equ	0xFD9
 15525                           status	equ	0xFD8
 15526                           
 15527 ;; *************** function _ValidateRxOffset *****************
 15528 ;; Defined at:
 15529 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15530 ;; Parameters:    Size  Location     Type
 15531 ;;  rxOffset        1    wreg     unsigned char 
 15532 ;; Auto vars:     Size  Location     Type
 15533 ;;  rxOffset        1    0[BANK0 ] unsigned char 
 15534 ;;  result          1    1[BANK0 ] enum E7249
 15535 ;; Return value:  Size  Location     Type
 15536 ;;                  1    wreg      enum E7249
 15537 ;; Registers used:
 15538 ;;		wreg, status,2, status,0
 15539 ;; Tracked objects:
 15540 ;;		On entry : 0/0
 15541 ;;		On exit  : 0/0
 15542 ;;		Unchanged: 0/0
 15543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15545 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15547 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15548 ;;Total ram usage:        2 bytes
 15549 ;; Hardware stack levels used:    1
 15550 ;; Hardware stack levels required when called:    7
 15551 ;; This function calls:
 15552 ;;		Nothing
 15553 ;; This function is called by:
 15554 ;;		_ExecuteRxParamSetupReq
 15555 ;; This function uses a non-reentrant model
 15556 ;;
 15557                           
 15558                           	psect	text75
 15559  008B02                     __ptext75:
 15560                           	opt stack 0
 15561  008B02                     _ValidateRxOffset:
 15562                           	opt stack 17
 15563                           
 15564                           ; BSR set to: 2
 15565                           ;incstack = 0
 15566                           ;ValidateRxOffset@rxOffset stored from wreg
 15567  008B02  0100               	movlb	0	; () banked
 15568  008B04  6F60               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 15569                           
 15570                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 15571  008B06  0E00               	movlw	0
 15572  008B08  0100               	movlb	0	; () banked
 15573  008B0A  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 15574                           
 15575                           ; BSR set to: 0
 15576                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 15577  008B0C  0E05               	movlw	5
 15578  008B0E  6560               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 15579  008B10  D002               	goto	l1232
 15580                           
 15581                           ; BSR set to: 0
 15582                           ;lorawan_eu.c: 1081: {
 15583                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 15584  008B12  0E03               	movlw	3
 15585  008B14  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 15586  008B16                     l1232:
 15587                           
 15588                           ; BSR set to: 0
 15589                           ;lorawan_eu.c: 1083: }
 15590                           ;lorawan_eu.c: 1085: return result;
 15591  008B16  5161               	movf	ValidateRxOffset@result& (0+255),w,b
 15592  008B18  0012               	return	
 15593  008B1A                     __end_of_ValidateRxOffset:
 15594                           	opt stack 0
 15595                           tosu	equ	0xFFF
 15596                           tosh	equ	0xFFE
 15597                           tosl	equ	0xFFD
 15598                           pclath	equ	0xFFA
 15599                           tblptru	equ	0xFF8
 15600                           tblptrh	equ	0xFF7
 15601                           tblptrl	equ	0xFF6
 15602                           tablat	equ	0xFF5
 15603                           prodh	equ	0xFF4
 15604                           prodl	equ	0xFF3
 15605                           intcon	equ	0xFF2
 15606                           intcon2	equ	0xFF1
 15607                           intcon3	equ	0xFF0
 15608                           indf0	equ	0xFEF
 15609                           postinc0	equ	0xFEE
 15610                           fsr0h	equ	0xFEA
 15611                           fsr0l	equ	0xFE9
 15612                           wreg	equ	0xFE8
 15613                           postinc1	equ	0xFE6
 15614                           postdec1	equ	0xFE5
 15615                           plusw1	equ	0xFE3
 15616                           fsr1h	equ	0xFE2
 15617                           fsr1l	equ	0xFE1
 15618                           indf2	equ	0xFDF
 15619                           postinc2	equ	0xFDE
 15620                           postdec2	equ	0xFDD
 15621                           fsr2h	equ	0xFDA
 15622                           fsr2l	equ	0xFD9
 15623                           status	equ	0xFD8
 15624                           
 15625 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 15626 ;; Defined at:
 15627 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15628 ;; Parameters:    Size  Location     Type
 15629 ;;  frequency       4    0[BANK0 ] unsigned long 
 15630 ;;  dataRate        1    4[BANK0 ] unsigned char 
 15631 ;; Auto vars:     Size  Location     Type
 15632 ;;		None
 15633 ;; Return value:  Size  Location     Type
 15634 ;;                  1    wreg      void 
 15635 ;; Registers used:
 15636 ;;		None
 15637 ;; Tracked objects:
 15638 ;;		On entry : 0/0
 15639 ;;		On exit  : 0/0
 15640 ;;		Unchanged: 0/0
 15641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15642 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15645 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15646 ;;Total ram usage:        5 bytes
 15647 ;; Hardware stack levels used:    1
 15648 ;; Hardware stack levels required when called:    7
 15649 ;; This function calls:
 15650 ;;		Nothing
 15651 ;; This function is called by:
 15652 ;;		_ExecuteRxParamSetupReq
 15653 ;;		_LORAWAN_SetReceiveWindow2Parameters
 15654 ;; This function uses a non-reentrant model
 15655 ;;
 15656                           
 15657                           	psect	text76
 15658  008B48                     __ptext76:
 15659                           	opt stack 0
 15660  008B48                     _UpdateReceiveWindow2Parameters:
 15661                           	opt stack 17
 15662                           
 15663                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 15664                           
 15665                           ; BSR set to: 0
 15666                           ;incstack = 0
 15667  008B48  C064  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 15668                           
 15669                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 15670  008B4C  C060  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 15671  008B50  C061  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 15672  008B54  C062  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 15673  008B58  C063  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 15674  008B5C  0012               	return		;funcret
 15675  008B5E                     __end_of_UpdateReceiveWindow2Parameters:
 15676                           	opt stack 0
 15677                           tosu	equ	0xFFF
 15678                           tosh	equ	0xFFE
 15679                           tosl	equ	0xFFD
 15680                           pclath	equ	0xFFA
 15681                           tblptru	equ	0xFF8
 15682                           tblptrh	equ	0xFF7
 15683                           tblptrl	equ	0xFF6
 15684                           tablat	equ	0xFF5
 15685                           prodh	equ	0xFF4
 15686                           prodl	equ	0xFF3
 15687                           intcon	equ	0xFF2
 15688                           intcon2	equ	0xFF1
 15689                           intcon3	equ	0xFF0
 15690                           indf0	equ	0xFEF
 15691                           postinc0	equ	0xFEE
 15692                           fsr0h	equ	0xFEA
 15693                           fsr0l	equ	0xFE9
 15694                           wreg	equ	0xFE8
 15695                           postinc1	equ	0xFE6
 15696                           postdec1	equ	0xFE5
 15697                           plusw1	equ	0xFE3
 15698                           fsr1h	equ	0xFE2
 15699                           fsr1l	equ	0xFE1
 15700                           indf2	equ	0xFDF
 15701                           postinc2	equ	0xFDE
 15702                           postdec2	equ	0xFDD
 15703                           fsr2h	equ	0xFDA
 15704                           fsr2l	equ	0xFD9
 15705                           status	equ	0xFD8
 15706                           
 15707 ;; *************** function _ExecuteNewChannel *****************
 15708 ;; Defined at:
 15709 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15710 ;; Parameters:    Size  Location     Type
 15711 ;;  ptr             2   70[BANK0 ] PTR unsigned char 
 15712 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15713 ;; Auto vars:     Size  Location     Type
 15714 ;;  frequency       4   75[BANK0 ] unsigned long 
 15715 ;;  channelIndex    1   79[BANK0 ] unsigned char 
 15716 ;;  drRange         1   74[BANK0 ] struct .
 15717 ;; Return value:  Size  Location     Type
 15718 ;;                  2   70[BANK0 ] PTR unsigned char 
 15719 ;; Registers used:
 15720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15721 ;; Tracked objects:
 15722 ;;		On entry : 0/0
 15723 ;;		On exit  : 0/0
 15724 ;;		Unchanged: 0/0
 15725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15726 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15727 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15728 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15729 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15730 ;;Total ram usage:       10 bytes
 15731 ;; Hardware stack levels used:    1
 15732 ;; Hardware stack levels required when called:    9
 15733 ;; This function calls:
 15734 ;;		_LORAWAN_SetChannelIdStatus
 15735 ;;		_UpdateChannelIdStatus
 15736 ;;		_UpdateDataRange
 15737 ;;		_UpdateDutyCycle
 15738 ;;		_UpdateFrequency
 15739 ;;		_ValidateChannelId
 15740 ;;		_ValidateDataRange
 15741 ;;		_ValidateFrequency
 15742 ;;		___lmul
 15743 ;; This function is called by:
 15744 ;;		_MacExecuteCommands
 15745 ;; This function uses a non-reentrant model
 15746 ;;
 15747                           
 15748                           	psect	text77
 15749  0037B0                     __ptext77:
 15750                           	opt stack 0
 15751  0037B0                     _ExecuteNewChannel:
 15752                           	opt stack 16
 15753                           
 15754                           ;lorawan_eu.c: 679: uint8_t channelIndex;
 15755                           ;lorawan_eu.c: 680: DataRange_t drRange;
 15756                           ;lorawan_eu.c: 681: uint32_t frequency = 0;
 15757                           
 15758                           ;incstack = 0
 15759  0037B0  0E00               	movlw	0
 15760  0037B2  0100               	movlb	0	; () banked
 15761  0037B4  6FAB               	movwf	ExecuteNewChannel@frequency& (0+255),b
 15762  0037B6  0E00               	movlw	0
 15763  0037B8  6FAC               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 15764  0037BA  0E00               	movlw	0
 15765  0037BC  6FAD               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 15766  0037BE  0E00               	movlw	0
 15767  0037C0  6FAE               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 15768                           
 15769                           ; BSR set to: 0
 15770                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 15771  0037C2  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15772  0037C6  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15773  0037CA  50DF               	movf	indf2,w,c
 15774  0037CC  6FAF               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 15775                           
 15776                           ; BSR set to: 0
 15777  0037CE  4BA6               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 15778  0037D0  2BA7               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 15779                           
 15780                           ; BSR set to: 0
 15781                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 15782  0037D2  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15783  0037D6  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15784  0037DA  0EFF               	movlw	255
 15785  0037DC  14DE               	andwf	postinc2,w,c
 15786  0037DE  6FAB               	movwf	ExecuteNewChannel@frequency& (0+255),b
 15787  0037E0  0EFF               	movlw	255
 15788  0037E2  14DE               	andwf	postinc2,w,c
 15789  0037E4  6FAC               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 15790  0037E6  0EFF               	movlw	255
 15791  0037E8  14DE               	andwf	postinc2,w,c
 15792  0037EA  6FAD               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 15793  0037EC  0E00               	movlw	0
 15794  0037EE  14DE               	andwf	postinc2,w,c
 15795  0037F0  6FAE               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 15796                           
 15797                           ; BSR set to: 0
 15798                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 15799  0037F2  C0AB  F09A         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 15800  0037F6  C0AC  F09B         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 15801  0037FA  C0AD  F09C         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 15802  0037FE  C0AE  F09D         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 15803  003802  0E64               	movlw	100
 15804  003804  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 15805  003806  0E00               	movlw	0
 15806  003808  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15807  00380A  0E00               	movlw	0
 15808  00380C  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15809  00380E  0E00               	movlw	0
 15810  003810  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15811  003812  EC72  F03E         	call	___lmul	;wreg free
 15812  003816  C09A  F0AB         	movff	?___lmul,ExecuteNewChannel@frequency
 15813  00381A  C09B  F0AC         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 15814  00381E  C09C  F0AD         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 15815  003822  C09D  F0AE         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 15816                           
 15817                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 15818  003826  0E03               	movlw	3
 15819  003828  0100               	movlb	0	; () banked
 15820  00382A  25A6               	addwf	ExecuteNewChannel@ptr& (0+255),w,b
 15821  00382C  6FA6               	movwf	ExecuteNewChannel@ptr& (0+255),b
 15822  00382E  0E00               	movlw	0
 15823  003830  21A7               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),w,b
 15824  003832  6FA7               	movwf	(ExecuteNewChannel@ptr+1)& (0+255),b
 15825                           
 15826                           ; BSR set to: 0
 15827                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 15828  003834  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15829  003838  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15830  00383C  50DF               	movf	indf2,w,c
 15831  00383E  6FAA               	movwf	ExecuteNewChannel@drRange& (0+255),b
 15832                           
 15833                           ; BSR set to: 0
 15834  003840  4BA6               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 15835  003842  2BA7               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 15836                           
 15837                           ; BSR set to: 0
 15838                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 15839  003844  0E00               	movlw	0
 15840  003846  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 15841  003848  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15842  00384A  EC20  F044         	call	_ValidateChannelId
 15843  00384E  0900               	iorlw	0
 15844  003850  A4D8               	btfss	status,2,c
 15845  003852  D04B               	goto	l1123
 15846                           
 15847                           ;lorawan_eu.c: 692: {
 15848                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 15849  003854  C0AB  F060         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 15850  003858  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 15851  00385C  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 15852  003860  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 15853  003864  EC66  F03C         	call	_ValidateFrequency	;wreg free
 15854  003868  0900               	iorlw	0
 15855  00386A  B4D8               	btfsc	status,2,c
 15856  00386C  D007               	goto	u16950
 15857  00386E  0100               	movlb	0	; () banked
 15858  003870  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 15859  003872  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 15860  003874  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 15861  003876  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 15862  003878  A4D8               	btfss	status,2,c
 15863  00387A  D018               	goto	l1120
 15864  00387C                     u16950:
 15865                           
 15866                           ;lorawan_eu.c: 694: {
 15867                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 15868                           
 15869                           ; BSR set to: 0
 15870  00387C  0102               	movlb	2	; () banked
 15871  00387E  51A7               	movf	(_loRa+167)& (0+255),w,b
 15872  003880  0D02               	mullw	2
 15873  003882  0E00               	movlw	low _loRa
 15874  003884  0100               	movlb	0	; () banked
 15875  003886  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 15876  003888  0E02               	movlw	high _loRa
 15877  00388A  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 15878  00388C  0EA8               	movlw	168
 15879  00388E  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15880  003890  0E00               	movlw	0
 15881  003892  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15882  003894  50F3               	movf	prodl,w,c
 15883  003896  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15884  003898  50F4               	movf	prodh,w,c
 15885  00389A  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15886  00389C  0E01               	movlw	1
 15887  00389E  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 15888  0038A0  6ED9               	movwf	fsr2l,c
 15889  0038A2  0E00               	movlw	0
 15890  0038A4  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 15891  0038A6  6EDA               	movwf	fsr2h,c
 15892  0038A8  0102               	movlb	2	; () banked
 15893  0038AA  8EDF               	bsf	indf2,7,c
 15894  0038AC                     l1120:
 15895                           
 15896                           ;lorawan_eu.c: 696: }
 15897                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 15898                           
 15899                           ; BSR set to: 2
 15900  0038AC  0100               	movlb	0	; () banked
 15901  0038AE  51AA               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 15902  0038B0  EC55  F040         	call	_ValidateDataRange
 15903  0038B4  0900               	iorlw	0
 15904  0038B6  A4D8               	btfss	status,2,c
 15905  0038B8  D018               	goto	l1123
 15906                           
 15907                           ;lorawan_eu.c: 699: {
 15908                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 15909  0038BA  0102               	movlb	2	; () banked
 15910  0038BC  51A7               	movf	(_loRa+167)& (0+255),w,b
 15911  0038BE  0D02               	mullw	2
 15912  0038C0  0E00               	movlw	low _loRa
 15913  0038C2  0100               	movlb	0	; () banked
 15914  0038C4  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 15915  0038C6  0E02               	movlw	high _loRa
 15916  0038C8  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 15917  0038CA  0EA8               	movlw	168
 15918  0038CC  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15919  0038CE  0E00               	movlw	0
 15920  0038D0  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15921  0038D2  50F3               	movf	prodl,w,c
 15922  0038D4  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15923  0038D6  50F4               	movf	prodh,w,c
 15924  0038D8  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15925  0038DA  0E01               	movlw	1
 15926  0038DC  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 15927  0038DE  6ED9               	movwf	fsr2l,c
 15928  0038E0  0E00               	movlw	0
 15929  0038E2  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 15930  0038E4  6EDA               	movwf	fsr2h,c
 15931  0038E6  0102               	movlb	2	; () banked
 15932  0038E8  8CDF               	bsf	indf2,6,c
 15933  0038EA                     l1123:
 15934                           
 15935                           ;lorawan_eu.c: 701: }
 15936                           ;lorawan_eu.c: 702: }
 15937                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 15938                           
 15939                           ; BSR set to: 2
 15940  0038EA  0102               	movlb	2	; () banked
 15941  0038EC  51A7               	movf	(_loRa+167)& (0+255),w,b
 15942  0038EE  0D02               	mullw	2
 15943  0038F0  0E00               	movlw	low _loRa
 15944  0038F2  0100               	movlb	0	; () banked
 15945  0038F4  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 15946  0038F6  0E02               	movlw	high _loRa
 15947  0038F8  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 15948  0038FA  0EA8               	movlw	168
 15949  0038FC  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15950  0038FE  0E00               	movlw	0
 15951  003900  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15952  003902  50F3               	movf	prodl,w,c
 15953  003904  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15954  003906  50F4               	movf	prodh,w,c
 15955  003908  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15956  00390A  0E01               	movlw	1
 15957  00390C  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 15958  00390E  6ED9               	movwf	fsr2l,c
 15959  003910  0E00               	movlw	0
 15960  003912  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 15961  003914  6EDA               	movwf	fsr2h,c
 15962  003916  0102               	movlb	2	; () banked
 15963  003918  AEDF               	btfss	indf2,7,c
 15964  00391A  D07D               	goto	l1124
 15965                           
 15966                           ; BSR set to: 2
 15967  00391C  51A7               	movf	(_loRa+167)& (0+255),w,b
 15968  00391E  0D02               	mullw	2
 15969  003920  0E00               	movlw	low _loRa
 15970  003922  0100               	movlb	0	; () banked
 15971  003924  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 15972  003926  0E02               	movlw	high _loRa
 15973  003928  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 15974  00392A  0EA8               	movlw	168
 15975  00392C  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15976  00392E  0E00               	movlw	0
 15977  003930  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15978  003932  50F3               	movf	prodl,w,c
 15979  003934  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15980  003936  50F4               	movf	prodh,w,c
 15981  003938  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15982  00393A  0E01               	movlw	1
 15983  00393C  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 15984  00393E  6ED9               	movwf	fsr2l,c
 15985  003940  0E00               	movlw	0
 15986  003942  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 15987  003944  6EDA               	movwf	fsr2h,c
 15988  003946  0102               	movlb	2	; () banked
 15989  003948  ACDF               	btfss	indf2,6,c
 15990  00394A  D065               	goto	l1124
 15991                           
 15992                           ; BSR set to: 2
 15993                           ;lorawan_eu.c: 705: {
 15994                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 15995  00394C  0E10               	movlw	16
 15996  00394E  61DA               	cpfslt	(_loRa+218)& (0+255),b
 15997  003950  D02E               	goto	l1125
 15998                           
 15999                           ; BSR set to: 2
 16000                           ;lorawan_eu.c: 707: {
 16001                           ;lorawan_eu.c: 708: if (frequency != 0)
 16002  003952  0100               	movlb	0	; () banked
 16003  003954  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16004  003956  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16005  003958  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16006  00395A  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16007  00395C  B4D8               	btfsc	status,2,c
 16008  00395E  D020               	goto	l1126
 16009                           
 16010                           ; BSR set to: 0
 16011                           ;lorawan_eu.c: 709: {
 16012                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 16013  003960  C0AB  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 16014  003964  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 16015  003968  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 16016  00396C  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 16017  003970  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16018  003972  EC9B  F040         	call	_UpdateFrequency
 16019                           
 16020                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 16021  003976  C0AA  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 16022  00397A  0100               	movlb	0	; () banked
 16023  00397C  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16024  00397E  ECD2  F029         	call	_UpdateDataRange
 16025                           
 16026                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 16027  003982  0E01               	movlw	1
 16028  003984  0100               	movlb	0	; () banked
 16029  003986  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 16030  003988  0E2E               	movlw	46
 16031  00398A  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 16032  00398C  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16033  00398E  ECBD  F040         	call	_UpdateDutyCycle
 16034                           
 16035                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 16036  003992  0E01               	movlw	1
 16037  003994  0100               	movlb	0	; () banked
 16038  003996  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16039  003998  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16040  00399A  ECBE  F027         	call	_UpdateChannelIdStatus
 16041                           
 16042                           ;lorawan_eu.c: 714: }
 16043  00399E  D039               	goto	l1130
 16044  0039A0                     l1126:
 16045                           
 16046                           ;lorawan_eu.c: 715: else
 16047                           ;lorawan_eu.c: 716: {
 16048                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 16049  0039A0  0E00               	movlw	0
 16050  0039A2  0100               	movlb	0	; () banked
 16051  0039A4  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 16052  0039A6  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16053  0039A8  EC18  F03E         	call	_LORAWAN_SetChannelIdStatus
 16054                           
 16055                           ;lorawan_eu.c: 718: }
 16056                           ;lorawan_eu.c: 719: }
 16057  0039AC  D032               	goto	l1130
 16058  0039AE                     l1125:
 16059                           
 16060                           ;lorawan_eu.c: 720: else
 16061                           ;lorawan_eu.c: 721: {
 16062                           ;lorawan_eu.c: 722: if (frequency != 0)
 16063  0039AE  0100               	movlb	0	; () banked
 16064  0039B0  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16065  0039B2  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16066  0039B4  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16067  0039B6  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16068  0039B8  B4D8               	btfsc	status,2,c
 16069  0039BA  D024               	goto	l1129
 16070                           
 16071                           ; BSR set to: 0
 16072                           ;lorawan_eu.c: 723: {
 16073                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 16074  0039BC  C0AB  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 16075  0039C0  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 16076  0039C4  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 16077  0039C8  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 16078  0039CC  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16079  0039CE  0F10               	addlw	16
 16080  0039D0  EC9B  F040         	call	_UpdateFrequency
 16081                           
 16082                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 16083  0039D4  C0AA  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 16084  0039D8  0100               	movlb	0	; () banked
 16085  0039DA  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16086  0039DC  0F10               	addlw	16
 16087  0039DE  ECD2  F029         	call	_UpdateDataRange
 16088                           
 16089                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 16090  0039E2  0E01               	movlw	1
 16091  0039E4  0100               	movlb	0	; () banked
 16092  0039E6  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 16093  0039E8  0E2E               	movlw	46
 16094  0039EA  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 16095  0039EC  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16096  0039EE  0F10               	addlw	16
 16097  0039F0  ECBD  F040         	call	_UpdateDutyCycle
 16098                           
 16099                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 16100  0039F4  0E01               	movlw	1
 16101  0039F6  0100               	movlb	0	; () banked
 16102  0039F8  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16103  0039FA  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16104  0039FC  0F10               	addlw	16
 16105  0039FE  ECBE  F027         	call	_UpdateChannelIdStatus
 16106                           
 16107                           ;lorawan_eu.c: 728: }
 16108  003A02  D007               	goto	l1130
 16109  003A04                     l1129:
 16110                           
 16111                           ;lorawan_eu.c: 729: else
 16112                           ;lorawan_eu.c: 730: {
 16113                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 16114  003A04  0E00               	movlw	0
 16115  003A06  0100               	movlb	0	; () banked
 16116  003A08  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 16117  003A0A  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16118  003A0C  0F10               	addlw	16
 16119  003A0E  EC18  F03E         	call	_LORAWAN_SetChannelIdStatus
 16120  003A12                     l1130:
 16121                           
 16122                           ;lorawan_eu.c: 732: }
 16123                           ;lorawan_eu.c: 733: }
 16124                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 16125  003A12  0102               	movlb	2	; () banked
 16126  003A14  8703               	bsf	(_loRa+3)& (0+255),3,b
 16127  003A16                     l1124:
 16128                           
 16129                           ; BSR set to: 2
 16130                           ;lorawan_eu.c: 736: }
 16131                           ;lorawan_eu.c: 737: return ptr;
 16132                           
 16133                           ; BSR set to: 2
 16134  003A16  C0A6  F0A6         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 16135  003A1A  C0A7  F0A7         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 16136  003A1E  0012               	return	
 16137  003A20                     __end_of_ExecuteNewChannel:
 16138                           	opt stack 0
 16139                           tosu	equ	0xFFF
 16140                           tosh	equ	0xFFE
 16141                           tosl	equ	0xFFD
 16142                           pclath	equ	0xFFA
 16143                           tblptru	equ	0xFF8
 16144                           tblptrh	equ	0xFF7
 16145                           tblptrl	equ	0xFF6
 16146                           tablat	equ	0xFF5
 16147                           prodh	equ	0xFF4
 16148                           prodl	equ	0xFF3
 16149                           intcon	equ	0xFF2
 16150                           intcon2	equ	0xFF1
 16151                           intcon3	equ	0xFF0
 16152                           indf0	equ	0xFEF
 16153                           postinc0	equ	0xFEE
 16154                           fsr0h	equ	0xFEA
 16155                           fsr0l	equ	0xFE9
 16156                           wreg	equ	0xFE8
 16157                           postinc1	equ	0xFE6
 16158                           postdec1	equ	0xFE5
 16159                           plusw1	equ	0xFE3
 16160                           fsr1h	equ	0xFE2
 16161                           fsr1l	equ	0xFE1
 16162                           indf2	equ	0xFDF
 16163                           postinc2	equ	0xFDE
 16164                           postdec2	equ	0xFDD
 16165                           fsr2h	equ	0xFDA
 16166                           fsr2l	equ	0xFD9
 16167                           status	equ	0xFD8
 16168                           
 16169 ;; *************** function _ValidateFrequency *****************
 16170 ;; Defined at:
 16171 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16172 ;; Parameters:    Size  Location     Type
 16173 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 16174 ;; Auto vars:     Size  Location     Type
 16175 ;;  result          1    4[BANK0 ] enum E7249
 16176 ;; Return value:  Size  Location     Type
 16177 ;;                  1    wreg      enum E7249
 16178 ;; Registers used:
 16179 ;;		wreg, status,2, status,0
 16180 ;; Tracked objects:
 16181 ;;		On entry : 0/0
 16182 ;;		On exit  : 0/0
 16183 ;;		Unchanged: 0/0
 16184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16185 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16188 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16189 ;;Total ram usage:        5 bytes
 16190 ;; Hardware stack levels used:    1
 16191 ;; Hardware stack levels required when called:    7
 16192 ;; This function calls:
 16193 ;;		Nothing
 16194 ;; This function is called by:
 16195 ;;		_ExecuteNewChannel
 16196 ;;		_ExecuteRxParamSetupReq
 16197 ;;		_UpdateCfList
 16198 ;;		_LORAWAN_SetReceiveWindow2Parameters
 16199 ;;		_LORAWAN_SetFrequency
 16200 ;; This function uses a non-reentrant model
 16201 ;;
 16202                           
 16203                           	psect	text78
 16204  0078CC                     __ptext78:
 16205                           	opt stack 0
 16206  0078CC                     _ValidateFrequency:
 16207                           	opt stack 18
 16208                           
 16209                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 16210                           
 16211                           ; BSR set to: 2
 16212                           ;incstack = 0
 16213  0078CC  0E00               	movlw	0
 16214  0078CE  0100               	movlb	0	; () banked
 16215  0078D0  6F64               	movwf	ValidateFrequency@result& (0+255),b
 16216                           
 16217                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 16218  0078D2  0102               	movlb	2	; () banked
 16219  0078D4  51A4               	movf	(_loRa+164)& (0+255),w,b
 16220  0078D6  A4D8               	btfss	status,2,c
 16221  0078D8  D013               	goto	l1236
 16222                           
 16223                           ; BSR set to: 2
 16224                           ;lorawan_eu.c: 1093: {
 16225                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 16226  0078DA  0E81               	movlw	129
 16227  0078DC  0100               	movlb	0	; () banked
 16228  0078DE  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16229  0078E0  0E25               	movlw	37
 16230  0078E2  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16231  0078E4  0EDB               	movlw	219
 16232  0078E6  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16233  0078E8  0E33               	movlw	51
 16234  0078EA  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16235  0078EC  B0D8               	btfsc	status,0,c
 16236  0078EE  D01D               	goto	u15930
 16237                           
 16238                           ; BSR set to: 0
 16239  0078F0  0EC0               	movlw	192
 16240  0078F2  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16241  0078F4  0E55               	movlw	85
 16242  0078F6  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16243  0078F8  0E70               	movlw	112
 16244  0078FA  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16245  0078FC  0E33               	movlw	51
 16246  0078FE  D012               	goto	L30
 16247  007900                     l1236:
 16248                           
 16249                           ;lorawan_eu.c: 1099: else
 16250                           ;lorawan_eu.c: 1100: {
 16251                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 16252                           
 16253                           ; BSR set to: 0
 16254  007900  0E71               	movlw	113
 16255  007902  0100               	movlb	0	; () banked
 16256  007904  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16257  007906  0E5E               	movlw	94
 16258  007908  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16259  00790A  0EEA               	movlw	234
 16260  00790C  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16261  00790E  0E19               	movlw	25
 16262  007910  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16263  007912  B0D8               	btfsc	status,0,c
 16264  007914  D00A               	goto	u15930
 16265                           
 16266                           ; BSR set to: 0
 16267  007916  0E90               	movlw	144
 16268  007918  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16269  00791A  0ED1               	movlw	209
 16270  00791C  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16271  00791E  0ECF               	movlw	207
 16272  007920  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16273  007922  0E19               	movlw	25
 16274  007924                     L30:
 16275  007924  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16276  007926  B0D8               	btfsc	status,0,c
 16277  007928  D002               	goto	l1241
 16278  00792A                     u15930:
 16279                           
 16280                           ; BSR set to: 0
 16281                           ;lorawan_eu.c: 1102: {
 16282                           ;lorawan_eu.c: 1103: result = INVALID_PARAMETER ;
 16283                           
 16284                           ; BSR set to: 0
 16285  00792A  0E03               	movlw	3
 16286  00792C  6F64               	movwf	ValidateFrequency@result& (0+255),b
 16287  00792E                     l1241:
 16288                           
 16289                           ; BSR set to: 0
 16290                           ;lorawan_eu.c: 1104: }
 16291                           ;lorawan_eu.c: 1105: }
 16292                           ;lorawan_eu.c: 1107: return result;
 16293                           
 16294                           ; BSR set to: 0
 16295  00792E  5164               	movf	ValidateFrequency@result& (0+255),w,b
 16296  007930  0012               	return	
 16297  007932                     __end_of_ValidateFrequency:
 16298                           	opt stack 0
 16299                           tosu	equ	0xFFF
 16300                           tosh	equ	0xFFE
 16301                           tosl	equ	0xFFD
 16302                           pclath	equ	0xFFA
 16303                           tblptru	equ	0xFF8
 16304                           tblptrh	equ	0xFF7
 16305                           tblptrl	equ	0xFF6
 16306                           tablat	equ	0xFF5
 16307                           prodh	equ	0xFF4
 16308                           prodl	equ	0xFF3
 16309                           intcon	equ	0xFF2
 16310                           intcon2	equ	0xFF1
 16311                           intcon3	equ	0xFF0
 16312                           indf0	equ	0xFEF
 16313                           postinc0	equ	0xFEE
 16314                           fsr0h	equ	0xFEA
 16315                           fsr0l	equ	0xFE9
 16316                           wreg	equ	0xFE8
 16317                           postinc1	equ	0xFE6
 16318                           postdec1	equ	0xFE5
 16319                           plusw1	equ	0xFE3
 16320                           fsr1h	equ	0xFE2
 16321                           fsr1l	equ	0xFE1
 16322                           indf2	equ	0xFDF
 16323                           postinc2	equ	0xFDE
 16324                           postdec2	equ	0xFDD
 16325                           fsr2h	equ	0xFDA
 16326                           fsr2l	equ	0xFD9
 16327                           status	equ	0xFD8
 16328                           
 16329 ;; *************** function _ValidateDataRange *****************
 16330 ;; Defined at:
 16331 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16332 ;; Parameters:    Size  Location     Type
 16333 ;;  dataRangeNew    1    wreg     unsigned char 
 16334 ;; Auto vars:     Size  Location     Type
 16335 ;;  dataRangeNew    1    3[BANK0 ] unsigned char 
 16336 ;;  dataRateMin     1    5[BANK0 ] unsigned char 
 16337 ;;  dataRateMax     1    4[BANK0 ] unsigned char 
 16338 ;;  result          1    2[BANK0 ] enum E7249
 16339 ;; Return value:  Size  Location     Type
 16340 ;;                  1    wreg      enum E7249
 16341 ;; Registers used:
 16342 ;;		wreg, status,2, status,0, cstack
 16343 ;; Tracked objects:
 16344 ;;		On entry : 0/0
 16345 ;;		On exit  : 0/0
 16346 ;;		Unchanged: 0/0
 16347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16349 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16351 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16352 ;;Total ram usage:        4 bytes
 16353 ;; Hardware stack levels used:    1
 16354 ;; Hardware stack levels required when called:    8
 16355 ;; This function calls:
 16356 ;;		_ValidateDataRate
 16357 ;; This function is called by:
 16358 ;;		_ExecuteNewChannel
 16359 ;;		_LORAWAN_SetDataRange
 16360 ;; This function uses a non-reentrant model
 16361 ;;
 16362                           
 16363                           	psect	text79
 16364  0080AA                     __ptext79:
 16365                           	opt stack 0
 16366  0080AA                     _ValidateDataRange:
 16367                           	opt stack 16
 16368                           
 16369                           ; BSR set to: 0
 16370                           ;incstack = 0
 16371                           ;ValidateDataRange@dataRangeNew stored from wreg
 16372  0080AA  0100               	movlb	0	; () banked
 16373  0080AC  6F63               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 16374                           
 16375                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 16376  0080AE  0E00               	movlw	0
 16377  0080B0  0100               	movlb	0	; () banked
 16378  0080B2  6F62               	movwf	ValidateDataRange@result& (0+255),b
 16379                           
 16380                           ; BSR set to: 0
 16381                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 16382                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 16383  0080B4  5163               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 16384  0080B6  0B0F               	andlw	15
 16385  0080B8  6F65               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 16386                           
 16387                           ; BSR set to: 0
 16388                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 16389  0080BA  3963               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 16390  0080BC  0B0F               	andlw	15
 16391  0080BE  0B0F               	andlw	15
 16392  0080C0  6F64               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 16393                           
 16394                           ; BSR set to: 0
 16395                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 16396  0080C2  5164               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 16397  0080C4  EC8D  F045         	call	_ValidateDataRate
 16398  0080C8  0900               	iorlw	0
 16399  0080CA  A4D8               	btfss	status,2,c
 16400  0080CC  D00C               	goto	u15960
 16401  0080CE  0100               	movlb	0	; () banked
 16402  0080D0  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 16403  0080D2  EC8D  F045         	call	_ValidateDataRate
 16404  0080D6  0900               	iorlw	0
 16405  0080D8  A4D8               	btfss	status,2,c
 16406  0080DA  D005               	goto	u15960
 16407  0080DC  0100               	movlb	0	; () banked
 16408  0080DE  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 16409  0080E0  5D64               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 16410  0080E2  B0D8               	btfsc	status,0,c
 16411  0080E4  D003               	goto	l1247
 16412  0080E6                     u15960:
 16413                           
 16414                           ;lorawan_eu.c: 1119: {
 16415                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 16416                           
 16417                           ; BSR set to: 0
 16418  0080E6  0E03               	movlw	3
 16419  0080E8  0100               	movlb	0	; () banked
 16420  0080EA  6F62               	movwf	ValidateDataRange@result& (0+255),b
 16421  0080EC                     l1247:
 16422                           
 16423                           ; BSR set to: 0
 16424                           ;lorawan_eu.c: 1121: }
 16425                           ;lorawan_eu.c: 1122: return result;
 16426  0080EC  5162               	movf	ValidateDataRange@result& (0+255),w,b
 16427  0080EE  0012               	return	
 16428  0080F0                     __end_of_ValidateDataRange:
 16429                           	opt stack 0
 16430                           tosu	equ	0xFFF
 16431                           tosh	equ	0xFFE
 16432                           tosl	equ	0xFFD
 16433                           pclath	equ	0xFFA
 16434                           tblptru	equ	0xFF8
 16435                           tblptrh	equ	0xFF7
 16436                           tblptrl	equ	0xFF6
 16437                           tablat	equ	0xFF5
 16438                           prodh	equ	0xFF4
 16439                           prodl	equ	0xFF3
 16440                           intcon	equ	0xFF2
 16441                           intcon2	equ	0xFF1
 16442                           intcon3	equ	0xFF0
 16443                           indf0	equ	0xFEF
 16444                           postinc0	equ	0xFEE
 16445                           fsr0h	equ	0xFEA
 16446                           fsr0l	equ	0xFE9
 16447                           wreg	equ	0xFE8
 16448                           postinc1	equ	0xFE6
 16449                           postdec1	equ	0xFE5
 16450                           plusw1	equ	0xFE3
 16451                           fsr1h	equ	0xFE2
 16452                           fsr1l	equ	0xFE1
 16453                           indf2	equ	0xFDF
 16454                           postinc2	equ	0xFDE
 16455                           postdec2	equ	0xFDD
 16456                           fsr2h	equ	0xFDA
 16457                           fsr2l	equ	0xFD9
 16458                           status	equ	0xFD8
 16459                           
 16460 ;; *************** function _UpdateFrequency *****************
 16461 ;; Defined at:
 16462 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16463 ;; Parameters:    Size  Location     Type
 16464 ;;  channelId       1    wreg     unsigned char 
 16465 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 16466 ;; Auto vars:     Size  Location     Type
 16467 ;;  channelId       1    4[BANK0 ] unsigned char 
 16468 ;; Return value:  Size  Location     Type
 16469 ;;                  1    wreg      void 
 16470 ;; Registers used:
 16471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16472 ;; Tracked objects:
 16473 ;;		On entry : 0/0
 16474 ;;		On exit  : 0/0
 16475 ;;		Unchanged: 0/0
 16476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16477 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16478 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16480 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16481 ;;Total ram usage:        5 bytes
 16482 ;; Hardware stack levels used:    1
 16483 ;; Hardware stack levels required when called:    7
 16484 ;; This function calls:
 16485 ;;		Nothing
 16486 ;; This function is called by:
 16487 ;;		_ExecuteNewChannel
 16488 ;;		_LORAWAN_SetFrequency
 16489 ;; This function uses a non-reentrant model
 16490 ;;
 16491                           
 16492                           	psect	text80
 16493  008136                     __ptext80:
 16494                           	opt stack 0
 16495  008136                     _UpdateFrequency:
 16496                           	opt stack 17
 16497                           
 16498                           ; BSR set to: 0
 16499                           ;incstack = 0
 16500                           ;UpdateFrequency@channelId stored from wreg
 16501  008136  0100               	movlb	0	; () banked
 16502  008138  6F64               	movwf	UpdateFrequency@channelId& (0+255),b
 16503                           
 16504                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 16505  00813A  0100               	movlb	0	; () banked
 16506  00813C  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 16507  00813E  0D0E               	mullw	14
 16508  008140  0E00               	movlw	low _Channels
 16509  008142  24F3               	addwf	prodl,w,c
 16510  008144  6ED9               	movwf	fsr2l,c
 16511  008146  0E04               	movlw	high _Channels
 16512  008148  20F4               	addwfc	prodh,w,c
 16513  00814A  6EDA               	movwf	fsr2h,c
 16514  00814C  C060  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 16515  008150  C061  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 16516  008154  C062  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 16517  008158  C063  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 16518                           
 16519                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 16520  00815C  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 16521  00815E  0D0E               	mullw	14
 16522  008160  0E0D               	movlw	13
 16523  008162  26F3               	addwf	prodl,f,c
 16524  008164  0E00               	movlw	0
 16525  008166  22F4               	addwfc	prodh,f,c
 16526  008168  0E00               	movlw	low _Channels
 16527  00816A  24F3               	addwf	prodl,w,c
 16528  00816C  6ED9               	movwf	fsr2l,c
 16529  00816E  0E04               	movlw	high _Channels
 16530  008170  20F4               	addwfc	prodh,w,c
 16531  008172  6EDA               	movwf	fsr2h,c
 16532  008174  0E00               	movlw	0
 16533  008176  80DB               	bsf	plusw2,0,c
 16534                           
 16535                           ; BSR set to: 0
 16536  008178  0012               	return		;funcret
 16537  00817A                     __end_of_UpdateFrequency:
 16538                           	opt stack 0
 16539                           tosu	equ	0xFFF
 16540                           tosh	equ	0xFFE
 16541                           tosl	equ	0xFFD
 16542                           pclath	equ	0xFFA
 16543                           tblptru	equ	0xFF8
 16544                           tblptrh	equ	0xFF7
 16545                           tblptrl	equ	0xFF6
 16546                           tablat	equ	0xFF5
 16547                           prodh	equ	0xFF4
 16548                           prodl	equ	0xFF3
 16549                           intcon	equ	0xFF2
 16550                           intcon2	equ	0xFF1
 16551                           intcon3	equ	0xFF0
 16552                           indf0	equ	0xFEF
 16553                           postinc0	equ	0xFEE
 16554                           fsr0h	equ	0xFEA
 16555                           fsr0l	equ	0xFE9
 16556                           wreg	equ	0xFE8
 16557                           postinc1	equ	0xFE6
 16558                           postdec1	equ	0xFE5
 16559                           plusw1	equ	0xFE3
 16560                           fsr1h	equ	0xFE2
 16561                           fsr1l	equ	0xFE1
 16562                           indf2	equ	0xFDF
 16563                           postinc2	equ	0xFDE
 16564                           postdec2	equ	0xFDD
 16565                           plusw2	equ	0xFDB
 16566                           fsr2h	equ	0xFDA
 16567                           fsr2l	equ	0xFD9
 16568                           status	equ	0xFD8
 16569                           
 16570 ;; *************** function _UpdateDutyCycle *****************
 16571 ;; Defined at:
 16572 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16573 ;; Parameters:    Size  Location     Type
 16574 ;;  channelId       1    wreg     unsigned char 
 16575 ;;  dutyCycleNew    2    0[BANK0 ] unsigned int 
 16576 ;; Auto vars:     Size  Location     Type
 16577 ;;  channelId       1    2[BANK0 ] unsigned char 
 16578 ;; Return value:  Size  Location     Type
 16579 ;;                  1    wreg      void 
 16580 ;; Registers used:
 16581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16582 ;; Tracked objects:
 16583 ;;		On entry : 0/0
 16584 ;;		On exit  : 0/0
 16585 ;;		Unchanged: 0/0
 16586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16587 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16588 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16590 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16591 ;;Total ram usage:        3 bytes
 16592 ;; Hardware stack levels used:    1
 16593 ;; Hardware stack levels required when called:    7
 16594 ;; This function calls:
 16595 ;;		Nothing
 16596 ;; This function is called by:
 16597 ;;		_ExecuteNewChannel
 16598 ;;		_LORAWAN_SetDutyCycle
 16599 ;; This function uses a non-reentrant model
 16600 ;;
 16601                           
 16602                           	psect	text81
 16603  00817A                     __ptext81:
 16604                           	opt stack 0
 16605  00817A                     _UpdateDutyCycle:
 16606                           	opt stack 17
 16607                           
 16608                           ; BSR set to: 0
 16609                           ;incstack = 0
 16610                           ;UpdateDutyCycle@channelId stored from wreg
 16611  00817A  0100               	movlb	0	; () banked
 16612  00817C  6F62               	movwf	UpdateDutyCycle@channelId& (0+255),b
 16613                           
 16614                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 16615  00817E  0100               	movlb	0	; () banked
 16616  008180  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 16617  008182  0D0E               	mullw	14
 16618  008184  0E06               	movlw	6
 16619  008186  26F3               	addwf	prodl,f,c
 16620  008188  0E00               	movlw	0
 16621  00818A  22F4               	addwfc	prodh,f,c
 16622  00818C  0E00               	movlw	low _Channels
 16623  00818E  24F3               	addwf	prodl,w,c
 16624  008190  6ED9               	movwf	fsr2l,c
 16625  008192  0E04               	movlw	high _Channels
 16626  008194  20F4               	addwfc	prodh,w,c
 16627  008196  6EDA               	movwf	fsr2h,c
 16628  008198  C060  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 16629  00819C  C061  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 16630                           
 16631                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 16632  0081A0  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 16633  0081A2  0D0E               	mullw	14
 16634  0081A4  0E0D               	movlw	13
 16635  0081A6  26F3               	addwf	prodl,f,c
 16636  0081A8  0E00               	movlw	0
 16637  0081AA  22F4               	addwfc	prodh,f,c
 16638  0081AC  0E00               	movlw	low _Channels
 16639  0081AE  24F3               	addwf	prodl,w,c
 16640  0081B0  6ED9               	movwf	fsr2l,c
 16641  0081B2  0E04               	movlw	high _Channels
 16642  0081B4  20F4               	addwfc	prodh,w,c
 16643  0081B6  6EDA               	movwf	fsr2h,c
 16644  0081B8  0E00               	movlw	0
 16645  0081BA  84DB               	bsf	plusw2,2,c
 16646                           
 16647                           ; BSR set to: 0
 16648  0081BC  0012               	return		;funcret
 16649  0081BE                     __end_of_UpdateDutyCycle:
 16650                           	opt stack 0
 16651                           tosu	equ	0xFFF
 16652                           tosh	equ	0xFFE
 16653                           tosl	equ	0xFFD
 16654                           pclath	equ	0xFFA
 16655                           tblptru	equ	0xFF8
 16656                           tblptrh	equ	0xFF7
 16657                           tblptrl	equ	0xFF6
 16658                           tablat	equ	0xFF5
 16659                           prodh	equ	0xFF4
 16660                           prodl	equ	0xFF3
 16661                           intcon	equ	0xFF2
 16662                           intcon2	equ	0xFF1
 16663                           intcon3	equ	0xFF0
 16664                           indf0	equ	0xFEF
 16665                           postinc0	equ	0xFEE
 16666                           fsr0h	equ	0xFEA
 16667                           fsr0l	equ	0xFE9
 16668                           wreg	equ	0xFE8
 16669                           postinc1	equ	0xFE6
 16670                           postdec1	equ	0xFE5
 16671                           plusw1	equ	0xFE3
 16672                           fsr1h	equ	0xFE2
 16673                           fsr1l	equ	0xFE1
 16674                           indf2	equ	0xFDF
 16675                           postinc2	equ	0xFDE
 16676                           postdec2	equ	0xFDD
 16677                           plusw2	equ	0xFDB
 16678                           fsr2h	equ	0xFDA
 16679                           fsr2l	equ	0xFD9
 16680                           status	equ	0xFD8
 16681                           
 16682 ;; *************** function _UpdateDataRange *****************
 16683 ;; Defined at:
 16684 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16685 ;; Parameters:    Size  Location     Type
 16686 ;;  channelId       1    wreg     unsigned char 
 16687 ;;  dataRangeNew    1    0[BANK0 ] unsigned char 
 16688 ;; Auto vars:     Size  Location     Type
 16689 ;;  channelId       1    2[BANK0 ] unsigned char 
 16690 ;;  i               1    3[BANK0 ] unsigned char 
 16691 ;; Return value:  Size  Location     Type
 16692 ;;                  1    wreg      void 
 16693 ;; Registers used:
 16694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16695 ;; Tracked objects:
 16696 ;;		On entry : 0/0
 16697 ;;		On exit  : 0/0
 16698 ;;		Unchanged: 0/0
 16699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16700 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16701 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16702 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16703 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16704 ;;Total ram usage:        4 bytes
 16705 ;; Hardware stack levels used:    1
 16706 ;; Hardware stack levels required when called:    7
 16707 ;; This function calls:
 16708 ;;		Nothing
 16709 ;; This function is called by:
 16710 ;;		_ExecuteNewChannel
 16711 ;;		_LORAWAN_SetDataRange
 16712 ;; This function uses a non-reentrant model
 16713 ;;
 16714                           
 16715                           	psect	text82
 16716  0053A4                     __ptext82:
 16717                           	opt stack 0
 16718  0053A4                     _UpdateDataRange:
 16719                           	opt stack 17
 16720                           
 16721                           ; BSR set to: 0
 16722                           ;incstack = 0
 16723                           ;UpdateDataRange@channelId stored from wreg
 16724  0053A4  0100               	movlb	0	; () banked
 16725  0053A6  6F62               	movwf	UpdateDataRange@channelId& (0+255),b
 16726                           
 16727                           ;lorawan_eu.c: 1011: uint8_t i;
 16728                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 16729  0053A8  0E07               	movlw	7
 16730  0053AA  0102               	movlb	2	; () banked
 16731  0053AC  6FEB               	movwf	(_loRa+235)& (0+255),b
 16732                           
 16733                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 16734  0053AE  0E00               	movlw	0
 16735  0053B0  6FEC               	movwf	(_loRa+236)& (0+255),b
 16736                           
 16737                           ; BSR set to: 2
 16738                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 16739  0053B2  0100               	movlb	0	; () banked
 16740  0053B4  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 16741  0053B6  0D0E               	mullw	14
 16742  0053B8  0E05               	movlw	5
 16743  0053BA  26F3               	addwf	prodl,f,c
 16744  0053BC  0E00               	movlw	0
 16745  0053BE  22F4               	addwfc	prodh,f,c
 16746  0053C0  0E00               	movlw	low _Channels
 16747  0053C2  24F3               	addwf	prodl,w,c
 16748  0053C4  6ED9               	movwf	fsr2l,c
 16749  0053C6  0E04               	movlw	high _Channels
 16750  0053C8  20F4               	addwfc	prodh,w,c
 16751  0053CA  6EDA               	movwf	fsr2h,c
 16752  0053CC  C060  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 16753                           
 16754                           ; BSR set to: 0
 16755                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 16756  0053D0  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 16757  0053D2  0D0E               	mullw	14
 16758  0053D4  0E0D               	movlw	13
 16759  0053D6  26F3               	addwf	prodl,f,c
 16760  0053D8  0E00               	movlw	0
 16761  0053DA  22F4               	addwfc	prodh,f,c
 16762  0053DC  0E00               	movlw	low _Channels
 16763  0053DE  24F3               	addwf	prodl,w,c
 16764  0053E0  6ED9               	movwf	fsr2l,c
 16765  0053E2  0E04               	movlw	high _Channels
 16766  0053E4  20F4               	addwfc	prodh,w,c
 16767  0053E6  6EDA               	movwf	fsr2h,c
 16768  0053E8  0E00               	movlw	0
 16769  0053EA  82DB               	bsf	plusw2,1,c
 16770                           
 16771                           ; BSR set to: 0
 16772                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 16773  0053EC  0E00               	movlw	0
 16774  0053EE  6F63               	movwf	UpdateDataRange@i& (0+255),b
 16775  0053F0  D06D               	goto	l1211
 16776  0053F2                     
 16777                           ; BSR set to: 0
 16778                           ;lorawan_eu.c: 1020: {
 16779                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 16780                           
 16781                           ; BSR set to: 0
 16782  0053F2  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16783  0053F4  0D0E               	mullw	14
 16784  0053F6  0E05               	movlw	5
 16785  0053F8  26F3               	addwf	prodl,f,c
 16786  0053FA  0E00               	movlw	0
 16787  0053FC  22F4               	addwfc	prodh,f,c
 16788  0053FE  0E00               	movlw	low _Channels
 16789  005400  24F3               	addwf	prodl,w,c
 16790  005402  6ED9               	movwf	fsr2l,c
 16791  005404  0E04               	movlw	high _Channels
 16792  005406  20F4               	addwfc	prodh,w,c
 16793  005408  6EDA               	movwf	fsr2h,c
 16794  00540A  0104               	movlb	4	; () banked
 16795  00540C  50DF               	movf	223,w,c
 16796  00540E  0B0F               	andlw	15
 16797  005410  0100               	movlb	0	; () banked
 16798  005412  6F61               	movwf	??_UpdateDataRange& (0+255),b
 16799  005414  0102               	movlb	2	; () banked
 16800  005416  51EB               	movf	(_loRa+235)& (0+255),w,b
 16801  005418  0100               	movlb	0	; () banked
 16802  00541A  5D61               	subwf	??_UpdateDataRange& (0+255),w,b
 16803  00541C  B0D8               	btfsc	status,0,c
 16804  00541E  D020               	goto	l1213
 16805                           
 16806                           ; BSR set to: 0
 16807  005420  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16808  005422  0D0E               	mullw	14
 16809  005424  0E04               	movlw	4
 16810  005426  26F3               	addwf	prodl,f,c
 16811  005428  0E00               	movlw	0
 16812  00542A  22F4               	addwfc	prodh,f,c
 16813  00542C  0E00               	movlw	low _Channels
 16814  00542E  24F3               	addwf	prodl,w,c
 16815  005430  6ED9               	movwf	fsr2l,c
 16816  005432  0E04               	movlw	high _Channels
 16817  005434  20F4               	addwfc	prodh,w,c
 16818  005436  6EDA               	movwf	fsr2h,c
 16819  005438  04DE               	decf	postinc2,w,c
 16820  00543A  A4D8               	btfss	status,2,c
 16821  00543C  D011               	goto	l1213
 16822                           
 16823                           ; BSR set to: 0
 16824                           ;lorawan_eu.c: 1022: {
 16825                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 16826  00543E  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16827  005440  0D0E               	mullw	14
 16828  005442  0E05               	movlw	5
 16829  005444  26F3               	addwf	prodl,f,c
 16830  005446  0E00               	movlw	0
 16831  005448  22F4               	addwfc	prodh,f,c
 16832  00544A  0E00               	movlw	low _Channels
 16833  00544C  24F3               	addwf	prodl,w,c
 16834  00544E  6ED9               	movwf	fsr2l,c
 16835  005450  0E04               	movlw	high _Channels
 16836  005452  20F4               	addwfc	prodh,w,c
 16837  005454  6EDA               	movwf	fsr2h,c
 16838  005456  0104               	movlb	4	; () banked
 16839  005458  50DF               	movf	223,w,c
 16840  00545A  0B0F               	andlw	15
 16841  00545C  0102               	movlb	2	; () banked
 16842  00545E  6FEB               	movwf	(_loRa+235)& (0+255),b
 16843  005460                     l1213:
 16844                           
 16845                           ;lorawan_eu.c: 1024: }
 16846                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 16847  005460  0100               	movlb	0	; () banked
 16848  005462  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16849  005464  0D0E               	mullw	14
 16850  005466  0E05               	movlw	5
 16851  005468  26F3               	addwf	prodl,f,c
 16852  00546A  0E00               	movlw	0
 16853  00546C  22F4               	addwfc	prodh,f,c
 16854  00546E  0E00               	movlw	low _Channels
 16855  005470  24F3               	addwf	prodl,w,c
 16856  005472  6ED9               	movwf	fsr2l,c
 16857  005474  0E04               	movlw	high _Channels
 16858  005476  20F4               	addwfc	prodh,w,c
 16859  005478  6EDA               	movwf	fsr2h,c
 16860  00547A  0104               	movlb	4	; () banked
 16861  00547C  38DF               	swapf	223,w,c
 16862  00547E  0B0F               	andlw	15
 16863  005480  0102               	movlb	2	; () banked
 16864  005482  61EC               	cpfslt	(_loRa+236)& (0+255),b
 16865  005484  D021               	goto	l1214
 16866                           
 16867                           ; BSR set to: 2
 16868  005486  0100               	movlb	0	; () banked
 16869  005488  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16870  00548A  0D0E               	mullw	14
 16871  00548C  0E04               	movlw	4
 16872  00548E  26F3               	addwf	prodl,f,c
 16873  005490  0E00               	movlw	0
 16874  005492  22F4               	addwfc	prodh,f,c
 16875  005494  0E00               	movlw	low _Channels
 16876  005496  24F3               	addwf	prodl,w,c
 16877  005498  6ED9               	movwf	fsr2l,c
 16878  00549A  0E04               	movlw	high _Channels
 16879  00549C  20F4               	addwfc	prodh,w,c
 16880  00549E  6EDA               	movwf	fsr2h,c
 16881  0054A0  04DE               	decf	postinc2,w,c
 16882  0054A2  A4D8               	btfss	status,2,c
 16883  0054A4  D011               	goto	l1214
 16884                           
 16885                           ; BSR set to: 0
 16886                           ;lorawan_eu.c: 1026: {
 16887                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 16888  0054A6  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16889  0054A8  0D0E               	mullw	14
 16890  0054AA  0E05               	movlw	5
 16891  0054AC  26F3               	addwf	prodl,f,c
 16892  0054AE  0E00               	movlw	0
 16893  0054B0  22F4               	addwfc	prodh,f,c
 16894  0054B2  0E00               	movlw	low _Channels
 16895  0054B4  24F3               	addwf	prodl,w,c
 16896  0054B6  6ED9               	movwf	fsr2l,c
 16897  0054B8  0E04               	movlw	high _Channels
 16898  0054BA  20F4               	addwfc	prodh,w,c
 16899  0054BC  6EDA               	movwf	fsr2h,c
 16900  0054BE  0104               	movlb	4	; () banked
 16901  0054C0  38DF               	swapf	223,w,c
 16902  0054C2  0B0F               	andlw	15
 16903  0054C4  0102               	movlb	2	; () banked
 16904  0054C6  6FEC               	movwf	(_loRa+236)& (0+255),b
 16905  0054C8                     l1214:
 16906                           
 16907                           ; BSR set to: 2
 16908  0054C8  0100               	movlb	0	; () banked
 16909  0054CA  2B63               	incf	UpdateDataRange@i& (0+255),f,b
 16910  0054CC                     l1211:
 16911                           
 16912                           ; BSR set to: 0
 16913                           
 16914                           ; BSR set to: 0
 16915  0054CC  0102               	movlb	2	; () banked
 16916  0054CE  51ED               	movf	(_loRa+237)& (0+255),w,b
 16917  0054D0  0100               	movlb	0	; () banked
 16918  0054D2  5D63               	subwf	UpdateDataRange@i& (0+255),w,b
 16919  0054D4  A0D8               	btfss	status,0,c
 16920  0054D6  D78D               	goto	l1212
 16921                           
 16922                           ; BSR set to: 0
 16923                           ;lorawan_eu.c: 1028: }
 16924                           ;lorawan_eu.c: 1029: }
 16925                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 16926                           
 16927                           ; BSR set to: 0
 16928  0054D8  0102               	movlb	2	; () banked
 16929  0054DA  51DF               	movf	(_loRa+223)& (0+255),w,b
 16930  0054DC  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 16931  0054DE  A0D8               	btfss	status,0,c
 16932                           
 16933                           ; BSR set to: 2
 16934                           ;lorawan_eu.c: 1032: {
 16935                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 16936  0054E0  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 16937                           
 16938                           ; BSR set to: 2
 16939                           ;lorawan_eu.c: 1034: }
 16940                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 16941                           
 16942                           ; BSR set to: 2
 16943  0054E4  51EB               	movf	(_loRa+235)& (0+255),w,b
 16944  0054E6  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 16945  0054E8  B0D8               	btfsc	status,0,c
 16946  0054EA  0012               	return	
 16947                           
 16948                           ; BSR set to: 2
 16949                           ;lorawan_eu.c: 1037: {
 16950                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 16951  0054EC  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 16952  0054F0  0012               	return	
 16953  0054F2                     __end_of_UpdateDataRange:
 16954                           	opt stack 0
 16955                           tosu	equ	0xFFF
 16956                           tosh	equ	0xFFE
 16957                           tosl	equ	0xFFD
 16958                           pclath	equ	0xFFA
 16959                           tblptru	equ	0xFF8
 16960                           tblptrh	equ	0xFF7
 16961                           tblptrl	equ	0xFF6
 16962                           tablat	equ	0xFF5
 16963                           prodh	equ	0xFF4
 16964                           prodl	equ	0xFF3
 16965                           intcon	equ	0xFF2
 16966                           intcon2	equ	0xFF1
 16967                           intcon3	equ	0xFF0
 16968                           indf0	equ	0xFEF
 16969                           postinc0	equ	0xFEE
 16970                           fsr0h	equ	0xFEA
 16971                           fsr0l	equ	0xFE9
 16972                           wreg	equ	0xFE8
 16973                           postinc1	equ	0xFE6
 16974                           postdec1	equ	0xFE5
 16975                           plusw1	equ	0xFE3
 16976                           fsr1h	equ	0xFE2
 16977                           fsr1l	equ	0xFE1
 16978                           indf2	equ	0xFDF
 16979                           postinc2	equ	0xFDE
 16980                           postdec2	equ	0xFDD
 16981                           plusw2	equ	0xFDB
 16982                           fsr2h	equ	0xFDA
 16983                           fsr2l	equ	0xFD9
 16984                           status	equ	0xFD8
 16985                           
 16986 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 16987 ;; Defined at:
 16988 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16989 ;; Parameters:    Size  Location     Type
 16990 ;;  channelId       1    wreg     unsigned char 
 16991 ;;  statusNew       1    4[BANK0 ] unsigned char 
 16992 ;; Auto vars:     Size  Location     Type
 16993 ;;  channelId       1    6[BANK0 ] unsigned char 
 16994 ;;  result          1    5[BANK0 ] enum E7249
 16995 ;; Return value:  Size  Location     Type
 16996 ;;                  1    wreg      enum E7249
 16997 ;; Registers used:
 16998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16999 ;; Tracked objects:
 17000 ;;		On entry : 0/0
 17001 ;;		On exit  : 0/0
 17002 ;;		Unchanged: 0/0
 17003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17004 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17005 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17007 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17008 ;;Total ram usage:        3 bytes
 17009 ;; Hardware stack levels used:    1
 17010 ;; Hardware stack levels required when called:    8
 17011 ;; This function calls:
 17012 ;;		_UpdateChannelIdStatus
 17013 ;;		_ValidateChannelId
 17014 ;; This function is called by:
 17015 ;;		_ExecuteNewChannel
 17016 ;;		_UpdateCfList
 17017 ;; This function uses a non-reentrant model
 17018 ;;
 17019                           
 17020                           	psect	text83
 17021  007C30                     __ptext83:
 17022                           	opt stack 0
 17023  007C30                     _LORAWAN_SetChannelIdStatus:
 17024                           	opt stack 17
 17025                           
 17026                           ; BSR set to: 2
 17027                           ;incstack = 0
 17028                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 17029  007C30  0100               	movlb	0	; () banked
 17030  007C32  6F66               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 17031                           
 17032                           ;lorawan_eu.c: 284: LorawanError_t result = OK;
 17033  007C34  0E00               	movlw	0
 17034  007C36  0100               	movlb	0	; () banked
 17035  007C38  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 17036                           
 17037                           ; BSR set to: 0
 17038                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 17039  007C3A  0E01               	movlw	1
 17040  007C3C  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 17041  007C3E  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 17042  007C40  EC20  F044         	call	_ValidateChannelId
 17043  007C44  0900               	iorlw	0
 17044  007C46  B4D8               	btfsc	status,2,c
 17045  007C48  D004               	goto	l999
 17046                           
 17047                           ;lorawan_eu.c: 288: {
 17048                           ;lorawan_eu.c: 289: result = INVALID_PARAMETER;
 17049  007C4A  0E03               	movlw	3
 17050  007C4C  0100               	movlb	0	; () banked
 17051  007C4E  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 17052                           
 17053                           ;lorawan_eu.c: 290: }
 17054  007C50  0012               	return	
 17055  007C52                     l999:
 17056                           
 17057                           ;lorawan_eu.c: 292: else
 17058                           ;lorawan_eu.c: 293: {
 17059                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 17060                           
 17061                           ; BSR set to: 0
 17062  007C52  0100               	movlb	0	; () banked
 17063  007C54  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 17064  007C56  0D0E               	mullw	14
 17065  007C58  0E0D               	movlw	13
 17066  007C5A  26F3               	addwf	prodl,f,c
 17067  007C5C  0E00               	movlw	0
 17068  007C5E  22F4               	addwfc	prodh,f,c
 17069  007C60  0E00               	movlw	low _Channels
 17070  007C62  24F3               	addwf	prodl,w,c
 17071  007C64  6ED9               	movwf	fsr2l,c
 17072  007C66  0E04               	movlw	high _Channels
 17073  007C68  20F4               	addwfc	prodh,w,c
 17074  007C6A  6EDA               	movwf	fsr2h,c
 17075  007C6C  50DF               	movf	indf2,w,c
 17076  007C6E  0B07               	andlw	7
 17077  007C70  0A07               	xorlw	7
 17078  007C72  A4D8               	btfss	status,2,c
 17079  007C74  D006               	goto	l1001
 17080                           
 17081                           ; BSR set to: 0
 17082                           ;lorawan_eu.c: 295: {
 17083                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 17084  007C76  C064  F060         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 17085  007C7A  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 17086  007C7C  ECBE  F027         	call	_UpdateChannelIdStatus
 17087                           
 17088                           ;lorawan_eu.c: 297: }
 17089  007C80  0012               	return	
 17090  007C82                     l1001:
 17091                           
 17092                           ;lorawan_eu.c: 298: else
 17093                           ;lorawan_eu.c: 299: {
 17094                           ;lorawan_eu.c: 300: result = INVALID_PARAMETER;
 17095  007C82  0E03               	movlw	3
 17096  007C84  0100               	movlb	0	; () banked
 17097  007C86  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 17098                           
 17099                           ; BSR set to: 0
 17100                           
 17101                           ; BSR set to: 0
 17102  007C88  0012               	return	
 17103  007C8A                     __end_of_LORAWAN_SetChannelIdStatus:
 17104                           	opt stack 0
 17105                           tosu	equ	0xFFF
 17106                           tosh	equ	0xFFE
 17107                           tosl	equ	0xFFD
 17108                           pclath	equ	0xFFA
 17109                           tblptru	equ	0xFF8
 17110                           tblptrh	equ	0xFF7
 17111                           tblptrl	equ	0xFF6
 17112                           tablat	equ	0xFF5
 17113                           prodh	equ	0xFF4
 17114                           prodl	equ	0xFF3
 17115                           intcon	equ	0xFF2
 17116                           intcon2	equ	0xFF1
 17117                           intcon3	equ	0xFF0
 17118                           indf0	equ	0xFEF
 17119                           postinc0	equ	0xFEE
 17120                           fsr0h	equ	0xFEA
 17121                           fsr0l	equ	0xFE9
 17122                           wreg	equ	0xFE8
 17123                           postinc1	equ	0xFE6
 17124                           postdec1	equ	0xFE5
 17125                           plusw1	equ	0xFE3
 17126                           fsr1h	equ	0xFE2
 17127                           fsr1l	equ	0xFE1
 17128                           indf2	equ	0xFDF
 17129                           postinc2	equ	0xFDE
 17130                           postdec2	equ	0xFDD
 17131                           plusw2	equ	0xFDB
 17132                           fsr2h	equ	0xFDA
 17133                           fsr2l	equ	0xFD9
 17134                           status	equ	0xFD8
 17135                           
 17136 ;; *************** function _ValidateChannelId *****************
 17137 ;; Defined at:
 17138 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17139 ;; Parameters:    Size  Location     Type
 17140 ;;  channelId       1    wreg     unsigned char 
 17141 ;;  allowedForDe    1    0[BANK0 ] unsigned char 
 17142 ;; Auto vars:     Size  Location     Type
 17143 ;;  channelId       1    2[BANK0 ] unsigned char 
 17144 ;;  result          1    1[BANK0 ] enum E7249
 17145 ;; Return value:  Size  Location     Type
 17146 ;;                  1    wreg      enum E7249
 17147 ;; Registers used:
 17148 ;;		wreg, status,2, status,0
 17149 ;; Tracked objects:
 17150 ;;		On entry : 0/0
 17151 ;;		On exit  : 0/0
 17152 ;;		Unchanged: 0/0
 17153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17154 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17155 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17157 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17158 ;;Total ram usage:        3 bytes
 17159 ;; Hardware stack levels used:    1
 17160 ;; Hardware stack levels required when called:    7
 17161 ;; This function calls:
 17162 ;;		Nothing
 17163 ;; This function is called by:
 17164 ;;		_LORAWAN_SetChannelIdStatus
 17165 ;;		_ExecuteNewChannel
 17166 ;;		_LORAWAN_SetDataRange
 17167 ;;		_LORAWAN_GetDataRange
 17168 ;;		_LORAWAN_GetChannelIdStatus
 17169 ;;		_LORAWAN_SetFrequency
 17170 ;;		_LORAWAN_SetDutyCycle
 17171 ;;		_LORAWAN_GetDutyCycle
 17172 ;; This function uses a non-reentrant model
 17173 ;;
 17174                           
 17175                           	psect	text84
 17176  008840                     __ptext84:
 17177                           	opt stack 0
 17178  008840                     _ValidateChannelId:
 17179                           	opt stack 17
 17180                           
 17181                           ;incstack = 0
 17182                           ;ValidateChannelId@channelId stored from wreg
 17183  008840  0100               	movlb	0	; () banked
 17184  008842  6F62               	movwf	ValidateChannelId@channelId& (0+255),b
 17185                           
 17186                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 17187  008844  0E00               	movlw	0
 17188  008846  0100               	movlb	0	; () banked
 17189  008848  6F61               	movwf	ValidateChannelId@result& (0+255),b
 17190                           
 17191                           ; BSR set to: 0
 17192                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 17193  00884A  0E10               	movlw	16
 17194  00884C  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 17195  00884E  D006               	goto	u15460
 17196                           
 17197                           ; BSR set to: 0
 17198  008850  5160               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 17199  008852  A4D8               	btfss	status,2,c
 17200  008854  D005               	goto	l1253
 17201                           
 17202                           ; BSR set to: 0
 17203  008856  0E03               	movlw	3
 17204  008858  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 17205  00885A  D002               	goto	l1253
 17206  00885C                     u15460:
 17207                           
 17208                           ; BSR set to: 0
 17209                           ;lorawan_eu.c: 1130: {
 17210                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 17211                           
 17212                           ; BSR set to: 0
 17213  00885C  0E03               	movlw	3
 17214  00885E  6F61               	movwf	ValidateChannelId@result& (0+255),b
 17215  008860                     l1253:
 17216                           
 17217                           ; BSR set to: 0
 17218                           ;lorawan_eu.c: 1132: }
 17219                           ;lorawan_eu.c: 1134: return result;
 17220  008860  5161               	movf	ValidateChannelId@result& (0+255),w,b
 17221  008862  0012               	return	
 17222  008864                     __end_of_ValidateChannelId:
 17223                           	opt stack 0
 17224                           tosu	equ	0xFFF
 17225                           tosh	equ	0xFFE
 17226                           tosl	equ	0xFFD
 17227                           pclath	equ	0xFFA
 17228                           tblptru	equ	0xFF8
 17229                           tblptrh	equ	0xFF7
 17230                           tblptrl	equ	0xFF6
 17231                           tablat	equ	0xFF5
 17232                           prodh	equ	0xFF4
 17233                           prodl	equ	0xFF3
 17234                           intcon	equ	0xFF2
 17235                           intcon2	equ	0xFF1
 17236                           intcon3	equ	0xFF0
 17237                           indf0	equ	0xFEF
 17238                           postinc0	equ	0xFEE
 17239                           fsr0h	equ	0xFEA
 17240                           fsr0l	equ	0xFE9
 17241                           wreg	equ	0xFE8
 17242                           postinc1	equ	0xFE6
 17243                           postdec1	equ	0xFE5
 17244                           plusw1	equ	0xFE3
 17245                           fsr1h	equ	0xFE2
 17246                           fsr1l	equ	0xFE1
 17247                           indf2	equ	0xFDF
 17248                           postinc2	equ	0xFDE
 17249                           postdec2	equ	0xFDD
 17250                           plusw2	equ	0xFDB
 17251                           fsr2h	equ	0xFDA
 17252                           fsr2l	equ	0xFD9
 17253                           status	equ	0xFD8
 17254                           
 17255 ;; *************** function _ExecuteLinkCheck *****************
 17256 ;; Defined at:
 17257 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17258 ;; Parameters:    Size  Location     Type
 17259 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 17260 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17261 ;; Auto vars:     Size  Location     Type
 17262 ;;		None
 17263 ;; Return value:  Size  Location     Type
 17264 ;;                  2    0[BANK0 ] PTR unsigned char 
 17265 ;; Registers used:
 17266 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17267 ;; Tracked objects:
 17268 ;;		On entry : 0/0
 17269 ;;		On exit  : 0/0
 17270 ;;		Unchanged: 0/0
 17271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17272 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17275 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17276 ;;Total ram usage:        2 bytes
 17277 ;; Hardware stack levels used:    1
 17278 ;; Hardware stack levels required when called:    7
 17279 ;; This function calls:
 17280 ;;		Nothing
 17281 ;; This function is called by:
 17282 ;;		_MacExecuteCommands
 17283 ;; This function uses a non-reentrant model
 17284 ;;
 17285                           
 17286                           	psect	text85
 17287  0084A4                     __ptext85:
 17288                           	opt stack 0
 17289  0084A4                     _ExecuteLinkCheck:
 17290                           	opt stack 18
 17291                           
 17292                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 17293                           
 17294                           ; BSR set to: 0
 17295                           ;incstack = 0
 17296  0084A4  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 17297  0084A8  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 17298  0084AC  50DF               	movf	indf2,w,c
 17299  0084AE  0102               	movlb	2	; () banked
 17300  0084B0  6FDD               	movwf	(_loRa+221)& (0+255),b
 17301                           
 17302                           ; BSR set to: 2
 17303  0084B2  0100               	movlb	0	; () banked
 17304  0084B4  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 17305  0084B6  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 17306                           
 17307                           ; BSR set to: 0
 17308                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 17309  0084B8  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 17310  0084BC  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 17311  0084C0  50DF               	movf	indf2,w,c
 17312  0084C2  0102               	movlb	2	; () banked
 17313  0084C4  6FDE               	movwf	(_loRa+222)& (0+255),b
 17314  0084C6  0100               	movlb	0	; () banked
 17315  0084C8  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 17316  0084CA  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 17317                           
 17318                           ; BSR set to: 0
 17319                           ;lorawan.c: 1656: return ptr;
 17320  0084CC  C060  F060         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 17321  0084D0  C061  F061         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 17322  0084D4  0012               	return	
 17323  0084D6                     __end_of_ExecuteLinkCheck:
 17324                           	opt stack 0
 17325                           tosu	equ	0xFFF
 17326                           tosh	equ	0xFFE
 17327                           tosl	equ	0xFFD
 17328                           pclath	equ	0xFFA
 17329                           tblptru	equ	0xFF8
 17330                           tblptrh	equ	0xFF7
 17331                           tblptrl	equ	0xFF6
 17332                           tablat	equ	0xFF5
 17333                           prodh	equ	0xFF4
 17334                           prodl	equ	0xFF3
 17335                           intcon	equ	0xFF2
 17336                           intcon2	equ	0xFF1
 17337                           intcon3	equ	0xFF0
 17338                           indf0	equ	0xFEF
 17339                           postinc0	equ	0xFEE
 17340                           fsr0h	equ	0xFEA
 17341                           fsr0l	equ	0xFE9
 17342                           wreg	equ	0xFE8
 17343                           postinc1	equ	0xFE6
 17344                           postdec1	equ	0xFE5
 17345                           plusw1	equ	0xFE3
 17346                           fsr1h	equ	0xFE2
 17347                           fsr1l	equ	0xFE1
 17348                           indf2	equ	0xFDF
 17349                           postinc2	equ	0xFDE
 17350                           postdec2	equ	0xFDD
 17351                           plusw2	equ	0xFDB
 17352                           fsr2h	equ	0xFDA
 17353                           fsr2l	equ	0xFD9
 17354                           status	equ	0xFD8
 17355                           
 17356 ;; *************** function _ExecuteLinkAdr *****************
 17357 ;; Defined at:
 17358 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17359 ;; Parameters:    Size  Location     Type
 17360 ;;  ptr             2   15[BANK0 ] PTR unsigned char 
 17361 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17362 ;; Auto vars:     Size  Location     Type
 17363 ;;  redundancy      2   22[BANK0 ] PTR struct .
 17364 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17365 ;;  channelMask     2   19[BANK0 ] unsigned int 
 17366 ;;  dataRate        1   24[BANK0 ] unsigned char 
 17367 ;;  txPower         1   21[BANK0 ] unsigned char 
 17368 ;; Return value:  Size  Location     Type
 17369 ;;                  2   15[BANK0 ] PTR unsigned char 
 17370 ;; Registers used:
 17371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17372 ;; Tracked objects:
 17373 ;;		On entry : 0/0
 17374 ;;		On exit  : 0/0
 17375 ;;		Unchanged: 0/0
 17376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17377 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17378 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17379 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17380 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17381 ;;Total ram usage:       10 bytes
 17382 ;; Hardware stack levels used:    1
 17383 ;; Hardware stack levels required when called:   10
 17384 ;; This function calls:
 17385 ;;		_EnableChannels
 17386 ;;		_UpdateCurrentDataRate
 17387 ;;		_UpdateTxPower
 17388 ;;		_ValidateChannelMask
 17389 ;;		_ValidateChannelMaskCntl
 17390 ;;		_ValidateDataRate
 17391 ;;		_ValidateTxPower
 17392 ;; This function is called by:
 17393 ;;		_MacExecuteCommands
 17394 ;; This function uses a non-reentrant model
 17395 ;;
 17396                           
 17397                           	psect	text86
 17398  003244                     __ptext86:
 17399                           	opt stack 0
 17400  003244                     _ExecuteLinkAdr:
 17401                           	opt stack 15
 17402                           
 17403                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 17404                           ;lorawan_eu.c: 616: uint16_t channelMask;
 17405                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 17406                           
 17407                           ; BSR set to: 0
 17408                           ;incstack = 0
 17409  003244  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 17410  003248  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 17411  00324C  50DF               	movf	indf2,w,c
 17412  00324E  0B0F               	andlw	15
 17413  003250  0100               	movlb	0	; () banked
 17414  003252  6F75               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 17415                           
 17416                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 17417  003254  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 17418  003258  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 17419  00325C  50DF               	movf	indf2,w,c
 17420  00325E  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17421  003260  3971               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 17422  003262  0B0F               	andlw	15
 17423  003264  0B0F               	andlw	15
 17424  003266  6F78               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 17425                           
 17426                           ; BSR set to: 0
 17427                           ;lorawan_eu.c: 620: ptr++;
 17428  003268  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 17429  00326A  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 17430                           
 17431                           ; BSR set to: 0
 17432                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 17433  00326C  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 17434  003270  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 17435  003274  CFDE F073          	movff	postinc2,ExecuteLinkAdr@channelMask
 17436  003278  CFDD F074          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 17437                           
 17438                           ; BSR set to: 0
 17439                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 17440  00327C  0E02               	movlw	2
 17441  00327E  256F               	addwf	ExecuteLinkAdr@ptr& (0+255),w,b
 17442  003280  6F6F               	movwf	ExecuteLinkAdr@ptr& (0+255),b
 17443  003282  0E00               	movlw	0
 17444  003284  2170               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),w,b
 17445  003286  6F70               	movwf	(ExecuteLinkAdr@ptr+1)& (0+255),b
 17446                           
 17447                           ; BSR set to: 0
 17448                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 17449                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 17450  003288  C06F  F076         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 17451  00328C  C070  F077         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 17452                           
 17453                           ; BSR set to: 0
 17454  003290  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 17455  003292  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 17456                           
 17457                           ; BSR set to: 0
 17458                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 17459  003294  0102               	movlb	2	; () banked
 17460  003296  AD02               	btfss	(_loRa+2)& (0+255),6,b
 17461  003298  D0EF               	goto	l1105
 17462                           
 17463                           ; BSR set to: 2
 17464                           ;lorawan_eu.c: 627: {
 17465                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 17466  00329A  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17467  00329E  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17468  0032A2  0100               	movlb	0	; () banked
 17469  0032A4  38DF               	swapf	223,w,c
 17470  0032A6  0B07               	andlw	7
 17471  0032A8  EC86  F044         	call	_ValidateChannelMaskCntl
 17472  0032AC  0900               	iorlw	0
 17473  0032AE  A4D8               	btfss	status,2,c
 17474  0032B0  D021               	goto	l1106
 17475  0032B2  C073  F060         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 17476  0032B6  C074  F061         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 17477  0032BA  EC8C  F03D         	call	_ValidateChannelMask	;wreg free
 17478  0032BE  0900               	iorlw	0
 17479  0032C0  A4D8               	btfss	status,2,c
 17480  0032C2  D018               	goto	l1106
 17481                           
 17482                           ;lorawan_eu.c: 629: {
 17483                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 17484  0032C4  0102               	movlb	2	; () banked
 17485  0032C6  51A7               	movf	(_loRa+167)& (0+255),w,b
 17486  0032C8  0D02               	mullw	2
 17487  0032CA  0E00               	movlw	low _loRa
 17488  0032CC  0100               	movlb	0	; () banked
 17489  0032CE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17490  0032D0  0E02               	movlw	high _loRa
 17491  0032D2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17492  0032D4  0EA8               	movlw	168
 17493  0032D6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17494  0032D8  0E00               	movlw	0
 17495  0032DA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17496  0032DC  50F3               	movf	prodl,w,c
 17497  0032DE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17498  0032E0  50F4               	movf	prodh,w,c
 17499  0032E2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17500  0032E4  0E01               	movlw	1
 17501  0032E6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17502  0032E8  6ED9               	movwf	fsr2l,c
 17503  0032EA  0E00               	movlw	0
 17504  0032EC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17505  0032EE  6EDA               	movwf	fsr2h,c
 17506  0032F0  0102               	movlb	2	; () banked
 17507  0032F2  80DF               	bsf	indf2,0,c
 17508  0032F4                     l1106:
 17509                           
 17510                           ;lorawan_eu.c: 631: }
 17511                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 17512                           
 17513                           ; BSR set to: 2
 17514  0032F4  0100               	movlb	0	; () banked
 17515  0032F6  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17516  0032F8  EC8D  F045         	call	_ValidateDataRate
 17517  0032FC  0900               	iorlw	0
 17518  0032FE  A4D8               	btfss	status,2,c
 17519  003300  D022               	goto	l1107
 17520  003302  0102               	movlb	2	; () banked
 17521  003304  51EB               	movf	(_loRa+235)& (0+255),w,b
 17522  003306  0100               	movlb	0	; () banked
 17523  003308  5D78               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17524  00330A  A0D8               	btfss	status,0,c
 17525  00330C  D01C               	goto	l1107
 17526                           
 17527                           ; BSR set to: 0
 17528  00330E  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17529  003310  0102               	movlb	2	; () banked
 17530  003312  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 17531  003314  A0D8               	btfss	status,0,c
 17532  003316  D017               	goto	l1107
 17533                           
 17534                           ; BSR set to: 2
 17535                           ;lorawan_eu.c: 634: {
 17536                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 17537  003318  51A7               	movf	(_loRa+167)& (0+255),w,b
 17538  00331A  0D02               	mullw	2
 17539  00331C  0E00               	movlw	low _loRa
 17540  00331E  0100               	movlb	0	; () banked
 17541  003320  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17542  003322  0E02               	movlw	high _loRa
 17543  003324  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17544  003326  0EA8               	movlw	168
 17545  003328  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17546  00332A  0E00               	movlw	0
 17547  00332C  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17548  00332E  50F3               	movf	prodl,w,c
 17549  003330  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17550  003332  50F4               	movf	prodh,w,c
 17551  003334  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17552  003336  0E01               	movlw	1
 17553  003338  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17554  00333A  6ED9               	movwf	fsr2l,c
 17555  00333C  0E00               	movlw	0
 17556  00333E  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17557  003340  6EDA               	movwf	fsr2h,c
 17558  003342  0102               	movlb	2	; () banked
 17559  003344  82DF               	bsf	indf2,1,c
 17560  003346                     l1107:
 17561                           
 17562                           ;lorawan_eu.c: 636: }
 17563                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 17564                           
 17565                           ; BSR set to: 2
 17566  003346  0100               	movlb	0	; () banked
 17567  003348  5175               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 17568  00334A  EC6A  F043         	call	_ValidateTxPower
 17569  00334E  0900               	iorlw	0
 17570  003350  A4D8               	btfss	status,2,c
 17571  003352  D018               	goto	l1108
 17572                           
 17573                           ;lorawan_eu.c: 639: {
 17574                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 17575  003354  0102               	movlb	2	; () banked
 17576  003356  51A7               	movf	(_loRa+167)& (0+255),w,b
 17577  003358  0D02               	mullw	2
 17578  00335A  0E00               	movlw	low _loRa
 17579  00335C  0100               	movlb	0	; () banked
 17580  00335E  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17581  003360  0E02               	movlw	high _loRa
 17582  003362  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17583  003364  0EA8               	movlw	168
 17584  003366  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17585  003368  0E00               	movlw	0
 17586  00336A  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17587  00336C  50F3               	movf	prodl,w,c
 17588  00336E  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17589  003370  50F4               	movf	prodh,w,c
 17590  003372  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17591  003374  0E01               	movlw	1
 17592  003376  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17593  003378  6ED9               	movwf	fsr2l,c
 17594  00337A  0E00               	movlw	0
 17595  00337C  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17596  00337E  6EDA               	movwf	fsr2h,c
 17597  003380  0102               	movlb	2	; () banked
 17598  003382  84DF               	bsf	indf2,2,c
 17599  003384                     l1108:
 17600                           
 17601                           ;lorawan_eu.c: 641: }
 17602                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 17603  003384  0102               	movlb	2	; () banked
 17604  003386  51A7               	movf	(_loRa+167)& (0+255),w,b
 17605  003388  0D02               	mullw	2
 17606  00338A  0E00               	movlw	low _loRa
 17607  00338C  0100               	movlb	0	; () banked
 17608  00338E  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17609  003390  0E02               	movlw	high _loRa
 17610  003392  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17611  003394  0EA8               	movlw	168
 17612  003396  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17613  003398  0E00               	movlw	0
 17614  00339A  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17615  00339C  50F3               	movf	prodl,w,c
 17616  00339E  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17617  0033A0  50F4               	movf	prodh,w,c
 17618  0033A2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17619  0033A4  0E01               	movlw	1
 17620  0033A6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17621  0033A8  6ED9               	movwf	fsr2l,c
 17622  0033AA  0E00               	movlw	0
 17623  0033AC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17624  0033AE  6EDA               	movwf	fsr2h,c
 17625  0033B0  0102               	movlb	2	; () banked
 17626  0033B2  A4DF               	btfss	indf2,2,c
 17627  0033B4  D0A6               	goto	l1112
 17628                           
 17629                           ; BSR set to: 2
 17630  0033B6  51A7               	movf	(_loRa+167)& (0+255),w,b
 17631  0033B8  0D02               	mullw	2
 17632  0033BA  0E00               	movlw	low _loRa
 17633  0033BC  0100               	movlb	0	; () banked
 17634  0033BE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17635  0033C0  0E02               	movlw	high _loRa
 17636  0033C2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17637  0033C4  0EA8               	movlw	168
 17638  0033C6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17639  0033C8  0E00               	movlw	0
 17640  0033CA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17641  0033CC  50F3               	movf	prodl,w,c
 17642  0033CE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17643  0033D0  50F4               	movf	prodh,w,c
 17644  0033D2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17645  0033D4  0E01               	movlw	1
 17646  0033D6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17647  0033D8  6ED9               	movwf	fsr2l,c
 17648  0033DA  0E00               	movlw	0
 17649  0033DC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17650  0033DE  6EDA               	movwf	fsr2h,c
 17651  0033E0  0102               	movlb	2	; () banked
 17652  0033E2  A2DF               	btfss	indf2,1,c
 17653  0033E4  D08E               	goto	l1112
 17654                           
 17655                           ; BSR set to: 2
 17656  0033E6  51A7               	movf	(_loRa+167)& (0+255),w,b
 17657  0033E8  0D02               	mullw	2
 17658  0033EA  0E00               	movlw	low _loRa
 17659  0033EC  0100               	movlb	0	; () banked
 17660  0033EE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17661  0033F0  0E02               	movlw	high _loRa
 17662  0033F2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17663  0033F4  0EA8               	movlw	168
 17664  0033F6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17665  0033F8  0E00               	movlw	0
 17666  0033FA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17667  0033FC  50F3               	movf	prodl,w,c
 17668  0033FE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17669  003400  50F4               	movf	prodh,w,c
 17670  003402  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17671  003404  0E01               	movlw	1
 17672  003406  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17673  003408  6ED9               	movwf	fsr2l,c
 17674  00340A  0E00               	movlw	0
 17675  00340C  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17676  00340E  6EDA               	movwf	fsr2h,c
 17677  003410  0102               	movlb	2	; () banked
 17678  003412  A0DF               	btfss	indf2,0,c
 17679  003414  D076               	goto	l1112
 17680                           
 17681                           ; BSR set to: 2
 17682                           ;lorawan_eu.c: 644: {
 17683                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 17684  003416  C073  F06C         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 17685  00341A  C074  F06D         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 17686  00341E  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17687  003422  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17688  003426  0100               	movlb	0	; () banked
 17689  003428  38DF               	swapf	223,w,c
 17690  00342A  0B07               	andlw	7
 17691  00342C  6F6E               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 17692  00342E  EC33  F045         	call	_EnableChannels	;wreg free
 17693                           
 17694                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 17695  003432  0100               	movlb	0	; () banked
 17696  003434  5175               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 17697  003436  EC6A  F046         	call	_UpdateTxPower
 17698                           
 17699                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 17700  00343A  0102               	movlb	2	; () banked
 17701  00343C  8903               	bsf	(_loRa+3)& (0+255),4,b
 17702                           
 17703                           ; BSR set to: 2
 17704                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 17705  00343E  0100               	movlb	0	; () banked
 17706  003440  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17707  003442  EC6F  F046         	call	_UpdateCurrentDataRate
 17708                           
 17709                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 17710  003446  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17711  00344A  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17712  00344E  0100               	movlb	0	; () banked
 17713  003450  50DF               	movf	223,w,c
 17714  003452  0B0F               	andlw	15
 17715  003454  0900               	iorlw	0
 17716  003456  A4D8               	btfss	status,2,c
 17717  003458  D002               	goto	l1110
 17718                           
 17719                           ; BSR set to: 0
 17720                           ;lorawan_eu.c: 652: {
 17721                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 17722  00345A  0E00               	movlw	0
 17723  00345C  D009               	goto	L10
 17724  00345E                     l1110:
 17725                           
 17726                           ;lorawan_eu.c: 655: else
 17727                           ;lorawan_eu.c: 656: {
 17728                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 17729                           
 17730                           ; BSR set to: 2
 17731  00345E  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17732  003462  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17733  003466  0100               	movlb	0	; () banked
 17734  003468  50DF               	movf	223,w,c
 17735  00346A  0B0F               	andlw	15
 17736  00346C  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17737  00346E  0571               	decf	??_ExecuteLinkAdr& (0+255),w,b
 17738  003470                     L10:
 17739  003470  0102               	movlb	2	; () banked
 17740  003472  6FD6               	movwf	(_loRa+214)& (0+255),b
 17741                           
 17742                           ; BSR set to: 2
 17743                           ;lorawan_eu.c: 658: }
 17744                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 17745                           
 17746                           ; BSR set to: 2
 17747  003474  8B03               	bsf	(_loRa+3)& (0+255),5,b
 17748                           
 17749                           ; BSR set to: 2
 17750                           ;lorawan_eu.c: 660: }
 17751                           ;lorawan_eu.c: 661: }
 17752  003476  D045               	goto	l1112
 17753  003478                     l1105:
 17754                           
 17755                           ; BSR set to: 2
 17756                           ;lorawan_eu.c: 662: else
 17757                           ;lorawan_eu.c: 663: {
 17758                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 17759                           
 17760                           ; BSR set to: 2
 17761  003478  51A7               	movf	(_loRa+167)& (0+255),w,b
 17762  00347A  0D02               	mullw	2
 17763  00347C  0E00               	movlw	low _loRa
 17764  00347E  0100               	movlb	0	; () banked
 17765  003480  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17766  003482  0E02               	movlw	high _loRa
 17767  003484  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17768  003486  0EA8               	movlw	168
 17769  003488  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17770  00348A  0E00               	movlw	0
 17771  00348C  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17772  00348E  50F3               	movf	prodl,w,c
 17773  003490  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17774  003492  50F4               	movf	prodh,w,c
 17775  003494  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17776  003496  0E01               	movlw	1
 17777  003498  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17778  00349A  6ED9               	movwf	fsr2l,c
 17779  00349C  0E00               	movlw	0
 17780  00349E  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17781  0034A0  6EDA               	movwf	fsr2h,c
 17782  0034A2  0102               	movlb	2	; () banked
 17783  0034A4  90DF               	bcf	indf2,0,c
 17784                           
 17785                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 17786  0034A6  51A7               	movf	(_loRa+167)& (0+255),w,b
 17787  0034A8  0D02               	mullw	2
 17788  0034AA  0E00               	movlw	low _loRa
 17789  0034AC  0100               	movlb	0	; () banked
 17790  0034AE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17791  0034B0  0E02               	movlw	high _loRa
 17792  0034B2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17793  0034B4  0EA8               	movlw	168
 17794  0034B6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17795  0034B8  0E00               	movlw	0
 17796  0034BA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17797  0034BC  50F3               	movf	prodl,w,c
 17798  0034BE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17799  0034C0  50F4               	movf	prodh,w,c
 17800  0034C2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17801  0034C4  0E01               	movlw	1
 17802  0034C6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17803  0034C8  6ED9               	movwf	fsr2l,c
 17804  0034CA  0E00               	movlw	0
 17805  0034CC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17806  0034CE  6EDA               	movwf	fsr2h,c
 17807  0034D0  0102               	movlb	2	; () banked
 17808  0034D2  92DF               	bcf	indf2,1,c
 17809                           
 17810                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 17811  0034D4  51A7               	movf	(_loRa+167)& (0+255),w,b
 17812  0034D6  0D02               	mullw	2
 17813  0034D8  0E00               	movlw	low _loRa
 17814  0034DA  0100               	movlb	0	; () banked
 17815  0034DC  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17816  0034DE  0E02               	movlw	high _loRa
 17817  0034E0  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17818  0034E2  0EA8               	movlw	168
 17819  0034E4  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17820  0034E6  0E00               	movlw	0
 17821  0034E8  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17822  0034EA  50F3               	movf	prodl,w,c
 17823  0034EC  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17824  0034EE  50F4               	movf	prodh,w,c
 17825  0034F0  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17826  0034F2  0E01               	movlw	1
 17827  0034F4  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17828  0034F6  6ED9               	movwf	fsr2l,c
 17829  0034F8  0E00               	movlw	0
 17830  0034FA  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17831  0034FC  6EDA               	movwf	fsr2h,c
 17832  0034FE  0102               	movlb	2	; () banked
 17833  003500  94DF               	bcf	indf2,2,c
 17834  003502                     l1112:
 17835                           
 17836                           ; BSR set to: 2
 17837                           ;lorawan_eu.c: 667: }
 17838                           ;lorawan_eu.c: 669: return ptr;
 17839                           
 17840                           ; BSR set to: 2
 17841  003502  C06F  F06F         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 17842  003506  C070  F070         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 17843  00350A  0012               	return	
 17844  00350C                     __end_of_ExecuteLinkAdr:
 17845                           	opt stack 0
 17846                           tosu	equ	0xFFF
 17847                           tosh	equ	0xFFE
 17848                           tosl	equ	0xFFD
 17849                           pclath	equ	0xFFA
 17850                           tblptru	equ	0xFF8
 17851                           tblptrh	equ	0xFF7
 17852                           tblptrl	equ	0xFF6
 17853                           tablat	equ	0xFF5
 17854                           prodh	equ	0xFF4
 17855                           prodl	equ	0xFF3
 17856                           intcon	equ	0xFF2
 17857                           intcon2	equ	0xFF1
 17858                           intcon3	equ	0xFF0
 17859                           indf0	equ	0xFEF
 17860                           postinc0	equ	0xFEE
 17861                           fsr0h	equ	0xFEA
 17862                           fsr0l	equ	0xFE9
 17863                           wreg	equ	0xFE8
 17864                           postinc1	equ	0xFE6
 17865                           postdec1	equ	0xFE5
 17866                           plusw1	equ	0xFE3
 17867                           fsr1h	equ	0xFE2
 17868                           fsr1l	equ	0xFE1
 17869                           indf2	equ	0xFDF
 17870                           postinc2	equ	0xFDE
 17871                           postdec2	equ	0xFDD
 17872                           plusw2	equ	0xFDB
 17873                           fsr2h	equ	0xFDA
 17874                           fsr2l	equ	0xFD9
 17875                           status	equ	0xFD8
 17876                           
 17877 ;; *************** function _ValidateTxPower *****************
 17878 ;; Defined at:
 17879 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17880 ;; Parameters:    Size  Location     Type
 17881 ;;  txPowerNew      1    wreg     unsigned char 
 17882 ;; Auto vars:     Size  Location     Type
 17883 ;;  txPowerNew      1    1[BANK0 ] unsigned char 
 17884 ;;  result          1    0[BANK0 ] enum E7249
 17885 ;; Return value:  Size  Location     Type
 17886 ;;                  1    wreg      enum E7249
 17887 ;; Registers used:
 17888 ;;		wreg, status,2, status,0
 17889 ;; Tracked objects:
 17890 ;;		On entry : 0/0
 17891 ;;		On exit  : 0/0
 17892 ;;		Unchanged: 0/0
 17893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17895 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17897 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17898 ;;Total ram usage:        2 bytes
 17899 ;; Hardware stack levels used:    1
 17900 ;; Hardware stack levels required when called:    7
 17901 ;; This function calls:
 17902 ;;		Nothing
 17903 ;; This function is called by:
 17904 ;;		_ExecuteLinkAdr
 17905 ;;		_LORAWAN_SetTxPower
 17906 ;; This function uses a non-reentrant model
 17907 ;;
 17908                           
 17909                           	psect	text87
 17910  0086D4                     __ptext87:
 17911                           	opt stack 0
 17912  0086D4                     _ValidateTxPower:
 17913                           	opt stack 17
 17914                           
 17915                           ; BSR set to: 2
 17916                           ;incstack = 0
 17917                           ;ValidateTxPower@txPowerNew stored from wreg
 17918  0086D4  0100               	movlb	0	; () banked
 17919  0086D6  6F61               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 17920                           
 17921                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 17922  0086D8  0E00               	movlw	0
 17923  0086DA  0100               	movlb	0	; () banked
 17924  0086DC  6F60               	movwf	ValidateTxPower@result& (0+255),b
 17925                           
 17926                           ; BSR set to: 0
 17927                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 17928  0086DE  0102               	movlb	2	; () banked
 17929  0086E0  51A4               	movf	(_loRa+164)& (0+255),w,b
 17930  0086E2  A4D8               	btfss	status,2,c
 17931  0086E4  D004               	goto	u16070
 17932                           
 17933                           ; BSR set to: 2
 17934  0086E6  0100               	movlb	0	; () banked
 17935  0086E8  5161               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 17936  0086EA  B4D8               	btfsc	status,2,c
 17937  0086EC  D004               	goto	u16080
 17938  0086EE                     u16070:
 17939                           
 17940                           ; BSR set to: 0
 17941  0086EE  0E05               	movlw	5
 17942  0086F0  0100               	movlb	0	; () banked
 17943  0086F2  6561               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 17944  0086F4  D002               	goto	l1092
 17945  0086F6                     u16080:
 17946                           
 17947                           ; BSR set to: 0
 17948                           ;lorawan_eu.c: 587: {
 17949                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 17950                           
 17951                           ; BSR set to: 0
 17952  0086F6  0E03               	movlw	3
 17953  0086F8  6F60               	movwf	ValidateTxPower@result& (0+255),b
 17954  0086FA                     l1092:
 17955                           
 17956                           ; BSR set to: 0
 17957                           ;lorawan_eu.c: 589: }
 17958                           ;lorawan_eu.c: 591: return result;
 17959  0086FA  5160               	movf	ValidateTxPower@result& (0+255),w,b
 17960  0086FC  0012               	return	
 17961  0086FE                     __end_of_ValidateTxPower:
 17962                           	opt stack 0
 17963                           tosu	equ	0xFFF
 17964                           tosh	equ	0xFFE
 17965                           tosl	equ	0xFFD
 17966                           pclath	equ	0xFFA
 17967                           tblptru	equ	0xFF8
 17968                           tblptrh	equ	0xFF7
 17969                           tblptrl	equ	0xFF6
 17970                           tablat	equ	0xFF5
 17971                           prodh	equ	0xFF4
 17972                           prodl	equ	0xFF3
 17973                           intcon	equ	0xFF2
 17974                           intcon2	equ	0xFF1
 17975                           intcon3	equ	0xFF0
 17976                           indf0	equ	0xFEF
 17977                           postinc0	equ	0xFEE
 17978                           fsr0h	equ	0xFEA
 17979                           fsr0l	equ	0xFE9
 17980                           wreg	equ	0xFE8
 17981                           postinc1	equ	0xFE6
 17982                           postdec1	equ	0xFE5
 17983                           plusw1	equ	0xFE3
 17984                           fsr1h	equ	0xFE2
 17985                           fsr1l	equ	0xFE1
 17986                           indf2	equ	0xFDF
 17987                           postinc2	equ	0xFDE
 17988                           postdec2	equ	0xFDD
 17989                           plusw2	equ	0xFDB
 17990                           fsr2h	equ	0xFDA
 17991                           fsr2l	equ	0xFD9
 17992                           status	equ	0xFD8
 17993                           
 17994 ;; *************** function _ValidateDataRate *****************
 17995 ;; Defined at:
 17996 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17997 ;; Parameters:    Size  Location     Type
 17998 ;;  dataRate        1    wreg     unsigned char 
 17999 ;; Auto vars:     Size  Location     Type
 18000 ;;  dataRate        1    0[BANK0 ] unsigned char 
 18001 ;;  result          1    1[BANK0 ] enum E7249
 18002 ;; Return value:  Size  Location     Type
 18003 ;;                  1    wreg      enum E7249
 18004 ;; Registers used:
 18005 ;;		wreg, status,2, status,0
 18006 ;; Tracked objects:
 18007 ;;		On entry : 0/0
 18008 ;;		On exit  : 0/0
 18009 ;;		Unchanged: 0/0
 18010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18012 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18014 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18015 ;;Total ram usage:        2 bytes
 18016 ;; Hardware stack levels used:    1
 18017 ;; Hardware stack levels required when called:    7
 18018 ;; This function calls:
 18019 ;;		Nothing
 18020 ;; This function is called by:
 18021 ;;		_ExecuteLinkAdr
 18022 ;;		_ExecuteRxParamSetupReq
 18023 ;;		_ValidateDataRange
 18024 ;;		_LORAWAN_SetReceiveWindow2Parameters
 18025 ;;		_LORAWAN_SetCurrentDataRate
 18026 ;; This function uses a non-reentrant model
 18027 ;;
 18028                           
 18029                           	psect	text88
 18030  008B1A                     __ptext88:
 18031                           	opt stack 0
 18032  008B1A                     _ValidateDataRate:
 18033                           	opt stack 17
 18034                           
 18035                           ; BSR set to: 0
 18036                           ;incstack = 0
 18037                           ;ValidateDataRate@dataRate stored from wreg
 18038  008B1A  0100               	movlb	0	; () banked
 18039  008B1C  6F60               	movwf	ValidateDataRate@dataRate& (0+255),b
 18040                           
 18041                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 18042  008B1E  0E00               	movlw	0
 18043  008B20  0100               	movlb	0	; () banked
 18044  008B22  6F61               	movwf	ValidateDataRate@result& (0+255),b
 18045                           
 18046                           ; BSR set to: 0
 18047                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 18048  008B24  0E07               	movlw	7
 18049  008B26  6560               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 18050  008B28  D002               	goto	l1088
 18051                           
 18052                           ; BSR set to: 0
 18053                           ;lorawan_eu.c: 575: {
 18054                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 18055  008B2A  0E03               	movlw	3
 18056  008B2C  6F61               	movwf	ValidateDataRate@result& (0+255),b
 18057  008B2E                     l1088:
 18058                           
 18059                           ; BSR set to: 0
 18060                           ;lorawan_eu.c: 577: }
 18061                           ;lorawan_eu.c: 579: return result;
 18062  008B2E  5161               	movf	ValidateDataRate@result& (0+255),w,b
 18063  008B30  0012               	return	
 18064  008B32                     __end_of_ValidateDataRate:
 18065                           	opt stack 0
 18066                           tosu	equ	0xFFF
 18067                           tosh	equ	0xFFE
 18068                           tosl	equ	0xFFD
 18069                           pclath	equ	0xFFA
 18070                           tblptru	equ	0xFF8
 18071                           tblptrh	equ	0xFF7
 18072                           tblptrl	equ	0xFF6
 18073                           tablat	equ	0xFF5
 18074                           prodh	equ	0xFF4
 18075                           prodl	equ	0xFF3
 18076                           intcon	equ	0xFF2
 18077                           intcon2	equ	0xFF1
 18078                           intcon3	equ	0xFF0
 18079                           indf0	equ	0xFEF
 18080                           postinc0	equ	0xFEE
 18081                           fsr0h	equ	0xFEA
 18082                           fsr0l	equ	0xFE9
 18083                           wreg	equ	0xFE8
 18084                           postinc1	equ	0xFE6
 18085                           postdec1	equ	0xFE5
 18086                           plusw1	equ	0xFE3
 18087                           fsr1h	equ	0xFE2
 18088                           fsr1l	equ	0xFE1
 18089                           indf2	equ	0xFDF
 18090                           postinc2	equ	0xFDE
 18091                           postdec2	equ	0xFDD
 18092                           plusw2	equ	0xFDB
 18093                           fsr2h	equ	0xFDA
 18094                           fsr2l	equ	0xFD9
 18095                           status	equ	0xFD8
 18096                           
 18097 ;; *************** function _ValidateChannelMaskCntl *****************
 18098 ;; Defined at:
 18099 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18100 ;; Parameters:    Size  Location     Type
 18101 ;;  channelMaskC    1    wreg     unsigned char 
 18102 ;; Auto vars:     Size  Location     Type
 18103 ;;  channelMaskC    1    1[BANK0 ] unsigned char 
 18104 ;;  result          1    0[BANK0 ] enum E7249
 18105 ;; Return value:  Size  Location     Type
 18106 ;;                  1    wreg      enum E7249
 18107 ;; Registers used:
 18108 ;;		wreg, status,2, status,0
 18109 ;; Tracked objects:
 18110 ;;		On entry : 0/0
 18111 ;;		On exit  : 0/0
 18112 ;;		Unchanged: 0/0
 18113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18115 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18117 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18118 ;;Total ram usage:        2 bytes
 18119 ;; Hardware stack levels used:    1
 18120 ;; Hardware stack levels required when called:    7
 18121 ;; This function calls:
 18122 ;;		Nothing
 18123 ;; This function is called by:
 18124 ;;		_ExecuteLinkAdr
 18125 ;; This function uses a non-reentrant model
 18126 ;;
 18127                           
 18128                           	psect	text89
 18129  00890C                     __ptext89:
 18130                           	opt stack 0
 18131  00890C                     _ValidateChannelMaskCntl:
 18132                           	opt stack 17
 18133                           
 18134                           ; BSR set to: 0
 18135                           ;incstack = 0
 18136                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 18137  00890C  0100               	movlb	0	; () banked
 18138  00890E  6F61               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 18139                           
 18140                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 18141  008910  0E00               	movlw	0
 18142  008912  0100               	movlb	0	; () banked
 18143  008914  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 18144                           
 18145                           ; BSR set to: 0
 18146                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 18147  008916  5161               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 18148  008918  B4D8               	btfsc	status,2,c
 18149  00891A  D006               	goto	l1259
 18150                           
 18151                           ; BSR set to: 0
 18152  00891C  0E06               	movlw	6
 18153  00891E  1961               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 18154  008920  B4D8               	btfsc	status,2,c
 18155  008922  D002               	goto	l1259
 18156                           
 18157                           ; BSR set to: 0
 18158                           ;lorawan_eu.c: 1142: {
 18159                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 18160  008924  0E03               	movlw	3
 18161  008926  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 18162  008928                     l1259:
 18163                           
 18164                           ; BSR set to: 0
 18165                           ;lorawan_eu.c: 1144: }
 18166                           ;lorawan_eu.c: 1146: return result;
 18167  008928  5160               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 18168  00892A  0012               	return	
 18169  00892C                     __end_of_ValidateChannelMaskCntl:
 18170                           	opt stack 0
 18171                           tosu	equ	0xFFF
 18172                           tosh	equ	0xFFE
 18173                           tosl	equ	0xFFD
 18174                           pclath	equ	0xFFA
 18175                           tblptru	equ	0xFF8
 18176                           tblptrh	equ	0xFF7
 18177                           tblptrl	equ	0xFF6
 18178                           tablat	equ	0xFF5
 18179                           prodh	equ	0xFF4
 18180                           prodl	equ	0xFF3
 18181                           intcon	equ	0xFF2
 18182                           intcon2	equ	0xFF1
 18183                           intcon3	equ	0xFF0
 18184                           indf0	equ	0xFEF
 18185                           postinc0	equ	0xFEE
 18186                           fsr0h	equ	0xFEA
 18187                           fsr0l	equ	0xFE9
 18188                           wreg	equ	0xFE8
 18189                           postinc1	equ	0xFE6
 18190                           postdec1	equ	0xFE5
 18191                           plusw1	equ	0xFE3
 18192                           fsr1h	equ	0xFE2
 18193                           fsr1l	equ	0xFE1
 18194                           indf2	equ	0xFDF
 18195                           postinc2	equ	0xFDE
 18196                           postdec2	equ	0xFDD
 18197                           plusw2	equ	0xFDB
 18198                           fsr2h	equ	0xFDA
 18199                           fsr2l	equ	0xFD9
 18200                           status	equ	0xFD8
 18201                           
 18202 ;; *************** function _ValidateChannelMask *****************
 18203 ;; Defined at:
 18204 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18205 ;; Parameters:    Size  Location     Type
 18206 ;;  channelMask     2    0[BANK0 ] unsigned int 
 18207 ;; Auto vars:     Size  Location     Type
 18208 ;;  i               1    4[BANK0 ] unsigned char 
 18209 ;; Return value:  Size  Location     Type
 18210 ;;                  1    wreg      enum E7249
 18211 ;; Registers used:
 18212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18213 ;; Tracked objects:
 18214 ;;		On entry : 0/0
 18215 ;;		On exit  : 0/0
 18216 ;;		Unchanged: 0/0
 18217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18218 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18220 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18221 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18222 ;;Total ram usage:        5 bytes
 18223 ;; Hardware stack levels used:    1
 18224 ;; Hardware stack levels required when called:    7
 18225 ;; This function calls:
 18226 ;;		Nothing
 18227 ;; This function is called by:
 18228 ;;		_ExecuteLinkAdr
 18229 ;; This function uses a non-reentrant model
 18230 ;;
 18231                           
 18232                           	psect	text90
 18233  007B18                     __ptext90:
 18234                           	opt stack 0
 18235  007B18                     _ValidateChannelMask:
 18236                           	opt stack 17
 18237                           
 18238                           ;lorawan_eu.c: 1168: uint8_t i = 0;
 18239                           
 18240                           ; BSR set to: 0
 18241                           ;incstack = 0
 18242  007B18  0E00               	movlw	0
 18243  007B1A  0100               	movlb	0	; () banked
 18244  007B1C  6F64               	movwf	ValidateChannelMask@i& (0+255),b
 18245                           
 18246                           ; BSR set to: 0
 18247                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 18248  007B1E  5160               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 18249  007B20  1161               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 18250  007B22  B4D8               	btfsc	status,2,c
 18251  007B24  D026               	goto	l1272
 18252                           
 18253                           ; BSR set to: 0
 18254                           ;lorawan_eu.c: 1171: {
 18255                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 18256  007B26  0E00               	movlw	0
 18257  007B28  6F64               	movwf	ValidateChannelMask@i& (0+255),b
 18258  007B2A                     l14245:
 18259                           
 18260                           ; BSR set to: 0
 18261  007B2A  0E0F               	movlw	15
 18262  007B2C  6564               	cpfsgt	ValidateChannelMask@i& (0+255),b
 18263  007B2E  D001               	goto	l1273
 18264  007B30  D01E               	goto	u16150
 18265  007B32                     l1273:
 18266                           
 18267                           ; BSR set to: 0
 18268                           ;lorawan_eu.c: 1173: {
 18269                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 18270  007B32  A160               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 18271  007B34  D013               	goto	l1275
 18272                           
 18273                           ; BSR set to: 0
 18274  007B36  5164               	movf	ValidateChannelMask@i& (0+255),w,b
 18275  007B38  0D0E               	mullw	14
 18276  007B3A  0E0D               	movlw	13
 18277  007B3C  26F3               	addwf	prodl,f,c
 18278  007B3E  0E00               	movlw	0
 18279  007B40  22F4               	addwfc	prodh,f,c
 18280  007B42  0E00               	movlw	low _Channels
 18281  007B44  24F3               	addwf	prodl,w,c
 18282  007B46  6ED9               	movwf	fsr2l,c
 18283  007B48  0E04               	movlw	high _Channels
 18284  007B4A  20F4               	addwfc	prodh,w,c
 18285  007B4C  6EDA               	movwf	fsr2h,c
 18286  007B4E  50DF               	movf	indf2,w,c
 18287  007B50  0B07               	andlw	7
 18288  007B52  0A07               	xorlw	7
 18289  007B54  B4D8               	btfsc	status,2,c
 18290  007B56  D002               	goto	l1275
 18291                           
 18292                           ; BSR set to: 0
 18293                           ;lorawan_eu.c: 1175: {
 18294                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 18295  007B58  0E03               	movlw	3
 18296                           
 18297                           ; BSR set to: 0
 18298  007B5A  0012               	return	
 18299  007B5C                     l1275:
 18300                           
 18301                           ; BSR set to: 0
 18302                           ;lorawan_eu.c: 1178: else
 18303                           ;lorawan_eu.c: 1179: {
 18304                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 18305                           
 18306                           ; BSR set to: 0
 18307  007B5C  90D8               	bcf	status,0,c
 18308  007B5E  3161               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 18309  007B60  6F62               	movwf	??_ValidateChannelMask& (0+255),b
 18310  007B62  3160               	rrcf	ValidateChannelMask@channelMask& (0+255),w,b
 18311  007B64  6F60               	movwf	ValidateChannelMask@channelMask& (0+255),b
 18312  007B66  C062  F061         	movff	??_ValidateChannelMask,ValidateChannelMask@channelMask+1
 18313                           
 18314                           ; BSR set to: 0
 18315                           
 18316                           ; BSR set to: 0
 18317  007B6A  2B64               	incf	ValidateChannelMask@i& (0+255),f,b
 18318  007B6C  D7DE               	goto	l14245
 18319  007B6E                     u16150:
 18320                           
 18321                           ; BSR set to: 0
 18322                           ;lorawan_eu.c: 1181: }
 18323                           ;lorawan_eu.c: 1182: }
 18324                           ;lorawan_eu.c: 1184: return OK;
 18325                           
 18326                           ; BSR set to: 0
 18327  007B6E  0E00               	movlw	0
 18328                           
 18329                           ; BSR set to: 0
 18330                           ;lorawan_eu.c: 1185: }
 18331                           
 18332                           ; BSR set to: 0
 18333  007B70  0012               	return	
 18334  007B72                     l1272:
 18335                           
 18336                           ; BSR set to: 0
 18337                           ;lorawan_eu.c: 1186: else
 18338                           ;lorawan_eu.c: 1187: {
 18339                           ;lorawan_eu.c: 1189: return INVALID_PARAMETER;
 18340                           
 18341                           ; BSR set to: 0
 18342  007B72  0E03               	movlw	3
 18343                           
 18344                           ; BSR set to: 0
 18345  007B74  0012               	return	
 18346  007B76                     __end_of_ValidateChannelMask:
 18347                           	opt stack 0
 18348                           tosu	equ	0xFFF
 18349                           tosh	equ	0xFFE
 18350                           tosl	equ	0xFFD
 18351                           pclath	equ	0xFFA
 18352                           tblptru	equ	0xFF8
 18353                           tblptrh	equ	0xFF7
 18354                           tblptrl	equ	0xFF6
 18355                           tablat	equ	0xFF5
 18356                           prodh	equ	0xFF4
 18357                           prodl	equ	0xFF3
 18358                           intcon	equ	0xFF2
 18359                           intcon2	equ	0xFF1
 18360                           intcon3	equ	0xFF0
 18361                           indf0	equ	0xFEF
 18362                           postinc0	equ	0xFEE
 18363                           fsr0h	equ	0xFEA
 18364                           fsr0l	equ	0xFE9
 18365                           wreg	equ	0xFE8
 18366                           postinc1	equ	0xFE6
 18367                           postdec1	equ	0xFE5
 18368                           plusw1	equ	0xFE3
 18369                           fsr1h	equ	0xFE2
 18370                           fsr1l	equ	0xFE1
 18371                           indf2	equ	0xFDF
 18372                           postinc2	equ	0xFDE
 18373                           postdec2	equ	0xFDD
 18374                           plusw2	equ	0xFDB
 18375                           fsr2h	equ	0xFDA
 18376                           fsr2l	equ	0xFD9
 18377                           status	equ	0xFD8
 18378                           
 18379 ;; *************** function _UpdateTxPower *****************
 18380 ;; Defined at:
 18381 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18382 ;; Parameters:    Size  Location     Type
 18383 ;;  txPowerNew      1    wreg     unsigned char 
 18384 ;; Auto vars:     Size  Location     Type
 18385 ;;  txPowerNew      1    0[BANK0 ] unsigned char 
 18386 ;; Return value:  Size  Location     Type
 18387 ;;                  1    wreg      void 
 18388 ;; Registers used:
 18389 ;;		wreg
 18390 ;; Tracked objects:
 18391 ;;		On entry : 0/0
 18392 ;;		On exit  : 0/0
 18393 ;;		Unchanged: 0/0
 18394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18396 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18398 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18399 ;;Total ram usage:        1 bytes
 18400 ;; Hardware stack levels used:    1
 18401 ;; Hardware stack levels required when called:    7
 18402 ;; This function calls:
 18403 ;;		Nothing
 18404 ;; This function is called by:
 18405 ;;		_ExecuteLinkAdr
 18406 ;;		_LORAWAN_SetTxPower
 18407 ;; This function uses a non-reentrant model
 18408 ;;
 18409                           
 18410                           	psect	text91
 18411  008CD4                     __ptext91:
 18412                           	opt stack 0
 18413  008CD4                     _UpdateTxPower:
 18414                           	opt stack 17
 18415                           
 18416                           ; BSR set to: 0
 18417                           ;incstack = 0
 18418                           ;UpdateTxPower@txPowerNew stored from wreg
 18419  008CD4  0100               	movlb	0	; () banked
 18420  008CD6  6F60               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 18421                           
 18422                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 18423  008CD8  C060  F2E1         	movff	UpdateTxPower@txPowerNew,_loRa+225
 18424  008CDC  0012               	return		;funcret
 18425  008CDE                     __end_of_UpdateTxPower:
 18426                           	opt stack 0
 18427                           tosu	equ	0xFFF
 18428                           tosh	equ	0xFFE
 18429                           tosl	equ	0xFFD
 18430                           pclath	equ	0xFFA
 18431                           tblptru	equ	0xFF8
 18432                           tblptrh	equ	0xFF7
 18433                           tblptrl	equ	0xFF6
 18434                           tablat	equ	0xFF5
 18435                           prodh	equ	0xFF4
 18436                           prodl	equ	0xFF3
 18437                           intcon	equ	0xFF2
 18438                           intcon2	equ	0xFF1
 18439                           intcon3	equ	0xFF0
 18440                           indf0	equ	0xFEF
 18441                           postinc0	equ	0xFEE
 18442                           fsr0h	equ	0xFEA
 18443                           fsr0l	equ	0xFE9
 18444                           wreg	equ	0xFE8
 18445                           postinc1	equ	0xFE6
 18446                           postdec1	equ	0xFE5
 18447                           plusw1	equ	0xFE3
 18448                           fsr1h	equ	0xFE2
 18449                           fsr1l	equ	0xFE1
 18450                           indf2	equ	0xFDF
 18451                           postinc2	equ	0xFDE
 18452                           postdec2	equ	0xFDD
 18453                           plusw2	equ	0xFDB
 18454                           fsr2h	equ	0xFDA
 18455                           fsr2l	equ	0xFD9
 18456                           status	equ	0xFD8
 18457                           
 18458 ;; *************** function _UpdateCurrentDataRate *****************
 18459 ;; Defined at:
 18460 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18461 ;; Parameters:    Size  Location     Type
 18462 ;;  valueNew        1    wreg     unsigned char 
 18463 ;; Auto vars:     Size  Location     Type
 18464 ;;  valueNew        1    0[BANK0 ] unsigned char 
 18465 ;; Return value:  Size  Location     Type
 18466 ;;                  1    wreg      void 
 18467 ;; Registers used:
 18468 ;;		wreg
 18469 ;; Tracked objects:
 18470 ;;		On entry : 0/0
 18471 ;;		On exit  : 0/0
 18472 ;;		Unchanged: 0/0
 18473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18475 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18477 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18478 ;;Total ram usage:        1 bytes
 18479 ;; Hardware stack levels used:    1
 18480 ;; Hardware stack levels required when called:    7
 18481 ;; This function calls:
 18482 ;;		Nothing
 18483 ;; This function is called by:
 18484 ;;		_ExecuteLinkAdr
 18485 ;;		_LORAWAN_SetCurrentDataRate
 18486 ;; This function uses a non-reentrant model
 18487 ;;
 18488                           
 18489                           	psect	text92
 18490  008CDE                     __ptext92:
 18491                           	opt stack 0
 18492  008CDE                     _UpdateCurrentDataRate:
 18493                           	opt stack 17
 18494                           
 18495                           ;incstack = 0
 18496                           ;UpdateCurrentDataRate@valueNew stored from wreg
 18497  008CDE  0100               	movlb	0	; () banked
 18498  008CE0  6F60               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 18499                           
 18500                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 18501  008CE2  C060  F2DF         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 18502  008CE6  0012               	return		;funcret
 18503  008CE8                     __end_of_UpdateCurrentDataRate:
 18504                           	opt stack 0
 18505                           tosu	equ	0xFFF
 18506                           tosh	equ	0xFFE
 18507                           tosl	equ	0xFFD
 18508                           pclath	equ	0xFFA
 18509                           tblptru	equ	0xFF8
 18510                           tblptrh	equ	0xFF7
 18511                           tblptrl	equ	0xFF6
 18512                           tablat	equ	0xFF5
 18513                           prodh	equ	0xFF4
 18514                           prodl	equ	0xFF3
 18515                           intcon	equ	0xFF2
 18516                           intcon2	equ	0xFF1
 18517                           intcon3	equ	0xFF0
 18518                           indf0	equ	0xFEF
 18519                           postinc0	equ	0xFEE
 18520                           fsr0h	equ	0xFEA
 18521                           fsr0l	equ	0xFE9
 18522                           wreg	equ	0xFE8
 18523                           postinc1	equ	0xFE6
 18524                           postdec1	equ	0xFE5
 18525                           plusw1	equ	0xFE3
 18526                           fsr1h	equ	0xFE2
 18527                           fsr1l	equ	0xFE1
 18528                           indf2	equ	0xFDF
 18529                           postinc2	equ	0xFDE
 18530                           postdec2	equ	0xFDD
 18531                           plusw2	equ	0xFDB
 18532                           fsr2h	equ	0xFDA
 18533                           fsr2l	equ	0xFD9
 18534                           status	equ	0xFD8
 18535                           
 18536 ;; *************** function _EnableChannels *****************
 18537 ;; Defined at:
 18538 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18539 ;; Parameters:    Size  Location     Type
 18540 ;;  channelMask     2   12[BANK0 ] unsigned int 
 18541 ;;  channelMaskC    1   14[BANK0 ] unsigned char 
 18542 ;; Auto vars:     Size  Location     Type
 18543 ;;		None
 18544 ;; Return value:  Size  Location     Type
 18545 ;;                  1    wreg      void 
 18546 ;; Registers used:
 18547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18548 ;; Tracked objects:
 18549 ;;		On entry : 0/0
 18550 ;;		On exit  : 0/0
 18551 ;;		Unchanged: 0/0
 18552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18553 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18556 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18557 ;;Total ram usage:        3 bytes
 18558 ;; Hardware stack levels used:    1
 18559 ;; Hardware stack levels required when called:    9
 18560 ;; This function calls:
 18561 ;;		_EnableChannels1
 18562 ;; This function is called by:
 18563 ;;		_ExecuteLinkAdr
 18564 ;; This function uses a non-reentrant model
 18565 ;;
 18566                           
 18567                           	psect	text93
 18568  008A66                     __ptext93:
 18569                           	opt stack 0
 18570  008A66                     _EnableChannels:
 18571                           	opt stack 15
 18572                           
 18573                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 18574                           
 18575                           ;incstack = 0
 18576  008A66  C06C  F064         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 18577  008A6A  C06D  F065         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 18578  008A6E  C06E  F066         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 18579  008A72  0E00               	movlw	0
 18580  008A74  0100               	movlb	0	; () banked
 18581  008A76  6F67               	movwf	EnableChannels1@channelIndexMin& (0+255),b
 18582  008A78  0E10               	movlw	16
 18583  008A7A  6F68               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 18584  008A7C  EC2A  F03B         	call	_EnableChannels1	;wreg free
 18585  008A80  0012               	return		;funcret
 18586  008A82                     __end_of_EnableChannels:
 18587                           	opt stack 0
 18588                           tosu	equ	0xFFF
 18589                           tosh	equ	0xFFE
 18590                           tosl	equ	0xFFD
 18591                           pclath	equ	0xFFA
 18592                           tblptru	equ	0xFF8
 18593                           tblptrh	equ	0xFF7
 18594                           tblptrl	equ	0xFF6
 18595                           tablat	equ	0xFF5
 18596                           prodh	equ	0xFF4
 18597                           prodl	equ	0xFF3
 18598                           intcon	equ	0xFF2
 18599                           intcon2	equ	0xFF1
 18600                           intcon3	equ	0xFF0
 18601                           indf0	equ	0xFEF
 18602                           postinc0	equ	0xFEE
 18603                           fsr0h	equ	0xFEA
 18604                           fsr0l	equ	0xFE9
 18605                           wreg	equ	0xFE8
 18606                           postinc1	equ	0xFE6
 18607                           postdec1	equ	0xFE5
 18608                           plusw1	equ	0xFE3
 18609                           fsr1h	equ	0xFE2
 18610                           fsr1l	equ	0xFE1
 18611                           indf2	equ	0xFDF
 18612                           postinc2	equ	0xFDE
 18613                           postdec2	equ	0xFDD
 18614                           plusw2	equ	0xFDB
 18615                           fsr2h	equ	0xFDA
 18616                           fsr2l	equ	0xFD9
 18617                           status	equ	0xFD8
 18618                           
 18619 ;; *************** function _EnableChannels1 *****************
 18620 ;; Defined at:
 18621 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18622 ;; Parameters:    Size  Location     Type
 18623 ;;  channelMask     2    4[BANK0 ] unsigned int 
 18624 ;;  channelMaskC    1    6[BANK0 ] unsigned char 
 18625 ;;  channelIndex    1    7[BANK0 ] unsigned char 
 18626 ;;  channelIndex    1    8[BANK0 ] unsigned char 
 18627 ;; Auto vars:     Size  Location     Type
 18628 ;;  i               1   11[BANK0 ] unsigned char 
 18629 ;; Return value:  Size  Location     Type
 18630 ;;                  1    wreg      void 
 18631 ;; Registers used:
 18632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18633 ;; Tracked objects:
 18634 ;;		On entry : 0/0
 18635 ;;		On exit  : 0/0
 18636 ;;		Unchanged: 0/0
 18637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18638 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18639 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18640 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18641 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18642 ;;Total ram usage:        8 bytes
 18643 ;; Hardware stack levels used:    1
 18644 ;; Hardware stack levels required when called:    8
 18645 ;; This function calls:
 18646 ;;		_UpdateChannelIdStatus
 18647 ;; This function is called by:
 18648 ;;		_EnableChannels
 18649 ;; This function uses a non-reentrant model
 18650 ;;
 18651                           
 18652                           	psect	text94
 18653  007654                     __ptext94:
 18654                           	opt stack 0
 18655  007654                     _EnableChannels1:
 18656                           	opt stack 15
 18657                           
 18658                           ;lorawan_eu.c: 1195: uint8_t i;
 18659                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 18660                           
 18661                           ;incstack = 0
 18662  007654  0E06               	movlw	6
 18663  007656  0100               	movlb	0	; () banked
 18664  007658  1966               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 18665  00765A  A4D8               	btfss	status,2,c
 18666  00765C  D00F               	goto	l1281
 18667                           
 18668                           ; BSR set to: 0
 18669                           ;lorawan_eu.c: 1198: {
 18670                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 18671  00765E  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 18672  007662  D007               	goto	l1282
 18673  007664                     
 18674                           ; BSR set to: 0
 18675                           ;lorawan_eu.c: 1200: {
 18676                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 18677                           
 18678                           ; BSR set to: 0
 18679  007664  0E01               	movlw	1
 18680  007666  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 18681  007668  516B               	movf	EnableChannels1@i& (0+255),w,b
 18682  00766A  ECBE  F027         	call	_UpdateChannelIdStatus
 18683  00766E  0100               	movlb	0	; () banked
 18684  007670  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 18685  007672                     l1282:
 18686                           
 18687                           ; BSR set to: 0
 18688                           
 18689                           ; BSR set to: 0
 18690  007672  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 18691  007674  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 18692  007676  B0D8               	btfsc	status,0,c
 18693  007678  0012               	return	
 18694  00767A  D7F4               	goto	l1283
 18695  00767C                     l1281:
 18696                           
 18697                           ; BSR set to: 0
 18698                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 18699                           
 18700                           ; BSR set to: 0
 18701  00767C  5166               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 18702  00767E  A4D8               	btfss	status,2,c
 18703  007680  0012               	return	
 18704                           
 18705                           ; BSR set to: 0
 18706                           ;lorawan_eu.c: 1205: {
 18707                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 18708  007682  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 18709  007686  D017               	goto	l1287
 18710  007688                     l1288:
 18711                           
 18712                           ; BSR set to: 0
 18713                           ;lorawan_eu.c: 1207: {
 18714                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 18715  007688  A164               	btfss	EnableChannels1@channelMask& (0+255),0,b
 18716  00768A  D006               	goto	l1289
 18717                           
 18718                           ; BSR set to: 0
 18719                           ;lorawan_eu.c: 1209: {
 18720                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 18721  00768C  0E01               	movlw	1
 18722  00768E  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 18723  007690  516B               	movf	EnableChannels1@i& (0+255),w,b
 18724  007692  ECBE  F027         	call	_UpdateChannelIdStatus
 18725                           
 18726                           ;lorawan_eu.c: 1211: }
 18727  007696  D006               	goto	l1290
 18728  007698                     l1289:
 18729                           
 18730                           ;lorawan_eu.c: 1212: else
 18731                           ;lorawan_eu.c: 1213: {
 18732                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 18733  007698  0E00               	movlw	0
 18734  00769A  0100               	movlb	0	; () banked
 18735  00769C  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 18736  00769E  516B               	movf	EnableChannels1@i& (0+255),w,b
 18737  0076A0  ECBE  F027         	call	_UpdateChannelIdStatus
 18738  0076A4                     l1290:
 18739                           
 18740                           ;lorawan_eu.c: 1215: }
 18741                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 18742  0076A4  90D8               	bcf	status,0,c
 18743  0076A6  0100               	movlb	0	; () banked
 18744  0076A8  3165               	rrcf	(EnableChannels1@channelMask+1)& (0+255),w,b
 18745  0076AA  6F69               	movwf	??_EnableChannels1& (0+255),b
 18746  0076AC  3164               	rrcf	EnableChannels1@channelMask& (0+255),w,b
 18747  0076AE  6F64               	movwf	EnableChannels1@channelMask& (0+255),b
 18748  0076B0  C069  F065         	movff	??_EnableChannels1,EnableChannels1@channelMask+1
 18749                           
 18750                           ; BSR set to: 0
 18751  0076B4  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 18752  0076B6                     l1287:
 18753                           
 18754                           ; BSR set to: 0
 18755                           
 18756                           ; BSR set to: 0
 18757  0076B6  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 18758  0076B8  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 18759  0076BA  B0D8               	btfsc	status,0,c
 18760  0076BC  0012               	return	
 18761  0076BE  D7E4               	goto	l1288
 18762  0076C0                     __end_of_EnableChannels1:
 18763                           	opt stack 0
 18764                           tosu	equ	0xFFF
 18765                           tosh	equ	0xFFE
 18766                           tosl	equ	0xFFD
 18767                           pclath	equ	0xFFA
 18768                           tblptru	equ	0xFF8
 18769                           tblptrh	equ	0xFF7
 18770                           tblptrl	equ	0xFF6
 18771                           tablat	equ	0xFF5
 18772                           prodh	equ	0xFF4
 18773                           prodl	equ	0xFF3
 18774                           intcon	equ	0xFF2
 18775                           intcon2	equ	0xFF1
 18776                           intcon3	equ	0xFF0
 18777                           indf0	equ	0xFEF
 18778                           postinc0	equ	0xFEE
 18779                           fsr0h	equ	0xFEA
 18780                           fsr0l	equ	0xFE9
 18781                           wreg	equ	0xFE8
 18782                           postinc1	equ	0xFE6
 18783                           postdec1	equ	0xFE5
 18784                           plusw1	equ	0xFE3
 18785                           fsr1h	equ	0xFE2
 18786                           fsr1l	equ	0xFE1
 18787                           indf2	equ	0xFDF
 18788                           postinc2	equ	0xFDE
 18789                           postdec2	equ	0xFDD
 18790                           plusw2	equ	0xFDB
 18791                           fsr2h	equ	0xFDA
 18792                           fsr2l	equ	0xFD9
 18793                           status	equ	0xFD8
 18794                           
 18795 ;; *************** function _UpdateChannelIdStatus *****************
 18796 ;; Defined at:
 18797 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18798 ;; Parameters:    Size  Location     Type
 18799 ;;  channelId       1    wreg     unsigned char 
 18800 ;;  statusNew       1    0[BANK0 ] unsigned char 
 18801 ;; Auto vars:     Size  Location     Type
 18802 ;;  channelId       1    2[BANK0 ] unsigned char 
 18803 ;;  i               1    3[BANK0 ] unsigned char 
 18804 ;; Return value:  Size  Location     Type
 18805 ;;                  1    wreg      void 
 18806 ;; Registers used:
 18807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18808 ;; Tracked objects:
 18809 ;;		On entry : 0/0
 18810 ;;		On exit  : 0/0
 18811 ;;		Unchanged: 0/0
 18812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18813 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18814 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18815 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18816 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18817 ;;Total ram usage:        4 bytes
 18818 ;; Hardware stack levels used:    1
 18819 ;; Hardware stack levels required when called:    7
 18820 ;; This function calls:
 18821 ;;		Nothing
 18822 ;; This function is called by:
 18823 ;;		_LORAWAN_SetChannelIdStatus
 18824 ;;		_ExecuteNewChannel
 18825 ;;		_EnableChannels1
 18826 ;; This function uses a non-reentrant model
 18827 ;;
 18828                           
 18829                           	psect	text95
 18830  004F7C                     __ptext95:
 18831                           	opt stack 0
 18832  004F7C                     _UpdateChannelIdStatus:
 18833                           	opt stack 17
 18834                           
 18835                           ; BSR set to: 0
 18836                           ;incstack = 0
 18837                           ;UpdateChannelIdStatus@channelId stored from wreg
 18838  004F7C  0100               	movlb	0	; () banked
 18839  004F7E  6F62               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 18840                           
 18841                           ;lorawan_eu.c: 1044: uint8_t i;
 18842                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 18843  004F80  0100               	movlb	0	; () banked
 18844  004F82  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18845  004F84  0D0E               	mullw	14
 18846  004F86  0E04               	movlw	4
 18847  004F88  26F3               	addwf	prodl,f,c
 18848  004F8A  0E00               	movlw	0
 18849  004F8C  22F4               	addwfc	prodh,f,c
 18850  004F8E  0E00               	movlw	low _Channels
 18851  004F90  24F3               	addwf	prodl,w,c
 18852  004F92  6ED9               	movwf	fsr2l,c
 18853  004F94  0E04               	movlw	high _Channels
 18854  004F96  20F4               	addwfc	prodh,w,c
 18855  004F98  6EDA               	movwf	fsr2h,c
 18856  004F9A  C060  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 18857                           
 18858                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 18859  004F9E  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18860  004FA0  0D0E               	mullw	14
 18861  004FA2  0E04               	movlw	4
 18862  004FA4  26F3               	addwf	prodl,f,c
 18863  004FA6  0E00               	movlw	0
 18864  004FA8  22F4               	addwfc	prodh,f,c
 18865  004FAA  0E00               	movlw	low _Channels
 18866  004FAC  24F3               	addwf	prodl,w,c
 18867  004FAE  6ED9               	movwf	fsr2l,c
 18868  004FB0  0E04               	movlw	high _Channels
 18869  004FB2  20F4               	addwfc	prodh,w,c
 18870  004FB4  6EDA               	movwf	fsr2h,c
 18871  004FB6  50DF               	movf	indf2,w,c
 18872  004FB8  A4D8               	btfss	status,2,c
 18873  004FBA  D010               	goto	l1221
 18874                           
 18875                           ; BSR set to: 0
 18876                           ;lorawan_eu.c: 1048: {
 18877                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 18878  004FBC  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18879  004FBE  0D0E               	mullw	14
 18880  004FC0  0E08               	movlw	8
 18881  004FC2  26F3               	addwf	prodl,f,c
 18882  004FC4  0E00               	movlw	0
 18883  004FC6  22F4               	addwfc	prodh,f,c
 18884  004FC8  0E00               	movlw	low _Channels
 18885  004FCA  24F3               	addwf	prodl,w,c
 18886  004FCC  6ED9               	movwf	fsr2l,c
 18887  004FCE  0E04               	movlw	high _Channels
 18888  004FD0  20F4               	addwfc	prodh,w,c
 18889  004FD2  6EDA               	movwf	fsr2h,c
 18890  004FD4  6ADE               	clrf	postinc2,c
 18891  004FD6  6ADE               	clrf	postinc2,c
 18892  004FD8  6ADE               	clrf	postinc2,c
 18893  004FDA  6ADD               	clrf	postdec2,c
 18894  004FDC                     l1221:
 18895                           
 18896                           ; BSR set to: 0
 18897                           ;lorawan_eu.c: 1051: }
 18898                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 18899                           
 18900                           ; BSR set to: 0
 18901  004FDC  0E00               	movlw	0
 18902  004FDE  6F63               	movwf	UpdateChannelIdStatus@i& (0+255),b
 18903  004FE0  D06D               	goto	l1222
 18904  004FE2                     
 18905                           ; BSR set to: 0
 18906                           ;lorawan_eu.c: 1054: {
 18907                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 18908                           
 18909                           ; BSR set to: 0
 18910  004FE2  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18911  004FE4  0D0E               	mullw	14
 18912  004FE6  0E05               	movlw	5
 18913  004FE8  26F3               	addwf	prodl,f,c
 18914  004FEA  0E00               	movlw	0
 18915  004FEC  22F4               	addwfc	prodh,f,c
 18916  004FEE  0E00               	movlw	low _Channels
 18917  004FF0  24F3               	addwf	prodl,w,c
 18918  004FF2  6ED9               	movwf	fsr2l,c
 18919  004FF4  0E04               	movlw	high _Channels
 18920  004FF6  20F4               	addwfc	prodh,w,c
 18921  004FF8  6EDA               	movwf	fsr2h,c
 18922  004FFA  0104               	movlb	4	; () banked
 18923  004FFC  50DF               	movf	223,w,c
 18924  004FFE  0B0F               	andlw	15
 18925  005000  0100               	movlb	0	; () banked
 18926  005002  6F61               	movwf	??_UpdateChannelIdStatus& (0+255),b
 18927  005004  0102               	movlb	2	; () banked
 18928  005006  51EB               	movf	(_loRa+235)& (0+255),w,b
 18929  005008  0100               	movlb	0	; () banked
 18930  00500A  5D61               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 18931  00500C  B0D8               	btfsc	status,0,c
 18932  00500E  D020               	goto	l1224
 18933                           
 18934                           ; BSR set to: 0
 18935  005010  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18936  005012  0D0E               	mullw	14
 18937  005014  0E04               	movlw	4
 18938  005016  26F3               	addwf	prodl,f,c
 18939  005018  0E00               	movlw	0
 18940  00501A  22F4               	addwfc	prodh,f,c
 18941  00501C  0E00               	movlw	low _Channels
 18942  00501E  24F3               	addwf	prodl,w,c
 18943  005020  6ED9               	movwf	fsr2l,c
 18944  005022  0E04               	movlw	high _Channels
 18945  005024  20F4               	addwfc	prodh,w,c
 18946  005026  6EDA               	movwf	fsr2h,c
 18947  005028  04DE               	decf	postinc2,w,c
 18948  00502A  A4D8               	btfss	status,2,c
 18949  00502C  D011               	goto	l1224
 18950                           
 18951                           ; BSR set to: 0
 18952                           ;lorawan_eu.c: 1056: {
 18953                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 18954  00502E  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18955  005030  0D0E               	mullw	14
 18956  005032  0E05               	movlw	5
 18957  005034  26F3               	addwf	prodl,f,c
 18958  005036  0E00               	movlw	0
 18959  005038  22F4               	addwfc	prodh,f,c
 18960  00503A  0E00               	movlw	low _Channels
 18961  00503C  24F3               	addwf	prodl,w,c
 18962  00503E  6ED9               	movwf	fsr2l,c
 18963  005040  0E04               	movlw	high _Channels
 18964  005042  20F4               	addwfc	prodh,w,c
 18965  005044  6EDA               	movwf	fsr2h,c
 18966  005046  0104               	movlb	4	; () banked
 18967  005048  50DF               	movf	223,w,c
 18968  00504A  0B0F               	andlw	15
 18969  00504C  0102               	movlb	2	; () banked
 18970  00504E  6FEB               	movwf	(_loRa+235)& (0+255),b
 18971  005050                     l1224:
 18972                           
 18973                           ;lorawan_eu.c: 1058: }
 18974                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 18975  005050  0100               	movlb	0	; () banked
 18976  005052  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18977  005054  0D0E               	mullw	14
 18978  005056  0E05               	movlw	5
 18979  005058  26F3               	addwf	prodl,f,c
 18980  00505A  0E00               	movlw	0
 18981  00505C  22F4               	addwfc	prodh,f,c
 18982  00505E  0E00               	movlw	low _Channels
 18983  005060  24F3               	addwf	prodl,w,c
 18984  005062  6ED9               	movwf	fsr2l,c
 18985  005064  0E04               	movlw	high _Channels
 18986  005066  20F4               	addwfc	prodh,w,c
 18987  005068  6EDA               	movwf	fsr2h,c
 18988  00506A  0104               	movlb	4	; () banked
 18989  00506C  38DF               	swapf	223,w,c
 18990  00506E  0B0F               	andlw	15
 18991  005070  0102               	movlb	2	; () banked
 18992  005072  61EC               	cpfslt	(_loRa+236)& (0+255),b
 18993  005074  D021               	goto	l1225
 18994                           
 18995                           ; BSR set to: 2
 18996  005076  0100               	movlb	0	; () banked
 18997  005078  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18998  00507A  0D0E               	mullw	14
 18999  00507C  0E04               	movlw	4
 19000  00507E  26F3               	addwf	prodl,f,c
 19001  005080  0E00               	movlw	0
 19002  005082  22F4               	addwfc	prodh,f,c
 19003  005084  0E00               	movlw	low _Channels
 19004  005086  24F3               	addwf	prodl,w,c
 19005  005088  6ED9               	movwf	fsr2l,c
 19006  00508A  0E04               	movlw	high _Channels
 19007  00508C  20F4               	addwfc	prodh,w,c
 19008  00508E  6EDA               	movwf	fsr2h,c
 19009  005090  04DE               	decf	postinc2,w,c
 19010  005092  A4D8               	btfss	status,2,c
 19011  005094  D011               	goto	l1225
 19012                           
 19013                           ; BSR set to: 0
 19014                           ;lorawan_eu.c: 1060: {
 19015                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 19016  005096  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 19017  005098  0D0E               	mullw	14
 19018  00509A  0E05               	movlw	5
 19019  00509C  26F3               	addwf	prodl,f,c
 19020  00509E  0E00               	movlw	0
 19021  0050A0  22F4               	addwfc	prodh,f,c
 19022  0050A2  0E00               	movlw	low _Channels
 19023  0050A4  24F3               	addwf	prodl,w,c
 19024  0050A6  6ED9               	movwf	fsr2l,c
 19025  0050A8  0E04               	movlw	high _Channels
 19026  0050AA  20F4               	addwfc	prodh,w,c
 19027  0050AC  6EDA               	movwf	fsr2h,c
 19028  0050AE  0104               	movlb	4	; () banked
 19029  0050B0  38DF               	swapf	223,w,c
 19030  0050B2  0B0F               	andlw	15
 19031  0050B4  0102               	movlb	2	; () banked
 19032  0050B6  6FEC               	movwf	(_loRa+236)& (0+255),b
 19033  0050B8                     l1225:
 19034                           
 19035                           ; BSR set to: 2
 19036  0050B8  0100               	movlb	0	; () banked
 19037  0050BA  2B63               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 19038  0050BC                     l1222:
 19039                           
 19040                           ; BSR set to: 0
 19041                           
 19042                           ; BSR set to: 0
 19043  0050BC  0102               	movlb	2	; () banked
 19044  0050BE  51ED               	movf	(_loRa+237)& (0+255),w,b
 19045  0050C0  0100               	movlb	0	; () banked
 19046  0050C2  5D63               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 19047  0050C4  A0D8               	btfss	status,0,c
 19048  0050C6  D78D               	goto	l1223
 19049                           
 19050                           ; BSR set to: 0
 19051                           ;lorawan_eu.c: 1062: }
 19052                           ;lorawan_eu.c: 1063: }
 19053                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 19054                           
 19055                           ; BSR set to: 0
 19056  0050C8  0102               	movlb	2	; () banked
 19057  0050CA  51DF               	movf	(_loRa+223)& (0+255),w,b
 19058  0050CC  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 19059  0050CE  A0D8               	btfss	status,0,c
 19060                           
 19061                           ; BSR set to: 2
 19062                           ;lorawan_eu.c: 1066: {
 19063                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 19064  0050D0  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 19065                           
 19066                           ; BSR set to: 2
 19067                           ;lorawan_eu.c: 1068: }
 19068                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 19069                           
 19070                           ; BSR set to: 2
 19071  0050D4  51EB               	movf	(_loRa+235)& (0+255),w,b
 19072  0050D6  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 19073  0050D8  B0D8               	btfsc	status,0,c
 19074  0050DA  0012               	return	
 19075                           
 19076                           ; BSR set to: 2
 19077                           ;lorawan_eu.c: 1071: {
 19078                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 19079  0050DC  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 19080  0050E0  0012               	return	
 19081  0050E2                     __end_of_UpdateChannelIdStatus:
 19082                           	opt stack 0
 19083                           tosu	equ	0xFFF
 19084                           tosh	equ	0xFFE
 19085                           tosl	equ	0xFFD
 19086                           pclath	equ	0xFFA
 19087                           tblptru	equ	0xFF8
 19088                           tblptrh	equ	0xFF7
 19089                           tblptrl	equ	0xFF6
 19090                           tablat	equ	0xFF5
 19091                           prodh	equ	0xFF4
 19092                           prodl	equ	0xFF3
 19093                           intcon	equ	0xFF2
 19094                           intcon2	equ	0xFF1
 19095                           intcon3	equ	0xFF0
 19096                           indf0	equ	0xFEF
 19097                           postinc0	equ	0xFEE
 19098                           fsr0h	equ	0xFEA
 19099                           fsr0l	equ	0xFE9
 19100                           wreg	equ	0xFE8
 19101                           postinc1	equ	0xFE6
 19102                           postdec1	equ	0xFE5
 19103                           plusw1	equ	0xFE3
 19104                           fsr1h	equ	0xFE2
 19105                           fsr1l	equ	0xFE1
 19106                           indf2	equ	0xFDF
 19107                           postinc2	equ	0xFDE
 19108                           postdec2	equ	0xFDD
 19109                           plusw2	equ	0xFDB
 19110                           fsr2h	equ	0xFDA
 19111                           fsr2l	equ	0xFD9
 19112                           status	equ	0xFD8
 19113                           
 19114 ;; *************** function _ExecuteDutyCycle *****************
 19115 ;; Defined at:
 19116 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19117 ;; Parameters:    Size  Location     Type
 19118 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 19119 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 19120 ;; Auto vars:     Size  Location     Type
 19121 ;;  maxDCycle       1    5[BANK0 ] unsigned char 
 19122 ;; Return value:  Size  Location     Type
 19123 ;;                  2    0[BANK0 ] PTR unsigned char 
 19124 ;; Registers used:
 19125 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19126 ;; Tracked objects:
 19127 ;;		On entry : 0/0
 19128 ;;		On exit  : 0/0
 19129 ;;		Unchanged: 0/0
 19130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19131 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19132 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19133 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19134 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19135 ;;Total ram usage:        6 bytes
 19136 ;; Hardware stack levels used:    1
 19137 ;; Hardware stack levels required when called:    7
 19138 ;; This function calls:
 19139 ;;		Nothing
 19140 ;; This function is called by:
 19141 ;;		_MacExecuteCommands
 19142 ;; This function uses a non-reentrant model
 19143 ;;
 19144                           
 19145                           	psect	text96
 19146  007E3C                     __ptext96:
 19147                           	opt stack 0
 19148  007E3C                     _ExecuteDutyCycle:
 19149                           	opt stack 18
 19150                           
 19151                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 19152                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 19153                           
 19154                           ; BSR set to: 2
 19155                           ;incstack = 0
 19156  007E3C  C060  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 19157  007E40  C061  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 19158  007E44  50DF               	movf	indf2,w,c
 19159  007E46  0100               	movlb	0	; () banked
 19160  007E48  6F65               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 19161                           
 19162                           ; BSR set to: 0
 19163  007E4A  4B60               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 19164  007E4C  2B61               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 19165                           
 19166                           ; BSR set to: 0
 19167                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 19168  007E4E  0E0F               	movlw	15
 19169  007E50  6165               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 19170  007E52  D013               	goto	l1100
 19171                           
 19172                           ; BSR set to: 0
 19173                           ;lorawan_eu.c: 600: {
 19174                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 19175  007E54  C065  F062         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 19176  007E58  0E01               	movlw	1
 19177  007E5A  6F63               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 19178  007E5C  0E00               	movlw	0
 19179  007E5E  6F64               	movwf	(??_ExecuteDutyCycle+2)& (0+255),b
 19180  007E60  2B62               	incf	??_ExecuteDutyCycle& (0+255),f,b
 19181  007E62  D003               	goto	u16804
 19182  007E64                     u16805:
 19183  007E64  90D8               	bcf	status,0,c
 19184  007E66  3763               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 19185  007E68  3764               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 19186  007E6A                     u16804:
 19187  007E6A  2F62               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 19188  007E6C  D7FB               	goto	u16805
 19189  007E6E  C063  F2DB         	movff	??_ExecuteDutyCycle+1,_loRa+219
 19190  007E72  C064  F2DC         	movff	??_ExecuteDutyCycle+2,_loRa+220
 19191                           
 19192                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 19193  007E76  0102               	movlb	2	; () banked
 19194  007E78  8D03               	bsf	(_loRa+3)& (0+255),6,b
 19195  007E7A                     l1100:
 19196                           
 19197                           ;lorawan_eu.c: 603: }
 19198                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 19199  007E7A  0100               	movlb	0	; () banked
 19200  007E7C  2965               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 19201  007E7E  A4D8               	btfss	status,2,c
 19202  007E80  D002               	goto	l1101
 19203                           
 19204                           ; BSR set to: 0
 19205                           ;lorawan_eu.c: 606: {
 19206                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 19207  007E82  0102               	movlb	2	; () banked
 19208  007E84  8F02               	bsf	(_loRa+2)& (0+255),7,b
 19209  007E86                     l1101:
 19210                           
 19211                           ;lorawan_eu.c: 608: }
 19212                           ;lorawan_eu.c: 610: return ptr;
 19213                           
 19214                           ; BSR set to: 2
 19215  007E86  C060  F060         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 19216  007E8A  C061  F061         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 19217  007E8E  0012               	return	
 19218  007E90                     __end_of_ExecuteDutyCycle:
 19219                           	opt stack 0
 19220                           tosu	equ	0xFFF
 19221                           tosh	equ	0xFFE
 19222                           tosl	equ	0xFFD
 19223                           pclath	equ	0xFFA
 19224                           tblptru	equ	0xFF8
 19225                           tblptrh	equ	0xFF7
 19226                           tblptrl	equ	0xFF6
 19227                           tablat	equ	0xFF5
 19228                           prodh	equ	0xFF4
 19229                           prodl	equ	0xFF3
 19230                           intcon	equ	0xFF2
 19231                           intcon2	equ	0xFF1
 19232                           intcon3	equ	0xFF0
 19233                           indf0	equ	0xFEF
 19234                           postinc0	equ	0xFEE
 19235                           fsr0h	equ	0xFEA
 19236                           fsr0l	equ	0xFE9
 19237                           wreg	equ	0xFE8
 19238                           postinc1	equ	0xFE6
 19239                           postdec1	equ	0xFE5
 19240                           plusw1	equ	0xFE3
 19241                           fsr1h	equ	0xFE2
 19242                           fsr1l	equ	0xFE1
 19243                           indf2	equ	0xFDF
 19244                           postinc2	equ	0xFDE
 19245                           postdec2	equ	0xFDD
 19246                           plusw2	equ	0xFDB
 19247                           fsr2h	equ	0xFDA
 19248                           fsr2l	equ	0xFD9
 19249                           status	equ	0xFD8
 19250                           
 19251 ;; *************** function _ExecuteDevStatus *****************
 19252 ;; Defined at:
 19253 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19254 ;; Parameters:    Size  Location     Type
 19255 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 19256 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 19257 ;; Auto vars:     Size  Location     Type
 19258 ;;		None
 19259 ;; Return value:  Size  Location     Type
 19260 ;;                  2    0[BANK0 ] PTR unsigned char 
 19261 ;; Registers used:
 19262 ;;		wreg, status,2, status,0
 19263 ;; Tracked objects:
 19264 ;;		On entry : 0/0
 19265 ;;		On exit  : 0/0
 19266 ;;		Unchanged: 0/0
 19267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19268 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19271 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19272 ;;Total ram usage:        2 bytes
 19273 ;; Hardware stack levels used:    1
 19274 ;; Hardware stack levels required when called:    7
 19275 ;; This function calls:
 19276 ;;		Nothing
 19277 ;; This function is called by:
 19278 ;;		_MacExecuteCommands
 19279 ;; This function uses a non-reentrant model
 19280 ;;
 19281                           
 19282                           	psect	text97
 19283  008CE8                     __ptext97:
 19284                           	opt stack 0
 19285  008CE8                     _ExecuteDevStatus:
 19286                           	opt stack 18
 19287                           
 19288                           ;lorawan_eu.c: 674: return ptr;
 19289                           
 19290                           ;incstack = 0
 19291  008CE8  C060  F060         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 19292  008CEC  C061  F061         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 19293  008CF0  0012               	return	
 19294  008CF2                     __end_of_ExecuteDevStatus:
 19295                           	opt stack 0
 19296                           tosu	equ	0xFFF
 19297                           tosh	equ	0xFFE
 19298                           tosl	equ	0xFFD
 19299                           pclath	equ	0xFFA
 19300                           tblptru	equ	0xFF8
 19301                           tblptrh	equ	0xFF7
 19302                           tblptrl	equ	0xFF6
 19303                           tablat	equ	0xFF5
 19304                           prodh	equ	0xFF4
 19305                           prodl	equ	0xFF3
 19306                           intcon	equ	0xFF2
 19307                           intcon2	equ	0xFF1
 19308                           intcon3	equ	0xFF0
 19309                           indf0	equ	0xFEF
 19310                           postinc0	equ	0xFEE
 19311                           fsr0h	equ	0xFEA
 19312                           fsr0l	equ	0xFE9
 19313                           wreg	equ	0xFE8
 19314                           postinc1	equ	0xFE6
 19315                           postdec1	equ	0xFE5
 19316                           plusw1	equ	0xFE3
 19317                           fsr1h	equ	0xFE2
 19318                           fsr1l	equ	0xFE1
 19319                           indf2	equ	0xFDF
 19320                           postinc2	equ	0xFDE
 19321                           postdec2	equ	0xFDD
 19322                           plusw2	equ	0xFDB
 19323                           fsr2h	equ	0xFDA
 19324                           fsr2l	equ	0xFD9
 19325                           status	equ	0xFD8
 19326                           
 19327 ;; *************** function _LORAWAN_Send *****************
 19328 ;; Defined at:
 19329 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19330 ;; Parameters:    Size  Location     Type
 19331 ;;  confirmed       1    wreg     enum E7217
 19332 ;;  port            1  115[BANK0 ] unsigned char 
 19333 ;;  buffer          2  116[BANK0 ] PTR void 
 19334 ;;		 -> STR_3(6), NULL(0), 
 19335 ;;  bufferLength    1  118[BANK0 ] unsigned char 
 19336 ;; Auto vars:     Size  Location     Type
 19337 ;;  confirmed       1  121[BANK0 ] enum E7217
 19338 ;;  result          1  120[BANK0 ] enum E7190
 19339 ;; Return value:  Size  Location     Type
 19340 ;;                  1    wreg      enum E7190
 19341 ;; Registers used:
 19342 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19343 ;; Tracked objects:
 19344 ;;		On entry : 0/0
 19345 ;;		On exit  : 0/0
 19346 ;;		Unchanged: 0/0
 19347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19348 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19349 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19350 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19351 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19352 ;;Total ram usage:        7 bytes
 19353 ;; Hardware stack levels used:    1
 19354 ;; Hardware stack levels required when called:   13
 19355 ;; This function calls:
 19356 ;;		_AssemblePacket
 19357 ;;		_LORAWAN_GetMaxPayloadSize
 19358 ;;		_RADIO_ReceiveStop
 19359 ;;		_RADIO_Transmit
 19360 ;;		_SelectChannelForTransmission
 19361 ;; This function is called by:
 19362 ;;		_AutomaticReplyCallback
 19363 ;;		_LORAWAN_RxDone
 19364 ;;		_main
 19365 ;; This function uses a non-reentrant model
 19366 ;;
 19367                           
 19368                           	psect	text98
 19369  006818                     __ptext98:
 19370                           	opt stack 0
 19371  006818                     _LORAWAN_Send:
 19372                           	opt stack 17
 19373                           
 19374                           ;incstack = 0
 19375                           ;LORAWAN_Send@confirmed stored from wreg
 19376  006818  0100               	movlb	0	; () banked
 19377  00681A  6FD9               	movwf	LORAWAN_Send@confirmed& (0+255),b
 19378                           
 19379                           ;lorawan.c: 187: LorawanError_t result;
 19380                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 19381  00681C  0102               	movlb	2	; () banked
 19382  00681E  B103               	btfsc	(_loRa+3)& (0+255),0,b
 19383  006820  0012               	return	
 19384                           
 19385                           ; BSR set to: 2
 19386                           ;lorawan.c: 192: }
 19387                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 19388                           
 19389                           ; BSR set to: 2
 19390                           ;lorawan.c: 190: {
 19391                           ;lorawan.c: 191: return MAC_PAUSED;
 19392                           ;	Return value of _LORAWAN_Send is never used
 19393  006822  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 19394  006824  0012               	return	
 19395                           
 19396                           ; BSR set to: 2
 19397                           ;lorawan.c: 197: }
 19398                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 19399                           
 19400                           ; BSR set to: 2
 19401                           ;lorawan.c: 195: {
 19402                           ;lorawan.c: 196: return SILENT_IMMEDIATELY_ACTIVE;
 19403                           ;	Return value of _LORAWAN_Send is never used
 19404  006826  A902               	btfss	(_loRa+2)& (0+255),4,b
 19405  006828  0012               	return	
 19406                           
 19407                           ; BSR set to: 2
 19408                           ;lorawan.c: 202: }
 19409                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 19410                           
 19411                           ; BSR set to: 2
 19412                           
 19413                           ; BSR set to: 2
 19414                           ;lorawan.c: 200: {
 19415                           ;lorawan.c: 201: return NETWORK_NOT_JOINED;
 19416                           ;	Return value of _LORAWAN_Send is never used
 19417  00682A  0100               	movlb	0	; () banked
 19418  00682C  51D3               	movf	LORAWAN_Send@port& (0+255),w,b
 19419  00682E  A4D8               	btfss	status,2,c
 19420  006830  D003               	goto	l1522
 19421                           
 19422                           ; BSR set to: 0
 19423  006832  51D6               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 19424  006834  A4D8               	btfss	status,2,c
 19425  006836  0012               	return	
 19426  006838                     l1522:
 19427                           
 19428                           ; BSR set to: 0
 19429                           ;lorawan.c: 207: }
 19430                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 19431                           
 19432                           ; BSR set to: 0
 19433  006838  EC2C  F03D         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 19434  00683C  0100               	movlb	0	; () banked
 19435  00683E  6FD7               	movwf	??_LORAWAN_Send& (0+255),b
 19436  006840  51D6               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 19437  006842  5DD7               	subwf	??_LORAWAN_Send& (0+255),w,b
 19438  006844  A0D8               	btfss	status,0,c
 19439  006846  0012               	return	
 19440                           
 19441                           ; BSR set to: 0
 19442                           ;lorawan.c: 213: }
 19443                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 19444                           
 19445                           ; BSR set to: 0
 19446                           
 19447                           ; BSR set to: 0
 19448                           ;lorawan.c: 211: {
 19449                           ;lorawan.c: 212: return INVALID_BUFFER_LENGTH;
 19450                           ;	Return value of _LORAWAN_Send is never used
 19451  006848  0102               	movlb	2	; () banked
 19452  00684A  2906               	incf	(_loRa+6)& (0+255),w,b
 19453  00684C  E109               	bnz	l15149
 19454  00684E  2907               	incf	(_loRa+7)& (0+255),w,b
 19455  006850  E107               	bnz	l15149
 19456  006852  2908               	incf	(_loRa+8)& (0+255),w,b
 19457  006854  E105               	bnz	l15149
 19458  006856  2909               	incf	(_loRa+9)& (0+255),w,b
 19459  006858  A4D8               	btfss	status,2,c
 19460  00685A  D002               	goto	l1524
 19461                           
 19462                           ; BSR set to: 2
 19463                           ;lorawan.c: 216: {
 19464                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 19465  00685C  8304               	bsf	(_loRa+4)& (0+255),1,b
 19466                           
 19467                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 19468                           ;	Return value of _LORAWAN_Send is never used
 19469  00685E  0012               	return	
 19470  006860                     l1524:
 19471  006860                     l15149:
 19472                           
 19473                           ; BSR set to: 2
 19474                           ;lorawan.c: 220: }
 19475                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 19476  006860  5102               	movf	(_loRa+2)& (0+255),w,b
 19477  006862  0B0F               	andlw	15
 19478  006864  0900               	iorlw	0
 19479  006866  B4D8               	btfsc	status,2,c
 19480  006868  D003               	goto	l1525
 19481                           
 19482                           ; BSR set to: 2
 19483  00686A  5112               	movf	(_loRa+18)& (0+255),w,b
 19484  00686C  B4D8               	btfsc	status,2,c
 19485  00686E  0012               	return	
 19486  006870                     l1525:
 19487                           
 19488                           ; BSR set to: 2
 19489                           ;lorawan.c: 225: }
 19490                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 19491                           
 19492                           ; BSR set to: 2
 19493  006870  0E01               	movlw	1
 19494  006872  EC60  F03B         	call	_SelectChannelForTransmission
 19495  006876  0100               	movlb	0	; () banked
 19496  006878  6FD8               	movwf	LORAWAN_Send@result& (0+255),b
 19497                           
 19498                           ; BSR set to: 0
 19499                           ;lorawan.c: 228: if (result != OK)
 19500  00687A  51D8               	movf	LORAWAN_Send@result& (0+255),w,b
 19501  00687C  A4D8               	btfss	status,2,c
 19502  00687E  0012               	return	
 19503                           
 19504                           ; BSR set to: 0
 19505                           ;lorawan.c: 232: else
 19506                           ;lorawan.c: 233: {
 19507                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 19508                           
 19509                           ; BSR set to: 0
 19510                           
 19511                           ; BSR set to: 0
 19512                           ;lorawan.c: 231: }
 19513                           
 19514                           ; BSR set to: 0
 19515                           ;lorawan.c: 229: {
 19516                           ;lorawan.c: 230: return result;
 19517                           ;	Return value of _LORAWAN_Send is never used
 19518  006880  0E02               	movlw	2
 19519  006882  0102               	movlb	2	; () banked
 19520  006884  1912               	xorwf	(_loRa+18)& (0+255),w,b
 19521  006886  B4D8               	btfsc	status,2,c
 19522                           
 19523                           ; BSR set to: 2
 19524                           ;lorawan.c: 235: {
 19525                           ;lorawan.c: 236: RADIO_ReceiveStop();
 19526  006888  EC96  F044         	call	_RADIO_ReceiveStop	;wreg free
 19527                           
 19528                           ;lorawan.c: 237: }
 19529                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 19530  00688C  C0D3  F0C7         	movff	LORAWAN_Send@port,AssemblePacket@port
 19531  006890  C0D4  F0C8         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 19532  006894  C0D5  F0C9         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 19533  006898  C0D6  F0CA         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 19534  00689C  0100               	movlb	0	; () banked
 19535  00689E  6BCB               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 19536  0068A0  51D9               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 19537  0068A2  EC20  F00F         	call	_AssemblePacket
 19538                           
 19539                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 19540  0068A6  0EF0               	movlw	low (_macBuffer+16)
 19541  0068A8  0100               	movlb	0	; () banked
 19542  0068AA  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 19543  0068AC  0E04               	movlw	high (_macBuffer+16)
 19544  0068AE  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 19545  0068B0  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
 19546  0068B4  EC10  F01D         	call	_RADIO_Transmit	;wreg free
 19547  0068B8  0100               	movlb	0	; () banked
 19548  0068BA  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 19549  0068BC  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 19550  0068BE  A4D8               	btfss	status,2,c
 19551  0068C0  0012               	return	
 19552                           
 19553                           ; BSR set to: 0
 19554                           ;lorawan.c: 242: {
 19555                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 19556  0068C2  0E01               	movlw	1
 19557  0068C4  0102               	movlb	2	; () banked
 19558  0068C6  2706               	addwf	(_loRa+6)& (0+255),f,b
 19559  0068C8  0E00               	movlw	0
 19560  0068CA  2307               	addwfc	(_loRa+7)& (0+255),f,b
 19561  0068CC  2308               	addwfc	(_loRa+8)& (0+255),f,b
 19562  0068CE  2309               	addwfc	(_loRa+9)& (0+255),f,b
 19563                           
 19564                           ;lorawan.c: 245: if (CNF == confirmed)
 19565  0068D0  0100               	movlb	0	; () banked
 19566  0068D2  05D9               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 19567  0068D4  A4D8               	btfss	status,2,c
 19568  0068D6  D002               	goto	l1530
 19569                           
 19570                           ; BSR set to: 0
 19571                           ;lorawan.c: 246: {
 19572                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 19573  0068D8  0102               	movlb	2	; () banked
 19574  0068DA  8100               	bsf	_loRa& (0+255),0,b
 19575  0068DC                     l1530:
 19576                           
 19577                           ;lorawan.c: 248: }
 19578                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 19579  0068DC  0102               	movlb	2	; () banked
 19580  0068DE  8B00               	bsf	_loRa& (0+255),5,b
 19581                           
 19582                           ; BSR set to: 2
 19583                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 19584  0068E0  5102               	movf	(_loRa+2)& (0+255),w,b
 19585  0068E2  0BF0               	andlw	-16
 19586  0068E4  0901               	iorlw	1
 19587  0068E6  6F02               	movwf	(_loRa+2)& (0+255),b
 19588                           
 19589                           ; BSR set to: 2
 19590                           
 19591                           ; BSR set to: 2
 19592                           ;lorawan.c: 252: else
 19593                           ;lorawan.c: 253: {
 19594                           ;lorawan.c: 254: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 19595                           ;	Return value of _LORAWAN_Send is never used
 19596                           
 19597                           ;lorawan.c: 251: }
 19598  0068E8  0012               	return	
 19599  0068EA                     __end_of_LORAWAN_Send:
 19600                           	opt stack 0
 19601                           tosu	equ	0xFFF
 19602                           tosh	equ	0xFFE
 19603                           tosl	equ	0xFFD
 19604                           pclath	equ	0xFFA
 19605                           tblptru	equ	0xFF8
 19606                           tblptrh	equ	0xFF7
 19607                           tblptrl	equ	0xFF6
 19608                           tablat	equ	0xFF5
 19609                           prodh	equ	0xFF4
 19610                           prodl	equ	0xFF3
 19611                           intcon	equ	0xFF2
 19612                           intcon2	equ	0xFF1
 19613                           intcon3	equ	0xFF0
 19614                           indf0	equ	0xFEF
 19615                           postinc0	equ	0xFEE
 19616                           fsr0h	equ	0xFEA
 19617                           fsr0l	equ	0xFE9
 19618                           wreg	equ	0xFE8
 19619                           postinc1	equ	0xFE6
 19620                           postdec1	equ	0xFE5
 19621                           plusw1	equ	0xFE3
 19622                           fsr1h	equ	0xFE2
 19623                           fsr1l	equ	0xFE1
 19624                           indf2	equ	0xFDF
 19625                           postinc2	equ	0xFDE
 19626                           postdec2	equ	0xFDD
 19627                           plusw2	equ	0xFDB
 19628                           fsr2h	equ	0xFDA
 19629                           fsr2l	equ	0xFD9
 19630                           status	equ	0xFD8
 19631                           
 19632 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 19633 ;; Defined at:
 19634 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19635 ;; Parameters:    Size  Location     Type
 19636 ;;		None
 19637 ;; Auto vars:     Size  Location     Type
 19638 ;;  result          1   10[BANK0 ] unsigned char 
 19639 ;;  macCommandsL    1    9[BANK0 ] unsigned char 
 19640 ;; Return value:  Size  Location     Type
 19641 ;;                  1    wreg      unsigned char 
 19642 ;; Registers used:
 19643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19644 ;; Tracked objects:
 19645 ;;		On entry : 0/0
 19646 ;;		On exit  : 0/0
 19647 ;;		Unchanged: 0/0
 19648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19650 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19651 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19652 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19653 ;;Total ram usage:        3 bytes
 19654 ;; Hardware stack levels used:    1
 19655 ;; Hardware stack levels required when called:    8
 19656 ;; This function calls:
 19657 ;;		_CountfOptsLength
 19658 ;; This function is called by:
 19659 ;;		_LORAWAN_Send
 19660 ;;		_AckRetransmissionCallback
 19661 ;; This function uses a non-reentrant model
 19662 ;;
 19663                           
 19664                           	psect	text99
 19665  007A58                     __ptext99:
 19666                           	opt stack 0
 19667  007A58                     _LORAWAN_GetMaxPayloadSize:
 19668                           	opt stack 21
 19669                           
 19670                           ;lorawan.c: 1558: uint8_t result = 0;
 19671                           
 19672                           ;incstack = 0
 19673  007A58  0E00               	movlw	0
 19674  007A5A  0100               	movlb	0	; () banked
 19675  007A5C  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 19676                           
 19677                           ; BSR set to: 0
 19678                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 19679                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 19680  007A5E  EC75  F034         	call	_CountfOptsLength	;wreg free
 19681  007A62  0100               	movlb	0	; () banked
 19682  007A64  6F69               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 19683                           
 19684                           ; BSR set to: 0
 19685                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 19686  007A66  0102               	movlb	2	; () banked
 19687  007A68  51A7               	movf	(_loRa+167)& (0+255),w,b
 19688  007A6A  A4D8               	btfss	status,2,c
 19689  007A6C  D00F               	goto	l1984
 19690                           
 19691                           ; BSR set to: 2
 19692                           ;lorawan.c: 1564: {
 19693                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 19694  007A6E  51DF               	movf	(_loRa+223)& (0+255),w,b
 19695  007A70  0D01               	mullw	1
 19696  007A72  0E59               	movlw	low _maxPayloadSize
 19697  007A74  24F3               	addwf	prodl,w,c
 19698  007A76  6EF6               	movwf	tblptrl,c
 19699  007A78  0EFF               	movlw	high _maxPayloadSize
 19700  007A7A  20F4               	addwfc	prodh,w,c
 19701  007A7C  6EF7               	movwf	tblptrh,c
 19702  007A7E                     	if	1	;There are 3 active tblptr bytes
 19703  007A7E  6AF8               	clrf	tblptru,c
 19704  007A80  0E00               	movlw	low (__mediumconst shr (0+16))
 19705  007A82  22F8               	addwfc	tblptru,f,c
 19706  007A84                     	endif
 19707  007A84  0008               	tblrd		*
 19708  007A86  CFF5 F06A          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 19709                           
 19710                           ;lorawan.c: 1566: }
 19711  007A8A  D013               	goto	l1985
 19712  007A8C                     l1984:
 19713                           
 19714                           ; BSR set to: 2
 19715                           ;lorawan.c: 1567: else
 19716                           ;lorawan.c: 1568: {
 19717                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 19718                           
 19719                           ; BSR set to: 2
 19720  007A8C  51DF               	movf	(_loRa+223)& (0+255),w,b
 19721  007A8E  0D01               	mullw	1
 19722  007A90  0E59               	movlw	low _maxPayloadSize
 19723  007A92  24F3               	addwf	prodl,w,c
 19724  007A94  6EF6               	movwf	tblptrl,c
 19725  007A96  0EFF               	movlw	high _maxPayloadSize
 19726  007A98  20F4               	addwfc	prodh,w,c
 19727  007A9A  6EF7               	movwf	tblptrh,c
 19728  007A9C                     	if	1	;There are 3 active tblptr bytes
 19729  007A9C  6AF8               	clrf	tblptru,c
 19730  007A9E  0E00               	movlw	low (__mediumconst shr (0+16))
 19731  007AA0  22F8               	addwfc	tblptru,f,c
 19732  007AA2                     	endif
 19733  007AA2  0008               	tblrd		*
 19734  007AA4  CFF5 F068          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 19735  007AA8  0100               	movlb	0	; () banked
 19736  007AAA  5169               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 19737  007AAC  0800               	sublw	0
 19738  007AAE  2568               	addwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 19739  007AB0  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 19740  007AB2                     l1985:
 19741                           
 19742                           ;lorawan.c: 1570: }
 19743                           ;lorawan.c: 1572: return result;
 19744                           
 19745                           ; BSR set to: 0
 19746  007AB2  0100               	movlb	0	; () banked
 19747  007AB4  516A               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 19748  007AB6  0012               	return	
 19749  007AB8                     __end_of_LORAWAN_GetMaxPayloadSize:
 19750                           	opt stack 0
 19751                           tosu	equ	0xFFF
 19752                           tosh	equ	0xFFE
 19753                           tosl	equ	0xFFD
 19754                           pclath	equ	0xFFA
 19755                           tblptru	equ	0xFF8
 19756                           tblptrh	equ	0xFF7
 19757                           tblptrl	equ	0xFF6
 19758                           tablat	equ	0xFF5
 19759                           prodh	equ	0xFF4
 19760                           prodl	equ	0xFF3
 19761                           intcon	equ	0xFF2
 19762                           intcon2	equ	0xFF1
 19763                           intcon3	equ	0xFF0
 19764                           indf0	equ	0xFEF
 19765                           postinc0	equ	0xFEE
 19766                           fsr0h	equ	0xFEA
 19767                           fsr0l	equ	0xFE9
 19768                           wreg	equ	0xFE8
 19769                           postinc1	equ	0xFE6
 19770                           postdec1	equ	0xFE5
 19771                           plusw1	equ	0xFE3
 19772                           fsr1h	equ	0xFE2
 19773                           fsr1l	equ	0xFE1
 19774                           indf2	equ	0xFDF
 19775                           postinc2	equ	0xFDE
 19776                           postdec2	equ	0xFDD
 19777                           plusw2	equ	0xFDB
 19778                           fsr2h	equ	0xFDA
 19779                           fsr2l	equ	0xFD9
 19780                           status	equ	0xFD8
 19781                           
 19782 ;; *************** function _AssemblePacket *****************
 19783 ;; Defined at:
 19784 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19785 ;; Parameters:    Size  Location     Type
 19786 ;;  confirmed       1    wreg     unsigned char 
 19787 ;;  port            1  103[BANK0 ] unsigned char 
 19788 ;;  buffer          2  104[BANK0 ] PTR unsigned char 
 19789 ;;		 -> STR_3(6), NULL(0), 
 19790 ;;  bufferLength    2  106[BANK0 ] unsigned int 
 19791 ;; Auto vars:     Size  Location     Type
 19792 ;;  confirmed       1  110[BANK0 ] unsigned char 
 19793 ;;  bufferIndex     1  114[BANK0 ] unsigned char 
 19794 ;;  macCmdIdx       1  113[BANK0 ] unsigned char 
 19795 ;;  fCtrl           1  112[BANK0 ] struct .
 19796 ;;  mhdr            1  111[BANK0 ] struct .
 19797 ;; Return value:  Size  Location     Type
 19798 ;;                  1    wreg      void 
 19799 ;; Registers used:
 19800 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19801 ;; Tracked objects:
 19802 ;;		On entry : 0/0
 19803 ;;		On exit  : 0/0
 19804 ;;		Unchanged: 0/0
 19805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19806 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19807 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19808 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19809 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19810 ;;Total ram usage:       12 bytes
 19811 ;; Hardware stack levels used:    1
 19812 ;; Hardware stack levels required when called:   12
 19813 ;; This function calls:
 19814 ;;		_AESCmac
 19815 ;;		_AssembleEncryptionBlock
 19816 ;;		_CountfOptsLength
 19817 ;;		_EncryptFRMPayload
 19818 ;;		_FindSmallestDataRate
 19819 ;;		_IncludeMacCommandsResponse
 19820 ;;		_memcpy
 19821 ;;		_memset
 19822 ;; This function is called by:
 19823 ;;		_LORAWAN_Send
 19824 ;; This function uses a non-reentrant model
 19825 ;;
 19826                           
 19827                           	psect	text100
 19828  001E40                     __ptext100:
 19829                           	opt stack 0
 19830  001E40                     _AssemblePacket:
 19831                           	opt stack 17
 19832                           
 19833                           ; BSR set to: 0
 19834                           ;incstack = 0
 19835                           ;AssemblePacket@confirmed stored from wreg
 19836  001E40  0100               	movlb	0	; () banked
 19837  001E42  6FCE               	movwf	AssemblePacket@confirmed& (0+255),b
 19838                           
 19839                           ;lorawan.c: 1674: Mhdr_t mhdr;
 19840                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 19841  001E44  0E10               	movlw	16
 19842  001E46  0100               	movlb	0	; () banked
 19843  001E48  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19844                           
 19845                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 19846                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 19847  001E4A  0E00               	movlw	0
 19848  001E4C  6FD1               	movwf	AssemblePacket@macCmdIdx& (0+255),b
 19849                           
 19850                           ; BSR set to: 0
 19851                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 19852  001E4E  0ECF               	movlw	low AssemblePacket@mhdr
 19853  001E50  6F60               	movwf	memset@p1& (0+255),b
 19854  001E52  0E00               	movlw	high AssemblePacket@mhdr
 19855  001E54  6F61               	movwf	(memset@p1+1)& (0+255),b
 19856  001E56  0E00               	movlw	0
 19857  001E58  6F63               	movwf	(memset@c+1)& (0+255),b
 19858  001E5A  0E00               	movlw	0
 19859  001E5C  6F62               	movwf	memset@c& (0+255),b
 19860  001E5E  0E00               	movlw	0
 19861  001E60  6F65               	movwf	(memset@n+1)& (0+255),b
 19862  001E62  0E01               	movlw	1
 19863  001E64  6F64               	movwf	memset@n& (0+255),b
 19864  001E66  ECCB  F042         	call	_memset	;wreg free
 19865                           
 19866                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 19867  001E6A  0EE0               	movlw	low _macBuffer
 19868  001E6C  0100               	movlb	0	; () banked
 19869  001E6E  6F60               	movwf	memset@p1& (0+255),b
 19870  001E70  0E04               	movlw	high _macBuffer
 19871  001E72  6F61               	movwf	(memset@p1+1)& (0+255),b
 19872  001E74  0E00               	movlw	0
 19873  001E76  6F63               	movwf	(memset@c+1)& (0+255),b
 19874  001E78  0E00               	movlw	0
 19875  001E7A  6F62               	movwf	memset@c& (0+255),b
 19876  001E7C  0E01               	movlw	1
 19877  001E7E  6F65               	movwf	(memset@n+1)& (0+255),b
 19878  001E80  0E0F               	movlw	15
 19879  001E82  6F64               	movwf	memset@n& (0+255),b
 19880  001E84  ECCB  F042         	call	_memset	;wreg free
 19881                           
 19882                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 19883  001E88  0E5A               	movlw	low _aesBuffer
 19884  001E8A  0100               	movlb	0	; () banked
 19885  001E8C  6F60               	movwf	memset@p1& (0+255),b
 19886  001E8E  0E01               	movlw	high _aesBuffer
 19887  001E90  6F61               	movwf	(memset@p1+1)& (0+255),b
 19888  001E92  0E00               	movlw	0
 19889  001E94  6F63               	movwf	(memset@c+1)& (0+255),b
 19890  001E96  0E00               	movlw	0
 19891  001E98  6F62               	movwf	memset@c& (0+255),b
 19892  001E9A  0E00               	movlw	0
 19893  001E9C  6F65               	movwf	(memset@n+1)& (0+255),b
 19894  001E9E  0E10               	movlw	16
 19895  001EA0  6F64               	movwf	memset@n& (0+255),b
 19896  001EA2  ECCB  F042         	call	_memset	;wreg free
 19897                           
 19898                           ;lorawan.c: 1683: if (confirmed == 1)
 19899  001EA6  0100               	movlb	0	; () banked
 19900  001EA8  05CE               	decf	AssemblePacket@confirmed& (0+255),w,b
 19901  001EAA  A4D8               	btfss	status,2,c
 19902  001EAC  D007               	goto	l2014
 19903                           
 19904                           ; BSR set to: 0
 19905                           ;lorawan.c: 1684: {
 19906                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 19907  001EAE  51CF               	movf	AssemblePacket@mhdr& (0+255),w,b
 19908  001EB0  0B1F               	andlw	-225
 19909  001EB2  0980               	iorlw	128
 19910  001EB4  6FCF               	movwf	AssemblePacket@mhdr& (0+255),b
 19911                           
 19912                           ; BSR set to: 0
 19913                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 19914  001EB6  0102               	movlb	2	; () banked
 19915  001EB8  8100               	bsf	_loRa& (0+255),0,b
 19916                           
 19917                           ;lorawan.c: 1687: }
 19918  001EBA  D005               	goto	l2015
 19919  001EBC                     l2014:
 19920                           
 19921                           ;lorawan.c: 1688: else
 19922                           ;lorawan.c: 1689: {
 19923                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 19924                           
 19925                           ; BSR set to: 2
 19926  001EBC  0100               	movlb	0	; () banked
 19927  001EBE  51CF               	movf	AssemblePacket@mhdr& (0+255),w,b
 19928  001EC0  0B1F               	andlw	-225
 19929  001EC2  0940               	iorlw	64
 19930  001EC4  6FCF               	movwf	AssemblePacket@mhdr& (0+255),b
 19931  001EC6                     l2015:
 19932                           
 19933                           ;lorawan.c: 1691: }
 19934                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 19935  001EC6  0EFC               	movlw	-4
 19936  001EC8  0100               	movlb	0	; () banked
 19937  001ECA  17CF               	andwf	AssemblePacket@mhdr& (0+255),f,b
 19938                           
 19939                           ; BSR set to: 0
 19940                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 19941  001ECC  95CF               	bcf	AssemblePacket@mhdr& (0+255),2,b
 19942  001ECE  97CF               	bcf	AssemblePacket@mhdr& (0+255),3,b
 19943  001ED0  99CF               	bcf	AssemblePacket@mhdr& (0+255),4,b
 19944                           
 19945                           ; BSR set to: 0
 19946                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 19947  001ED2  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19948  001ED4  0D01               	mullw	1
 19949  001ED6  0EE0               	movlw	low _macBuffer
 19950  001ED8  24F3               	addwf	prodl,w,c
 19951  001EDA  6ED9               	movwf	fsr2l,c
 19952  001EDC  0E04               	movlw	high _macBuffer
 19953  001EDE  20F4               	addwfc	prodh,w,c
 19954  001EE0  6EDA               	movwf	fsr2h,c
 19955  001EE2  C0CF  FFDF         	movff	AssemblePacket@mhdr,indf2
 19956                           
 19957                           ; BSR set to: 0
 19958  001EE6  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19959                           
 19960                           ; BSR set to: 0
 19961                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 19962  001EE8  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19963  001EEA  0D01               	mullw	1
 19964  001EEC  0EE0               	movlw	low _macBuffer
 19965  001EEE  24F3               	addwf	prodl,w,c
 19966  001EF0  6F60               	movwf	memcpy@d1& (0+255),b
 19967  001EF2  0E04               	movlw	high _macBuffer
 19968  001EF4  20F4               	addwfc	prodh,w,c
 19969  001EF6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19970  001EF8  0E1E               	movlw	low (_loRa+30)
 19971  001EFA  6F62               	movwf	memcpy@s1& (0+255),b
 19972  001EFC  0E02               	movlw	high (_loRa+30)
 19973  001EFE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19974  001F00  0E00               	movlw	0
 19975  001F02  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19976  001F04  0E04               	movlw	4
 19977  001F06  6F64               	movwf	memcpy@n& (0+255),b
 19978  001F08  EC5C  F03D         	call	_memcpy	;wreg free
 19979                           
 19980                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 19981  001F0C  0100               	movlb	0	; () banked
 19982  001F0E  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19983  001F10  0F04               	addlw	4
 19984  001F12  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19985                           
 19986                           ; BSR set to: 0
 19987                           ;lorawan.c: 1699: fCtrl.value = 0;
 19988  001F14  0E00               	movlw	0
 19989  001F16  6FD0               	movwf	AssemblePacket@fCtrl& (0+255),b
 19990                           
 19991                           ; BSR set to: 0
 19992                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 19993  001F18  0102               	movlb	2	; () banked
 19994  001F1A  AD02               	btfss	(_loRa+2)& (0+255),6,b
 19995  001F1C  D047               	goto	l2024
 19996                           
 19997                           ; BSR set to: 2
 19998                           ;lorawan.c: 1702: {
 19999                           ;lorawan.c: 1703: fCtrl.adr = 1;
 20000  001F1E  0100               	movlb	0	; () banked
 20001  001F20  8FD0               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 20002                           
 20003                           ; BSR set to: 0
 20004                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 20005  001F22  0102               	movlb	2	; () banked
 20006  001F24  51DF               	movf	(_loRa+223)& (0+255),w,b
 20007  001F26  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 20008  001F28  B0D8               	btfsc	status,0,c
 20009  001F2A  D03F               	goto	l2017
 20010                           
 20011                           ; BSR set to: 2
 20012                           ;lorawan.c: 1705: {
 20013                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 20014  001F2C  0100               	movlb	0	; () banked
 20015  001F2E  8DD0               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 20016                           
 20017                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 20018  001F30  0102               	movlb	2	; () banked
 20019  001F32  8900               	bsf	_loRa& (0+255),4,b
 20020                           
 20021                           ; BSR set to: 2
 20022                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 20023  001F34  4BD0               	infsnz	(_loRa+208)& (0+255),f,b
 20024  001F36  2BD1               	incf	(_loRa+209)& (0+255),f,b
 20025                           
 20026                           ; BSR set to: 2
 20027                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 20028  001F38  51A2               	movf	(_loRa+162)& (0+255),w,b
 20029  001F3A  0100               	movlb	0	; () banked
 20030  001F3C  6FCC               	movwf	??_AssemblePacket& (0+255),b
 20031  001F3E  6BCD               	clrf	(??_AssemblePacket+1)& (0+255),b
 20032  001F40  0102               	movlb	2	; () banked
 20033  001F42  51D0               	movf	(_loRa+208)& (0+255),w,b
 20034  001F44  0100               	movlb	0	; () banked
 20035  001F46  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 20036  001F48  E10C               	bnz	l14901
 20037  001F4A  0102               	movlb	2	; () banked
 20038  001F4C  51D1               	movf	(_loRa+209)& (0+255),w,b
 20039  001F4E  0100               	movlb	0	; () banked
 20040  001F50  19CD               	xorwf	(??_AssemblePacket+1)& (0+255),w,b
 20041  001F52  A4D8               	btfss	status,2,c
 20042  001F54  D006               	goto	l2018
 20043                           
 20044                           ; BSR set to: 0
 20045                           ;lorawan.c: 1711: {
 20046                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 20047  001F56  0E00               	movlw	0
 20048  001F58  0102               	movlb	2	; () banked
 20049  001F5A  6FEE               	movwf	(_loRa+238)& (0+255),b
 20050  001F5C  D023               	goto	l14913
 20051  001F5E                     l14899:
 20052                           
 20053                           ; BSR set to: 0
 20054                           ;lorawan.c: 1714: loRa.lorawanMacStatus.adrAckRequest = 0;
 20055  001F5E  0102               	movlb	2	; () banked
 20056  001F60  D024               	goto	l2017
 20057  001F62                     l2018:
 20058  001F62                     l14901:
 20059                           
 20060                           ;lorawan.c: 1716: else
 20061                           ;lorawan.c: 1717: {
 20062                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 20063  001F62  0102               	movlb	2	; () banked
 20064  001F64  51A2               	movf	(_loRa+162)& (0+255),w,b
 20065  001F66  0100               	movlb	0	; () banked
 20066  001F68  6FCC               	movwf	??_AssemblePacket& (0+255),b
 20067  001F6A  6BCD               	clrf	(??_AssemblePacket+1)& (0+255),b
 20068  001F6C  0102               	movlb	2	; () banked
 20069  001F6E  51D0               	movf	(_loRa+208)& (0+255),w,b
 20070  001F70  0100               	movlb	0	; () banked
 20071  001F72  5DCC               	subwf	??_AssemblePacket& (0+255),w,b
 20072  001F74  0102               	movlb	2	; () banked
 20073  001F76  51D1               	movf	(_loRa+209)& (0+255),w,b
 20074  001F78  0100               	movlb	0	; () banked
 20075  001F7A  59CD               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 20076  001F7C  B0D8               	btfsc	status,0,c
 20077  001F7E  D013               	goto	l2020
 20078                           
 20079                           ; BSR set to: 0
 20080                           ;lorawan.c: 1719: {
 20081                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 20082  001F80  0102               	movlb	2	; () banked
 20083  001F82  2BEE               	incf	(_loRa+238)& (0+255),f,b
 20084                           
 20085                           ; BSR set to: 2
 20086                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 20087  001F84  51EE               	movf	(_loRa+238)& (0+255),w,b
 20088  001F86  5DA3               	subwf	(_loRa+163)& (0+255),w,b
 20089  001F88  B0D8               	btfsc	status,0,c
 20090  001F8A  D010               	goto	l2024
 20091                           
 20092                           ; BSR set to: 2
 20093                           ;lorawan.c: 1725: {
 20094                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 20095  001F8C  0E00               	movlw	0
 20096  001F8E  6FEE               	movwf	(_loRa+238)& (0+255),b
 20097                           
 20098                           ; BSR set to: 2
 20099                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 20100  001F90  EC58  F032         	call	_FindSmallestDataRate	;wreg free
 20101  001F94  0900               	iorlw	0
 20102  001F96  A4D8               	btfss	status,2,c
 20103  001F98  D009               	goto	l2024
 20104                           
 20105                           ;lorawan.c: 1729: {
 20106                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 20107  001F9A  0E00               	movlw	0
 20108  001F9C  0102               	movlb	2	; () banked
 20109  001F9E  6FD1               	movwf	(_loRa+209)& (0+255),b
 20110  001FA0  0E00               	movlw	0
 20111  001FA2  6FD0               	movwf	(_loRa+208)& (0+255),b
 20112  001FA4                     l14913:
 20113                           
 20114                           ; BSR set to: 2
 20115                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 20116  001FA4  0100               	movlb	0	; () banked
 20117  001FA6                     l2020:
 20118                           
 20119                           ; BSR set to: 0
 20120                           ;lorawan.c: 1737: else
 20121                           ;lorawan.c: 1738: {
 20122                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 20123  001FA6  9DD0               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 20124  001FA8  D7DA               	goto	l14899
 20125  001FAA                     l2017:
 20126                           
 20127                           ; BSR set to: 2
 20128                           ;lorawan.c: 1744: else
 20129                           ;lorawan.c: 1745: {
 20130                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 20131  001FAA  9900               	bcf	_loRa& (0+255),4,b
 20132  001FAC                     l2024:
 20133                           
 20134                           ;lorawan.c: 1747: }
 20135                           ;lorawan.c: 1748: }
 20136                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 20137                           
 20138                           ; BSR set to: 2
 20139  001FAC  0102               	movlb	2	; () banked
 20140  001FAE  A300               	btfss	_loRa& (0+255),1,b
 20141  001FB0  D004               	goto	l2025
 20142                           
 20143                           ; BSR set to: 2
 20144                           ;lorawan.c: 1751: {
 20145                           ;lorawan.c: 1752: fCtrl.ack = 1;
 20146  001FB2  0100               	movlb	0	; () banked
 20147  001FB4  8BD0               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 20148                           
 20149                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 20150  001FB6  0102               	movlb	2	; () banked
 20151  001FB8  9300               	bcf	_loRa& (0+255),1,b
 20152  001FBA                     l2025:
 20153                           
 20154                           ; BSR set to: 2
 20155                           ;lorawan.c: 1754: }
 20156                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 20157  001FBA  0100               	movlb	0	; () banked
 20158  001FBC  99D0               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 20159                           
 20160                           ; BSR set to: 0
 20161                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 20162  001FBE  0102               	movlb	2	; () banked
 20163  001FC0  51A7               	movf	(_loRa+167)& (0+255),w,b
 20164  001FC2  B4D8               	btfsc	status,2,c
 20165  001FC4  D005               	goto	u17180
 20166                           
 20167                           ; BSR set to: 2
 20168  001FC6  0100               	movlb	0	; () banked
 20169  001FC8  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 20170  001FCA  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 20171  001FCC  A4D8               	btfss	status,2,c
 20172  001FCE  D006               	goto	l2026
 20173  001FD0                     u17180:
 20174                           
 20175                           ;lorawan.c: 1759: {
 20176                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 20177  001FD0  0100               	movlb	0	; () banked
 20178  001FD2  91D0               	bcf	AssemblePacket@fCtrl& (0+255),0,b
 20179  001FD4  93D0               	bcf	AssemblePacket@fCtrl& (0+255),1,b
 20180  001FD6  95D0               	bcf	AssemblePacket@fCtrl& (0+255),2,b
 20181  001FD8  97D0               	bcf	AssemblePacket@fCtrl& (0+255),3,b
 20182                           
 20183                           ;lorawan.c: 1761: }
 20184  001FDA  D009               	goto	l2029
 20185  001FDC                     l2026:
 20186                           
 20187                           ; BSR set to: 0
 20188                           ;lorawan.c: 1763: else
 20189                           ;lorawan.c: 1764: {
 20190                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 20191                           
 20192                           ; BSR set to: 0
 20193  001FDC  EC75  F034         	call	_CountfOptsLength	;wreg free
 20194  001FE0  0100               	movlb	0	; () banked
 20195  001FE2  6FCC               	movwf	??_AssemblePacket& (0+255),b
 20196  001FE4  51D0               	movf	AssemblePacket@fCtrl& (0+255),w,b
 20197  001FE6  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 20198  001FE8  0BF0               	andlw	-16
 20199  001FEA  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 20200  001FEC  6FD0               	movwf	AssemblePacket@fCtrl& (0+255),b
 20201  001FEE                     l2029:
 20202                           
 20203                           ; BSR set to: 0
 20204                           ;lorawan.c: 1766: }
 20205                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 20206                           
 20207                           ; BSR set to: 0
 20208  001FEE  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20209  001FF0  0D01               	mullw	1
 20210  001FF2  0EE0               	movlw	low _macBuffer
 20211  001FF4  24F3               	addwf	prodl,w,c
 20212  001FF6  6ED9               	movwf	fsr2l,c
 20213  001FF8  0E04               	movlw	high _macBuffer
 20214  001FFA  20F4               	addwfc	prodh,w,c
 20215  001FFC  6EDA               	movwf	fsr2h,c
 20216  001FFE  C0D0  FFDF         	movff	AssemblePacket@fCtrl,indf2
 20217                           
 20218                           ; BSR set to: 0
 20219  002002  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 20220                           
 20221                           ; BSR set to: 0
 20222                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 20223  002004  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20224  002006  0D01               	mullw	1
 20225  002008  0EE0               	movlw	low _macBuffer
 20226  00200A  24F3               	addwf	prodl,w,c
 20227  00200C  6F60               	movwf	memcpy@d1& (0+255),b
 20228  00200E  0E04               	movlw	high _macBuffer
 20229  002010  20F4               	addwfc	prodh,w,c
 20230  002012  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 20231  002014  0E06               	movlw	low (_loRa+6)
 20232  002016  6F62               	movwf	memcpy@s1& (0+255),b
 20233  002018  0E02               	movlw	high (_loRa+6)
 20234  00201A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 20235  00201C  0E00               	movlw	0
 20236  00201E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 20237  002020  0E02               	movlw	2
 20238  002022  6F64               	movwf	memcpy@n& (0+255),b
 20239  002024  EC5C  F03D         	call	_memcpy	;wreg free
 20240                           
 20241                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 20242  002028  0100               	movlb	0	; () banked
 20243  00202A  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20244  00202C  0F02               	addlw	2
 20245  00202E  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 20246                           
 20247                           ; BSR set to: 0
 20248                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 20249  002030  0102               	movlb	2	; () banked
 20250  002032  51A7               	movf	(_loRa+167)& (0+255),w,b
 20251  002034  B4D8               	btfsc	status,2,c
 20252  002036  D011               	goto	l2030
 20253                           
 20254                           ; BSR set to: 2
 20255  002038  0100               	movlb	0	; () banked
 20256  00203A  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 20257  00203C  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 20258  00203E  B4D8               	btfsc	status,2,c
 20259  002040  D00C               	goto	l2030
 20260                           
 20261                           ; BSR set to: 0
 20262                           ;lorawan.c: 1774: {
 20263                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 20264  002042  0EE0               	movlw	low _macBuffer
 20265  002044  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 20266  002046  0E04               	movlw	high _macBuffer
 20267  002048  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 20268  00204A  0ED2               	movlw	low AssemblePacket@bufferIndex
 20269  00204C  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 20270  00204E  0E00               	movlw	high AssemblePacket@bufferIndex
 20271  002050  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 20272  002052  0E01               	movlw	1
 20273  002054  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 20274  002056  ECEF  F00C         	call	_IncludeMacCommandsResponse	;wreg free
 20275  00205A                     l2030:
 20276                           
 20277                           ;lorawan.c: 1776: }
 20278                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 20279  00205A  0100               	movlb	0	; () banked
 20280  00205C  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20281  00205E  0D01               	mullw	1
 20282  002060  0EE0               	movlw	low _macBuffer
 20283  002062  24F3               	addwf	prodl,w,c
 20284  002064  6ED9               	movwf	fsr2l,c
 20285  002066  0E04               	movlw	high _macBuffer
 20286  002068  20F4               	addwfc	prodh,w,c
 20287  00206A  6EDA               	movwf	fsr2h,c
 20288  00206C  C0C7  FFDF         	movff	AssemblePacket@port,indf2
 20289                           
 20290                           ; BSR set to: 0
 20291  002070  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 20292                           
 20293                           ; BSR set to: 0
 20294                           ;lorawan.c: 1780: if (bufferLength != 0)
 20295  002072  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 20296  002074  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 20297  002076  B4D8               	btfsc	status,2,c
 20298  002078  D035               	goto	l2031
 20299                           
 20300                           ; BSR set to: 0
 20301                           ;lorawan.c: 1781: {
 20302                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 20303  00207A  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20304  00207C  0D01               	mullw	1
 20305  00207E  0EE0               	movlw	low _macBuffer
 20306  002080  24F3               	addwf	prodl,w,c
 20307  002082  6F60               	movwf	memcpy@d1& (0+255),b
 20308  002084  0E04               	movlw	high _macBuffer
 20309  002086  20F4               	addwfc	prodh,w,c
 20310  002088  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 20311  00208A  C0C8  F062         	movff	AssemblePacket@buffer,memcpy@s1
 20312  00208E  C0C9  F063         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 20313  002092  C0CA  F064         	movff	AssemblePacket@bufferLength,memcpy@n
 20314  002096  C0CB  F065         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 20315  00209A  EC5C  F03D         	call	_memcpy	;wreg free
 20316                           
 20317                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 20318  00209E  C0C8  F091         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 20319  0020A2  C0C9  F092         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 20320  0020A6  C0CA  F093         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 20321  0020AA  0E00               	movlw	0
 20322  0020AC  0100               	movlb	0	; () banked
 20323  0020AE  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 20324  0020B0  C206  F095         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 20325  0020B4  C207  F096         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 20326  0020B8  C208  F097         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 20327  0020BC  C209  F098         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 20328  0020C0  0E32               	movlw	low (_loRa+50)
 20329  0020C2  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 20330  0020C4  0E02               	movlw	high (_loRa+50)
 20331  0020C6  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 20332  0020C8  C0D2  F09B         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 20333  0020CC  0EE0               	movlw	low _macBuffer
 20334  0020CE  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 20335  0020D0  0E04               	movlw	high _macBuffer
 20336  0020D2  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 20337  0020D4  0E00               	movlw	0
 20338  0020D6  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 20339  0020D8  EC45  F021         	call	_EncryptFRMPayload	;wreg free
 20340                           
 20341                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 20342  0020DC  0100               	movlb	0	; () banked
 20343  0020DE  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20344  0020E0  25CA               	addwf	AssemblePacket@bufferLength& (0+255),w,b
 20345  0020E2  D033               	goto	L11
 20346  0020E4                     l2031:
 20347                           
 20348                           ; BSR set to: 0
 20349                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 20350                           
 20351                           ; BSR set to: 0
 20352  0020E4  0102               	movlb	2	; () banked
 20353  0020E6  51A7               	movf	(_loRa+167)& (0+255),w,b
 20354  0020E8  B4D8               	btfsc	status,2,c
 20355  0020EA  D030               	goto	l2033
 20356                           
 20357                           ; BSR set to: 2
 20358                           ;lorawan.c: 1787: {
 20359                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 20360  0020EC  0EEF               	movlw	low _radioBuffer
 20361  0020EE  0100               	movlb	0	; () banked
 20362  0020F0  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 20363  0020F2  0E05               	movlw	high _radioBuffer
 20364  0020F4  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 20365  0020F6  0ED1               	movlw	low AssemblePacket@macCmdIdx
 20366  0020F8  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 20367  0020FA  0E00               	movlw	high AssemblePacket@macCmdIdx
 20368  0020FC  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 20369  0020FE  0E00               	movlw	0
 20370  002100  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 20371  002102  ECEF  F00C         	call	_IncludeMacCommandsResponse	;wreg free
 20372                           
 20373                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 20374  002106  0EEF               	movlw	low _radioBuffer
 20375  002108  0100               	movlb	0	; () banked
 20376  00210A  6F91               	movwf	EncryptFRMPayload@buffer& (0+255),b
 20377  00210C  0E05               	movlw	high _radioBuffer
 20378  00210E  6F92               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 20379  002110  C0D1  F093         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 20380  002114  0E00               	movlw	0
 20381  002116  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 20382  002118  C206  F095         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 20383  00211C  C207  F096         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 20384  002120  C208  F097         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 20385  002124  C209  F098         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 20386  002128  0E22               	movlw	low (_loRa+34)
 20387  00212A  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 20388  00212C  0E02               	movlw	high (_loRa+34)
 20389  00212E  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 20390  002130  C0D2  F09B         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 20391  002134  0EE0               	movlw	low _macBuffer
 20392  002136  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 20393  002138  0E04               	movlw	high _macBuffer
 20394  00213A  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 20395  00213C  0E00               	movlw	0
 20396  00213E  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 20397  002140  EC45  F021         	call	_EncryptFRMPayload	;wreg free
 20398                           
 20399                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 20400  002144  0100               	movlb	0	; () banked
 20401  002146  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20402  002148  25D1               	addwf	AssemblePacket@macCmdIdx& (0+255),w,b
 20403  00214A                     L11:
 20404  00214A  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 20405  00214C                     l2033:
 20406                           
 20407                           ;lorawan.c: 1793: }
 20408                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 20409                           
 20410                           ; BSR set to: 0
 20411                           
 20412                           ; BSR set to: 0
 20413  00214C  C206  F06B         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 20414  002150  C207  F06C         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 20415  002154  C208  F06D         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 20416  002158  C209  F06E         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 20417  00215C  0100               	movlb	0	; () banked
 20418  00215E  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20419  002160  0FF0               	addlw	240
 20420  002162  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 20421  002164  0E49               	movlw	73
 20422  002166  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 20423  002168  0E00               	movlw	0
 20424  00216A  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 20425  00216C  0E00               	movlw	0
 20426  00216E  EC09  F030         	call	_AssembleEncryptionBlock
 20427                           
 20428                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 20429  002172  0EE0               	movlw	low _macBuffer
 20430  002174  0100               	movlb	0	; () banked
 20431  002176  6F60               	movwf	memcpy@d1& (0+255),b
 20432  002178  0E04               	movlw	high _macBuffer
 20433  00217A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 20434  00217C  0E5A               	movlw	low _aesBuffer
 20435  00217E  6F62               	movwf	memcpy@s1& (0+255),b
 20436  002180  0E01               	movlw	high _aesBuffer
 20437  002182  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 20438  002184  0E00               	movlw	0
 20439  002186  6F65               	movwf	(memcpy@n+1)& (0+255),b
 20440  002188  0E10               	movlw	16
 20441  00218A  6F64               	movwf	memcpy@n& (0+255),b
 20442  00218C  EC5C  F03D         	call	_memcpy	;wreg free
 20443                           
 20444                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 20445  002190  0E22               	movlw	low (_loRa+34)
 20446  002192  0100               	movlb	0	; () banked
 20447  002194  6FB9               	movwf	AESCmac@key& (0+255),b
 20448  002196  0E02               	movlw	high (_loRa+34)
 20449  002198  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 20450  00219A  0E5A               	movlw	low _aesBuffer
 20451  00219C  6FBB               	movwf	AESCmac@output& (0+255),b
 20452  00219E  0E01               	movlw	high _aesBuffer
 20453  0021A0  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 20454  0021A2  0EE0               	movlw	low _macBuffer
 20455  0021A4  6FBD               	movwf	AESCmac@input& (0+255),b
 20456  0021A6  0E04               	movlw	high _macBuffer
 20457  0021A8  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 20458  0021AA  C0D2  F0BF         	movff	AssemblePacket@bufferIndex,AESCmac@size
 20459  0021AE  ECF8  F010         	call	_AESCmac	;wreg free
 20460                           
 20461                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 20462  0021B2  0100               	movlb	0	; () banked
 20463  0021B4  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20464  0021B6  0D01               	mullw	1
 20465  0021B8  0EE0               	movlw	low _macBuffer
 20466  0021BA  24F3               	addwf	prodl,w,c
 20467  0021BC  6F60               	movwf	memcpy@d1& (0+255),b
 20468  0021BE  0E04               	movlw	high _macBuffer
 20469  0021C0  20F4               	addwfc	prodh,w,c
 20470  0021C2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 20471  0021C4  0E5A               	movlw	low _aesBuffer
 20472  0021C6  6F62               	movwf	memcpy@s1& (0+255),b
 20473  0021C8  0E01               	movlw	high _aesBuffer
 20474  0021CA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 20475  0021CC  0E00               	movlw	0
 20476  0021CE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 20477  0021D0  0E04               	movlw	4
 20478  0021D2  6F64               	movwf	memcpy@n& (0+255),b
 20479  0021D4  EC5C  F03D         	call	_memcpy	;wreg free
 20480                           
 20481                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 20482  0021D8  0100               	movlb	0	; () banked
 20483  0021DA  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20484  0021DC  0F04               	addlw	4
 20485  0021DE  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 20486                           
 20487                           ; BSR set to: 0
 20488                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 20489  0021E0  0EF0               	movlw	240
 20490  0021E2  25D2               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 20491  0021E4  0102               	movlb	2	; () banked
 20492  0021E6  6FD4               	movwf	(_loRa+212)& (0+255),b
 20493  0021E8  6BD5               	clrf	(_loRa+213)& (0+255),b
 20494  0021EA  0EFF               	movlw	255
 20495  0021EC  23D5               	addwfc	(_loRa+213)& (0+255),f,b
 20496                           
 20497                           ; BSR set to: 2
 20498  0021EE  0012               	return		;funcret
 20499  0021F0                     __end_of_AssemblePacket:
 20500                           	opt stack 0
 20501                           tosu	equ	0xFFF
 20502                           tosh	equ	0xFFE
 20503                           tosl	equ	0xFFD
 20504                           pclath	equ	0xFFA
 20505                           tblptru	equ	0xFF8
 20506                           tblptrh	equ	0xFF7
 20507                           tblptrl	equ	0xFF6
 20508                           tablat	equ	0xFF5
 20509                           prodh	equ	0xFF4
 20510                           prodl	equ	0xFF3
 20511                           intcon	equ	0xFF2
 20512                           intcon2	equ	0xFF1
 20513                           intcon3	equ	0xFF0
 20514                           indf0	equ	0xFEF
 20515                           postinc0	equ	0xFEE
 20516                           fsr0h	equ	0xFEA
 20517                           fsr0l	equ	0xFE9
 20518                           wreg	equ	0xFE8
 20519                           postinc1	equ	0xFE6
 20520                           postdec1	equ	0xFE5
 20521                           plusw1	equ	0xFE3
 20522                           fsr1h	equ	0xFE2
 20523                           fsr1l	equ	0xFE1
 20524                           indf2	equ	0xFDF
 20525                           postinc2	equ	0xFDE
 20526                           postdec2	equ	0xFDD
 20527                           plusw2	equ	0xFDB
 20528                           fsr2h	equ	0xFDA
 20529                           fsr2l	equ	0xFD9
 20530                           status	equ	0xFD8
 20531                           
 20532 ;; *************** function _IncludeMacCommandsResponse *****************
 20533 ;; Defined at:
 20534 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20535 ;; Parameters:    Size  Location     Type
 20536 ;;  macBuffer       2    0[BANK0 ] PTR unsigned char 
 20537 ;;		 -> macBuffer(271), radioBuffer(271), 
 20538 ;;  pBufferIndex    2    2[BANK0 ] PTR unsigned char 
 20539 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 20540 ;;  bIncludeInFo    1    4[BANK0 ] unsigned char 
 20541 ;; Auto vars:     Size  Location     Type
 20542 ;;  bufferIndex     1   14[BANK0 ] unsigned char 
 20543 ;;  i               1   13[BANK0 ] unsigned char 
 20544 ;; Return value:  Size  Location     Type
 20545 ;;                  1    wreg      void 
 20546 ;; Registers used:
 20547 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20548 ;; Tracked objects:
 20549 ;;		On entry : 0/0
 20550 ;;		On exit  : 0/0
 20551 ;;		Unchanged: 0/0
 20552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20553 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20554 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20555 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20556 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20557 ;;Total ram usage:       15 bytes
 20558 ;; Hardware stack levels used:    1
 20559 ;; Hardware stack levels required when called:    8
 20560 ;; This function calls:
 20561 ;;		_RADIO_GetPacketSnr
 20562 ;; This function is called by:
 20563 ;;		_AssemblePacket
 20564 ;; This function uses a non-reentrant model
 20565 ;;
 20566                           
 20567                           	psect	text101
 20568  0019DE                     __ptext101:
 20569                           	opt stack 0
 20570  0019DE                     _IncludeMacCommandsResponse:
 20571                           	opt stack 20
 20572                           
 20573                           ;lorawan.c: 1847: uint8_t i = 0;
 20574                           
 20575                           ; BSR set to: 2
 20576                           ;incstack = 0
 20577  0019DE  0E00               	movlw	0
 20578  0019E0  0100               	movlb	0	; () banked
 20579  0019E2  6F6D               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 20580                           
 20581                           ; BSR set to: 0
 20582                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 20583  0019E4  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 20584  0019E8  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 20585  0019EC  50DF               	movf	indf2,w,c
 20586  0019EE  6F6E               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 20587                           
 20588                           ; BSR set to: 0
 20589                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 20590  0019F0  0E00               	movlw	0
 20591  0019F2  6F6D               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 20592  0019F4  D218               	goto	l2044
 20593  0019F6                     
 20594                           ; BSR set to: 0
 20595                           ;lorawan.c: 1851: {
 20596                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 20597                           
 20598                           ; BSR set to: 0
 20599  0019F6  5164               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 20600  0019F8  B4D8               	btfsc	status,2,c
 20601  0019FA  D1F6               	goto	l2049
 20602                           
 20603                           ; BSR set to: 0
 20604  0019FC  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20605  0019FE  0D02               	mullw	2
 20606  001A00  0EA8               	movlw	low (_loRa+168)
 20607  001A02  24F3               	addwf	prodl,w,c
 20608  001A04  6ED9               	movwf	fsr2l,c
 20609  001A06  0E02               	movlw	high (_loRa+168)
 20610  001A08  20F4               	addwfc	prodh,w,c
 20611  001A0A  6EDA               	movwf	fsr2h,c
 20612  001A0C  28DE               	incf	postinc2,w,c
 20613  001A0E  B4D8               	btfsc	status,2,c
 20614  001A10  D1EB               	goto	l2049
 20615                           
 20616                           ; BSR set to: 0
 20617                           ;lorawan.c: 1853: {
 20618                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 20619  001A12  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 20620  001A16  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 20621  001A1A  50DF               	movf	indf2,w,c
 20622  001A1C  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20623  001A1E  6B66               	clrf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20624  001A20  1F65               	comf	??_IncludeMacCommandsResponse& (0+255),f,b
 20625  001A22  1F66               	comf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20626  001A24  4B65               	infsnz	??_IncludeMacCommandsResponse& (0+255),f,b
 20627  001A26  2B66               	incf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20628  001A28  0EFE               	movlw	254
 20629  001A2A  6F67               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 20630  001A2C  0EFF               	movlw	255
 20631  001A2E  6F68               	movwf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 20632  001A30  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20633  001A32  0D02               	mullw	2
 20634  001A34  0EA8               	movlw	low (_loRa+168)
 20635  001A36  24F3               	addwf	prodl,w,c
 20636  001A38  6ED9               	movwf	fsr2l,c
 20637  001A3A  0E02               	movlw	high (_loRa+168)
 20638  001A3C  20F4               	addwfc	prodh,w,c
 20639  001A3E  6EDA               	movwf	fsr2h,c
 20640  001A40  50DF               	movf	indf2,w,c
 20641  001A42  6F69               	movwf	(??_IncludeMacCommandsResponse+4)& (0+255),b
 20642  001A44  6B6A               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 20643  001A46  5167               	movf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 20644  001A48  2769               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 20645  001A4A  5168               	movf	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 20646  001A4C  236A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 20647  001A4E  0E69               	movlw	low _macEndDevCmdReplyLen
 20648  001A50  2569               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 20649  001A52  6EF6               	movwf	tblptrl,c
 20650  001A54  0EFF               	movlw	high _macEndDevCmdReplyLen
 20651  001A56  216A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 20652  001A58  6EF7               	movwf	tblptrh,c
 20653  001A5A                     	if	1	;There are 3 active tblptr bytes
 20654  001A5A  6AF8               	clrf	tblptru,c
 20655  001A5C  0E00               	movlw	low (__mediumconst shr (0+16))
 20656  001A5E  22F8               	addwfc	tblptru,f,c
 20657  001A60                     	endif
 20658  001A60  0008               	tblrd		*
 20659  001A62  50F5               	movf	tablat,w,c
 20660  001A64  C06E  F06B         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+6
 20661  001A68  6B6C               	clrf	(??_IncludeMacCommandsResponse+7)& (0+255),b
 20662  001A6A  276B               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 20663  001A6C  0E00               	movlw	0
 20664  001A6E  236C               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 20665  001A70  5165               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 20666  001A72  276B               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 20667  001A74  5166               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20668  001A76  236C               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 20669  001A78  BF6C               	btfsc	(??_IncludeMacCommandsResponse+7)& (0+255),7,b
 20670  001A7A  D1B6               	goto	l2049
 20671  001A7C  516C               	movf	(??_IncludeMacCommandsResponse+7)& (0+255),w,b
 20672  001A7E  E105               	bnz	u16520
 20673  001A80  0E10               	movlw	16
 20674  001A82  5D6B               	subwf	(??_IncludeMacCommandsResponse+6)& (0+255),w,b
 20675  001A84  B0D8               	btfsc	status,0,c
 20676  001A86  D1D5               	goto	u16630
 20677  001A88  D1AF               	goto	l2049
 20678  001A8A                     u16520:
 20679                           
 20680                           ; BSR set to: 0
 20681                           ;lorawan.c: 1855: {
 20682                           ;lorawan.c: 1856: break;
 20683  001A8A  D1D3               	goto	u16630
 20684  001A8C                     
 20685                           ; BSR set to: 0
 20686                           ;lorawan.c: 1862: {
 20687                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 20688                           
 20689                           ; BSR set to: 0
 20690  001A8C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20691  001A8E  0D01               	mullw	1
 20692  001A90  50F3               	movf	prodl,w,c
 20693  001A92  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20694  001A94  6ED9               	movwf	fsr2l,c
 20695  001A96  50F4               	movf	prodh,w,c
 20696  001A98  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20697  001A9A  6EDA               	movwf	fsr2h,c
 20698  001A9C  0E03               	movlw	3
 20699  001A9E  6EDF               	movwf	indf2,c
 20700                           
 20701                           ; BSR set to: 0
 20702  001AA0  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20703                           
 20704                           ; BSR set to: 0
 20705                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 20706  001AA2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20707  001AA4  0D01               	mullw	1
 20708  001AA6  50F3               	movf	prodl,w,c
 20709  001AA8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20710  001AAA  6ED9               	movwf	fsr2l,c
 20711  001AAC  50F4               	movf	prodh,w,c
 20712  001AAE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20713  001AB0  6EDA               	movwf	fsr2h,c
 20714  001AB2  0E00               	movlw	0
 20715  001AB4  6EDF               	movwf	indf2,c
 20716                           
 20717                           ; BSR set to: 0
 20718                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 20719  001AB6  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20720  001AB8  0D02               	mullw	2
 20721  001ABA  0E00               	movlw	low _loRa
 20722  001ABC  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20723  001ABE  0E02               	movlw	high _loRa
 20724  001AC0  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20725  001AC2  0EA8               	movlw	168
 20726  001AC4  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20727  001AC6  0E00               	movlw	0
 20728  001AC8  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20729  001ACA  50F3               	movf	prodl,w,c
 20730  001ACC  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20731  001ACE  50F4               	movf	prodh,w,c
 20732  001AD0  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20733  001AD2  0E01               	movlw	1
 20734  001AD4  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20735  001AD6  6ED9               	movwf	fsr2l,c
 20736  001AD8  0E00               	movlw	0
 20737  001ADA  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20738  001ADC  6EDA               	movwf	fsr2h,c
 20739  001ADE  0102               	movlb	2	; () banked
 20740  001AE0  A0DF               	btfss	indf2,0,c
 20741  001AE2  D00B               	goto	l2051
 20742                           
 20743                           ; BSR set to: 2
 20744                           ;lorawan.c: 1866: {
 20745                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 20746  001AE4  0100               	movlb	0	; () banked
 20747  001AE6  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20748  001AE8  0D01               	mullw	1
 20749  001AEA  50F3               	movf	prodl,w,c
 20750  001AEC  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20751  001AEE  6ED9               	movwf	fsr2l,c
 20752  001AF0  50F4               	movf	prodh,w,c
 20753  001AF2  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20754  001AF4  6EDA               	movwf	fsr2h,c
 20755  001AF6  0E00               	movlw	0
 20756  001AF8  80DB               	bsf	plusw2,0,c
 20757  001AFA                     l2051:
 20758                           
 20759                           ;lorawan.c: 1868: }
 20760                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 20761  001AFA  0100               	movlb	0	; () banked
 20762  001AFC  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20763  001AFE  0D02               	mullw	2
 20764  001B00  0E00               	movlw	low _loRa
 20765  001B02  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20766  001B04  0E02               	movlw	high _loRa
 20767  001B06  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20768  001B08  0EA8               	movlw	168
 20769  001B0A  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20770  001B0C  0E00               	movlw	0
 20771  001B0E  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20772  001B10  50F3               	movf	prodl,w,c
 20773  001B12  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20774  001B14  50F4               	movf	prodh,w,c
 20775  001B16  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20776  001B18  0E01               	movlw	1
 20777  001B1A  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20778  001B1C  6ED9               	movwf	fsr2l,c
 20779  001B1E  0E00               	movlw	0
 20780  001B20  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20781  001B22  6EDA               	movwf	fsr2h,c
 20782  001B24  0102               	movlb	2	; () banked
 20783  001B26  A2DF               	btfss	indf2,1,c
 20784  001B28  D00B               	goto	l2052
 20785                           
 20786                           ; BSR set to: 2
 20787                           ;lorawan.c: 1871: {
 20788                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 20789  001B2A  0100               	movlb	0	; () banked
 20790  001B2C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20791  001B2E  0D01               	mullw	1
 20792  001B30  50F3               	movf	prodl,w,c
 20793  001B32  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20794  001B34  6ED9               	movwf	fsr2l,c
 20795  001B36  50F4               	movf	prodh,w,c
 20796  001B38  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20797  001B3A  6EDA               	movwf	fsr2h,c
 20798  001B3C  0E00               	movlw	0
 20799  001B3E  82DB               	bsf	plusw2,1,c
 20800  001B40                     l2052:
 20801                           
 20802                           ;lorawan.c: 1873: }
 20803                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 20804  001B40  0100               	movlb	0	; () banked
 20805  001B42  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20806  001B44  0D02               	mullw	2
 20807  001B46  0E00               	movlw	low _loRa
 20808  001B48  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20809  001B4A  0E02               	movlw	high _loRa
 20810  001B4C  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20811  001B4E  0EA8               	movlw	168
 20812  001B50  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20813  001B52  0E00               	movlw	0
 20814  001B54  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20815  001B56  50F3               	movf	prodl,w,c
 20816  001B58  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20817  001B5A  50F4               	movf	prodh,w,c
 20818  001B5C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20819  001B5E  0E01               	movlw	1
 20820  001B60  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20821  001B62  6ED9               	movwf	fsr2l,c
 20822  001B64  0E00               	movlw	0
 20823  001B66  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20824  001B68  6EDA               	movwf	fsr2h,c
 20825  001B6A  0102               	movlb	2	; () banked
 20826  001B6C  A4DF               	btfss	indf2,2,c
 20827  001B6E  D089               	goto	l2058
 20828                           
 20829                           ; BSR set to: 2
 20830                           ;lorawan.c: 1876: {
 20831                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 20832  001B70  0100               	movlb	0	; () banked
 20833  001B72  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20834  001B74  0D01               	mullw	1
 20835  001B76  50F3               	movf	prodl,w,c
 20836  001B78  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20837  001B7A  6ED9               	movwf	fsr2l,c
 20838  001B7C  50F4               	movf	prodh,w,c
 20839  001B7E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20840  001B80  6EDA               	movwf	fsr2h,c
 20841  001B82  0E00               	movlw	0
 20842  001B84  84DB               	bsf	plusw2,2,c
 20843                           
 20844                           ; BSR set to: 0
 20845  001B86  D07D               	goto	l2058
 20846  001B88                     
 20847                           ; BSR set to: 0
 20848                           ;lorawan.c: 1884: {
 20849                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 20850                           
 20851                           ; BSR set to: 0
 20852  001B88  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20853  001B8A  0D01               	mullw	1
 20854  001B8C  50F3               	movf	prodl,w,c
 20855  001B8E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20856  001B90  6ED9               	movwf	fsr2l,c
 20857  001B92  50F4               	movf	prodh,w,c
 20858  001B94  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20859  001B96  6EDA               	movwf	fsr2h,c
 20860  001B98  0E05               	movlw	5
 20861  001B9A  6EDF               	movwf	indf2,c
 20862                           
 20863                           ; BSR set to: 0
 20864  001B9C  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20865                           
 20866                           ; BSR set to: 0
 20867                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 20868  001B9E  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20869  001BA0  0D01               	mullw	1
 20870  001BA2  50F3               	movf	prodl,w,c
 20871  001BA4  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20872  001BA6  6ED9               	movwf	fsr2l,c
 20873  001BA8  50F4               	movf	prodh,w,c
 20874  001BAA  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20875  001BAC  6EDA               	movwf	fsr2h,c
 20876  001BAE  0E00               	movlw	0
 20877  001BB0  6EDF               	movwf	indf2,c
 20878                           
 20879                           ; BSR set to: 0
 20880                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 20881  001BB2  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20882  001BB4  0D02               	mullw	2
 20883  001BB6  0E00               	movlw	low _loRa
 20884  001BB8  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20885  001BBA  0E02               	movlw	high _loRa
 20886  001BBC  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20887  001BBE  0EA8               	movlw	168
 20888  001BC0  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20889  001BC2  0E00               	movlw	0
 20890  001BC4  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20891  001BC6  50F3               	movf	prodl,w,c
 20892  001BC8  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20893  001BCA  50F4               	movf	prodh,w,c
 20894  001BCC  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20895  001BCE  0E01               	movlw	1
 20896  001BD0  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20897  001BD2  6ED9               	movwf	fsr2l,c
 20898  001BD4  0E00               	movlw	0
 20899  001BD6  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20900  001BD8  6EDA               	movwf	fsr2h,c
 20901  001BDA  0102               	movlb	2	; () banked
 20902  001BDC  A6DF               	btfss	indf2,3,c
 20903  001BDE  D00B               	goto	l2056
 20904                           
 20905                           ; BSR set to: 2
 20906                           ;lorawan.c: 1888: {
 20907                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 20908  001BE0  0100               	movlb	0	; () banked
 20909  001BE2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20910  001BE4  0D01               	mullw	1
 20911  001BE6  50F3               	movf	prodl,w,c
 20912  001BE8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20913  001BEA  6ED9               	movwf	fsr2l,c
 20914  001BEC  50F4               	movf	prodh,w,c
 20915  001BEE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20916  001BF0  6EDA               	movwf	fsr2h,c
 20917  001BF2  0E00               	movlw	0
 20918  001BF4  80DB               	bsf	plusw2,0,c
 20919  001BF6                     l2056:
 20920                           
 20921                           ;lorawan.c: 1890: }
 20922                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 20923  001BF6  0100               	movlb	0	; () banked
 20924  001BF8  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20925  001BFA  0D02               	mullw	2
 20926  001BFC  0E00               	movlw	low _loRa
 20927  001BFE  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20928  001C00  0E02               	movlw	high _loRa
 20929  001C02  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20930  001C04  0EA8               	movlw	168
 20931  001C06  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20932  001C08  0E00               	movlw	0
 20933  001C0A  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20934  001C0C  50F3               	movf	prodl,w,c
 20935  001C0E  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20936  001C10  50F4               	movf	prodh,w,c
 20937  001C12  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20938  001C14  0E01               	movlw	1
 20939  001C16  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20940  001C18  6ED9               	movwf	fsr2l,c
 20941  001C1A  0E00               	movlw	0
 20942  001C1C  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20943  001C1E  6EDA               	movwf	fsr2h,c
 20944  001C20  0102               	movlb	2	; () banked
 20945  001C22  A8DF               	btfss	indf2,4,c
 20946  001C24  D00B               	goto	l2057
 20947                           
 20948                           ; BSR set to: 2
 20949                           ;lorawan.c: 1893: {
 20950                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 20951  001C26  0100               	movlb	0	; () banked
 20952  001C28  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20953  001C2A  0D01               	mullw	1
 20954  001C2C  50F3               	movf	prodl,w,c
 20955  001C2E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20956  001C30  6ED9               	movwf	fsr2l,c
 20957  001C32  50F4               	movf	prodh,w,c
 20958  001C34  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20959  001C36  6EDA               	movwf	fsr2h,c
 20960  001C38  0E00               	movlw	0
 20961  001C3A  82DB               	bsf	plusw2,1,c
 20962  001C3C                     l2057:
 20963                           
 20964                           ;lorawan.c: 1895: }
 20965                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 20966  001C3C  0100               	movlb	0	; () banked
 20967  001C3E  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20968  001C40  0D02               	mullw	2
 20969  001C42  0E00               	movlw	low _loRa
 20970  001C44  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20971  001C46  0E02               	movlw	high _loRa
 20972  001C48  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20973  001C4A  0EA8               	movlw	168
 20974  001C4C  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20975  001C4E  0E00               	movlw	0
 20976  001C50  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20977  001C52  50F3               	movf	prodl,w,c
 20978  001C54  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20979  001C56  50F4               	movf	prodh,w,c
 20980  001C58  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20981  001C5A  0E01               	movlw	1
 20982  001C5C  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20983  001C5E  6ED9               	movwf	fsr2l,c
 20984  001C60  0E00               	movlw	0
 20985  001C62  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20986  001C64  6EDA               	movwf	fsr2h,c
 20987  001C66  0102               	movlb	2	; () banked
 20988  001C68  AADF               	btfss	indf2,5,c
 20989  001C6A  D00B               	goto	l2058
 20990                           
 20991                           ; BSR set to: 2
 20992                           ;lorawan.c: 1898: {
 20993                           ;lorawan.c: 1899: macBuffer[bufferIndex] |= 0x04;
 20994  001C6C  0100               	movlb	0	; () banked
 20995  001C6E  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20996  001C70  0D01               	mullw	1
 20997  001C72  50F3               	movf	prodl,w,c
 20998  001C74  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20999  001C76  6ED9               	movwf	fsr2l,c
 21000  001C78  50F4               	movf	prodh,w,c
 21001  001C7A  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21002  001C7C  6EDA               	movwf	fsr2h,c
 21003  001C7E  0E00               	movlw	0
 21004  001C80  84DB               	bsf	plusw2,2,c
 21005  001C82                     l2058:
 21006                           
 21007                           ;lorawan.c: 1900: }
 21008                           ;lorawan.c: 1902: bufferIndex ++;
 21009                           
 21010                           ; BSR set to: 0
 21011  001C82  0100               	movlb	0	; () banked
 21012  001C84  D03C               	goto	L12
 21013  001C86                     
 21014                           ; BSR set to: 0
 21015                           ;lorawan.c: 1907: {
 21016                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 21017                           
 21018                           ; BSR set to: 0
 21019  001C86  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21020  001C88  0D01               	mullw	1
 21021  001C8A  50F3               	movf	prodl,w,c
 21022  001C8C  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21023  001C8E  6ED9               	movwf	fsr2l,c
 21024  001C90  50F4               	movf	prodh,w,c
 21025  001C92  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21026  001C94  6EDA               	movwf	fsr2h,c
 21027  001C96  0E06               	movlw	6
 21028  001C98  6EDF               	movwf	indf2,c
 21029                           
 21030                           ; BSR set to: 0
 21031  001C9A  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 21032                           
 21033                           ; BSR set to: 0
 21034                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 21035  001C9C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21036  001C9E  0D01               	mullw	1
 21037  001CA0  50F3               	movf	prodl,w,c
 21038  001CA2  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21039  001CA4  6ED9               	movwf	fsr2l,c
 21040  001CA6  50F4               	movf	prodh,w,c
 21041  001CA8  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21042  001CAA  6EDA               	movwf	fsr2h,c
 21043  001CAC  C2E0  FFDF         	movff	_loRa+224,indf2
 21044  001CB0  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 21045                           
 21046                           ; BSR set to: 0
 21047                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 21048  001CB2  ECB2  F046         	call	_RADIO_GetPacketSnr	;wreg free
 21049  001CB6  0A80               	xorlw	128
 21050  001CB8  0FA0               	addlw	160
 21051  001CBA  A0D8               	btfss	status,0,c
 21052  001CBC  D006               	goto	u16600
 21053  001CBE  ECB2  F046         	call	_RADIO_GetPacketSnr	;wreg free
 21054  001CC2  0A80               	xorlw	128
 21055  001CC4  0F60               	addlw	-160
 21056  001CC6  A0D8               	btfss	status,0,c
 21057  001CC8  D00C               	goto	l2060
 21058  001CCA                     u16600:
 21059                           
 21060                           ;lorawan.c: 1911: {
 21061                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 21062  001CCA  0100               	movlb	0	; () banked
 21063  001CCC  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21064  001CCE  0D01               	mullw	1
 21065  001CD0  50F3               	movf	prodl,w,c
 21066  001CD2  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21067  001CD4  6ED9               	movwf	fsr2l,c
 21068  001CD6  50F4               	movf	prodh,w,c
 21069  001CD8  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21070  001CDA  6EDA               	movwf	fsr2h,c
 21071  001CDC  0E20               	movlw	32
 21072  001CDE  6EDF               	movwf	indf2,c
 21073  001CE0  D00E               	goto	L12
 21074  001CE2                     l2060:
 21075                           
 21076                           ;lorawan.c: 1914: else
 21077                           ;lorawan.c: 1915: {
 21078                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 21079                           
 21080                           ; BSR set to: 0
 21081  001CE2  0100               	movlb	0	; () banked
 21082  001CE4  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21083  001CE6  0D01               	mullw	1
 21084  001CE8  50F3               	movf	prodl,w,c
 21085  001CEA  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21086  001CEC  6ED9               	movwf	fsr2l,c
 21087  001CEE  50F4               	movf	prodh,w,c
 21088  001CF0  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21089  001CF2  6EDA               	movwf	fsr2h,c
 21090  001CF4  ECB2  F046         	call	_RADIO_GetPacketSnr	;wreg free
 21091  001CF8  0B3F               	andlw	63
 21092  001CFA  6EDF               	movwf	indf2,c
 21093  001CFC  D7C2               	goto	l2058
 21094  001CFE                     L12:
 21095  001CFE  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 21096                           
 21097                           ; BSR set to: 0
 21098                           ;lorawan.c: 1917: }
 21099                           ;lorawan.c: 1918: }
 21100                           ;lorawan.c: 1919: break;
 21101  001D00  D091               	goto	l2054
 21102  001D02                     
 21103                           ; BSR set to: 0
 21104                           ;lorawan.c: 1922: {
 21105                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 21106                           
 21107                           ; BSR set to: 0
 21108  001D02  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21109  001D04  0D01               	mullw	1
 21110  001D06  50F3               	movf	prodl,w,c
 21111  001D08  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21112  001D0A  6ED9               	movwf	fsr2l,c
 21113  001D0C  50F4               	movf	prodh,w,c
 21114  001D0E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21115  001D10  6EDA               	movwf	fsr2h,c
 21116  001D12  0E07               	movlw	7
 21117  001D14  6EDF               	movwf	indf2,c
 21118                           
 21119                           ; BSR set to: 0
 21120  001D16  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 21121                           
 21122                           ; BSR set to: 0
 21123                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 21124  001D18  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21125  001D1A  0D01               	mullw	1
 21126  001D1C  50F3               	movf	prodl,w,c
 21127  001D1E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21128  001D20  6ED9               	movwf	fsr2l,c
 21129  001D22  50F4               	movf	prodh,w,c
 21130  001D24  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21131  001D26  6EDA               	movwf	fsr2h,c
 21132  001D28  0E00               	movlw	0
 21133  001D2A  6EDF               	movwf	indf2,c
 21134                           
 21135                           ; BSR set to: 0
 21136                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 21137  001D2C  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21138  001D2E  0D02               	mullw	2
 21139  001D30  0E00               	movlw	low _loRa
 21140  001D32  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21141  001D34  0E02               	movlw	high _loRa
 21142  001D36  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21143  001D38  0EA8               	movlw	168
 21144  001D3A  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21145  001D3C  0E00               	movlw	0
 21146  001D3E  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21147  001D40  50F3               	movf	prodl,w,c
 21148  001D42  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21149  001D44  50F4               	movf	prodh,w,c
 21150  001D46  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21151  001D48  0E01               	movlw	1
 21152  001D4A  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 21153  001D4C  6ED9               	movwf	fsr2l,c
 21154  001D4E  0E00               	movlw	0
 21155  001D50  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21156  001D52  6EDA               	movwf	fsr2h,c
 21157  001D54  0102               	movlb	2	; () banked
 21158  001D56  AEDF               	btfss	indf2,7,c
 21159  001D58  D00B               	goto	l2065
 21160                           
 21161                           ; BSR set to: 2
 21162                           ;lorawan.c: 1926: {
 21163                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 21164  001D5A  0100               	movlb	0	; () banked
 21165  001D5C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21166  001D5E  0D01               	mullw	1
 21167  001D60  50F3               	movf	prodl,w,c
 21168  001D62  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21169  001D64  6ED9               	movwf	fsr2l,c
 21170  001D66  50F4               	movf	prodh,w,c
 21171  001D68  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21172  001D6A  6EDA               	movwf	fsr2h,c
 21173  001D6C  0E00               	movlw	0
 21174  001D6E  80DB               	bsf	plusw2,0,c
 21175  001D70                     l2065:
 21176                           
 21177                           ;lorawan.c: 1928: }
 21178                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 21179  001D70  0100               	movlb	0	; () banked
 21180  001D72  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21181  001D74  0D02               	mullw	2
 21182  001D76  0E00               	movlw	low _loRa
 21183  001D78  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21184  001D7A  0E02               	movlw	high _loRa
 21185  001D7C  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21186  001D7E  0EA8               	movlw	168
 21187  001D80  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21188  001D82  0E00               	movlw	0
 21189  001D84  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21190  001D86  50F3               	movf	prodl,w,c
 21191  001D88  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21192  001D8A  50F4               	movf	prodh,w,c
 21193  001D8C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21194  001D8E  0E01               	movlw	1
 21195  001D90  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 21196  001D92  6ED9               	movwf	fsr2l,c
 21197  001D94  0E00               	movlw	0
 21198  001D96  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21199  001D98  6EDA               	movwf	fsr2h,c
 21200  001D9A  0102               	movlb	2	; () banked
 21201  001D9C  ACDF               	btfss	indf2,6,c
 21202  001D9E  D771               	goto	l2058
 21203                           
 21204                           ; BSR set to: 2
 21205                           ;lorawan.c: 1931: {
 21206                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 21207  001DA0  0100               	movlb	0	; () banked
 21208  001DA2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21209  001DA4  0D01               	mullw	1
 21210  001DA6  50F3               	movf	prodl,w,c
 21211  001DA8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21212  001DAA  6ED9               	movwf	fsr2l,c
 21213  001DAC  50F4               	movf	prodh,w,c
 21214  001DAE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21215  001DB0  6EDA               	movwf	fsr2h,c
 21216  001DB2  0E00               	movlw	0
 21217  001DB4  82DB               	bsf	plusw2,1,c
 21218                           
 21219                           ; BSR set to: 0
 21220  001DB6  D765               	goto	l2058
 21221  001DB8                     l2067:
 21222                           
 21223                           ; BSR set to: 0
 21224                           ;lorawan.c: 1939: {
 21225                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 21226  001DB8  0102               	movlb	2	; () banked
 21227  001DBA  69DD               	setf	(_loRa+221)& (0+255),b
 21228                           
 21229                           ; BSR set to: 2
 21230                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 21231  001DBC  0E00               	movlw	0
 21232  001DBE  6FDE               	movwf	(_loRa+222)& (0+255),b
 21233                           
 21234                           ; BSR set to: 2
 21235                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 21236  001DC0  0100               	movlb	0	; () banked
 21237  001DC2                     
 21238                           ; BSR set to: 0
 21239                           ;lorawan.c: 1947: case DUTY_CYCLE_CID:
 21240                           ;lorawan.c: 1948: {
 21241                           ;lorawan.c: 1949: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 21242                           
 21243                           ; BSR set to: 0
 21244                           
 21245                           ; BSR set to: 0
 21246  001DC2  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21247  001DC4  0D02               	mullw	2
 21248  001DC6  0EA8               	movlw	low (_loRa+168)
 21249  001DC8  24F3               	addwf	prodl,w,c
 21250  001DCA  6ED9               	movwf	fsr2l,c
 21251  001DCC  0E02               	movlw	high (_loRa+168)
 21252  001DCE  20F4               	addwfc	prodh,w,c
 21253  001DD0  6EDA               	movwf	fsr2h,c
 21254  001DD2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21255  001DD4  0D01               	mullw	1
 21256  001DD6  50F3               	movf	prodl,w,c
 21257  001DD8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21258  001DDA  6EE9               	movwf	fsr0l,c
 21259  001DDC  50F4               	movf	prodh,w,c
 21260  001DDE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21261  001DE0  6EEA               	movwf	fsr0h,c
 21262  001DE2  CFDF FFEF          	movff	indf2,indf0
 21263  001DE6  D78B               	goto	L12
 21264  001DE8                     l2049:
 21265                           
 21266                           ; BSR set to: 0
 21267                           
 21268                           ; BSR set to: 0
 21269  001DE8  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21270  001DEA  0D02               	mullw	2
 21271  001DEC  0EA8               	movlw	low (_loRa+168)
 21272  001DEE  24F3               	addwf	prodl,w,c
 21273  001DF0  6ED9               	movwf	fsr2l,c
 21274  001DF2  0E02               	movlw	high (_loRa+168)
 21275  001DF4  20F4               	addwfc	prodh,w,c
 21276  001DF6  6EDA               	movwf	fsr2h,c
 21277  001DF8  50DF               	movf	indf2,w,c
 21278                           
 21279                           ; Switch size 1, requested type "space"
 21280                           ; Number of cases is 7, Range of values is 2 to 8
 21281                           ; switch strategies available:
 21282                           ; Name         Instructions Cycles
 21283                           ; simple_byte           22    12 (average)
 21284                           ;	Chosen strategy is simple_byte
 21285  001DFA  0A02               	xorlw	2	; case 2
 21286  001DFC  B4D8               	btfsc	status,2,c
 21287  001DFE  D7DC               	goto	l2067
 21288  001E00  0A01               	xorlw	1	; case 3
 21289  001E02  B4D8               	btfsc	status,2,c
 21290  001E04  D643               	goto	l2050
 21291  001E06  0A07               	xorlw	7	; case 4
 21292  001E08  B4D8               	btfsc	status,2,c
 21293  001E0A  D7DB               	goto	l2068
 21294  001E0C  0A01               	xorlw	1	; case 5
 21295  001E0E  B4D8               	btfsc	status,2,c
 21296  001E10  D6BB               	goto	l2055
 21297  001E12  0A03               	xorlw	3	; case 6
 21298  001E14  B4D8               	btfsc	status,2,c
 21299  001E16  D737               	goto	l2059
 21300  001E18  0A01               	xorlw	1	; case 7
 21301  001E1A  B4D8               	btfsc	status,2,c
 21302  001E1C  D772               	goto	l2064
 21303  001E1E  0A0F               	xorlw	15	; case 8
 21304  001E20  B4D8               	btfsc	status,2,c
 21305  001E22  D7CF               	goto	l2068
 21306  001E24                     l2054:
 21307                           
 21308                           ; BSR set to: 0
 21309                           
 21310                           ; BSR set to: 0
 21311  001E24  2B6D               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 21312  001E26                     l2044:
 21313                           
 21314                           ; BSR set to: 0
 21315                           
 21316                           ; BSR set to: 0
 21317  001E26  0102               	movlb	2	; () banked
 21318  001E28  51A7               	movf	(_loRa+167)& (0+255),w,b
 21319  001E2A  0100               	movlb	0	; () banked
 21320  001E2C  5D6D               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 21321  001E2E  A0D8               	btfss	status,0,c
 21322  001E30  D5E2               	goto	l2045
 21323  001E32                     u16630:
 21324                           
 21325                           ; BSR set to: 0
 21326                           ;lorawan.c: 1957: }
 21327                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 21328                           
 21329                           ; BSR set to: 0
 21330  001E32  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 21331  001E36  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 21332  001E3A  C06E  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 21333                           
 21334                           ; BSR set to: 0
 21335  001E3E  0012               	return		;funcret
 21336  001E40                     __end_of_IncludeMacCommandsResponse:
 21337                           	opt stack 0
 21338                           tosu	equ	0xFFF
 21339                           tosh	equ	0xFFE
 21340                           tosl	equ	0xFFD
 21341                           pclath	equ	0xFFA
 21342                           tblptru	equ	0xFF8
 21343                           tblptrh	equ	0xFF7
 21344                           tblptrl	equ	0xFF6
 21345                           tablat	equ	0xFF5
 21346                           prodh	equ	0xFF4
 21347                           prodl	equ	0xFF3
 21348                           intcon	equ	0xFF2
 21349                           intcon2	equ	0xFF1
 21350                           intcon3	equ	0xFF0
 21351                           indf0	equ	0xFEF
 21352                           postinc0	equ	0xFEE
 21353                           fsr0h	equ	0xFEA
 21354                           fsr0l	equ	0xFE9
 21355                           wreg	equ	0xFE8
 21356                           postinc1	equ	0xFE6
 21357                           postdec1	equ	0xFE5
 21358                           plusw1	equ	0xFE3
 21359                           fsr1h	equ	0xFE2
 21360                           fsr1l	equ	0xFE1
 21361                           indf2	equ	0xFDF
 21362                           postinc2	equ	0xFDE
 21363                           postdec2	equ	0xFDD
 21364                           plusw2	equ	0xFDB
 21365                           fsr2h	equ	0xFDA
 21366                           fsr2l	equ	0xFD9
 21367                           status	equ	0xFD8
 21368                           
 21369 ;; *************** function _RADIO_GetPacketSnr *****************
 21370 ;; Defined at:
 21371 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 21372 ;; Parameters:    Size  Location     Type
 21373 ;;		None
 21374 ;; Auto vars:     Size  Location     Type
 21375 ;;		None
 21376 ;; Return value:  Size  Location     Type
 21377 ;;                  1    wreg      char 
 21378 ;; Registers used:
 21379 ;;		wreg, status,2
 21380 ;; Tracked objects:
 21381 ;;		On entry : 0/0
 21382 ;;		On exit  : 0/0
 21383 ;;		Unchanged: 0/0
 21384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21389 ;;Total ram usage:        0 bytes
 21390 ;; Hardware stack levels used:    1
 21391 ;; Hardware stack levels required when called:    7
 21392 ;; This function calls:
 21393 ;;		Nothing
 21394 ;; This function is called by:
 21395 ;;		_IncludeMacCommandsResponse
 21396 ;; This function uses a non-reentrant model
 21397 ;;
 21398                           
 21399                           	psect	text102
 21400  008D64                     __ptext102:
 21401                           	opt stack 0
 21402  008D64                     _RADIO_GetPacketSnr:
 21403                           	opt stack 20
 21404                           
 21405                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 21406                           
 21407                           ; BSR set to: 0
 21408                           ;incstack = 0
 21409  008D64  0101               	movlb	1	; () banked
 21410  008D66  5156               	movf	(_RadioConfiguration+50)& (0+255),w,b
 21411  008D68  0012               	return	
 21412  008D6A                     __end_of_RADIO_GetPacketSnr:
 21413                           	opt stack 0
 21414                           tosu	equ	0xFFF
 21415                           tosh	equ	0xFFE
 21416                           tosl	equ	0xFFD
 21417                           pclath	equ	0xFFA
 21418                           tblptru	equ	0xFF8
 21419                           tblptrh	equ	0xFF7
 21420                           tblptrl	equ	0xFF6
 21421                           tablat	equ	0xFF5
 21422                           prodh	equ	0xFF4
 21423                           prodl	equ	0xFF3
 21424                           intcon	equ	0xFF2
 21425                           intcon2	equ	0xFF1
 21426                           intcon3	equ	0xFF0
 21427                           indf0	equ	0xFEF
 21428                           postinc0	equ	0xFEE
 21429                           fsr0h	equ	0xFEA
 21430                           fsr0l	equ	0xFE9
 21431                           wreg	equ	0xFE8
 21432                           postinc1	equ	0xFE6
 21433                           postdec1	equ	0xFE5
 21434                           plusw1	equ	0xFE3
 21435                           fsr1h	equ	0xFE2
 21436                           fsr1l	equ	0xFE1
 21437                           indf2	equ	0xFDF
 21438                           postinc2	equ	0xFDE
 21439                           postdec2	equ	0xFDD
 21440                           plusw2	equ	0xFDB
 21441                           fsr2h	equ	0xFDA
 21442                           fsr2l	equ	0xFD9
 21443                           status	equ	0xFD8
 21444                           
 21445 ;; *************** function _FindSmallestDataRate *****************
 21446 ;; Defined at:
 21447 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21448 ;; Parameters:    Size  Location     Type
 21449 ;;		None
 21450 ;; Auto vars:     Size  Location     Type
 21451 ;;  dataRate        1    3[BANK0 ] unsigned char 
 21452 ;;  i               1    2[BANK0 ] unsigned char 
 21453 ;;  found           1    1[BANK0 ] unsigned char 
 21454 ;; Return value:  Size  Location     Type
 21455 ;;                  1    wreg      unsigned char 
 21456 ;; Registers used:
 21457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21458 ;; Tracked objects:
 21459 ;;		On entry : 0/0
 21460 ;;		On exit  : 0/0
 21461 ;;		Unchanged: 0/0
 21462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21464 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21465 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21466 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21467 ;;Total ram usage:        4 bytes
 21468 ;; Hardware stack levels used:    1
 21469 ;; Hardware stack levels required when called:    7
 21470 ;; This function calls:
 21471 ;;		Nothing
 21472 ;; This function is called by:
 21473 ;;		_AckRetransmissionCallback
 21474 ;;		_AssemblePacket
 21475 ;; This function uses a non-reentrant model
 21476 ;;
 21477                           
 21478                           	psect	text103
 21479  0064B0                     __ptext103:
 21480                           	opt stack 0
 21481  0064B0                     _FindSmallestDataRate:
 21482                           	opt stack 21
 21483                           
 21484                           ;lorawan.c: 1965: uint8_t i = 0, dataRate;
 21485                           
 21486                           ; BSR set to: 1
 21487                           ;incstack = 0
 21488  0064B0  0E00               	movlw	0
 21489  0064B2  0100               	movlb	0	; () banked
 21490  0064B4  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 21491                           
 21492                           ;lorawan.c: 1966: bool found = 0;
 21493  0064B6  0E00               	movlw	0
 21494  0064B8  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 21495                           
 21496                           ; BSR set to: 0
 21497                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 21498  0064BA  0102               	movlb	2	; () banked
 21499  0064BC  51DF               	movf	(_loRa+223)& (0+255),w,b
 21500  0064BE  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 21501  0064C0  B0D8               	btfsc	status,0,c
 21502  0064C2  D062               	goto	l2085
 21503                           
 21504                           ; BSR set to: 2
 21505                           ;lorawan.c: 1969: {
 21506                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 21507  0064C4  05DF               	decf	(_loRa+223)& (0+255),w,b
 21508  0064C6  0100               	movlb	0	; () banked
 21509  0064C8  D050               	goto	L13
 21510  0064CA                     
 21511                           ; BSR set to: 0
 21512                           ;lorawan.c: 1973: {
 21513                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 21514                           
 21515                           ; BSR set to: 0
 21516  0064CA  0E00               	movlw	0
 21517  0064CC  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 21518  0064CE  D03D               	goto	l2077
 21519  0064D0                     
 21520                           ; BSR set to: 0
 21521                           ;lorawan.c: 1975: {
 21522                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 21523                           
 21524                           ; BSR set to: 0
 21525  0064D0  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 21526  0064D2  0D0E               	mullw	14
 21527  0064D4  0E05               	movlw	5
 21528  0064D6  26F3               	addwf	prodl,f,c
 21529  0064D8  0E00               	movlw	0
 21530  0064DA  22F4               	addwfc	prodh,f,c
 21531  0064DC  0E00               	movlw	low _Channels
 21532  0064DE  24F3               	addwf	prodl,w,c
 21533  0064E0  6ED9               	movwf	fsr2l,c
 21534  0064E2  0E04               	movlw	high _Channels
 21535  0064E4  20F4               	addwfc	prodh,w,c
 21536  0064E6  6EDA               	movwf	fsr2h,c
 21537  0064E8  0104               	movlb	4	; () banked
 21538  0064EA  50DF               	movf	223,w,c
 21539  0064EC  0B0F               	andlw	15
 21540  0064EE  0100               	movlb	0	; () banked
 21541  0064F0  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 21542  0064F2  5160               	movf	??_FindSmallestDataRate& (0+255),w,b
 21543  0064F4  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 21544  0064F6  A0D8               	btfss	status,0,c
 21545  0064F8  D027               	goto	l2079
 21546                           
 21547                           ; BSR set to: 0
 21548  0064FA  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 21549  0064FC  0D0E               	mullw	14
 21550  0064FE  0E05               	movlw	5
 21551  006500  26F3               	addwf	prodl,f,c
 21552  006502  0E00               	movlw	0
 21553  006504  22F4               	addwfc	prodh,f,c
 21554  006506  0E00               	movlw	low _Channels
 21555  006508  24F3               	addwf	prodl,w,c
 21556  00650A  6ED9               	movwf	fsr2l,c
 21557  00650C  0E04               	movlw	high _Channels
 21558  00650E  20F4               	addwfc	prodh,w,c
 21559  006510  6EDA               	movwf	fsr2h,c
 21560  006512  0104               	movlb	4	; () banked
 21561  006514  38DF               	swapf	223,w,c
 21562  006516  0B0F               	andlw	15
 21563  006518  0100               	movlb	0	; () banked
 21564  00651A  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 21565  00651C  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 21566  00651E  5D60               	subwf	??_FindSmallestDataRate& (0+255),w,b
 21567  006520  A0D8               	btfss	status,0,c
 21568  006522  D012               	goto	l2079
 21569                           
 21570                           ; BSR set to: 0
 21571  006524  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 21572  006526  0D0E               	mullw	14
 21573  006528  0E04               	movlw	4
 21574  00652A  26F3               	addwf	prodl,f,c
 21575  00652C  0E00               	movlw	0
 21576  00652E  22F4               	addwfc	prodh,f,c
 21577  006530  0E00               	movlw	low _Channels
 21578  006532  24F3               	addwf	prodl,w,c
 21579  006534  6ED9               	movwf	fsr2l,c
 21580  006536  0E04               	movlw	high _Channels
 21581  006538  20F4               	addwfc	prodh,w,c
 21582  00653A  6EDA               	movwf	fsr2h,c
 21583  00653C  04DE               	decf	postinc2,w,c
 21584  00653E  A4D8               	btfss	status,2,c
 21585  006540  D003               	goto	l2079
 21586                           
 21587                           ; BSR set to: 0
 21588                           ;lorawan.c: 1977: {
 21589                           ;lorawan.c: 1978: found = 1;
 21590  006542  0E01               	movlw	1
 21591  006544  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 21592                           
 21593                           ;lorawan.c: 1979: break;
 21594  006546  D007               	goto	u16330
 21595  006548                     l2079:
 21596                           
 21597                           ; BSR set to: 0
 21598                           
 21599                           ; BSR set to: 0
 21600  006548  2B62               	incf	FindSmallestDataRate@i& (0+255),f,b
 21601  00654A                     l2077:
 21602                           
 21603                           ; BSR set to: 0
 21604                           
 21605                           ; BSR set to: 0
 21606  00654A  0102               	movlb	2	; () banked
 21607  00654C  51ED               	movf	(_loRa+237)& (0+255),w,b
 21608  00654E  0100               	movlb	0	; () banked
 21609  006550  5D62               	subwf	FindSmallestDataRate@i& (0+255),w,b
 21610  006552  A0D8               	btfss	status,0,c
 21611  006554  D7BD               	goto	l2078
 21612  006556                     u16330:
 21613                           
 21614                           ; BSR set to: 0
 21615                           ;lorawan.c: 1980: }
 21616                           ;lorawan.c: 1981: }
 21617                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 21618                           
 21619                           ; BSR set to: 0
 21620  006556  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 21621  006558  A4D8               	btfss	status,2,c
 21622  00655A  D008               	goto	l2081
 21623                           
 21624                           ; BSR set to: 0
 21625  00655C  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 21626  00655E  0102               	movlb	2	; () banked
 21627  006560  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 21628  006562  B0D8               	btfsc	status,0,c
 21629  006564  D003               	goto	l2081
 21630                           
 21631                           ; BSR set to: 2
 21632                           ;lorawan.c: 1983: {
 21633                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 21634  006566  0100               	movlb	0	; () banked
 21635  006568  0563               	decf	FindSmallestDataRate@dataRate& (0+255),w,b
 21636  00656A                     L13:
 21637  00656A  6F63               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 21638  00656C                     l2081:
 21639                           
 21640                           ; BSR set to: 0
 21641                           
 21642                           ; BSR set to: 0
 21643  00656C  0100               	movlb	0	; () banked
 21644  00656E  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 21645  006570  A4D8               	btfss	status,2,c
 21646  006572  D006               	goto	u16370
 21647                           
 21648                           ; BSR set to: 0
 21649  006574  0102               	movlb	2	; () banked
 21650  006576  51EB               	movf	(_loRa+235)& (0+255),w,b
 21651  006578  0100               	movlb	0	; () banked
 21652  00657A  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 21653  00657C  B0D8               	btfsc	status,0,c
 21654  00657E  D7A5               	goto	l2076
 21655  006580                     u16370:
 21656                           
 21657                           ; BSR set to: 0
 21658                           ;lorawan.c: 1985: }
 21659                           ;lorawan.c: 1986: }
 21660                           ;lorawan.c: 1988: if (found == 1)
 21661                           
 21662                           ; BSR set to: 0
 21663                           
 21664                           ; BSR set to: 0
 21665  006580  0561               	decf	FindSmallestDataRate@found& (0+255),w,b
 21666  006582  B4D8               	btfsc	status,2,c
 21667                           
 21668                           ; BSR set to: 0
 21669                           ;lorawan.c: 1989: {
 21670                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 21671  006584  C063  F2DF         	movff	FindSmallestDataRate@dataRate,_loRa+223
 21672  006588                     l2085:
 21673                           
 21674                           ;lorawan.c: 1991: }
 21675                           ;lorawan.c: 1992: }
 21676                           ;lorawan.c: 1994: return found;
 21677                           
 21678                           ; BSR set to: 0
 21679                           
 21680                           ; BSR set to: 0
 21681  006588  0100               	movlb	0	; () banked
 21682  00658A  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 21683  00658C  0012               	return	
 21684  00658E                     __end_of_FindSmallestDataRate:
 21685                           	opt stack 0
 21686                           tosu	equ	0xFFF
 21687                           tosh	equ	0xFFE
 21688                           tosl	equ	0xFFD
 21689                           pclath	equ	0xFFA
 21690                           tblptru	equ	0xFF8
 21691                           tblptrh	equ	0xFF7
 21692                           tblptrl	equ	0xFF6
 21693                           tablat	equ	0xFF5
 21694                           prodh	equ	0xFF4
 21695                           prodl	equ	0xFF3
 21696                           intcon	equ	0xFF2
 21697                           intcon2	equ	0xFF1
 21698                           intcon3	equ	0xFF0
 21699                           indf0	equ	0xFEF
 21700                           postinc0	equ	0xFEE
 21701                           fsr0h	equ	0xFEA
 21702                           fsr0l	equ	0xFE9
 21703                           wreg	equ	0xFE8
 21704                           postinc1	equ	0xFE6
 21705                           postdec1	equ	0xFE5
 21706                           plusw1	equ	0xFE3
 21707                           fsr1h	equ	0xFE2
 21708                           fsr1l	equ	0xFE1
 21709                           indf2	equ	0xFDF
 21710                           postinc2	equ	0xFDE
 21711                           postdec2	equ	0xFDD
 21712                           plusw2	equ	0xFDB
 21713                           fsr2h	equ	0xFDA
 21714                           fsr2l	equ	0xFD9
 21715                           status	equ	0xFD8
 21716                           
 21717 ;; *************** function _EncryptFRMPayload *****************
 21718 ;; Defined at:
 21719 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21720 ;; Parameters:    Size  Location     Type
 21721 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 21722 ;;		 -> STR_3(6), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 21723 ;;  bufferLength    1   51[BANK0 ] unsigned char 
 21724 ;;  dir             1   52[BANK0 ] unsigned char 
 21725 ;;  frameCounter    4   53[BANK0 ] unsigned long 
 21726 ;;  key             2   57[BANK0 ] PTR unsigned char 
 21727 ;;		 -> loRa.activationParameters(105), loRa(245), 
 21728 ;;  macBufferInd    1   59[BANK0 ] unsigned char 
 21729 ;;  bufferToBeEn    2   60[BANK0 ] PTR unsigned char 
 21730 ;;		 -> macBuffer(271), radioBuffer(271), 
 21731 ;;  multicastSta    1   62[BANK0 ] unsigned char 
 21732 ;; Auto vars:     Size  Location     Type
 21733 ;;  j               1   72[BANK0 ] unsigned char 
 21734 ;;  i               1   71[BANK0 ] unsigned char 
 21735 ;;  k               1   70[BANK0 ] unsigned char 
 21736 ;; Return value:  Size  Location     Type
 21737 ;;                  1    wreg      void 
 21738 ;; Registers used:
 21739 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21740 ;; Tracked objects:
 21741 ;;		On entry : 0/0
 21742 ;;		On exit  : 0/0
 21743 ;;		Unchanged: 0/0
 21744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21745 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21746 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21747 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21748 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21749 ;;Total ram usage:       24 bytes
 21750 ;; Hardware stack levels used:    1
 21751 ;; Hardware stack levels required when called:   10
 21752 ;; This function calls:
 21753 ;;		_AESEncodeLoRa
 21754 ;;		_AssembleEncryptionBlock
 21755 ;;		___awdiv
 21756 ;; This function is called by:
 21757 ;;		_LORAWAN_RxDone
 21758 ;;		_AssemblePacket
 21759 ;; This function uses a non-reentrant model
 21760 ;;
 21761                           
 21762                           	psect	text104
 21763  00428A                     __ptext104:
 21764                           	opt stack 0
 21765  00428A                     _EncryptFRMPayload:
 21766                           	opt stack 18
 21767                           
 21768                           ;lorawan.c: 2207: uint8_t k = 0, i = 0, j = 0;
 21769                           
 21770                           ; BSR set to: 0
 21771                           ;incstack = 0
 21772  00428A  0E00               	movlw	0
 21773  00428C  0100               	movlb	0	; () banked
 21774  00428E  6FA6               	movwf	EncryptFRMPayload@k& (0+255),b
 21775  004290  0E00               	movlw	0
 21776  004292  6FA7               	movwf	EncryptFRMPayload@i& (0+255),b
 21777  004294  0E00               	movlw	0
 21778  004296  6FA8               	movwf	EncryptFRMPayload@j& (0+255),b
 21779                           
 21780                           ; BSR set to: 0
 21781                           ;lorawan.c: 2209: k = bufferLength / 16;
 21782  004298  C093  F060         	movff	EncryptFRMPayload@bufferLength,___awdiv@dividend
 21783  00429C  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 21784  00429E  0E00               	movlw	0
 21785  0042A0  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 21786  0042A2  0E10               	movlw	16
 21787  0042A4  6F62               	movwf	___awdiv@divisor& (0+255),b
 21788  0042A6  EC2E  F039         	call	___awdiv	;wreg free
 21789  0042AA  0100               	movlb	0	; () banked
 21790  0042AC  5160               	movf	?___awdiv& (0+255),w,b
 21791  0042AE  6FA6               	movwf	EncryptFRMPayload@k& (0+255),b
 21792                           
 21793                           ; BSR set to: 0
 21794                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 21795  0042B0  0E01               	movlw	1
 21796  0042B2  6FA7               	movwf	EncryptFRMPayload@i& (0+255),b
 21797  0042B4  D06D               	goto	l2150
 21798  0042B6                     
 21799                           ; BSR set to: 0
 21800                           ;lorawan.c: 2211: {
 21801                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 21802                           
 21803                           ; BSR set to: 0
 21804  0042B6  C095  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 21805  0042BA  C096  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 21806  0042BE  C097  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 21807  0042C2  C098  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 21808  0042C6  C0A7  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 21809  0042CA  0E01               	movlw	1
 21810  0042CC  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 21811  0042CE  C09E  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 21812  0042D2  5194               	movf	EncryptFRMPayload@dir& (0+255),w,b
 21813  0042D4  EC09  F030         	call	_AssembleEncryptionBlock
 21814                           
 21815                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 21816  0042D8  0E5A               	movlw	low _aesBuffer
 21817  0042DA  0100               	movlb	0	; () banked
 21818  0042DC  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 21819  0042DE  0E01               	movlw	high _aesBuffer
 21820  0042E0  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21821  0042E2  C099  F07F         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 21822  0042E6  C09A  F080         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 21823  0042EA  EC05  F042         	call	_AESEncodeLoRa	;wreg free
 21824                           
 21825                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 21826  0042EE  0E00               	movlw	0
 21827  0042F0  0100               	movlb	0	; () banked
 21828  0042F2  6FA8               	movwf	EncryptFRMPayload@j& (0+255),b
 21829  0042F4                     l14405:
 21830                           
 21831                           ; BSR set to: 0
 21832  0042F4  0E0F               	movlw	15
 21833  0042F6  65A8               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 21834  0042F8  D001               	goto	l2152
 21835  0042FA  D049               	goto	u16420
 21836  0042FC                     l2152:
 21837                           
 21838                           ; BSR set to: 0
 21839                           ;lorawan.c: 2216: {
 21840                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 21841                           
 21842                           ; BSR set to: 0
 21843  0042FC  519B               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 21844  0042FE  0D01               	mullw	1
 21845  004300  50F3               	movf	prodl,w,c
 21846  004302  259C               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 21847  004304  6ED9               	movwf	fsr2l,c
 21848  004306  50F4               	movf	prodh,w,c
 21849  004308  219D               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 21850  00430A  6EDA               	movwf	fsr2h,c
 21851  00430C  0EF0               	movlw	240
 21852  00430E  6F9F               	movwf	??_EncryptFRMPayload& (0+255),b
 21853  004310  0EFF               	movlw	255
 21854  004312  6FA0               	movwf	(??_EncryptFRMPayload+1)& (0+255),b
 21855  004314  51A7               	movf	EncryptFRMPayload@i& (0+255),w,b
 21856  004316  6FA1               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 21857  004318  6BA2               	clrf	(??_EncryptFRMPayload+3)& (0+255),b
 21858  00431A  3BA1               	swapf	(??_EncryptFRMPayload+2)& (0+255),f,b
 21859  00431C  3BA2               	swapf	(??_EncryptFRMPayload+3)& (0+255),f,b
 21860  00431E  0EF0               	movlw	240
 21861  004320  17A2               	andwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 21862  004322  51A1               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 21863  004324  0B0F               	andlw	15
 21864  004326  13A2               	iorwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 21865  004328  0EF0               	movlw	240
 21866  00432A  17A1               	andwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 21867  00432C  51A8               	movf	EncryptFRMPayload@j& (0+255),w,b
 21868  00432E  27A1               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 21869  004330  0E00               	movlw	0
 21870  004332  23A2               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 21871  004334  519F               	movf	??_EncryptFRMPayload& (0+255),w,b
 21872  004336  27A1               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 21873  004338  51A0               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 21874  00433A  23A2               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 21875  00433C  C091  F0A3         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+4
 21876  004340  C092  F0A4         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+5
 21877  004344  51A1               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 21878  004346  27A3               	addwf	(??_EncryptFRMPayload+4)& (0+255),f,b
 21879  004348  51A2               	movf	(??_EncryptFRMPayload+3)& (0+255),w,b
 21880  00434A  23A4               	addwfc	(??_EncryptFRMPayload+5)& (0+255),f,b
 21881  00434C  C0A3  FFF6         	movff	??_EncryptFRMPayload+4,tblptrl
 21882  004350  C0A4  FFF7         	movff	??_EncryptFRMPayload+5,tblptrh
 21883  004354  0E00               	movlw	low (__mediumconst shr (0+16))
 21884  004356  6EF8               	movwf	tblptru,c
 21885  004358  0E0F               	movlw	(high __ramtop+-1)
 21886  00435A  64F7               	cpfsgt	tblptrh,c
 21887  00435C  D003               	bra	u16417
 21888  00435E  0008               	tblrd		*
 21889  004360  50F5               	movf	tablat,w,c
 21890  004362  D005               	bra	u16410
 21891  004364                     u16417:
 21892  004364  CFF6 FFE9          	movff	tblptrl,fsr0l
 21893  004368  CFF7 FFEA          	movff	tblptrh,fsr0h
 21894  00436C  50EF               	movf	indf0,w,c
 21895  00436E                     u16410:
 21896  00436E  0100               	movlb	0	; () banked
 21897  004370  6FA5               	movwf	(??_EncryptFRMPayload+6)& (0+255),b
 21898  004372  51A8               	movf	EncryptFRMPayload@j& (0+255),w,b
 21899  004374  0D01               	mullw	1
 21900  004376  0E5A               	movlw	low _aesBuffer
 21901  004378  24F3               	addwf	prodl,w,c
 21902  00437A  6EE9               	movwf	fsr0l,c
 21903  00437C  0E01               	movlw	high _aesBuffer
 21904  00437E  20F4               	addwfc	prodh,w,c
 21905  004380  6EEA               	movwf	fsr0h,c
 21906  004382  50EF               	movf	indf0,w,c
 21907  004384  19A5               	xorwf	(??_EncryptFRMPayload+6)& (0+255),w,b
 21908  004386  6EDF               	movwf	indf2,c
 21909                           
 21910                           ; BSR set to: 0
 21911  004388  2B9B               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 21912                           
 21913                           ; BSR set to: 0
 21914  00438A  2BA8               	incf	EncryptFRMPayload@j& (0+255),f,b
 21915  00438C  D7B3               	goto	l14405
 21916  00438E                     u16420:
 21917                           
 21918                           ; BSR set to: 0
 21919                           
 21920                           ; BSR set to: 0
 21921  00438E  2BA7               	incf	EncryptFRMPayload@i& (0+255),f,b
 21922  004390                     l2150:
 21923                           
 21924                           ; BSR set to: 0
 21925                           
 21926                           ; BSR set to: 0
 21927  004390  51A7               	movf	EncryptFRMPayload@i& (0+255),w,b
 21928  004392  5DA6               	subwf	EncryptFRMPayload@k& (0+255),w,b
 21929  004394  B0D8               	btfsc	status,0,c
 21930  004396  D78F               	goto	l2151
 21931                           
 21932                           ; BSR set to: 0
 21933                           ;lorawan.c: 2218: }
 21934                           ;lorawan.c: 2219: }
 21935                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 21936                           
 21937                           ; BSR set to: 0
 21938  004398  C093  F09F         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 21939  00439C  0E0F               	movlw	15
 21940  00439E  179F               	andwf	??_EncryptFRMPayload& (0+255),f,b
 21941  0043A0  B4D8               	btfsc	status,2,c
 21942  0043A2  0012               	return	
 21943                           
 21944                           ; BSR set to: 0
 21945                           ;lorawan.c: 2222: {
 21946                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 21947  0043A4  C095  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 21948  0043A8  C096  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 21949  0043AC  C097  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 21950  0043B0  C098  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 21951  0043B4  C0A7  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 21952  0043B8  0E01               	movlw	1
 21953  0043BA  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 21954  0043BC  C09E  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 21955  0043C0  5194               	movf	EncryptFRMPayload@dir& (0+255),w,b
 21956  0043C2  EC09  F030         	call	_AssembleEncryptionBlock
 21957                           
 21958                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 21959  0043C6  0E5A               	movlw	low _aesBuffer
 21960  0043C8  0100               	movlb	0	; () banked
 21961  0043CA  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 21962  0043CC  0E01               	movlw	high _aesBuffer
 21963  0043CE  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21964  0043D0  C099  F07F         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 21965  0043D4  C09A  F080         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 21966  0043D8  EC05  F042         	call	_AESEncodeLoRa	;wreg free
 21967                           
 21968                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 21969  0043DC  0E00               	movlw	0
 21970  0043DE  0100               	movlb	0	; () banked
 21971  0043E0  6FA8               	movwf	EncryptFRMPayload@j& (0+255),b
 21972  0043E2  D036               	goto	l2156
 21973  0043E4                     
 21974                           ; BSR set to: 0
 21975                           ;lorawan.c: 2227: {
 21976                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 21977                           
 21978                           ; BSR set to: 0
 21979  0043E4  519B               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 21980  0043E6  0D01               	mullw	1
 21981  0043E8  50F3               	movf	prodl,w,c
 21982  0043EA  259C               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 21983  0043EC  6ED9               	movwf	fsr2l,c
 21984  0043EE  50F4               	movf	prodh,w,c
 21985  0043F0  219D               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 21986  0043F2  6EDA               	movwf	fsr2h,c
 21987  0043F4  51A6               	movf	EncryptFRMPayload@k& (0+255),w,b
 21988  0043F6  0D10               	mullw	16
 21989  0043F8  51A8               	movf	EncryptFRMPayload@j& (0+255),w,b
 21990  0043FA  26F3               	addwf	prodl,f,c
 21991  0043FC  0E00               	movlw	0
 21992  0043FE  22F4               	addwfc	prodh,f,c
 21993  004400  C091  F09F         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 21994  004404  C092  F0A0         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 21995  004408  50F3               	movf	prodl,w,c
 21996  00440A  279F               	addwf	??_EncryptFRMPayload& (0+255),f,b
 21997  00440C  50F4               	movf	prodh,w,c
 21998  00440E  23A0               	addwfc	(??_EncryptFRMPayload+1)& (0+255),f,b
 21999  004410  C09F  FFF6         	movff	??_EncryptFRMPayload,tblptrl
 22000  004414  C0A0  FFF7         	movff	??_EncryptFRMPayload+1,tblptrh
 22001  004418  0E00               	movlw	low (__mediumconst shr (0+16))
 22002  00441A  6EF8               	movwf	tblptru,c
 22003  00441C  0E0F               	movlw	(high __ramtop+-1)
 22004  00441E  64F7               	cpfsgt	tblptrh,c
 22005  004420  D003               	bra	u16457
 22006  004422  0008               	tblrd		*
 22007  004424  50F5               	movf	tablat,w,c
 22008  004426  D005               	bra	u16450
 22009  004428                     u16457:
 22010  004428  CFF6 FFE9          	movff	tblptrl,fsr0l
 22011  00442C  CFF7 FFEA          	movff	tblptrh,fsr0h
 22012  004430  50EF               	movf	indf0,w,c
 22013  004432                     u16450:
 22014  004432  0100               	movlb	0	; () banked
 22015  004434  6FA1               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 22016  004436  51A8               	movf	EncryptFRMPayload@j& (0+255),w,b
 22017  004438  0D01               	mullw	1
 22018  00443A  0E5A               	movlw	low _aesBuffer
 22019  00443C  24F3               	addwf	prodl,w,c
 22020  00443E  6EE9               	movwf	fsr0l,c
 22021  004440  0E01               	movlw	high _aesBuffer
 22022  004442  20F4               	addwfc	prodh,w,c
 22023  004444  6EEA               	movwf	fsr0h,c
 22024  004446  50EF               	movf	indf0,w,c
 22025  004448  19A1               	xorwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 22026  00444A  6EDF               	movwf	indf2,c
 22027                           
 22028                           ; BSR set to: 0
 22029  00444C  2B9B               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 22030                           
 22031                           ; BSR set to: 0
 22032  00444E  2BA8               	incf	EncryptFRMPayload@j& (0+255),f,b
 22033  004450                     l2156:
 22034                           
 22035                           ; BSR set to: 0
 22036                           
 22037                           ; BSR set to: 0
 22038  004450  C093  F09F         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 22039  004454  0E0F               	movlw	15
 22040  004456  179F               	andwf	??_EncryptFRMPayload& (0+255),f,b
 22041  004458  519F               	movf	??_EncryptFRMPayload& (0+255),w,b
 22042  00445A  5DA8               	subwf	EncryptFRMPayload@j& (0+255),w,b
 22043  00445C  B0D8               	btfsc	status,0,c
 22044  00445E  0012               	return	
 22045  004460  D7C1               	goto	l2157
 22046  004462                     __end_of_EncryptFRMPayload:
 22047                           	opt stack 0
 22048                           tosu	equ	0xFFF
 22049                           tosh	equ	0xFFE
 22050                           tosl	equ	0xFFD
 22051                           pclath	equ	0xFFA
 22052                           tblptru	equ	0xFF8
 22053                           tblptrh	equ	0xFF7
 22054                           tblptrl	equ	0xFF6
 22055                           tablat	equ	0xFF5
 22056                           prodh	equ	0xFF4
 22057                           prodl	equ	0xFF3
 22058                           intcon	equ	0xFF2
 22059                           intcon2	equ	0xFF1
 22060                           intcon3	equ	0xFF0
 22061                           indf0	equ	0xFEF
 22062                           postinc0	equ	0xFEE
 22063                           fsr0h	equ	0xFEA
 22064                           fsr0l	equ	0xFE9
 22065                           wreg	equ	0xFE8
 22066                           postinc1	equ	0xFE6
 22067                           postdec1	equ	0xFE5
 22068                           plusw1	equ	0xFE3
 22069                           fsr1h	equ	0xFE2
 22070                           fsr1l	equ	0xFE1
 22071                           indf2	equ	0xFDF
 22072                           postinc2	equ	0xFDE
 22073                           postdec2	equ	0xFDD
 22074                           plusw2	equ	0xFDB
 22075                           fsr2h	equ	0xFDA
 22076                           fsr2l	equ	0xFD9
 22077                           status	equ	0xFD8
 22078                           
 22079 ;; *************** function ___awdiv *****************
 22080 ;; Defined at:
 22081 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 22082 ;; Parameters:    Size  Location     Type
 22083 ;;  dividend        2    0[BANK0 ] int 
 22084 ;;  divisor         2    2[BANK0 ] int 
 22085 ;; Auto vars:     Size  Location     Type
 22086 ;;  quotient        2    6[BANK0 ] int 
 22087 ;;  sign            1    5[BANK0 ] unsigned char 
 22088 ;;  counter         1    4[BANK0 ] unsigned char 
 22089 ;; Return value:  Size  Location     Type
 22090 ;;                  2    0[BANK0 ] int 
 22091 ;; Registers used:
 22092 ;;		wreg, status,2, status,0
 22093 ;; Tracked objects:
 22094 ;;		On entry : 0/0
 22095 ;;		On exit  : 0/0
 22096 ;;		Unchanged: 0/0
 22097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22098 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22099 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22101 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22102 ;;Total ram usage:        8 bytes
 22103 ;; Hardware stack levels used:    1
 22104 ;; Hardware stack levels required when called:    7
 22105 ;; This function calls:
 22106 ;;		Nothing
 22107 ;; This function is called by:
 22108 ;;		_EncryptFRMPayload
 22109 ;; This function uses a non-reentrant model
 22110 ;;
 22111                           
 22112                           	psect	text105
 22113  00725C                     __ptext105:
 22114                           	opt stack 0
 22115  00725C                     ___awdiv:
 22116                           	opt stack 20
 22117                           
 22118                           ; BSR set to: 0
 22119                           ;incstack = 0
 22120  00725C  0E00               	movlw	0
 22121  00725E  0100               	movlb	0	; () banked
 22122  007260  6F65               	movwf	___awdiv@sign& (0+255),b
 22123                           
 22124                           ; BSR set to: 0
 22125  007262  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 22126  007264  D006               	goto	l2893
 22127                           
 22128                           ; BSR set to: 0
 22129  007266  6D62               	negf	___awdiv@divisor& (0+255),b
 22130  007268  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 22131  00726A  B0D8               	btfsc	status,0,c
 22132  00726C  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 22133                           
 22134                           ; BSR set to: 0
 22135  00726E  0E01               	movlw	1
 22136  007270  6F65               	movwf	___awdiv@sign& (0+255),b
 22137  007272                     l2893:
 22138                           
 22139                           ; BSR set to: 0
 22140                           
 22141                           ; BSR set to: 0
 22142  007272  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 22143  007274  D006               	goto	l2894
 22144                           
 22145                           ; BSR set to: 0
 22146  007276  6D60               	negf	___awdiv@dividend& (0+255),b
 22147  007278  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 22148  00727A  B0D8               	btfsc	status,0,c
 22149  00727C  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 22150                           
 22151                           ; BSR set to: 0
 22152  00727E  0E01               	movlw	1
 22153  007280  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 22154  007282                     l2894:
 22155                           
 22156                           ; BSR set to: 0
 22157                           
 22158                           ; BSR set to: 0
 22159  007282  0E00               	movlw	0
 22160  007284  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 22161  007286  0E00               	movlw	0
 22162  007288  6F66               	movwf	___awdiv@quotient& (0+255),b
 22163                           
 22164                           ; BSR set to: 0
 22165  00728A  5162               	movf	___awdiv@divisor& (0+255),w,b
 22166  00728C  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 22167  00728E  B4D8               	btfsc	status,2,c
 22168  007290  D01C               	goto	l2901
 22169                           
 22170                           ; BSR set to: 0
 22171  007292  0E01               	movlw	1
 22172  007294  6F64               	movwf	___awdiv@counter& (0+255),b
 22173  007296  D004               	goto	l2896
 22174  007298                     
 22175                           ; BSR set to: 0
 22176                           
 22177                           ; BSR set to: 0
 22178  007298  90D8               	bcf	status,0,c
 22179  00729A  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 22180  00729C  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 22181  00729E  2B64               	incf	___awdiv@counter& (0+255),f,b
 22182  0072A0                     l2896:
 22183                           
 22184                           ; BSR set to: 0
 22185                           
 22186                           ; BSR set to: 0
 22187  0072A0  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 22188  0072A2  D7FA               	goto	l2897
 22189  0072A4                     u15570:
 22190                           
 22191                           ; BSR set to: 0
 22192                           
 22193                           ; BSR set to: 0
 22194                           
 22195                           ; BSR set to: 0
 22196  0072A4  90D8               	bcf	status,0,c
 22197  0072A6  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 22198  0072A8  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 22199                           
 22200                           ; BSR set to: 0
 22201  0072AA  5162               	movf	___awdiv@divisor& (0+255),w,b
 22202  0072AC  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 22203  0072AE  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 22204  0072B0  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 22205  0072B2  A0D8               	btfss	status,0,c
 22206  0072B4  D005               	goto	l2900
 22207                           
 22208                           ; BSR set to: 0
 22209  0072B6  5162               	movf	___awdiv@divisor& (0+255),w,b
 22210  0072B8  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 22211  0072BA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 22212  0072BC  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 22213                           
 22214                           ; BSR set to: 0
 22215  0072BE  8166               	bsf	___awdiv@quotient& (0+255),0,b
 22216  0072C0                     l2900:
 22217                           
 22218                           ; BSR set to: 0
 22219                           
 22220                           ; BSR set to: 0
 22221  0072C0  90D8               	bcf	status,0,c
 22222  0072C2  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 22223  0072C4  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 22224                           
 22225                           ; BSR set to: 0
 22226  0072C6  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 22227  0072C8  D7ED               	goto	u15570
 22228  0072CA                     l2901:
 22229                           
 22230                           ; BSR set to: 0
 22231                           
 22232                           ; BSR set to: 0
 22233                           
 22234                           ; BSR set to: 0
 22235  0072CA  5165               	movf	___awdiv@sign& (0+255),w,b
 22236  0072CC  B4D8               	btfsc	status,2,c
 22237  0072CE  D004               	goto	l2902
 22238                           
 22239                           ; BSR set to: 0
 22240  0072D0  6D66               	negf	___awdiv@quotient& (0+255),b
 22241  0072D2  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 22242  0072D4  B0D8               	btfsc	status,0,c
 22243  0072D6  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 22244  0072D8                     l2902:
 22245                           
 22246                           ; BSR set to: 0
 22247                           
 22248                           ; BSR set to: 0
 22249  0072D8  C066  F060         	movff	___awdiv@quotient,?___awdiv
 22250  0072DC  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 22251  0072E0  0012               	return	
 22252  0072E2                     __end_of___awdiv:
 22253                           	opt stack 0
 22254                           tosu	equ	0xFFF
 22255                           tosh	equ	0xFFE
 22256                           tosl	equ	0xFFD
 22257                           pclath	equ	0xFFA
 22258                           tblptru	equ	0xFF8
 22259                           tblptrh	equ	0xFF7
 22260                           tblptrl	equ	0xFF6
 22261                           tablat	equ	0xFF5
 22262                           prodh	equ	0xFF4
 22263                           prodl	equ	0xFF3
 22264                           intcon	equ	0xFF2
 22265                           intcon2	equ	0xFF1
 22266                           intcon3	equ	0xFF0
 22267                           indf0	equ	0xFEF
 22268                           postinc0	equ	0xFEE
 22269                           fsr0h	equ	0xFEA
 22270                           fsr0l	equ	0xFE9
 22271                           wreg	equ	0xFE8
 22272                           postinc1	equ	0xFE6
 22273                           postdec1	equ	0xFE5
 22274                           plusw1	equ	0xFE3
 22275                           fsr1h	equ	0xFE2
 22276                           fsr1l	equ	0xFE1
 22277                           indf2	equ	0xFDF
 22278                           postinc2	equ	0xFDE
 22279                           postdec2	equ	0xFDD
 22280                           plusw2	equ	0xFDB
 22281                           fsr2h	equ	0xFDA
 22282                           fsr2l	equ	0xFD9
 22283                           status	equ	0xFD8
 22284                           
 22285 ;; *************** function _AssembleEncryptionBlock *****************
 22286 ;; Defined at:
 22287 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22288 ;; Parameters:    Size  Location     Type
 22289 ;;  dir             1    wreg     unsigned char 
 22290 ;;  frameCounter    4   11[BANK0 ] unsigned long 
 22291 ;;  blockId         1   15[BANK0 ] unsigned char 
 22292 ;;  firstByte       1   16[BANK0 ] unsigned char 
 22293 ;;  multicastSta    1   17[BANK0 ] unsigned char 
 22294 ;; Auto vars:     Size  Location     Type
 22295 ;;  dir             1   18[BANK0 ] unsigned char 
 22296 ;;  bufferIndex     1   19[BANK0 ] unsigned char 
 22297 ;; Return value:  Size  Location     Type
 22298 ;;                  1    wreg      void 
 22299 ;; Registers used:
 22300 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22301 ;; Tracked objects:
 22302 ;;		On entry : 0/0
 22303 ;;		On exit  : 0/0
 22304 ;;		Unchanged: 0/0
 22305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22306 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22307 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22309 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22310 ;;Total ram usage:        9 bytes
 22311 ;; Hardware stack levels used:    1
 22312 ;; Hardware stack levels required when called:    8
 22313 ;; This function calls:
 22314 ;;		_memcpy
 22315 ;;		_memset
 22316 ;; This function is called by:
 22317 ;;		_LORAWAN_RxDone
 22318 ;;		_AssemblePacket
 22319 ;;		_EncryptFRMPayload
 22320 ;; This function uses a non-reentrant model
 22321 ;;
 22322                           
 22323                           	psect	text106
 22324  006012                     __ptext106:
 22325                           	opt stack 0
 22326  006012                     _AssembleEncryptionBlock:
 22327                           	opt stack 19
 22328                           
 22329                           ; BSR set to: 0
 22330                           ;incstack = 0
 22331                           ;AssembleEncryptionBlock@dir stored from wreg
 22332  006012  0100               	movlb	0	; () banked
 22333  006014  6F72               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 22334                           
 22335                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 22336  006016  0E00               	movlw	0
 22337  006018  0100               	movlb	0	; () banked
 22338  00601A  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 22339                           
 22340                           ; BSR set to: 0
 22341                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 22342  00601C  0E5A               	movlw	low _aesBuffer
 22343  00601E  6F60               	movwf	memset@p1& (0+255),b
 22344  006020  0E01               	movlw	high _aesBuffer
 22345  006022  6F61               	movwf	(memset@p1+1)& (0+255),b
 22346  006024  0E00               	movlw	0
 22347  006026  6F63               	movwf	(memset@c+1)& (0+255),b
 22348  006028  0E00               	movlw	0
 22349  00602A  6F62               	movwf	memset@c& (0+255),b
 22350  00602C  0E00               	movlw	0
 22351  00602E  6F65               	movwf	(memset@n+1)& (0+255),b
 22352  006030  0E10               	movlw	16
 22353  006032  6F64               	movwf	memset@n& (0+255),b
 22354  006034  ECCB  F042         	call	_memset	;wreg free
 22355                           
 22356                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 22357  006038  0100               	movlb	0	; () banked
 22358  00603A  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 22359  00603C  0D01               	mullw	1
 22360  00603E  0E5A               	movlw	low _aesBuffer
 22361  006040  24F3               	addwf	prodl,w,c
 22362  006042  6ED9               	movwf	fsr2l,c
 22363  006044  0E01               	movlw	high _aesBuffer
 22364  006046  20F4               	addwfc	prodh,w,c
 22365  006048  6EDA               	movwf	fsr2h,c
 22366  00604A  C070  FFDF         	movff	AssembleEncryptionBlock@firstByte,indf2
 22367                           
 22368                           ; BSR set to: 0
 22369                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 22370  00604E  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 22371  006050  0F05               	addlw	5
 22372  006052  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 22373                           
 22374                           ; BSR set to: 0
 22375                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 22376  006054  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 22377  006056  0D01               	mullw	1
 22378  006058  0E5A               	movlw	low _aesBuffer
 22379  00605A  24F3               	addwf	prodl,w,c
 22380  00605C  6ED9               	movwf	fsr2l,c
 22381  00605E  0E01               	movlw	high _aesBuffer
 22382  006060  20F4               	addwfc	prodh,w,c
 22383  006062  6EDA               	movwf	fsr2h,c
 22384  006064  C072  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 22385                           
 22386                           ; BSR set to: 0
 22387  006068  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 22388                           
 22389                           ; BSR set to: 0
 22390                           ;lorawan.c: 2168: if (0 == multicastStatus)
 22391  00606A  5171               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 22392  00606C  A4D8               	btfss	status,2,c
 22393  00606E  D013               	goto	l2139
 22394                           
 22395                           ; BSR set to: 0
 22396                           ;lorawan.c: 2169: {
 22397                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 22398  006070  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 22399  006072  0D01               	mullw	1
 22400  006074  0E5A               	movlw	low _aesBuffer
 22401  006076  24F3               	addwf	prodl,w,c
 22402  006078  6F60               	movwf	memcpy@d1& (0+255),b
 22403  00607A  0E01               	movlw	high _aesBuffer
 22404  00607C  20F4               	addwfc	prodh,w,c
 22405  00607E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 22406  006080  0E1E               	movlw	low (_loRa+30)
 22407  006082  6F62               	movwf	memcpy@s1& (0+255),b
 22408  006084  0E02               	movlw	high (_loRa+30)
 22409  006086  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 22410  006088  0E00               	movlw	0
 22411  00608A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 22412  00608C  0E04               	movlw	4
 22413  00608E  6F64               	movwf	memcpy@n& (0+255),b
 22414  006090  EC5C  F03D         	call	_memcpy	;wreg free
 22415  006094  D012               	goto	l13895
 22416  006096                     l2139:
 22417                           
 22418                           ; BSR set to: 0
 22419                           ;lorawan.c: 2173: else
 22420                           ;lorawan.c: 2174: {
 22421                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 22422                           
 22423                           ; BSR set to: 0
 22424  006096  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 22425  006098  0D01               	mullw	1
 22426  00609A  0E5A               	movlw	low _aesBuffer
 22427  00609C  24F3               	addwf	prodl,w,c
 22428  00609E  6F60               	movwf	memcpy@d1& (0+255),b
 22429  0060A0  0E01               	movlw	high _aesBuffer
 22430  0060A2  20F4               	addwfc	prodh,w,c
 22431  0060A4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 22432  0060A6  0E62               	movlw	low (_loRa+98)
 22433  0060A8  6F62               	movwf	memcpy@s1& (0+255),b
 22434  0060AA  0E02               	movlw	high (_loRa+98)
 22435  0060AC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 22436  0060AE  0E00               	movlw	0
 22437  0060B0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 22438  0060B2  0E04               	movlw	4
 22439  0060B4  6F64               	movwf	memcpy@n& (0+255),b
 22440  0060B6  EC5C  F03D         	call	_memcpy	;wreg free
 22441  0060BA                     l13895:
 22442                           
 22443                           ;lorawan.c: 2176: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.mcastDev
      +                          iceAddress);
 22444  0060BA  0100               	movlb	0	; () banked
 22445  0060BC  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 22446  0060BE  0F04               	addlw	4
 22447  0060C0  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 22448                           
 22449                           ; BSR set to: 0
 22450                           ;lorawan.c: 2177: }
 22451                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 22452                           
 22453                           ; BSR set to: 0
 22454  0060C2  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 22455  0060C4  0D01               	mullw	1
 22456  0060C6  0E5A               	movlw	low _aesBuffer
 22457  0060C8  24F3               	addwf	prodl,w,c
 22458  0060CA  6F60               	movwf	memcpy@d1& (0+255),b
 22459  0060CC  0E01               	movlw	high _aesBuffer
 22460  0060CE  20F4               	addwfc	prodh,w,c
 22461  0060D0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 22462  0060D2  0E6B               	movlw	low AssembleEncryptionBlock@frameCounter
 22463  0060D4  6F62               	movwf	memcpy@s1& (0+255),b
 22464  0060D6  0E00               	movlw	high AssembleEncryptionBlock@frameCounter
 22465  0060D8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 22466  0060DA  0E00               	movlw	0
 22467  0060DC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 22468  0060DE  0E04               	movlw	4
 22469  0060E0  6F64               	movwf	memcpy@n& (0+255),b
 22470  0060E2  EC5C  F03D         	call	_memcpy	;wreg free
 22471                           
 22472                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 22473  0060E6  0100               	movlb	0	; () banked
 22474  0060E8  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 22475  0060EA  0F04               	addlw	4
 22476  0060EC  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 22477                           
 22478                           ; BSR set to: 0
 22479                           ;lorawan.c: 2182: bufferIndex ++;
 22480  0060EE  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 22481                           
 22482                           ; BSR set to: 0
 22483                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 22484  0060F0  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 22485  0060F2  0D01               	mullw	1
 22486  0060F4  0E5A               	movlw	low _aesBuffer
 22487  0060F6  24F3               	addwf	prodl,w,c
 22488  0060F8  6ED9               	movwf	fsr2l,c
 22489  0060FA  0E01               	movlw	high _aesBuffer
 22490  0060FC  20F4               	addwfc	prodh,w,c
 22491  0060FE  6EDA               	movwf	fsr2h,c
 22492  006100  C06F  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 22493                           
 22494                           ; BSR set to: 0
 22495  006104  0012               	return		;funcret
 22496  006106                     __end_of_AssembleEncryptionBlock:
 22497                           	opt stack 0
 22498                           tosu	equ	0xFFF
 22499                           tosh	equ	0xFFE
 22500                           tosl	equ	0xFFD
 22501                           pclath	equ	0xFFA
 22502                           tblptru	equ	0xFF8
 22503                           tblptrh	equ	0xFF7
 22504                           tblptrl	equ	0xFF6
 22505                           tablat	equ	0xFF5
 22506                           prodh	equ	0xFF4
 22507                           prodl	equ	0xFF3
 22508                           intcon	equ	0xFF2
 22509                           intcon2	equ	0xFF1
 22510                           intcon3	equ	0xFF0
 22511                           indf0	equ	0xFEF
 22512                           postinc0	equ	0xFEE
 22513                           fsr0h	equ	0xFEA
 22514                           fsr0l	equ	0xFE9
 22515                           wreg	equ	0xFE8
 22516                           postinc1	equ	0xFE6
 22517                           postdec1	equ	0xFE5
 22518                           plusw1	equ	0xFE3
 22519                           fsr1h	equ	0xFE2
 22520                           fsr1l	equ	0xFE1
 22521                           indf2	equ	0xFDF
 22522                           postinc2	equ	0xFDE
 22523                           postdec2	equ	0xFDD
 22524                           plusw2	equ	0xFDB
 22525                           fsr2h	equ	0xFDA
 22526                           fsr2l	equ	0xFD9
 22527                           status	equ	0xFD8
 22528                           
 22529 ;; *************** function _CountfOptsLength *****************
 22530 ;; Defined at:
 22531 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22532 ;; Parameters:    Size  Location     Type
 22533 ;;		None
 22534 ;; Auto vars:     Size  Location     Type
 22535 ;;  i               1    7[BANK0 ] unsigned char 
 22536 ;;  macCommandLe    1    6[BANK0 ] unsigned char 
 22537 ;; Return value:  Size  Location     Type
 22538 ;;                  1    wreg      unsigned char 
 22539 ;; Registers used:
 22540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 22541 ;; Tracked objects:
 22542 ;;		On entry : 0/0
 22543 ;;		On exit  : 0/0
 22544 ;;		Unchanged: 0/0
 22545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22547 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22548 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22549 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22550 ;;Total ram usage:        8 bytes
 22551 ;; Hardware stack levels used:    1
 22552 ;; Hardware stack levels required when called:    7
 22553 ;; This function calls:
 22554 ;;		Nothing
 22555 ;; This function is called by:
 22556 ;;		_LORAWAN_GetMaxPayloadSize
 22557 ;;		_AssemblePacket
 22558 ;; This function uses a non-reentrant model
 22559 ;;
 22560                           
 22561                           	psect	text107
 22562  0068EA                     __ptext107:
 22563                           	opt stack 0
 22564  0068EA                     _CountfOptsLength:
 22565                           	opt stack 21
 22566                           
 22567                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 22568                           
 22569                           ; BSR set to: 0
 22570                           ;incstack = 0
 22571  0068EA  0E00               	movlw	0
 22572  0068EC  0100               	movlb	0	; () banked
 22573  0068EE  6F66               	movwf	CountfOptsLength@macCommandLength& (0+255),b
 22574                           
 22575                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 22576  0068F0  0E00               	movlw	0
 22577  0068F2  6F67               	movwf	CountfOptsLength@i& (0+255),b
 22578  0068F4  D057               	goto	l2130
 22579  0068F6                     
 22580                           ; BSR set to: 0
 22581                           ;lorawan.c: 2139: {
 22582                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 22583                           
 22584                           ; BSR set to: 0
 22585  0068F6  5167               	movf	CountfOptsLength@i& (0+255),w,b
 22586  0068F8  0D02               	mullw	2
 22587  0068FA  0EA8               	movlw	low (_loRa+168)
 22588  0068FC  24F3               	addwf	prodl,w,c
 22589  0068FE  6ED9               	movwf	fsr2l,c
 22590  006900  0E02               	movlw	high (_loRa+168)
 22591  006902  20F4               	addwfc	prodh,w,c
 22592  006904  6EDA               	movwf	fsr2h,c
 22593  006906  28DE               	incf	postinc2,w,c
 22594  006908  B4D8               	btfsc	status,2,c
 22595  00690A  D04B               	goto	l2134
 22596                           
 22597                           ; BSR set to: 0
 22598                           ;lorawan.c: 2141: {
 22599                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 22600  00690C  0EFE               	movlw	254
 22601  00690E  6F60               	movwf	??_CountfOptsLength& (0+255),b
 22602  006910  0EFF               	movlw	255
 22603  006912  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 22604  006914  5167               	movf	CountfOptsLength@i& (0+255),w,b
 22605  006916  0D02               	mullw	2
 22606  006918  0EA8               	movlw	low (_loRa+168)
 22607  00691A  24F3               	addwf	prodl,w,c
 22608  00691C  6ED9               	movwf	fsr2l,c
 22609  00691E  0E02               	movlw	high (_loRa+168)
 22610  006920  20F4               	addwfc	prodh,w,c
 22611  006922  6EDA               	movwf	fsr2h,c
 22612  006924  50DF               	movf	indf2,w,c
 22613  006926  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 22614  006928  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 22615  00692A  5160               	movf	??_CountfOptsLength& (0+255),w,b
 22616  00692C  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 22617  00692E  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 22618  006930  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 22619  006932  0E69               	movlw	low _macEndDevCmdReplyLen
 22620  006934  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 22621  006936  6EF6               	movwf	tblptrl,c
 22622  006938  0EFF               	movlw	high _macEndDevCmdReplyLen
 22623  00693A  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 22624  00693C  6EF7               	movwf	tblptrh,c
 22625  00693E                     	if	1	;There are 3 active tblptr bytes
 22626  00693E  6AF8               	clrf	tblptru,c
 22627  006940  0E00               	movlw	low (__mediumconst shr (0+16))
 22628  006942  22F8               	addwfc	tblptru,f,c
 22629  006944                     	endif
 22630  006944  0008               	tblrd		*
 22631  006946  50F5               	movf	tablat,w,c
 22632  006948  C066  F064         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 22633  00694C  6B65               	clrf	(??_CountfOptsLength+5)& (0+255),b
 22634  00694E  2764               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 22635  006950  0E00               	movlw	0
 22636  006952  2365               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 22637  006954  BF65               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 22638  006956  D006               	goto	u16480
 22639  006958  5165               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 22640  00695A  E12A               	bnz	l14447
 22641  00695C  0E10               	movlw	16
 22642  00695E  5D64               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 22643  006960  B0D8               	btfsc	status,0,c
 22644  006962  D026               	goto	u16490
 22645  006964                     u16480:
 22646                           
 22647                           ; BSR set to: 0
 22648                           ;lorawan.c: 2143: {
 22649                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 22650  006964  0EFE               	movlw	254
 22651  006966  6F60               	movwf	??_CountfOptsLength& (0+255),b
 22652  006968  0EFF               	movlw	255
 22653  00696A  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 22654  00696C  5167               	movf	CountfOptsLength@i& (0+255),w,b
 22655  00696E  0D02               	mullw	2
 22656  006970  0EA8               	movlw	low (_loRa+168)
 22657  006972  24F3               	addwf	prodl,w,c
 22658  006974  6ED9               	movwf	fsr2l,c
 22659  006976  0E02               	movlw	high (_loRa+168)
 22660  006978  20F4               	addwfc	prodh,w,c
 22661  00697A  6EDA               	movwf	fsr2h,c
 22662  00697C  50DF               	movf	indf2,w,c
 22663  00697E  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 22664  006980  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 22665  006982  5160               	movf	??_CountfOptsLength& (0+255),w,b
 22666  006984  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 22667  006986  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 22668  006988  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 22669  00698A  0E69               	movlw	low _macEndDevCmdReplyLen
 22670  00698C  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 22671  00698E  6EF6               	movwf	tblptrl,c
 22672  006990  0EFF               	movlw	high _macEndDevCmdReplyLen
 22673  006992  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 22674  006994  6EF7               	movwf	tblptrh,c
 22675  006996                     	if	1	;There are 3 active tblptr bytes
 22676  006996  6AF8               	clrf	tblptru,c
 22677  006998  0E00               	movlw	low (__mediumconst shr (0+16))
 22678  00699A  22F8               	addwfc	tblptru,f,c
 22679  00699C                     	endif
 22680  00699C  0008               	tblrd		*
 22681  00699E  50F5               	movf	tablat,w,c
 22682  0069A0  2766               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 22683  0069A2                     l2134:
 22684                           
 22685                           ; BSR set to: 0
 22686                           
 22687                           ; BSR set to: 0
 22688                           
 22689                           ; BSR set to: 0
 22690  0069A2  2B67               	incf	CountfOptsLength@i& (0+255),f,b
 22691  0069A4                     l2130:
 22692                           
 22693                           ; BSR set to: 0
 22694                           
 22695                           ; BSR set to: 0
 22696  0069A4  0102               	movlb	2	; () banked
 22697  0069A6  51A7               	movf	(_loRa+167)& (0+255),w,b
 22698  0069A8  0100               	movlb	0	; () banked
 22699  0069AA  5D67               	subwf	CountfOptsLength@i& (0+255),w,b
 22700  0069AC  A0D8               	btfss	status,0,c
 22701  0069AE  D7A3               	goto	l2131
 22702  0069B0                     u16490:
 22703  0069B0                     l14447:
 22704                           
 22705                           ; BSR set to: 0
 22706                           ;lorawan.c: 2149: }
 22707                           ;lorawan.c: 2150: }
 22708                           ;lorawan.c: 2151: }
 22709                           ;lorawan.c: 2153: return macCommandLength;
 22710  0069B0  5166               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 22711  0069B2  0012               	return	
 22712  0069B4                     __end_of_CountfOptsLength:
 22713                           	opt stack 0
 22714                           tosu	equ	0xFFF
 22715                           tosh	equ	0xFFE
 22716                           tosl	equ	0xFFD
 22717                           pclath	equ	0xFFA
 22718                           tblptru	equ	0xFF8
 22719                           tblptrh	equ	0xFF7
 22720                           tblptrl	equ	0xFF6
 22721                           tablat	equ	0xFF5
 22722                           prodh	equ	0xFF4
 22723                           prodl	equ	0xFF3
 22724                           intcon	equ	0xFF2
 22725                           intcon2	equ	0xFF1
 22726                           intcon3	equ	0xFF0
 22727                           indf0	equ	0xFEF
 22728                           postinc0	equ	0xFEE
 22729                           fsr0h	equ	0xFEA
 22730                           fsr0l	equ	0xFE9
 22731                           wreg	equ	0xFE8
 22732                           postinc1	equ	0xFE6
 22733                           postdec1	equ	0xFE5
 22734                           plusw1	equ	0xFE3
 22735                           fsr1h	equ	0xFE2
 22736                           fsr1l	equ	0xFE1
 22737                           indf2	equ	0xFDF
 22738                           postinc2	equ	0xFDE
 22739                           postdec2	equ	0xFDD
 22740                           plusw2	equ	0xFDB
 22741                           fsr2h	equ	0xFDA
 22742                           fsr2l	equ	0xFD9
 22743                           status	equ	0xFD8
 22744                           
 22745 ;; *************** function _ExtractMic *****************
 22746 ;; Defined at:
 22747 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22748 ;; Parameters:    Size  Location     Type
 22749 ;;  buffer          2   11[BANK0 ] PTR unsigned char 
 22750 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22751 ;;  bufferLength    1   13[BANK0 ] unsigned char 
 22752 ;; Auto vars:     Size  Location     Type
 22753 ;;  mic             4   19[BANK0 ] unsigned long 
 22754 ;; Return value:  Size  Location     Type
 22755 ;;                  4   11[BANK0 ] unsigned long 
 22756 ;; Registers used:
 22757 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22758 ;; Tracked objects:
 22759 ;;		On entry : 0/0
 22760 ;;		On exit  : 0/0
 22761 ;;		Unchanged: 0/0
 22762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22763 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22764 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22765 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22766 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22767 ;;Total ram usage:       12 bytes
 22768 ;; Hardware stack levels used:    1
 22769 ;; Hardware stack levels required when called:    8
 22770 ;; This function calls:
 22771 ;;		_memcpy
 22772 ;; This function is called by:
 22773 ;;		_LORAWAN_RxDone
 22774 ;; This function uses a non-reentrant model
 22775 ;;
 22776                           
 22777                           	psect	text108
 22778  007C8A                     __ptext108:
 22779                           	opt stack 0
 22780  007C8A                     _ExtractMic:
 22781                           	opt stack 18
 22782                           
 22783                           ;lorawan.c: 2189: uint32_t mic = 0;
 22784                           
 22785                           ; BSR set to: 0
 22786                           ;incstack = 0
 22787  007C8A  0E00               	movlw	0
 22788  007C8C  0100               	movlb	0	; () banked
 22789  007C8E  6F73               	movwf	ExtractMic@mic& (0+255),b
 22790  007C90  0E00               	movlw	0
 22791  007C92  6F74               	movwf	(ExtractMic@mic+1)& (0+255),b
 22792  007C94  0E00               	movlw	0
 22793  007C96  6F75               	movwf	(ExtractMic@mic+2)& (0+255),b
 22794  007C98  0E00               	movlw	0
 22795  007C9A  6F76               	movwf	(ExtractMic@mic+3)& (0+255),b
 22796                           
 22797                           ; BSR set to: 0
 22798                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 22799  007C9C  0E73               	movlw	low ExtractMic@mic
 22800  007C9E  6F60               	movwf	memcpy@d1& (0+255),b
 22801  007CA0  0E00               	movlw	high ExtractMic@mic
 22802  007CA2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 22803  007CA4  0EFC               	movlw	252
 22804  007CA6  6F6F               	movwf	??_ExtractMic& (0+255),b
 22805  007CA8  0EFF               	movlw	255
 22806  007CAA  6F70               	movwf	(??_ExtractMic+1)& (0+255),b
 22807  007CAC  516D               	movf	ExtractMic@bufferLength& (0+255),w,b
 22808  007CAE  6F71               	movwf	(??_ExtractMic+2)& (0+255),b
 22809  007CB0  6B72               	clrf	(??_ExtractMic+3)& (0+255),b
 22810  007CB2  516F               	movf	??_ExtractMic& (0+255),w,b
 22811  007CB4  2771               	addwf	(??_ExtractMic+2)& (0+255),f,b
 22812  007CB6  5170               	movf	(??_ExtractMic+1)& (0+255),w,b
 22813  007CB8  2372               	addwfc	(??_ExtractMic+3)& (0+255),f,b
 22814  007CBA  5171               	movf	(??_ExtractMic+2)& (0+255),w,b
 22815  007CBC  256B               	addwf	ExtractMic@buffer& (0+255),w,b
 22816  007CBE  6F62               	movwf	memcpy@s1& (0+255),b
 22817  007CC0  5172               	movf	(??_ExtractMic+3)& (0+255),w,b
 22818  007CC2  216C               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 22819  007CC4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 22820  007CC6  0E00               	movlw	0
 22821  007CC8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 22822  007CCA  0E04               	movlw	4
 22823  007CCC  6F64               	movwf	memcpy@n& (0+255),b
 22824  007CCE  EC5C  F03D         	call	_memcpy	;wreg free
 22825                           
 22826                           ;lorawan.c: 2191: return mic;
 22827  007CD2  C073  F06B         	movff	ExtractMic@mic,?_ExtractMic
 22828  007CD6  C074  F06C         	movff	ExtractMic@mic+1,?_ExtractMic+1
 22829  007CDA  C075  F06D         	movff	ExtractMic@mic+2,?_ExtractMic+2
 22830  007CDE  C076  F06E         	movff	ExtractMic@mic+3,?_ExtractMic+3
 22831  007CE2  0012               	return	
 22832  007CE4                     __end_of_ExtractMic:
 22833                           	opt stack 0
 22834                           tosu	equ	0xFFF
 22835                           tosh	equ	0xFFE
 22836                           tosl	equ	0xFFD
 22837                           pclath	equ	0xFFA
 22838                           tblptru	equ	0xFF8
 22839                           tblptrh	equ	0xFF7
 22840                           tblptrl	equ	0xFF6
 22841                           tablat	equ	0xFF5
 22842                           prodh	equ	0xFF4
 22843                           prodl	equ	0xFF3
 22844                           intcon	equ	0xFF2
 22845                           intcon2	equ	0xFF1
 22846                           intcon3	equ	0xFF0
 22847                           indf0	equ	0xFEF
 22848                           postinc0	equ	0xFEE
 22849                           fsr0h	equ	0xFEA
 22850                           fsr0l	equ	0xFE9
 22851                           wreg	equ	0xFE8
 22852                           postinc1	equ	0xFE6
 22853                           postdec1	equ	0xFE5
 22854                           plusw1	equ	0xFE3
 22855                           fsr1h	equ	0xFE2
 22856                           fsr1l	equ	0xFE1
 22857                           indf2	equ	0xFDF
 22858                           postinc2	equ	0xFDE
 22859                           postdec2	equ	0xFDD
 22860                           plusw2	equ	0xFDB
 22861                           fsr2h	equ	0xFDA
 22862                           fsr2l	equ	0xFD9
 22863                           status	equ	0xFD8
 22864                           
 22865 ;; *************** function _ComputeSessionKeys *****************
 22866 ;; Defined at:
 22867 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22868 ;; Parameters:    Size  Location     Type
 22869 ;;  joinAcceptBu    2   49[BANK0 ] PTR struct .
 22870 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22871 ;; Auto vars:     Size  Location     Type
 22872 ;;		None
 22873 ;; Return value:  Size  Location     Type
 22874 ;;                  1    wreg      void 
 22875 ;; Registers used:
 22876 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22877 ;; Tracked objects:
 22878 ;;		On entry : 0/0
 22879 ;;		On exit  : 0/0
 22880 ;;		Unchanged: 0/0
 22881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22882 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22885 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22886 ;;Total ram usage:        2 bytes
 22887 ;; Hardware stack levels used:    1
 22888 ;; Hardware stack levels required when called:   10
 22889 ;; This function calls:
 22890 ;;		_AESEncodeLoRa
 22891 ;;		_PrepareSessionKeys
 22892 ;; This function is called by:
 22893 ;;		_LORAWAN_RxDone
 22894 ;; This function uses a non-reentrant model
 22895 ;;
 22896                           
 22897                           	psect	text109
 22898  0072E2                     __ptext109:
 22899                           	opt stack 0
 22900  0072E2                     _ComputeSessionKeys:
 22901                           	opt stack 16
 22902                           
 22903                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 22904                           
 22905                           ;incstack = 0
 22906  0072E2  0E32               	movlw	low (_loRa+50)
 22907  0072E4  0100               	movlb	0	; () banked
 22908  0072E6  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 22909  0072E8  0E02               	movlw	high (_loRa+50)
 22910  0072EA  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 22911  0072EC  0E01               	movlw	1
 22912  0072EE  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 22913  0072F0  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 22914  0072F2  0E00               	movlw	0
 22915  0072F4  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 22916  0072F6  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 22917  0072F8  0E04               	movlw	4
 22918  0072FA  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 22919  0072FC  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 22920  0072FE  0E00               	movlw	0
 22921  007300  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 22922  007302  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 22923  007304  ECED  F035         	call	_PrepareSessionKeys	;wreg free
 22924                           
 22925                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 22926  007308  0E02               	movlw	2
 22927  00730A  0102               	movlb	2	; () banked
 22928  00730C  6F32               	movwf	(_loRa+50)& (0+255),b
 22929                           
 22930                           ; BSR set to: 2
 22931                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 22932  00730E  0E32               	movlw	low (_loRa+50)
 22933  007310  0100               	movlb	0	; () banked
 22934  007312  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 22935  007314  0E02               	movlw	high (_loRa+50)
 22936  007316  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 22937  007318  0E42               	movlw	low (_loRa+66)
 22938  00731A  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 22939  00731C  0E02               	movlw	high (_loRa+66)
 22940  00731E  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 22941  007320  EC05  F042         	call	_AESEncodeLoRa	;wreg free
 22942                           
 22943                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 22944  007324  0E22               	movlw	low (_loRa+34)
 22945  007326  0100               	movlb	0	; () banked
 22946  007328  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 22947  00732A  0E02               	movlw	high (_loRa+34)
 22948  00732C  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 22949  00732E  0E01               	movlw	1
 22950  007330  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 22951  007332  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 22952  007334  0E00               	movlw	0
 22953  007336  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 22954  007338  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 22955  00733A  0E04               	movlw	4
 22956  00733C  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 22957  00733E  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 22958  007340  0E00               	movlw	0
 22959  007342  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 22960  007344  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 22961  007346  ECED  F035         	call	_PrepareSessionKeys	;wreg free
 22962                           
 22963                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 22964  00734A  0E01               	movlw	1
 22965  00734C  0102               	movlb	2	; () banked
 22966  00734E  6F22               	movwf	(_loRa+34)& (0+255),b
 22967                           
 22968                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 22969  007350  0E22               	movlw	low (_loRa+34)
 22970  007352  0100               	movlb	0	; () banked
 22971  007354  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 22972  007356  0E02               	movlw	high (_loRa+34)
 22973  007358  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 22974  00735A  0E42               	movlw	low (_loRa+66)
 22975  00735C  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 22976  00735E  0E02               	movlw	high (_loRa+66)
 22977  007360  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 22978  007362  EC05  F042         	call	_AESEncodeLoRa	;wreg free
 22979  007366  0012               	return		;funcret
 22980  007368                     __end_of_ComputeSessionKeys:
 22981                           	opt stack 0
 22982                           tosu	equ	0xFFF
 22983                           tosh	equ	0xFFE
 22984                           tosl	equ	0xFFD
 22985                           pclath	equ	0xFFA
 22986                           tblptru	equ	0xFF8
 22987                           tblptrh	equ	0xFF7
 22988                           tblptrl	equ	0xFF6
 22989                           tablat	equ	0xFF5
 22990                           prodh	equ	0xFF4
 22991                           prodl	equ	0xFF3
 22992                           intcon	equ	0xFF2
 22993                           intcon2	equ	0xFF1
 22994                           intcon3	equ	0xFF0
 22995                           indf0	equ	0xFEF
 22996                           postinc0	equ	0xFEE
 22997                           fsr0h	equ	0xFEA
 22998                           fsr0l	equ	0xFE9
 22999                           wreg	equ	0xFE8
 23000                           postinc1	equ	0xFE6
 23001                           postdec1	equ	0xFE5
 23002                           plusw1	equ	0xFE3
 23003                           fsr1h	equ	0xFE2
 23004                           fsr1l	equ	0xFE1
 23005                           indf2	equ	0xFDF
 23006                           postinc2	equ	0xFDE
 23007                           postdec2	equ	0xFDD
 23008                           plusw2	equ	0xFDB
 23009                           fsr2h	equ	0xFDA
 23010                           fsr2l	equ	0xFD9
 23011                           status	equ	0xFD8
 23012                           
 23013 ;; *************** function _PrepareSessionKeys *****************
 23014 ;; Defined at:
 23015 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23016 ;; Parameters:    Size  Location     Type
 23017 ;;  sessionKey      2   11[BANK0 ] PTR unsigned char 
 23018 ;;		 -> loRa.activationParameters(105), loRa(245), 
 23019 ;;  appNonce        2   13[BANK0 ] PTR unsigned char 
 23020 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 23021 ;;  networkId       2   15[BANK0 ] PTR unsigned char 
 23022 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 23023 ;; Auto vars:     Size  Location     Type
 23024 ;;  index           1   17[BANK0 ] unsigned char 
 23025 ;; Return value:  Size  Location     Type
 23026 ;;                  1    wreg      void 
 23027 ;; Registers used:
 23028 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23029 ;; Tracked objects:
 23030 ;;		On entry : 0/0
 23031 ;;		On exit  : 0/0
 23032 ;;		Unchanged: 0/0
 23033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23034 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23037 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23038 ;;Total ram usage:        7 bytes
 23039 ;; Hardware stack levels used:    1
 23040 ;; Hardware stack levels required when called:    8
 23041 ;; This function calls:
 23042 ;;		_memcpy
 23043 ;;		_memset
 23044 ;; This function is called by:
 23045 ;;		_ComputeSessionKeys
 23046 ;; This function uses a non-reentrant model
 23047 ;;
 23048                           
 23049                           	psect	text110
 23050  006BDA                     __ptext110:
 23051                           	opt stack 0
 23052  006BDA                     _PrepareSessionKeys:
 23053                           	opt stack 17
 23054                           
 23055                           ;lorawan.c: 2047: uint8_t index = 0;
 23056                           
 23057                           ;incstack = 0
 23058  006BDA  0E00               	movlw	0
 23059  006BDC  0100               	movlb	0	; () banked
 23060  006BDE  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 23061                           
 23062                           ; BSR set to: 0
 23063                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 23064  006BE0  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 23065  006BE2  0D01               	mullw	1
 23066  006BE4  50F3               	movf	prodl,w,c
 23067  006BE6  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 23068  006BE8  6F60               	movwf	memset@p1& (0+255),b
 23069  006BEA  50F4               	movf	prodh,w,c
 23070  006BEC  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 23071  006BEE  6F61               	movwf	(memset@p1+1)& (0+255),b
 23072  006BF0  0E00               	movlw	0
 23073  006BF2  6F63               	movwf	(memset@c+1)& (0+255),b
 23074  006BF4  0E00               	movlw	0
 23075  006BF6  6F62               	movwf	memset@c& (0+255),b
 23076  006BF8  0E00               	movlw	0
 23077  006BFA  6F65               	movwf	(memset@n+1)& (0+255),b
 23078  006BFC  0E10               	movlw	16
 23079  006BFE  6F64               	movwf	memset@n& (0+255),b
 23080  006C00  ECCB  F042         	call	_memset	;wreg free
 23081                           
 23082                           ;lorawan.c: 2050: index ++;
 23083  006C04  0100               	movlb	0	; () banked
 23084  006C06  2B71               	incf	PrepareSessionKeys@index& (0+255),f,b
 23085                           
 23086                           ; BSR set to: 0
 23087                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 23088  006C08  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 23089  006C0A  0D01               	mullw	1
 23090  006C0C  50F3               	movf	prodl,w,c
 23091  006C0E  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 23092  006C10  6F60               	movwf	memcpy@d1& (0+255),b
 23093  006C12  50F4               	movf	prodh,w,c
 23094  006C14  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 23095  006C16  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 23096  006C18  C06D  F062         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 23097  006C1C  C06E  F063         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 23098  006C20  0E00               	movlw	0
 23099  006C22  6F65               	movwf	(memcpy@n+1)& (0+255),b
 23100  006C24  0E03               	movlw	3
 23101  006C26  6F64               	movwf	memcpy@n& (0+255),b
 23102  006C28  EC5C  F03D         	call	_memcpy	;wreg free
 23103                           
 23104                           ;lorawan.c: 2053: index = index + 3;
 23105  006C2C  0100               	movlb	0	; () banked
 23106  006C2E  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 23107  006C30  0F03               	addlw	3
 23108  006C32  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 23109                           
 23110                           ; BSR set to: 0
 23111                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 23112  006C34  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 23113  006C36  0D01               	mullw	1
 23114  006C38  50F3               	movf	prodl,w,c
 23115  006C3A  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 23116  006C3C  6F60               	movwf	memcpy@d1& (0+255),b
 23117  006C3E  50F4               	movf	prodh,w,c
 23118  006C40  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 23119  006C42  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 23120  006C44  C06F  F062         	movff	PrepareSessionKeys@networkId,memcpy@s1
 23121  006C48  C070  F063         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 23122  006C4C  0E00               	movlw	0
 23123  006C4E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 23124  006C50  0E03               	movlw	3
 23125  006C52  6F64               	movwf	memcpy@n& (0+255),b
 23126  006C54  EC5C  F03D         	call	_memcpy	;wreg free
 23127                           
 23128                           ;lorawan.c: 2056: index = index + 3;
 23129  006C58  0100               	movlb	0	; () banked
 23130  006C5A  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 23131  006C5C  0F03               	addlw	3
 23132  006C5E  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 23133                           
 23134                           ; BSR set to: 0
 23135                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 23136  006C60  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 23137  006C62  0D01               	mullw	1
 23138  006C64  50F3               	movf	prodl,w,c
 23139  006C66  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 23140  006C68  6F60               	movwf	memcpy@d1& (0+255),b
 23141  006C6A  50F4               	movf	prodh,w,c
 23142  006C6C  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 23143  006C6E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 23144  006C70  0ED2               	movlw	low (_loRa+210)
 23145  006C72  6F62               	movwf	memcpy@s1& (0+255),b
 23146  006C74  0E02               	movlw	high (_loRa+210)
 23147  006C76  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 23148  006C78  0E00               	movlw	0
 23149  006C7A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 23150  006C7C  0E02               	movlw	2
 23151  006C7E  6F64               	movwf	memcpy@n& (0+255),b
 23152  006C80  EC5C  F03D         	call	_memcpy	;wreg free
 23153  006C84  0012               	return		;funcret
 23154  006C86                     __end_of_PrepareSessionKeys:
 23155                           	opt stack 0
 23156                           tosu	equ	0xFFF
 23157                           tosh	equ	0xFFE
 23158                           tosl	equ	0xFFD
 23159                           pclath	equ	0xFFA
 23160                           tblptru	equ	0xFF8
 23161                           tblptrh	equ	0xFF7
 23162                           tblptrl	equ	0xFF6
 23163                           tablat	equ	0xFF5
 23164                           prodh	equ	0xFF4
 23165                           prodl	equ	0xFF3
 23166                           intcon	equ	0xFF2
 23167                           intcon2	equ	0xFF1
 23168                           intcon3	equ	0xFF0
 23169                           indf0	equ	0xFEF
 23170                           postinc0	equ	0xFEE
 23171                           fsr0h	equ	0xFEA
 23172                           fsr0l	equ	0xFE9
 23173                           wreg	equ	0xFE8
 23174                           postinc1	equ	0xFE6
 23175                           postdec1	equ	0xFE5
 23176                           plusw1	equ	0xFE3
 23177                           fsr1h	equ	0xFE2
 23178                           fsr1l	equ	0xFE1
 23179                           indf2	equ	0xFDF
 23180                           postinc2	equ	0xFDE
 23181                           postdec2	equ	0xFDD
 23182                           plusw2	equ	0xFDB
 23183                           fsr2h	equ	0xFDA
 23184                           fsr2l	equ	0xFD9
 23185                           status	equ	0xFD8
 23186                           
 23187 ;; *************** function _CheckMcastFlags *****************
 23188 ;; Defined at:
 23189 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23190 ;; Parameters:    Size  Location     Type
 23191 ;;  hdr             2    0[BANK0 ] PTR struct .
 23192 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 23193 ;; Auto vars:     Size  Location     Type
 23194 ;;		None
 23195 ;; Return value:  Size  Location     Type
 23196 ;;                  1    wreg      unsigned char 
 23197 ;; Registers used:
 23198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23199 ;; Tracked objects:
 23200 ;;		On entry : 0/0
 23201 ;;		On exit  : 0/0
 23202 ;;		Unchanged: 0/0
 23203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23204 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23207 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23208 ;;Total ram usage:        2 bytes
 23209 ;; Hardware stack levels used:    1
 23210 ;; Hardware stack levels required when called:    7
 23211 ;; This function calls:
 23212 ;;		Nothing
 23213 ;; This function is called by:
 23214 ;;		_LORAWAN_RxDone
 23215 ;; This function uses a non-reentrant model
 23216 ;;
 23217                           
 23218                           	psect	text111
 23219  0073EC                     __ptext111:
 23220                           	opt stack 0
 23221  0073EC                     _CheckMcastFlags:
 23222                           	opt stack 19
 23223                           
 23224                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 23225                           
 23226                           ;incstack = 0
 23227  0073EC  0100               	movlb	0	; () banked
 23228  0073EE  EE20 F005          	lfsr	2,5
 23229  0073F2  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 23230  0073F4  26D9               	addwf	fsr2l,f,c
 23231  0073F6  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 23232  0073F8  22DA               	addwfc	fsr2h,f,c
 23233  0073FA  BADF               	btfsc	indf2,5,c
 23234  0073FC  D012               	goto	u17680
 23235                           
 23236                           ; BSR set to: 0
 23237  0073FE  EE20 F005          	lfsr	2,5
 23238  007402  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 23239  007404  26D9               	addwf	fsr2l,f,c
 23240  007406  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 23241  007408  22DA               	addwfc	fsr2h,f,c
 23242  00740A  BCDF               	btfsc	indf2,6,c
 23243  00740C  D00A               	goto	u17680
 23244                           
 23245                           ; BSR set to: 0
 23246  00740E  C060  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 23247  007412  C061  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 23248  007416  38DF               	swapf	223,w,c
 23249  007418  32E8               	rrcf	wreg,f,c
 23250  00741A  0B07               	andlw	7
 23251  00741C  0A03               	xorlw	3
 23252  00741E  B4D8               	btfsc	status,2,c
 23253  007420  D002               	goto	l2120
 23254  007422                     u17680:
 23255                           
 23256                           ; BSR set to: 0
 23257                           ;lorawan.c: 2110: {
 23258                           ;lorawan.c: 2111: return 0;
 23259                           
 23260                           ; BSR set to: 0
 23261  007422  0E00               	movlw	0
 23262                           
 23263                           ; BSR set to: 0
 23264  007424  0012               	return	
 23265  007426                     l2120:
 23266                           
 23267                           ; BSR set to: 0
 23268                           ;lorawan.c: 2112: }
 23269                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 23270                           
 23271                           ; BSR set to: 0
 23272  007426  EE20 F005          	lfsr	2,5
 23273  00742A  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 23274  00742C  26D9               	addwf	fsr2l,f,c
 23275  00742E  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 23276  007430  22DA               	addwfc	fsr2h,f,c
 23277  007432  50DF               	movf	223,w,c
 23278  007434  0B0F               	andlw	15
 23279  007436  0900               	iorlw	0
 23280  007438  B4D8               	btfsc	status,2,c
 23281  00743A  D002               	goto	l2124
 23282                           
 23283                           ; BSR set to: 0
 23284                           ;lorawan.c: 2115: {
 23285                           ;lorawan.c: 2116: return 0;
 23286  00743C  0E00               	movlw	0
 23287                           
 23288                           ; BSR set to: 0
 23289  00743E  0012               	return	
 23290  007440                     l2124:
 23291                           
 23292                           ; BSR set to: 0
 23293                           ;lorawan.c: 2118: else
 23294                           ;lorawan.c: 2119: {
 23295                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 23296                           
 23297                           ; BSR set to: 0
 23298  007440  EE20 F008          	lfsr	2,8
 23299  007444  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 23300  007446  26D9               	addwf	fsr2l,f,c
 23301  007448  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 23302  00744A  22DA               	addwfc	fsr2h,f,c
 23303  00744C  50DF               	movf	indf2,w,c
 23304  00744E  A4D8               	btfss	status,2,c
 23305  007450  D002               	goto	l2126
 23306                           
 23307                           ; BSR set to: 0
 23308                           ;lorawan.c: 2121: {
 23309                           ;lorawan.c: 2122: return 0;
 23310  007452  0E00               	movlw	0
 23311                           
 23312                           ; BSR set to: 0
 23313  007454  0012               	return	
 23314  007456                     l2126:
 23315                           
 23316                           ; BSR set to: 0
 23317                           ;lorawan.c: 2123: }
 23318                           ;lorawan.c: 2124: }
 23319                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 23320                           
 23321                           ; BSR set to: 0
 23322                           
 23323                           ; BSR set to: 0
 23324  007456  EE20 F005          	lfsr	2,5
 23325  00745A  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 23326  00745C  26D9               	addwf	fsr2l,f,c
 23327  00745E  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 23328  007460  22DA               	addwfc	fsr2h,f,c
 23329  007462  A8DF               	btfss	indf2,4,c
 23330  007464  D002               	goto	l2127
 23331                           
 23332                           ; BSR set to: 0
 23333                           ;lorawan.c: 2127: {
 23334                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 23335  007466  0102               	movlb	2	; () banked
 23336  007468  8700               	bsf	_loRa& (0+255),3,b
 23337  00746A                     l2127:
 23338                           
 23339                           ;lorawan.c: 2129: }
 23340                           ;lorawan.c: 2131: return 1;
 23341                           
 23342                           ; BSR set to: 2
 23343  00746A  0E01               	movlw	1
 23344  00746C  0012               	return	
 23345  00746E                     __end_of_CheckMcastFlags:
 23346                           	opt stack 0
 23347                           tosu	equ	0xFFF
 23348                           tosh	equ	0xFFE
 23349                           tosl	equ	0xFFD
 23350                           pclath	equ	0xFFA
 23351                           tblptru	equ	0xFF8
 23352                           tblptrh	equ	0xFF7
 23353                           tblptrl	equ	0xFF6
 23354                           tablat	equ	0xFF5
 23355                           prodh	equ	0xFF4
 23356                           prodl	equ	0xFF3
 23357                           intcon	equ	0xFF2
 23358                           intcon2	equ	0xFF1
 23359                           intcon3	equ	0xFF0
 23360                           indf0	equ	0xFEF
 23361                           postinc0	equ	0xFEE
 23362                           fsr0h	equ	0xFEA
 23363                           fsr0l	equ	0xFE9
 23364                           wreg	equ	0xFE8
 23365                           postinc1	equ	0xFE6
 23366                           postdec1	equ	0xFE5
 23367                           plusw1	equ	0xFE3
 23368                           fsr1h	equ	0xFE2
 23369                           fsr1l	equ	0xFE1
 23370                           indf2	equ	0xFDF
 23371                           postinc2	equ	0xFDE
 23372                           postdec2	equ	0xFDD
 23373                           plusw2	equ	0xFDB
 23374                           fsr2h	equ	0xFDA
 23375                           fsr2l	equ	0xFD9
 23376                           status	equ	0xFD8
 23377                           
 23378 ;; *************** function _CheckFlags *****************
 23379 ;; Defined at:
 23380 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23381 ;; Parameters:    Size  Location     Type
 23382 ;;  hdr             2    0[BANK0 ] PTR struct .
 23383 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 23384 ;; Auto vars:     Size  Location     Type
 23385 ;;		None
 23386 ;; Return value:  Size  Location     Type
 23387 ;;                  1    wreg      void 
 23388 ;; Registers used:
 23389 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23390 ;; Tracked objects:
 23391 ;;		On entry : 0/0
 23392 ;;		On exit  : 0/0
 23393 ;;		Unchanged: 0/0
 23394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23395 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23398 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23399 ;;Total ram usage:        2 bytes
 23400 ;; Hardware stack levels used:    1
 23401 ;; Hardware stack levels required when called:    7
 23402 ;; This function calls:
 23403 ;;		Nothing
 23404 ;; This function is called by:
 23405 ;;		_LORAWAN_RxDone
 23406 ;; This function uses a non-reentrant model
 23407 ;;
 23408                           
 23409                           	psect	text112
 23410  007B76                     __ptext112:
 23411                           	opt stack 0
 23412  007B76                     _CheckFlags:
 23413                           	opt stack 19
 23414                           
 23415                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 23416                           
 23417                           ;incstack = 0
 23418  007B76  0100               	movlb	0	; () banked
 23419  007B78  EE20 F005          	lfsr	2,5
 23420  007B7C  5160               	movf	CheckFlags@hdr& (0+255),w,b
 23421  007B7E  26D9               	addwf	fsr2l,f,c
 23422  007B80  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 23423  007B82  22DA               	addwfc	fsr2h,f,c
 23424  007B84  AEDF               	btfss	indf2,7,c
 23425  007B86  D002               	goto	l2113
 23426                           
 23427                           ; BSR set to: 0
 23428                           ;lorawan.c: 2077: {
 23429                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 23430  007B88  0102               	movlb	2	; () banked
 23431  007B8A  8D02               	bsf	(_loRa+2)& (0+255),6,b
 23432  007B8C                     l2113:
 23433                           
 23434                           ;lorawan.c: 2079: }
 23435                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 23436                           
 23437                           ; BSR set to: 2
 23438  007B8C  0100               	movlb	0	; () banked
 23439  007B8E  EE20 F005          	lfsr	2,5
 23440  007B92  5160               	movf	CheckFlags@hdr& (0+255),w,b
 23441  007B94  26D9               	addwf	fsr2l,f,c
 23442  007B96  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 23443  007B98  22DA               	addwfc	fsr2h,f,c
 23444  007B9A  A8DF               	btfss	indf2,4,c
 23445  007B9C  D002               	goto	l2114
 23446                           
 23447                           ; BSR set to: 0
 23448                           ;lorawan.c: 2082: {
 23449                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 23450  007B9E  0102               	movlb	2	; () banked
 23451  007BA0  8700               	bsf	_loRa& (0+255),3,b
 23452  007BA2                     l2114:
 23453                           
 23454                           ;lorawan.c: 2084: }
 23455                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 23456                           
 23457                           ; BSR set to: 2
 23458  007BA2  0100               	movlb	0	; () banked
 23459  007BA4  EE20 F005          	lfsr	2,5
 23460  007BA8  5160               	movf	CheckFlags@hdr& (0+255),w,b
 23461  007BAA  26D9               	addwf	fsr2l,f,c
 23462  007BAC  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 23463  007BAE  22DA               	addwfc	fsr2h,f,c
 23464  007BB0  ACDF               	btfss	indf2,6,c
 23465  007BB2  D002               	goto	l2115
 23466                           
 23467                           ; BSR set to: 0
 23468                           ;lorawan.c: 2087: {
 23469                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 23470  007BB4  0102               	movlb	2	; () banked
 23471  007BB6  8900               	bsf	_loRa& (0+255),4,b
 23472  007BB8                     l2115:
 23473                           
 23474                           ;lorawan.c: 2089: }
 23475                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 23476                           
 23477                           ; BSR set to: 2
 23478  007BB8  C060  FFD9         	movff	CheckFlags@hdr,fsr2l
 23479  007BBC  C061  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 23480  007BC0  0100               	movlb	0	; () banked
 23481  007BC2  38DF               	swapf	223,w,c
 23482  007BC4  32E8               	rrcf	wreg,f,c
 23483  007BC6  0B07               	andlw	7
 23484  007BC8  0A05               	xorlw	5
 23485  007BCA  A4D8               	btfss	status,2,c
 23486  007BCC  0012               	return	
 23487                           
 23488                           ; BSR set to: 0
 23489                           ;lorawan.c: 2092: {
 23490                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 23491  007BCE  0102               	movlb	2	; () banked
 23492  007BD0  8300               	bsf	_loRa& (0+255),1,b
 23493  007BD2  0012               	return	
 23494  007BD4                     __end_of_CheckFlags:
 23495                           	opt stack 0
 23496                           tosu	equ	0xFFF
 23497                           tosh	equ	0xFFE
 23498                           tosl	equ	0xFFD
 23499                           pclath	equ	0xFFA
 23500                           tblptru	equ	0xFF8
 23501                           tblptrh	equ	0xFF7
 23502                           tblptrl	equ	0xFF6
 23503                           tablat	equ	0xFF5
 23504                           prodh	equ	0xFF4
 23505                           prodl	equ	0xFF3
 23506                           intcon	equ	0xFF2
 23507                           intcon2	equ	0xFF1
 23508                           intcon3	equ	0xFF0
 23509                           indf0	equ	0xFEF
 23510                           postinc0	equ	0xFEE
 23511                           fsr0h	equ	0xFEA
 23512                           fsr0l	equ	0xFE9
 23513                           wreg	equ	0xFE8
 23514                           postinc1	equ	0xFE6
 23515                           postdec1	equ	0xFE5
 23516                           plusw1	equ	0xFE3
 23517                           fsr1h	equ	0xFE2
 23518                           fsr1l	equ	0xFE1
 23519                           indf2	equ	0xFDF
 23520                           postinc2	equ	0xFDE
 23521                           postdec2	equ	0xFDD
 23522                           plusw2	equ	0xFDB
 23523                           fsr2h	equ	0xFDA
 23524                           fsr2l	equ	0xFD9
 23525                           status	equ	0xFD8
 23526                           
 23527 ;; *************** function _RADIO_FSKPacketSent *****************
 23528 ;; Defined at:
 23529 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23530 ;; Parameters:    Size  Location     Type
 23531 ;;		None
 23532 ;; Auto vars:     Size  Location     Type
 23533 ;;  timeOnAir       4  135[BANK0 ] unsigned long 
 23534 ;;  irqFlags        1  143[BANK0 ] unsigned char 
 23535 ;; Return value:  Size  Location     Type
 23536 ;;                  1    wreg      void 
 23537 ;; Registers used:
 23538 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23539 ;; Tracked objects:
 23540 ;;		On entry : 0/0
 23541 ;;		On exit  : 0/0
 23542 ;;		Unchanged: 0/0
 23543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23545 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23546 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23547 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23548 ;;Total ram usage:       13 bytes
 23549 ;; Hardware stack levels used:    1
 23550 ;; Hardware stack levels required when called:   15
 23551 ;; This function calls:
 23552 ;;		_LORAWAN_TxDone
 23553 ;;		_RADIO_RegisterRead
 23554 ;;		_RADIO_WriteMode
 23555 ;;		_SwTimerReadValue
 23556 ;;		_SwTimerStop
 23557 ;;		___lmul
 23558 ;; This function is called by:
 23559 ;;		_RADIO_DIO0
 23560 ;; This function uses a non-reentrant model
 23561 ;;
 23562                           
 23563                           	psect	text113
 23564  00577C                     __ptext113:
 23565                           	opt stack 0
 23566  00577C                     _RADIO_FSKPacketSent:
 23567                           	opt stack 13
 23568                           
 23569                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 23570                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 23571                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 23572                           
 23573                           ;incstack = 0
 23574  00577C  0E3F               	movlw	63
 23575  00577E  ECE5  F043         	call	_RADIO_RegisterRead
 23576  005782  0100               	movlb	0	; () banked
 23577  005784  6FEF               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 23578                           
 23579                           ; BSR set to: 0
 23580                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 23581  005786  A7EF               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 23582  005788  0012               	return	
 23583                           
 23584                           ; BSR set to: 0
 23585                           ;radio_driver_SX1276.c: 1100: {
 23586                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 23587  00578A  C13C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23588  00578E  0E00               	movlw	0
 23589  005790  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23590  005792  0E00               	movlw	0
 23591  005794  EC0D  F02F         	call	_RADIO_WriteMode
 23592                           
 23593                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 23594  005798  0101               	movlb	1	; () banked
 23595  00579A  9147               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 23596                           
 23597                           ; BSR set to: 1
 23598                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 23599  00579C  514D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23600  00579E  ECF9  F043         	call	_SwTimerStop
 23601                           
 23602                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 23603  0057A2  0101               	movlb	1	; () banked
 23604  0057A4  B947               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 23605  0057A6  0012               	return	
 23606                           
 23607                           ; BSR set to: 1
 23608                           ;radio_driver_SX1276.c: 1107: {
 23609                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 23610  0057A8  514B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 23611  0057AA  ECA8  F041         	call	_SwTimerReadValue
 23612  0057AE  0100               	movlb	0	; () banked
 23613  0057B0  5194               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 23614  0057B2  E108               	bnz	u19390
 23615  0057B4  0E1F               	movlw	31
 23616  0057B6  5D91               	subwf	?_SwTimerReadValue& (0+255),w,b
 23617  0057B8  0EAC               	movlw	172
 23618  0057BA  5992               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 23619  0057BC  0EDF               	movlw	223
 23620  0057BE  5993               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 23621  0057C0  A0D8               	btfss	status,0,c
 23622  0057C2  D021               	goto	l580
 23623  0057C4                     u19390:
 23624                           
 23625                           ; BSR set to: 0
 23626  0057C4  0101               	movlb	1	; () banked
 23627  0057C6  514B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 23628  0057C8  ECA8  F041         	call	_SwTimerReadValue
 23629  0057CC  0E0D               	movlw	13
 23630  0057CE  D006               	goto	u19400
 23631  0057D0                     u19405:
 23632  0057D0  0100               	movlb	0	; () banked
 23633  0057D2  90D8               	bcf	status,0,c
 23634  0057D4  3394               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 23635  0057D6  3393               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 23636  0057D8  3392               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 23637  0057DA  3391               	rrcf	?_SwTimerReadValue& (0+255),f,b
 23638  0057DC                     u19400:
 23639  0057DC  2EE8               	decfsz	wreg,f,c
 23640  0057DE  D7F8               	goto	u19405
 23641  0057E0  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 23642  0057E4  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 23643  0057E8  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 23644  0057EC  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 23645  0057F0  0E7D               	movlw	125
 23646  0057F2  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 23647  0057F4  0E00               	movlw	0
 23648  0057F6  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23649  0057F8  0E00               	movlw	0
 23650  0057FA  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23651  0057FC  0E00               	movlw	0
 23652  0057FE  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23653  005800  EC72  F03E         	call	___lmul	;wreg free
 23654  005804  D021               	goto	L14
 23655  005806                     l580:
 23656  005806  0101               	movlb	1	; () banked
 23657  005808  514B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 23658  00580A  ECA8  F041         	call	_SwTimerReadValue
 23659  00580E  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 23660  005812  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 23661  005816  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 23662  00581A  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 23663  00581E  0E7D               	movlw	125
 23664  005820  0100               	movlb	0	; () banked
 23665  005822  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 23666  005824  0E00               	movlw	0
 23667  005826  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23668  005828  0E00               	movlw	0
 23669  00582A  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23670  00582C  0E00               	movlw	0
 23671  00582E  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23672  005830  EC72  F03E         	call	___lmul	;wreg free
 23673  005834  0E0D               	movlw	13
 23674  005836  D006               	goto	u19410
 23675  005838                     u19415:
 23676  005838  0100               	movlb	0	; () banked
 23677  00583A  90D8               	bcf	status,0,c
 23678  00583C  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 23679  00583E  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 23680  005840  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 23681  005842  339A               	rrcf	?___lmul& (0+255),f,b
 23682  005844                     u19410:
 23683  005844  2EE8               	decfsz	wreg,f,c
 23684  005846  D7F8               	goto	u19415
 23685  005848                     L14:
 23686  005848  C09A  F0EB         	movff	?___lmul,_RADIO_FSKPacketSent$793
 23687  00584C  C09B  F0EC         	movff	?___lmul+1,_RADIO_FSKPacketSent$793+1
 23688  005850  C09C  F0ED         	movff	?___lmul+2,_RADIO_FSKPacketSent$793+2
 23689  005854  C09D  F0EE         	movff	?___lmul+3,_RADIO_FSKPacketSent$793+3
 23690                           
 23691                           ; BSR set to: 0
 23692  005858  C0EB  F0E3         	movff	_RADIO_FSKPacketSent$793,??_RADIO_FSKPacketSent
 23693  00585C  C0EC  F0E4         	movff	_RADIO_FSKPacketSent$793+1,??_RADIO_FSKPacketSent+1
 23694  005860  C0ED  F0E5         	movff	_RADIO_FSKPacketSent$793+2,??_RADIO_FSKPacketSent+2
 23695  005864  C0EE  F0E6         	movff	_RADIO_FSKPacketSent$793+3,??_RADIO_FSKPacketSent+3
 23696  005868  0100               	movlb	0	; () banked
 23697  00586A  1FE3               	comf	??_RADIO_FSKPacketSent& (0+255),f,b
 23698  00586C  1FE4               	comf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 23699  00586E  1FE5               	comf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 23700  005870  1FE6               	comf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 23701  005872  2BE3               	incf	??_RADIO_FSKPacketSent& (0+255),f,b
 23702  005874  0E00               	movlw	0
 23703  005876  23E4               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 23704  005878  23E5               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 23705  00587A  23E6               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 23706  00587C  0E20               	movlw	32
 23707  00587E  25E3               	addwf	??_RADIO_FSKPacketSent& (0+255),w,b
 23708  005880  6FE7               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 23709  005882  0E4E               	movlw	78
 23710  005884  21E4               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),w,b
 23711  005886  6FE8               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 23712  005888  0E00               	movlw	0
 23713  00588A  21E5               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),w,b
 23714  00588C  6FE9               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 23715  00588E  0E00               	movlw	0
 23716  005890  21E6               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),w,b
 23717  005892  6FEA               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 23718                           
 23719                           ; BSR set to: 0
 23720                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 23721  005894  0101               	movlb	1	; () banked
 23722  005896  514B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 23723  005898  ECF9  F043         	call	_SwTimerStop
 23724                           
 23725                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 23726  00589C  C0E7  F0BB         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 23727  0058A0  C0E8  F0BC         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 23728  0058A4  EC96  F006         	call	_LORAWAN_TxDone	;wreg free
 23729  0058A8  0012               	return	
 23730  0058AA                     __end_of_RADIO_FSKPacketSent:
 23731                           	opt stack 0
 23732                           tosu	equ	0xFFF
 23733                           tosh	equ	0xFFE
 23734                           tosl	equ	0xFFD
 23735                           pclath	equ	0xFFA
 23736                           tblptru	equ	0xFF8
 23737                           tblptrh	equ	0xFF7
 23738                           tblptrl	equ	0xFF6
 23739                           tablat	equ	0xFF5
 23740                           prodh	equ	0xFF4
 23741                           prodl	equ	0xFF3
 23742                           intcon	equ	0xFF2
 23743                           intcon2	equ	0xFF1
 23744                           intcon3	equ	0xFF0
 23745                           indf0	equ	0xFEF
 23746                           postinc0	equ	0xFEE
 23747                           fsr0h	equ	0xFEA
 23748                           fsr0l	equ	0xFE9
 23749                           wreg	equ	0xFE8
 23750                           postinc1	equ	0xFE6
 23751                           postdec1	equ	0xFE5
 23752                           plusw1	equ	0xFE3
 23753                           fsr1h	equ	0xFE2
 23754                           fsr1l	equ	0xFE1
 23755                           indf2	equ	0xFDF
 23756                           postinc2	equ	0xFDE
 23757                           postdec2	equ	0xFDD
 23758                           plusw2	equ	0xFDB
 23759                           fsr2h	equ	0xFDA
 23760                           fsr2l	equ	0xFD9
 23761                           status	equ	0xFD8
 23762                           
 23763 ;; *************** function _LORAWAN_TxDone *****************
 23764 ;; Defined at:
 23765 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 23766 ;; Parameters:    Size  Location     Type
 23767 ;;  timeOnAir       2   91[BANK0 ] unsigned int 
 23768 ;; Auto vars:     Size  Location     Type
 23769 ;;  minim           4  126[BANK0 ] unsigned long 
 23770 ;;  ticks           4  122[BANK0 ] unsigned long 
 23771 ;;  delta           4  114[BANK0 ] unsigned long 
 23772 ;;  i               1  130[BANK0 ] unsigned char 
 23773 ;;  found           1  113[BANK0 ] unsigned char 
 23774 ;; Return value:  Size  Location     Type
 23775 ;;                  1    wreg      void 
 23776 ;; Registers used:
 23777 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23778 ;; Tracked objects:
 23779 ;;		On entry : 0/0
 23780 ;;		On exit  : 0/0
 23781 ;;		Unchanged: 0/0
 23782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23783 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23784 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23785 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23786 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23787 ;;Total ram usage:       40 bytes
 23788 ;; Hardware stack levels used:    1
 23789 ;; Hardware stack levels required when called:   14
 23790 ;; This function calls:
 23791 ;;		_LORAWAN_EnterContinuousReceive
 23792 ;;		_RADIO_GetStatus
 23793 ;;		_RxData
 23794 ;;		_SwTimerIsRunning
 23795 ;;		_SwTimerReadValue
 23796 ;;		_SwTimerSetTimeout
 23797 ;;		_SwTimerStart
 23798 ;;		_SwTimerStop
 23799 ;;		___lldiv
 23800 ;;		___lmul
 23801 ;; This function is called by:
 23802 ;;		_RADIO_TxDone
 23803 ;;		_RADIO_FSKPacketSent
 23804 ;;		_RADIO_WatchdogTimeout
 23805 ;; This function uses a non-reentrant model
 23806 ;;
 23807                           
 23808                           	psect	text114
 23809  000D2C                     __ptext114:
 23810                           	opt stack 0
 23811  000D2C                     _LORAWAN_TxDone:
 23812                           	opt stack 13
 23813                           
 23814                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 23815                           
 23816                           ;incstack = 0
 23817  000D2C  0102               	movlb	2	; () banked
 23818  000D2E  B103               	btfsc	(_loRa+3)& (0+255),0,b
 23819  000D30  D3A2               	goto	l1028
 23820                           
 23821                           ; BSR set to: 2
 23822                           ;lorawan_eu.c: 368: {
 23823                           ;lorawan_eu.c: 369: bool found = 0;
 23824  000D32  0E00               	movlw	0
 23825  000D34  0100               	movlb	0	; () banked
 23826  000D36  6FD1               	movwf	LORAWAN_TxDone@found& (0+255),b
 23827                           
 23828                           ;lorawan_eu.c: 370: uint8_t i;
 23829                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 23830  000D38  0E00               	movlw	0
 23831  000D3A  6FD2               	movwf	LORAWAN_TxDone@delta& (0+255),b
 23832  000D3C  0E00               	movlw	0
 23833  000D3E  6FD3               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 23834  000D40  0E00               	movlw	0
 23835  000D42  6FD4               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 23836  000D44  0E00               	movlw	0
 23837  000D46  6FD5               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 23838                           
 23839                           ; BSR set to: 0
 23840  000D48  69DE               	setf	LORAWAN_TxDone@minim& (0+255),b
 23841  000D4A  69DF               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 23842  000D4C  69E0               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 23843  000D4E  69E1               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 23844                           
 23845                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 23846  000D50  0E00               	movlw	0
 23847  000D52  0102               	movlb	2	; () banked
 23848  000D54  6FF1               	movwf	(_loRa+241)& (0+255),b
 23849                           
 23850                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 23851  000D56  5102               	movf	(_loRa+2)& (0+255),w,b
 23852  000D58  0BF0               	andlw	-16
 23853  000D5A  0902               	iorlw	2
 23854  000D5C  6F02               	movwf	(_loRa+2)& (0+255),b
 23855                           
 23856                           ; BSR set to: 2
 23857                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 23858  000D5E  C2DA  F0E2         	movff	_loRa+218,LORAWAN_TxDone@i
 23859                           
 23860                           ; BSR set to: 2
 23861                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 23862  000D62  A500               	btfss	_loRa& (0+255),2,b
 23863  000D64  D0BA               	goto	l1029
 23864                           
 23865                           ; BSR set to: 2
 23866                           ;lorawan_eu.c: 382: {
 23867                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 23868  000D66  5117               	movf	(_loRa+23)& (0+255),w,b
 23869  000D68  0D01               	mullw	1
 23870  000D6A  0E51               	movlw	low _rxWindowOffset
 23871  000D6C  24F3               	addwf	prodl,w,c
 23872  000D6E  6EF6               	movwf	tblptrl,c
 23873  000D70  0EFF               	movlw	high _rxWindowOffset
 23874  000D72  20F4               	addwfc	prodh,w,c
 23875  000D74  6EF7               	movwf	tblptrh,c
 23876  000D76                     	if	1	;There are 3 active tblptr bytes
 23877  000D76  6AF8               	clrf	tblptru,c
 23878  000D78  0E00               	movlw	low (__mediumconst shr (0+16))
 23879  000D7A  22F8               	addwfc	tblptru,f,c
 23880  000D7C                     	endif
 23881  000D7C  0008               	tblrd		*
 23882  000D7E  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 23883  000D82  5198               	movf	(_loRa+152)& (0+255),w,b
 23884  000D84  0100               	movlb	0	; () banked
 23885  000D86  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23886  000D88  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23887  000D8A  0E00               	movlw	0
 23888  000D8C  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 23889  000D8E  0EFF               	movlw	255
 23890  000D90  0102               	movlb	2	; () banked
 23891  000D92  2199               	addwfc	(_loRa+153)& (0+255),w,b
 23892  000D94  0100               	movlb	0	; () banked
 23893  000D96  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23894  000D98  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 23895  000D9A  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23896  000D9C  0E0C               	movlw	12
 23897  000D9E                     u18895:
 23898  000D9E  90D8               	bcf	status,0,c
 23899  000DA0  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23900  000DA2  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23901  000DA4  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23902  000DA6  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23903  000DA8  2EE8               	decfsz	wreg,f,c
 23904  000DAA  D7F9               	goto	u18895
 23905  000DAC  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 23906  000DB0  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 23907  000DB4  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 23908  000DB8  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 23909  000DBC  0E7D               	movlw	125
 23910  000DBE  6F64               	movwf	___lldiv@divisor& (0+255),b
 23911  000DC0  0E00               	movlw	0
 23912  000DC2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23913  000DC4  0E00               	movlw	0
 23914  000DC6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23915  000DC8  0E00               	movlw	0
 23916  000DCA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23917  000DCC  ECB4  F039         	call	___lldiv	;wreg free
 23918  000DD0  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23919  000DD4  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23920  000DD8  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23921  000DDC  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23922  000DE0  0102               	movlb	2	; () banked
 23923  000DE2  51E2               	movf	(_loRa+226)& (0+255),w,b
 23924  000DE4  EC23  F041         	call	_SwTimerSetTimeout
 23925                           
 23926                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 23927  000DE8  0102               	movlb	2	; () banked
 23928  000DEA  511C               	movf	(_loRa+28)& (0+255),w,b
 23929  000DEC  0D01               	mullw	1
 23930  000DEE  0E51               	movlw	low _rxWindowOffset
 23931  000DF0  24F3               	addwf	prodl,w,c
 23932  000DF2  6EF6               	movwf	tblptrl,c
 23933  000DF4  0EFF               	movlw	high _rxWindowOffset
 23934  000DF6  20F4               	addwfc	prodh,w,c
 23935  000DF8  6EF7               	movwf	tblptrh,c
 23936  000DFA                     	if	1	;There are 3 active tblptr bytes
 23937  000DFA  6AF8               	clrf	tblptru,c
 23938  000DFC  0E00               	movlw	low (__mediumconst shr (0+16))
 23939  000DFE  22F8               	addwfc	tblptru,f,c
 23940  000E00                     	endif
 23941  000E00  0008               	tblrd		*
 23942  000E02  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 23943  000E06  519A               	movf	(_loRa+154)& (0+255),w,b
 23944  000E08  0100               	movlb	0	; () banked
 23945  000E0A  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23946  000E0C  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23947  000E0E  0E00               	movlw	0
 23948  000E10  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 23949  000E12  0EFF               	movlw	255
 23950  000E14  0102               	movlb	2	; () banked
 23951  000E16  219B               	addwfc	(_loRa+155)& (0+255),w,b
 23952  000E18  0100               	movlb	0	; () banked
 23953  000E1A  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23954  000E1C  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 23955  000E1E  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23956  000E20  0E0C               	movlw	12
 23957  000E22                     u18905:
 23958  000E22  90D8               	bcf	status,0,c
 23959  000E24  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23960  000E26  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23961  000E28  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23962  000E2A  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23963  000E2C  2EE8               	decfsz	wreg,f,c
 23964  000E2E  D7F9               	goto	u18905
 23965  000E30  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 23966  000E34  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 23967  000E38  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 23968  000E3C  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 23969  000E40  0E7D               	movlw	125
 23970  000E42  6F64               	movwf	___lldiv@divisor& (0+255),b
 23971  000E44  0E00               	movlw	0
 23972  000E46  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23973  000E48  0E00               	movlw	0
 23974  000E4A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23975  000E4C  0E00               	movlw	0
 23976  000E4E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23977  000E50  ECB4  F039         	call	___lldiv	;wreg free
 23978  000E54  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23979  000E58  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23980  000E5C  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23981  000E60  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23982  000E64  0102               	movlb	2	; () banked
 23983  000E66  51E3               	movf	(_loRa+227)& (0+255),w,b
 23984  000E68  EC23  F041         	call	_SwTimerSetTimeout
 23985                           
 23986                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 23987  000E6C  0102               	movlb	2	; () banked
 23988  000E6E  51E2               	movf	(_loRa+226)& (0+255),w,b
 23989  000E70  EC3B  F037         	call	_SwTimerStart
 23990                           
 23991                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 23992  000E74  0102               	movlb	2	; () banked
 23993  000E76  51E3               	movf	(_loRa+227)& (0+255),w,b
 23994  000E78  EC3B  F037         	call	_SwTimerStart
 23995                           
 23996                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 23997  000E7C  C2DB  F09A         	movff	_loRa+219,___lmul@multiplier
 23998  000E80  C2DC  F09B         	movff	_loRa+220,___lmul@multiplier+1
 23999  000E84  0100               	movlb	0	; () banked
 24000  000E86  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 24001  000E88  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 24002  000E8A  0ED6               	movlw	214
 24003  000E8C  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 24004  000E8E  0E0B               	movlw	11
 24005  000E90  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 24006  000E92  0E00               	movlw	0
 24007  000E94  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 24008  000E96  0E00               	movlw	0
 24009  000E98  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 24010  000E9A  EC72  F03E         	call	___lmul	;wreg free
 24011  000E9E  0EFF               	movlw	255
 24012  000EA0  0100               	movlb	0	; () banked
 24013  000EA2  259A               	addwf	?___lmul& (0+255),w,b
 24014  000EA4  6FD6               	movwf	_LORAWAN_TxDone$5688& (0+255),b
 24015  000EA6  0EFF               	movlw	255
 24016  000EA8  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 24017  000EAA  6FD7               	movwf	(_LORAWAN_TxDone$5688+1)& (0+255),b
 24018  000EAC  0EFF               	movlw	255
 24019  000EAE  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 24020  000EB0  6FD8               	movwf	(_LORAWAN_TxDone$5688+2)& (0+255),b
 24021  000EB2  0EFF               	movlw	255
 24022  000EB4  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 24023  000EB6  6FD9               	movwf	(_LORAWAN_TxDone$5688+3)& (0+255),b
 24024                           
 24025                           ; BSR set to: 0
 24026                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 24027  000EB8  C0D6  F09A         	movff	_LORAWAN_TxDone$5688,___lmul@multiplier
 24028  000EBC  C0D7  F09B         	movff	_LORAWAN_TxDone$5688+1,___lmul@multiplier+1
 24029  000EC0  C0D8  F09C         	movff	_LORAWAN_TxDone$5688+2,___lmul@multiplier+2
 24030  000EC4  C0D9  F09D         	movff	_LORAWAN_TxDone$5688+3,___lmul@multiplier+3
 24031  000EC8  C0BB  F09E         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 24032  000ECC  C0BC  F09F         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 24033  000ED0  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 24034  000ED2  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 24035  000ED4  EC72  F03E         	call	___lmul	;wreg free
 24036  000ED8  D0D7               	goto	L15
 24037  000EDA                     l1029:
 24038                           
 24039                           ;lorawan_eu.c: 390: else
 24040                           ;lorawan_eu.c: 391: {
 24041                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 24042                           
 24043                           ; BSR set to: 0
 24044  000EDA  0102               	movlb	2	; () banked
 24045  000EDC  5117               	movf	(_loRa+23)& (0+255),w,b
 24046  000EDE  0D01               	mullw	1
 24047  000EE0  0E51               	movlw	low _rxWindowOffset
 24048  000EE2  24F3               	addwf	prodl,w,c
 24049  000EE4  6EF6               	movwf	tblptrl,c
 24050  000EE6  0EFF               	movlw	high _rxWindowOffset
 24051  000EE8  20F4               	addwfc	prodh,w,c
 24052  000EEA  6EF7               	movwf	tblptrh,c
 24053  000EEC                     	if	1	;There are 3 active tblptr bytes
 24054  000EEC  6AF8               	clrf	tblptru,c
 24055  000EEE  0E00               	movlw	low (__mediumconst shr (0+16))
 24056  000EF0  22F8               	addwfc	tblptru,f,c
 24057  000EF2                     	endif
 24058  000EF2  0008               	tblrd		*
 24059  000EF4  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 24060  000EF8  5194               	movf	(_loRa+148)& (0+255),w,b
 24061  000EFA  0100               	movlb	0	; () banked
 24062  000EFC  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 24063  000EFE  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 24064  000F00  0E00               	movlw	0
 24065  000F02  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 24066  000F04  0EFF               	movlw	255
 24067  000F06  0102               	movlb	2	; () banked
 24068  000F08  2195               	addwfc	(_loRa+149)& (0+255),w,b
 24069  000F0A  0100               	movlb	0	; () banked
 24070  000F0C  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 24071  000F0E  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 24072  000F10  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 24073  000F12  0E0C               	movlw	12
 24074  000F14                     u18915:
 24075  000F14  90D8               	bcf	status,0,c
 24076  000F16  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 24077  000F18  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 24078  000F1A  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 24079  000F1C  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 24080  000F1E  2EE8               	decfsz	wreg,f,c
 24081  000F20  D7F9               	goto	u18915
 24082  000F22  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 24083  000F26  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 24084  000F2A  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 24085  000F2E  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 24086  000F32  0E7D               	movlw	125
 24087  000F34  6F64               	movwf	___lldiv@divisor& (0+255),b
 24088  000F36  0E00               	movlw	0
 24089  000F38  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 24090  000F3A  0E00               	movlw	0
 24091  000F3C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 24092  000F3E  0E00               	movlw	0
 24093  000F40  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 24094  000F42  ECB4  F039         	call	___lldiv	;wreg free
 24095  000F46  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 24096  000F4A  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 24097  000F4E  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 24098  000F52  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 24099  000F56  0102               	movlb	2	; () banked
 24100  000F58  51E4               	movf	(_loRa+228)& (0+255),w,b
 24101  000F5A  EC23  F041         	call	_SwTimerSetTimeout
 24102                           
 24103                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 24104  000F5E  0102               	movlb	2	; () banked
 24105  000F60  511C               	movf	(_loRa+28)& (0+255),w,b
 24106  000F62  0D01               	mullw	1
 24107  000F64  0E51               	movlw	low _rxWindowOffset
 24108  000F66  24F3               	addwf	prodl,w,c
 24109  000F68  6EF6               	movwf	tblptrl,c
 24110  000F6A  0EFF               	movlw	high _rxWindowOffset
 24111  000F6C  20F4               	addwfc	prodh,w,c
 24112  000F6E  6EF7               	movwf	tblptrh,c
 24113  000F70                     	if	1	;There are 3 active tblptr bytes
 24114  000F70  6AF8               	clrf	tblptru,c
 24115  000F72  0E00               	movlw	low (__mediumconst shr (0+16))
 24116  000F74  22F8               	addwfc	tblptru,f,c
 24117  000F76                     	endif
 24118  000F76  0008               	tblrd		*
 24119  000F78  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 24120  000F7C  5196               	movf	(_loRa+150)& (0+255),w,b
 24121  000F7E  0100               	movlb	0	; () banked
 24122  000F80  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 24123  000F82  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 24124  000F84  0E00               	movlw	0
 24125  000F86  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 24126  000F88  0EFF               	movlw	255
 24127  000F8A  0102               	movlb	2	; () banked
 24128  000F8C  2197               	addwfc	(_loRa+151)& (0+255),w,b
 24129  000F8E  0100               	movlb	0	; () banked
 24130  000F90  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 24131  000F92  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 24132  000F94  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 24133  000F96  0E0C               	movlw	12
 24134  000F98                     u18925:
 24135  000F98  90D8               	bcf	status,0,c
 24136  000F9A  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 24137  000F9C  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 24138  000F9E  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 24139  000FA0  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 24140  000FA2  2EE8               	decfsz	wreg,f,c
 24141  000FA4  D7F9               	goto	u18925
 24142  000FA6  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 24143  000FAA  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 24144  000FAE  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 24145  000FB2  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 24146  000FB6  0E7D               	movlw	125
 24147  000FB8  6F64               	movwf	___lldiv@divisor& (0+255),b
 24148  000FBA  0E00               	movlw	0
 24149  000FBC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 24150  000FBE  0E00               	movlw	0
 24151  000FC0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 24152  000FC2  0E00               	movlw	0
 24153  000FC4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 24154  000FC6  ECB4  F039         	call	___lldiv	;wreg free
 24155  000FCA  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 24156  000FCE  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 24157  000FD2  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 24158  000FD6  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 24159  000FDA  0102               	movlb	2	; () banked
 24160  000FDC  51E5               	movf	(_loRa+229)& (0+255),w,b
 24161  000FDE  EC23  F041         	call	_SwTimerSetTimeout
 24162                           
 24163                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 24164  000FE2  0102               	movlb	2	; () banked
 24165  000FE4  51E4               	movf	(_loRa+228)& (0+255),w,b
 24166  000FE6  EC3B  F037         	call	_SwTimerStart
 24167                           
 24168                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 24169  000FEA  0102               	movlb	2	; () banked
 24170  000FEC  5112               	movf	(_loRa+18)& (0+255),w,b
 24171  000FEE  A4D8               	btfss	status,2,c
 24172  000FF0  D003               	goto	l1031
 24173                           
 24174                           ; BSR set to: 2
 24175                           ;lorawan_eu.c: 396: {
 24176                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 24177  000FF2  51E5               	movf	(_loRa+229)& (0+255),w,b
 24178  000FF4  EC3B  F037         	call	_SwTimerStart
 24179  000FF8                     l1031:
 24180                           
 24181                           ;lorawan_eu.c: 398: }
 24182                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 24183  000FF8  0100               	movlb	0	; () banked
 24184  000FFA  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 24185  000FFC  0D0E               	mullw	14
 24186  000FFE  0E06               	movlw	6
 24187  001000  26F3               	addwf	prodl,f,c
 24188  001002  0E00               	movlw	0
 24189  001004  22F4               	addwfc	prodh,f,c
 24190  001006  0E00               	movlw	low _Channels
 24191  001008  24F3               	addwf	prodl,w,c
 24192  00100A  6ED9               	movwf	fsr2l,c
 24193  00100C  0E04               	movlw	high _Channels
 24194  00100E  20F4               	addwfc	prodh,w,c
 24195  001010  6EDA               	movwf	fsr2h,c
 24196  001012  CFDE F0BD          	movff	postinc2,??_LORAWAN_TxDone
 24197  001016  CFDD F0BE          	movff	postdec2,??_LORAWAN_TxDone+1
 24198  00101A  51BD               	movf	??_LORAWAN_TxDone& (0+255),w,b
 24199  00101C  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 24200  00101E  51BE               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 24201  001020  6FC0               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 24202  001022  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 24203  001024  6BC2               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 24204  001026  0E01               	movlw	1
 24205  001028  25BF               	addwf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 24206  00102A  6F9A               	movwf	___lmul@multiplier& (0+255),b
 24207  00102C  0E00               	movlw	0
 24208  00102E  21C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 24209  001030  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 24210  001032  0E00               	movlw	0
 24211  001034  21C1               	addwfc	(??_LORAWAN_TxDone+4)& (0+255),w,b
 24212  001036  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 24213  001038  0E00               	movlw	0
 24214  00103A  21C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 24215  00103C  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 24216  00103E  C2DB  F09E         	movff	_loRa+219,___lmul@multiplicand
 24217  001042  C2DC  F09F         	movff	_loRa+220,___lmul@multiplicand+1
 24218  001046  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 24219  001048  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 24220  00104A  EC72  F03E         	call	___lmul	;wreg free
 24221  00104E  0EFF               	movlw	255
 24222  001050  0100               	movlb	0	; () banked
 24223  001052  259A               	addwf	?___lmul& (0+255),w,b
 24224  001054  6FD6               	movwf	_LORAWAN_TxDone$5688& (0+255),b
 24225  001056  0EFF               	movlw	255
 24226  001058  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 24227  00105A  6FD7               	movwf	(_LORAWAN_TxDone$5688+1)& (0+255),b
 24228  00105C  0EFF               	movlw	255
 24229  00105E  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 24230  001060  6FD8               	movwf	(_LORAWAN_TxDone$5688+2)& (0+255),b
 24231  001062  0EFF               	movlw	255
 24232  001064  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 24233  001066  6FD9               	movwf	(_LORAWAN_TxDone$5688+3)& (0+255),b
 24234                           
 24235                           ;lorawan_eu.c: 398: }
 24236                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 24237  001068  C0D6  F09A         	movff	_LORAWAN_TxDone$5688,___lmul@multiplier
 24238  00106C  C0D7  F09B         	movff	_LORAWAN_TxDone$5688+1,___lmul@multiplier+1
 24239  001070  C0D8  F09C         	movff	_LORAWAN_TxDone$5688+2,___lmul@multiplier+2
 24240  001074  C0D9  F09D         	movff	_LORAWAN_TxDone$5688+3,___lmul@multiplier+3
 24241  001078  C0BB  F09E         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 24242  00107C  C0BC  F09F         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 24243  001080  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 24244  001082  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 24245  001084  EC72  F03E         	call	___lmul	;wreg free
 24246  001088                     L15:
 24247  001088  0100               	movlb	0	; () banked
 24248  00108A  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 24249  00108C  0D0E               	mullw	14
 24250  00108E  0E08               	movlw	8
 24251  001090  26F3               	addwf	prodl,f,c
 24252  001092  0E00               	movlw	0
 24253  001094  22F4               	addwfc	prodh,f,c
 24254  001096  0E00               	movlw	low _Channels
 24255  001098  24F3               	addwf	prodl,w,c
 24256  00109A  6ED9               	movwf	fsr2l,c
 24257  00109C  0E04               	movlw	high _Channels
 24258  00109E  20F4               	addwfc	prodh,w,c
 24259  0010A0  6EDA               	movwf	fsr2h,c
 24260  0010A2  C09A  FFDE         	movff	?___lmul,postinc2
 24261  0010A6  C09B  FFDE         	movff	?___lmul+1,postinc2
 24262  0010AA  C09C  FFDE         	movff	?___lmul+2,postinc2
 24263  0010AE  C09D  FFDE         	movff	?___lmul+3,postinc2
 24264                           
 24265                           ; BSR set to: 0
 24266                           ;lorawan_eu.c: 401: }
 24267                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 24268  0010B2  0102               	movlb	2	; () banked
 24269  0010B4  51E9               	movf	(_loRa+233)& (0+255),w,b
 24270  0010B6  EC7F  F043         	call	_SwTimerIsRunning
 24271  0010BA  0900               	iorlw	0
 24272  0010BC  B4D8               	btfsc	status,2,c
 24273  0010BE  D08A               	goto	l1032
 24274                           
 24275                           ;lorawan_eu.c: 404: {
 24276                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 24277  0010C0  0102               	movlb	2	; () banked
 24278  0010C2  51E9               	movf	(_loRa+233)& (0+255),w,b
 24279  0010C4  ECF9  F043         	call	_SwTimerStop
 24280                           
 24281                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 24282  0010C8  0102               	movlb	2	; () banked
 24283  0010CA  51E9               	movf	(_loRa+233)& (0+255),w,b
 24284  0010CC  ECA8  F041         	call	_SwTimerReadValue
 24285  0010D0  C091  F0DA         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 24286  0010D4  C092  F0DB         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 24287  0010D8  C093  F0DC         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 24288  0010DC  C094  F0DD         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 24289                           
 24290                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 24291  0010E0  0100               	movlb	0	; () banked
 24292  0010E2  51DD               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 24293  0010E4  E108               	bnz	u18950
 24294  0010E6  0E1F               	movlw	31
 24295  0010E8  5DDA               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 24296  0010EA  0EAC               	movlw	172
 24297  0010EC  59DB               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 24298  0010EE  0EDF               	movlw	223
 24299  0010F0  59DC               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 24300  0010F2  A0D8               	btfss	status,0,c
 24301  0010F4  D024               	goto	l1034
 24302  0010F6                     u18950:
 24303                           
 24304                           ; BSR set to: 0
 24305  0010F6  C0DA  F0BD         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 24306  0010FA  C0DB  F0BE         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 24307  0010FE  C0DC  F0BF         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 24308  001102  C0DD  F0C0         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 24309  001106  0E0D               	movlw	13
 24310  001108  D005               	goto	u18960
 24311  00110A                     u18965:
 24312  00110A  90D8               	bcf	status,0,c
 24313  00110C  33C0               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 24314  00110E  33BF               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 24315  001110  33BE               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 24316  001112  33BD               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 24317  001114                     u18960:
 24318  001114  2EE8               	decfsz	wreg,f,c
 24319  001116  D7F9               	goto	u18965
 24320  001118  C0BD  F09A         	movff	??_LORAWAN_TxDone,___lmul@multiplier
 24321  00111C  C0BE  F09B         	movff	??_LORAWAN_TxDone+1,___lmul@multiplier+1
 24322  001120  C0BF  F09C         	movff	??_LORAWAN_TxDone+2,___lmul@multiplier+2
 24323  001124  C0C0  F09D         	movff	??_LORAWAN_TxDone+3,___lmul@multiplier+3
 24324  001128  0E7D               	movlw	125
 24325  00112A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 24326  00112C  0E00               	movlw	0
 24327  00112E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 24328  001130  0E00               	movlw	0
 24329  001132  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 24330  001134  0E00               	movlw	0
 24331  001136  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 24332  001138  EC72  F03E         	call	___lmul	;wreg free
 24333  00113C  D01D               	goto	L16
 24334  00113E                     l1034:
 24335  00113E  C0DA  F09A         	movff	LORAWAN_TxDone@ticks,___lmul@multiplier
 24336  001142  C0DB  F09B         	movff	LORAWAN_TxDone@ticks+1,___lmul@multiplier+1
 24337  001146  C0DC  F09C         	movff	LORAWAN_TxDone@ticks+2,___lmul@multiplier+2
 24338  00114A  C0DD  F09D         	movff	LORAWAN_TxDone@ticks+3,___lmul@multiplier+3
 24339  00114E  0E7D               	movlw	125
 24340  001150  0100               	movlb	0	; () banked
 24341  001152  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 24342  001154  0E00               	movlw	0
 24343  001156  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 24344  001158  0E00               	movlw	0
 24345  00115A  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 24346  00115C  0E00               	movlw	0
 24347  00115E  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 24348  001160  EC72  F03E         	call	___lmul	;wreg free
 24349  001164  0E0D               	movlw	13
 24350  001166  D006               	goto	u18970
 24351  001168                     u18975:
 24352  001168  0100               	movlb	0	; () banked
 24353  00116A  90D8               	bcf	status,0,c
 24354  00116C  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 24355  00116E  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 24356  001170  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 24357  001172  339A               	rrcf	?___lmul& (0+255),f,b
 24358  001174                     u18970:
 24359  001174  2EE8               	decfsz	wreg,f,c
 24360  001176  D7F8               	goto	u18975
 24361  001178                     L16:
 24362  001178  C09A  F0C9         	movff	?___lmul,_LORAWAN_TxDone$1666
 24363  00117C  C09B  F0CA         	movff	?___lmul+1,_LORAWAN_TxDone$1666+1
 24364  001180  C09C  F0CB         	movff	?___lmul+2,_LORAWAN_TxDone$1666+2
 24365  001184  C09D  F0CC         	movff	?___lmul+3,_LORAWAN_TxDone$1666+3
 24366                           
 24367                           ; BSR set to: 0
 24368  001188  C0C9  F0BD         	movff	_LORAWAN_TxDone$1666,??_LORAWAN_TxDone
 24369  00118C  C0CA  F0BE         	movff	_LORAWAN_TxDone$1666+1,??_LORAWAN_TxDone+1
 24370  001190  C0CB  F0BF         	movff	_LORAWAN_TxDone$1666+2,??_LORAWAN_TxDone+2
 24371  001194  C0CC  F0C0         	movff	_LORAWAN_TxDone$1666+3,??_LORAWAN_TxDone+3
 24372  001198  0100               	movlb	0	; () banked
 24373  00119A  1FBD               	comf	??_LORAWAN_TxDone& (0+255),f,b
 24374  00119C  1FBE               	comf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 24375  00119E  1FBF               	comf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 24376  0011A0  1FC0               	comf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 24377  0011A2  2BBD               	incf	??_LORAWAN_TxDone& (0+255),f,b
 24378  0011A4  0E00               	movlw	0
 24379  0011A6  23BE               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),f,b
 24380  0011A8  23BF               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),f,b
 24381  0011AA  23C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),f,b
 24382  0011AC  0102               	movlb	2	; () banked
 24383  0011AE  51C8               	movf	(_loRa+200)& (0+255),w,b
 24384  0011B0  0100               	movlb	0	; () banked
 24385  0011B2  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 24386  0011B4  6FD2               	movwf	LORAWAN_TxDone@delta& (0+255),b
 24387  0011B6  0102               	movlb	2	; () banked
 24388  0011B8  51C9               	movf	(_loRa+201)& (0+255),w,b
 24389  0011BA  0100               	movlb	0	; () banked
 24390  0011BC  21BE               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),w,b
 24391  0011BE  6FD3               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 24392  0011C0  0102               	movlb	2	; () banked
 24393  0011C2  51CA               	movf	(_loRa+202)& (0+255),w,b
 24394  0011C4  0100               	movlb	0	; () banked
 24395  0011C6  21BF               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),w,b
 24396  0011C8  6FD4               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 24397  0011CA  0102               	movlb	2	; () banked
 24398  0011CC  51CB               	movf	(_loRa+203)& (0+255),w,b
 24399  0011CE  0100               	movlb	0	; () banked
 24400  0011D0  21C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 24401  0011D2  6FD5               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 24402  0011D4                     l1032:
 24403                           
 24404                           ;lorawan_eu.c: 409: }
 24405                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 24406                           
 24407                           ; BSR set to: 0
 24408  0011D4  0E00               	movlw	0
 24409  0011D6  0100               	movlb	0	; () banked
 24410  0011D8  6FE2               	movwf	LORAWAN_TxDone@i& (0+255),b
 24411  0011DA                     l15893:
 24412                           
 24413                           ; BSR set to: 0
 24414  0011DA  0E0F               	movlw	15
 24415  0011DC  65E2               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 24416  0011DE  D001               	goto	l1037
 24417  0011E0  D0D4               	goto	u19050
 24418  0011E2                     l1037:
 24419                           
 24420                           ; BSR set to: 0
 24421                           ;lorawan_eu.c: 412: {
 24422                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 24423                           
 24424                           ; BSR set to: 0
 24425  0011E2  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 24426  0011E4  0D0E               	mullw	14
 24427  0011E6  0E04               	movlw	4
 24428  0011E8  26F3               	addwf	prodl,f,c
 24429  0011EA  0E00               	movlw	0
 24430  0011EC  22F4               	addwfc	prodh,f,c
 24431  0011EE  0E00               	movlw	low _Channels
 24432  0011F0  24F3               	addwf	prodl,w,c
 24433  0011F2  6ED9               	movwf	fsr2l,c
 24434  0011F4  0E04               	movlw	high _Channels
 24435  0011F6  20F4               	addwfc	prodh,w,c
 24436  0011F8  6EDA               	movwf	fsr2h,c
 24437  0011FA  04DE               	decf	postinc2,w,c
 24438  0011FC  A4D8               	btfss	status,2,c
 24439  0011FE  D0C3               	goto	l1043
 24440                           
 24441                           ; BSR set to: 0
 24442  001200  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 24443  001202  0D0E               	mullw	14
 24444  001204  0E08               	movlw	8
 24445  001206  26F3               	addwf	prodl,f,c
 24446  001208  0E00               	movlw	0
 24447  00120A  22F4               	addwfc	prodh,f,c
 24448  00120C  0E00               	movlw	low _Channels
 24449  00120E  24F3               	addwf	prodl,w,c
 24450  001210  6ED9               	movwf	fsr2l,c
 24451  001212  0E04               	movlw	high _Channels
 24452  001214  20F4               	addwfc	prodh,w,c
 24453  001216  6EDA               	movwf	fsr2h,c
 24454  001218  50DE               	movf	postinc2,w,c
 24455  00121A  10DE               	iorwf	postinc2,w,c
 24456  00121C  10DE               	iorwf	postinc2,w,c
 24457  00121E  10DE               	iorwf	postinc2,w,c
 24458  001220  B4D8               	btfsc	status,2,c
 24459  001222  D0B1               	goto	l1043
 24460                           
 24461                           ; BSR set to: 0
 24462                           ;lorawan_eu.c: 414: {
 24463                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 24464  001224  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 24465  001226  0102               	movlb	2	; () banked
 24466  001228  19DA               	xorwf	(_loRa+218)& (0+255),w,b
 24467  00122A  B4D8               	btfsc	status,2,c
 24468  00122C  D06D               	goto	l1042
 24469                           
 24470                           ; BSR set to: 2
 24471                           ;lorawan_eu.c: 416: {
 24472                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 24473  00122E  0100               	movlb	0	; () banked
 24474  001230  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 24475  001232  0D0E               	mullw	14
 24476  001234  0E08               	movlw	8
 24477  001236  26F3               	addwf	prodl,f,c
 24478  001238  0E00               	movlw	0
 24479  00123A  22F4               	addwfc	prodh,f,c
 24480  00123C  0E00               	movlw	low _Channels
 24481  00123E  24F3               	addwf	prodl,w,c
 24482  001240  6ED9               	movwf	fsr2l,c
 24483  001242  0E04               	movlw	high _Channels
 24484  001244  20F4               	addwfc	prodh,w,c
 24485  001246  6EDA               	movwf	fsr2h,c
 24486  001248  50DE               	movf	postinc2,w,c
 24487  00124A  5DD2               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 24488  00124C  50DE               	movf	postinc2,w,c
 24489  00124E  59D3               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 24490  001250  50DE               	movf	postinc2,w,c
 24491  001252  59D4               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 24492  001254  50DE               	movf	postinc2,w,c
 24493  001256  59D5               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 24494  001258  B0D8               	btfsc	status,0,c
 24495  00125A  D046               	goto	l1041
 24496                           
 24497                           ; BSR set to: 0
 24498                           ;lorawan_eu.c: 418: {
 24499                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 24500  00125C  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 24501  00125E  0D0E               	mullw	14
 24502  001260  0E08               	movlw	8
 24503  001262  26F3               	addwf	prodl,f,c
 24504  001264  0E00               	movlw	0
 24505  001266  22F4               	addwfc	prodh,f,c
 24506  001268  0E00               	movlw	low _Channels
 24507  00126A  24F3               	addwf	prodl,w,c
 24508  00126C  6ED9               	movwf	fsr2l,c
 24509  00126E  0E04               	movlw	high _Channels
 24510  001270  20F4               	addwfc	prodh,w,c
 24511  001272  6EDA               	movwf	fsr2h,c
 24512  001274  CFDE F0BD          	movff	postinc2,??_LORAWAN_TxDone
 24513  001278  CFDE F0BE          	movff	postinc2,??_LORAWAN_TxDone+1
 24514  00127C  CFDE F0BF          	movff	postinc2,??_LORAWAN_TxDone+2
 24515  001280  CFDE F0C0          	movff	postinc2,??_LORAWAN_TxDone+3
 24516  001284  C0D2  F0C1         	movff	LORAWAN_TxDone@delta,??_LORAWAN_TxDone+4
 24517  001288  C0D3  F0C2         	movff	LORAWAN_TxDone@delta+1,??_LORAWAN_TxDone+5
 24518  00128C  C0D4  F0C3         	movff	LORAWAN_TxDone@delta+2,??_LORAWAN_TxDone+6
 24519  001290  C0D5  F0C4         	movff	LORAWAN_TxDone@delta+3,??_LORAWAN_TxDone+7
 24520  001294  1FC1               	comf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 24521  001296  1FC2               	comf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 24522  001298  1FC3               	comf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 24523  00129A  1FC4               	comf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 24524  00129C  2BC1               	incf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 24525  00129E  0E00               	movlw	0
 24526  0012A0  23C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),f,b
 24527  0012A2  23C3               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 24528  0012A4  23C4               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 24529  0012A6  51BD               	movf	??_LORAWAN_TxDone& (0+255),w,b
 24530  0012A8  25C1               	addwf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 24531  0012AA  6FC5               	movwf	(??_LORAWAN_TxDone+8)& (0+255),b
 24532  0012AC  51BE               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 24533  0012AE  21C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 24534  0012B0  6FC6               	movwf	(??_LORAWAN_TxDone+9)& (0+255),b
 24535  0012B2  51BF               	movf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 24536  0012B4  21C3               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),w,b
 24537  0012B6  6FC7               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 24538  0012B8  51C0               	movf	(??_LORAWAN_TxDone+3)& (0+255),w,b
 24539  0012BA  21C4               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 24540  0012BC  6FC8               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 24541  0012BE  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 24542  0012C0  0D0E               	mullw	14
 24543  0012C2  0E08               	movlw	8
 24544  0012C4  26F3               	addwf	prodl,f,c
 24545  0012C6  0E00               	movlw	0
 24546  0012C8  22F4               	addwfc	prodh,f,c
 24547  0012CA  0E00               	movlw	low _Channels
 24548  0012CC  24F3               	addwf	prodl,w,c
 24549  0012CE  6ED9               	movwf	fsr2l,c
 24550  0012D0  0E04               	movlw	high _Channels
 24551  0012D2  20F4               	addwfc	prodh,w,c
 24552  0012D4  6EDA               	movwf	fsr2h,c
 24553  0012D6  C0C5  FFDE         	movff	??_LORAWAN_TxDone+8,postinc2
 24554  0012DA  C0C6  FFDE         	movff	??_LORAWAN_TxDone+9,postinc2
 24555  0012DE  C0C7  FFDE         	movff	??_LORAWAN_TxDone+10,postinc2
 24556  0012E2  C0C8  FFDE         	movff	??_LORAWAN_TxDone+11,postinc2
 24557                           
 24558                           ;lorawan_eu.c: 420: }
 24559  0012E6  D010               	goto	l1042
 24560  0012E8                     l1041:
 24561                           
 24562                           ; BSR set to: 0
 24563                           ;lorawan_eu.c: 421: else
 24564                           ;lorawan_eu.c: 422: {
 24565                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 24566                           
 24567                           ; BSR set to: 0
 24568  0012E8  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 24569  0012EA  0D0E               	mullw	14
 24570  0012EC  0E08               	movlw	8
 24571  0012EE  26F3               	addwf	prodl,f,c
 24572  0012F0  0E00               	movlw	0
 24573  0012F2  22F4               	addwfc	prodh,f,c
 24574  0012F4  0E00               	movlw	low _Channels
 24575  0012F6  24F3               	addwf	prodl,w,c
 24576  0012F8  6ED9               	movwf	fsr2l,c
 24577  0012FA  0E04               	movlw	high _Channels
 24578  0012FC  20F4               	addwfc	prodh,w,c
 24579  0012FE  6EDA               	movwf	fsr2h,c
 24580  001300  6ADE               	clrf	postinc2,c
 24581  001302  6ADE               	clrf	postinc2,c
 24582  001304  6ADE               	clrf	postinc2,c
 24583  001306  6ADD               	clrf	postdec2,c
 24584  001308                     l1042:
 24585                           
 24586                           ;lorawan_eu.c: 424: }
 24587                           ;lorawan_eu.c: 425: }
 24588                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 24589                           
 24590                           ; BSR set to: 0
 24591  001308  0100               	movlb	0	; () banked
 24592  00130A  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 24593  00130C  0D0E               	mullw	14
 24594  00130E  0E08               	movlw	8
 24595  001310  26F3               	addwf	prodl,f,c
 24596  001312  0E00               	movlw	0
 24597  001314  22F4               	addwfc	prodh,f,c
 24598  001316  0E00               	movlw	low _Channels
 24599  001318  24F3               	addwf	prodl,w,c
 24600  00131A  6ED9               	movwf	fsr2l,c
 24601  00131C  0E04               	movlw	high _Channels
 24602  00131E  20F4               	addwfc	prodh,w,c
 24603  001320  6EDA               	movwf	fsr2h,c
 24604  001322  50DE               	movf	postinc2,w,c
 24605  001324  5DDE               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 24606  001326  50DE               	movf	postinc2,w,c
 24607  001328  59DF               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 24608  00132A  50DE               	movf	postinc2,w,c
 24609  00132C  59E0               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 24610  00132E  50DE               	movf	postinc2,w,c
 24611  001330  59E1               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 24612  001332  A0D8               	btfss	status,0,c
 24613  001334  D028               	goto	l1043
 24614                           
 24615                           ; BSR set to: 0
 24616  001336  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 24617  001338  0D0E               	mullw	14
 24618  00133A  0E08               	movlw	8
 24619  00133C  26F3               	addwf	prodl,f,c
 24620  00133E  0E00               	movlw	0
 24621  001340  22F4               	addwfc	prodh,f,c
 24622  001342  0E00               	movlw	low _Channels
 24623  001344  24F3               	addwf	prodl,w,c
 24624  001346  6ED9               	movwf	fsr2l,c
 24625  001348  0E04               	movlw	high _Channels
 24626  00134A  20F4               	addwfc	prodh,w,c
 24627  00134C  6EDA               	movwf	fsr2h,c
 24628  00134E  50DE               	movf	postinc2,w,c
 24629  001350  10DE               	iorwf	postinc2,w,c
 24630  001352  10DE               	iorwf	postinc2,w,c
 24631  001354  10DE               	iorwf	postinc2,w,c
 24632  001356  B4D8               	btfsc	status,2,c
 24633  001358  D016               	goto	l1043
 24634                           
 24635                           ; BSR set to: 0
 24636                           ;lorawan_eu.c: 427: {
 24637                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 24638  00135A  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 24639  00135C  0D0E               	mullw	14
 24640  00135E  0E08               	movlw	8
 24641  001360  26F3               	addwf	prodl,f,c
 24642  001362  0E00               	movlw	0
 24643  001364  22F4               	addwfc	prodh,f,c
 24644  001366  0E00               	movlw	low _Channels
 24645  001368  24F3               	addwf	prodl,w,c
 24646  00136A  6ED9               	movwf	fsr2l,c
 24647  00136C  0E04               	movlw	high _Channels
 24648  00136E  20F4               	addwfc	prodh,w,c
 24649  001370  6EDA               	movwf	fsr2h,c
 24650  001372  CFDE F0DE          	movff	postinc2,LORAWAN_TxDone@minim
 24651  001376  CFDE F0DF          	movff	postinc2,LORAWAN_TxDone@minim+1
 24652  00137A  CFDE F0E0          	movff	postinc2,LORAWAN_TxDone@minim+2
 24653  00137E  CFDE F0E1          	movff	postinc2,LORAWAN_TxDone@minim+3
 24654                           
 24655                           ; BSR set to: 0
 24656                           ;lorawan_eu.c: 429: found = 1;
 24657  001382  0E01               	movlw	1
 24658  001384  6FD1               	movwf	LORAWAN_TxDone@found& (0+255),b
 24659  001386                     l1043:
 24660                           
 24661                           ; BSR set to: 0
 24662                           
 24663                           ; BSR set to: 0
 24664                           
 24665                           ; BSR set to: 0
 24666  001386  2BE2               	incf	LORAWAN_TxDone@i& (0+255),f,b
 24667  001388  D728               	goto	l15893
 24668  00138A                     u19050:
 24669                           
 24670                           ; BSR set to: 0
 24671                           ;lorawan_eu.c: 430: }
 24672                           ;lorawan_eu.c: 431: }
 24673                           ;lorawan_eu.c: 432: }
 24674                           ;lorawan_eu.c: 433: if (found == 1)
 24675                           
 24676                           ; BSR set to: 0
 24677  00138A  05D1               	decf	LORAWAN_TxDone@found& (0+255),w,b
 24678  00138C  A4D8               	btfss	status,2,c
 24679  00138E  D067               	goto	l1044
 24680                           
 24681                           ; BSR set to: 0
 24682                           ;lorawan_eu.c: 434: {
 24683                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 24684  001390  C0DE  F2C8         	movff	LORAWAN_TxDone@minim,_loRa+200
 24685  001394  C0DF  F2C9         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 24686  001398  C0E0  F2CA         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 24687  00139C  C0E1  F2CB         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 24688                           
 24689                           ; BSR set to: 0
 24690                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 24691  0013A0  51E1               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 24692  0013A2  E107               	bnz	u19070
 24693  0013A4  29DE               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 24694  0013A6  0EFF               	movlw	255
 24695  0013A8  59DF               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 24696  0013AA  0E0F               	movlw	15
 24697  0013AC  59E0               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 24698  0013AE  A0D8               	btfss	status,0,c
 24699  0013B0  D01C               	goto	l1046
 24700  0013B2                     u19070:
 24701                           
 24702                           ; BSR set to: 0
 24703  0013B2  C0DE  F060         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 24704  0013B6  C0DF  F061         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 24705  0013BA  C0E0  F062         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 24706  0013BE  C0E1  F063         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 24707  0013C2  0E7D               	movlw	125
 24708  0013C4  6F64               	movwf	___lldiv@divisor& (0+255),b
 24709  0013C6  0E00               	movlw	0
 24710  0013C8  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 24711  0013CA  0E00               	movlw	0
 24712  0013CC  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 24713  0013CE  0E00               	movlw	0
 24714  0013D0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 24715  0013D2  ECB4  F039         	call	___lldiv	;wreg free
 24716  0013D6  0E0C               	movlw	12
 24717  0013D8                     u19085:
 24718  0013D8  90D8               	bcf	status,0,c
 24719  0013DA  0100               	movlb	0	; () banked
 24720  0013DC  3760               	rlcf	?___lldiv& (0+255),f,b
 24721  0013DE  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 24722  0013E0  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 24723  0013E2  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 24724  0013E4  2EE8               	decfsz	wreg,f,c
 24725  0013E6  D7F8               	goto	u19085
 24726  0013E8  D022               	goto	L17
 24727  0013EA                     l1046:
 24728                           
 24729                           ; BSR set to: 0
 24730                           
 24731                           ; BSR set to: 0
 24732  0013EA  C0DE  F0BD         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 24733  0013EE  C0DF  F0BE         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 24734  0013F2  C0E0  F0BF         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 24735  0013F6  C0E1  F0C0         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 24736  0013FA  0E0C               	movlw	12
 24737  0013FC                     u19095:
 24738  0013FC  90D8               	bcf	status,0,c
 24739  0013FE  37BD               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 24740  001400  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 24741  001402  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 24742  001404  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 24743  001406  2EE8               	decfsz	wreg,f,c
 24744  001408  D7F9               	goto	u19095
 24745  00140A  C0BD  F060         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 24746  00140E  C0BE  F061         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 24747  001412  C0BF  F062         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 24748  001416  C0C0  F063         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 24749  00141A  0E7D               	movlw	125
 24750  00141C  6F64               	movwf	___lldiv@divisor& (0+255),b
 24751  00141E  0E00               	movlw	0
 24752  001420  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 24753  001422  0E00               	movlw	0
 24754  001424  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 24755  001426  0E00               	movlw	0
 24756  001428  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 24757  00142A  ECB4  F039         	call	___lldiv	;wreg free
 24758  00142E                     L17:
 24759  00142E  C060  F0CD         	movff	?___lldiv,_LORAWAN_TxDone$1667
 24760  001432  C061  F0CE         	movff	?___lldiv+1,_LORAWAN_TxDone$1667+1
 24761  001436  C062  F0CF         	movff	?___lldiv+2,_LORAWAN_TxDone$1667+2
 24762  00143A  C063  F0D0         	movff	?___lldiv+3,_LORAWAN_TxDone$1667+3
 24763  00143E  C0CD  F06D         	movff	_LORAWAN_TxDone$1667,SwTimerSetTimeout@timeout
 24764  001442  C0CE  F06E         	movff	_LORAWAN_TxDone$1667+1,SwTimerSetTimeout@timeout+1
 24765  001446  C0CF  F06F         	movff	_LORAWAN_TxDone$1667+2,SwTimerSetTimeout@timeout+2
 24766  00144A  C0D0  F070         	movff	_LORAWAN_TxDone$1667+3,SwTimerSetTimeout@timeout+3
 24767  00144E  0102               	movlb	2	; () banked
 24768  001450  51E9               	movf	(_loRa+233)& (0+255),w,b
 24769  001452  EC23  F041         	call	_SwTimerSetTimeout
 24770                           
 24771                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 24772  001456  0102               	movlb	2	; () banked
 24773  001458  51E9               	movf	(_loRa+233)& (0+255),w,b
 24774  00145A  EC3B  F037         	call	_SwTimerStart
 24775  00145E                     l1044:
 24776                           
 24777                           ;lorawan_eu.c: 438: }
 24778                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 24779  00145E  0E02               	movlw	2
 24780  001460  0102               	movlb	2	; () banked
 24781  001462  1912               	xorwf	(_loRa+18)& (0+255),w,b
 24782  001464  A4D8               	btfss	status,2,c
 24783  001466  0012               	return	
 24784                           
 24785                           ; BSR set to: 2
 24786                           ;lorawan_eu.c: 440: {
 24787                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 24788  001468  5102               	movf	(_loRa+2)& (0+255),w,b
 24789  00146A  0BF0               	andlw	-16
 24790  00146C  0908               	iorlw	8
 24791  00146E  6F02               	movwf	(_loRa+2)& (0+255),b
 24792                           
 24793                           ; BSR set to: 2
 24794                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 24795  001470  EC76  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 24796                           
 24797                           ;lorawan_eu.c: 443: }
 24798                           ;lorawan_eu.c: 444: }
 24799  001474  0012               	return	
 24800  001476                     l1028:
 24801                           
 24802                           ;lorawan_eu.c: 445: else
 24803                           ;lorawan_eu.c: 446: {
 24804                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 24805  001476  ECB5  F046         	call	_RADIO_GetStatus	;wreg free
 24806  00147A  0100               	movlb	0	; () banked
 24807  00147C  6FBD               	movwf	??_LORAWAN_TxDone& (0+255),b
 24808  00147E  A9BD               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 24809  001480  D014               	goto	l1051
 24810                           
 24811                           ; BSR set to: 0
 24812                           ;lorawan_eu.c: 448: {
 24813                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 24814  001482  0E00               	movlw	0
 24815  001484  6F60               	movwf	RxData@pData& (0+255),b
 24816  001486  0E00               	movlw	0
 24817  001488  6F61               	movwf	(RxData@pData+1)& (0+255),b
 24818  00148A  0E00               	movlw	0
 24819  00148C  6F62               	movwf	RxData@dataLength& (0+255),b
 24820  00148E  0E02               	movlw	2
 24821  001490  6F63               	movwf	RxData@status& (0+255),b
 24822  001492  D801               	call	u19128
 24823  001494  0012               	return	
 24824  001496                     u19128:
 24825  001496  0005               	push	
 24826  001498  6EFA               	movwf	pclath,c
 24827  00149A  0101               	movlb	1	; () banked
 24828  00149C  5110               	movf	_rxPayload& (0+255),w,b
 24829  00149E  6EFD               	movwf	tosl,c
 24830  0014A0  5111               	movf	(_rxPayload+1)& (0+255),w,b
 24831  0014A2  6EFE               	movwf	tosh,c
 24832  0014A4  6AFF               	clrf	tosu,c
 24833  0014A6  50FA               	movf	pclath,w,c
 24834  0014A8  0012               	return		;indir
 24835  0014AA                     l1051:
 24836                           
 24837                           ;lorawan_eu.c: 452: else
 24838                           ;lorawan_eu.c: 453: {
 24839                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 24840  0014AA  0101               	movlb	1	; () banked
 24841  0014AC  5110               	movf	_rxPayload& (0+255),w,b
 24842  0014AE  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
 24843  0014B0  B4D8               	btfsc	status,2,c
 24844  0014B2  0012               	return	
 24845                           
 24846                           ; BSR set to: 1
 24847                           ;lorawan_eu.c: 456: {
 24848                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 24849  0014B4  0E00               	movlw	0
 24850  0014B6  0100               	movlb	0	; () banked
 24851  0014B8  6F60               	movwf	RxData@pData& (0+255),b
 24852  0014BA  0E00               	movlw	0
 24853  0014BC  6F61               	movwf	(RxData@pData+1)& (0+255),b
 24854  0014BE  0E00               	movlw	0
 24855  0014C0  6F62               	movwf	RxData@dataLength& (0+255),b
 24856  0014C2  0E03               	movlw	3
 24857  0014C4  6F63               	movwf	RxData@status& (0+255),b
 24858  0014C6  D801               	call	u19148
 24859  0014C8  0012               	return	
 24860  0014CA                     u19148:
 24861  0014CA  0005               	push	
 24862  0014CC  6EFA               	movwf	pclath,c
 24863  0014CE  0101               	movlb	1	; () banked
 24864  0014D0  5110               	movf	_rxPayload& (0+255),w,b
 24865  0014D2  6EFD               	movwf	tosl,c
 24866  0014D4  5111               	movf	(_rxPayload+1)& (0+255),w,b
 24867  0014D6  6EFE               	movwf	tosh,c
 24868  0014D8  6AFF               	clrf	tosu,c
 24869  0014DA  50FA               	movf	pclath,w,c
 24870  0014DC  0012               	return		;indir
 24871  0014DE                     __end_of_LORAWAN_TxDone:
 24872                           	opt stack 0
 24873                           tosu	equ	0xFFF
 24874                           tosh	equ	0xFFE
 24875                           tosl	equ	0xFFD
 24876                           pclath	equ	0xFFA
 24877                           tblptru	equ	0xFF8
 24878                           tblptrh	equ	0xFF7
 24879                           tblptrl	equ	0xFF6
 24880                           tablat	equ	0xFF5
 24881                           prodh	equ	0xFF4
 24882                           prodl	equ	0xFF3
 24883                           intcon	equ	0xFF2
 24884                           intcon2	equ	0xFF1
 24885                           intcon3	equ	0xFF0
 24886                           indf0	equ	0xFEF
 24887                           postinc0	equ	0xFEE
 24888                           fsr0h	equ	0xFEA
 24889                           fsr0l	equ	0xFE9
 24890                           wreg	equ	0xFE8
 24891                           postinc1	equ	0xFE6
 24892                           postdec1	equ	0xFE5
 24893                           plusw1	equ	0xFE3
 24894                           fsr1h	equ	0xFE2
 24895                           fsr1l	equ	0xFE1
 24896                           indf2	equ	0xFDF
 24897                           postinc2	equ	0xFDE
 24898                           postdec2	equ	0xFDD
 24899                           plusw2	equ	0xFDB
 24900                           fsr2h	equ	0xFDA
 24901                           fsr2l	equ	0xFD9
 24902                           status	equ	0xFD8
 24903                           
 24904 ;; *************** function _SwTimerReadValue *****************
 24905 ;; Defined at:
 24906 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 24907 ;; Parameters:    Size  Location     Type
 24908 ;;  timerId         1    wreg     unsigned char 
 24909 ;; Auto vars:     Size  Location     Type
 24910 ;;  timerId         1   57[BANK0 ] unsigned char 
 24911 ;;  ticksCount      4   53[BANK0 ] unsigned long 
 24912 ;; Return value:  Size  Location     Type
 24913 ;;                  4   49[BANK0 ] unsigned long 
 24914 ;; Registers used:
 24915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24916 ;; Tracked objects:
 24917 ;;		On entry : 0/0
 24918 ;;		On exit  : 0/0
 24919 ;;		Unchanged: 0/0
 24920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24921 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24922 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24924 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24925 ;;Total ram usage:        9 bytes
 24926 ;; Hardware stack levels used:    1
 24927 ;; Hardware stack levels required when called:   10
 24928 ;; This function calls:
 24929 ;;		_SwTimersInterrupt
 24930 ;; This function is called by:
 24931 ;;		_RADIO_TxDone
 24932 ;;		_RADIO_FSKPacketSent
 24933 ;;		_LORAWAN_TxDone
 24934 ;;		_LORAWAN_Pause
 24935 ;; This function uses a non-reentrant model
 24936 ;;
 24937                           
 24938                           	psect	text115
 24939  008350                     __ptext115:
 24940                           	opt stack 0
 24941  008350                     _SwTimerReadValue:
 24942                           	opt stack 16
 24943                           
 24944                           ;incstack = 0
 24945                           ;SwTimerReadValue@timerId stored from wreg
 24946  008350  0100               	movlb	0	; () banked
 24947  008352  6F99               	movwf	SwTimerReadValue@timerId& (0+255),b
 24948                           
 24949                           ;sw_timer.c: 195: uint32_t ticksCount;
 24950                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 24951  008354  9EF2               	bcf	intcon,7,c	;volatile
 24952                           
 24953                           ;sw_timer.c: 200: SwTimersInterrupt();
 24954  008356  EC0C  F02E         	call	_SwTimersInterrupt	;wreg free
 24955                           
 24956                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 24957  00835A  0100               	movlb	0	; () banked
 24958  00835C  5199               	movf	SwTimerReadValue@timerId& (0+255),w,b
 24959  00835E  0D08               	mullw	8
 24960  008360  0E00               	movlw	low _swTimers
 24961  008362  24F3               	addwf	prodl,w,c
 24962  008364  6ED9               	movwf	fsr2l,c
 24963  008366  0E03               	movlw	high _swTimers
 24964  008368  20F4               	addwfc	prodh,w,c
 24965  00836A  6EDA               	movwf	fsr2h,c
 24966  00836C  CFDE F095          	movff	postinc2,SwTimerReadValue@ticksCount
 24967  008370  CFDE F096          	movff	postinc2,SwTimerReadValue@ticksCount+1
 24968  008374  CFDE F097          	movff	postinc2,SwTimerReadValue@ticksCount+2
 24969  008378  CFDE F098          	movff	postinc2,SwTimerReadValue@ticksCount+3
 24970                           
 24971                           ; BSR set to: 0
 24972                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 24973  00837C  8EF2               	bsf	intcon,7,c	;volatile
 24974                           
 24975                           ; BSR set to: 0
 24976                           ;sw_timer.c: 204: return ticksCount;
 24977  00837E  C095  F091         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 24978  008382  C096  F092         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 24979  008386  C097  F093         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 24980  00838A  C098  F094         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 24981  00838E  0012               	return	
 24982  008390                     __end_of_SwTimerReadValue:
 24983                           	opt stack 0
 24984                           tosu	equ	0xFFF
 24985                           tosh	equ	0xFFE
 24986                           tosl	equ	0xFFD
 24987                           pclath	equ	0xFFA
 24988                           tblptru	equ	0xFF8
 24989                           tblptrh	equ	0xFF7
 24990                           tblptrl	equ	0xFF6
 24991                           tablat	equ	0xFF5
 24992                           prodh	equ	0xFF4
 24993                           prodl	equ	0xFF3
 24994                           intcon	equ	0xFF2
 24995                           intcon2	equ	0xFF1
 24996                           intcon3	equ	0xFF0
 24997                           indf0	equ	0xFEF
 24998                           postinc0	equ	0xFEE
 24999                           fsr0h	equ	0xFEA
 25000                           fsr0l	equ	0xFE9
 25001                           wreg	equ	0xFE8
 25002                           postinc1	equ	0xFE6
 25003                           postdec1	equ	0xFE5
 25004                           plusw1	equ	0xFE3
 25005                           fsr1h	equ	0xFE2
 25006                           fsr1l	equ	0xFE1
 25007                           indf2	equ	0xFDF
 25008                           postinc2	equ	0xFDE
 25009                           postdec2	equ	0xFDD
 25010                           plusw2	equ	0xFDB
 25011                           fsr2h	equ	0xFDA
 25012                           fsr2l	equ	0xFD9
 25013                           status	equ	0xFD8
 25014                           
 25015 ;; *************** function _SwTimerIsRunning *****************
 25016 ;; Defined at:
 25017 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 25018 ;; Parameters:    Size  Location     Type
 25019 ;;  timerId         1    wreg     unsigned char 
 25020 ;; Auto vars:     Size  Location     Type
 25021 ;;  timerId         1    0[BANK0 ] unsigned char 
 25022 ;;  isRunning       1    1[BANK0 ] unsigned char 
 25023 ;; Return value:  Size  Location     Type
 25024 ;;                  1    wreg      unsigned char 
 25025 ;; Registers used:
 25026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25027 ;; Tracked objects:
 25028 ;;		On entry : 0/0
 25029 ;;		On exit  : 0/0
 25030 ;;		Unchanged: 0/0
 25031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25033 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25035 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25036 ;;Total ram usage:        2 bytes
 25037 ;; Hardware stack levels used:    1
 25038 ;; Hardware stack levels required when called:    7
 25039 ;; This function calls:
 25040 ;;		Nothing
 25041 ;; This function is called by:
 25042 ;;		_LORAWAN_TxDone
 25043 ;; This function uses a non-reentrant model
 25044 ;;
 25045                           
 25046                           	psect	text116
 25047  0086FE                     __ptext116:
 25048                           	opt stack 0
 25049  0086FE                     _SwTimerIsRunning:
 25050                           	opt stack 19
 25051                           
 25052                           ; BSR set to: 0
 25053                           ;incstack = 0
 25054                           ;SwTimerIsRunning@timerId stored from wreg
 25055  0086FE  0100               	movlb	0	; () banked
 25056  008700  6F60               	movwf	SwTimerIsRunning@timerId& (0+255),b
 25057                           
 25058                           ;sw_timer.c: 209: uint8_t isRunning;
 25059                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 25060  008702  9EF2               	bcf	intcon,7,c	;volatile
 25061                           
 25062                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 25063  008704  0100               	movlb	0	; () banked
 25064  008706  5160               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 25065  008708  0D08               	mullw	8
 25066  00870A  0E04               	movlw	4
 25067  00870C  26F3               	addwf	prodl,f,c
 25068  00870E  0E00               	movlw	0
 25069  008710  22F4               	addwfc	prodh,f,c
 25070  008712  0E00               	movlw	low _swTimers
 25071  008714  24F3               	addwf	prodl,w,c
 25072  008716  6ED9               	movwf	fsr2l,c
 25073  008718  0E03               	movlw	high _swTimers
 25074  00871A  20F4               	addwfc	prodh,w,c
 25075  00871C  6EDA               	movwf	fsr2h,c
 25076  00871E  50DF               	movf	indf2,w,c
 25077  008720  6F61               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 25078                           
 25079                           ; BSR set to: 0
 25080                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 25081  008722  8EF2               	bsf	intcon,7,c	;volatile
 25082                           
 25083                           ; BSR set to: 0
 25084                           ;sw_timer.c: 215: return isRunning;
 25085  008724  5161               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 25086  008726  0012               	return	
 25087  008728                     __end_of_SwTimerIsRunning:
 25088                           	opt stack 0
 25089                           tosu	equ	0xFFF
 25090                           tosh	equ	0xFFE
 25091                           tosl	equ	0xFFD
 25092                           pclath	equ	0xFFA
 25093                           tblptru	equ	0xFF8
 25094                           tblptrh	equ	0xFF7
 25095                           tblptrl	equ	0xFF6
 25096                           tablat	equ	0xFF5
 25097                           prodh	equ	0xFF4
 25098                           prodl	equ	0xFF3
 25099                           intcon	equ	0xFF2
 25100                           intcon2	equ	0xFF1
 25101                           intcon3	equ	0xFF0
 25102                           indf0	equ	0xFEF
 25103                           postinc0	equ	0xFEE
 25104                           fsr0h	equ	0xFEA
 25105                           fsr0l	equ	0xFE9
 25106                           wreg	equ	0xFE8
 25107                           postinc1	equ	0xFE6
 25108                           postdec1	equ	0xFE5
 25109                           plusw1	equ	0xFE3
 25110                           fsr1h	equ	0xFE2
 25111                           fsr1l	equ	0xFE1
 25112                           indf2	equ	0xFDF
 25113                           postinc2	equ	0xFDE
 25114                           postdec2	equ	0xFDD
 25115                           plusw2	equ	0xFDB
 25116                           fsr2h	equ	0xFDA
 25117                           fsr2l	equ	0xFD9
 25118                           status	equ	0xFD8
 25119                           
 25120 ;; *************** function _RADIO_GetStatus *****************
 25121 ;; Defined at:
 25122 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25123 ;; Parameters:    Size  Location     Type
 25124 ;;		None
 25125 ;; Auto vars:     Size  Location     Type
 25126 ;;		None
 25127 ;; Return value:  Size  Location     Type
 25128 ;;                  1    wreg      unsigned char 
 25129 ;; Registers used:
 25130 ;;		wreg, status,2
 25131 ;; Tracked objects:
 25132 ;;		On entry : 0/0
 25133 ;;		On exit  : 0/0
 25134 ;;		Unchanged: 0/0
 25135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25140 ;;Total ram usage:        0 bytes
 25141 ;; Hardware stack levels used:    1
 25142 ;; Hardware stack levels required when called:    7
 25143 ;; This function calls:
 25144 ;;		Nothing
 25145 ;; This function is called by:
 25146 ;;		_LORAWAN_TxDone
 25147 ;;		_LORAWAN_ReceiveWindow2Callback
 25148 ;;		_LORAWAN_RxDone
 25149 ;; This function uses a non-reentrant model
 25150 ;;
 25151                           
 25152                           	psect	text117
 25153  008D6A                     __ptext117:
 25154                           	opt stack 0
 25155  008D6A                     _RADIO_GetStatus:
 25156                           	opt stack 19
 25157                           
 25158                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 25159                           
 25160                           ; BSR set to: 0
 25161                           ;incstack = 0
 25162  008D6A  0101               	movlb	1	; () banked
 25163  008D6C  5147               	movf	(_RadioConfiguration+35)& (0+255),w,b
 25164  008D6E  0012               	return	
 25165  008D70                     __end_of_RADIO_GetStatus:
 25166                           	opt stack 0
 25167                           tosu	equ	0xFFF
 25168                           tosh	equ	0xFFE
 25169                           tosl	equ	0xFFD
 25170                           pclath	equ	0xFFA
 25171                           tblptru	equ	0xFF8
 25172                           tblptrh	equ	0xFF7
 25173                           tblptrl	equ	0xFF6
 25174                           tablat	equ	0xFF5
 25175                           prodh	equ	0xFF4
 25176                           prodl	equ	0xFF3
 25177                           intcon	equ	0xFF2
 25178                           intcon2	equ	0xFF1
 25179                           intcon3	equ	0xFF0
 25180                           indf0	equ	0xFEF
 25181                           postinc0	equ	0xFEE
 25182                           fsr0h	equ	0xFEA
 25183                           fsr0l	equ	0xFE9
 25184                           wreg	equ	0xFE8
 25185                           postinc1	equ	0xFE6
 25186                           postdec1	equ	0xFE5
 25187                           plusw1	equ	0xFE3
 25188                           fsr1h	equ	0xFE2
 25189                           fsr1l	equ	0xFE1
 25190                           indf2	equ	0xFDF
 25191                           postinc2	equ	0xFDE
 25192                           postdec2	equ	0xFDD
 25193                           plusw2	equ	0xFDB
 25194                           fsr2h	equ	0xFDA
 25195                           fsr2l	equ	0xFD9
 25196                           status	equ	0xFD8
 25197                           
 25198 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 25199 ;; Defined at:
 25200 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 25201 ;; Parameters:    Size  Location     Type
 25202 ;;		None
 25203 ;; Auto vars:     Size  Location     Type
 25204 ;;		None
 25205 ;; Return value:  Size  Location     Type
 25206 ;;                  1    wreg      void 
 25207 ;; Registers used:
 25208 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25209 ;; Tracked objects:
 25210 ;;		On entry : 0/0
 25211 ;;		On exit  : 0/0
 25212 ;;		Unchanged: 0/0
 25213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25218 ;;Total ram usage:        0 bytes
 25219 ;; Hardware stack levels used:    1
 25220 ;; Hardware stack levels required when called:   13
 25221 ;; This function calls:
 25222 ;;		_ConfigureRadioRx
 25223 ;;		_RADIO_ReceiveStart
 25224 ;;		_RADIO_ReceiveStop
 25225 ;;		_RADIO_ReleaseData
 25226 ;;		_ResetParametersForConfirmedTransmission
 25227 ;;		_ResetParametersForUnconfirmedTransmission
 25228 ;;		_RxData
 25229 ;; This function is called by:
 25230 ;;		_LORAWAN_TxDone
 25231 ;;		_LORAWAN_ReceiveWindow2Callback
 25232 ;;		_LORAWAN_RxDone
 25233 ;;		_SetReceptionNotOkState
 25234 ;; This function uses a non-reentrant model
 25235 ;;
 25236                           
 25237                           	psect	text118
 25238  0074EC                     __ptext118:
 25239                           	opt stack 0
 25240  0074EC                     _LORAWAN_EnterContinuousReceive:
 25241                           	opt stack 13
 25242                           
 25243                           ;lorawan.c: 917: RADIO_ReceiveStop();
 25244                           
 25245                           ; BSR set to: 1
 25246                           ;incstack = 0
 25247  0074EC  EC96  F044         	call	_RADIO_ReceiveStop	;wreg free
 25248                           
 25249                           ;lorawan.c: 918: RADIO_ReleaseData();
 25250  0074F0  ECB8  F046         	call	_RADIO_ReleaseData	;wreg free
 25251                           
 25252                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 25253  0074F4  C218  F073         	movff	_loRa+24,ConfigureRadioRx@freq
 25254  0074F8  C219  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
 25255  0074FC  C21A  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
 25256  007500  C21B  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
 25257  007504  0102               	movlb	2	; () banked
 25258  007506  511C               	movf	(_loRa+28)& (0+255),w,b
 25259  007508  EC94  F043         	call	_ConfigureRadioRx
 25260                           
 25261                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 25262  00750C  0E00               	movlw	0
 25263  00750E  0100               	movlb	0	; () banked
 25264  007510  6FB2               	movwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 25265  007512  0E00               	movlw	0
 25266  007514  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 25267  007516  EC2C  F01E         	call	_RADIO_ReceiveStart	;wreg free
 25268  00751A  0100               	movlb	0	; () banked
 25269  00751C  51B1               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 25270  00751E  11B2               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 25271  007520  B4D8               	btfsc	status,2,c
 25272  007522  0012               	return	
 25273                           
 25274                           ; BSR set to: 0
 25275                           ;lorawan.c: 923: {
 25276                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 25277  007524  ECD6  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
 25278                           
 25279                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 25280  007528  ECAF  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 25281                           
 25282                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 25283  00752C  0102               	movlb	2	; () banked
 25284  00752E  9102               	bcf	(_loRa+2)& (0+255),0,b
 25285  007530  9302               	bcf	(_loRa+2)& (0+255),1,b
 25286  007532  9502               	bcf	(_loRa+2)& (0+255),2,b
 25287  007534  9702               	bcf	(_loRa+2)& (0+255),3,b
 25288                           
 25289                           ; BSR set to: 2
 25290                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 25291  007536  0101               	movlb	1	; () banked
 25292  007538  5110               	movf	_rxPayload& (0+255),w,b
 25293  00753A  1111               	iorwf	(_rxPayload+1)& (0+255),w,b
 25294  00753C  B4D8               	btfsc	status,2,c
 25295  00753E  0012               	return	
 25296                           
 25297                           ; BSR set to: 1
 25298                           ;lorawan.c: 928: {
 25299                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 25300  007540  0E00               	movlw	0
 25301  007542  0100               	movlb	0	; () banked
 25302  007544  6F60               	movwf	RxData@pData& (0+255),b
 25303  007546  0E00               	movlw	0
 25304  007548  6F61               	movwf	(RxData@pData+1)& (0+255),b
 25305  00754A  0E00               	movlw	0
 25306  00754C  6F62               	movwf	RxData@dataLength& (0+255),b
 25307  00754E  0E00               	movlw	0
 25308  007550  6F63               	movwf	RxData@status& (0+255),b
 25309  007552  D801               	call	u16778
 25310  007554  0012               	return	
 25311  007556                     u16778:
 25312  007556  0005               	push	
 25313  007558  6EFA               	movwf	pclath,c
 25314  00755A  0101               	movlb	1	; () banked
 25315  00755C  5110               	movf	_rxPayload& (0+255),w,b
 25316  00755E  6EFD               	movwf	tosl,c
 25317  007560  5111               	movf	(_rxPayload+1)& (0+255),w,b
 25318  007562  6EFE               	movwf	tosh,c
 25319  007564  6AFF               	clrf	tosu,c
 25320  007566  50FA               	movf	pclath,w,c
 25321  007568  0012               	return		;indir
 25322  00756A                     __end_of_LORAWAN_EnterContinuousReceive:
 25323                           	opt stack 0
 25324                           tosu	equ	0xFFF
 25325                           tosh	equ	0xFFE
 25326                           tosl	equ	0xFFD
 25327                           pclath	equ	0xFFA
 25328                           tblptru	equ	0xFF8
 25329                           tblptrh	equ	0xFF7
 25330                           tblptrl	equ	0xFF6
 25331                           tablat	equ	0xFF5
 25332                           prodh	equ	0xFF4
 25333                           prodl	equ	0xFF3
 25334                           intcon	equ	0xFF2
 25335                           intcon2	equ	0xFF1
 25336                           intcon3	equ	0xFF0
 25337                           indf0	equ	0xFEF
 25338                           postinc0	equ	0xFEE
 25339                           fsr0h	equ	0xFEA
 25340                           fsr0l	equ	0xFE9
 25341                           wreg	equ	0xFE8
 25342                           postinc1	equ	0xFE6
 25343                           postdec1	equ	0xFE5
 25344                           plusw1	equ	0xFE3
 25345                           fsr1h	equ	0xFE2
 25346                           fsr1l	equ	0xFE1
 25347                           indf2	equ	0xFDF
 25348                           postinc2	equ	0xFDE
 25349                           postdec2	equ	0xFDD
 25350                           plusw2	equ	0xFDB
 25351                           fsr2h	equ	0xFDA
 25352                           fsr2l	equ	0xFD9
 25353                           status	equ	0xFD8
 25354                           
 25355 ;; *************** function _RxData *****************
 25356 ;; Defined at:
 25357 ;;		line 70 in file "main.c"
 25358 ;; Parameters:    Size  Location     Type
 25359 ;;  pData           2    0[BANK0 ] PTR unsigned char 
 25360 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 25361 ;;  dataLength      1    2[BANK0 ] unsigned char 
 25362 ;;  status          1    3[BANK0 ] enum E7442
 25363 ;; Auto vars:     Size  Location     Type
 25364 ;;		None
 25365 ;; Return value:  Size  Location     Type
 25366 ;;                  1    wreg      void 
 25367 ;; Registers used:
 25368 ;;		None
 25369 ;; Tracked objects:
 25370 ;;		On entry : 0/0
 25371 ;;		On exit  : 0/0
 25372 ;;		Unchanged: 0/0
 25373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25374 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25377 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25378 ;;Total ram usage:        4 bytes
 25379 ;; Hardware stack levels used:    1
 25380 ;; Hardware stack levels required when called:    7
 25381 ;; This function calls:
 25382 ;;		Nothing
 25383 ;; This function is called by:
 25384 ;;		_main
 25385 ;;		_LORAWAN_EnterContinuousReceive
 25386 ;;		_LORAWAN_ReceiveWindow2Callback
 25387 ;;		_SetReceptionNotOkState
 25388 ;;		_LORAWAN_RxDone
 25389 ;;		_LORAWAN_RxTimeout
 25390 ;;		_LORAWAN_TxDone
 25391 ;;		_AckRetransmissionCallback
 25392 ;;		_UnconfirmedTransmissionCallback
 25393 ;; This function uses a non-reentrant model
 25394 ;;
 25395                           
 25396                           	psect	text119
 25397  008DA8                     __ptext119:
 25398                           	opt stack 0
 25399  008DA8                     _RxData:
 25400                           	opt stack 20
 25401                           
 25402                           ;incstack = 0
 25403  008DA8  0012               	return		;funcret
 25404  008DAA                     __end_of_RxData:
 25405                           	opt stack 0
 25406                           tosu	equ	0xFFF
 25407                           tosh	equ	0xFFE
 25408                           tosl	equ	0xFFD
 25409                           pclath	equ	0xFFA
 25410                           tblptru	equ	0xFF8
 25411                           tblptrh	equ	0xFF7
 25412                           tblptrl	equ	0xFF6
 25413                           tablat	equ	0xFF5
 25414                           prodh	equ	0xFF4
 25415                           prodl	equ	0xFF3
 25416                           intcon	equ	0xFF2
 25417                           intcon2	equ	0xFF1
 25418                           intcon3	equ	0xFF0
 25419                           indf0	equ	0xFEF
 25420                           postinc0	equ	0xFEE
 25421                           fsr0h	equ	0xFEA
 25422                           fsr0l	equ	0xFE9
 25423                           wreg	equ	0xFE8
 25424                           postinc1	equ	0xFE6
 25425                           postdec1	equ	0xFE5
 25426                           plusw1	equ	0xFE3
 25427                           fsr1h	equ	0xFE2
 25428                           fsr1l	equ	0xFE1
 25429                           indf2	equ	0xFDF
 25430                           postinc2	equ	0xFDE
 25431                           postdec2	equ	0xFDD
 25432                           plusw2	equ	0xFDB
 25433                           fsr2h	equ	0xFDA
 25434                           fsr2l	equ	0xFD9
 25435                           status	equ	0xFD8
 25436                           
 25437 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 25438 ;; Defined at:
 25439 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 25440 ;; Parameters:    Size  Location     Type
 25441 ;;		None
 25442 ;; Auto vars:     Size  Location     Type
 25443 ;;		None
 25444 ;; Return value:  Size  Location     Type
 25445 ;;                  1    wreg      void 
 25446 ;; Registers used:
 25447 ;;		wreg, status,2
 25448 ;; Tracked objects:
 25449 ;;		On entry : 0/0
 25450 ;;		On exit  : 0/0
 25451 ;;		Unchanged: 0/0
 25452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25457 ;;Total ram usage:        0 bytes
 25458 ;; Hardware stack levels used:    1
 25459 ;; Hardware stack levels required when called:    7
 25460 ;; This function calls:
 25461 ;;		Nothing
 25462 ;; This function is called by:
 25463 ;;		_LORAWAN_RxTimeout
 25464 ;;		_LORAWAN_ReceiveWindow2Callback
 25465 ;;		_LORAWAN_EnterContinuousReceive
 25466 ;;		_UnconfirmedTransmissionCallback
 25467 ;; This function uses a non-reentrant model
 25468 ;;
 25469                           
 25470                           	psect	text120
 25471  008B5E                     __ptext120:
 25472                           	opt stack 0
 25473  008B5E                     _ResetParametersForUnconfirmedTransmission:
 25474                           	opt stack 20
 25475                           
 25476                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 25477                           
 25478                           ;incstack = 0
 25479  008B5E  0102               	movlb	2	; () banked
 25480  008B60  9102               	bcf	(_loRa+2)& (0+255),0,b
 25481  008B62  9302               	bcf	(_loRa+2)& (0+255),1,b
 25482  008B64  9502               	bcf	(_loRa+2)& (0+255),2,b
 25483  008B66  9702               	bcf	(_loRa+2)& (0+255),3,b
 25484                           
 25485                           ; BSR set to: 2
 25486                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 25487  008B68  0E01               	movlw	1
 25488  008B6A  6FD8               	movwf	(_loRa+216)& (0+255),b
 25489                           
 25490                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 25491  008B6C  0E00               	movlw	0
 25492  008B6E  6FA7               	movwf	(_loRa+167)& (0+255),b
 25493                           
 25494                           ; BSR set to: 2
 25495  008B70  0012               	return		;funcret
 25496  008B72                     __end_of_ResetParametersForUnconfirmedTransmission:
 25497                           	opt stack 0
 25498                           tosu	equ	0xFFF
 25499                           tosh	equ	0xFFE
 25500                           tosl	equ	0xFFD
 25501                           pclath	equ	0xFFA
 25502                           tblptru	equ	0xFF8
 25503                           tblptrh	equ	0xFF7
 25504                           tblptrl	equ	0xFF6
 25505                           tablat	equ	0xFF5
 25506                           prodh	equ	0xFF4
 25507                           prodl	equ	0xFF3
 25508                           intcon	equ	0xFF2
 25509                           intcon2	equ	0xFF1
 25510                           intcon3	equ	0xFF0
 25511                           indf0	equ	0xFEF
 25512                           postinc0	equ	0xFEE
 25513                           fsr0h	equ	0xFEA
 25514                           fsr0l	equ	0xFE9
 25515                           wreg	equ	0xFE8
 25516                           postinc1	equ	0xFE6
 25517                           postdec1	equ	0xFE5
 25518                           plusw1	equ	0xFE3
 25519                           fsr1h	equ	0xFE2
 25520                           fsr1l	equ	0xFE1
 25521                           indf2	equ	0xFDF
 25522                           postinc2	equ	0xFDE
 25523                           postdec2	equ	0xFDD
 25524                           plusw2	equ	0xFDB
 25525                           fsr2h	equ	0xFDA
 25526                           fsr2l	equ	0xFD9
 25527                           status	equ	0xFD8
 25528                           
 25529 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 25530 ;; Defined at:
 25531 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 25532 ;; Parameters:    Size  Location     Type
 25533 ;;		None
 25534 ;; Auto vars:     Size  Location     Type
 25535 ;;		None
 25536 ;; Return value:  Size  Location     Type
 25537 ;;                  1    wreg      void 
 25538 ;; Registers used:
 25539 ;;		wreg, status,2
 25540 ;; Tracked objects:
 25541 ;;		On entry : 0/0
 25542 ;;		On exit  : 0/0
 25543 ;;		Unchanged: 0/0
 25544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25549 ;;Total ram usage:        0 bytes
 25550 ;; Hardware stack levels used:    1
 25551 ;; Hardware stack levels required when called:    7
 25552 ;; This function calls:
 25553 ;;		Nothing
 25554 ;; This function is called by:
 25555 ;;		_LORAWAN_RxTimeout
 25556 ;;		_LORAWAN_ReceiveWindow2Callback
 25557 ;;		_LORAWAN_EnterContinuousReceive
 25558 ;;		_AckRetransmissionCallback
 25559 ;; This function uses a non-reentrant model
 25560 ;;
 25561                           
 25562                           	psect	text121
 25563  008BAC                     __ptext121:
 25564                           	opt stack 0
 25565  008BAC                     _ResetParametersForConfirmedTransmission:
 25566                           	opt stack 18
 25567                           
 25568                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 25569                           
 25570                           ; BSR set to: 2
 25571                           ;incstack = 0
 25572  008BAC  0102               	movlb	2	; () banked
 25573  008BAE  9102               	bcf	(_loRa+2)& (0+255),0,b
 25574  008BB0  9302               	bcf	(_loRa+2)& (0+255),1,b
 25575  008BB2  9502               	bcf	(_loRa+2)& (0+255),2,b
 25576  008BB4  9702               	bcf	(_loRa+2)& (0+255),3,b
 25577                           
 25578                           ; BSR set to: 2
 25579                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 25580  008BB6  0E01               	movlw	1
 25581  008BB8  6FD9               	movwf	(_loRa+217)& (0+255),b
 25582                           
 25583                           ; BSR set to: 2
 25584                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 25585  008BBA  9100               	bcf	_loRa& (0+255),0,b
 25586                           
 25587                           ; BSR set to: 2
 25588  008BBC  0012               	return		;funcret
 25589  008BBE                     __end_of_ResetParametersForConfirmedTransmission:
 25590                           	opt stack 0
 25591                           tosu	equ	0xFFF
 25592                           tosh	equ	0xFFE
 25593                           tosl	equ	0xFFD
 25594                           pclath	equ	0xFFA
 25595                           tblptru	equ	0xFF8
 25596                           tblptrh	equ	0xFF7
 25597                           tblptrl	equ	0xFF6
 25598                           tablat	equ	0xFF5
 25599                           prodh	equ	0xFF4
 25600                           prodl	equ	0xFF3
 25601                           intcon	equ	0xFF2
 25602                           intcon2	equ	0xFF1
 25603                           intcon3	equ	0xFF0
 25604                           indf0	equ	0xFEF
 25605                           postinc0	equ	0xFEE
 25606                           fsr0h	equ	0xFEA
 25607                           fsr0l	equ	0xFE9
 25608                           wreg	equ	0xFE8
 25609                           postinc1	equ	0xFE6
 25610                           postdec1	equ	0xFE5
 25611                           plusw1	equ	0xFE3
 25612                           fsr1h	equ	0xFE2
 25613                           fsr1l	equ	0xFE1
 25614                           indf2	equ	0xFDF
 25615                           postinc2	equ	0xFDE
 25616                           postdec2	equ	0xFDD
 25617                           plusw2	equ	0xFDB
 25618                           fsr2h	equ	0xFDA
 25619                           fsr2l	equ	0xFD9
 25620                           status	equ	0xFD8
 25621                           
 25622 ;; *************** function _RADIO_ReleaseData *****************
 25623 ;; Defined at:
 25624 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25625 ;; Parameters:    Size  Location     Type
 25626 ;;		None
 25627 ;; Auto vars:     Size  Location     Type
 25628 ;;		None
 25629 ;; Return value:  Size  Location     Type
 25630 ;;                  1    wreg      void 
 25631 ;; Registers used:
 25632 ;;		status,2, status,0
 25633 ;; Tracked objects:
 25634 ;;		On entry : 0/0
 25635 ;;		On exit  : 0/0
 25636 ;;		Unchanged: 0/0
 25637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25642 ;;Total ram usage:        0 bytes
 25643 ;; Hardware stack levels used:    1
 25644 ;; Hardware stack levels required when called:    7
 25645 ;; This function calls:
 25646 ;;		Nothing
 25647 ;; This function is called by:
 25648 ;;		_LORAWAN_ReceiveWindow1Callback
 25649 ;;		_LORAWAN_ReceiveWindow2Callback
 25650 ;;		_LORAWAN_EnterContinuousReceive
 25651 ;;		_LORAWAN_RxDone
 25652 ;; This function uses a non-reentrant model
 25653 ;;
 25654                           
 25655                           	psect	text122
 25656  008D70                     __ptext122:
 25657                           	opt stack 0
 25658  008D70                     _RADIO_ReleaseData:
 25659                           	opt stack 18
 25660                           
 25661                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 25662                           
 25663                           ; BSR set to: 2
 25664                           ;incstack = 0
 25665  008D70  0101               	movlb	1	; () banked
 25666  008D72  9547               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 25667                           
 25668                           ; BSR set to: 1
 25669  008D74  0012               	return		;funcret
 25670  008D76                     __end_of_RADIO_ReleaseData:
 25671                           	opt stack 0
 25672                           tosu	equ	0xFFF
 25673                           tosh	equ	0xFFE
 25674                           tosl	equ	0xFFD
 25675                           pclath	equ	0xFFA
 25676                           tblptru	equ	0xFF8
 25677                           tblptrh	equ	0xFF7
 25678                           tblptrl	equ	0xFF6
 25679                           tablat	equ	0xFF5
 25680                           prodh	equ	0xFF4
 25681                           prodl	equ	0xFF3
 25682                           intcon	equ	0xFF2
 25683                           intcon2	equ	0xFF1
 25684                           intcon3	equ	0xFF0
 25685                           indf0	equ	0xFEF
 25686                           postinc0	equ	0xFEE
 25687                           fsr0h	equ	0xFEA
 25688                           fsr0l	equ	0xFE9
 25689                           wreg	equ	0xFE8
 25690                           postinc1	equ	0xFE6
 25691                           postdec1	equ	0xFE5
 25692                           plusw1	equ	0xFE3
 25693                           fsr1h	equ	0xFE2
 25694                           fsr1l	equ	0xFE1
 25695                           indf2	equ	0xFDF
 25696                           postinc2	equ	0xFDE
 25697                           postdec2	equ	0xFDD
 25698                           plusw2	equ	0xFDB
 25699                           fsr2h	equ	0xFDA
 25700                           fsr2l	equ	0xFD9
 25701                           status	equ	0xFD8
 25702                           
 25703 ;; *************** function _RADIO_ReceiveStop *****************
 25704 ;; Defined at:
 25705 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25706 ;; Parameters:    Size  Location     Type
 25707 ;;		None
 25708 ;; Auto vars:     Size  Location     Type
 25709 ;;		None
 25710 ;; Return value:  Size  Location     Type
 25711 ;;                  1    wreg      void 
 25712 ;; Registers used:
 25713 ;;		wreg, status,2, status,0, cstack
 25714 ;; Tracked objects:
 25715 ;;		On entry : 0/0
 25716 ;;		On exit  : 0/0
 25717 ;;		Unchanged: 0/0
 25718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25723 ;;Total ram usage:        0 bytes
 25724 ;; Hardware stack levels used:    1
 25725 ;; Hardware stack levels required when called:   11
 25726 ;; This function calls:
 25727 ;;		_RADIO_WriteMode
 25728 ;; This function is called by:
 25729 ;;		_LORAWAN_Send
 25730 ;;		_LORAWAN_ReceiveWindow1Callback
 25731 ;;		_LORAWAN_ReceiveWindow2Callback
 25732 ;;		_LORAWAN_EnterContinuousReceive
 25733 ;;		_LORAWAN_SetClass
 25734 ;; This function uses a non-reentrant model
 25735 ;;
 25736                           
 25737                           	psect	text123
 25738  00892C                     __ptext123:
 25739                           	opt stack 0
 25740  00892C                     _RADIO_ReceiveStop:
 25741                           	opt stack 18
 25742                           
 25743                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 25744                           
 25745                           ; BSR set to: 1
 25746                           ;incstack = 0
 25747  00892C  0E02               	movlw	2
 25748  00892E  0101               	movlb	1	; () banked
 25749  008930  1947               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 25750  008932  A4D8               	btfss	status,2,c
 25751  008934  0012               	return	
 25752                           
 25753                           ; BSR set to: 1
 25754                           ;radio_driver_SX1276.c: 954: {
 25755                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 25756  008936  C13C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 25757  00893A  0E00               	movlw	0
 25758  00893C  0100               	movlb	0	; () banked
 25759  00893E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25760  008940  0E00               	movlw	0
 25761  008942  EC0D  F02F         	call	_RADIO_WriteMode
 25762                           
 25763                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 25764  008946  0101               	movlb	1	; () banked
 25765  008948  9347               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 25766  00894A  0012               	return	
 25767  00894C                     __end_of_RADIO_ReceiveStop:
 25768                           	opt stack 0
 25769                           tosu	equ	0xFFF
 25770                           tosh	equ	0xFFE
 25771                           tosl	equ	0xFFD
 25772                           pclath	equ	0xFFA
 25773                           tblptru	equ	0xFF8
 25774                           tblptrh	equ	0xFF7
 25775                           tblptrl	equ	0xFF6
 25776                           tablat	equ	0xFF5
 25777                           prodh	equ	0xFF4
 25778                           prodl	equ	0xFF3
 25779                           intcon	equ	0xFF2
 25780                           intcon2	equ	0xFF1
 25781                           intcon3	equ	0xFF0
 25782                           indf0	equ	0xFEF
 25783                           postinc0	equ	0xFEE
 25784                           fsr0h	equ	0xFEA
 25785                           fsr0l	equ	0xFE9
 25786                           wreg	equ	0xFE8
 25787                           postinc1	equ	0xFE6
 25788                           postdec1	equ	0xFE5
 25789                           plusw1	equ	0xFE3
 25790                           fsr1h	equ	0xFE2
 25791                           fsr1l	equ	0xFE1
 25792                           indf2	equ	0xFDF
 25793                           postinc2	equ	0xFDE
 25794                           postdec2	equ	0xFDD
 25795                           plusw2	equ	0xFDB
 25796                           fsr2h	equ	0xFDA
 25797                           fsr2l	equ	0xFD9
 25798                           status	equ	0xFD8
 25799                           
 25800 ;; *************** function _RADIO_ReceiveStart *****************
 25801 ;; Defined at:
 25802 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25803 ;; Parameters:    Size  Location     Type
 25804 ;;  rxWindowSize    2   81[BANK0 ] unsigned int 
 25805 ;; Auto vars:     Size  Location     Type
 25806 ;;		None
 25807 ;; Return value:  Size  Location     Type
 25808 ;;                  2   81[BANK0 ] enum E7038
 25809 ;; Registers used:
 25810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25811 ;; Tracked objects:
 25812 ;;		On entry : 0/0
 25813 ;;		On exit  : 0/0
 25814 ;;		Unchanged: 0/0
 25815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25816 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25817 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25818 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25819 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25820 ;;Total ram usage:       10 bytes
 25821 ;; Hardware stack levels used:    1
 25822 ;; Hardware stack levels required when called:   12
 25823 ;; This function calls:
 25824 ;;		_RADIO_RegisterWrite
 25825 ;;		_RADIO_WriteConfiguration
 25826 ;;		_RADIO_WriteMode
 25827 ;;		_SwTimerSetTimeout
 25828 ;;		_SwTimerStart
 25829 ;;		___lldiv
 25830 ;; This function is called by:
 25831 ;;		_LORAWAN_ReceiveWindow1Callback
 25832 ;;		_LORAWAN_ReceiveWindow2Callback
 25833 ;;		_LORAWAN_EnterContinuousReceive
 25834 ;; This function uses a non-reentrant model
 25835 ;;
 25836                           
 25837                           	psect	text124
 25838  003C58                     __ptext124:
 25839                           	opt stack 0
 25840  003C58                     _RADIO_ReceiveStart:
 25841                           	opt stack 13
 25842                           
 25843                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 25844                           
 25845                           ; BSR set to: 1
 25846                           ;incstack = 0
 25847  003C58  0101               	movlb	1	; () banked
 25848  003C5A  A547               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 25849  003C5C  D006               	goto	l520
 25850                           
 25851                           ; BSR set to: 1
 25852                           ;radio_driver_SX1276.c: 878: {
 25853                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 25854  003C5E  0E80               	movlw	128
 25855  003C60  0100               	movlb	0	; () banked
 25856  003C62  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 25857  003C64  0E03               	movlw	3
 25858  003C66  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 25859                           
 25860                           ; BSR set to: 0
 25861  003C68  0012               	return	
 25862  003C6A                     l520:
 25863                           
 25864                           ;radio_driver_SX1276.c: 880: }
 25865                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 25866                           
 25867                           ; BSR set to: 0
 25868  003C6A  C147  F0B3         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 25869  003C6E  0E03               	movlw	3
 25870  003C70  0100               	movlb	0	; () banked
 25871  003C72  17B3               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 25872  003C74  B4D8               	btfsc	status,2,c
 25873  003C76  D005               	goto	l522
 25874                           
 25875                           ; BSR set to: 0
 25876                           ;radio_driver_SX1276.c: 883: {
 25877                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 25878  003C78  0E80               	movlw	128
 25879  003C7A  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 25880  003C7C  0E04               	movlw	4
 25881  003C7E  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 25882                           
 25883                           ; BSR set to: 0
 25884  003C80  0012               	return	
 25885  003C82                     l522:
 25886                           
 25887                           ; BSR set to: 0
 25888                           ;radio_driver_SX1276.c: 885: }
 25889                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 25890                           
 25891                           ; BSR set to: 0
 25892  003C82  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 25893  003C84  11B2               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 25894  003C86  A4D8               	btfss	status,2,c
 25895  003C88  D007               	goto	l523
 25896                           
 25897                           ; BSR set to: 0
 25898                           ;radio_driver_SX1276.c: 888: {
 25899                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 25900  003C8A  0E00               	movlw	0
 25901  003C8C  6FA7               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 25902  003C8E  0E04               	movlw	4
 25903  003C90  6FA6               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 25904  003C92  EC6F  F00A         	call	_RADIO_WriteConfiguration	;wreg free
 25905                           
 25906                           ;radio_driver_SX1276.c: 890: }
 25907  003C96  D006               	goto	l524
 25908  003C98                     l523:
 25909                           
 25910                           ;radio_driver_SX1276.c: 891: else
 25911                           ;radio_driver_SX1276.c: 892: {
 25912                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 25913  003C98  C0B1  F0A6         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 25914  003C9C  C0B2  F0A7         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 25915  003CA0  EC6F  F00A         	call	_RADIO_WriteConfiguration	;wreg free
 25916  003CA4                     l524:
 25917                           
 25918                           ;radio_driver_SX1276.c: 894: }
 25919                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 25920  003CA4  0101               	movlb	1	; () banked
 25921  003CA6  053C               	decf	(_RadioConfiguration+24)& (0+255),w,b
 25922  003CA8  A4D8               	btfss	status,2,c
 25923  003CAA  D013               	goto	l525
 25924                           
 25925                           ; BSR set to: 1
 25926                           ;radio_driver_SX1276.c: 897: {
 25927                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 25928  003CAC  0E01               	movlw	1
 25929  003CAE  0100               	movlb	0	; () banked
 25930  003CB0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25931  003CB2  0E22               	movlw	34
 25932  003CB4  ECA6  F044         	call	_RADIO_RegisterWrite
 25933                           
 25934                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 25935  003CB8  0E00               	movlw	0
 25936  003CBA  0100               	movlb	0	; () banked
 25937  003CBC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25938  003CBE  0E40               	movlw	64
 25939  003CC0  ECA6  F044         	call	_RADIO_RegisterWrite
 25940                           
 25941                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 25942  003CC4  0E00               	movlw	0
 25943  003CC6  0100               	movlb	0	; () banked
 25944  003CC8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25945  003CCA  0E41               	movlw	65
 25946  003CCC  ECA6  F044         	call	_RADIO_RegisterWrite
 25947                           
 25948                           ;radio_driver_SX1276.c: 908: }
 25949  003CD0  D016               	goto	l526
 25950  003CD2                     l525:
 25951                           
 25952                           ;radio_driver_SX1276.c: 909: else
 25953                           ;radio_driver_SX1276.c: 910: {
 25954                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 25955  003CD2  C158  F062         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 25956  003CD6  0E12               	movlw	18
 25957  003CD8  ECA6  F044         	call	_RADIO_RegisterWrite
 25958                           
 25959                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 25960  003CDC  C159  F062         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 25961  003CE0  0E13               	movlw	19
 25962  003CE2  ECA6  F044         	call	_RADIO_RegisterWrite
 25963                           
 25964                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 25965  003CE6  0E00               	movlw	0
 25966  003CE8  0100               	movlb	0	; () banked
 25967  003CEA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25968  003CEC  0E40               	movlw	64
 25969  003CEE  ECA6  F044         	call	_RADIO_RegisterWrite
 25970                           
 25971                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 25972  003CF2  0E00               	movlw	0
 25973  003CF4  0100               	movlb	0	; () banked
 25974  003CF6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25975  003CF8  0E41               	movlw	65
 25976  003CFA  ECA6  F044         	call	_RADIO_RegisterWrite
 25977  003CFE                     l526:
 25978                           
 25979                           ;radio_driver_SX1276.c: 917: }
 25980                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 25981  003CFE  0101               	movlb	1	; () banked
 25982  003D00  8347               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 25983                           
 25984                           ; BSR set to: 1
 25985                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 25986  003D02  0EE7               	movlw	231
 25987  003D04  1747               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 25988                           
 25989                           ; BSR set to: 1
 25990                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 25991  003D06  0100               	movlb	0	; () banked
 25992  003D08  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 25993  003D0A  11B2               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 25994  003D0C  A4D8               	btfss	status,2,c
 25995  003D0E  D008               	goto	l527
 25996                           
 25997                           ; BSR set to: 0
 25998                           ;radio_driver_SX1276.c: 925: {
 25999                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 26000  003D10  C13C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26001  003D14  0E00               	movlw	0
 26002  003D16  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26003  003D18  0E05               	movlw	5
 26004  003D1A  EC0D  F02F         	call	_RADIO_WriteMode
 26005                           
 26006                           ;radio_driver_SX1276.c: 927: }
 26007  003D1E  D046               	goto	l530
 26008  003D20                     l527:
 26009                           
 26010                           ;radio_driver_SX1276.c: 928: else
 26011                           ;radio_driver_SX1276.c: 929: {
 26012                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 26013  003D20  0101               	movlb	1	; () banked
 26014  003D22  053C               	decf	(_RadioConfiguration+24)& (0+255),w,b
 26015  003D24  A4D8               	btfss	status,2,c
 26016  003D26  D009               	goto	l529
 26017                           
 26018                           ; BSR set to: 1
 26019                           ;radio_driver_SX1276.c: 931: {
 26020                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 26021  003D28  0E01               	movlw	1
 26022  003D2A  0100               	movlb	0	; () banked
 26023  003D2C  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 26024  003D2E  0E00               	movlw	0
 26025  003D30  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26026  003D32  0E06               	movlw	6
 26027  003D34  EC0D  F02F         	call	_RADIO_WriteMode
 26028                           
 26029                           ;radio_driver_SX1276.c: 933: }
 26030  003D38  D039               	goto	l530
 26031  003D3A                     l529:
 26032                           
 26033                           ;radio_driver_SX1276.c: 934: else
 26034                           ;radio_driver_SX1276.c: 935: {
 26035                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 26036  003D3A  0E00               	movlw	0
 26037  003D3C  0100               	movlb	0	; () banked
 26038  003D3E  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 26039  003D40  0E00               	movlw	0
 26040  003D42  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26041  003D44  0E05               	movlw	5
 26042  003D46  EC0D  F02F         	call	_RADIO_WriteMode
 26043                           
 26044                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 26045  003D4A  0100               	movlb	0	; () banked
 26046  003D4C  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 26047  003D4E  6FB3               	movwf	??_RADIO_ReceiveStart& (0+255),b
 26048  003D50  51B2               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 26049  003D52  6FB4               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 26050  003D54  6BB5               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 26051  003D56  6BB6               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 26052  003D58  0E0C               	movlw	12
 26053  003D5A                     u15835:
 26054  003D5A  90D8               	bcf	status,0,c
 26055  003D5C  37B3               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 26056  003D5E  37B4               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 26057  003D60  37B5               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 26058  003D62  37B6               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 26059  003D64  2EE8               	decfsz	wreg,f,c
 26060  003D66  D7F9               	goto	u15835
 26061  003D68  C0B3  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 26062  003D6C  C0B4  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 26063  003D70  C0B5  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 26064  003D74  C0B6  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 26065  003D78  0E7D               	movlw	125
 26066  003D7A  6F64               	movwf	___lldiv@divisor& (0+255),b
 26067  003D7C  0E00               	movlw	0
 26068  003D7E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 26069  003D80  0E00               	movlw	0
 26070  003D82  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 26071  003D84  0E00               	movlw	0
 26072  003D86  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 26073  003D88  ECB4  F039         	call	___lldiv	;wreg free
 26074  003D8C  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 26075  003D90  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 26076  003D94  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 26077  003D98  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 26078  003D9C  0101               	movlb	1	; () banked
 26079  003D9E  514C               	movf	(_RadioConfiguration+40)& (0+255),w,b
 26080  003DA0  EC23  F041         	call	_SwTimerSetTimeout
 26081                           
 26082                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 26083  003DA4  0101               	movlb	1	; () banked
 26084  003DA6  514C               	movf	(_RadioConfiguration+40)& (0+255),w,b
 26085  003DA8  EC3B  F037         	call	_SwTimerStart
 26086  003DAC                     l530:
 26087                           
 26088                           ;radio_driver_SX1276.c: 939: }
 26089                           ;radio_driver_SX1276.c: 940: }
 26090                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 26091  003DAC  0101               	movlb	1	; () banked
 26092  003DAE  514E               	movf	(_RadioConfiguration+42)& (0+255),w,b
 26093  003DB0  114F               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 26094  003DB2  1150               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 26095  003DB4  1151               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 26096  003DB6  B4D8               	btfsc	status,2,c
 26097  003DB8  D061               	goto	l531
 26098                           
 26099                           ; BSR set to: 1
 26100                           ;radio_driver_SX1276.c: 943: {
 26101                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 26102  003DBA  5151               	movf	(_RadioConfiguration+45)& (0+255),w,b
 26103  003DBC  E107               	bnz	u15850
 26104  003DBE  294E               	incf	(_RadioConfiguration+42)& (0+255),w,b
 26105  003DC0  0EFF               	movlw	255
 26106  003DC2  594F               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 26107  003DC4  0E0F               	movlw	15
 26108  003DC6  5950               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 26109  003DC8  A0D8               	btfss	status,0,c
 26110  003DCA  D01D               	goto	l533
 26111  003DCC                     u15850:
 26112                           
 26113                           ; BSR set to: 1
 26114  003DCC  C14E  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 26115  003DD0  C14F  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 26116  003DD4  C150  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 26117  003DD8  C151  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 26118  003DDC  0E7D               	movlw	125
 26119  003DDE  0100               	movlb	0	; () banked
 26120  003DE0  6F64               	movwf	___lldiv@divisor& (0+255),b
 26121  003DE2  0E00               	movlw	0
 26122  003DE4  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 26123  003DE6  0E00               	movlw	0
 26124  003DE8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 26125  003DEA  0E00               	movlw	0
 26126  003DEC  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 26127  003DEE  ECB4  F039         	call	___lldiv	;wreg free
 26128  003DF2  0E0C               	movlw	12
 26129  003DF4                     u15865:
 26130  003DF4  90D8               	bcf	status,0,c
 26131  003DF6  0100               	movlb	0	; () banked
 26132  003DF8  3760               	rlcf	?___lldiv& (0+255),f,b
 26133  003DFA  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 26134  003DFC  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 26135  003DFE  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 26136  003E00  2EE8               	decfsz	wreg,f,c
 26137  003E02  D7F8               	goto	u15865
 26138  003E04  D023               	goto	L18
 26139  003E06                     l533:
 26140                           
 26141                           ; BSR set to: 0
 26142  003E06  C14E  F0B3         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 26143  003E0A  C14F  F0B4         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 26144  003E0E  C150  F0B5         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 26145  003E12  C151  F0B6         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 26146  003E16  0E0C               	movlw	12
 26147  003E18                     u15875:
 26148  003E18  90D8               	bcf	status,0,c
 26149  003E1A  0100               	movlb	0	; () banked
 26150  003E1C  37B3               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 26151  003E1E  37B4               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 26152  003E20  37B5               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 26153  003E22  37B6               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 26154  003E24  2EE8               	decfsz	wreg,f,c
 26155  003E26  D7F8               	goto	u15875
 26156  003E28  C0B3  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 26157  003E2C  C0B4  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 26158  003E30  C0B5  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 26159  003E34  C0B6  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 26160  003E38  0E7D               	movlw	125
 26161  003E3A  6F64               	movwf	___lldiv@divisor& (0+255),b
 26162  003E3C  0E00               	movlw	0
 26163  003E3E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 26164  003E40  0E00               	movlw	0
 26165  003E42  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 26166  003E44  0E00               	movlw	0
 26167  003E46  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 26168  003E48  ECB4  F039         	call	___lldiv	;wreg free
 26169  003E4C                     L18:
 26170  003E4C  C060  F0B7         	movff	?___lldiv,_RADIO_ReceiveStart$777
 26171  003E50  C061  F0B8         	movff	?___lldiv+1,_RADIO_ReceiveStart$777+1
 26172  003E54  C062  F0B9         	movff	?___lldiv+2,_RADIO_ReceiveStart$777+2
 26173  003E58  C063  F0BA         	movff	?___lldiv+3,_RADIO_ReceiveStart$777+3
 26174  003E5C  C0B7  F06D         	movff	_RADIO_ReceiveStart$777,SwTimerSetTimeout@timeout
 26175  003E60  C0B8  F06E         	movff	_RADIO_ReceiveStart$777+1,SwTimerSetTimeout@timeout+1
 26176  003E64  C0B9  F06F         	movff	_RADIO_ReceiveStart$777+2,SwTimerSetTimeout@timeout+2
 26177  003E68  C0BA  F070         	movff	_RADIO_ReceiveStart$777+3,SwTimerSetTimeout@timeout+3
 26178  003E6C  0101               	movlb	1	; () banked
 26179  003E6E  514D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26180  003E70  EC23  F041         	call	_SwTimerSetTimeout
 26181                           
 26182                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 26183  003E74  0101               	movlb	1	; () banked
 26184  003E76  514D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26185  003E78  EC3B  F037         	call	_SwTimerStart
 26186  003E7C                     l531:
 26187                           
 26188                           ;radio_driver_SX1276.c: 946: }
 26189                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 26190  003E7C  0E00               	movlw	0
 26191  003E7E  0100               	movlb	0	; () banked
 26192  003E80  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 26193  003E82  0E00               	movlw	0
 26194  003E84  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 26195  003E86  0012               	return	
 26196  003E88                     __end_of_RADIO_ReceiveStart:
 26197                           	opt stack 0
 26198                           tosu	equ	0xFFF
 26199                           tosh	equ	0xFFE
 26200                           tosl	equ	0xFFD
 26201                           pclath	equ	0xFFA
 26202                           tblptru	equ	0xFF8
 26203                           tblptrh	equ	0xFF7
 26204                           tblptrl	equ	0xFF6
 26205                           tablat	equ	0xFF5
 26206                           prodh	equ	0xFF4
 26207                           prodl	equ	0xFF3
 26208                           intcon	equ	0xFF2
 26209                           intcon2	equ	0xFF1
 26210                           intcon3	equ	0xFF0
 26211                           indf0	equ	0xFEF
 26212                           postinc0	equ	0xFEE
 26213                           fsr0h	equ	0xFEA
 26214                           fsr0l	equ	0xFE9
 26215                           wreg	equ	0xFE8
 26216                           postinc1	equ	0xFE6
 26217                           postdec1	equ	0xFE5
 26218                           plusw1	equ	0xFE3
 26219                           fsr1h	equ	0xFE2
 26220                           fsr1l	equ	0xFE1
 26221                           indf2	equ	0xFDF
 26222                           postinc2	equ	0xFDE
 26223                           postdec2	equ	0xFDD
 26224                           plusw2	equ	0xFDB
 26225                           fsr2h	equ	0xFDA
 26226                           fsr2l	equ	0xFD9
 26227                           status	equ	0xFD8
 26228                           
 26229 ;; *************** function _ConfigureRadioRx *****************
 26230 ;; Defined at:
 26231 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26232 ;; Parameters:    Size  Location     Type
 26233 ;;  dataRate        1    wreg     unsigned char 
 26234 ;;  freq            4   19[BANK0 ] unsigned long 
 26235 ;; Auto vars:     Size  Location     Type
 26236 ;;  dataRate        1   23[BANK0 ] unsigned char 
 26237 ;; Return value:  Size  Location     Type
 26238 ;;                  1    wreg      void 
 26239 ;; Registers used:
 26240 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26241 ;; Tracked objects:
 26242 ;;		On entry : 0/0
 26243 ;;		On exit  : 0/0
 26244 ;;		Unchanged: 0/0
 26245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26246 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26247 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26249 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26250 ;;Total ram usage:        5 bytes
 26251 ;; Hardware stack levels used:    1
 26252 ;; Hardware stack levels required when called:   10
 26253 ;; This function calls:
 26254 ;;		_ConfigureRadio
 26255 ;;		_RADIO_SetCRC
 26256 ;;		_RADIO_SetIQInverted
 26257 ;; This function is called by:
 26258 ;;		_LORAWAN_ReceiveWindow1Callback
 26259 ;;		_LORAWAN_ReceiveWindow2Callback
 26260 ;;		_LORAWAN_EnterContinuousReceive
 26261 ;; This function uses a non-reentrant model
 26262 ;;
 26263                           
 26264                           	psect	text125
 26265  008728                     __ptext125:
 26266                           	opt stack 0
 26267  008728                     _ConfigureRadioRx:
 26268                           	opt stack 15
 26269                           
 26270                           ; BSR set to: 0
 26271                           ;incstack = 0
 26272                           ;ConfigureRadioRx@dataRate stored from wreg
 26273  008728  0100               	movlb	0	; () banked
 26274  00872A  6F77               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 26275                           
 26276                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 26277  00872C  C073  F06E         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 26278  008730  C074  F06F         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 26279  008734  C075  F070         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 26280  008738  C076  F071         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 26281  00873C  0100               	movlb	0	; () banked
 26282  00873E  5177               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 26283  008740  EC43  F036         	call	_ConfigureRadio
 26284                           
 26285                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 26286  008744  0E00               	movlw	0
 26287  008746  EC83  F046         	call	_RADIO_SetCRC
 26288                           
 26289                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 26290  00874A  0E01               	movlw	1
 26291  00874C  EC7E  F046         	call	_RADIO_SetIQInverted
 26292  008750  0012               	return		;funcret
 26293  008752                     __end_of_ConfigureRadioRx:
 26294                           	opt stack 0
 26295                           tosu	equ	0xFFF
 26296                           tosh	equ	0xFFE
 26297                           tosl	equ	0xFFD
 26298                           pclath	equ	0xFFA
 26299                           tblptru	equ	0xFF8
 26300                           tblptrh	equ	0xFF7
 26301                           tblptrl	equ	0xFF6
 26302                           tablat	equ	0xFF5
 26303                           prodh	equ	0xFF4
 26304                           prodl	equ	0xFF3
 26305                           intcon	equ	0xFF2
 26306                           intcon2	equ	0xFF1
 26307                           intcon3	equ	0xFF0
 26308                           indf0	equ	0xFEF
 26309                           postinc0	equ	0xFEE
 26310                           fsr0h	equ	0xFEA
 26311                           fsr0l	equ	0xFE9
 26312                           wreg	equ	0xFE8
 26313                           postinc1	equ	0xFE6
 26314                           postdec1	equ	0xFE5
 26315                           plusw1	equ	0xFE3
 26316                           fsr1h	equ	0xFE2
 26317                           fsr1l	equ	0xFE1
 26318                           indf2	equ	0xFDF
 26319                           postinc2	equ	0xFDE
 26320                           postdec2	equ	0xFDD
 26321                           plusw2	equ	0xFDB
 26322                           fsr2h	equ	0xFDA
 26323                           fsr2l	equ	0xFD9
 26324                           status	equ	0xFD8
 26325                           
 26326 ;; *************** function _INTERRUPT_GetDioStatus *****************
 26327 ;; Defined at:
 26328 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 26329 ;; Parameters:    Size  Location     Type
 26330 ;;		None
 26331 ;; Auto vars:     Size  Location     Type
 26332 ;;  a               1    0[BANK0 ] unsigned char 
 26333 ;; Return value:  Size  Location     Type
 26334 ;;                  1    wreg      unsigned char 
 26335 ;; Registers used:
 26336 ;;		wreg, status,2
 26337 ;; Tracked objects:
 26338 ;;		On entry : 0/0
 26339 ;;		On exit  : 0/0
 26340 ;;		Unchanged: 0/0
 26341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26343 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26345 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26346 ;;Total ram usage:        1 bytes
 26347 ;; Hardware stack levels used:    1
 26348 ;; Hardware stack levels required when called:    7
 26349 ;; This function calls:
 26350 ;;		Nothing
 26351 ;; This function is called by:
 26352 ;;		_LORAWAN_Mainloop
 26353 ;; This function uses a non-reentrant model
 26354 ;;
 26355                           
 26356                           	psect	text126
 26357  008B72                     __ptext126:
 26358                           	opt stack 0
 26359  008B72                     _INTERRUPT_GetDioStatus:
 26360                           	opt stack 22
 26361                           
 26362                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 26363                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 26364                           
 26365                           ;incstack = 0
 26366  008B72  9EF2               	bcf	intcon,7,c	;volatile
 26367                           
 26368                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 26369  008B74  C123  F060         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 26370                           
 26371                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 26372  008B78  0E00               	movlw	0
 26373  008B7A  0101               	movlb	1	; () banked
 26374  008B7C  6F23               	movwf	_dioStatus& (0+255),b	;volatile
 26375                           
 26376                           ; BSR set to: 1
 26377                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 26378  008B7E  8EF2               	bsf	intcon,7,c	;volatile
 26379                           
 26380                           ;interrupt_manager_lora_addons.c: 55: return a;
 26381  008B80  0100               	movlb	0	; () banked
 26382  008B82  5160               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 26383  008B84  0012               	return	
 26384  008B86                     __end_of_INTERRUPT_GetDioStatus:
 26385                           	opt stack 0
 26386                           tosu	equ	0xFFF
 26387                           tosh	equ	0xFFE
 26388                           tosl	equ	0xFFD
 26389                           pclath	equ	0xFFA
 26390                           tblptru	equ	0xFF8
 26391                           tblptrh	equ	0xFF7
 26392                           tblptrl	equ	0xFF6
 26393                           tablat	equ	0xFF5
 26394                           prodh	equ	0xFF4
 26395                           prodl	equ	0xFF3
 26396                           intcon	equ	0xFF2
 26397                           intcon2	equ	0xFF1
 26398                           intcon3	equ	0xFF0
 26399                           indf0	equ	0xFEF
 26400                           postinc0	equ	0xFEE
 26401                           fsr0h	equ	0xFEA
 26402                           fsr0l	equ	0xFE9
 26403                           wreg	equ	0xFE8
 26404                           postinc1	equ	0xFE6
 26405                           postdec1	equ	0xFE5
 26406                           plusw1	equ	0xFE3
 26407                           fsr1h	equ	0xFE2
 26408                           fsr1l	equ	0xFE1
 26409                           indf2	equ	0xFDF
 26410                           postinc2	equ	0xFDE
 26411                           postdec2	equ	0xFDD
 26412                           plusw2	equ	0xFDB
 26413                           fsr2h	equ	0xFDA
 26414                           fsr2l	equ	0xFD9
 26415                           status	equ	0xFD8
 26416                           
 26417 ;; *************** function _LORAWAN_Join *****************
 26418 ;; Defined at:
 26419 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26420 ;; Parameters:    Size  Location     Type
 26421 ;;  activationTy    1    wreg     enum E7213
 26422 ;; Auto vars:     Size  Location     Type
 26423 ;;  activationTy    1  125[BANK0 ] enum E7213
 26424 ;;  result          1  124[BANK0 ] enum E7190
 26425 ;;  bufferIndex     1  123[BANK0 ] unsigned char 
 26426 ;; Return value:  Size  Location     Type
 26427 ;;                  1    wreg      enum E7190
 26428 ;; Registers used:
 26429 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26430 ;; Tracked objects:
 26431 ;;		On entry : 0/0
 26432 ;;		On exit  : 0/0
 26433 ;;		Unchanged: 0/0
 26434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26436 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26438 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26439 ;;Total ram usage:        3 bytes
 26440 ;; Hardware stack levels used:    1
 26441 ;; Hardware stack levels required when called:   14
 26442 ;; This function calls:
 26443 ;;		_PrepareJoinRequestFrame
 26444 ;;		_RADIO_Transmit
 26445 ;;		_SelectChannelForTransmission
 26446 ;;		_SwTimerSetTimeout
 26447 ;;		_SwTimerStart
 26448 ;;		_UpdateJoinInProgress
 26449 ;; This function is called by:
 26450 ;;		_main
 26451 ;; This function uses a non-reentrant model
 26452 ;;
 26453                           
 26454                           	psect	text127
 26455  006D2E                     __ptext127:
 26456                           	opt stack 0
 26457  006D2E                     _LORAWAN_Join:
 26458                           	opt stack 16
 26459                           
 26460                           ; BSR set to: 0
 26461                           ;incstack = 0
 26462                           ;LORAWAN_Join@activationTypeNew stored from wreg
 26463  006D2E  0100               	movlb	0	; () banked
 26464  006D30  6FDD               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 26465                           
 26466                           ;lorawan.c: 117: uint8_t bufferIndex;
 26467                           ;lorawan.c: 118: LorawanError_t result;
 26468                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 26469  006D32  0102               	movlb	2	; () banked
 26470  006D34  B103               	btfsc	(_loRa+3)& (0+255),0,b
 26471  006D36  0012               	return	
 26472                           
 26473                           ; BSR set to: 2
 26474                           ;lorawan.c: 123: }
 26475                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 26476                           
 26477                           ; BSR set to: 2
 26478                           ;lorawan.c: 121: {
 26479                           ;lorawan.c: 122: return MAC_PAUSED;
 26480                           ;	Return value of _LORAWAN_Join is never used
 26481  006D38  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 26482  006D3A  0012               	return	
 26483                           
 26484                           ; BSR set to: 2
 26485                           ;lorawan.c: 128: }
 26486                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 26487                           
 26488                           ; BSR set to: 2
 26489                           
 26490                           ; BSR set to: 2
 26491                           ;lorawan.c: 126: {
 26492                           ;lorawan.c: 127: return SILENT_IMMEDIATELY_ACTIVE;
 26493                           ;	Return value of _LORAWAN_Join is never used
 26494  006D3C  5102               	movf	(_loRa+2)& (0+255),w,b
 26495  006D3E  0B0F               	andlw	15
 26496  006D40  0900               	iorlw	0
 26497  006D42  A4D8               	btfss	status,2,c
 26498  006D44  0012               	return	
 26499                           
 26500                           ; BSR set to: 2
 26501                           ;lorawan.c: 133: }
 26502                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 26503                           
 26504                           ; BSR set to: 2
 26505                           ;lorawan.c: 131: {
 26506                           ;lorawan.c: 132: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 26507                           ;	Return value of _LORAWAN_Join is never used
 26508  006D46  C0DD  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 26509                           
 26510                           ; BSR set to: 2
 26511                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 26512  006D4A  0100               	movlb	0	; () banked
 26513  006D4C  51DD               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 26514  006D4E  A4D8               	btfss	status,2,c
 26515  006D50  D024               	goto	l1502
 26516                           
 26517                           ; BSR set to: 0
 26518                           ;lorawan.c: 138: {
 26519                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 26520  006D52  0102               	movlb	2	; () banked
 26521  006D54  A1A5               	btfss	(_loRa+165)& (0+255),0,b
 26522  006D56  0012               	return	
 26523                           
 26524                           ; BSR set to: 2
 26525  006D58  A3A5               	btfss	(_loRa+165)& (0+255),1,b
 26526  006D5A  0012               	return	
 26527                           
 26528                           ; BSR set to: 2
 26529  006D5C  A7A5               	btfss	(_loRa+165)& (0+255),3,b
 26530  006D5E  0012               	return	
 26531                           
 26532                           ; BSR set to: 2
 26533                           ;lorawan.c: 144: else
 26534                           ;lorawan.c: 145: {
 26535                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 26536                           
 26537                           ; BSR set to: 2
 26538                           
 26539                           ; BSR set to: 2
 26540                           ;lorawan.c: 143: }
 26541                           
 26542                           ; BSR set to: 2
 26543                           ;lorawan.c: 141: {
 26544                           ;lorawan.c: 142: return KEYS_NOT_INITIALIZED;
 26545                           ;	Return value of _LORAWAN_Join is never used
 26546  006D60  ECC9  F024         	call	_PrepareJoinRequestFrame	;wreg free
 26547  006D64  0100               	movlb	0	; () banked
 26548  006D66  6FDB               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 26549                           
 26550                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 26551  006D68  0E00               	movlw	0
 26552  006D6A  EC60  F03B         	call	_SelectChannelForTransmission
 26553  006D6E  0100               	movlb	0	; () banked
 26554  006D70  6FDC               	movwf	LORAWAN_Join@result& (0+255),b
 26555                           
 26556                           ; BSR set to: 0
 26557                           ;lorawan.c: 149: if (result == OK)
 26558  006D72  51DC               	movf	LORAWAN_Join@result& (0+255),w,b
 26559  006D74  A4D8               	btfss	status,2,c
 26560  006D76  0012               	return	
 26561                           
 26562                           ; BSR set to: 0
 26563                           ;lorawan.c: 150: {
 26564                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 26565  006D78  0EE0               	movlw	low _macBuffer
 26566  006D7A  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 26567  006D7C  0E04               	movlw	high _macBuffer
 26568  006D7E  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 26569  006D80  C0DB  F0B3         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 26570  006D84  EC10  F01D         	call	_RADIO_Transmit	;wreg free
 26571  006D88  0100               	movlb	0	; () banked
 26572  006D8A  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 26573  006D8C  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 26574  006D8E  A4D8               	btfss	status,2,c
 26575  006D90  0012               	return	
 26576                           
 26577                           ; BSR set to: 0
 26578                           ;lorawan.c: 152: {
 26579                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 26580  006D92  0E01               	movlw	1
 26581  006D94  EC4F  F045         	call	_UpdateJoinInProgress
 26582                           
 26583                           ;lorawan.c: 164: }
 26584                           ;lorawan.c: 165: }
 26585                           ;lorawan.c: 166: }
 26586                           
 26587                           ;lorawan.c: 161: else
 26588                           ;lorawan.c: 162: {
 26589                           ;lorawan.c: 163: return result;
 26590                           ;	Return value of _LORAWAN_Join is never used
 26591                           
 26592                           ;lorawan.c: 159: }
 26593                           ;lorawan.c: 160: }
 26594                           
 26595                           ;lorawan.c: 156: else
 26596                           ;lorawan.c: 157: {
 26597                           ;lorawan.c: 158: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 26598                           ;	Return value of _LORAWAN_Join is never used
 26599                           
 26600                           ;lorawan.c: 155: }
 26601                           
 26602                           ;lorawan.c: 154: return OK;
 26603                           ;	Return value of _LORAWAN_Join is never used
 26604  006D98  0012               	return	
 26605  006D9A                     l1502:
 26606                           
 26607                           ; BSR set to: 0
 26608                           ;lorawan.c: 167: else
 26609                           ;lorawan.c: 168: {
 26610                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 26611  006D9A  0102               	movlb	2	; () banked
 26612  006D9C  ABA5               	btfss	(_loRa+165)& (0+255),5,b
 26613  006D9E  0012               	return	
 26614                           
 26615                           ; BSR set to: 2
 26616  006DA0  A9A5               	btfss	(_loRa+165)& (0+255),4,b
 26617  006DA2  0012               	return	
 26618                           
 26619                           ; BSR set to: 2
 26620  006DA4  A5A5               	btfss	(_loRa+165)& (0+255),2,b
 26621  006DA6  0012               	return	
 26622                           
 26623                           ; BSR set to: 2
 26624                           ;lorawan.c: 174: else
 26625                           ;lorawan.c: 175: {
 26626                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 26627                           
 26628                           ; BSR set to: 2
 26629                           
 26630                           ; BSR set to: 2
 26631                           ;lorawan.c: 173: }
 26632                           
 26633                           ; BSR set to: 2
 26634                           ;lorawan.c: 171: {
 26635                           ;lorawan.c: 172: return KEYS_NOT_INITIALIZED;
 26636                           ;	Return value of _LORAWAN_Join is never used
 26637  006DA8  0E07               	movlw	7
 26638  006DAA  EC4F  F045         	call	_UpdateJoinInProgress
 26639                           
 26640                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 26641  006DAE  0E8F               	movlw	143
 26642  006DB0  0100               	movlb	0	; () banked
 26643  006DB2  6F6D               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 26644  006DB4  0E02               	movlw	2
 26645  006DB6  6F6E               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 26646  006DB8  0E00               	movlw	0
 26647  006DBA  6F6F               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 26648  006DBC  0E00               	movlw	0
 26649  006DBE  6F70               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 26650  006DC0  0102               	movlb	2	; () banked
 26651  006DC2  51F3               	movf	(_loRa+243)& (0+255),w,b
 26652  006DC4  EC23  F041         	call	_SwTimerSetTimeout
 26653                           
 26654                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 26655  006DC8  0102               	movlb	2	; () banked
 26656  006DCA  51F3               	movf	(_loRa+243)& (0+255),w,b
 26657  006DCC  EC3B  F037         	call	_SwTimerStart
 26658                           
 26659                           ;lorawan.c: 180: return OK;
 26660                           ;	Return value of _LORAWAN_Join is never used
 26661  006DD0  0012               	return	
 26662  006DD2                     __end_of_LORAWAN_Join:
 26663                           	opt stack 0
 26664                           tosu	equ	0xFFF
 26665                           tosh	equ	0xFFE
 26666                           tosl	equ	0xFFD
 26667                           pclath	equ	0xFFA
 26668                           tblptru	equ	0xFF8
 26669                           tblptrh	equ	0xFF7
 26670                           tblptrl	equ	0xFF6
 26671                           tablat	equ	0xFF5
 26672                           prodh	equ	0xFF4
 26673                           prodl	equ	0xFF3
 26674                           intcon	equ	0xFF2
 26675                           intcon2	equ	0xFF1
 26676                           intcon3	equ	0xFF0
 26677                           indf0	equ	0xFEF
 26678                           postinc0	equ	0xFEE
 26679                           fsr0h	equ	0xFEA
 26680                           fsr0l	equ	0xFE9
 26681                           wreg	equ	0xFE8
 26682                           postinc1	equ	0xFE6
 26683                           postdec1	equ	0xFE5
 26684                           plusw1	equ	0xFE3
 26685                           fsr1h	equ	0xFE2
 26686                           fsr1l	equ	0xFE1
 26687                           indf2	equ	0xFDF
 26688                           postinc2	equ	0xFDE
 26689                           postdec2	equ	0xFDD
 26690                           plusw2	equ	0xFDB
 26691                           fsr2h	equ	0xFDA
 26692                           fsr2l	equ	0xFD9
 26693                           status	equ	0xFD8
 26694                           
 26695 ;; *************** function _UpdateJoinInProgress *****************
 26696 ;; Defined at:
 26697 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26698 ;; Parameters:    Size  Location     Type
 26699 ;;  state           1    wreg     unsigned char 
 26700 ;; Auto vars:     Size  Location     Type
 26701 ;;  state           1    0[BANK0 ] unsigned char 
 26702 ;; Return value:  Size  Location     Type
 26703 ;;                  1    wreg      void 
 26704 ;; Registers used:
 26705 ;;		wreg, status,2, status,0
 26706 ;; Tracked objects:
 26707 ;;		On entry : 0/0
 26708 ;;		On exit  : 0/0
 26709 ;;		Unchanged: 0/0
 26710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26712 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26714 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26715 ;;Total ram usage:        1 bytes
 26716 ;; Hardware stack levels used:    1
 26717 ;; Hardware stack levels required when called:    7
 26718 ;; This function calls:
 26719 ;;		Nothing
 26720 ;; This function is called by:
 26721 ;;		_LORAWAN_Join
 26722 ;; This function uses a non-reentrant model
 26723 ;;
 26724                           
 26725                           	psect	text128
 26726  008A9E                     __ptext128:
 26727                           	opt stack 0
 26728  008A9E                     _UpdateJoinInProgress:
 26729                           	opt stack 22
 26730                           
 26731                           ;incstack = 0
 26732                           ;UpdateJoinInProgress@state stored from wreg
 26733  008A9E  0100               	movlb	0	; () banked
 26734  008AA0  6F60               	movwf	UpdateJoinInProgress@state& (0+255),b
 26735                           
 26736                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 26737  008AA2  0102               	movlb	2	; () banked
 26738  008AA4  9902               	bcf	(_loRa+2)& (0+255),4,b
 26739                           
 26740                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 26741  008AA6  8500               	bsf	_loRa& (0+255),2,b
 26742                           
 26743                           ; BSR set to: 2
 26744                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 26745  008AA8  5102               	movf	(_loRa+2)& (0+255),w,b
 26746  008AAA  0100               	movlb	0	; () banked
 26747  008AAC  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 26748  008AAE  0BF0               	andlw	-16
 26749  008AB0  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 26750  008AB2  0102               	movlb	2	; () banked
 26751  008AB4  6F02               	movwf	(_loRa+2)& (0+255),b
 26752                           
 26753                           ; BSR set to: 2
 26754  008AB6  0012               	return		;funcret
 26755  008AB8                     __end_of_UpdateJoinInProgress:
 26756                           	opt stack 0
 26757                           tosu	equ	0xFFF
 26758                           tosh	equ	0xFFE
 26759                           tosl	equ	0xFFD
 26760                           pclath	equ	0xFFA
 26761                           tblptru	equ	0xFF8
 26762                           tblptrh	equ	0xFF7
 26763                           tblptrl	equ	0xFF6
 26764                           tablat	equ	0xFF5
 26765                           prodh	equ	0xFF4
 26766                           prodl	equ	0xFF3
 26767                           intcon	equ	0xFF2
 26768                           intcon2	equ	0xFF1
 26769                           intcon3	equ	0xFF0
 26770                           indf0	equ	0xFEF
 26771                           postinc0	equ	0xFEE
 26772                           fsr0h	equ	0xFEA
 26773                           fsr0l	equ	0xFE9
 26774                           wreg	equ	0xFE8
 26775                           postinc1	equ	0xFE6
 26776                           postdec1	equ	0xFE5
 26777                           plusw1	equ	0xFE3
 26778                           fsr1h	equ	0xFE2
 26779                           fsr1l	equ	0xFE1
 26780                           indf2	equ	0xFDF
 26781                           postinc2	equ	0xFDE
 26782                           postdec2	equ	0xFDD
 26783                           plusw2	equ	0xFDB
 26784                           fsr2h	equ	0xFDA
 26785                           fsr2l	equ	0xFD9
 26786                           status	equ	0xFD8
 26787                           
 26788 ;; *************** function _SelectChannelForTransmission *****************
 26789 ;; Defined at:
 26790 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26791 ;; Parameters:    Size  Location     Type
 26792 ;;  transmission    1    wreg     unsigned char 
 26793 ;; Auto vars:     Size  Location     Type
 26794 ;;  transmission    1   91[BANK0 ] unsigned char 
 26795 ;;  channelIndex    1   93[BANK0 ] unsigned char 
 26796 ;;  result          1   92[BANK0 ] enum E7249
 26797 ;; Return value:  Size  Location     Type
 26798 ;;                  1    wreg      enum E7249
 26799 ;; Registers used:
 26800 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26801 ;; Tracked objects:
 26802 ;;		On entry : 0/0
 26803 ;;		On exit  : 0/0
 26804 ;;		Unchanged: 0/0
 26805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26807 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26809 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26810 ;;Total ram usage:        3 bytes
 26811 ;; Hardware stack levels used:    1
 26812 ;; Hardware stack levels required when called:   11
 26813 ;; This function calls:
 26814 ;;		_ConfigureRadioTx
 26815 ;;		_SearchAvailableChannel
 26816 ;; This function is called by:
 26817 ;;		_LORAWAN_RxTimeout
 26818 ;;		_LORAWAN_Join
 26819 ;;		_LORAWAN_Send
 26820 ;;		_AckRetransmissionCallback
 26821 ;;		_UnconfirmedTransmissionCallback
 26822 ;; This function uses a non-reentrant model
 26823 ;;
 26824                           
 26825                           	psect	text129
 26826  0076C0                     __ptext129:
 26827                           	opt stack 0
 26828  0076C0                     _SelectChannelForTransmission:
 26829                           	opt stack 18
 26830                           
 26831                           ; BSR set to: 2
 26832                           ;incstack = 0
 26833                           ;SelectChannelForTransmission@transmissionType stored from wreg
 26834  0076C0  0100               	movlb	0	; () banked
 26835  0076C2  6FBB               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 26836                           
 26837                           ;lorawan_eu.c: 921: LorawanError_t result = OK;
 26838  0076C4  0E00               	movlw	0
 26839  0076C6  0100               	movlb	0	; () banked
 26840  0076C8  6FBC               	movwf	SelectChannelForTransmission@result& (0+255),b
 26841                           
 26842                           ; BSR set to: 0
 26843                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 26844                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 26845  0076CA  C0BB  F0AF         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 26846  0076CE  0EBD               	movlw	low SelectChannelForTransmission@channelIndex
 26847  0076D0  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 26848  0076D2  0E00               	movlw	high SelectChannelForTransmission@channelIndex
 26849  0076D4  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 26850  0076D6  0E10               	movlw	16
 26851  0076D8  EC55  F02C         	call	_SearchAvailableChannel
 26852  0076DC  0100               	movlb	0	; () banked
 26853  0076DE  6FBC               	movwf	SelectChannelForTransmission@result& (0+255),b
 26854                           
 26855                           ; BSR set to: 0
 26856                           ;lorawan_eu.c: 926: if (result == OK)
 26857  0076E0  51BC               	movf	SelectChannelForTransmission@result& (0+255),w,b
 26858  0076E2  A4D8               	btfss	status,2,c
 26859  0076E4  D020               	goto	l1188
 26860                           
 26861                           ; BSR set to: 0
 26862                           ;lorawan_eu.c: 927: {
 26863                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 26864  0076E6  C0BD  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 26865                           
 26866                           ; BSR set to: 0
 26867                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 26868  0076EA  51BD               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 26869  0076EC  0D0E               	mullw	14
 26870  0076EE  0E00               	movlw	low _Channels
 26871  0076F0  24F3               	addwf	prodl,w,c
 26872  0076F2  6ED9               	movwf	fsr2l,c
 26873  0076F4  0E04               	movlw	high _Channels
 26874  0076F6  20F4               	addwfc	prodh,w,c
 26875  0076F8  6EDA               	movwf	fsr2h,c
 26876  0076FA  CFDE F213          	movff	postinc2,_loRa+19
 26877  0076FE  CFDE F214          	movff	postinc2,_loRa+20
 26878  007702  CFDE F215          	movff	postinc2,_loRa+21
 26879  007706  CFDE F216          	movff	postinc2,_loRa+22
 26880                           
 26881                           ; BSR set to: 0
 26882                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 26883  00770A  C2DF  F217         	movff	_loRa+223,_loRa+23
 26884                           
 26885                           ; BSR set to: 0
 26886                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 26887  00770E  C213  F073         	movff	_loRa+19,ConfigureRadioTx@freq
 26888  007712  C214  F074         	movff	_loRa+20,ConfigureRadioTx@freq+1
 26889  007716  C215  F075         	movff	_loRa+21,ConfigureRadioTx@freq+2
 26890  00771A  C216  F076         	movff	_loRa+22,ConfigureRadioTx@freq+3
 26891  00771E  0102               	movlb	2	; () banked
 26892  007720  5117               	movf	(_loRa+23)& (0+255),w,b
 26893  007722  EC48  F03F         	call	_ConfigureRadioTx
 26894  007726                     l1188:
 26895                           
 26896                           ;lorawan_eu.c: 933: }
 26897                           ;lorawan_eu.c: 934: return result;
 26898  007726  0100               	movlb	0	; () banked
 26899  007728  51BC               	movf	SelectChannelForTransmission@result& (0+255),w,b
 26900  00772A  0012               	return	
 26901  00772C                     __end_of_SelectChannelForTransmission:
 26902                           	opt stack 0
 26903                           tosu	equ	0xFFF
 26904                           tosh	equ	0xFFE
 26905                           tosl	equ	0xFFD
 26906                           pclath	equ	0xFFA
 26907                           tblptru	equ	0xFF8
 26908                           tblptrh	equ	0xFF7
 26909                           tblptrl	equ	0xFF6
 26910                           tablat	equ	0xFF5
 26911                           prodh	equ	0xFF4
 26912                           prodl	equ	0xFF3
 26913                           intcon	equ	0xFF2
 26914                           intcon2	equ	0xFF1
 26915                           intcon3	equ	0xFF0
 26916                           indf0	equ	0xFEF
 26917                           postinc0	equ	0xFEE
 26918                           fsr0h	equ	0xFEA
 26919                           fsr0l	equ	0xFE9
 26920                           wreg	equ	0xFE8
 26921                           postinc1	equ	0xFE6
 26922                           postdec1	equ	0xFE5
 26923                           plusw1	equ	0xFE3
 26924                           fsr1h	equ	0xFE2
 26925                           fsr1l	equ	0xFE1
 26926                           indf2	equ	0xFDF
 26927                           postinc2	equ	0xFDE
 26928                           postdec2	equ	0xFDD
 26929                           plusw2	equ	0xFDB
 26930                           fsr2h	equ	0xFDA
 26931                           fsr2l	equ	0xFD9
 26932                           status	equ	0xFD8
 26933                           
 26934 ;; *************** function _SearchAvailableChannel *****************
 26935 ;; Defined at:
 26936 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26937 ;; Parameters:    Size  Location     Type
 26938 ;;  maxChannels     1    wreg     unsigned char 
 26939 ;;  transmission    1   79[BANK0 ] unsigned char 
 26940 ;;  channelIndex    2   80[BANK0 ] PTR unsigned char 
 26941 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 26942 ;; Auto vars:     Size  Location     Type
 26943 ;;  maxChannels     1   88[BANK0 ] unsigned char 
 26944 ;;  i               1   90[BANK0 ] unsigned char 
 26945 ;;  randomNumber    1   89[BANK0 ] unsigned char 
 26946 ;;  result          1   87[BANK0 ] enum E7249
 26947 ;;  randomNumber    1   86[BANK0 ] unsigned char 
 26948 ;; Return value:  Size  Location     Type
 26949 ;;                  1    wreg      enum E7249
 26950 ;; Registers used:
 26951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26952 ;; Tracked objects:
 26953 ;;		On entry : 0/0
 26954 ;;		On exit  : 0/0
 26955 ;;		Unchanged: 0/0
 26956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26957 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26958 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26959 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26960 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26961 ;;Total ram usage:       12 bytes
 26962 ;; Hardware stack levels used:    1
 26963 ;; Hardware stack levels required when called:   10
 26964 ;; This function calls:
 26965 ;;		_Random
 26966 ;; This function is called by:
 26967 ;;		_SelectChannelForTransmission
 26968 ;;		_LORAWAN_RxDone
 26969 ;; This function uses a non-reentrant model
 26970 ;;
 26971                           
 26972                           	psect	text130
 26973  0058AA                     __ptext130:
 26974                           	opt stack 0
 26975  0058AA                     _SearchAvailableChannel:
 26976                           	opt stack 18
 26977                           
 26978                           ; BSR set to: 0
 26979                           ;incstack = 0
 26980                           ;SearchAvailableChannel@maxChannels stored from wreg
 26981  0058AA  0100               	movlb	0	; () banked
 26982  0058AC  6FB8               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 26983                           
 26984                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 26985                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 26986  0058AE  0E00               	movlw	0
 26987  0058B0  0100               	movlb	0	; () banked
 26988  0058B2  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 26989                           
 26990                           ; BSR set to: 0
 26991                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 26992  0058B4  C0B8  F0AD         	movff	SearchAvailableChannel@maxChannels,Random@max
 26993  0058B8  6BAE               	clrf	(Random@max+1)& (0+255),b
 26994  0058BA  EC54  F044         	call	_Random	;wreg free
 26995  0058BE  0100               	movlb	0	; () banked
 26996  0058C0  29AD               	incf	?_Random& (0+255),w,b
 26997  0058C2  6FB9               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 26998                           
 26999                           ; BSR set to: 0
 27000                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 27001  0058C4  C0B9  F0B6         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 27002                           
 27003                           ;lorawan_eu.c: 786: while (randomNumber)
 27004  0058C8  D074               	goto	l1152
 27005  0058CA                     
 27006                           ; BSR set to: 0
 27007                           ;lorawan_eu.c: 787: {
 27008                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 27009                           
 27010                           ; BSR set to: 0
 27011  0058CA  0E00               	movlw	0
 27012  0058CC  6FBA               	movwf	SearchAvailableChannel@i& (0+255),b
 27013  0058CE  D063               	goto	l1143
 27014  0058D0                     
 27015                           ; BSR set to: 0
 27016                           ;lorawan_eu.c: 789: {
 27017                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 27018                           
 27019                           ; BSR set to: 0
 27020  0058D0  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 27021  0058D2  0D0E               	mullw	14
 27022  0058D4  0E04               	movlw	4
 27023  0058D6  26F3               	addwf	prodl,f,c
 27024  0058D8  0E00               	movlw	0
 27025  0058DA  22F4               	addwfc	prodh,f,c
 27026  0058DC  0E00               	movlw	low _Channels
 27027  0058DE  24F3               	addwf	prodl,w,c
 27028  0058E0  6ED9               	movwf	fsr2l,c
 27029  0058E2  0E04               	movlw	high _Channels
 27030  0058E4  20F4               	addwfc	prodh,w,c
 27031  0058E6  6EDA               	movwf	fsr2h,c
 27032  0058E8  04DE               	decf	postinc2,w,c
 27033  0058EA  A4D8               	btfss	status,2,c
 27034  0058EC  D052               	goto	l1148
 27035                           
 27036                           ; BSR set to: 0
 27037  0058EE  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 27038  0058F0  0D0E               	mullw	14
 27039  0058F2  0E08               	movlw	8
 27040  0058F4  26F3               	addwf	prodl,f,c
 27041  0058F6  0E00               	movlw	0
 27042  0058F8  22F4               	addwfc	prodh,f,c
 27043  0058FA  0E00               	movlw	low _Channels
 27044  0058FC  24F3               	addwf	prodl,w,c
 27045  0058FE  6ED9               	movwf	fsr2l,c
 27046  005900  0E04               	movlw	high _Channels
 27047  005902  20F4               	addwfc	prodh,w,c
 27048  005904  6EDA               	movwf	fsr2h,c
 27049  005906  50DE               	movf	postinc2,w,c
 27050  005908  10DE               	iorwf	postinc2,w,c
 27051  00590A  10DE               	iorwf	postinc2,w,c
 27052  00590C  10DE               	iorwf	postinc2,w,c
 27053  00590E  A4D8               	btfss	status,2,c
 27054  005910  D040               	goto	l1148
 27055                           
 27056                           ; BSR set to: 0
 27057  005912  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 27058  005914  0D0E               	mullw	14
 27059  005916  0E05               	movlw	5
 27060  005918  26F3               	addwf	prodl,f,c
 27061  00591A  0E00               	movlw	0
 27062  00591C  22F4               	addwfc	prodh,f,c
 27063  00591E  0E00               	movlw	low _Channels
 27064  005920  24F3               	addwf	prodl,w,c
 27065  005922  6ED9               	movwf	fsr2l,c
 27066  005924  0E04               	movlw	high _Channels
 27067  005926  20F4               	addwfc	prodh,w,c
 27068  005928  6EDA               	movwf	fsr2h,c
 27069  00592A  0104               	movlb	4	; () banked
 27070  00592C  50DF               	movf	223,w,c
 27071  00592E  0B0F               	andlw	15
 27072  005930  0100               	movlb	0	; () banked
 27073  005932  6FB2               	movwf	??_SearchAvailableChannel& (0+255),b
 27074  005934  51B2               	movf	??_SearchAvailableChannel& (0+255),w,b
 27075  005936  0102               	movlb	2	; () banked
 27076  005938  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 27077  00593A  A0D8               	btfss	status,0,c
 27078  00593C  D02A               	goto	l1148
 27079                           
 27080                           ; BSR set to: 2
 27081  00593E  0100               	movlb	0	; () banked
 27082  005940  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 27083  005942  0D0E               	mullw	14
 27084  005944  0E05               	movlw	5
 27085  005946  26F3               	addwf	prodl,f,c
 27086  005948  0E00               	movlw	0
 27087  00594A  22F4               	addwfc	prodh,f,c
 27088  00594C  0E00               	movlw	low _Channels
 27089  00594E  24F3               	addwf	prodl,w,c
 27090  005950  6ED9               	movwf	fsr2l,c
 27091  005952  0E04               	movlw	high _Channels
 27092  005954  20F4               	addwfc	prodh,w,c
 27093  005956  6EDA               	movwf	fsr2h,c
 27094  005958  0104               	movlb	4	; () banked
 27095  00595A  38DF               	swapf	223,w,c
 27096  00595C  0B0F               	andlw	15
 27097  00595E  0100               	movlb	0	; () banked
 27098  005960  6FB2               	movwf	??_SearchAvailableChannel& (0+255),b
 27099  005962  0102               	movlb	2	; () banked
 27100  005964  51DF               	movf	(_loRa+223)& (0+255),w,b
 27101  005966  0100               	movlb	0	; () banked
 27102  005968  5DB2               	subwf	??_SearchAvailableChannel& (0+255),w,b
 27103  00596A  A0D8               	btfss	status,0,c
 27104  00596C  D012               	goto	l1148
 27105                           
 27106                           ; BSR set to: 0
 27107                           ;lorawan_eu.c: 791: {
 27108                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 27109  00596E  51AF               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 27110  005970  A4D8               	btfss	status,2,c
 27111  005972  D00E               	goto	l1146
 27112                           
 27113                           ; BSR set to: 0
 27114                           ;lorawan_eu.c: 793: {
 27115                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 27116  005974  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 27117  005976  0D0E               	mullw	14
 27118  005978  0E0C               	movlw	12
 27119  00597A  26F3               	addwf	prodl,f,c
 27120  00597C  0E00               	movlw	0
 27121  00597E  22F4               	addwfc	prodh,f,c
 27122  005980  0E00               	movlw	low _Channels
 27123  005982  24F3               	addwf	prodl,w,c
 27124  005984  6ED9               	movwf	fsr2l,c
 27125  005986  0E04               	movlw	high _Channels
 27126  005988  20F4               	addwfc	prodh,w,c
 27127  00598A  6EDA               	movwf	fsr2h,c
 27128  00598C  04DE               	decf	postinc2,w,c
 27129  00598E  B4D8               	btfsc	status,2,c
 27130  005990                     l1146:
 27131                           
 27132                           ; BSR set to: 0
 27133                           ;lorawan_eu.c: 799: else
 27134                           ;lorawan_eu.c: 800: {
 27135                           ;lorawan_eu.c: 801: randomNumber --;
 27136                           
 27137                           ; BSR set to: 0
 27138  005990  07B9               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 27139  005992                     l1148:
 27140                           
 27141                           ; BSR set to: 0
 27142  005992  0100               	movlb	0	; () banked
 27143  005994  2BBA               	incf	SearchAvailableChannel@i& (0+255),f,b
 27144  005996                     l1143:
 27145                           
 27146                           ; BSR set to: 0
 27147                           
 27148                           ; BSR set to: 0
 27149  005996  51B8               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 27150  005998  5DBA               	subwf	SearchAvailableChannel@i& (0+255),w,b
 27151  00599A  B0D8               	btfsc	status,0,c
 27152  00599C  D003               	goto	u16240
 27153                           
 27154                           ; BSR set to: 0
 27155  00599E  51B9               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 27156  0059A0  A4D8               	btfss	status,2,c
 27157  0059A2  D796               	goto	l1144
 27158  0059A4                     u16240:
 27159                           
 27160                           ; BSR set to: 0
 27161                           ;lorawan_eu.c: 802: }
 27162                           ;lorawan_eu.c: 803: }
 27163                           ;lorawan_eu.c: 804: }
 27164                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 27165                           
 27166                           ; BSR set to: 0
 27167                           
 27168                           ; BSR set to: 0
 27169  0059A4  51B6               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 27170  0059A6  19B9               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 27171  0059A8  A4D8               	btfss	status,2,c
 27172  0059AA  D003               	goto	l1152
 27173                           
 27174                           ; BSR set to: 0
 27175                           ;lorawan_eu.c: 807: {
 27176                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 27177  0059AC  0E09               	movlw	9
 27178  0059AE  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 27179                           
 27180                           ;lorawan_eu.c: 809: break;
 27181  0059B0  D003               	goto	u16260
 27182  0059B2                     l1152:
 27183                           
 27184                           ; BSR set to: 0
 27185                           
 27186                           ; BSR set to: 0
 27187                           
 27188                           ; BSR set to: 0
 27189  0059B2  51B9               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 27190  0059B4  A4D8               	btfss	status,2,c
 27191  0059B6  D789               	goto	l1142
 27192  0059B8                     u16260:
 27193                           
 27194                           ; BSR set to: 0
 27195                           ;lorawan_eu.c: 810: }
 27196                           ;lorawan_eu.c: 811: }
 27197                           ;lorawan_eu.c: 813: if ( i != 0)
 27198                           
 27199                           ; BSR set to: 0
 27200  0059B8  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 27201  0059BA  B4D8               	btfsc	status,2,c
 27202  0059BC  D007               	goto	l1154
 27203                           
 27204                           ; BSR set to: 0
 27205                           ;lorawan_eu.c: 814: {
 27206                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 27207  0059BE  05BA               	decf	SearchAvailableChannel@i& (0+255),w,b
 27208  0059C0  C0B0  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 27209  0059C4  C0B1  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 27210  0059C8  6EDF               	movwf	indf2,c
 27211                           
 27212                           ;lorawan_eu.c: 816: }
 27213  0059CA  D002               	goto	l1155
 27214  0059CC                     l1154:
 27215                           
 27216                           ; BSR set to: 0
 27217                           ;lorawan_eu.c: 817: else
 27218                           ;lorawan_eu.c: 818: {
 27219                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 27220                           
 27221                           ; BSR set to: 0
 27222  0059CC  0E09               	movlw	9
 27223  0059CE  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 27224  0059D0                     l1155:
 27225                           
 27226                           ; BSR set to: 0
 27227                           ;lorawan_eu.c: 820: }
 27228                           ;lorawan_eu.c: 821: return result;
 27229  0059D0  51B7               	movf	SearchAvailableChannel@result& (0+255),w,b
 27230  0059D2  0012               	return	
 27231  0059D4                     __end_of_SearchAvailableChannel:
 27232                           	opt stack 0
 27233                           tosu	equ	0xFFF
 27234                           tosh	equ	0xFFE
 27235                           tosl	equ	0xFFD
 27236                           pclath	equ	0xFFA
 27237                           tblptru	equ	0xFF8
 27238                           tblptrh	equ	0xFF7
 27239                           tblptrl	equ	0xFF6
 27240                           tablat	equ	0xFF5
 27241                           prodh	equ	0xFF4
 27242                           prodl	equ	0xFF3
 27243                           intcon	equ	0xFF2
 27244                           intcon2	equ	0xFF1
 27245                           intcon3	equ	0xFF0
 27246                           indf0	equ	0xFEF
 27247                           postinc0	equ	0xFEE
 27248                           fsr0h	equ	0xFEA
 27249                           fsr0l	equ	0xFE9
 27250                           wreg	equ	0xFE8
 27251                           postinc1	equ	0xFE6
 27252                           postdec1	equ	0xFE5
 27253                           plusw1	equ	0xFE3
 27254                           fsr1h	equ	0xFE2
 27255                           fsr1l	equ	0xFE1
 27256                           indf2	equ	0xFDF
 27257                           postinc2	equ	0xFDE
 27258                           postdec2	equ	0xFDD
 27259                           plusw2	equ	0xFDB
 27260                           fsr2h	equ	0xFDA
 27261                           fsr2l	equ	0xFD9
 27262                           status	equ	0xFD8
 27263                           
 27264 ;; *************** function _ConfigureRadioTx *****************
 27265 ;; Defined at:
 27266 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 27267 ;; Parameters:    Size  Location     Type
 27268 ;;  dataRate        1    wreg     unsigned char 
 27269 ;;  freq            4   19[BANK0 ] unsigned long 
 27270 ;; Auto vars:     Size  Location     Type
 27271 ;;  dataRate        1   23[BANK0 ] unsigned char 
 27272 ;;  txPower         1   24[BANK0 ] char 
 27273 ;; Return value:  Size  Location     Type
 27274 ;;                  1    wreg      void 
 27275 ;; Registers used:
 27276 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27277 ;; Tracked objects:
 27278 ;;		On entry : 0/0
 27279 ;;		On exit  : 0/0
 27280 ;;		Unchanged: 0/0
 27281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27282 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27283 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27285 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27286 ;;Total ram usage:        6 bytes
 27287 ;; Hardware stack levels used:    1
 27288 ;; Hardware stack levels required when called:   10
 27289 ;; This function calls:
 27290 ;;		_ConfigureRadio
 27291 ;;		_RADIO_SetCRC
 27292 ;;		_RADIO_SetIQInverted
 27293 ;;		_RADIO_SetOutputPower
 27294 ;; This function is called by:
 27295 ;;		_SelectChannelForTransmission
 27296 ;; This function uses a non-reentrant model
 27297 ;;
 27298                           
 27299                           	psect	text131
 27300  007E90                     __ptext131:
 27301                           	opt stack 0
 27302  007E90                     _ConfigureRadioTx:
 27303                           	opt stack 18
 27304                           
 27305                           ; BSR set to: 0
 27306                           ;incstack = 0
 27307                           ;ConfigureRadioTx@dataRate stored from wreg
 27308  007E90  0100               	movlb	0	; () banked
 27309  007E92  6F77               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 27310                           
 27311                           ;lorawan_eu.c: 1257: int8_t txPower;
 27312                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 27313  007E94  C073  F06E         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 27314  007E98  C074  F06F         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 27315  007E9C  C075  F070         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 27316  007EA0  C076  F071         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 27317  007EA4  0100               	movlb	0	; () banked
 27318  007EA6  5177               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 27319  007EA8  EC43  F036         	call	_ConfigureRadio
 27320                           
 27321                           ;lorawan_eu.c: 1261: if (ISM_EU868 == loRa.ismBand)
 27322  007EAC  0102               	movlb	2	; () banked
 27323  007EAE  51A4               	movf	(_loRa+164)& (0+255),w,b
 27324                           
 27325                           ; BSR set to: 2
 27326                           ;lorawan_eu.c: 1265: else
 27327                           ;lorawan_eu.c: 1266: {
 27328                           ;lorawan_eu.c: 1267: txPower = txPower868[loRa.txPower];
 27329                           
 27330                           ; BSR set to: 2
 27331                           
 27332                           ;lorawan_eu.c: 1264: }
 27333                           
 27334                           ; BSR set to: 2
 27335                           ;lorawan_eu.c: 1262: {
 27336                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 27337  007EB0  51E1               	movf	(_loRa+225)& (0+255),w,b
 27338  007EB2  0D01               	mullw	1
 27339  007EB4  0E84               	movlw	low _txPower868
 27340  007EB6  24F3               	addwf	prodl,w,c
 27341  007EB8  6EF6               	movwf	tblptrl,c
 27342  007EBA  0EFF               	movlw	high _txPower868
 27343  007EBC  20F4               	addwfc	prodh,w,c
 27344  007EBE  6EF7               	movwf	tblptrh,c
 27345  007EC0                     	if	1	;There are 3 active tblptr bytes
 27346  007EC0  6AF8               	clrf	tblptru,c
 27347  007EC2  0E00               	movlw	low (__mediumconst shr (0+16))
 27348  007EC4  22F8               	addwfc	tblptru,f,c
 27349  007EC6                     	endif
 27350  007EC6  0008               	tblrd		*
 27351  007EC8  CFF5 F078          	movff	tablat,ConfigureRadioTx@txPower
 27352                           
 27353                           ; BSR set to: 2
 27354                           ;lorawan_eu.c: 1268: }
 27355                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 27356                           
 27357                           ; BSR set to: 2
 27358  007ECC  0100               	movlb	0	; () banked
 27359  007ECE  5178               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 27360  007ED0  EC79  F046         	call	_RADIO_SetOutputPower
 27361                           
 27362                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 27363  007ED4  0E01               	movlw	1
 27364  007ED6  EC83  F046         	call	_RADIO_SetCRC
 27365                           
 27366                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 27367  007EDA  0E00               	movlw	0
 27368  007EDC  EC7E  F046         	call	_RADIO_SetIQInverted
 27369  007EE0  0012               	return		;funcret
 27370  007EE2                     __end_of_ConfigureRadioTx:
 27371                           	opt stack 0
 27372                           tosu	equ	0xFFF
 27373                           tosh	equ	0xFFE
 27374                           tosl	equ	0xFFD
 27375                           pclath	equ	0xFFA
 27376                           tblptru	equ	0xFF8
 27377                           tblptrh	equ	0xFF7
 27378                           tblptrl	equ	0xFF6
 27379                           tablat	equ	0xFF5
 27380                           prodh	equ	0xFF4
 27381                           prodl	equ	0xFF3
 27382                           intcon	equ	0xFF2
 27383                           intcon2	equ	0xFF1
 27384                           intcon3	equ	0xFF0
 27385                           indf0	equ	0xFEF
 27386                           postinc0	equ	0xFEE
 27387                           fsr0h	equ	0xFEA
 27388                           fsr0l	equ	0xFE9
 27389                           wreg	equ	0xFE8
 27390                           postinc1	equ	0xFE6
 27391                           postdec1	equ	0xFE5
 27392                           plusw1	equ	0xFE3
 27393                           fsr1h	equ	0xFE2
 27394                           fsr1l	equ	0xFE1
 27395                           indf2	equ	0xFDF
 27396                           postinc2	equ	0xFDE
 27397                           postdec2	equ	0xFDD
 27398                           plusw2	equ	0xFDB
 27399                           fsr2h	equ	0xFDA
 27400                           fsr2l	equ	0xFD9
 27401                           status	equ	0xFD8
 27402                           
 27403 ;; *************** function _RADIO_SetOutputPower *****************
 27404 ;; Defined at:
 27405 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27406 ;; Parameters:    Size  Location     Type
 27407 ;;  power           1    wreg     char 
 27408 ;; Auto vars:     Size  Location     Type
 27409 ;;  power           1    0[BANK0 ] char 
 27410 ;; Return value:  Size  Location     Type
 27411 ;;                  1    wreg      void 
 27412 ;; Registers used:
 27413 ;;		wreg
 27414 ;; Tracked objects:
 27415 ;;		On entry : 0/0
 27416 ;;		On exit  : 0/0
 27417 ;;		Unchanged: 0/0
 27418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27420 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27422 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27423 ;;Total ram usage:        1 bytes
 27424 ;; Hardware stack levels used:    1
 27425 ;; Hardware stack levels required when called:    7
 27426 ;; This function calls:
 27427 ;;		Nothing
 27428 ;; This function is called by:
 27429 ;;		_ConfigureRadioTx
 27430 ;; This function uses a non-reentrant model
 27431 ;;
 27432                           
 27433                           	psect	text132
 27434  008CF2                     __ptext132:
 27435                           	opt stack 0
 27436  008CF2                     _RADIO_SetOutputPower:
 27437                           	opt stack 20
 27438                           
 27439                           ;incstack = 0
 27440                           ;RADIO_SetOutputPower@power stored from wreg
 27441  008CF2  0100               	movlb	0	; () banked
 27442  008CF4  6F60               	movwf	RADIO_SetOutputPower@power& (0+255),b
 27443                           
 27444                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 27445  008CF6  C060  F13F         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 27446  008CFA  0012               	return		;funcret
 27447  008CFC                     __end_of_RADIO_SetOutputPower:
 27448                           	opt stack 0
 27449                           tosu	equ	0xFFF
 27450                           tosh	equ	0xFFE
 27451                           tosl	equ	0xFFD
 27452                           pclath	equ	0xFFA
 27453                           tblptru	equ	0xFF8
 27454                           tblptrh	equ	0xFF7
 27455                           tblptrl	equ	0xFF6
 27456                           tablat	equ	0xFF5
 27457                           prodh	equ	0xFF4
 27458                           prodl	equ	0xFF3
 27459                           intcon	equ	0xFF2
 27460                           intcon2	equ	0xFF1
 27461                           intcon3	equ	0xFF0
 27462                           indf0	equ	0xFEF
 27463                           postinc0	equ	0xFEE
 27464                           fsr0h	equ	0xFEA
 27465                           fsr0l	equ	0xFE9
 27466                           wreg	equ	0xFE8
 27467                           postinc1	equ	0xFE6
 27468                           postdec1	equ	0xFE5
 27469                           plusw1	equ	0xFE3
 27470                           fsr1h	equ	0xFE2
 27471                           fsr1l	equ	0xFE1
 27472                           indf2	equ	0xFDF
 27473                           postinc2	equ	0xFDE
 27474                           postdec2	equ	0xFDD
 27475                           plusw2	equ	0xFDB
 27476                           fsr2h	equ	0xFDA
 27477                           fsr2l	equ	0xFD9
 27478                           status	equ	0xFD8
 27479                           
 27480 ;; *************** function _RADIO_SetIQInverted *****************
 27481 ;; Defined at:
 27482 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27483 ;; Parameters:    Size  Location     Type
 27484 ;;  iqInverted      1    wreg     unsigned char 
 27485 ;; Auto vars:     Size  Location     Type
 27486 ;;  iqInverted      1    0[BANK0 ] unsigned char 
 27487 ;; Return value:  Size  Location     Type
 27488 ;;                  1    wreg      void 
 27489 ;; Registers used:
 27490 ;;		wreg
 27491 ;; Tracked objects:
 27492 ;;		On entry : 0/0
 27493 ;;		On exit  : 0/0
 27494 ;;		Unchanged: 0/0
 27495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27497 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27499 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27500 ;;Total ram usage:        1 bytes
 27501 ;; Hardware stack levels used:    1
 27502 ;; Hardware stack levels required when called:    7
 27503 ;; This function calls:
 27504 ;;		Nothing
 27505 ;; This function is called by:
 27506 ;;		_ConfigureRadioTx
 27507 ;;		_ConfigureRadioRx
 27508 ;; This function uses a non-reentrant model
 27509 ;;
 27510                           
 27511                           	psect	text133
 27512  008CFC                     __ptext133:
 27513                           	opt stack 0
 27514  008CFC                     _RADIO_SetIQInverted:
 27515                           	opt stack 20
 27516                           
 27517                           ;incstack = 0
 27518                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 27519  008CFC  0100               	movlb	0	; () banked
 27520  008CFE  6F60               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 27521                           
 27522                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 27523  008D00  C060  F144         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 27524  008D04  0012               	return		;funcret
 27525  008D06                     __end_of_RADIO_SetIQInverted:
 27526                           	opt stack 0
 27527                           tosu	equ	0xFFF
 27528                           tosh	equ	0xFFE
 27529                           tosl	equ	0xFFD
 27530                           pclath	equ	0xFFA
 27531                           tblptru	equ	0xFF8
 27532                           tblptrh	equ	0xFF7
 27533                           tblptrl	equ	0xFF6
 27534                           tablat	equ	0xFF5
 27535                           prodh	equ	0xFF4
 27536                           prodl	equ	0xFF3
 27537                           intcon	equ	0xFF2
 27538                           intcon2	equ	0xFF1
 27539                           intcon3	equ	0xFF0
 27540                           indf0	equ	0xFEF
 27541                           postinc0	equ	0xFEE
 27542                           fsr0h	equ	0xFEA
 27543                           fsr0l	equ	0xFE9
 27544                           wreg	equ	0xFE8
 27545                           postinc1	equ	0xFE6
 27546                           postdec1	equ	0xFE5
 27547                           plusw1	equ	0xFE3
 27548                           fsr1h	equ	0xFE2
 27549                           fsr1l	equ	0xFE1
 27550                           indf2	equ	0xFDF
 27551                           postinc2	equ	0xFDE
 27552                           postdec2	equ	0xFDD
 27553                           plusw2	equ	0xFDB
 27554                           fsr2h	equ	0xFDA
 27555                           fsr2l	equ	0xFD9
 27556                           status	equ	0xFD8
 27557                           
 27558 ;; *************** function _RADIO_SetCRC *****************
 27559 ;; Defined at:
 27560 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27561 ;; Parameters:    Size  Location     Type
 27562 ;;  crc             1    wreg     unsigned char 
 27563 ;; Auto vars:     Size  Location     Type
 27564 ;;  crc             1    0[BANK0 ] unsigned char 
 27565 ;; Return value:  Size  Location     Type
 27566 ;;                  1    wreg      void 
 27567 ;; Registers used:
 27568 ;;		wreg
 27569 ;; Tracked objects:
 27570 ;;		On entry : 0/0
 27571 ;;		On exit  : 0/0
 27572 ;;		Unchanged: 0/0
 27573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27575 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27577 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27578 ;;Total ram usage:        1 bytes
 27579 ;; Hardware stack levels used:    1
 27580 ;; Hardware stack levels required when called:    7
 27581 ;; This function calls:
 27582 ;;		Nothing
 27583 ;; This function is called by:
 27584 ;;		_ConfigureRadioTx
 27585 ;;		_ConfigureRadioRx
 27586 ;; This function uses a non-reentrant model
 27587 ;;
 27588                           
 27589                           	psect	text134
 27590  008D06                     __ptext134:
 27591                           	opt stack 0
 27592  008D06                     _RADIO_SetCRC:
 27593                           	opt stack 20
 27594                           
 27595                           ;incstack = 0
 27596                           ;RADIO_SetCRC@crc stored from wreg
 27597  008D06  0100               	movlb	0	; () banked
 27598  008D08  6F60               	movwf	RADIO_SetCRC@crc& (0+255),b
 27599                           
 27600                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 27601  008D0A  C060  F140         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 27602  008D0E  0012               	return		;funcret
 27603  008D10                     __end_of_RADIO_SetCRC:
 27604                           	opt stack 0
 27605                           tosu	equ	0xFFF
 27606                           tosh	equ	0xFFE
 27607                           tosl	equ	0xFFD
 27608                           pclath	equ	0xFFA
 27609                           tblptru	equ	0xFF8
 27610                           tblptrh	equ	0xFF7
 27611                           tblptrl	equ	0xFF6
 27612                           tablat	equ	0xFF5
 27613                           prodh	equ	0xFF4
 27614                           prodl	equ	0xFF3
 27615                           intcon	equ	0xFF2
 27616                           intcon2	equ	0xFF1
 27617                           intcon3	equ	0xFF0
 27618                           indf0	equ	0xFEF
 27619                           postinc0	equ	0xFEE
 27620                           fsr0h	equ	0xFEA
 27621                           fsr0l	equ	0xFE9
 27622                           wreg	equ	0xFE8
 27623                           postinc1	equ	0xFE6
 27624                           postdec1	equ	0xFE5
 27625                           plusw1	equ	0xFE3
 27626                           fsr1h	equ	0xFE2
 27627                           fsr1l	equ	0xFE1
 27628                           indf2	equ	0xFDF
 27629                           postinc2	equ	0xFDE
 27630                           postdec2	equ	0xFDD
 27631                           plusw2	equ	0xFDB
 27632                           fsr2h	equ	0xFDA
 27633                           fsr2l	equ	0xFD9
 27634                           status	equ	0xFD8
 27635                           
 27636 ;; *************** function _ConfigureRadio *****************
 27637 ;; Defined at:
 27638 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 27639 ;; Parameters:    Size  Location     Type
 27640 ;;  dataRate        1    wreg     unsigned char 
 27641 ;;  freq            4   14[BANK0 ] unsigned long 
 27642 ;; Auto vars:     Size  Location     Type
 27643 ;;  dataRate        1   18[BANK0 ] unsigned char 
 27644 ;; Return value:  Size  Location     Type
 27645 ;;                  1    wreg      void 
 27646 ;; Registers used:
 27647 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27648 ;; Tracked objects:
 27649 ;;		On entry : 0/0
 27650 ;;		On exit  : 0/0
 27651 ;;		Unchanged: 0/0
 27652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27653 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27654 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27656 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27657 ;;Total ram usage:        5 bytes
 27658 ;; Hardware stack levels used:    1
 27659 ;; Hardware stack levels required when called:    9
 27660 ;; This function calls:
 27661 ;;		_RADIO_SetBandwidth
 27662 ;;		_RADIO_SetChannelFrequency
 27663 ;;		_RADIO_SetFSKSyncWord
 27664 ;;		_RADIO_SetFrequencyHopPeriod
 27665 ;;		_RADIO_SetLoRaSyncWord
 27666 ;;		_RADIO_SetModulation
 27667 ;;		_RADIO_SetSpreadingFactor
 27668 ;; This function is called by:
 27669 ;;		_ConfigureRadioTx
 27670 ;;		_ConfigureRadioRx
 27671 ;; This function uses a non-reentrant model
 27672 ;;
 27673                           
 27674                           	psect	text135
 27675  006C86                     __ptext135:
 27676                           	opt stack 0
 27677  006C86                     _ConfigureRadio:
 27678                           	opt stack 18
 27679                           
 27680                           ;incstack = 0
 27681                           ;ConfigureRadio@dataRate stored from wreg
 27682  006C86  0100               	movlb	0	; () banked
 27683  006C88  6F72               	movwf	ConfigureRadio@dataRate& (0+255),b
 27684                           
 27685                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 27686  006C8A  0100               	movlb	0	; () banked
 27687  006C8C  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 27688  006C8E  0D01               	mullw	1
 27689  006C90  0E49               	movlw	low _modulation
 27690  006C92  24F3               	addwf	prodl,w,c
 27691  006C94  6EF6               	movwf	tblptrl,c
 27692  006C96  0EFF               	movlw	high _modulation
 27693  006C98  20F4               	addwfc	prodh,w,c
 27694  006C9A  6EF7               	movwf	tblptrh,c
 27695  006C9C                     	if	1	;There are 3 active tblptr bytes
 27696  006C9C  6AF8               	clrf	tblptru,c
 27697  006C9E  0E00               	movlw	low (__mediumconst shr (0+16))
 27698  006CA0  22F8               	addwfc	tblptru,f,c
 27699  006CA2                     	endif
 27700  006CA2  0008               	tblrd		*
 27701  006CA4  50F5               	movf	tablat,w,c
 27702  006CA6  EC8D  F046         	call	_RADIO_SetModulation
 27703                           
 27704                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 27705  006CAA  C06E  F060         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 27706  006CAE  C06F  F061         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 27707  006CB2  C070  F062         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 27708  006CB6  C071  F063         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 27709  006CBA  EC5F  F038         	call	_RADIO_SetChannelFrequency	;wreg free
 27710                           
 27711                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 27712  006CBE  0E00               	movlw	0
 27713  006CC0  0100               	movlb	0	; () banked
 27714  006CC2  6F61               	movwf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 27715  006CC4  0E00               	movlw	0
 27716  006CC6  6F60               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 27717  006CC8  EC92  F046         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 27718                           
 27719                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 27720  006CCC  0E07               	movlw	7
 27721  006CCE  0100               	movlb	0	; () banked
 27722  006CD0  6172               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 27723  006CD2  D024               	goto	l1168
 27724                           
 27725                           ; BSR set to: 0
 27726                           ;lorawan_eu.c: 870: {
 27727                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 27728  006CD4  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 27729  006CD6  0D01               	mullw	1
 27730  006CD8  0E77               	movlw	low _spreadingFactor
 27731  006CDA  24F3               	addwf	prodl,w,c
 27732  006CDC  6EF6               	movwf	tblptrl,c
 27733  006CDE  0EFF               	movlw	high _spreadingFactor
 27734  006CE0  20F4               	addwfc	prodh,w,c
 27735  006CE2  6EF7               	movwf	tblptrh,c
 27736  006CE4                     	if	1	;There are 3 active tblptr bytes
 27737  006CE4  6AF8               	clrf	tblptru,c
 27738  006CE6  0E00               	movlw	low (__mediumconst shr (0+16))
 27739  006CE8  22F8               	addwfc	tblptru,f,c
 27740  006CEA                     	endif
 27741  006CEA  0008               	tblrd		*
 27742  006CEC  50F5               	movf	tablat,w,c
 27743  006CEE  EC88  F046         	call	_RADIO_SetSpreadingFactor
 27744                           
 27745                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 27746  006CF2  0100               	movlb	0	; () banked
 27747  006CF4  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 27748  006CF6  0D01               	mullw	1
 27749  006CF8  0E70               	movlw	low _bandwidth
 27750  006CFA  24F3               	addwf	prodl,w,c
 27751  006CFC  6EF6               	movwf	tblptrl,c
 27752  006CFE  0EFF               	movlw	high _bandwidth
 27753  006D00  20F4               	addwfc	prodh,w,c
 27754  006D02  6EF7               	movwf	tblptrh,c
 27755  006D04                     	if	1	;There are 3 active tblptr bytes
 27756  006D04  6AF8               	clrf	tblptru,c
 27757  006D06  0E00               	movlw	low (__mediumconst shr (0+16))
 27758  006D08  22F8               	addwfc	tblptru,f,c
 27759  006D0A                     	endif
 27760  006D0A  0008               	tblrd		*
 27761  006D0C  50F5               	movf	tablat,w,c
 27762  006D0E  EC97  F046         	call	_RADIO_SetBandwidth
 27763                           
 27764                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 27765  006D12  0102               	movlb	2	; () banked
 27766  006D14  51F4               	movf	(_loRa+244)& (0+255),w,b
 27767  006D16  EC9C  F046         	call	_RADIO_SetLoRaSyncWord
 27768                           
 27769                           ;lorawan_eu.c: 875: }
 27770  006D1A  0012               	return	
 27771  006D1C                     l1168:
 27772                           
 27773                           ;lorawan_eu.c: 876: else
 27774                           ;lorawan_eu.c: 877: {
 27775                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 27776  006D1C  0EDE               	movlw	low _FskSyncWordBuff
 27777  006D1E  0100               	movlb	0	; () banked
 27778  006D20  6F6B               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 27779  006D22  0EFF               	movlw	high _FskSyncWordBuff
 27780  006D24  6F6C               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 27781  006D26  0E03               	movlw	3
 27782  006D28  EC9B  F042         	call	_RADIO_SetFSKSyncWord
 27783  006D2C  0012               	return	
 27784  006D2E                     __end_of_ConfigureRadio:
 27785                           	opt stack 0
 27786                           tosu	equ	0xFFF
 27787                           tosh	equ	0xFFE
 27788                           tosl	equ	0xFFD
 27789                           pclath	equ	0xFFA
 27790                           tblptru	equ	0xFF8
 27791                           tblptrh	equ	0xFF7
 27792                           tblptrl	equ	0xFF6
 27793                           tablat	equ	0xFF5
 27794                           prodh	equ	0xFF4
 27795                           prodl	equ	0xFF3
 27796                           intcon	equ	0xFF2
 27797                           intcon2	equ	0xFF1
 27798                           intcon3	equ	0xFF0
 27799                           indf0	equ	0xFEF
 27800                           postinc0	equ	0xFEE
 27801                           fsr0h	equ	0xFEA
 27802                           fsr0l	equ	0xFE9
 27803                           wreg	equ	0xFE8
 27804                           postinc1	equ	0xFE6
 27805                           postdec1	equ	0xFE5
 27806                           plusw1	equ	0xFE3
 27807                           fsr1h	equ	0xFE2
 27808                           fsr1l	equ	0xFE1
 27809                           indf2	equ	0xFDF
 27810                           postinc2	equ	0xFDE
 27811                           postdec2	equ	0xFDD
 27812                           plusw2	equ	0xFDB
 27813                           fsr2h	equ	0xFDA
 27814                           fsr2l	equ	0xFD9
 27815                           status	equ	0xFD8
 27816                           
 27817 ;; *************** function _RADIO_SetSpreadingFactor *****************
 27818 ;; Defined at:
 27819 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27820 ;; Parameters:    Size  Location     Type
 27821 ;;  spreadingFac    1    wreg     enum E6994
 27822 ;; Auto vars:     Size  Location     Type
 27823 ;;  spreadingFac    1    0[BANK0 ] enum E6994
 27824 ;; Return value:  Size  Location     Type
 27825 ;;                  1    wreg      void 
 27826 ;; Registers used:
 27827 ;;		wreg
 27828 ;; Tracked objects:
 27829 ;;		On entry : 0/0
 27830 ;;		On exit  : 0/0
 27831 ;;		Unchanged: 0/0
 27832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27834 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27836 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27837 ;;Total ram usage:        1 bytes
 27838 ;; Hardware stack levels used:    1
 27839 ;; Hardware stack levels required when called:    7
 27840 ;; This function calls:
 27841 ;;		Nothing
 27842 ;; This function is called by:
 27843 ;;		_ConfigureRadio
 27844 ;; This function uses a non-reentrant model
 27845 ;;
 27846                           
 27847                           	psect	text136
 27848  008D10                     __ptext136:
 27849                           	opt stack 0
 27850  008D10                     _RADIO_SetSpreadingFactor:
 27851                           	opt stack 19
 27852                           
 27853                           ;incstack = 0
 27854                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 27855  008D10  0100               	movlb	0	; () banked
 27856  008D12  6F60               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 27857                           
 27858                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 27859  008D14  C060  F13D         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 27860  008D18  0012               	return		;funcret
 27861  008D1A                     __end_of_RADIO_SetSpreadingFactor:
 27862                           	opt stack 0
 27863                           tosu	equ	0xFFF
 27864                           tosh	equ	0xFFE
 27865                           tosl	equ	0xFFD
 27866                           pclath	equ	0xFFA
 27867                           tblptru	equ	0xFF8
 27868                           tblptrh	equ	0xFF7
 27869                           tblptrl	equ	0xFF6
 27870                           tablat	equ	0xFF5
 27871                           prodh	equ	0xFF4
 27872                           prodl	equ	0xFF3
 27873                           intcon	equ	0xFF2
 27874                           intcon2	equ	0xFF1
 27875                           intcon3	equ	0xFF0
 27876                           indf0	equ	0xFEF
 27877                           postinc0	equ	0xFEE
 27878                           fsr0h	equ	0xFEA
 27879                           fsr0l	equ	0xFE9
 27880                           wreg	equ	0xFE8
 27881                           postinc1	equ	0xFE6
 27882                           postdec1	equ	0xFE5
 27883                           plusw1	equ	0xFE3
 27884                           fsr1h	equ	0xFE2
 27885                           fsr1l	equ	0xFE1
 27886                           indf2	equ	0xFDF
 27887                           postinc2	equ	0xFDE
 27888                           postdec2	equ	0xFDD
 27889                           plusw2	equ	0xFDB
 27890                           fsr2h	equ	0xFDA
 27891                           fsr2l	equ	0xFD9
 27892                           status	equ	0xFD8
 27893                           
 27894 ;; *************** function _RADIO_SetModulation *****************
 27895 ;; Defined at:
 27896 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27897 ;; Parameters:    Size  Location     Type
 27898 ;;  modulation      1    wreg     enum E6984
 27899 ;; Auto vars:     Size  Location     Type
 27900 ;;  modulation      1    0[BANK0 ] enum E6984
 27901 ;; Return value:  Size  Location     Type
 27902 ;;                  1    wreg      void 
 27903 ;; Registers used:
 27904 ;;		wreg
 27905 ;; Tracked objects:
 27906 ;;		On entry : 0/0
 27907 ;;		On exit  : 0/0
 27908 ;;		Unchanged: 0/0
 27909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27913 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27914 ;;Total ram usage:        1 bytes
 27915 ;; Hardware stack levels used:    1
 27916 ;; Hardware stack levels required when called:    7
 27917 ;; This function calls:
 27918 ;;		Nothing
 27919 ;; This function is called by:
 27920 ;;		_ConfigureRadio
 27921 ;; This function uses a non-reentrant model
 27922 ;;
 27923                           
 27924                           	psect	text137
 27925  008D1A                     __ptext137:
 27926                           	opt stack 0
 27927  008D1A                     _RADIO_SetModulation:
 27928                           	opt stack 19
 27929                           
 27930                           ;incstack = 0
 27931                           ;RADIO_SetModulation@modulation stored from wreg
 27932  008D1A  0100               	movlb	0	; () banked
 27933  008D1C  6F60               	movwf	RADIO_SetModulation@modulation& (0+255),b
 27934                           
 27935                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 27936  008D1E  C060  F13C         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 27937  008D22  0012               	return		;funcret
 27938  008D24                     __end_of_RADIO_SetModulation:
 27939                           	opt stack 0
 27940                           tosu	equ	0xFFF
 27941                           tosh	equ	0xFFE
 27942                           tosl	equ	0xFFD
 27943                           pclath	equ	0xFFA
 27944                           tblptru	equ	0xFF8
 27945                           tblptrh	equ	0xFF7
 27946                           tblptrl	equ	0xFF6
 27947                           tablat	equ	0xFF5
 27948                           prodh	equ	0xFF4
 27949                           prodl	equ	0xFF3
 27950                           intcon	equ	0xFF2
 27951                           intcon2	equ	0xFF1
 27952                           intcon3	equ	0xFF0
 27953                           indf0	equ	0xFEF
 27954                           postinc0	equ	0xFEE
 27955                           fsr0h	equ	0xFEA
 27956                           fsr0l	equ	0xFE9
 27957                           wreg	equ	0xFE8
 27958                           postinc1	equ	0xFE6
 27959                           postdec1	equ	0xFE5
 27960                           plusw1	equ	0xFE3
 27961                           fsr1h	equ	0xFE2
 27962                           fsr1l	equ	0xFE1
 27963                           indf2	equ	0xFDF
 27964                           postinc2	equ	0xFDE
 27965                           postdec2	equ	0xFDD
 27966                           plusw2	equ	0xFDB
 27967                           fsr2h	equ	0xFDA
 27968                           fsr2l	equ	0xFD9
 27969                           status	equ	0xFD8
 27970                           
 27971 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 27972 ;; Defined at:
 27973 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27974 ;; Parameters:    Size  Location     Type
 27975 ;;  frequencyHop    2    0[BANK0 ] unsigned int 
 27976 ;; Auto vars:     Size  Location     Type
 27977 ;;		None
 27978 ;; Return value:  Size  Location     Type
 27979 ;;                  1    wreg      void 
 27980 ;; Registers used:
 27981 ;;		None
 27982 ;; Tracked objects:
 27983 ;;		On entry : 0/0
 27984 ;;		On exit  : 0/0
 27985 ;;		Unchanged: 0/0
 27986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27987 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27990 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27991 ;;Total ram usage:        2 bytes
 27992 ;; Hardware stack levels used:    1
 27993 ;; Hardware stack levels required when called:    7
 27994 ;; This function calls:
 27995 ;;		Nothing
 27996 ;; This function is called by:
 27997 ;;		_ConfigureRadio
 27998 ;; This function uses a non-reentrant model
 27999 ;;
 28000                           
 28001                           	psect	text138
 28002  008D24                     __ptext138:
 28003                           	opt stack 0
 28004  008D24                     _RADIO_SetFrequencyHopPeriod:
 28005                           	opt stack 19
 28006                           
 28007                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 28008                           
 28009                           ;incstack = 0
 28010  008D24  C060  F142         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 28011  008D28  C061  F143         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 28012  008D2C  0012               	return		;funcret
 28013  008D2E                     __end_of_RADIO_SetFrequencyHopPeriod:
 28014                           	opt stack 0
 28015                           tosu	equ	0xFFF
 28016                           tosh	equ	0xFFE
 28017                           tosl	equ	0xFFD
 28018                           pclath	equ	0xFFA
 28019                           tblptru	equ	0xFF8
 28020                           tblptrh	equ	0xFF7
 28021                           tblptrl	equ	0xFF6
 28022                           tablat	equ	0xFF5
 28023                           prodh	equ	0xFF4
 28024                           prodl	equ	0xFF3
 28025                           intcon	equ	0xFF2
 28026                           intcon2	equ	0xFF1
 28027                           intcon3	equ	0xFF0
 28028                           indf0	equ	0xFEF
 28029                           postinc0	equ	0xFEE
 28030                           fsr0h	equ	0xFEA
 28031                           fsr0l	equ	0xFE9
 28032                           wreg	equ	0xFE8
 28033                           postinc1	equ	0xFE6
 28034                           postdec1	equ	0xFE5
 28035                           plusw1	equ	0xFE3
 28036                           fsr1h	equ	0xFE2
 28037                           fsr1l	equ	0xFE1
 28038                           indf2	equ	0xFDF
 28039                           postinc2	equ	0xFDE
 28040                           postdec2	equ	0xFDD
 28041                           plusw2	equ	0xFDB
 28042                           fsr2h	equ	0xFDA
 28043                           fsr2l	equ	0xFD9
 28044                           status	equ	0xFD8
 28045                           
 28046 ;; *************** function _RADIO_SetFSKSyncWord *****************
 28047 ;; Defined at:
 28048 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28049 ;; Parameters:    Size  Location     Type
 28050 ;;  syncWordLen     1    wreg     unsigned char 
 28051 ;;  syncWord        2   11[BANK0 ] PTR unsigned char 
 28052 ;;		 -> FskSyncWordBuff(3), 
 28053 ;; Auto vars:     Size  Location     Type
 28054 ;;  syncWordLen     1   13[BANK0 ] unsigned char 
 28055 ;; Return value:  Size  Location     Type
 28056 ;;                  1    wreg      void 
 28057 ;; Registers used:
 28058 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28059 ;; Tracked objects:
 28060 ;;		On entry : 0/0
 28061 ;;		On exit  : 0/0
 28062 ;;		Unchanged: 0/0
 28063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28064 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28065 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28067 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28068 ;;Total ram usage:        3 bytes
 28069 ;; Hardware stack levels used:    1
 28070 ;; Hardware stack levels required when called:    8
 28071 ;; This function calls:
 28072 ;;		_memcpy
 28073 ;; This function is called by:
 28074 ;;		_ConfigureRadio
 28075 ;; This function uses a non-reentrant model
 28076 ;;
 28077                           
 28078                           	psect	text139
 28079  008536                     __ptext139:
 28080                           	opt stack 0
 28081  008536                     _RADIO_SetFSKSyncWord:
 28082                           	opt stack 18
 28083                           
 28084                           ;incstack = 0
 28085                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 28086  008536  0100               	movlb	0	; () banked
 28087  008538  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 28088                           
 28089                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 28090  00853A  0E08               	movlw	8
 28091  00853C  0100               	movlb	0	; () banked
 28092  00853E  656D               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 28093  008540  D002               	goto	l804
 28094                           
 28095                           ; BSR set to: 0
 28096                           ;radio_driver_SX1276.c: 1627: {
 28097                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 28098  008542  0E08               	movlw	8
 28099  008544  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 28100  008546                     l804:
 28101                           
 28102                           ; BSR set to: 0
 28103                           ;radio_driver_SX1276.c: 1629: }
 28104                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 28105                           
 28106                           ; BSR set to: 0
 28107  008546  0E33               	movlw	low (_RadioConfiguration+15)
 28108  008548  6F60               	movwf	memcpy@d1& (0+255),b
 28109  00854A  0E01               	movlw	high (_RadioConfiguration+15)
 28110  00854C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28111  00854E  C06B  F062         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 28112  008552  C06C  F063         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 28113  008556  C06D  F064         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 28114  00855A  6B65               	clrf	(memcpy@n+1)& (0+255),b
 28115  00855C  EC5C  F03D         	call	_memcpy	;wreg free
 28116                           
 28117                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 28118  008560  C06D  F13B         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 28119  008564  0012               	return		;funcret
 28120  008566                     __end_of_RADIO_SetFSKSyncWord:
 28121                           	opt stack 0
 28122                           tosu	equ	0xFFF
 28123                           tosh	equ	0xFFE
 28124                           tosl	equ	0xFFD
 28125                           pclath	equ	0xFFA
 28126                           tblptru	equ	0xFF8
 28127                           tblptrh	equ	0xFF7
 28128                           tblptrl	equ	0xFF6
 28129                           tablat	equ	0xFF5
 28130                           prodh	equ	0xFF4
 28131                           prodl	equ	0xFF3
 28132                           intcon	equ	0xFF2
 28133                           intcon2	equ	0xFF1
 28134                           intcon3	equ	0xFF0
 28135                           indf0	equ	0xFEF
 28136                           postinc0	equ	0xFEE
 28137                           fsr0h	equ	0xFEA
 28138                           fsr0l	equ	0xFE9
 28139                           wreg	equ	0xFE8
 28140                           postinc1	equ	0xFE6
 28141                           postdec1	equ	0xFE5
 28142                           plusw1	equ	0xFE3
 28143                           fsr1h	equ	0xFE2
 28144                           fsr1l	equ	0xFE1
 28145                           indf2	equ	0xFDF
 28146                           postinc2	equ	0xFDE
 28147                           postdec2	equ	0xFDD
 28148                           plusw2	equ	0xFDB
 28149                           fsr2h	equ	0xFDA
 28150                           fsr2l	equ	0xFD9
 28151                           status	equ	0xFD8
 28152                           
 28153 ;; *************** function _RADIO_SetChannelFrequency *****************
 28154 ;; Defined at:
 28155 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28156 ;; Parameters:    Size  Location     Type
 28157 ;;  frequency       4    0[BANK0 ] unsigned long 
 28158 ;; Auto vars:     Size  Location     Type
 28159 ;;		None
 28160 ;; Return value:  Size  Location     Type
 28161 ;;                  2    0[BANK0 ] enum E7038
 28162 ;; Registers used:
 28163 ;;		wreg, status,2, status,0
 28164 ;; Tracked objects:
 28165 ;;		On entry : 0/0
 28166 ;;		On exit  : 0/0
 28167 ;;		Unchanged: 0/0
 28168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28169 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28172 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28173 ;;Total ram usage:        4 bytes
 28174 ;; Hardware stack levels used:    1
 28175 ;; Hardware stack levels required when called:    7
 28176 ;; This function calls:
 28177 ;;		Nothing
 28178 ;; This function is called by:
 28179 ;;		_ConfigureRadio
 28180 ;; This function uses a non-reentrant model
 28181 ;;
 28182                           
 28183                           	psect	text140
 28184  0070BE                     __ptext140:
 28185                           	opt stack 0
 28186  0070BE                     _RADIO_SetChannelFrequency:
 28187                           	opt stack 19
 28188                           
 28189                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 28190                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 28191                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 28192                           
 28193                           ;incstack = 0
 28194  0070BE  0E40               	movlw	64
 28195  0070C0  0100               	movlb	0	; () banked
 28196  0070C2  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 28197  0070C4  0E74               	movlw	116
 28198  0070C6  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 28199  0070C8  0E2A               	movlw	42
 28200  0070CA  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 28201  0070CC  0E08               	movlw	8
 28202  0070CE  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 28203  0070D0  A0D8               	btfss	status,0,c
 28204  0070D2  D00A               	goto	u14930
 28205                           
 28206                           ; BSR set to: 0
 28207  0070D4  0EC1               	movlw	193
 28208  0070D6  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 28209  0070D8  0E49               	movlw	73
 28210  0070DA  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 28211  0070DC  0E6E               	movlw	110
 28212  0070DE  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 28213  0070E0  0E0A               	movlw	10
 28214  0070E2  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 28215  0070E4  A0D8               	btfss	status,0,c
 28216  0070E6  D027               	goto	u14970
 28217  0070E8                     u14930:
 28218                           
 28219                           ; BSR set to: 0
 28220                           
 28221                           ; BSR set to: 0
 28222  0070E8  0E80               	movlw	128
 28223  0070EA  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 28224  0070EC  0E1A               	movlw	26
 28225  0070EE  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 28226  0070F0  0E70               	movlw	112
 28227  0070F2  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 28228  0070F4  0E18               	movlw	24
 28229  0070F6  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 28230  0070F8  A0D8               	btfss	status,0,c
 28231  0070FA  D00A               	goto	u14950
 28232                           
 28233                           ; BSR set to: 0
 28234  0070FC  0E41               	movlw	65
 28235  0070FE  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 28236  007100  0EDD               	movlw	221
 28237  007102  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 28238  007104  0E4A               	movlw	74
 28239  007106  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 28240  007108  0E1F               	movlw	31
 28241  00710A  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 28242  00710C  A0D8               	btfss	status,0,c
 28243  00710E  D013               	goto	u14970
 28244  007110                     u14950:
 28245                           
 28246                           ; BSR set to: 0
 28247                           
 28248                           ; BSR set to: 0
 28249  007110  0E80               	movlw	128
 28250  007112  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 28251  007114  0E13               	movlw	19
 28252  007116  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 28253  007118  0E61               	movlw	97
 28254  00711A  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 28255  00711C  0E33               	movlw	51
 28256  00711E  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 28257  007120  A0D8               	btfss	status,0,c
 28258  007122  0012               	return	
 28259                           
 28260                           ; BSR set to: 0
 28261  007124  0560               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 28262  007126  0EF7               	movlw	247
 28263  007128  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 28264  00712A  0ECB               	movlw	203
 28265  00712C  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 28266  00712E  0E3C               	movlw	60
 28267  007130  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 28268  007132  B0D8               	btfsc	status,0,c
 28269  007134  0012               	return	
 28270  007136                     u14970:
 28271                           
 28272                           ; BSR set to: 0
 28273                           ;radio_driver_SX1276.c: 1449: {
 28274                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 28275  007136  C060  F124         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 28276  00713A  C061  F125         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 28277  00713E  C062  F126         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 28278  007142  C063  F127         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 28279                           
 28280                           ; BSR set to: 0
 28281                           ;radio_driver_SX1276.c: 1453: else
 28282                           ;radio_driver_SX1276.c: 1454: {
 28283                           ;radio_driver_SX1276.c: 1455: return ERR_OUT_OF_RANGE;
 28284                           ;	Return value of _RADIO_SetChannelFrequency is never used
 28285                           
 28286                           ; BSR set to: 0
 28287                           ;radio_driver_SX1276.c: 1452: }
 28288                           
 28289                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 28290                           ;	Return value of _RADIO_SetChannelFrequency is never used
 28291  007146  0012               	return	
 28292  007148                     __end_of_RADIO_SetChannelFrequency:
 28293                           	opt stack 0
 28294                           tosu	equ	0xFFF
 28295                           tosh	equ	0xFFE
 28296                           tosl	equ	0xFFD
 28297                           pclath	equ	0xFFA
 28298                           tblptru	equ	0xFF8
 28299                           tblptrh	equ	0xFF7
 28300                           tblptrl	equ	0xFF6
 28301                           tablat	equ	0xFF5
 28302                           prodh	equ	0xFF4
 28303                           prodl	equ	0xFF3
 28304                           intcon	equ	0xFF2
 28305                           intcon2	equ	0xFF1
 28306                           intcon3	equ	0xFF0
 28307                           indf0	equ	0xFEF
 28308                           postinc0	equ	0xFEE
 28309                           fsr0h	equ	0xFEA
 28310                           fsr0l	equ	0xFE9
 28311                           wreg	equ	0xFE8
 28312                           postinc1	equ	0xFE6
 28313                           postdec1	equ	0xFE5
 28314                           plusw1	equ	0xFE3
 28315                           fsr1h	equ	0xFE2
 28316                           fsr1l	equ	0xFE1
 28317                           indf2	equ	0xFDF
 28318                           postinc2	equ	0xFDE
 28319                           postdec2	equ	0xFDD
 28320                           plusw2	equ	0xFDB
 28321                           fsr2h	equ	0xFDA
 28322                           fsr2l	equ	0xFD9
 28323                           status	equ	0xFD8
 28324                           
 28325 ;; *************** function _RADIO_SetBandwidth *****************
 28326 ;; Defined at:
 28327 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28328 ;; Parameters:    Size  Location     Type
 28329 ;;  bandwidth       1    wreg     enum E7002
 28330 ;; Auto vars:     Size  Location     Type
 28331 ;;  bandwidth       1    0[BANK0 ] enum E7002
 28332 ;; Return value:  Size  Location     Type
 28333 ;;                  1    wreg      void 
 28334 ;; Registers used:
 28335 ;;		wreg
 28336 ;; Tracked objects:
 28337 ;;		On entry : 0/0
 28338 ;;		On exit  : 0/0
 28339 ;;		Unchanged: 0/0
 28340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28342 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28344 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28345 ;;Total ram usage:        1 bytes
 28346 ;; Hardware stack levels used:    1
 28347 ;; Hardware stack levels required when called:    7
 28348 ;; This function calls:
 28349 ;;		Nothing
 28350 ;; This function is called by:
 28351 ;;		_ConfigureRadio
 28352 ;; This function uses a non-reentrant model
 28353 ;;
 28354                           
 28355                           	psect	text141
 28356  008D2E                     __ptext141:
 28357                           	opt stack 0
 28358  008D2E                     _RADIO_SetBandwidth:
 28359                           	opt stack 19
 28360                           
 28361                           ; BSR set to: 0
 28362                           ;incstack = 0
 28363                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 28364  008D2E  0100               	movlb	0	; () banked
 28365  008D30  6F60               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 28366                           
 28367                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 28368  008D32  C060  F13E         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 28369  008D36  0012               	return		;funcret
 28370  008D38                     __end_of_RADIO_SetBandwidth:
 28371                           	opt stack 0
 28372                           tosu	equ	0xFFF
 28373                           tosh	equ	0xFFE
 28374                           tosl	equ	0xFFD
 28375                           pclath	equ	0xFFA
 28376                           tblptru	equ	0xFF8
 28377                           tblptrh	equ	0xFF7
 28378                           tblptrl	equ	0xFF6
 28379                           tablat	equ	0xFF5
 28380                           prodh	equ	0xFF4
 28381                           prodl	equ	0xFF3
 28382                           intcon	equ	0xFF2
 28383                           intcon2	equ	0xFF1
 28384                           intcon3	equ	0xFF0
 28385                           indf0	equ	0xFEF
 28386                           postinc0	equ	0xFEE
 28387                           fsr0h	equ	0xFEA
 28388                           fsr0l	equ	0xFE9
 28389                           wreg	equ	0xFE8
 28390                           postinc1	equ	0xFE6
 28391                           postdec1	equ	0xFE5
 28392                           plusw1	equ	0xFE3
 28393                           fsr1h	equ	0xFE2
 28394                           fsr1l	equ	0xFE1
 28395                           indf2	equ	0xFDF
 28396                           postinc2	equ	0xFDE
 28397                           postdec2	equ	0xFDD
 28398                           plusw2	equ	0xFDB
 28399                           fsr2h	equ	0xFDA
 28400                           fsr2l	equ	0xFD9
 28401                           status	equ	0xFD8
 28402                           
 28403 ;; *************** function _RADIO_Transmit *****************
 28404 ;; Defined at:
 28405 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28406 ;; Parameters:    Size  Location     Type
 28407 ;;  buffer          2   81[BANK0 ] PTR unsigned char 
 28408 ;;		 -> macBuffer(271), 
 28409 ;;  bufferLen       1   83[BANK0 ] unsigned char 
 28410 ;; Auto vars:     Size  Location     Type
 28411 ;;  i               1   97[BANK0 ] unsigned char 
 28412 ;;  regValue        1   96[BANK0 ] unsigned char 
 28413 ;; Return value:  Size  Location     Type
 28414 ;;                  2   81[BANK0 ] enum E7038
 28415 ;; Registers used:
 28416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28417 ;; Tracked objects:
 28418 ;;		On entry : 0/0
 28419 ;;		On exit  : 0/0
 28420 ;;		Unchanged: 0/0
 28421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28422 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28423 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28424 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28425 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28426 ;;Total ram usage:       17 bytes
 28427 ;; Hardware stack levels used:    1
 28428 ;; Hardware stack levels required when called:   12
 28429 ;; This function calls:
 28430 ;;		_HALSPICSAssert
 28431 ;;		_HALSPICSDeassert
 28432 ;;		_HALSPISend
 28433 ;;		_RADIO_RegisterRead
 28434 ;;		_RADIO_RegisterWrite
 28435 ;;		_RADIO_WriteConfiguration
 28436 ;;		_RADIO_WriteMode
 28437 ;;		_SwTimerSetTimeout
 28438 ;;		_SwTimerStart
 28439 ;;		_SwTimerStop
 28440 ;;		___lldiv
 28441 ;; This function is called by:
 28442 ;;		_LORAWAN_RxTimeout
 28443 ;;		_LORAWAN_Join
 28444 ;;		_LORAWAN_Send
 28445 ;;		_AckRetransmissionCallback
 28446 ;;		_UnconfirmedTransmissionCallback
 28447 ;; This function uses a non-reentrant model
 28448 ;;
 28449                           
 28450                           	psect	text142
 28451  003A20                     __ptext142:
 28452                           	opt stack 0
 28453  003A20                     _RADIO_Transmit:
 28454                           	opt stack 17
 28455                           
 28456                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 28457                           ;radio_driver_SX1276.c: 789: uint8_t i;
 28458                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 28459                           
 28460                           ;incstack = 0
 28461  003A20  0101               	movlb	1	; () banked
 28462  003A22  A547               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 28463  003A24  D006               	goto	l499
 28464                           
 28465                           ; BSR set to: 1
 28466                           ;radio_driver_SX1276.c: 792: {
 28467                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 28468  003A26  0E80               	movlw	128
 28469  003A28  0100               	movlb	0	; () banked
 28470  003A2A  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 28471  003A2C  0E03               	movlw	3
 28472  003A2E  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 28473                           
 28474                           ; BSR set to: 0
 28475  003A30  0012               	return	
 28476  003A32                     l499:
 28477                           
 28478                           ;radio_driver_SX1276.c: 794: }
 28479                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 28480                           
 28481                           ; BSR set to: 0
 28482  003A32  C147  F0B4         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 28483  003A36  0E03               	movlw	3
 28484  003A38  0100               	movlb	0	; () banked
 28485  003A3A  17B4               	andwf	??_RADIO_Transmit& (0+255),f,b
 28486  003A3C  B4D8               	btfsc	status,2,c
 28487  003A3E  D005               	goto	l501
 28488                           
 28489                           ; BSR set to: 0
 28490                           ;radio_driver_SX1276.c: 797: {
 28491                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 28492  003A40  0E80               	movlw	128
 28493  003A42  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 28494  003A44  0E04               	movlw	4
 28495  003A46  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 28496                           
 28497                           ; BSR set to: 0
 28498  003A48  0012               	return	
 28499  003A4A                     l501:
 28500                           
 28501                           ; BSR set to: 0
 28502                           ;radio_driver_SX1276.c: 799: }
 28503                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 28504                           
 28505                           ; BSR set to: 0
 28506  003A4A  0101               	movlb	1	; () banked
 28507  003A4C  513C               	movf	(_RadioConfiguration+24)& (0+255),w,b
 28508  003A4E  A4D8               	btfss	status,2,c
 28509  003A50  D009               	goto	l502
 28510                           
 28511                           ; BSR set to: 1
 28512  003A52  0E40               	movlw	64
 28513  003A54  0100               	movlb	0	; () banked
 28514  003A56  65B3               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 28515  003A58  D005               	goto	l502
 28516                           
 28517                           ; BSR set to: 0
 28518                           ;radio_driver_SX1276.c: 802: {
 28519                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 28520  003A5A  0E80               	movlw	128
 28521  003A5C  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 28522  003A5E  0E02               	movlw	2
 28523  003A60  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 28524                           
 28525                           ; BSR set to: 0
 28526  003A62  0012               	return	
 28527  003A64                     l502:
 28528                           
 28529                           ;radio_driver_SX1276.c: 804: }
 28530                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 28531                           
 28532                           ; BSR set to: 0
 28533  003A64  0101               	movlb	1	; () banked
 28534  003A66  514B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 28535  003A68  ECF9  F043         	call	_SwTimerStop
 28536                           
 28537                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 28538  003A6C  0E00               	movlw	0
 28539  003A6E  0100               	movlb	0	; () banked
 28540  003A70  6FA7               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 28541  003A72  0E04               	movlw	4
 28542  003A74  6FA6               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 28543  003A76  EC6F  F00A         	call	_RADIO_WriteConfiguration	;wreg free
 28544                           
 28545                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 28546  003A7A  0101               	movlb	1	; () banked
 28547  003A7C  053C               	decf	(_RadioConfiguration+24)& (0+255),w,b
 28548  003A7E  A4D8               	btfss	status,2,c
 28549  003A80  D027               	goto	l503
 28550                           
 28551                           ; BSR set to: 1
 28552                           ;radio_driver_SX1276.c: 813: {
 28553                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 28554  003A82  C0B3  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 28555  003A86  0E22               	movlw	34
 28556  003A88  ECA6  F044         	call	_RADIO_RegisterWrite
 28557                           
 28558                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 28559  003A8C  0E0A               	movlw	10
 28560  003A8E  ECE5  F043         	call	_RADIO_RegisterRead
 28561  003A92  0100               	movlb	0	; () banked
 28562  003A94  6FC0               	movwf	RADIO_Transmit@regValue& (0+255),b
 28563                           
 28564                           ; BSR set to: 0
 28565                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 28566  003A96  0EF0               	movlw	240
 28567  003A98  17C0               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 28568                           
 28569                           ; BSR set to: 0
 28570                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 28571  003A9A  87C0               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 28572                           
 28573                           ; BSR set to: 0
 28574                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 28575  003A9C  C0C0  F062         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 28576  003AA0  0E0A               	movlw	10
 28577  003AA2  ECA6  F044         	call	_RADIO_RegisterWrite
 28578                           
 28579                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 28580  003AA6  0E40               	movlw	64
 28581  003AA8  0100               	movlb	0	; () banked
 28582  003AAA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28583  003AAC  0E40               	movlw	64
 28584  003AAE  ECA6  F044         	call	_RADIO_RegisterWrite
 28585                           
 28586                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 28587  003AB2  0E00               	movlw	0
 28588  003AB4  0100               	movlb	0	; () banked
 28589  003AB6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28590  003AB8  0E41               	movlw	65
 28591  003ABA  ECA6  F044         	call	_RADIO_RegisterWrite
 28592                           
 28593                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 28594  003ABE  C13C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 28595  003AC2  0E01               	movlw	1
 28596  003AC4  0100               	movlb	0	; () banked
 28597  003AC6  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 28598  003AC8  0E01               	movlw	1
 28599  003ACA  EC0D  F02F         	call	_RADIO_WriteMode
 28600                           
 28601                           ;radio_driver_SX1276.c: 828: }
 28602  003ACE  D00C               	goto	l504
 28603  003AD0                     l503:
 28604                           
 28605                           ;radio_driver_SX1276.c: 829: else
 28606                           ;radio_driver_SX1276.c: 830: {
 28607                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 28608  003AD0  0E00               	movlw	0
 28609  003AD2  0100               	movlb	0	; () banked
 28610  003AD4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28611  003AD6  0E40               	movlw	64
 28612  003AD8  ECA6  F044         	call	_RADIO_RegisterWrite
 28613                           
 28614                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 28615  003ADC  0E00               	movlw	0
 28616  003ADE  0100               	movlb	0	; () banked
 28617  003AE0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28618  003AE2  0E41               	movlw	65
 28619  003AE4  ECA6  F044         	call	_RADIO_RegisterWrite
 28620  003AE8                     l504:
 28621                           
 28622                           ;radio_driver_SX1276.c: 834: }
 28623                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 28624  003AE8  0101               	movlb	1	; () banked
 28625  003AEA  513C               	movf	(_RadioConfiguration+24)& (0+255),w,b
 28626  003AEC  A4D8               	btfss	status,2,c
 28627  003AEE  D005               	goto	l505
 28628                           
 28629                           ; BSR set to: 1
 28630                           ;radio_driver_SX1276.c: 837: {
 28631                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 28632  003AF0  C0B3  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 28633  003AF4  0E00               	movlw	0
 28634  003AF6  ECA6  F044         	call	_RADIO_RegisterWrite
 28635  003AFA                     l505:
 28636                           
 28637                           ;radio_driver_SX1276.c: 840: }
 28638                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 28639  003AFA  ECCA  F046         	call	_HALSPICSAssert	;wreg free
 28640                           
 28641                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 28642  003AFE  0E80               	movlw	128
 28643  003B00  EC34  F046         	call	_HALSPISend
 28644                           
 28645                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 28646  003B04  0E00               	movlw	0
 28647  003B06  0100               	movlb	0	; () banked
 28648  003B08  6FC1               	movwf	RADIO_Transmit@i& (0+255),b
 28649  003B0A  D00D               	goto	l506
 28650  003B0C                     
 28651                           ; BSR set to: 0
 28652                           ;radio_driver_SX1276.c: 846: {
 28653                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 28654                           
 28655                           ; BSR set to: 0
 28656  003B0C  51C1               	movf	RADIO_Transmit@i& (0+255),w,b
 28657  003B0E  0D01               	mullw	1
 28658  003B10  50F3               	movf	prodl,w,c
 28659  003B12  25B1               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 28660  003B14  6ED9               	movwf	fsr2l,c
 28661  003B16  50F4               	movf	prodh,w,c
 28662  003B18  21B2               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 28663  003B1A  6EDA               	movwf	fsr2h,c
 28664  003B1C  50DF               	movf	indf2,w,c
 28665  003B1E  EC34  F046         	call	_HALSPISend
 28666  003B22  0100               	movlb	0	; () banked
 28667  003B24  2BC1               	incf	RADIO_Transmit@i& (0+255),f,b
 28668  003B26                     l506:
 28669                           
 28670                           ; BSR set to: 0
 28671                           
 28672                           ; BSR set to: 0
 28673  003B26  51B3               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 28674  003B28  5DC1               	subwf	RADIO_Transmit@i& (0+255),w,b
 28675  003B2A  A0D8               	btfss	status,0,c
 28676  003B2C  D7EF               	goto	l507
 28677                           
 28678                           ; BSR set to: 0
 28679                           ;radio_driver_SX1276.c: 848: }
 28680                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 28681                           
 28682                           ; BSR set to: 0
 28683  003B2E  ECC8  F046         	call	_HALSPICSDeassert	;wreg free
 28684                           
 28685                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 28686  003B32  0101               	movlb	1	; () banked
 28687  003B34  8147               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 28688                           
 28689                           ; BSR set to: 1
 28690                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 28691  003B36  0EE7               	movlw	231
 28692  003B38  1747               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 28693                           
 28694                           ; BSR set to: 1
 28695                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 28696  003B3A  C13C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 28697  003B3E  0E00               	movlw	0
 28698  003B40  0100               	movlb	0	; () banked
 28699  003B42  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 28700  003B44  0E03               	movlw	3
 28701  003B46  EC0D  F02F         	call	_RADIO_WriteMode
 28702                           
 28703                           ; BSR set to: 0
 28704                           
 28705                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 28706  003B4A  0E00               	movlw	0
 28707  003B4C  0100               	movlb	0	; () banked
 28708  003B4E  6FB8               	movwf	_RADIO_Transmit$772& (0+255),b
 28709  003B50  0E00               	movlw	0
 28710  003B52  6FB9               	movwf	(_RADIO_Transmit$772+1)& (0+255),b
 28711  003B54  0E0A               	movlw	10
 28712  003B56  6FBA               	movwf	(_RADIO_Transmit$772+2)& (0+255),b
 28713  003B58  0E00               	movlw	0
 28714  003B5A  6FBB               	movwf	(_RADIO_Transmit$772+3)& (0+255),b
 28715                           
 28716                           ; BSR set to: 0
 28717                           
 28718                           ; BSR set to: 0
 28719  003B5C  C0B8  F06D         	movff	_RADIO_Transmit$772,SwTimerSetTimeout@timeout
 28720  003B60  C0B9  F06E         	movff	_RADIO_Transmit$772+1,SwTimerSetTimeout@timeout+1
 28721  003B64  C0BA  F06F         	movff	_RADIO_Transmit$772+2,SwTimerSetTimeout@timeout+2
 28722  003B68  C0BB  F070         	movff	_RADIO_Transmit$772+3,SwTimerSetTimeout@timeout+3
 28723  003B6C  0101               	movlb	1	; () banked
 28724  003B6E  514B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 28725  003B70  EC23  F041         	call	_SwTimerSetTimeout
 28726                           
 28727                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 28728  003B74  0101               	movlb	1	; () banked
 28729  003B76  514B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 28730  003B78  EC3B  F037         	call	_SwTimerStart
 28731                           
 28732                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 28733  003B7C  0101               	movlb	1	; () banked
 28734  003B7E  514E               	movf	(_RadioConfiguration+42)& (0+255),w,b
 28735  003B80  114F               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 28736  003B82  1150               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 28737  003B84  1151               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 28738  003B86  B4D8               	btfsc	status,2,c
 28739  003B88  D061               	goto	l513
 28740                           
 28741                           ; BSR set to: 1
 28742                           ;radio_driver_SX1276.c: 866: {
 28743                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 28744  003B8A  5151               	movf	(_RadioConfiguration+45)& (0+255),w,b
 28745  003B8C  E107               	bnz	u16720
 28746  003B8E  294E               	incf	(_RadioConfiguration+42)& (0+255),w,b
 28747  003B90  0EFF               	movlw	255
 28748  003B92  594F               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 28749  003B94  0E0F               	movlw	15
 28750  003B96  5950               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 28751  003B98  A0D8               	btfss	status,0,c
 28752  003B9A  D01D               	goto	l515
 28753  003B9C                     u16720:
 28754                           
 28755                           ; BSR set to: 1
 28756  003B9C  C14E  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 28757  003BA0  C14F  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 28758  003BA4  C150  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 28759  003BA8  C151  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 28760  003BAC  0E7D               	movlw	125
 28761  003BAE  0100               	movlb	0	; () banked
 28762  003BB0  6F64               	movwf	___lldiv@divisor& (0+255),b
 28763  003BB2  0E00               	movlw	0
 28764  003BB4  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 28765  003BB6  0E00               	movlw	0
 28766  003BB8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 28767  003BBA  0E00               	movlw	0
 28768  003BBC  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 28769  003BBE  ECB4  F039         	call	___lldiv	;wreg free
 28770  003BC2  0E0C               	movlw	12
 28771  003BC4                     u16735:
 28772  003BC4  90D8               	bcf	status,0,c
 28773  003BC6  0100               	movlb	0	; () banked
 28774  003BC8  3760               	rlcf	?___lldiv& (0+255),f,b
 28775  003BCA  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 28776  003BCC  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 28777  003BCE  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 28778  003BD0  2EE8               	decfsz	wreg,f,c
 28779  003BD2  D7F8               	goto	u16735
 28780  003BD4  D023               	goto	L19
 28781  003BD6                     l515:
 28782                           
 28783                           ; BSR set to: 0
 28784  003BD6  C14E  F0B4         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 28785  003BDA  C14F  F0B5         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 28786  003BDE  C150  F0B6         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 28787  003BE2  C151  F0B7         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 28788  003BE6  0E0C               	movlw	12
 28789  003BE8                     u16745:
 28790  003BE8  90D8               	bcf	status,0,c
 28791  003BEA  0100               	movlb	0	; () banked
 28792  003BEC  37B4               	rlcf	??_RADIO_Transmit& (0+255),f,b
 28793  003BEE  37B5               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 28794  003BF0  37B6               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 28795  003BF2  37B7               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 28796  003BF4  2EE8               	decfsz	wreg,f,c
 28797  003BF6  D7F8               	goto	u16745
 28798  003BF8  C0B4  F060         	movff	??_RADIO_Transmit,___lldiv@dividend
 28799  003BFC  C0B5  F061         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 28800  003C00  C0B6  F062         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 28801  003C04  C0B7  F063         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 28802  003C08  0E7D               	movlw	125
 28803  003C0A  6F64               	movwf	___lldiv@divisor& (0+255),b
 28804  003C0C  0E00               	movlw	0
 28805  003C0E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 28806  003C10  0E00               	movlw	0
 28807  003C12  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 28808  003C14  0E00               	movlw	0
 28809  003C16  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 28810  003C18  ECB4  F039         	call	___lldiv	;wreg free
 28811  003C1C                     L19:
 28812  003C1C  C060  F0BC         	movff	?___lldiv,_RADIO_Transmit$774
 28813  003C20  C061  F0BD         	movff	?___lldiv+1,_RADIO_Transmit$774+1
 28814  003C24  C062  F0BE         	movff	?___lldiv+2,_RADIO_Transmit$774+2
 28815  003C28  C063  F0BF         	movff	?___lldiv+3,_RADIO_Transmit$774+3
 28816  003C2C  C0BC  F06D         	movff	_RADIO_Transmit$774,SwTimerSetTimeout@timeout
 28817  003C30  C0BD  F06E         	movff	_RADIO_Transmit$774+1,SwTimerSetTimeout@timeout+1
 28818  003C34  C0BE  F06F         	movff	_RADIO_Transmit$774+2,SwTimerSetTimeout@timeout+2
 28819  003C38  C0BF  F070         	movff	_RADIO_Transmit$774+3,SwTimerSetTimeout@timeout+3
 28820  003C3C  0101               	movlb	1	; () banked
 28821  003C3E  514D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 28822  003C40  EC23  F041         	call	_SwTimerSetTimeout
 28823                           
 28824                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 28825  003C44  0101               	movlb	1	; () banked
 28826  003C46  514D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 28827  003C48  EC3B  F037         	call	_SwTimerStart
 28828  003C4C                     l513:
 28829                           
 28830                           ;radio_driver_SX1276.c: 869: }
 28831                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 28832  003C4C  0E00               	movlw	0
 28833  003C4E  0100               	movlb	0	; () banked
 28834  003C50  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 28835  003C52  0E00               	movlw	0
 28836  003C54  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 28837  003C56  0012               	return	
 28838  003C58                     __end_of_RADIO_Transmit:
 28839                           	opt stack 0
 28840                           tosu	equ	0xFFF
 28841                           tosh	equ	0xFFE
 28842                           tosl	equ	0xFFD
 28843                           pclath	equ	0xFFA
 28844                           tblptru	equ	0xFF8
 28845                           tblptrh	equ	0xFF7
 28846                           tblptrl	equ	0xFF6
 28847                           tablat	equ	0xFF5
 28848                           prodh	equ	0xFF4
 28849                           prodl	equ	0xFF3
 28850                           intcon	equ	0xFF2
 28851                           intcon2	equ	0xFF1
 28852                           intcon3	equ	0xFF0
 28853                           indf0	equ	0xFEF
 28854                           postinc0	equ	0xFEE
 28855                           fsr0h	equ	0xFEA
 28856                           fsr0l	equ	0xFE9
 28857                           wreg	equ	0xFE8
 28858                           postinc1	equ	0xFE6
 28859                           postdec1	equ	0xFE5
 28860                           plusw1	equ	0xFE3
 28861                           fsr1h	equ	0xFE2
 28862                           fsr1l	equ	0xFE1
 28863                           indf2	equ	0xFDF
 28864                           postinc2	equ	0xFDE
 28865                           postdec2	equ	0xFDD
 28866                           plusw2	equ	0xFDB
 28867                           fsr2h	equ	0xFDA
 28868                           fsr2l	equ	0xFD9
 28869                           status	equ	0xFD8
 28870                           
 28871 ;; *************** function _RADIO_WriteConfiguration *****************
 28872 ;; Defined at:
 28873 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28874 ;; Parameters:    Size  Location     Type
 28875 ;;  symbolTimeou    2   70[BANK0 ] unsigned int 
 28876 ;; Auto vars:     Size  Location     Type
 28877 ;;  tempValue       4   76[BANK0 ] unsigned long 
 28878 ;;  regValue        1   80[BANK0 ] unsigned char 
 28879 ;;  i               1   75[BANK0 ] unsigned char 
 28880 ;; Return value:  Size  Location     Type
 28881 ;;                  1    wreg      void 
 28882 ;; Registers used:
 28883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28884 ;; Tracked objects:
 28885 ;;		On entry : 0/0
 28886 ;;		On exit  : 0/0
 28887 ;;		Unchanged: 0/0
 28888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28889 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28890 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28891 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28892 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28893 ;;Total ram usage:       11 bytes
 28894 ;; Hardware stack levels used:    1
 28895 ;; Hardware stack levels required when called:   11
 28896 ;; This function calls:
 28897 ;;		_RADIO_RegisterRead
 28898 ;;		_RADIO_RegisterWrite
 28899 ;;		_RADIO_WriteFSKBitRate
 28900 ;;		_RADIO_WriteFSKFrequencyDeviation
 28901 ;;		_RADIO_WriteFrequency
 28902 ;;		_RADIO_WriteMode
 28903 ;;		_RADIO_WritePower
 28904 ;;		___lmul
 28905 ;; This function is called by:
 28906 ;;		_RADIO_Transmit
 28907 ;;		_RADIO_ReceiveStart
 28908 ;;		_RADIO_TransmitCW
 28909 ;; This function uses a non-reentrant model
 28910 ;;
 28911                           
 28912                           	psect	text143
 28913  0014DE                     __ptext143:
 28914                           	opt stack 0
 28915  0014DE                     _RADIO_WriteConfiguration:
 28916                           	opt stack 17
 28917                           
 28918                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 28919                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 28920                           ;radio_driver_SX1276.c: 537: uint8_t i;
 28921                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 28922                           
 28923                           ; BSR set to: 0
 28924                           ;incstack = 0
 28925  0014DE  C13C  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 28926  0014E2  0E00               	movlw	0
 28927  0014E4  0100               	movlb	0	; () banked
 28928  0014E6  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 28929  0014E8  0E00               	movlw	0
 28930  0014EA  EC0D  F02F         	call	_RADIO_WriteMode
 28931                           
 28932                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 28933  0014EE  C124  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 28934  0014F2  C125  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 28935  0014F6  C126  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 28936  0014FA  C127  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 28937  0014FE  ECFB  F030         	call	_RADIO_WriteFrequency	;wreg free
 28938                           
 28939                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 28940  001502  0101               	movlb	1	; () banked
 28941  001504  513F               	movf	(_RadioConfiguration+27)& (0+255),w,b
 28942  001506  EC83  F030         	call	_RADIO_WritePower
 28943                           
 28944                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 28945  00150A  0101               	movlb	1	; () banked
 28946  00150C  053C               	decf	(_RadioConfiguration+24)& (0+255),w,b
 28947  00150E  A4D8               	btfss	status,2,c
 28948  001510  D1ED               	goto	l455
 28949                           
 28950                           ; BSR set to: 1
 28951                           ;radio_driver_SX1276.c: 545: {
 28952                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 28953  001512  C132  F062         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 28954  001516  0E39               	movlw	57
 28955  001518  ECA6  F044         	call	_RADIO_RegisterWrite
 28956                           
 28957                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 28958                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 28959                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 28960                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 28961  00151C  C146  F0A8         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 28962  001520  0E01               	movlw	1
 28963  001522  0100               	movlb	0	; () banked
 28964  001524  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 28965  001526  0101               	movlb	1	; () banked
 28966  001528  90D8               	bcf	status,0,c
 28967  00152A  3545               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 28968  00152C  0100               	movlb	0	; () banked
 28969  00152E  6FA9               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 28970  001530  0101               	movlb	1	; () banked
 28971  001532  393E               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 28972  001534  0BF0               	andlw	240
 28973  001536  0100               	movlb	0	; () banked
 28974  001538  11A9               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 28975  00153A  11A8               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 28976  00153C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28977  00153E  0E1D               	movlw	29
 28978  001540  ECA6  F044         	call	_RADIO_RegisterWrite
 28979                           
 28980                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 28981                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 28982                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 28983                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 28984  001544  C0A6  F0A8         	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
 28985  001548  C0A7  F0A9         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
 28986  00154C  C0A9  F0A8         	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
 28987  001550  0100               	movlb	0	; () banked
 28988  001552  6BA9               	clrf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 28989  001554  0E03               	movlw	3
 28990  001556  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 28991  001558  C140  F0AA         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
 28992  00155C  0E01               	movlw	1
 28993  00155E  17AA               	andwf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 28994  001560  90D8               	bcf	status,0,c
 28995  001562  37AA               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 28996  001564  90D8               	bcf	status,0,c
 28997  001566  37AA               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 28998  001568  0101               	movlb	1	; () banked
 28999  00156A  393D               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 29000  00156C  0BF0               	andlw	240
 29001  00156E  0100               	movlb	0	; () banked
 29002  001570  11AA               	iorwf	(??_RADIO_WriteConfiguration+2)& (0+255),w,b
 29003  001572  11A8               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 29004  001574  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29005  001576  0E1E               	movlw	30
 29006  001578  ECA6  F044         	call	_RADIO_RegisterWrite
 29007                           
 29008                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 29009  00157C  0101               	movlb	1	; () banked
 29010  00157E  5142               	movf	(_RadioConfiguration+30)& (0+255),w,b
 29011  001580  1143               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 29012  001582  B4D8               	btfsc	status,2,c
 29013  001584  D06F               	goto	l456
 29014                           
 29015                           ; BSR set to: 1
 29016                           ;radio_driver_SX1276.c: 561: {
 29017                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 29018  001586  C142  F0AC         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 29019  00158A  C143  F0AD         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 29020  00158E  0100               	movlb	0	; () banked
 29021  001590  6BAE               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 29022  001592  6BAF               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 29023                           
 29024                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 29025  001594  D04E               	goto	l457
 29026  001596                     
 29027                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 29028                           
 29029                           ; BSR set to: 0
 29030  001596  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 29031  00159A  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 29032  00159E  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 29033  0015A2  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 29034  0015A6  0E7D               	movlw	125
 29035  0015A8  0100               	movlb	0	; () banked
 29036  0015AA  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 29037  0015AC  0E00               	movlw	0
 29038  0015AE  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 29039  0015B0  0E00               	movlw	0
 29040  0015B2  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 29041  0015B4  0E00               	movlw	0
 29042  0015B6  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 29043  0015B8  EC72  F03E         	call	___lmul	;wreg free
 29044  0015BC  D027               	goto	L21
 29045  0015BE                     
 29046                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 29047  0015BE  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 29048  0015C2  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 29049  0015C6  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 29050  0015CA  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 29051  0015CE  0EFA               	movlw	250
 29052  0015D0  0100               	movlb	0	; () banked
 29053  0015D2  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 29054  0015D4  0E00               	movlw	0
 29055  0015D6  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 29056  0015D8  0E00               	movlw	0
 29057  0015DA  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 29058  0015DC  0E00               	movlw	0
 29059  0015DE  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 29060  0015E0  EC72  F03E         	call	___lmul	;wreg free
 29061  0015E4  D013               	goto	L21
 29062  0015E6                     
 29063                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 29064  0015E6  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 29065  0015EA  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 29066  0015EE  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 29067  0015F2  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 29068  0015F6  0EF4               	movlw	244
 29069  0015F8  0100               	movlb	0	; () banked
 29070  0015FA  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 29071  0015FC  0E01               	movlw	1
 29072  0015FE  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 29073  001600  0E00               	movlw	0
 29074  001602  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 29075  001604  0E00               	movlw	0
 29076  001606  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 29077  001608  EC72  F03E         	call	___lmul	;wreg free
 29078  00160C                     L21:
 29079  00160C  C09A  F0AC         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 29080  001610  C09B  F0AD         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 29081  001614  C09C  F0AE         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 29082  001618  C09D  F0AF         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 29083                           
 29084                           ;radio_driver_SX1276.c: 574: break;
 29085  00161C  D016               	goto	l459
 29086  00161E                     
 29087                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 29088  00161E  0E00               	movlw	0
 29089  001620  0100               	movlb	0	; () banked
 29090  001622  6FAC               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 29091  001624  0E00               	movlw	0
 29092  001626  6FAD               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 29093  001628  0E00               	movlw	0
 29094  00162A  6FAE               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 29095  00162C  0E00               	movlw	0
 29096  00162E  6FAF               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 29097                           
 29098                           ; BSR set to: 0
 29099                           ;radio_driver_SX1276.c: 579: }
 29100                           
 29101                           ;radio_driver_SX1276.c: 578: break;
 29102  001630  D00C               	goto	l459
 29103  001632                     l457:
 29104                           
 29105                           ; BSR set to: 0
 29106                           
 29107                           ; BSR set to: 0
 29108  001632  0101               	movlb	1	; () banked
 29109  001634  513E               	movf	(_RadioConfiguration+26)& (0+255),w,b
 29110                           
 29111                           ; Switch size 1, requested type "space"
 29112                           ; Number of cases is 3, Range of values is 7 to 9
 29113                           ; switch strategies available:
 29114                           ; Name         Instructions Cycles
 29115                           ; simple_byte           10     6 (average)
 29116                           ;	Chosen strategy is simple_byte
 29117  001636  0A07               	xorlw	7	; case 7
 29118  001638  B4D8               	btfsc	status,2,c
 29119  00163A  D7AD               	goto	l458
 29120  00163C  0A0F               	xorlw	15	; case 8
 29121  00163E  B4D8               	btfsc	status,2,c
 29122  001640  D7BE               	goto	l460
 29123  001642  0A01               	xorlw	1	; case 9
 29124  001644  B4D8               	btfsc	status,2,c
 29125  001646  D7CF               	goto	l461
 29126  001648  D7EA               	goto	l462
 29127  00164A                     l459:
 29128                           
 29129                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 29130                           
 29131                           ; BSR set to: 1
 29132  00164A  0101               	movlb	1	; () banked
 29133  00164C  293D               	incf	(_RadioConfiguration+25)& (0+255),w,b
 29134  00164E  0100               	movlb	0	; () banked
 29135  001650  6FA8               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 29136  001652  D005               	goto	u15200
 29137  001654                     u15205:
 29138  001654  90D8               	bcf	status,0,c
 29139  001656  33AF               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 29140  001658  33AE               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 29141  00165A  33AD               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 29142  00165C  33AC               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 29143  00165E                     u15200:
 29144  00165E  2FA8               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 29145  001660  D7F9               	goto	u15205
 29146                           
 29147                           ;radio_driver_SX1276.c: 582: }
 29148  001662  D009               	goto	l463
 29149  001664                     l456:
 29150                           
 29151                           ;radio_driver_SX1276.c: 583: else
 29152                           ;radio_driver_SX1276.c: 584: {
 29153                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 29154  001664  0E00               	movlw	0
 29155  001666  0100               	movlb	0	; () banked
 29156  001668  6FAC               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 29157  00166A  0E00               	movlw	0
 29158  00166C  6FAD               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 29159  00166E  0E00               	movlw	0
 29160  001670  6FAE               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 29161  001672  0E00               	movlw	0
 29162  001674  6FAF               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 29163  001676                     l463:
 29164                           
 29165                           ;radio_driver_SX1276.c: 586: }
 29166                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 29167                           
 29168                           ; BSR set to: 0
 29169  001676  C0AC  F062         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 29170  00167A  0E24               	movlw	36
 29171  00167C  ECA6  F044         	call	_RADIO_RegisterWrite
 29172                           
 29173                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 29174  001680  C0A6  F062         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 29175  001684  0E1F               	movlw	31
 29176  001686  ECA6  F044         	call	_RADIO_RegisterWrite
 29177                           
 29178                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 29179  00168A  0E26               	movlw	38
 29180  00168C  ECE5  F043         	call	_RADIO_RegisterRead
 29181  001690  0100               	movlb	0	; () banked
 29182  001692  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 29183                           
 29184                           ; BSR set to: 0
 29185                           ;radio_driver_SX1276.c: 596: if (
 29186                           ;radio_driver_SX1276.c: 597: (
 29187                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 29188                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 29189                           ;radio_driver_SX1276.c: 600: ) ||
 29190                           ;radio_driver_SX1276.c: 601: (
 29191                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 29192                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 29193                           ;radio_driver_SX1276.c: 604: )
 29194                           ;radio_driver_SX1276.c: 605: )
 29195  001694  0E0C               	movlw	12
 29196  001696  0101               	movlb	1	; () banked
 29197  001698  193D               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 29198  00169A  A4D8               	btfss	status,2,c
 29199  00169C  D008               	goto	u15230
 29200                           
 29201                           ; BSR set to: 1
 29202  00169E  0E07               	movlw	7
 29203  0016A0  193E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 29204  0016A2  B4D8               	btfsc	status,2,c
 29205  0016A4  D00C               	goto	u15250
 29206                           
 29207                           ; BSR set to: 1
 29208  0016A6  0E08               	movlw	8
 29209  0016A8  193E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 29210  0016AA  B4D8               	btfsc	status,2,c
 29211  0016AC  D008               	goto	u15250
 29212  0016AE                     u15230:
 29213                           
 29214                           ; BSR set to: 1
 29215                           
 29216                           ; BSR set to: 1
 29217  0016AE  0E0B               	movlw	11
 29218  0016B0  193D               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 29219  0016B2  A4D8               	btfss	status,2,c
 29220  0016B4  D007               	goto	l464
 29221                           
 29222                           ; BSR set to: 1
 29223  0016B6  0E07               	movlw	7
 29224  0016B8  193E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 29225  0016BA  A4D8               	btfss	status,2,c
 29226  0016BC  D003               	goto	l464
 29227  0016BE                     u15250:
 29228                           
 29229                           ; BSR set to: 1
 29230                           ;radio_driver_SX1276.c: 606: {
 29231                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 29232                           
 29233                           ; BSR set to: 1
 29234  0016BE  0100               	movlb	0	; () banked
 29235  0016C0  87B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 29236                           
 29237                           ;radio_driver_SX1276.c: 608: }
 29238  0016C2  D002               	goto	l469
 29239  0016C4                     l464:
 29240                           
 29241                           ;radio_driver_SX1276.c: 609: else
 29242                           ;radio_driver_SX1276.c: 610: {
 29243                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 29244                           
 29245                           ; BSR set to: 0
 29246  0016C4  0100               	movlb	0	; () banked
 29247  0016C6  97B0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 29248  0016C8                     l469:
 29249                           
 29250                           ; BSR set to: 0
 29251                           ;radio_driver_SX1276.c: 612: }
 29252                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 29253  0016C8  85B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 29254                           
 29255                           ; BSR set to: 0
 29256                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 29257  0016CA  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 29258  0016CE  0E26               	movlw	38
 29259  0016D0  ECA6  F044         	call	_RADIO_RegisterWrite
 29260                           
 29261                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 29262  0016D4  0E31               	movlw	49
 29263  0016D6  ECE5  F043         	call	_RADIO_RegisterRead
 29264  0016DA  0100               	movlb	0	; () banked
 29265  0016DC  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 29266                           
 29267                           ; BSR set to: 0
 29268                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 29269  0016DE  0EF8               	movlw	248
 29270  0016E0  17B0               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 29271                           
 29272                           ; BSR set to: 0
 29273                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 29274  0016E2  0E03               	movlw	3
 29275  0016E4  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 29276                           
 29277                           ; BSR set to: 0
 29278                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 29279  0016E6  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 29280  0016EA  0E31               	movlw	49
 29281  0016EC  ECA6  F044         	call	_RADIO_RegisterWrite
 29282                           
 29283                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 29284  0016F0  0E0A               	movlw	10
 29285  0016F2  0100               	movlb	0	; () banked
 29286  0016F4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29287  0016F6  0E37               	movlw	55
 29288  0016F8  ECA6  F044         	call	_RADIO_RegisterWrite
 29289                           
 29290                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 29291  0016FC  0E12               	movlw	18
 29292  0016FE  0101               	movlb	1	; () banked
 29293  001700  1955               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 29294  001702  A4D8               	btfss	status,2,c
 29295  001704  D02F               	goto	l474
 29296                           
 29297                           ; BSR set to: 1
 29298                           ;radio_driver_SX1276.c: 626: {
 29299                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 29300                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 29301  001706  0E07               	movlw	7
 29302  001708  193E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 29303  00170A  B4D8               	btfsc	status,2,c
 29304  00170C  D004               	goto	u15280
 29305                           
 29306                           ; BSR set to: 1
 29307  00170E  0E08               	movlw	8
 29308  001710  193E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 29309  001712  A4D8               	btfss	status,2,c
 29310  001714  D017               	goto	l471
 29311  001716                     u15280:
 29312                           
 29313                           ; BSR set to: 1
 29314                           ;radio_driver_SX1276.c: 631: {
 29315                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 29316                           
 29317                           ; BSR set to: 1
 29318  001716  0E31               	movlw	49
 29319  001718  ECE5  F043         	call	_RADIO_RegisterRead
 29320  00171C  0100               	movlb	0	; () banked
 29321  00171E  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 29322                           
 29323                           ; BSR set to: 0
 29324                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 29325  001720  9FB0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 29326                           
 29327                           ; BSR set to: 0
 29328                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 29329  001722  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 29330  001726  0E31               	movlw	49
 29331  001728  ECA6  F044         	call	_RADIO_RegisterWrite
 29332                           
 29333                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 29334  00172C  0E40               	movlw	64
 29335  00172E  0100               	movlb	0	; () banked
 29336  001730  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29337  001732  0E2F               	movlw	47
 29338  001734  ECA6  F044         	call	_RADIO_RegisterWrite
 29339                           
 29340                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 29341  001738  0E00               	movlw	0
 29342  00173A  0100               	movlb	0	; () banked
 29343  00173C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29344  00173E  0E30               	movlw	48
 29345  001740  ECA6  F044         	call	_RADIO_RegisterWrite
 29346  001744                     l471:
 29347                           
 29348                           ;radio_driver_SX1276.c: 637: }
 29349                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 29350  001744  0E09               	movlw	9
 29351  001746  0101               	movlb	1	; () banked
 29352  001748  193E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 29353  00174A  A4D8               	btfss	status,2,c
 29354  00174C  D00B               	goto	l474
 29355                           
 29356                           ; BSR set to: 1
 29357                           ;radio_driver_SX1276.c: 640: {
 29358                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 29359  00174E  0E31               	movlw	49
 29360  001750  ECE5  F043         	call	_RADIO_RegisterRead
 29361  001754  0100               	movlb	0	; () banked
 29362  001756  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 29363                           
 29364                           ; BSR set to: 0
 29365                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 29366  001758  8FB0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 29367                           
 29368                           ; BSR set to: 0
 29369                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 29370  00175A  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 29371  00175E  0E31               	movlw	49
 29372  001760  ECA6  F044         	call	_RADIO_RegisterWrite
 29373  001764                     l474:
 29374                           
 29375                           ;radio_driver_SX1276.c: 644: }
 29376                           ;radio_driver_SX1276.c: 645: }
 29377                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 29378  001764  0E33               	movlw	51
 29379  001766  ECE5  F043         	call	_RADIO_RegisterRead
 29380  00176A  0100               	movlb	0	; () banked
 29381  00176C  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 29382                           
 29383                           ; BSR set to: 0
 29384                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 29385  00176E  9DB0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 29386                           
 29387                           ; BSR set to: 0
 29388                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 29389  001770  81B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 29390                           
 29391                           ; BSR set to: 0
 29392                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 29393  001772  C144  F0A8         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 29394  001776  0E01               	movlw	1
 29395  001778  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 29396  00177A  0E06               	movlw	6
 29397  00177C  6FA9               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 29398  00177E                     u15305:
 29399  00177E  90D8               	bcf	status,0,c
 29400  001780  37A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 29401  001782  2FA9               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 29402  001784  D7FC               	goto	u15305
 29403  001786  51A8               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 29404  001788  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 29405                           
 29406                           ; BSR set to: 0
 29407                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 29408  00178A  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 29409  00178E  0E33               	movlw	51
 29410  001790  ECA6  F044         	call	_RADIO_RegisterWrite
 29411                           
 29412                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 29413  001794  C144  F0A8         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 29414  001798  0E01               	movlw	1
 29415  00179A  0100               	movlb	0	; () banked
 29416  00179C  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 29417  00179E  90D8               	bcf	status,0,c
 29418  0017A0  37A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 29419  0017A2  90D8               	bcf	status,0,c
 29420  0017A4  35A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 29421  0017A6  0AFF               	xorlw	255
 29422  0017A8  0B1D               	andlw	29
 29423  0017AA  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 29424                           
 29425                           ; BSR set to: 0
 29426                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 29427  0017AC  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 29428  0017B0  0E3B               	movlw	59
 29429  0017B2  ECA6  F044         	call	_RADIO_RegisterWrite
 29430                           
 29431                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 29432  0017B6  0101               	movlb	1	; () banked
 29433  0017B8  5131               	movf	(_RadioConfiguration+13)& (0+255),w,b
 29434  0017BA  0100               	movlb	0	; () banked
 29435  0017BC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29436  0017BE  0E20               	movlw	32
 29437  0017C0  ECA6  F044         	call	_RADIO_RegisterWrite
 29438                           
 29439                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 29440  0017C4  C130  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 29441  0017C8  0E21               	movlw	33
 29442  0017CA  ECA6  F044         	call	_RADIO_RegisterWrite
 29443                           
 29444                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 29445  0017CE  0E00               	movlw	0
 29446  0017D0  0100               	movlb	0	; () banked
 29447  0017D2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29448  0017D4  0E0D               	movlw	13
 29449  0017D6  ECA6  F044         	call	_RADIO_RegisterWrite
 29450                           
 29451                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 29452  0017DA  0E00               	movlw	0
 29453  0017DC  0100               	movlb	0	; () banked
 29454  0017DE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29455  0017E0  0E0E               	movlw	14
 29456  0017E2  ECA6  F044         	call	_RADIO_RegisterWrite
 29457                           
 29458                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 29459  0017E6  0E00               	movlw	0
 29460  0017E8  0100               	movlb	0	; () banked
 29461  0017EA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29462  0017EC  0E0F               	movlw	15
 29463  0017EE  ECA6  F044         	call	_RADIO_RegisterWrite
 29464                           
 29465                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 29466  0017F2  0E12               	movlw	18
 29467  0017F4  0101               	movlb	1	; () banked
 29468  0017F6  1955               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 29469  0017F8  A4D8               	btfss	status,2,c
 29470  0017FA  D071               	goto	l481
 29471                           
 29472                           ; BSR set to: 1
 29473                           ;radio_driver_SX1276.c: 665: {
 29474                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 29475                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 29476                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 29477                           ;radio_driver_SX1276.c: 669: )
 29478  0017FC  0E09               	movlw	9
 29479  0017FE  193E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 29480  001800  A4D8               	btfss	status,2,c
 29481  001802  D020               	goto	l476
 29482                           
 29483                           ; BSR set to: 1
 29484  001804  0E80               	movlw	128
 29485  001806  5D24               	subwf	_RadioConfiguration& (0+255),w,b
 29486  001808  0E13               	movlw	19
 29487  00180A  5925               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 29488  00180C  0E61               	movlw	97
 29489  00180E  5926               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 29490  001810  0E33               	movlw	51
 29491  001812  5927               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 29492  001814  A0D8               	btfss	status,0,c
 29493  001816  D016               	goto	l476
 29494                           
 29495                           ; BSR set to: 1
 29496  001818  0524               	decf	_RadioConfiguration& (0+255),w,b
 29497  00181A  0EF7               	movlw	247
 29498  00181C  5925               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 29499  00181E  0ECB               	movlw	203
 29500  001820  5926               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 29501  001822  0E3C               	movlw	60
 29502  001824  5927               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 29503  001826  B0D8               	btfsc	status,0,c
 29504  001828  D00D               	goto	l476
 29505                           
 29506                           ; BSR set to: 1
 29507                           ;radio_driver_SX1276.c: 670: {
 29508                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 29509  00182A  0E02               	movlw	2
 29510  00182C  0100               	movlb	0	; () banked
 29511  00182E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29512  001830  0E36               	movlw	54
 29513  001832  ECA6  F044         	call	_RADIO_RegisterWrite
 29514                           
 29515                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 29516  001836  0E64               	movlw	100
 29517  001838  0100               	movlb	0	; () banked
 29518  00183A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29519  00183C  0E3A               	movlw	58
 29520  00183E  ECA6  F044         	call	_RADIO_RegisterWrite
 29521                           
 29522                           ;radio_driver_SX1276.c: 673: }
 29523  001842  D02C               	goto	l479
 29524  001844                     l476:
 29525                           
 29526                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 29527                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 29528                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 29529                           ;radio_driver_SX1276.c: 677: )
 29530  001844  0E09               	movlw	9
 29531  001846  0101               	movlb	1	; () banked
 29532  001848  193E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 29533  00184A  A4D8               	btfss	status,2,c
 29534  00184C  D021               	goto	l478
 29535                           
 29536                           ; BSR set to: 1
 29537  00184E  0E80               	movlw	128
 29538  001850  5D24               	subwf	_RadioConfiguration& (0+255),w,b
 29539  001852  0E1A               	movlw	26
 29540  001854  5925               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 29541  001856  0E70               	movlw	112
 29542  001858  5926               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 29543  00185A  0E18               	movlw	24
 29544  00185C  5927               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 29545  00185E  A0D8               	btfss	status,0,c
 29546  001860  D017               	goto	l478
 29547                           
 29548                           ; BSR set to: 1
 29549  001862  0E41               	movlw	65
 29550  001864  5D24               	subwf	_RadioConfiguration& (0+255),w,b
 29551  001866  0EDD               	movlw	221
 29552  001868  5925               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 29553  00186A  0E4A               	movlw	74
 29554  00186C  5926               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 29555  00186E  0E1F               	movlw	31
 29556  001870  5927               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 29557  001872  B0D8               	btfsc	status,0,c
 29558  001874  D00D               	goto	l478
 29559                           
 29560                           ; BSR set to: 1
 29561                           ;radio_driver_SX1276.c: 678: {
 29562                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 29563  001876  0E02               	movlw	2
 29564  001878  0100               	movlb	0	; () banked
 29565  00187A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29566  00187C  0E36               	movlw	54
 29567  00187E  ECA6  F044         	call	_RADIO_RegisterWrite
 29568                           
 29569                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 29570  001882  0E7F               	movlw	127
 29571  001884  0100               	movlb	0	; () banked
 29572  001886  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29573  001888  0E3A               	movlw	58
 29574  00188A  ECA6  F044         	call	_RADIO_RegisterWrite
 29575                           
 29576                           ;radio_driver_SX1276.c: 681: }
 29577  00188E  D006               	goto	l479
 29578  001890                     l478:
 29579                           
 29580                           ;radio_driver_SX1276.c: 682: else
 29581                           ;radio_driver_SX1276.c: 683: {
 29582                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 29583  001890  0E03               	movlw	3
 29584  001892  0100               	movlb	0	; () banked
 29585  001894  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29586  001896  0E36               	movlw	54
 29587  001898  ECA6  F044         	call	_RADIO_RegisterWrite
 29588  00189C                     l479:
 29589                           
 29590                           ;radio_driver_SX1276.c: 685: }
 29591                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 29592  00189C  0E09               	movlw	9
 29593  00189E  0101               	movlb	1	; () banked
 29594  0018A0  193E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 29595  0018A2  A4D8               	btfss	status,2,c
 29596  0018A4  D010               	goto	l480
 29597                           
 29598                           ; BSR set to: 1
 29599  0018A6  0544               	decf	(_RadioConfiguration+32)& (0+255),w,b
 29600  0018A8  A4D8               	btfss	status,2,c
 29601  0018AA  D00D               	goto	l480
 29602                           
 29603                           ; BSR set to: 1
 29604                           ;radio_driver_SX1276.c: 689: {
 29605                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 29606  0018AC  0E65               	movlw	101
 29607  0018AE  0100               	movlb	0	; () banked
 29608  0018B0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29609  0018B2  0E3A               	movlw	58
 29610  0018B4  ECA6  F044         	call	_RADIO_RegisterWrite
 29611                           
 29612                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 29613  0018B8  0E19               	movlw	25
 29614  0018BA  0100               	movlb	0	; () banked
 29615  0018BC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29616  0018BE  0E3B               	movlw	59
 29617  0018C0  ECA6  F044         	call	_RADIO_RegisterWrite
 29618                           
 29619                           ;radio_driver_SX1276.c: 692: }
 29620  0018C4  D00C               	goto	l481
 29621  0018C6                     l480:
 29622                           
 29623                           ;radio_driver_SX1276.c: 693: else
 29624                           ;radio_driver_SX1276.c: 694: {
 29625                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 29626  0018C6  0E65               	movlw	101
 29627  0018C8  0100               	movlb	0	; () banked
 29628  0018CA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29629  0018CC  0E3A               	movlw	58
 29630  0018CE  ECA6  F044         	call	_RADIO_RegisterWrite
 29631                           
 29632                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 29633  0018D2  0E1D               	movlw	29
 29634  0018D4  0100               	movlb	0	; () banked
 29635  0018D6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29636  0018D8  0E3B               	movlw	59
 29637  0018DA  ECA6  F044         	call	_RADIO_RegisterWrite
 29638  0018DE                     l481:
 29639                           
 29640                           ;radio_driver_SX1276.c: 697: }
 29641                           ;radio_driver_SX1276.c: 698: }
 29642                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 29643  0018DE  0EFF               	movlw	255
 29644  0018E0  0100               	movlb	0	; () banked
 29645  0018E2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29646  0018E4  0E12               	movlw	18
 29647  0018E6  ECA6  F044         	call	_RADIO_RegisterWrite
 29648                           
 29649                           ;radio_driver_SX1276.c: 702: }
 29650  0018EA  0012               	return	
 29651  0018EC                     l455:
 29652                           
 29653                           ;radio_driver_SX1276.c: 703: else
 29654                           ;radio_driver_SX1276.c: 704: {
 29655                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 29656  0018EC  C128  F06D         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 29657  0018F0  C129  F06E         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 29658  0018F4  C12A  F06F         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 29659  0018F8  C12B  F070         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 29660  0018FC  EC96  F03B         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 29661                           
 29662                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 29663  001900  C12C  F06D         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 29664  001904  C12D  F06E         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 29665  001908  C12E  F06F         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 29666  00190C  C12F  F070         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 29667  001910  ECCB  F03B         	call	_RADIO_WriteFSKBitRate	;wreg free
 29668                           
 29669                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 29670  001914  0101               	movlb	1	; () banked
 29671  001916  5131               	movf	(_RadioConfiguration+13)& (0+255),w,b
 29672  001918  0100               	movlb	0	; () banked
 29673  00191A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29674  00191C  0E25               	movlw	37
 29675  00191E  ECA6  F044         	call	_RADIO_RegisterWrite
 29676                           
 29677                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 29678  001922  C130  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 29679  001926  0E26               	movlw	38
 29680  001928  ECA6  F044         	call	_RADIO_RegisterWrite
 29681                           
 29682                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 29683  00192C  0E0A               	movlw	10
 29684  00192E  ECE5  F043         	call	_RADIO_RegisterRead
 29685  001932  0100               	movlb	0	; () banked
 29686  001934  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 29687                           
 29688                           ; BSR set to: 0
 29689                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 29690  001936  0E9F               	movlw	159
 29691  001938  17B0               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 29692                           
 29693                           ; BSR set to: 0
 29694                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 29695  00193A  0101               	movlb	1	; () banked
 29696  00193C  3957               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 29697  00193E  46E8               	rlncf	wreg,f,c
 29698  001940  0BE0               	andlw	224
 29699  001942  0100               	movlb	0	; () banked
 29700  001944  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 29701                           
 29702                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 29703  001946  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 29704  00194A  0E0A               	movlw	10
 29705  00194C  ECA6  F044         	call	_RADIO_RegisterWrite
 29706                           
 29707                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 29708  001950  0EC8               	movlw	200
 29709  001952  0100               	movlb	0	; () banked
 29710  001954  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 29711                           
 29712                           ; BSR set to: 0
 29713                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 29714  001956  0101               	movlb	1	; () banked
 29715  001958  5140               	movf	(_RadioConfiguration+28)& (0+255),w,b
 29716  00195A  B4D8               	btfsc	status,2,c
 29717  00195C  D002               	goto	l483
 29718                           
 29719                           ; BSR set to: 1
 29720                           ;radio_driver_SX1276.c: 722: {
 29721                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 29722  00195E  0100               	movlb	0	; () banked
 29723  001960  89B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 29724  001962                     l483:
 29725                           
 29726                           ;radio_driver_SX1276.c: 724: }
 29727                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 29728                           
 29729                           ; BSR set to: 0
 29730  001962  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 29731  001966  0E30               	movlw	48
 29732  001968  ECA6  F044         	call	_RADIO_RegisterWrite
 29733                           
 29734                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 29735  00196C  0E00               	movlw	0
 29736  00196E  0100               	movlb	0	; () banked
 29737  001970  6FAB               	movwf	RADIO_WriteConfiguration@i& (0+255),b
 29738  001972  D010               	goto	l484
 29739  001974                     
 29740                           ; BSR set to: 0
 29741                           ;radio_driver_SX1276.c: 729: {
 29742                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 29743                           
 29744                           ; BSR set to: 0
 29745  001974  51AB               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 29746  001976  0D01               	mullw	1
 29747  001978  0E33               	movlw	low (_RadioConfiguration+15)
 29748  00197A  24F3               	addwf	prodl,w,c
 29749  00197C  6ED9               	movwf	fsr2l,c
 29750  00197E  0E01               	movlw	high (_RadioConfiguration+15)
 29751  001980  20F4               	addwfc	prodh,w,c
 29752  001982  6EDA               	movwf	fsr2h,c
 29753  001984  50DF               	movf	indf2,w,c
 29754  001986  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29755  001988  51AB               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 29756  00198A  0F28               	addlw	40
 29757  00198C  ECA6  F044         	call	_RADIO_RegisterWrite
 29758  001990  0100               	movlb	0	; () banked
 29759  001992  2BAB               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 29760  001994                     l484:
 29761                           
 29762                           ; BSR set to: 0
 29763                           
 29764                           ; BSR set to: 0
 29765  001994  0101               	movlb	1	; () banked
 29766  001996  513B               	movf	(_RadioConfiguration+23)& (0+255),w,b
 29767  001998  0100               	movlb	0	; () banked
 29768  00199A  5DAB               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 29769  00199C  A0D8               	btfss	status,0,c
 29770  00199E  D7EA               	goto	l485
 29771                           
 29772                           ; BSR set to: 0
 29773                           ;radio_driver_SX1276.c: 733: }
 29774                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 29775                           
 29776                           ; BSR set to: 0
 29777  0019A0  0101               	movlb	1	; () banked
 29778  0019A2  513B               	movf	(_RadioConfiguration+23)& (0+255),w,b
 29779  0019A4  B4D8               	btfsc	status,2,c
 29780  0019A6  D008               	goto	l487
 29781                           
 29782                           ; BSR set to: 1
 29783                           ;radio_driver_SX1276.c: 737: {
 29784                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 29785  0019A8  053B               	decf	(_RadioConfiguration+23)& (0+255),w,b
 29786  0019AA  0910               	iorlw	16
 29787  0019AC  0100               	movlb	0	; () banked
 29788  0019AE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29789  0019B0  0E27               	movlw	39
 29790  0019B2  ECA6  F044         	call	_RADIO_RegisterWrite
 29791                           
 29792                           ;radio_driver_SX1276.c: 739: }
 29793  0019B6  D006               	goto	l488
 29794  0019B8                     l487:
 29795                           
 29796                           ;radio_driver_SX1276.c: 740: else
 29797                           ;radio_driver_SX1276.c: 741: {
 29798                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 29799  0019B8  0E00               	movlw	0
 29800  0019BA  0100               	movlb	0	; () banked
 29801  0019BC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29802  0019BE  0E27               	movlw	39
 29803  0019C0  ECA6  F044         	call	_RADIO_RegisterWrite
 29804  0019C4                     l488:
 29805                           
 29806                           ;radio_driver_SX1276.c: 743: }
 29807                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 29808  0019C4  0EFF               	movlw	255
 29809  0019C6  0100               	movlb	0	; () banked
 29810  0019C8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29811  0019CA  0E3E               	movlw	62
 29812  0019CC  ECA6  F044         	call	_RADIO_RegisterWrite
 29813                           
 29814                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 29815  0019D0  0EFF               	movlw	255
 29816  0019D2  0100               	movlb	0	; () banked
 29817  0019D4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29818  0019D6  0E3F               	movlw	63
 29819  0019D8  ECA6  F044         	call	_RADIO_RegisterWrite
 29820  0019DC  0012               	return	
 29821  0019DE                     __end_of_RADIO_WriteConfiguration:
 29822                           	opt stack 0
 29823                           tosu	equ	0xFFF
 29824                           tosh	equ	0xFFE
 29825                           tosl	equ	0xFFD
 29826                           pclath	equ	0xFFA
 29827                           tblptru	equ	0xFF8
 29828                           tblptrh	equ	0xFF7
 29829                           tblptrl	equ	0xFF6
 29830                           tablat	equ	0xFF5
 29831                           prodh	equ	0xFF4
 29832                           prodl	equ	0xFF3
 29833                           intcon	equ	0xFF2
 29834                           intcon2	equ	0xFF1
 29835                           intcon3	equ	0xFF0
 29836                           indf0	equ	0xFEF
 29837                           postinc0	equ	0xFEE
 29838                           fsr0h	equ	0xFEA
 29839                           fsr0l	equ	0xFE9
 29840                           wreg	equ	0xFE8
 29841                           postinc1	equ	0xFE6
 29842                           postdec1	equ	0xFE5
 29843                           plusw1	equ	0xFE3
 29844                           fsr1h	equ	0xFE2
 29845                           fsr1l	equ	0xFE1
 29846                           indf2	equ	0xFDF
 29847                           postinc2	equ	0xFDE
 29848                           postdec2	equ	0xFDD
 29849                           plusw2	equ	0xFDB
 29850                           fsr2h	equ	0xFDA
 29851                           fsr2l	equ	0xFD9
 29852                           status	equ	0xFD8
 29853                           
 29854 ;; *************** function _RADIO_WritePower *****************
 29855 ;; Defined at:
 29856 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29857 ;; Parameters:    Size  Location     Type
 29858 ;;  power           1    wreg     char 
 29859 ;; Auto vars:     Size  Location     Type
 29860 ;;  power           1    6[BANK0 ] char 
 29861 ;;  paDac           1    5[BANK0 ] unsigned char 
 29862 ;;  ocp             1    4[BANK0 ] unsigned char 
 29863 ;; Return value:  Size  Location     Type
 29864 ;;                  1    wreg      void 
 29865 ;; Registers used:
 29866 ;;		wreg, status,2, status,0, cstack
 29867 ;; Tracked objects:
 29868 ;;		On entry : 0/0
 29869 ;;		On exit  : 0/0
 29870 ;;		Unchanged: 0/0
 29871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29873 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29875 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29876 ;;Total ram usage:        3 bytes
 29877 ;; Hardware stack levels used:    1
 29878 ;; Hardware stack levels required when called:   10
 29879 ;; This function calls:
 29880 ;;		_RADIO_RegisterRead
 29881 ;;		_RADIO_RegisterWrite
 29882 ;; This function is called by:
 29883 ;;		_RADIO_WriteConfiguration
 29884 ;; This function uses a non-reentrant model
 29885 ;;
 29886                           
 29887                           	psect	text144
 29888  006106                     __ptext144:
 29889                           	opt stack 0
 29890  006106                     _RADIO_WritePower:
 29891                           	opt stack 17
 29892                           
 29893                           ;incstack = 0
 29894                           ;RADIO_WritePower@power stored from wreg
 29895  006106  0100               	movlb	0	; () banked
 29896  006108  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 29897                           
 29898                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 29899                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 29900                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 29901  00610A  0101               	movlb	1	; () banked
 29902  00610C  5141               	movf	(_RadioConfiguration+29)& (0+255),w,b
 29903  00610E  A4D8               	btfss	status,2,c
 29904  006110  D030               	goto	l426
 29905                           
 29906                           ; BSR set to: 1
 29907                           ;radio_driver_SX1276.c: 348: {
 29908                           ;radio_driver_SX1276.c: 350: if (power < -3)
 29909  006112  0100               	movlb	0	; () banked
 29910  006114  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 29911  006116  0A80               	xorlw	128
 29912  006118  0F83               	addlw	131
 29913  00611A  B0D8               	btfsc	status,0,c
 29914  00611C  D002               	goto	l427
 29915                           
 29916                           ; BSR set to: 0
 29917                           ;radio_driver_SX1276.c: 351: {
 29918                           ;radio_driver_SX1276.c: 352: power = -3;
 29919  00611E  0EFD               	movlw	253
 29920  006120  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 29921  006122                     l427:
 29922                           
 29923                           ; BSR set to: 0
 29924                           ;radio_driver_SX1276.c: 353: }
 29925                           ;radio_driver_SX1276.c: 354: if (power > 15)
 29926                           
 29927                           ; BSR set to: 0
 29928  006122  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 29929  006124  0A80               	xorlw	128
 29930  006126  0F70               	addlw	-144
 29931  006128  A0D8               	btfss	status,0,c
 29932  00612A  D002               	goto	l428
 29933                           
 29934                           ; BSR set to: 0
 29935                           ;radio_driver_SX1276.c: 355: {
 29936                           ;radio_driver_SX1276.c: 356: power = 15;
 29937  00612C  0E0F               	movlw	15
 29938  00612E  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 29939  006130                     l428:
 29940                           
 29941                           ; BSR set to: 0
 29942                           ;radio_driver_SX1276.c: 357: }
 29943                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 29944                           
 29945                           ; BSR set to: 0
 29946  006130  0E4D               	movlw	77
 29947  006132  ECE5  F043         	call	_RADIO_RegisterRead
 29948  006136  0100               	movlb	0	; () banked
 29949  006138  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 29950                           
 29951                           ; BSR set to: 0
 29952                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 29953  00613A  0EF8               	movlw	248
 29954  00613C  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 29955                           
 29956                           ; BSR set to: 0
 29957                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 29958  00613E  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 29959                           
 29960                           ; BSR set to: 0
 29961                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 29962  006140  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 29963  006144  0E4D               	movlw	77
 29964  006146  ECA6  F044         	call	_RADIO_RegisterWrite
 29965                           
 29966                           ;radio_driver_SX1276.c: 364: if (power < 0)
 29967  00614A  0100               	movlb	0	; () banked
 29968  00614C  AF66               	btfss	RADIO_WritePower@power& (0+255),7,b
 29969  00614E  D009               	goto	l429
 29970                           
 29971                           ; BSR set to: 0
 29972                           ;radio_driver_SX1276.c: 365: {
 29973                           ;radio_driver_SX1276.c: 369: power += 3;
 29974  006150  0E03               	movlw	3
 29975  006152  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 29976                           
 29977                           ; BSR set to: 0
 29978                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 29979  006154  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 29980  006156  0920               	iorlw	32
 29981  006158  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29982  00615A  0E09               	movlw	9
 29983  00615C  ECA6  F044         	call	_RADIO_RegisterWrite
 29984                           
 29985                           ;radio_driver_SX1276.c: 371: }
 29986  006160  0012               	return	
 29987  006162                     l429:
 29988                           
 29989                           ;radio_driver_SX1276.c: 372: else
 29990                           ;radio_driver_SX1276.c: 373: {
 29991                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 29992  006162  0100               	movlb	0	; () banked
 29993  006164  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 29994  006166  0970               	iorlw	112
 29995  006168  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29996  00616A  0E09               	movlw	9
 29997  00616C  ECA6  F044         	call	_RADIO_RegisterWrite
 29998                           
 29999                           ;radio_driver_SX1276.c: 378: }
 30000                           ;radio_driver_SX1276.c: 379: }
 30001  006170  0012               	return	
 30002  006172                     l426:
 30003                           
 30004                           ;radio_driver_SX1276.c: 380: else
 30005                           ;radio_driver_SX1276.c: 381: {
 30006                           ;radio_driver_SX1276.c: 385: if (power < 2)
 30007  006172  0100               	movlb	0	; () banked
 30008  006174  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 30009  006176  0A80               	xorlw	128
 30010  006178  0F7E               	addlw	-130
 30011  00617A  B0D8               	btfsc	status,0,c
 30012  00617C  D002               	goto	l432
 30013                           
 30014                           ; BSR set to: 0
 30015                           ;radio_driver_SX1276.c: 386: {
 30016                           ;radio_driver_SX1276.c: 387: power = 2;
 30017  00617E  0E02               	movlw	2
 30018  006180  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 30019  006182                     l432:
 30020                           
 30021                           ; BSR set to: 0
 30022                           ;radio_driver_SX1276.c: 388: }
 30023                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 30024                           
 30025                           ; BSR set to: 0
 30026  006182  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 30027  006184  0A80               	xorlw	128
 30028  006186  0F6C               	addlw	-148
 30029  006188  A0D8               	btfss	status,0,c
 30030  00618A  D002               	goto	l433
 30031                           
 30032                           ; BSR set to: 0
 30033                           ;radio_driver_SX1276.c: 392: {
 30034                           ;radio_driver_SX1276.c: 393: power = 20;
 30035  00618C  0E14               	movlw	20
 30036  00618E  D006               	goto	L22
 30037  006190                     l433:
 30038                           
 30039                           ; BSR set to: 0
 30040                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 30041                           
 30042                           ; BSR set to: 0
 30043  006190  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 30044  006192  0A80               	xorlw	128
 30045  006194  0F6E               	addlw	-146
 30046  006196  A0D8               	btfss	status,0,c
 30047  006198  D002               	goto	l435
 30048                           
 30049                           ; BSR set to: 0
 30050                           ;radio_driver_SX1276.c: 396: {
 30051                           ;radio_driver_SX1276.c: 397: power = 17;
 30052  00619A  0E11               	movlw	17
 30053  00619C                     L22:
 30054  00619C  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 30055  00619E                     l435:
 30056                           
 30057                           ; BSR set to: 0
 30058                           ;radio_driver_SX1276.c: 398: }
 30059                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 30060                           
 30061                           ; BSR set to: 0
 30062                           
 30063                           ; BSR set to: 0
 30064  00619E  0E0B               	movlw	11
 30065  0061A0  ECE5  F043         	call	_RADIO_RegisterRead
 30066  0061A4  0100               	movlb	0	; () banked
 30067  0061A6  6F64               	movwf	RADIO_WritePower@ocp& (0+255),b
 30068                           
 30069                           ; BSR set to: 0
 30070                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 30071  0061A8  0E4D               	movlw	77
 30072  0061AA  ECE5  F043         	call	_RADIO_RegisterRead
 30073  0061AE  0100               	movlb	0	; () banked
 30074  0061B0  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 30075                           
 30076                           ; BSR set to: 0
 30077                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 30078  0061B2  0EF8               	movlw	248
 30079  0061B4  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 30080                           
 30081                           ; BSR set to: 0
 30082                           ;radio_driver_SX1276.c: 403: if (power == 20)
 30083  0061B6  0E14               	movlw	20
 30084  0061B8  1966               	xorwf	RADIO_WritePower@power& (0+255),w,b
 30085  0061BA  A4D8               	btfss	status,2,c
 30086  0061BC  D006               	goto	l436
 30087                           
 30088                           ; BSR set to: 0
 30089                           ;radio_driver_SX1276.c: 404: {
 30090                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 30091  0061BE  0E07               	movlw	7
 30092  0061C0  1365               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 30093                           
 30094                           ; BSR set to: 0
 30095                           ;radio_driver_SX1276.c: 406: power = 15;
 30096  0061C2  0E0F               	movlw	15
 30097  0061C4  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 30098                           
 30099                           ; BSR set to: 0
 30100                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 30101  0061C6  9B64               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 30102                           
 30103                           ;radio_driver_SX1276.c: 408: }
 30104  0061C8  D004               	goto	l437
 30105  0061CA                     l436:
 30106                           
 30107                           ; BSR set to: 0
 30108                           ;radio_driver_SX1276.c: 409: else
 30109                           ;radio_driver_SX1276.c: 410: {
 30110                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 30111                           
 30112                           ; BSR set to: 0
 30113  0061CA  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 30114                           
 30115                           ; BSR set to: 0
 30116                           ;radio_driver_SX1276.c: 412: power -= 2;
 30117  0061CC  0EFE               	movlw	254
 30118  0061CE  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 30119                           
 30120                           ; BSR set to: 0
 30121                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 30122  0061D0  8B64               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 30123  0061D2                     l437:
 30124                           
 30125                           ; BSR set to: 0
 30126                           ;radio_driver_SX1276.c: 414: }
 30127                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 30128                           
 30129                           ; BSR set to: 0
 30130  0061D2  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 30131  0061D6  0E4D               	movlw	77
 30132  0061D8  ECA6  F044         	call	_RADIO_RegisterWrite
 30133                           
 30134                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 30135  0061DC  0100               	movlb	0	; () banked
 30136  0061DE  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 30137  0061E0  0980               	iorlw	128
 30138  0061E2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30139  0061E4  0E09               	movlw	9
 30140  0061E6  ECA6  F044         	call	_RADIO_RegisterWrite
 30141                           
 30142                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 30143  0061EA  C064  F062         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 30144  0061EE  0E0B               	movlw	11
 30145  0061F0  ECA6  F044         	call	_RADIO_RegisterWrite
 30146  0061F4  0012               	return	
 30147  0061F6                     __end_of_RADIO_WritePower:
 30148                           	opt stack 0
 30149                           tosu	equ	0xFFF
 30150                           tosh	equ	0xFFE
 30151                           tosl	equ	0xFFD
 30152                           pclath	equ	0xFFA
 30153                           tblptru	equ	0xFF8
 30154                           tblptrh	equ	0xFF7
 30155                           tblptrl	equ	0xFF6
 30156                           tablat	equ	0xFF5
 30157                           prodh	equ	0xFF4
 30158                           prodl	equ	0xFF3
 30159                           intcon	equ	0xFF2
 30160                           intcon2	equ	0xFF1
 30161                           intcon3	equ	0xFF0
 30162                           indf0	equ	0xFEF
 30163                           postinc0	equ	0xFEE
 30164                           fsr0h	equ	0xFEA
 30165                           fsr0l	equ	0xFE9
 30166                           wreg	equ	0xFE8
 30167                           postinc1	equ	0xFE6
 30168                           postdec1	equ	0xFE5
 30169                           plusw1	equ	0xFE3
 30170                           fsr1h	equ	0xFE2
 30171                           fsr1l	equ	0xFE1
 30172                           indf2	equ	0xFDF
 30173                           postinc2	equ	0xFDE
 30174                           postdec2	equ	0xFDD
 30175                           plusw2	equ	0xFDB
 30176                           fsr2h	equ	0xFDA
 30177                           fsr2l	equ	0xFD9
 30178                           status	equ	0xFD8
 30179                           
 30180 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 30181 ;; Defined at:
 30182 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 30183 ;; Parameters:    Size  Location     Type
 30184 ;;  frequencyDev    4   13[BANK0 ] unsigned long 
 30185 ;; Auto vars:     Size  Location     Type
 30186 ;;  num             4   17[BANK0 ] unsigned long 
 30187 ;; Return value:  Size  Location     Type
 30188 ;;                  1    wreg      void 
 30189 ;; Registers used:
 30190 ;;		wreg, status,2, status,0, cstack
 30191 ;; Tracked objects:
 30192 ;;		On entry : 0/0
 30193 ;;		On exit  : 0/0
 30194 ;;		Unchanged: 0/0
 30195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30196 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30197 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30199 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30200 ;;Total ram usage:        8 bytes
 30201 ;; Hardware stack levels used:    1
 30202 ;; Hardware stack levels required when called:   10
 30203 ;; This function calls:
 30204 ;;		_RADIO_RegisterWrite
 30205 ;;		___lldiv
 30206 ;; This function is called by:
 30207 ;;		_RADIO_WriteConfiguration
 30208 ;; This function uses a non-reentrant model
 30209 ;;
 30210                           
 30211                           	psect	text145
 30212  00772C                     __ptext145:
 30213                           	opt stack 0
 30214  00772C                     _RADIO_WriteFSKFrequencyDeviation:
 30215                           	opt stack 17
 30216                           
 30217                           ;radio_driver_SX1276.c: 296: uint32_t num;
 30218                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 30219                           
 30220                           ;incstack = 0
 30221  00772C  C06D  F071         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 30222  007730  C06E  F072         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 30223  007734  C06F  F073         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 30224  007738  C070  F074         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 30225                           
 30226                           ;radio_driver_SX1276.c: 304: num <<= (8);
 30227  00773C  C073  F074         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 30228  007740  C072  F073         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 30229  007744  C071  F072         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 30230  007748  0100               	movlb	0	; () banked
 30231  00774A  6B71               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 30232                           
 30233                           ; BSR set to: 0
 30234                           ;radio_driver_SX1276.c: 305: num /= 15625;
 30235  00774C  C071  F060         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 30236  007750  C072  F061         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 30237  007754  C073  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 30238  007758  C074  F063         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 30239  00775C  0E09               	movlw	9
 30240  00775E  6F64               	movwf	___lldiv@divisor& (0+255),b
 30241  007760  0E3D               	movlw	61
 30242  007762  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 30243  007764  0E00               	movlw	0
 30244  007766  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 30245  007768  0E00               	movlw	0
 30246  00776A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 30247  00776C  ECB4  F039         	call	___lldiv	;wreg free
 30248  007770  C060  F071         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 30249  007774  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 30250  007778  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 30251  00777C  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 30252                           
 30253                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 30254  007780  C072  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 30255  007784  0E04               	movlw	4
 30256  007786  ECA6  F044         	call	_RADIO_RegisterWrite
 30257                           
 30258                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 30259  00778A  C071  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 30260  00778E  0E05               	movlw	5
 30261  007790  ECA6  F044         	call	_RADIO_RegisterWrite
 30262  007794  0012               	return		;funcret
 30263  007796                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 30264                           	opt stack 0
 30265                           tosu	equ	0xFFF
 30266                           tosh	equ	0xFFE
 30267                           tosl	equ	0xFFD
 30268                           pclath	equ	0xFFA
 30269                           tblptru	equ	0xFF8
 30270                           tblptrh	equ	0xFF7
 30271                           tblptrl	equ	0xFF6
 30272                           tablat	equ	0xFF5
 30273                           prodh	equ	0xFF4
 30274                           prodl	equ	0xFF3
 30275                           intcon	equ	0xFF2
 30276                           intcon2	equ	0xFF1
 30277                           intcon3	equ	0xFF0
 30278                           indf0	equ	0xFEF
 30279                           postinc0	equ	0xFEE
 30280                           fsr0h	equ	0xFEA
 30281                           fsr0l	equ	0xFE9
 30282                           wreg	equ	0xFE8
 30283                           postinc1	equ	0xFE6
 30284                           postdec1	equ	0xFE5
 30285                           plusw1	equ	0xFE3
 30286                           fsr1h	equ	0xFE2
 30287                           fsr1l	equ	0xFE1
 30288                           indf2	equ	0xFDF
 30289                           postinc2	equ	0xFDE
 30290                           postdec2	equ	0xFDD
 30291                           plusw2	equ	0xFDB
 30292                           fsr2h	equ	0xFDA
 30293                           fsr2l	equ	0xFD9
 30294                           status	equ	0xFD8
 30295                           
 30296 ;; *************** function _RADIO_WriteFSKBitRate *****************
 30297 ;; Defined at:
 30298 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 30299 ;; Parameters:    Size  Location     Type
 30300 ;;  bitRate         4   13[BANK0 ] unsigned long 
 30301 ;; Auto vars:     Size  Location     Type
 30302 ;;  num             4   17[BANK0 ] unsigned long 
 30303 ;; Return value:  Size  Location     Type
 30304 ;;                  1    wreg      void 
 30305 ;; Registers used:
 30306 ;;		wreg, status,2, status,0, cstack
 30307 ;; Tracked objects:
 30308 ;;		On entry : 0/0
 30309 ;;		On exit  : 0/0
 30310 ;;		Unchanged: 0/0
 30311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30312 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30313 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30315 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30316 ;;Total ram usage:        8 bytes
 30317 ;; Hardware stack levels used:    1
 30318 ;; Hardware stack levels required when called:   10
 30319 ;; This function calls:
 30320 ;;		_RADIO_RegisterWrite
 30321 ;;		___lldiv
 30322 ;; This function is called by:
 30323 ;;		_RADIO_WriteConfiguration
 30324 ;; This function uses a non-reentrant model
 30325 ;;
 30326                           
 30327                           	psect	text146
 30328  007796                     __ptext146:
 30329                           	opt stack 0
 30330  007796                     _RADIO_WriteFSKBitRate:
 30331                           	opt stack 17
 30332                           
 30333                           ;radio_driver_SX1276.c: 318: uint32_t num;
 30334                           ;radio_driver_SX1276.c: 320: num = 32000000;
 30335                           
 30336                           ;incstack = 0
 30337  007796  0E00               	movlw	0
 30338  007798  0100               	movlb	0	; () banked
 30339  00779A  6F71               	movwf	RADIO_WriteFSKBitRate@num& (0+255),b
 30340  00779C  0E48               	movlw	72
 30341  00779E  6F72               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 30342  0077A0  0EE8               	movlw	232
 30343  0077A2  6F73               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 30344  0077A4  0E01               	movlw	1
 30345  0077A6  6F74               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 30346                           
 30347                           ; BSR set to: 0
 30348                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 30349  0077A8  C071  F060         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 30350  0077AC  C072  F061         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 30351  0077B0  C073  F062         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 30352  0077B4  C074  F063         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 30353  0077B8  C06D  F064         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 30354  0077BC  C06E  F065         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 30355  0077C0  C06F  F066         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 30356  0077C4  C070  F067         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 30357  0077C8  ECB4  F039         	call	___lldiv	;wreg free
 30358  0077CC  C060  F071         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 30359  0077D0  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 30360  0077D4  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 30361  0077D8  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 30362                           
 30363                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 30364  0077DC  C072  F062         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 30365  0077E0  0E02               	movlw	2
 30366  0077E2  ECA6  F044         	call	_RADIO_RegisterWrite
 30367                           
 30368                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 30369  0077E6  C071  F062         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 30370  0077EA  0E03               	movlw	3
 30371  0077EC  ECA6  F044         	call	_RADIO_RegisterWrite
 30372                           
 30373                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 30374  0077F0  0E00               	movlw	0
 30375  0077F2  0100               	movlb	0	; () banked
 30376  0077F4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30377  0077F6  0E5D               	movlw	93
 30378  0077F8  ECA6  F044         	call	_RADIO_RegisterWrite
 30379  0077FC  0012               	return		;funcret
 30380  0077FE                     __end_of_RADIO_WriteFSKBitRate:
 30381                           	opt stack 0
 30382                           tosu	equ	0xFFF
 30383                           tosh	equ	0xFFE
 30384                           tosl	equ	0xFFD
 30385                           pclath	equ	0xFFA
 30386                           tblptru	equ	0xFF8
 30387                           tblptrh	equ	0xFF7
 30388                           tblptrl	equ	0xFF6
 30389                           tablat	equ	0xFF5
 30390                           prodh	equ	0xFF4
 30391                           prodl	equ	0xFF3
 30392                           intcon	equ	0xFF2
 30393                           intcon2	equ	0xFF1
 30394                           intcon3	equ	0xFF0
 30395                           indf0	equ	0xFEF
 30396                           postinc0	equ	0xFEE
 30397                           fsr0h	equ	0xFEA
 30398                           fsr0l	equ	0xFE9
 30399                           wreg	equ	0xFE8
 30400                           postinc1	equ	0xFE6
 30401                           postdec1	equ	0xFE5
 30402                           plusw1	equ	0xFE3
 30403                           fsr1h	equ	0xFE2
 30404                           fsr1l	equ	0xFE1
 30405                           indf2	equ	0xFDF
 30406                           postinc2	equ	0xFDE
 30407                           postdec2	equ	0xFDD
 30408                           plusw2	equ	0xFDB
 30409                           fsr2h	equ	0xFDA
 30410                           fsr2l	equ	0xFD9
 30411                           status	equ	0xFD8
 30412                           
 30413 ;; *************** function _PrepareJoinRequestFrame *****************
 30414 ;; Defined at:
 30415 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 30416 ;; Parameters:    Size  Location     Type
 30417 ;;		None
 30418 ;; Auto vars:     Size  Location     Type
 30419 ;;  mic             4  116[BANK0 ] unsigned long 
 30420 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 30421 ;;  iCtr            1  121[BANK0 ] unsigned char 
 30422 ;;  mhdr            1  120[BANK0 ] struct .
 30423 ;; Return value:  Size  Location     Type
 30424 ;;                  1    wreg      unsigned char 
 30425 ;; Registers used:
 30426 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30427 ;; Tracked objects:
 30428 ;;		On entry : 0/0
 30429 ;;		On exit  : 0/0
 30430 ;;		Unchanged: 0/0
 30431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30433 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30434 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30435 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30436 ;;Total ram usage:       11 bytes
 30437 ;; Hardware stack levels used:    1
 30438 ;; Hardware stack levels required when called:   13
 30439 ;; This function calls:
 30440 ;;		_ComputeMic
 30441 ;;		_Random
 30442 ;;		_memcpy
 30443 ;;		_memset
 30444 ;; This function is called by:
 30445 ;;		_LORAWAN_Join
 30446 ;; This function uses a non-reentrant model
 30447 ;;
 30448                           
 30449                           	psect	text147
 30450  004992                     __ptext147:
 30451                           	opt stack 0
 30452  004992                     _PrepareJoinRequestFrame:
 30453                           	opt stack 16
 30454                           
 30455                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 30456                           
 30457                           ;incstack = 0
 30458  004992  0E00               	movlw	0
 30459  004994  0100               	movlb	0	; () banked
 30460  004996  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 30461                           
 30462                           ; BSR set to: 0
 30463                           ;lorawan.c: 1809: Mhdr_t mhdr;
 30464                           ;lorawan.c: 1810: uint32_t mic;
 30465                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 30466  004998  0EE0               	movlw	low _macBuffer
 30467  00499A  6F60               	movwf	memset@p1& (0+255),b
 30468  00499C  0E04               	movlw	high _macBuffer
 30469  00499E  6F61               	movwf	(memset@p1+1)& (0+255),b
 30470  0049A0  0E00               	movlw	0
 30471  0049A2  6F63               	movwf	(memset@c+1)& (0+255),b
 30472  0049A4  0E00               	movlw	0
 30473  0049A6  6F62               	movwf	memset@c& (0+255),b
 30474  0049A8  0E01               	movlw	1
 30475  0049AA  6F65               	movwf	(memset@n+1)& (0+255),b
 30476  0049AC  0E0F               	movlw	15
 30477  0049AE  6F64               	movwf	memset@n& (0+255),b
 30478  0049B0  ECCB  F042         	call	_memset	;wreg free
 30479                           
 30480                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 30481  0049B4  0100               	movlb	0	; () banked
 30482  0049B6  9BD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),5,b
 30483  0049B8  9DD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),6,b
 30484  0049BA  9FD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),7,b
 30485                           
 30486                           ; BSR set to: 0
 30487                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 30488  0049BC  0EFC               	movlw	-4
 30489  0049BE  17D8               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 30490                           
 30491                           ; BSR set to: 0
 30492                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 30493  0049C0  95D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),2,b
 30494  0049C2  97D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),3,b
 30495  0049C4  99D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),4,b
 30496                           
 30497                           ; BSR set to: 0
 30498                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 30499  0049C6  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 30500  0049C8  0D01               	mullw	1
 30501  0049CA  0EE0               	movlw	low _macBuffer
 30502  0049CC  24F3               	addwf	prodl,w,c
 30503  0049CE  6ED9               	movwf	fsr2l,c
 30504  0049D0  0E04               	movlw	high _macBuffer
 30505  0049D2  20F4               	addwfc	prodh,w,c
 30506  0049D4  6EDA               	movwf	fsr2h,c
 30507  0049D6  C0D8  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 30508                           
 30509                           ; BSR set to: 0
 30510  0049DA  2BDA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 30511                           
 30512                           ; BSR set to: 0
 30513                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 30514  0049DC  0E00               	movlw	0
 30515  0049DE  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 30516  0049E0                     l16699:
 30517                           
 30518                           ; BSR set to: 0
 30519  0049E0  0E07               	movlw	7
 30520  0049E2  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 30521  0049E4  D001               	goto	l2037
 30522  0049E6  D022               	goto	u20200
 30523  0049E8                     l2037:
 30524                           
 30525                           ; BSR set to: 0
 30526                           ;lorawan.c: 1821: {
 30527                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 30528                           
 30529                           ; BSR set to: 0
 30530  0049E8  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 30531  0049EA  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 30532  0049EC  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 30533  0049EE  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 30534  0049F0  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 30535  0049F2  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 30536  0049F4  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 30537  0049F6  0E07               	movlw	7
 30538  0049F8  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 30539  0049FA  0E00               	movlw	0
 30540  0049FC  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 30541  0049FE  0E52               	movlw	low (_loRa+82)
 30542  004A00  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 30543  004A02  6ED9               	movwf	fsr2l,c
 30544  004A04  0E02               	movlw	high (_loRa+82)
 30545  004A06  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 30546  004A08  6EDA               	movwf	fsr2h,c
 30547  004A0A  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 30548  004A0C  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 30549  004A10  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 30550  004A12  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 30551  004A14  0E00               	movlw	0
 30552  004A16  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 30553  004A18  0EE0               	movlw	low _macBuffer
 30554  004A1A  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 30555  004A1C  6EE9               	movwf	fsr0l,c
 30556  004A1E  0E04               	movlw	high _macBuffer
 30557  004A20  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 30558  004A22  6EEA               	movwf	fsr0h,c
 30559  004A24  CFDF FFEF          	movff	indf2,indf0
 30560                           
 30561                           ; BSR set to: 0
 30562  004A28  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 30563  004A2A  D7DA               	goto	l16699
 30564  004A2C                     u20200:
 30565                           
 30566                           ; BSR set to: 0
 30567                           ;lorawan.c: 1823: }
 30568                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 30569                           
 30570                           ; BSR set to: 0
 30571  004A2C  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 30572  004A2E  0F08               	addlw	8
 30573  004A30  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 30574                           
 30575                           ; BSR set to: 0
 30576                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 30577  004A32  0E00               	movlw	0
 30578  004A34  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 30579  004A36                     l16713:
 30580                           
 30581                           ; BSR set to: 0
 30582  004A36  0E07               	movlw	7
 30583  004A38  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 30584  004A3A  D001               	goto	l2039
 30585  004A3C  D022               	goto	u20220
 30586  004A3E                     l2039:
 30587                           
 30588                           ; BSR set to: 0
 30589                           ;lorawan.c: 1828: {
 30590                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 30591                           
 30592                           ; BSR set to: 0
 30593  004A3E  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 30594  004A40  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 30595  004A42  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 30596  004A44  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 30597  004A46  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 30598  004A48  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 30599  004A4A  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 30600  004A4C  0E07               	movlw	7
 30601  004A4E  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 30602  004A50  0E00               	movlw	0
 30603  004A52  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 30604  004A54  0E5A               	movlw	low (_loRa+90)
 30605  004A56  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 30606  004A58  6ED9               	movwf	fsr2l,c
 30607  004A5A  0E02               	movlw	high (_loRa+90)
 30608  004A5C  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 30609  004A5E  6EDA               	movwf	fsr2h,c
 30610  004A60  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 30611  004A62  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 30612  004A66  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 30613  004A68  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 30614  004A6A  0E00               	movlw	0
 30615  004A6C  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 30616  004A6E  0EE0               	movlw	low _macBuffer
 30617  004A70  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 30618  004A72  6EE9               	movwf	fsr0l,c
 30619  004A74  0E04               	movlw	high _macBuffer
 30620  004A76  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 30621  004A78  6EEA               	movwf	fsr0h,c
 30622  004A7A  CFDF FFEF          	movff	indf2,indf0
 30623                           
 30624                           ; BSR set to: 0
 30625  004A7E  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 30626  004A80  D7DA               	goto	l16713
 30627  004A82                     u20220:
 30628                           
 30629                           ; BSR set to: 0
 30630                           ;lorawan.c: 1830: }
 30631                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 30632                           
 30633                           ; BSR set to: 0
 30634  004A82  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 30635  004A84  0F08               	addlw	8
 30636  004A86  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 30637                           
 30638                           ; BSR set to: 0
 30639                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 30640  004A88  0EFF               	movlw	255
 30641  004A8A  6FAE               	movwf	(Random@max+1)& (0+255),b
 30642  004A8C  69AD               	setf	Random@max& (0+255),b
 30643  004A8E  EC54  F044         	call	_Random	;wreg free
 30644  004A92  C0AD  F2D2         	movff	?_Random,_loRa+210
 30645  004A96  C0AE  F2D3         	movff	?_Random+1,_loRa+211
 30646                           
 30647                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 30648  004A9A  0100               	movlb	0	; () banked
 30649  004A9C  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 30650  004A9E  0D01               	mullw	1
 30651  004AA0  0EE0               	movlw	low _macBuffer
 30652  004AA2  24F3               	addwf	prodl,w,c
 30653  004AA4  6F60               	movwf	memcpy@d1& (0+255),b
 30654  004AA6  0E04               	movlw	high _macBuffer
 30655  004AA8  20F4               	addwfc	prodh,w,c
 30656  004AAA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 30657  004AAC  0ED2               	movlw	low (_loRa+210)
 30658  004AAE  6F62               	movwf	memcpy@s1& (0+255),b
 30659  004AB0  0E02               	movlw	high (_loRa+210)
 30660  004AB2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 30661  004AB4  0E00               	movlw	0
 30662  004AB6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 30663  004AB8  0E02               	movlw	2
 30664  004ABA  6F64               	movwf	memcpy@n& (0+255),b
 30665  004ABC  EC5C  F03D         	call	_memcpy	;wreg free
 30666                           
 30667                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 30668  004AC0  0100               	movlb	0	; () banked
 30669  004AC2  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 30670  004AC4  0F02               	addlw	2
 30671  004AC6  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 30672                           
 30673                           ; BSR set to: 0
 30674                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 30675  004AC8  0E42               	movlw	low (_loRa+66)
 30676  004ACA  6FC7               	movwf	ComputeMic@key& (0+255),b
 30677  004ACC  0E02               	movlw	high (_loRa+66)
 30678  004ACE  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
 30679  004AD0  0EE0               	movlw	low _macBuffer
 30680  004AD2  6FC9               	movwf	ComputeMic@buffer& (0+255),b
 30681  004AD4  0E04               	movlw	high _macBuffer
 30682  004AD6  6FCA               	movwf	(ComputeMic@buffer+1)& (0+255),b
 30683  004AD8  C0DA  F0CB         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 30684  004ADC  EC99  F03C         	call	_ComputeMic	;wreg free
 30685  004AE0  C0C7  F0D4         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 30686  004AE4  C0C8  F0D5         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 30687  004AE8  C0C9  F0D6         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 30688  004AEC  C0CA  F0D7         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 30689                           
 30690                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 30691  004AF0  0100               	movlb	0	; () banked
 30692  004AF2  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 30693  004AF4  0D01               	mullw	1
 30694  004AF6  0EE0               	movlw	low _macBuffer
 30695  004AF8  24F3               	addwf	prodl,w,c
 30696  004AFA  6F60               	movwf	memcpy@d1& (0+255),b
 30697  004AFC  0E04               	movlw	high _macBuffer
 30698  004AFE  20F4               	addwfc	prodh,w,c
 30699  004B00  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 30700  004B02  0ED4               	movlw	low PrepareJoinRequestFrame@mic
 30701  004B04  6F62               	movwf	memcpy@s1& (0+255),b
 30702  004B06  0E00               	movlw	high PrepareJoinRequestFrame@mic
 30703  004B08  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 30704  004B0A  0E00               	movlw	0
 30705  004B0C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 30706  004B0E  0E04               	movlw	4
 30707  004B10  6F64               	movwf	memcpy@n& (0+255),b
 30708  004B12  EC5C  F03D         	call	_memcpy	;wreg free
 30709                           
 30710                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 30711  004B16  0100               	movlb	0	; () banked
 30712  004B18  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 30713  004B1A  0F04               	addlw	4
 30714  004B1C  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 30715                           
 30716                           ; BSR set to: 0
 30717                           ;lorawan.c: 1842: return bufferIndex;
 30718  004B1E  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 30719  004B20  0012               	return	
 30720  004B22                     __end_of_PrepareJoinRequestFrame:
 30721                           	opt stack 0
 30722                           tosu	equ	0xFFF
 30723                           tosh	equ	0xFFE
 30724                           tosl	equ	0xFFD
 30725                           pclath	equ	0xFFA
 30726                           tblptru	equ	0xFF8
 30727                           tblptrh	equ	0xFF7
 30728                           tblptrl	equ	0xFF6
 30729                           tablat	equ	0xFF5
 30730                           prodh	equ	0xFF4
 30731                           prodl	equ	0xFF3
 30732                           intcon	equ	0xFF2
 30733                           intcon2	equ	0xFF1
 30734                           intcon3	equ	0xFF0
 30735                           indf0	equ	0xFEF
 30736                           postinc0	equ	0xFEE
 30737                           fsr0h	equ	0xFEA
 30738                           fsr0l	equ	0xFE9
 30739                           wreg	equ	0xFE8
 30740                           postinc1	equ	0xFE6
 30741                           postdec1	equ	0xFE5
 30742                           plusw1	equ	0xFE3
 30743                           fsr1h	equ	0xFE2
 30744                           fsr1l	equ	0xFE1
 30745                           indf2	equ	0xFDF
 30746                           postinc2	equ	0xFDE
 30747                           postdec2	equ	0xFDD
 30748                           plusw2	equ	0xFDB
 30749                           fsr2h	equ	0xFDA
 30750                           fsr2l	equ	0xFD9
 30751                           status	equ	0xFD8
 30752                           
 30753 ;; *************** function _Random *****************
 30754 ;; Defined at:
 30755 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 30756 ;; Parameters:    Size  Location     Type
 30757 ;;  max             2   77[BANK0 ] unsigned int 
 30758 ;; Auto vars:     Size  Location     Type
 30759 ;;		None
 30760 ;; Return value:  Size  Location     Type
 30761 ;;                  2   77[BANK0 ] unsigned int 
 30762 ;; Registers used:
 30763 ;;		wreg, status,2, status,0, cstack
 30764 ;; Tracked objects:
 30765 ;;		On entry : 0/0
 30766 ;;		On exit  : 0/0
 30767 ;;		Unchanged: 0/0
 30768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30769 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30772 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30773 ;;Total ram usage:        2 bytes
 30774 ;; Hardware stack levels used:    1
 30775 ;; Hardware stack levels required when called:    9
 30776 ;; This function calls:
 30777 ;;		___lwmod
 30778 ;;		_rand
 30779 ;; This function is called by:
 30780 ;;		_SearchAvailableChannel
 30781 ;;		_PrepareJoinRequestFrame
 30782 ;; This function uses a non-reentrant model
 30783 ;;
 30784                           
 30785                           	psect	text148
 30786  0088A8                     __ptext148:
 30787                           	opt stack 0
 30788  0088A8                     _Random:
 30789                           	opt stack 18
 30790                           
 30791                           ;lorawan.c: 1118: return (rand () % max);
 30792                           
 30793                           ; BSR set to: 0
 30794                           ;incstack = 0
 30795  0088A8  ECEA  F03D         	call	_rand	;wreg free
 30796  0088AC  C0A6  F0A8         	movff	?_rand,___lwmod@dividend
 30797  0088B0  C0A7  F0A9         	movff	?_rand+1,___lwmod@dividend+1
 30798  0088B4  C0AD  F0AA         	movff	Random@max,___lwmod@divisor
 30799  0088B8  C0AE  F0AB         	movff	Random@max+1,___lwmod@divisor+1
 30800  0088BC  ECDF  F040         	call	___lwmod	;wreg free
 30801  0088C0  C0A8  F0AD         	movff	?___lwmod,?_Random
 30802  0088C4  C0A9  F0AE         	movff	?___lwmod+1,?_Random+1
 30803  0088C8  0012               	return	
 30804  0088CA                     __end_of_Random:
 30805                           	opt stack 0
 30806                           tosu	equ	0xFFF
 30807                           tosh	equ	0xFFE
 30808                           tosl	equ	0xFFD
 30809                           pclath	equ	0xFFA
 30810                           tblptru	equ	0xFF8
 30811                           tblptrh	equ	0xFF7
 30812                           tblptrl	equ	0xFF6
 30813                           tablat	equ	0xFF5
 30814                           prodh	equ	0xFF4
 30815                           prodl	equ	0xFF3
 30816                           intcon	equ	0xFF2
 30817                           intcon2	equ	0xFF1
 30818                           intcon3	equ	0xFF0
 30819                           indf0	equ	0xFEF
 30820                           postinc0	equ	0xFEE
 30821                           fsr0h	equ	0xFEA
 30822                           fsr0l	equ	0xFE9
 30823                           wreg	equ	0xFE8
 30824                           postinc1	equ	0xFE6
 30825                           postdec1	equ	0xFE5
 30826                           plusw1	equ	0xFE3
 30827                           fsr1h	equ	0xFE2
 30828                           fsr1l	equ	0xFE1
 30829                           indf2	equ	0xFDF
 30830                           postinc2	equ	0xFDE
 30831                           postdec2	equ	0xFDD
 30832                           plusw2	equ	0xFDB
 30833                           fsr2h	equ	0xFDA
 30834                           fsr2l	equ	0xFD9
 30835                           status	equ	0xFD8
 30836                           
 30837 ;; *************** function _rand *****************
 30838 ;; Defined at:
 30839 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 30840 ;; Parameters:    Size  Location     Type
 30841 ;;		None
 30842 ;; Auto vars:     Size  Location     Type
 30843 ;;		None
 30844 ;; Return value:  Size  Location     Type
 30845 ;;                  2   70[BANK0 ] int 
 30846 ;; Registers used:
 30847 ;;		wreg, status,2, status,0, cstack
 30848 ;; Tracked objects:
 30849 ;;		On entry : 0/0
 30850 ;;		On exit  : 0/0
 30851 ;;		Unchanged: 0/0
 30852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30853 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30856 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30857 ;;Total ram usage:        2 bytes
 30858 ;; Hardware stack levels used:    1
 30859 ;; Hardware stack levels required when called:    8
 30860 ;; This function calls:
 30861 ;;		___lmul
 30862 ;; This function is called by:
 30863 ;;		_Random
 30864 ;; This function uses a non-reentrant model
 30865 ;;
 30866                           
 30867                           	psect	text149
 30868  007BD4                     __ptext149:
 30869                           	opt stack 0
 30870  007BD4                     _rand:
 30871                           	opt stack 18
 30872                           
 30873                           ;incstack = 0
 30874  007BD4  C1E3  F09A         	movff	_randx,___lmul@multiplier
 30875  007BD8  C1E4  F09B         	movff	_randx+1,___lmul@multiplier+1
 30876  007BDC  C1E5  F09C         	movff	_randx+2,___lmul@multiplier+2
 30877  007BE0  C1E6  F09D         	movff	_randx+3,___lmul@multiplier+3
 30878  007BE4  0E6D               	movlw	109
 30879  007BE6  0100               	movlb	0	; () banked
 30880  007BE8  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 30881  007BEA  0E4E               	movlw	78
 30882  007BEC  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30883  007BEE  0EC6               	movlw	198
 30884  007BF0  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30885  007BF2  0E41               	movlw	65
 30886  007BF4  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30887  007BF6  EC72  F03E         	call	___lmul	;wreg free
 30888  007BFA  C09A  F1E3         	movff	?___lmul,_randx
 30889  007BFE  C09B  F1E4         	movff	?___lmul+1,_randx+1
 30890  007C02  C09C  F1E5         	movff	?___lmul+2,_randx+2
 30891  007C06  C09D  F1E6         	movff	?___lmul+3,_randx+3
 30892  007C0A  0E39               	movlw	57
 30893  007C0C  0101               	movlb	1	; () banked
 30894  007C0E  27E3               	addwf	_randx& (0+255),f,b
 30895  007C10  0E30               	movlw	48
 30896  007C12  23E4               	addwfc	(_randx+1)& (0+255),f,b
 30897  007C14  0E00               	movlw	0
 30898  007C16  23E5               	addwfc	(_randx+2)& (0+255),f,b
 30899  007C18  0E00               	movlw	0
 30900  007C1A  23E6               	addwfc	(_randx+3)& (0+255),f,b
 30901                           
 30902                           ; BSR set to: 1
 30903  007C1C  0EFF               	movlw	255
 30904  007C1E  15E5               	andwf	(_randx+2)& (0+255),w,b
 30905  007C20  0100               	movlb	0	; () banked
 30906  007C22  6FA6               	movwf	?_rand& (0+255),b
 30907  007C24  0E7F               	movlw	127
 30908  007C26  0101               	movlb	1	; () banked
 30909  007C28  15E6               	andwf	(_randx+3)& (0+255),w,b
 30910  007C2A  0100               	movlb	0	; () banked
 30911  007C2C  6FA7               	movwf	(?_rand+1)& (0+255),b
 30912  007C2E  0012               	return	
 30913  007C30                     __end_of_rand:
 30914                           	opt stack 0
 30915                           tosu	equ	0xFFF
 30916                           tosh	equ	0xFFE
 30917                           tosl	equ	0xFFD
 30918                           pclath	equ	0xFFA
 30919                           tblptru	equ	0xFF8
 30920                           tblptrh	equ	0xFF7
 30921                           tblptrl	equ	0xFF6
 30922                           tablat	equ	0xFF5
 30923                           prodh	equ	0xFF4
 30924                           prodl	equ	0xFF3
 30925                           intcon	equ	0xFF2
 30926                           intcon2	equ	0xFF1
 30927                           intcon3	equ	0xFF0
 30928                           indf0	equ	0xFEF
 30929                           postinc0	equ	0xFEE
 30930                           fsr0h	equ	0xFEA
 30931                           fsr0l	equ	0xFE9
 30932                           wreg	equ	0xFE8
 30933                           postinc1	equ	0xFE6
 30934                           postdec1	equ	0xFE5
 30935                           plusw1	equ	0xFE3
 30936                           fsr1h	equ	0xFE2
 30937                           fsr1l	equ	0xFE1
 30938                           indf2	equ	0xFDF
 30939                           postinc2	equ	0xFDE
 30940                           postdec2	equ	0xFDD
 30941                           plusw2	equ	0xFDB
 30942                           fsr2h	equ	0xFDA
 30943                           fsr2l	equ	0xFD9
 30944                           status	equ	0xFD8
 30945                           
 30946 ;; *************** function ___lwmod *****************
 30947 ;; Defined at:
 30948 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 30949 ;; Parameters:    Size  Location     Type
 30950 ;;  dividend        2   72[BANK0 ] unsigned int 
 30951 ;;  divisor         2   74[BANK0 ] unsigned int 
 30952 ;; Auto vars:     Size  Location     Type
 30953 ;;  counter         1   76[BANK0 ] unsigned char 
 30954 ;; Return value:  Size  Location     Type
 30955 ;;                  2   72[BANK0 ] unsigned int 
 30956 ;; Registers used:
 30957 ;;		wreg, status,2, status,0
 30958 ;; Tracked objects:
 30959 ;;		On entry : 0/0
 30960 ;;		On exit  : 0/0
 30961 ;;		Unchanged: 0/0
 30962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30963 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30966 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30967 ;;Total ram usage:        5 bytes
 30968 ;; Hardware stack levels used:    1
 30969 ;; Hardware stack levels required when called:    7
 30970 ;; This function calls:
 30971 ;;		Nothing
 30972 ;; This function is called by:
 30973 ;;		_Random
 30974 ;; This function uses a non-reentrant model
 30975 ;;
 30976                           
 30977                           	psect	text150
 30978  0081BE                     __ptext150:
 30979                           	opt stack 0
 30980  0081BE                     ___lwmod:
 30981                           	opt stack 19
 30982                           
 30983                           ; BSR set to: 0
 30984                           ;incstack = 0
 30985  0081BE  0100               	movlb	0	; () banked
 30986  0081C0  51AA               	movf	___lwmod@divisor& (0+255),w,b
 30987  0081C2  11AB               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 30988  0081C4  B4D8               	btfsc	status,2,c
 30989  0081C6  D018               	goto	l3144
 30990                           
 30991                           ; BSR set to: 0
 30992  0081C8  0E01               	movlw	1
 30993  0081CA  6FAC               	movwf	___lwmod@counter& (0+255),b
 30994  0081CC  D004               	goto	l3139
 30995  0081CE                     
 30996                           ; BSR set to: 0
 30997                           
 30998                           ; BSR set to: 0
 30999  0081CE  90D8               	bcf	status,0,c
 31000  0081D0  37AA               	rlcf	___lwmod@divisor& (0+255),f,b
 31001  0081D2  37AB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 31002  0081D4  2BAC               	incf	___lwmod@counter& (0+255),f,b
 31003  0081D6                     l3139:
 31004                           
 31005                           ; BSR set to: 0
 31006                           
 31007                           ; BSR set to: 0
 31008  0081D6  AFAB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 31009  0081D8  D7FA               	goto	l3140
 31010  0081DA                     u15080:
 31011                           
 31012                           ; BSR set to: 0
 31013                           
 31014                           ; BSR set to: 0
 31015                           
 31016                           ; BSR set to: 0
 31017  0081DA  51AA               	movf	___lwmod@divisor& (0+255),w,b
 31018  0081DC  5DA8               	subwf	___lwmod@dividend& (0+255),w,b
 31019  0081DE  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 31020  0081E0  59A9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 31021  0081E2  A0D8               	btfss	status,0,c
 31022  0081E4  D004               	goto	l3143
 31023                           
 31024                           ; BSR set to: 0
 31025  0081E6  51AA               	movf	___lwmod@divisor& (0+255),w,b
 31026  0081E8  5FA8               	subwf	___lwmod@dividend& (0+255),f,b
 31027  0081EA  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 31028  0081EC  5BA9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 31029  0081EE                     l3143:
 31030                           
 31031                           ; BSR set to: 0
 31032                           
 31033                           ; BSR set to: 0
 31034  0081EE  90D8               	bcf	status,0,c
 31035  0081F0  33AB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 31036  0081F2  33AA               	rrcf	___lwmod@divisor& (0+255),f,b
 31037                           
 31038                           ; BSR set to: 0
 31039  0081F4  2FAC               	decfsz	___lwmod@counter& (0+255),f,b
 31040  0081F6  D7F1               	goto	u15080
 31041  0081F8                     l3144:
 31042                           
 31043                           ; BSR set to: 0
 31044                           
 31045                           ; BSR set to: 0
 31046  0081F8  C0A8  F0A8         	movff	___lwmod@dividend,?___lwmod
 31047  0081FC  C0A9  F0A9         	movff	___lwmod@dividend+1,?___lwmod+1
 31048                           
 31049                           ; BSR set to: 0
 31050  008200  0012               	return		;funcret
 31051  008202                     __end_of___lwmod:
 31052                           	opt stack 0
 31053                           tosu	equ	0xFFF
 31054                           tosh	equ	0xFFE
 31055                           tosl	equ	0xFFD
 31056                           pclath	equ	0xFFA
 31057                           tblptru	equ	0xFF8
 31058                           tblptrh	equ	0xFF7
 31059                           tblptrl	equ	0xFF6
 31060                           tablat	equ	0xFF5
 31061                           prodh	equ	0xFF4
 31062                           prodl	equ	0xFF3
 31063                           intcon	equ	0xFF2
 31064                           intcon2	equ	0xFF1
 31065                           intcon3	equ	0xFF0
 31066                           indf0	equ	0xFEF
 31067                           postinc0	equ	0xFEE
 31068                           fsr0h	equ	0xFEA
 31069                           fsr0l	equ	0xFE9
 31070                           wreg	equ	0xFE8
 31071                           postinc1	equ	0xFE6
 31072                           postdec1	equ	0xFE5
 31073                           plusw1	equ	0xFE3
 31074                           fsr1h	equ	0xFE2
 31075                           fsr1l	equ	0xFE1
 31076                           indf2	equ	0xFDF
 31077                           postinc2	equ	0xFDE
 31078                           postdec2	equ	0xFDD
 31079                           plusw2	equ	0xFDB
 31080                           fsr2h	equ	0xFDA
 31081                           fsr2l	equ	0xFD9
 31082                           status	equ	0xFD8
 31083                           
 31084 ;; *************** function _ComputeMic *****************
 31085 ;; Defined at:
 31086 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31087 ;; Parameters:    Size  Location     Type
 31088 ;;  key             2  103[BANK0 ] PTR unsigned char 
 31089 ;;		 -> loRa.activationParameters(105), loRa(245), 
 31090 ;;  buffer          2  105[BANK0 ] PTR unsigned char 
 31091 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 31092 ;;  bufferLength    1  107[BANK0 ] unsigned char 
 31093 ;; Auto vars:     Size  Location     Type
 31094 ;;  mic             4  108[BANK0 ] unsigned long 
 31095 ;; Return value:  Size  Location     Type
 31096 ;;                  4  103[BANK0 ] unsigned long 
 31097 ;; Registers used:
 31098 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31099 ;; Tracked objects:
 31100 ;;		On entry : 0/0
 31101 ;;		On exit  : 0/0
 31102 ;;		Unchanged: 0/0
 31103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31104 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31105 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31107 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31108 ;;Total ram usage:        9 bytes
 31109 ;; Hardware stack levels used:    1
 31110 ;; Hardware stack levels required when called:   12
 31111 ;; This function calls:
 31112 ;;		_AESCmac
 31113 ;;		_memcpy
 31114 ;; This function is called by:
 31115 ;;		_LORAWAN_RxDone
 31116 ;;		_PrepareJoinRequestFrame
 31117 ;; This function uses a non-reentrant model
 31118 ;;
 31119                           
 31120                           	psect	text151
 31121  007932                     __ptext151:
 31122                           	opt stack 0
 31123  007932                     _ComputeMic:
 31124                           	opt stack 14
 31125                           
 31126                           ;lorawan.c: 2196: uint32_t mic = 0;
 31127                           
 31128                           ; BSR set to: 0
 31129                           ;incstack = 0
 31130  007932  0E00               	movlw	0
 31131  007934  0100               	movlb	0	; () banked
 31132  007936  6FCC               	movwf	ComputeMic@mic& (0+255),b
 31133  007938  0E00               	movlw	0
 31134  00793A  6FCD               	movwf	(ComputeMic@mic+1)& (0+255),b
 31135  00793C  0E00               	movlw	0
 31136  00793E  6FCE               	movwf	(ComputeMic@mic+2)& (0+255),b
 31137  007940  0E00               	movlw	0
 31138  007942  6FCF               	movwf	(ComputeMic@mic+3)& (0+255),b
 31139                           
 31140                           ; BSR set to: 0
 31141                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 31142  007944  C0C7  F0B9         	movff	ComputeMic@key,AESCmac@key
 31143  007948  C0C8  F0BA         	movff	ComputeMic@key+1,AESCmac@key+1
 31144  00794C  0E5A               	movlw	low _aesBuffer
 31145  00794E  6FBB               	movwf	AESCmac@output& (0+255),b
 31146  007950  0E01               	movlw	high _aesBuffer
 31147  007952  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 31148  007954  C0C9  F0BD         	movff	ComputeMic@buffer,AESCmac@input
 31149  007958  C0CA  F0BE         	movff	ComputeMic@buffer+1,AESCmac@input+1
 31150  00795C  C0CB  F0BF         	movff	ComputeMic@bufferLength,AESCmac@size
 31151  007960  ECF8  F010         	call	_AESCmac	;wreg free
 31152                           
 31153                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 31154  007964  0ECC               	movlw	low ComputeMic@mic
 31155  007966  0100               	movlb	0	; () banked
 31156  007968  6F60               	movwf	memcpy@d1& (0+255),b
 31157  00796A  0E00               	movlw	high ComputeMic@mic
 31158  00796C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 31159  00796E  0E5A               	movlw	low _aesBuffer
 31160  007970  6F62               	movwf	memcpy@s1& (0+255),b
 31161  007972  0E01               	movlw	high _aesBuffer
 31162  007974  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 31163  007976  0E00               	movlw	0
 31164  007978  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31165  00797A  0E04               	movlw	4
 31166  00797C  6F64               	movwf	memcpy@n& (0+255),b
 31167  00797E  EC5C  F03D         	call	_memcpy	;wreg free
 31168                           
 31169                           ;lorawan.c: 2202: return mic;
 31170  007982  C0CC  F0C7         	movff	ComputeMic@mic,?_ComputeMic
 31171  007986  C0CD  F0C8         	movff	ComputeMic@mic+1,?_ComputeMic+1
 31172  00798A  C0CE  F0C9         	movff	ComputeMic@mic+2,?_ComputeMic+2
 31173  00798E  C0CF  F0CA         	movff	ComputeMic@mic+3,?_ComputeMic+3
 31174  007992  0012               	return	
 31175  007994                     __end_of_ComputeMic:
 31176                           	opt stack 0
 31177                           tosu	equ	0xFFF
 31178                           tosh	equ	0xFFE
 31179                           tosl	equ	0xFFD
 31180                           pclath	equ	0xFFA
 31181                           tblptru	equ	0xFF8
 31182                           tblptrh	equ	0xFF7
 31183                           tblptrl	equ	0xFF6
 31184                           tablat	equ	0xFF5
 31185                           prodh	equ	0xFF4
 31186                           prodl	equ	0xFF3
 31187                           intcon	equ	0xFF2
 31188                           intcon2	equ	0xFF1
 31189                           intcon3	equ	0xFF0
 31190                           indf0	equ	0xFEF
 31191                           postinc0	equ	0xFEE
 31192                           fsr0h	equ	0xFEA
 31193                           fsr0l	equ	0xFE9
 31194                           wreg	equ	0xFE8
 31195                           postinc1	equ	0xFE6
 31196                           postdec1	equ	0xFE5
 31197                           plusw1	equ	0xFE3
 31198                           fsr1h	equ	0xFE2
 31199                           fsr1l	equ	0xFE1
 31200                           indf2	equ	0xFDF
 31201                           postinc2	equ	0xFDE
 31202                           postdec2	equ	0xFDD
 31203                           plusw2	equ	0xFDB
 31204                           fsr2h	equ	0xFDA
 31205                           fsr2l	equ	0xFD9
 31206                           status	equ	0xFD8
 31207                           
 31208 ;; *************** function _AESCmac *****************
 31209 ;; Defined at:
 31210 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 31211 ;; Parameters:    Size  Location     Type
 31212 ;;  key             2   89[BANK0 ] PTR unsigned char 
 31213 ;;		 -> loRa.activationParameters(105), loRa(245), 
 31214 ;;  output          2   91[BANK0 ] PTR unsigned char 
 31215 ;;		 -> aesBuffer(16), 
 31216 ;;  input           2   93[BANK0 ] PTR unsigned char 
 31217 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 31218 ;;  size            1   95[BANK0 ] unsigned char 
 31219 ;; Auto vars:     Size  Location     Type
 31220 ;;  x              16   80[BANK1 ] unsigned char [16]
 31221 ;;  y              16   64[BANK1 ] unsigned char [16]
 31222 ;;  padded         16   48[BANK1 ] unsigned char [16]
 31223 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 31224 ;;  k1             16   16[BANK1 ] unsigned char [16]
 31225 ;;  k2             16    0[BANK1 ] unsigned char [16]
 31226 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 31227 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 31228 ;;  i               1  101[BANK1 ] unsigned char 
 31229 ;;  j               1  100[BANK1 ] unsigned char 
 31230 ;;  n               1   99[BANK1 ] unsigned char 
 31231 ;;  flag            1   98[BANK1 ] unsigned char 
 31232 ;; Return value:  Size  Location     Type
 31233 ;;                  1    wreg      void 
 31234 ;; Registers used:
 31235 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31236 ;; Tracked objects:
 31237 ;;		On entry : 0/0
 31238 ;;		On exit  : 0/0
 31239 ;;		Unchanged: 0/0
 31240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31241 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31242 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31243 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31244 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31245 ;;Total ram usage:      116 bytes
 31246 ;; Hardware stack levels used:    1
 31247 ;; Hardware stack levels required when called:   11
 31248 ;; This function calls:
 31249 ;;		_AESEncodeLoRa
 31250 ;;		_GenerateSubkey
 31251 ;;		_memcpy
 31252 ;;		_memset
 31253 ;; This function is called by:
 31254 ;;		_LORAWAN_RxDone
 31255 ;;		_AssemblePacket
 31256 ;;		_ComputeMic
 31257 ;; This function uses a non-reentrant model
 31258 ;;
 31259                           
 31260                           	psect	text152
 31261  0021F0                     __ptext152:
 31262                           	opt stack 0
 31263  0021F0                     _AESCmac:
 31264                           	opt stack 17
 31265                           
 31266                           ;lorawan_aes_cmac.c: 43: uint8_t n = 0, i = 0, j =0;
 31267                           
 31268                           ;incstack = 0
 31269  0021F0  0E00               	movlw	0
 31270  0021F2  0101               	movlb	1	; () banked
 31271  0021F4  6FCD               	movwf	AESCmac@n& (0+255),b
 31272  0021F6  0E00               	movlw	0
 31273  0021F8  6FCF               	movwf	AESCmac@i& (0+255),b
 31274  0021FA  0E00               	movlw	0
 31275  0021FC  6FCE               	movwf	AESCmac@j& (0+255),b
 31276                           
 31277                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 31278  0021FE  0E00               	movlw	0
 31279  002200  6FCC               	movwf	AESCmac@flag& (0+255),b
 31280                           
 31281                           ; BSR set to: 1
 31282                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 31283                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 31284                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 31285  002202  0E00               	movlw	0
 31286  002204  6FCA               	movwf	AESCmac@ptr& (0+255),b
 31287  002206  0E00               	movlw	0
 31288  002208  6FCB               	movwf	(AESCmac@ptr+1)& (0+255),b
 31289                           
 31290                           ; BSR set to: 1
 31291                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 31292  00220A  C0B9  F091         	movff	AESCmac@key,GenerateSubkey@key
 31293  00220E  C0BA  F092         	movff	AESCmac@key+1,GenerateSubkey@key+1
 31294  002212  0E7A               	movlw	low AESCmac@k1
 31295  002214  0100               	movlb	0	; () banked
 31296  002216  6F93               	movwf	GenerateSubkey@k1& (0+255),b
 31297  002218  0E01               	movlw	high AESCmac@k1
 31298  00221A  6F94               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 31299  00221C  0E6A               	movlw	low AESCmac@k2
 31300  00221E  6F95               	movwf	GenerateSubkey@k2& (0+255),b
 31301  002220  0E01               	movlw	high AESCmac@k2
 31302  002222  6F96               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 31303  002224  EC79  F02A         	call	_GenerateSubkey	;wreg free
 31304                           
 31305                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 31306  002228  0100               	movlb	0	; () banked
 31307  00222A  51BF               	movf	AESCmac@size& (0+255),w,b
 31308  00222C  6FC0               	movwf	??_AESCmac& (0+255),b
 31309  00222E  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 31310  002230  0E0F               	movlw	15
 31311  002232  27C0               	addwf	??_AESCmac& (0+255),f,b
 31312  002234  0E00               	movlw	0
 31313  002236  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
 31314  002238  0E04               	movlw	4
 31315  00223A  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 31316  00223C                     u15605:
 31317  00223C  35C1               	rlcf	(??_AESCmac+1)& (0+255),w,b
 31318  00223E  33C1               	rrcf	(??_AESCmac+1)& (0+255),f,b
 31319  002240  33C0               	rrcf	??_AESCmac& (0+255),f,b
 31320  002242  2FC2               	decfsz	(??_AESCmac+2)& (0+255),f,b
 31321  002244  D7FB               	goto	u15605
 31322  002246  51C0               	movf	??_AESCmac& (0+255),w,b
 31323  002248  0101               	movlb	1	; () banked
 31324  00224A  6FCD               	movwf	AESCmac@n& (0+255),b
 31325                           
 31326                           ; BSR set to: 1
 31327                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 31328  00224C  51CD               	movf	AESCmac@n& (0+255),w,b
 31329  00224E  A4D8               	btfss	status,2,c
 31330  002250  D004               	goto	l41
 31331                           
 31332                           ; BSR set to: 1
 31333                           ;lorawan_aes_cmac.c: 53: {
 31334                           ;lorawan_aes_cmac.c: 54: n = 1;
 31335  002252  0E01               	movlw	1
 31336  002254  6FCD               	movwf	AESCmac@n& (0+255),b
 31337                           
 31338                           ;lorawan_aes_cmac.c: 55: flag = 0;
 31339  002256  0E00               	movlw	0
 31340  002258  D00B               	goto	L23
 31341  00225A                     l41:
 31342                           
 31343                           ; BSR set to: 1
 31344                           ;lorawan_aes_cmac.c: 57: else
 31345                           ;lorawan_aes_cmac.c: 58: {
 31346                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 31347                           
 31348                           ; BSR set to: 1
 31349  00225A  C0BF  F0C0         	movff	AESCmac@size,??_AESCmac
 31350  00225E  0E0F               	movlw	15
 31351  002260  0100               	movlb	0	; () banked
 31352  002262  17C0               	andwf	??_AESCmac& (0+255),f,b
 31353  002264  A4D8               	btfss	status,2,c
 31354  002266  D002               	goto	u15620
 31355  002268  0E01               	movlw	1
 31356  00226A  D001               	goto	u15630
 31357  00226C                     u15620:
 31358  00226C  0E00               	movlw	0
 31359  00226E                     u15630:
 31360  00226E  0101               	movlb	1	; () banked
 31361  002270                     L23:
 31362  002270  6FCC               	movwf	AESCmac@flag& (0+255),b
 31363                           
 31364                           ; BSR set to: 1
 31365                           ;lorawan_aes_cmac.c: 60: }
 31366                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 31367  002272  05CC               	decf	AESCmac@flag& (0+255),w,b
 31368  002274  A4D8               	btfss	status,2,c
 31369  002276  D048               	goto	l43
 31370                           
 31371                           ; BSR set to: 1
 31372                           ;lorawan_aes_cmac.c: 63: {
 31373                           ;lorawan_aes_cmac.c: 64: j = 0;
 31374  002278  0E00               	movlw	0
 31375  00227A  6FCE               	movwf	AESCmac@j& (0+255),b
 31376                           
 31377                           ; BSR set to: 1
 31378                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 31379  00227C  39CD               	swapf	AESCmac@n& (0+255),w,b
 31380  00227E  0BF0               	andlw	240
 31381  002280  0FF0               	addlw	240
 31382  002282  6FCF               	movwf	AESCmac@i& (0+255),b
 31383  002284  D024               	goto	l44
 31384  002286                     
 31385                           ;lorawan_aes_cmac.c: 66: {
 31386                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 31387                           
 31388                           ; BSR set to: 1
 31389  002286  0101               	movlb	1	; () banked
 31390  002288  51CE               	movf	AESCmac@j& (0+255),w,b
 31391  00228A  0D01               	mullw	1
 31392  00228C  0E8A               	movlw	low AESCmac@mLast
 31393  00228E  24F3               	addwf	prodl,w,c
 31394  002290  6ED9               	movwf	fsr2l,c
 31395  002292  0E01               	movlw	high AESCmac@mLast
 31396  002294  20F4               	addwfc	prodh,w,c
 31397  002296  6EDA               	movwf	fsr2h,c
 31398  002298  51CE               	movf	AESCmac@j& (0+255),w,b
 31399  00229A  0D01               	mullw	1
 31400  00229C  0E7A               	movlw	low AESCmac@k1
 31401  00229E  24F3               	addwf	prodl,w,c
 31402  0022A0  6EE9               	movwf	fsr0l,c
 31403  0022A2  0E01               	movlw	high AESCmac@k1
 31404  0022A4  20F4               	addwfc	prodh,w,c
 31405  0022A6  6EEA               	movwf	fsr0h,c
 31406  0022A8  50EF               	movf	indf0,w,c
 31407  0022AA  0100               	movlb	0	; () banked
 31408  0022AC  6FC0               	movwf	??_AESCmac& (0+255),b
 31409  0022AE  0101               	movlb	1	; () banked
 31410  0022B0  51CF               	movf	AESCmac@i& (0+255),w,b
 31411  0022B2  0D01               	mullw	1
 31412  0022B4  50F3               	movf	prodl,w,c
 31413  0022B6  0100               	movlb	0	; () banked
 31414  0022B8  25BD               	addwf	AESCmac@input& (0+255),w,b
 31415  0022BA  6EE9               	movwf	fsr0l,c
 31416  0022BC  50F4               	movf	prodh,w,c
 31417  0022BE  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 31418  0022C0  6EEA               	movwf	fsr0h,c
 31419  0022C2  50EF               	movf	indf0,w,c
 31420  0022C4  19C0               	xorwf	??_AESCmac& (0+255),w,b
 31421  0022C6  6EDF               	movwf	indf2,c
 31422                           
 31423                           ; BSR set to: 0
 31424                           ;lorawan_aes_cmac.c: 68: j++;
 31425  0022C8  0101               	movlb	1	; () banked
 31426  0022CA  2BCE               	incf	AESCmac@j& (0+255),f,b
 31427                           
 31428                           ; BSR set to: 1
 31429  0022CC  2BCF               	incf	AESCmac@i& (0+255),f,b
 31430  0022CE                     l44:
 31431                           
 31432                           ; BSR set to: 1
 31433                           
 31434                           ; BSR set to: 1
 31435  0022CE  51CD               	movf	AESCmac@n& (0+255),w,b
 31436  0022D0  0100               	movlb	0	; () banked
 31437  0022D2  6FC0               	movwf	??_AESCmac& (0+255),b
 31438  0022D4  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 31439  0022D6  3BC0               	swapf	??_AESCmac& (0+255),f,b
 31440  0022D8  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
 31441  0022DA  0EF0               	movlw	240
 31442  0022DC  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
 31443  0022DE  51C0               	movf	??_AESCmac& (0+255),w,b
 31444  0022E0  0B0F               	andlw	15
 31445  0022E2  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
 31446  0022E4  0EF0               	movlw	240
 31447  0022E6  17C0               	andwf	??_AESCmac& (0+255),f,b
 31448  0022E8  0101               	movlb	1	; () banked
 31449  0022EA  51CF               	movf	AESCmac@i& (0+255),w,b
 31450  0022EC  0100               	movlb	0	; () banked
 31451  0022EE  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 31452  0022F0  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 31453  0022F2  51C0               	movf	??_AESCmac& (0+255),w,b
 31454  0022F4  5DC2               	subwf	(??_AESCmac+2)& (0+255),w,b
 31455  0022F6  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 31456  0022F8  0A80               	xorlw	128
 31457  0022FA  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
 31458  0022FC  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 31459  0022FE  0A80               	xorlw	128
 31460  002300  59C4               	subwfb	(??_AESCmac+4)& (0+255),w,b
 31461  002302  B0D8               	btfsc	status,0,c
 31462  002304  D07F               	goto	u15710
 31463  002306  D7BF               	goto	l45
 31464  002308                     l43:
 31465                           
 31466                           ;lorawan_aes_cmac.c: 71: else
 31467                           ;lorawan_aes_cmac.c: 72: {
 31468                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 31469                           
 31470                           ; BSR set to: 0
 31471  002308  0100               	movlb	0	; () banked
 31472  00230A  51BF               	movf	AESCmac@size& (0+255),w,b
 31473  00230C  0B0F               	andlw	15
 31474  00230E  6FC0               	movwf	??_AESCmac& (0+255),b
 31475  002310  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 31476  002312  1FC0               	comf	??_AESCmac& (0+255),f,b
 31477  002314  1FC1               	comf	(??_AESCmac+1)& (0+255),f,b
 31478  002316  4BC0               	infsnz	??_AESCmac& (0+255),f,b
 31479  002318  2BC1               	incf	(??_AESCmac+1)& (0+255),f,b
 31480  00231A  51BF               	movf	AESCmac@size& (0+255),w,b
 31481  00231C  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 31482  00231E  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 31483  002320  51C0               	movf	??_AESCmac& (0+255),w,b
 31484  002322  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
 31485  002324  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 31486  002326  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
 31487  002328  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
 31488  00232A  25BD               	addwf	AESCmac@input& (0+255),w,b
 31489  00232C  0101               	movlb	1	; () banked
 31490  00232E  6FCA               	movwf	AESCmac@ptr& (0+255),b
 31491  002330  0100               	movlb	0	; () banked
 31492  002332  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 31493  002334  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 31494  002336  0101               	movlb	1	; () banked
 31495  002338  6FCB               	movwf	(AESCmac@ptr+1)& (0+255),b
 31496                           
 31497                           ; BSR set to: 1
 31498                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 31499  00233A  0E00               	movlw	0
 31500  00233C  6FCF               	movwf	AESCmac@i& (0+255),b
 31501  00233E                     l13983:
 31502                           
 31503                           ; BSR set to: 1
 31504  00233E  0E0F               	movlw	15
 31505  002340  65CF               	cpfsgt	AESCmac@i& (0+255),b
 31506  002342  D001               	goto	l48
 31507  002344  D036               	goto	u15690
 31508  002346                     l48:
 31509                           
 31510                           ; BSR set to: 1
 31511                           ;lorawan_aes_cmac.c: 76: {
 31512                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 31513                           
 31514                           ; BSR set to: 1
 31515  002346  0100               	movlb	0	; () banked
 31516  002348  51BF               	movf	AESCmac@size& (0+255),w,b
 31517  00234A  0B0F               	andlw	15
 31518  00234C  0101               	movlb	1	; () banked
 31519  00234E  61CF               	cpfslt	AESCmac@i& (0+255),b
 31520  002350  D013               	goto	l50
 31521                           
 31522                           ; BSR set to: 1
 31523                           ;lorawan_aes_cmac.c: 78: {
 31524                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 31525  002352  51CF               	movf	AESCmac@i& (0+255),w,b
 31526  002354  0D01               	mullw	1
 31527  002356  50F3               	movf	prodl,w,c
 31528  002358  25CA               	addwf	AESCmac@ptr& (0+255),w,b
 31529  00235A  6ED9               	movwf	fsr2l,c
 31530  00235C  50F4               	movf	prodh,w,c
 31531  00235E  21CB               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 31532  002360  6EDA               	movwf	fsr2h,c
 31533  002362  51CF               	movf	AESCmac@i& (0+255),w,b
 31534  002364  0D01               	mullw	1
 31535  002366  0E9A               	movlw	low AESCmac@padded
 31536  002368  24F3               	addwf	prodl,w,c
 31537  00236A  6EE9               	movwf	fsr0l,c
 31538  00236C  0E01               	movlw	high AESCmac@padded
 31539  00236E  20F4               	addwfc	prodh,w,c
 31540  002370  6EEA               	movwf	fsr0h,c
 31541  002372  CFDF FFEF          	movff	indf2,indf0
 31542                           
 31543                           ;lorawan_aes_cmac.c: 80: }
 31544  002376  D01B               	goto	l53
 31545  002378                     l50:
 31546                           
 31547                           ; BSR set to: 1
 31548                           ;lorawan_aes_cmac.c: 81: else
 31549                           ;lorawan_aes_cmac.c: 82: {
 31550                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 31551                           
 31552                           ; BSR set to: 1
 31553  002378  0100               	movlb	0	; () banked
 31554  00237A  51BF               	movf	AESCmac@size& (0+255),w,b
 31555  00237C  0B0F               	andlw	15
 31556  00237E  0101               	movlb	1	; () banked
 31557  002380  19CF               	xorwf	AESCmac@i& (0+255),w,b
 31558  002382  A4D8               	btfss	status,2,c
 31559  002384  D00A               	goto	l52
 31560                           
 31561                           ; BSR set to: 1
 31562                           ;lorawan_aes_cmac.c: 84: {
 31563                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 31564  002386  51CF               	movf	AESCmac@i& (0+255),w,b
 31565  002388  0D01               	mullw	1
 31566  00238A  0E9A               	movlw	low AESCmac@padded
 31567  00238C  24F3               	addwf	prodl,w,c
 31568  00238E  6ED9               	movwf	fsr2l,c
 31569  002390  0E01               	movlw	high AESCmac@padded
 31570  002392  20F4               	addwfc	prodh,w,c
 31571  002394  6EDA               	movwf	fsr2h,c
 31572  002396  0E80               	movlw	128
 31573  002398  D009               	goto	L24
 31574  00239A                     l52:
 31575                           
 31576                           ; BSR set to: 1
 31577                           ;lorawan_aes_cmac.c: 87: else
 31578                           ;lorawan_aes_cmac.c: 88: {
 31579                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 31580                           
 31581                           ; BSR set to: 1
 31582  00239A  51CF               	movf	AESCmac@i& (0+255),w,b
 31583  00239C  0D01               	mullw	1
 31584  00239E  0E9A               	movlw	low AESCmac@padded
 31585  0023A0  24F3               	addwf	prodl,w,c
 31586  0023A2  6ED9               	movwf	fsr2l,c
 31587  0023A4  0E01               	movlw	high AESCmac@padded
 31588  0023A6  20F4               	addwfc	prodh,w,c
 31589  0023A8  6EDA               	movwf	fsr2h,c
 31590  0023AA  0E00               	movlw	0
 31591  0023AC                     L24:
 31592  0023AC  6EDF               	movwf	indf2,c
 31593  0023AE                     l53:
 31594                           
 31595                           ; BSR set to: 1
 31596                           
 31597                           ; BSR set to: 1
 31598                           
 31599                           ; BSR set to: 1
 31600  0023AE  2BCF               	incf	AESCmac@i& (0+255),f,b
 31601  0023B0  D7C6               	goto	l13983
 31602  0023B2                     u15690:
 31603                           
 31604                           ; BSR set to: 1
 31605                           ;lorawan_aes_cmac.c: 90: }
 31606                           ;lorawan_aes_cmac.c: 91: }
 31607                           ;lorawan_aes_cmac.c: 92: }
 31608                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 31609                           
 31610                           ; BSR set to: 1
 31611  0023B2  0E00               	movlw	0
 31612  0023B4  6FCF               	movwf	AESCmac@i& (0+255),b
 31613  0023B6                     l14003:
 31614                           
 31615                           ; BSR set to: 1
 31616  0023B6  0E0F               	movlw	15
 31617  0023B8  65CF               	cpfsgt	AESCmac@i& (0+255),b
 31618  0023BA  D001               	goto	l54
 31619  0023BC  D023               	goto	u15710
 31620  0023BE                     l54:
 31621                           
 31622                           ; BSR set to: 1
 31623                           ;lorawan_aes_cmac.c: 96: {
 31624                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 31625                           
 31626                           ; BSR set to: 1
 31627  0023BE  51CF               	movf	AESCmac@i& (0+255),w,b
 31628  0023C0  0D01               	mullw	1
 31629  0023C2  0E8A               	movlw	low AESCmac@mLast
 31630  0023C4  24F3               	addwf	prodl,w,c
 31631  0023C6  6ED9               	movwf	fsr2l,c
 31632  0023C8  0E01               	movlw	high AESCmac@mLast
 31633  0023CA  20F4               	addwfc	prodh,w,c
 31634  0023CC  6EDA               	movwf	fsr2h,c
 31635  0023CE  51CF               	movf	AESCmac@i& (0+255),w,b
 31636  0023D0  0D01               	mullw	1
 31637  0023D2  0E6A               	movlw	low AESCmac@k2
 31638  0023D4  24F3               	addwf	prodl,w,c
 31639  0023D6  6EE9               	movwf	fsr0l,c
 31640  0023D8  0E01               	movlw	high AESCmac@k2
 31641  0023DA  20F4               	addwfc	prodh,w,c
 31642  0023DC  6EEA               	movwf	fsr0h,c
 31643  0023DE  50EF               	movf	indf0,w,c
 31644  0023E0  0100               	movlb	0	; () banked
 31645  0023E2  6FC0               	movwf	??_AESCmac& (0+255),b
 31646  0023E4  0101               	movlb	1	; () banked
 31647  0023E6  51CF               	movf	AESCmac@i& (0+255),w,b
 31648  0023E8  0D01               	mullw	1
 31649  0023EA  0E9A               	movlw	low AESCmac@padded
 31650  0023EC  24F3               	addwf	prodl,w,c
 31651  0023EE  6EE9               	movwf	fsr0l,c
 31652  0023F0  0E01               	movlw	high AESCmac@padded
 31653  0023F2  20F4               	addwfc	prodh,w,c
 31654  0023F4  6EEA               	movwf	fsr0h,c
 31655  0023F6  50EF               	movf	indf0,w,c
 31656  0023F8  0100               	movlb	0	; () banked
 31657  0023FA  19C0               	xorwf	??_AESCmac& (0+255),w,b
 31658  0023FC  6EDF               	movwf	indf2,c
 31659                           
 31660                           ; BSR set to: 0
 31661  0023FE  0101               	movlb	1	; () banked
 31662  002400  2BCF               	incf	AESCmac@i& (0+255),f,b
 31663  002402  D7D9               	goto	l14003
 31664  002404                     u15710:
 31665                           
 31666                           ;lorawan_aes_cmac.c: 98: }
 31667                           ;lorawan_aes_cmac.c: 99: }
 31668                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 31669                           
 31670                           ; BSR set to: 1
 31671                           
 31672                           ; BSR set to: 1
 31673  002404  0EBA               	movlw	low AESCmac@x
 31674  002406  0100               	movlb	0	; () banked
 31675  002408  6F60               	movwf	memset@p1& (0+255),b
 31676  00240A  0E01               	movlw	high AESCmac@x
 31677  00240C  6F61               	movwf	(memset@p1+1)& (0+255),b
 31678  00240E  0E00               	movlw	0
 31679  002410  6F63               	movwf	(memset@c+1)& (0+255),b
 31680  002412  0E00               	movlw	0
 31681  002414  6F62               	movwf	memset@c& (0+255),b
 31682  002416  0E00               	movlw	0
 31683  002418  6F65               	movwf	(memset@n+1)& (0+255),b
 31684  00241A  0E10               	movlw	16
 31685  00241C  6F64               	movwf	memset@n& (0+255),b
 31686  00241E  ECCB  F042         	call	_memset	;wreg free
 31687                           
 31688                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 31689  002422  0E00               	movlw	0
 31690  002424  0101               	movlb	1	; () banked
 31691  002426  6FCF               	movwf	AESCmac@i& (0+255),b
 31692  002428  D056               	goto	l56
 31693  00242A                     
 31694                           ;lorawan_aes_cmac.c: 104: {
 31695                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 31696                           
 31697                           ; BSR set to: 1
 31698  00242A  0E00               	movlw	0
 31699  00242C  0101               	movlb	1	; () banked
 31700  00242E  6FCE               	movwf	AESCmac@j& (0+255),b
 31701  002430                     l14019:
 31702                           
 31703                           ; BSR set to: 1
 31704  002430  0E0F               	movlw	15
 31705  002432  65CE               	cpfsgt	AESCmac@j& (0+255),b
 31706  002434  D001               	goto	l58
 31707  002436  D033               	goto	u15730
 31708  002438                     l58:
 31709                           
 31710                           ; BSR set to: 1
 31711                           ;lorawan_aes_cmac.c: 106: {
 31712                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 31713                           
 31714                           ; BSR set to: 1
 31715  002438  51CE               	movf	AESCmac@j& (0+255),w,b
 31716  00243A  0D01               	mullw	1
 31717  00243C  0EAA               	movlw	low AESCmac@y
 31718  00243E  24F3               	addwf	prodl,w,c
 31719  002440  6ED9               	movwf	fsr2l,c
 31720  002442  0E01               	movlw	high AESCmac@y
 31721  002444  20F4               	addwfc	prodh,w,c
 31722  002446  6EDA               	movwf	fsr2h,c
 31723  002448  51CF               	movf	AESCmac@i& (0+255),w,b
 31724  00244A  0100               	movlb	0	; () banked
 31725  00244C  6FC0               	movwf	??_AESCmac& (0+255),b
 31726  00244E  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 31727  002450  3BC0               	swapf	??_AESCmac& (0+255),f,b
 31728  002452  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
 31729  002454  0EF0               	movlw	240
 31730  002456  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
 31731  002458  51C0               	movf	??_AESCmac& (0+255),w,b
 31732  00245A  0B0F               	andlw	15
 31733  00245C  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
 31734  00245E  0EF0               	movlw	240
 31735  002460  17C0               	andwf	??_AESCmac& (0+255),f,b
 31736  002462  0101               	movlb	1	; () banked
 31737  002464  51CE               	movf	AESCmac@j& (0+255),w,b
 31738  002466  0100               	movlb	0	; () banked
 31739  002468  27C0               	addwf	??_AESCmac& (0+255),f,b
 31740  00246A  0E00               	movlw	0
 31741  00246C  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
 31742  00246E  51C0               	movf	??_AESCmac& (0+255),w,b
 31743  002470  25BD               	addwf	AESCmac@input& (0+255),w,b
 31744  002472  6EE9               	movwf	fsr0l,c
 31745  002474  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 31746  002476  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 31747  002478  6EEA               	movwf	fsr0h,c
 31748  00247A  50EF               	movf	indf0,w,c
 31749  00247C  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 31750  00247E  0101               	movlb	1	; () banked
 31751  002480  51CE               	movf	AESCmac@j& (0+255),w,b
 31752  002482  0D01               	mullw	1
 31753  002484  0EBA               	movlw	low AESCmac@x
 31754  002486  24F3               	addwf	prodl,w,c
 31755  002488  6EE9               	movwf	fsr0l,c
 31756  00248A  0E01               	movlw	high AESCmac@x
 31757  00248C  20F4               	addwfc	prodh,w,c
 31758  00248E  6EEA               	movwf	fsr0h,c
 31759  002490  50EF               	movf	indf0,w,c
 31760  002492  0100               	movlb	0	; () banked
 31761  002494  19C2               	xorwf	(??_AESCmac+2)& (0+255),w,b
 31762  002496  6EDF               	movwf	indf2,c
 31763                           
 31764                           ; BSR set to: 0
 31765  002498  0101               	movlb	1	; () banked
 31766  00249A  2BCE               	incf	AESCmac@j& (0+255),f,b
 31767  00249C  D7C9               	goto	l14019
 31768  00249E                     u15730:
 31769                           
 31770                           ; BSR set to: 1
 31771                           ;lorawan_aes_cmac.c: 108: }
 31772                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 31773                           
 31774                           ; BSR set to: 1
 31775  00249E  0EBA               	movlw	low AESCmac@x
 31776  0024A0  0100               	movlb	0	; () banked
 31777  0024A2  6F60               	movwf	memcpy@d1& (0+255),b
 31778  0024A4  0E01               	movlw	high AESCmac@x
 31779  0024A6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 31780  0024A8  0EAA               	movlw	low AESCmac@y
 31781  0024AA  6F62               	movwf	memcpy@s1& (0+255),b
 31782  0024AC  0E01               	movlw	high AESCmac@y
 31783  0024AE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 31784  0024B0  0E00               	movlw	0
 31785  0024B2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31786  0024B4  0E10               	movlw	16
 31787  0024B6  6F64               	movwf	memcpy@n& (0+255),b
 31788  0024B8  EC5C  F03D         	call	_memcpy	;wreg free
 31789                           
 31790                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 31791  0024BC  0EBA               	movlw	low AESCmac@x
 31792  0024BE  0100               	movlb	0	; () banked
 31793  0024C0  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 31794  0024C2  0E01               	movlw	high AESCmac@x
 31795  0024C4  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 31796  0024C6  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
 31797  0024CA  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 31798  0024CE  EC05  F042         	call	_AESEncodeLoRa	;wreg free
 31799  0024D2  0101               	movlb	1	; () banked
 31800  0024D4  2BCF               	incf	AESCmac@i& (0+255),f,b
 31801  0024D6                     l56:
 31802                           
 31803                           ; BSR set to: 1
 31804                           
 31805                           ; BSR set to: 1
 31806  0024D6  0EFF               	movlw	255
 31807  0024D8  0100               	movlb	0	; () banked
 31808  0024DA  6FC0               	movwf	??_AESCmac& (0+255),b
 31809  0024DC  0EFF               	movlw	255
 31810  0024DE  6FC1               	movwf	(??_AESCmac+1)& (0+255),b
 31811  0024E0  0101               	movlb	1	; () banked
 31812  0024E2  51CD               	movf	AESCmac@n& (0+255),w,b
 31813  0024E4  0100               	movlb	0	; () banked
 31814  0024E6  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 31815  0024E8  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 31816  0024EA  51C0               	movf	??_AESCmac& (0+255),w,b
 31817  0024EC  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
 31818  0024EE  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 31819  0024F0  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
 31820  0024F2  0101               	movlb	1	; () banked
 31821  0024F4  51CF               	movf	AESCmac@i& (0+255),w,b
 31822  0024F6  0100               	movlb	0	; () banked
 31823  0024F8  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
 31824  0024FA  6BC5               	clrf	(??_AESCmac+5)& (0+255),b
 31825  0024FC  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
 31826  0024FE  5DC4               	subwf	(??_AESCmac+4)& (0+255),w,b
 31827  002500  51C5               	movf	(??_AESCmac+5)& (0+255),w,b
 31828  002502  0A80               	xorlw	128
 31829  002504  6FC6               	movwf	(??_AESCmac+6)& (0+255),b
 31830  002506  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 31831  002508  0A80               	xorlw	128
 31832  00250A  59C6               	subwfb	(??_AESCmac+6)& (0+255),w,b
 31833  00250C  A0D8               	btfss	status,0,c
 31834  00250E  D78D               	goto	l57
 31835                           
 31836                           ; BSR set to: 0
 31837                           ;lorawan_aes_cmac.c: 111: }
 31838                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 31839                           
 31840                           ; BSR set to: 0
 31841  002510  0E00               	movlw	0
 31842  002512  0101               	movlb	1	; () banked
 31843  002514  6FCF               	movwf	AESCmac@i& (0+255),b
 31844  002516                     l14039:
 31845                           
 31846                           ; BSR set to: 1
 31847  002516  0E0F               	movlw	15
 31848  002518  65CF               	cpfsgt	AESCmac@i& (0+255),b
 31849  00251A  D001               	goto	l61
 31850  00251C  D023               	goto	u15760
 31851  00251E                     l61:
 31852                           
 31853                           ; BSR set to: 1
 31854                           ;lorawan_aes_cmac.c: 114: {
 31855                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 31856                           
 31857                           ; BSR set to: 1
 31858  00251E  51CF               	movf	AESCmac@i& (0+255),w,b
 31859  002520  0D01               	mullw	1
 31860  002522  0EAA               	movlw	low AESCmac@y
 31861  002524  24F3               	addwf	prodl,w,c
 31862  002526  6ED9               	movwf	fsr2l,c
 31863  002528  0E01               	movlw	high AESCmac@y
 31864  00252A  20F4               	addwfc	prodh,w,c
 31865  00252C  6EDA               	movwf	fsr2h,c
 31866  00252E  51CF               	movf	AESCmac@i& (0+255),w,b
 31867  002530  0D01               	mullw	1
 31868  002532  0E8A               	movlw	low AESCmac@mLast
 31869  002534  24F3               	addwf	prodl,w,c
 31870  002536  6EE9               	movwf	fsr0l,c
 31871  002538  0E01               	movlw	high AESCmac@mLast
 31872  00253A  20F4               	addwfc	prodh,w,c
 31873  00253C  6EEA               	movwf	fsr0h,c
 31874  00253E  50EF               	movf	indf0,w,c
 31875  002540  0100               	movlb	0	; () banked
 31876  002542  6FC0               	movwf	??_AESCmac& (0+255),b
 31877  002544  0101               	movlb	1	; () banked
 31878  002546  51CF               	movf	AESCmac@i& (0+255),w,b
 31879  002548  0D01               	mullw	1
 31880  00254A  0EBA               	movlw	low AESCmac@x
 31881  00254C  24F3               	addwf	prodl,w,c
 31882  00254E  6EE9               	movwf	fsr0l,c
 31883  002550  0E01               	movlw	high AESCmac@x
 31884  002552  20F4               	addwfc	prodh,w,c
 31885  002554  6EEA               	movwf	fsr0h,c
 31886  002556  50EF               	movf	indf0,w,c
 31887  002558  0100               	movlb	0	; () banked
 31888  00255A  19C0               	xorwf	??_AESCmac& (0+255),w,b
 31889  00255C  6EDF               	movwf	indf2,c
 31890                           
 31891                           ; BSR set to: 0
 31892  00255E  0101               	movlb	1	; () banked
 31893  002560  2BCF               	incf	AESCmac@i& (0+255),f,b
 31894  002562  D7D9               	goto	l14039
 31895  002564                     u15760:
 31896                           
 31897                           ; BSR set to: 1
 31898                           ;lorawan_aes_cmac.c: 116: }
 31899                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 31900                           
 31901                           ; BSR set to: 1
 31902  002564  0EAA               	movlw	low AESCmac@y
 31903  002566  0100               	movlb	0	; () banked
 31904  002568  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 31905  00256A  0E01               	movlw	high AESCmac@y
 31906  00256C  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 31907  00256E  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
 31908  002572  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 31909  002576  EC05  F042         	call	_AESEncodeLoRa	;wreg free
 31910                           
 31911                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 31912  00257A  C0BB  F060         	movff	AESCmac@output,memcpy@d1
 31913  00257E  C0BC  F061         	movff	AESCmac@output+1,memcpy@d1+1
 31914  002582  0EAA               	movlw	low AESCmac@y
 31915  002584  0100               	movlb	0	; () banked
 31916  002586  6F62               	movwf	memcpy@s1& (0+255),b
 31917  002588  0E01               	movlw	high AESCmac@y
 31918  00258A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 31919  00258C  0E00               	movlw	0
 31920  00258E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31921  002590  0E10               	movlw	16
 31922  002592  6F64               	movwf	memcpy@n& (0+255),b
 31923  002594  EC5C  F03D         	call	_memcpy	;wreg free
 31924  002598  0012               	return		;funcret
 31925  00259A                     __end_of_AESCmac:
 31926                           	opt stack 0
 31927                           tosu	equ	0xFFF
 31928                           tosh	equ	0xFFE
 31929                           tosl	equ	0xFFD
 31930                           pclath	equ	0xFFA
 31931                           tblptru	equ	0xFF8
 31932                           tblptrh	equ	0xFF7
 31933                           tblptrl	equ	0xFF6
 31934                           tablat	equ	0xFF5
 31935                           prodh	equ	0xFF4
 31936                           prodl	equ	0xFF3
 31937                           intcon	equ	0xFF2
 31938                           intcon2	equ	0xFF1
 31939                           intcon3	equ	0xFF0
 31940                           indf0	equ	0xFEF
 31941                           postinc0	equ	0xFEE
 31942                           fsr0h	equ	0xFEA
 31943                           fsr0l	equ	0xFE9
 31944                           wreg	equ	0xFE8
 31945                           postinc1	equ	0xFE6
 31946                           postdec1	equ	0xFE5
 31947                           plusw1	equ	0xFE3
 31948                           fsr1h	equ	0xFE2
 31949                           fsr1l	equ	0xFE1
 31950                           indf2	equ	0xFDF
 31951                           postinc2	equ	0xFDE
 31952                           postdec2	equ	0xFDD
 31953                           plusw2	equ	0xFDB
 31954                           fsr2h	equ	0xFDA
 31955                           fsr2l	equ	0xFD9
 31956                           status	equ	0xFD8
 31957                           
 31958 ;; *************** function _GenerateSubkey *****************
 31959 ;; Defined at:
 31960 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 31961 ;; Parameters:    Size  Location     Type
 31962 ;;  key             2   49[BANK0 ] PTR unsigned char 
 31963 ;;		 -> loRa.activationParameters(105), loRa(245), 
 31964 ;;  k1              2   51[BANK0 ] PTR unsigned char 
 31965 ;;		 -> AESCmac@k1(16), 
 31966 ;;  k2              2   53[BANK0 ] PTR unsigned char 
 31967 ;;		 -> AESCmac@k2(16), 
 31968 ;; Auto vars:     Size  Location     Type
 31969 ;;  l              16   72[BANK0 ] unsigned char [16]
 31970 ;;  const_Rb       16   56[BANK0 ] unsigned char [16]
 31971 ;;  i               1   88[BANK0 ] unsigned char 
 31972 ;; Return value:  Size  Location     Type
 31973 ;;                  1    wreg      void 
 31974 ;; Registers used:
 31975 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31976 ;; Tracked objects:
 31977 ;;		On entry : 0/0
 31978 ;;		On exit  : 0/0
 31979 ;;		Unchanged: 0/0
 31980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31981 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31982 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31983 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31984 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31985 ;;Total ram usage:       40 bytes
 31986 ;; Hardware stack levels used:    1
 31987 ;; Hardware stack levels required when called:   10
 31988 ;; This function calls:
 31989 ;;		_AESEncodeLoRa
 31990 ;;		_FillSubKey
 31991 ;;		_memset
 31992 ;; This function is called by:
 31993 ;;		_AESCmac
 31994 ;; This function uses a non-reentrant model
 31995 ;;
 31996                           
 31997                           	psect	text153
 31998  0054F2                     __ptext153:
 31999                           	opt stack 0
 32000  0054F2                     _GenerateSubkey:
 32001                           	opt stack 17
 32002                           
 32003                           ;lorawan_aes_cmac.c: 126: uint8_t i = 0;
 32004                           
 32005                           ;incstack = 0
 32006  0054F2  0E00               	movlw	0
 32007  0054F4  0100               	movlb	0	; () banked
 32008  0054F6  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 32009                           
 32010                           ; BSR set to: 0
 32011                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 32012                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 32013                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 32014  0054F8  EE21  F0D3         	lfsr	2,GenerateSubkey@F7103
 32015  0054FC  EE00  F098         	lfsr	0,GenerateSubkey@const_Rb
 32016  005500  0E0F               	movlw	15
 32017  005502                     u15101:
 32018  005502  CFDB FFEB          	movff	plusw2,plusw0
 32019  005506  06E8               	decf	wreg,f,c
 32020  005508  E2FC               	bc	u15101
 32021                           
 32022                           ; BSR set to: 0
 32023                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 32024  00550A  0EA8               	movlw	low GenerateSubkey@l
 32025  00550C  6F60               	movwf	memset@p1& (0+255),b
 32026  00550E  0E00               	movlw	high GenerateSubkey@l
 32027  005510  6F61               	movwf	(memset@p1+1)& (0+255),b
 32028  005512  0E00               	movlw	0
 32029  005514  6F63               	movwf	(memset@c+1)& (0+255),b
 32030  005516  0E00               	movlw	0
 32031  005518  6F62               	movwf	memset@c& (0+255),b
 32032  00551A  0E00               	movlw	0
 32033  00551C  6F65               	movwf	(memset@n+1)& (0+255),b
 32034  00551E  0E10               	movlw	16
 32035  005520  6F64               	movwf	memset@n& (0+255),b
 32036  005522  ECCB  F042         	call	_memset	;wreg free
 32037                           
 32038                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 32039  005526  0EA8               	movlw	low GenerateSubkey@l
 32040  005528  0100               	movlb	0	; () banked
 32041  00552A  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 32042  00552C  0E00               	movlw	high GenerateSubkey@l
 32043  00552E  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 32044  005530  C091  F07F         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 32045  005534  C092  F080         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 32046  005538  EC05  F042         	call	_AESEncodeLoRa	;wreg free
 32047                           
 32048                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 32049  00553C  0100               	movlb	0	; () banked
 32050  00553E  BFA8               	btfsc	GenerateSubkey@l& (0+255),7,b
 32051  005540  D00D               	goto	l68
 32052                           
 32053                           ; BSR set to: 0
 32054                           ;lorawan_aes_cmac.c: 138: {
 32055                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 32056  005542  0EA8               	movlw	low GenerateSubkey@l
 32057  005544  6F60               	movwf	FillSubKey@source& (0+255),b
 32058  005546  0E00               	movlw	high GenerateSubkey@l
 32059  005548  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 32060  00554A  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 32061  00554E  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 32062  005552  0E10               	movlw	16
 32063  005554  6F64               	movwf	FillSubKey@size& (0+255),b
 32064  005556  ECCA  F03C         	call	_FillSubKey	;wreg free
 32065                           
 32066                           ;lorawan_aes_cmac.c: 140: }
 32067  00555A  D02A               	goto	u15130
 32068  00555C                     l68:
 32069                           
 32070                           ;lorawan_aes_cmac.c: 141: else
 32071                           ;lorawan_aes_cmac.c: 142: {
 32072                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 32073  00555C  0EA8               	movlw	low GenerateSubkey@l
 32074  00555E  0100               	movlb	0	; () banked
 32075  005560  6F60               	movwf	FillSubKey@source& (0+255),b
 32076  005562  0E00               	movlw	high GenerateSubkey@l
 32077  005564  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 32078  005566  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 32079  00556A  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 32080  00556E  0E10               	movlw	16
 32081  005570  6F64               	movwf	FillSubKey@size& (0+255),b
 32082  005572  ECCA  F03C         	call	_FillSubKey	;wreg free
 32083                           
 32084                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 32085  005576  0E00               	movlw	0
 32086  005578  0100               	movlb	0	; () banked
 32087  00557A  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 32088  00557C                     l13593:
 32089                           
 32090                           ; BSR set to: 0
 32091  00557C  0E0F               	movlw	15
 32092  00557E  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
 32093  005580  D001               	goto	l70
 32094  005582  D016               	goto	u15130
 32095  005584                     l70:
 32096                           
 32097                           ; BSR set to: 0
 32098                           ;lorawan_aes_cmac.c: 146: {
 32099                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 32100                           
 32101                           ; BSR set to: 0
 32102  005584  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 32103  005586  0D01               	mullw	1
 32104  005588  0E98               	movlw	low GenerateSubkey@const_Rb
 32105  00558A  24F3               	addwf	prodl,w,c
 32106  00558C  6ED9               	movwf	fsr2l,c
 32107  00558E  0E00               	movlw	high GenerateSubkey@const_Rb
 32108  005590  20F4               	addwfc	prodh,w,c
 32109  005592  6EDA               	movwf	fsr2h,c
 32110  005594  50DF               	movf	indf2,w,c
 32111  005596  6F97               	movwf	??_GenerateSubkey& (0+255),b
 32112  005598  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 32113  00559A  0D01               	mullw	1
 32114  00559C  50F3               	movf	prodl,w,c
 32115  00559E  2593               	addwf	GenerateSubkey@k1& (0+255),w,b
 32116  0055A0  6ED9               	movwf	fsr2l,c
 32117  0055A2  50F4               	movf	prodh,w,c
 32118  0055A4  2194               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 32119  0055A6  6EDA               	movwf	fsr2h,c
 32120  0055A8  5197               	movf	??_GenerateSubkey& (0+255),w,b
 32121  0055AA  1ADF               	xorwf	indf2,f,c
 32122                           
 32123                           ; BSR set to: 0
 32124  0055AC  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
 32125  0055AE  D7E6               	goto	l13593
 32126  0055B0                     u15130:
 32127                           
 32128                           ;lorawan_aes_cmac.c: 148: }
 32129                           ;lorawan_aes_cmac.c: 149: }
 32130                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 32131                           
 32132                           ; BSR set to: 0
 32133                           
 32134                           ; BSR set to: 0
 32135  0055B0  C093  FFD9         	movff	GenerateSubkey@k1,fsr2l
 32136  0055B4  C094  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 32137  0055B8  0100               	movlb	0	; () banked
 32138  0055BA  BEDF               	btfsc	indf2,7,c
 32139  0055BC  D00D               	goto	l72
 32140                           
 32141                           ; BSR set to: 0
 32142                           ;lorawan_aes_cmac.c: 153: {
 32143                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 32144  0055BE  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 32145  0055C2  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 32146  0055C6  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 32147  0055CA  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 32148  0055CE  0E10               	movlw	16
 32149  0055D0  6F64               	movwf	FillSubKey@size& (0+255),b
 32150  0055D2  ECCA  F03C         	call	_FillSubKey	;wreg free
 32151                           
 32152                           ;lorawan_aes_cmac.c: 155: }
 32153  0055D6  0012               	return	
 32154  0055D8                     l72:
 32155                           
 32156                           ;lorawan_aes_cmac.c: 156: else
 32157                           ;lorawan_aes_cmac.c: 157: {
 32158                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 32159  0055D8  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 32160  0055DC  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 32161  0055E0  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 32162  0055E4  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 32163  0055E8  0E10               	movlw	16
 32164  0055EA  0100               	movlb	0	; () banked
 32165  0055EC  6F64               	movwf	FillSubKey@size& (0+255),b
 32166  0055EE  ECCA  F03C         	call	_FillSubKey	;wreg free
 32167                           
 32168                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 32169  0055F2  0E00               	movlw	0
 32170  0055F4  0100               	movlb	0	; () banked
 32171  0055F6  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 32172  0055F8                     l13611:
 32173                           
 32174                           ; BSR set to: 0
 32175  0055F8  0E0F               	movlw	15
 32176  0055FA  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
 32177  0055FC  D001               	goto	l74
 32178  0055FE  0012               	return	
 32179  005600                     l74:
 32180                           
 32181                           ; BSR set to: 0
 32182                           ;lorawan_aes_cmac.c: 161: {
 32183                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 32184                           
 32185                           ; BSR set to: 0
 32186  005600  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 32187  005602  0D01               	mullw	1
 32188  005604  50F3               	movf	prodl,w,c
 32189  005606  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
 32190  005608  6ED9               	movwf	fsr2l,c
 32191  00560A  50F4               	movf	prodh,w,c
 32192  00560C  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 32193  00560E  6EDA               	movwf	fsr2h,c
 32194  005610  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 32195  005612  0D01               	mullw	1
 32196  005614  0E98               	movlw	low GenerateSubkey@const_Rb
 32197  005616  24F3               	addwf	prodl,w,c
 32198  005618  6EE9               	movwf	fsr0l,c
 32199  00561A  0E00               	movlw	high GenerateSubkey@const_Rb
 32200  00561C  20F4               	addwfc	prodh,w,c
 32201  00561E  6EEA               	movwf	fsr0h,c
 32202  005620  50EF               	movf	indf0,w,c
 32203  005622  6F97               	movwf	??_GenerateSubkey& (0+255),b
 32204  005624  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 32205  005626  0D01               	mullw	1
 32206  005628  50F3               	movf	prodl,w,c
 32207  00562A  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
 32208  00562C  6EE9               	movwf	fsr0l,c
 32209  00562E  50F4               	movf	prodh,w,c
 32210  005630  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 32211  005632  6EEA               	movwf	fsr0h,c
 32212  005634  50EF               	movf	indf0,w,c
 32213  005636  1997               	xorwf	??_GenerateSubkey& (0+255),w,b
 32214  005638  6EDF               	movwf	indf2,c
 32215                           
 32216                           ; BSR set to: 0
 32217  00563A  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
 32218  00563C  D7DD               	goto	l13611
 32219  00563E                     __end_of_GenerateSubkey:
 32220                           	opt stack 0
 32221                           tosu	equ	0xFFF
 32222                           tosh	equ	0xFFE
 32223                           tosl	equ	0xFFD
 32224                           pclath	equ	0xFFA
 32225                           tblptru	equ	0xFF8
 32226                           tblptrh	equ	0xFF7
 32227                           tblptrl	equ	0xFF6
 32228                           tablat	equ	0xFF5
 32229                           prodh	equ	0xFF4
 32230                           prodl	equ	0xFF3
 32231                           intcon	equ	0xFF2
 32232                           intcon2	equ	0xFF1
 32233                           intcon3	equ	0xFF0
 32234                           indf0	equ	0xFEF
 32235                           postinc0	equ	0xFEE
 32236                           plusw0	equ	0xFEB
 32237                           fsr0h	equ	0xFEA
 32238                           fsr0l	equ	0xFE9
 32239                           wreg	equ	0xFE8
 32240                           postinc1	equ	0xFE6
 32241                           postdec1	equ	0xFE5
 32242                           plusw1	equ	0xFE3
 32243                           fsr1h	equ	0xFE2
 32244                           fsr1l	equ	0xFE1
 32245                           indf2	equ	0xFDF
 32246                           postinc2	equ	0xFDE
 32247                           postdec2	equ	0xFDD
 32248                           plusw2	equ	0xFDB
 32249                           fsr2h	equ	0xFDA
 32250                           fsr2l	equ	0xFD9
 32251                           status	equ	0xFD8
 32252                           
 32253 ;; *************** function _FillSubKey *****************
 32254 ;; Defined at:
 32255 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 32256 ;; Parameters:    Size  Location     Type
 32257 ;;  source          2    0[BANK0 ] PTR unsigned char 
 32258 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 32259 ;;  key             2    2[BANK0 ] PTR unsigned char 
 32260 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 32261 ;;  size            1    4[BANK0 ] unsigned char 
 32262 ;; Auto vars:     Size  Location     Type
 32263 ;;  i               1    7[BANK0 ] unsigned char 
 32264 ;;  carry           1    6[BANK0 ] unsigned char 
 32265 ;; Return value:  Size  Location     Type
 32266 ;;                  1    wreg      void 
 32267 ;; Registers used:
 32268 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32269 ;; Tracked objects:
 32270 ;;		On entry : 0/0
 32271 ;;		On exit  : 0/0
 32272 ;;		Unchanged: 0/0
 32273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32274 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32275 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32276 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32277 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32278 ;;Total ram usage:        8 bytes
 32279 ;; Hardware stack levels used:    1
 32280 ;; Hardware stack levels required when called:    7
 32281 ;; This function calls:
 32282 ;;		Nothing
 32283 ;; This function is called by:
 32284 ;;		_GenerateSubkey
 32285 ;; This function uses a non-reentrant model
 32286 ;;
 32287                           
 32288                           	psect	text154
 32289  007994                     __ptext154:
 32290                           	opt stack 0
 32291  007994                     _FillSubKey:
 32292                           	opt stack 19
 32293                           
 32294                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 32295                           
 32296                           ;incstack = 0
 32297  007994  0E00               	movlw	0
 32298  007996  0100               	movlb	0	; () banked
 32299  007998  6F67               	movwf	FillSubKey@i& (0+255),b
 32300                           
 32301                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 32302  00799A  0E00               	movlw	0
 32303  00799C  6F66               	movwf	FillSubKey@carry& (0+255),b
 32304                           
 32305                           ; BSR set to: 0
 32306                           ;lorawan_aes_cmac.c: 172: i=size;
 32307  00799E  C064  F067         	movff	FillSubKey@size,FillSubKey@i
 32308                           
 32309                           ;lorawan_aes_cmac.c: 174: while(i--)
 32310  0079A2  D024               	goto	l79
 32311  0079A4                     
 32312                           ; BSR set to: 0
 32313                           ;lorawan_aes_cmac.c: 175: {
 32314                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 32315                           
 32316                           ; BSR set to: 0
 32317  0079A4  5167               	movf	FillSubKey@i& (0+255),w,b
 32318  0079A6  0D01               	mullw	1
 32319  0079A8  50F3               	movf	prodl,w,c
 32320  0079AA  2562               	addwf	FillSubKey@key& (0+255),w,b
 32321  0079AC  6ED9               	movwf	fsr2l,c
 32322  0079AE  50F4               	movf	prodh,w,c
 32323  0079B0  2163               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 32324  0079B2  6EDA               	movwf	fsr2h,c
 32325  0079B4  5167               	movf	FillSubKey@i& (0+255),w,b
 32326  0079B6  0D01               	mullw	1
 32327  0079B8  50F3               	movf	prodl,w,c
 32328  0079BA  2560               	addwf	FillSubKey@source& (0+255),w,b
 32329  0079BC  6EE9               	movwf	fsr0l,c
 32330  0079BE  50F4               	movf	prodh,w,c
 32331  0079C0  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 32332  0079C2  6EEA               	movwf	fsr0h,c
 32333  0079C4  50EF               	movf	indf0,w,c
 32334  0079C6  6F65               	movwf	??_FillSubKey& (0+255),b
 32335  0079C8  90D8               	bcf	status,0,c
 32336  0079CA  3565               	rlcf	??_FillSubKey& (0+255),w,b
 32337  0079CC  1166               	iorwf	FillSubKey@carry& (0+255),w,b
 32338  0079CE  6EDF               	movwf	indf2,c
 32339                           
 32340                           ; BSR set to: 0
 32341                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 32342  0079D0  5167               	movf	FillSubKey@i& (0+255),w,b
 32343  0079D2  0D01               	mullw	1
 32344  0079D4  50F3               	movf	prodl,w,c
 32345  0079D6  2560               	addwf	FillSubKey@source& (0+255),w,b
 32346  0079D8  6ED9               	movwf	fsr2l,c
 32347  0079DA  50F4               	movf	prodh,w,c
 32348  0079DC  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 32349  0079DE  6EDA               	movwf	fsr2h,c
 32350  0079E0  AEDF               	btfss	indf2,7,c
 32351  0079E2  D002               	goto	u14610
 32352  0079E4  0E01               	movlw	1
 32353  0079E6  D001               	goto	u14620
 32354  0079E8                     u14610:
 32355  0079E8  0E00               	movlw	0
 32356  0079EA                     u14620:
 32357  0079EA  6F66               	movwf	FillSubKey@carry& (0+255),b
 32358  0079EC                     l79:
 32359                           
 32360                           ; BSR set to: 0
 32361                           
 32362                           ; BSR set to: 0
 32363  0079EC  0767               	decf	FillSubKey@i& (0+255),f,b
 32364  0079EE  2967               	incf	FillSubKey@i& (0+255),w,b
 32365  0079F0  B4D8               	btfsc	status,2,c
 32366  0079F2  0012               	return	
 32367  0079F4  D7D7               	goto	l80
 32368  0079F6                     __end_of_FillSubKey:
 32369                           	opt stack 0
 32370                           tosu	equ	0xFFF
 32371                           tosh	equ	0xFFE
 32372                           tosl	equ	0xFFD
 32373                           pclath	equ	0xFFA
 32374                           tblptru	equ	0xFF8
 32375                           tblptrh	equ	0xFF7
 32376                           tblptrl	equ	0xFF6
 32377                           tablat	equ	0xFF5
 32378                           prodh	equ	0xFF4
 32379                           prodl	equ	0xFF3
 32380                           intcon	equ	0xFF2
 32381                           intcon2	equ	0xFF1
 32382                           intcon3	equ	0xFF0
 32383                           indf0	equ	0xFEF
 32384                           postinc0	equ	0xFEE
 32385                           plusw0	equ	0xFEB
 32386                           fsr0h	equ	0xFEA
 32387                           fsr0l	equ	0xFE9
 32388                           wreg	equ	0xFE8
 32389                           postinc1	equ	0xFE6
 32390                           postdec1	equ	0xFE5
 32391                           plusw1	equ	0xFE3
 32392                           fsr1h	equ	0xFE2
 32393                           fsr1l	equ	0xFE1
 32394                           indf2	equ	0xFDF
 32395                           postinc2	equ	0xFDE
 32396                           postdec2	equ	0xFDD
 32397                           plusw2	equ	0xFDB
 32398                           fsr2h	equ	0xFDA
 32399                           fsr2l	equ	0xFD9
 32400                           status	equ	0xFD8
 32401                           
 32402 ;; *************** function _AESEncodeLoRa *****************
 32403 ;; Defined at:
 32404 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 32405 ;; Parameters:    Size  Location     Type
 32406 ;;  block           2   29[BANK0 ] PTR unsigned char 
 32407 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 32408 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 32409 ;;  key             2   31[BANK0 ] PTR unsigned char 
 32410 ;;		 -> loRa.activationParameters(105), loRa(245), 
 32411 ;; Auto vars:     Size  Location     Type
 32412 ;;  useKey         16   33[BANK0 ] unsigned char [16]
 32413 ;; Return value:  Size  Location     Type
 32414 ;;                  1    wreg      void 
 32415 ;; Registers used:
 32416 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32417 ;; Tracked objects:
 32418 ;;		On entry : 0/0
 32419 ;;		On exit  : 0/0
 32420 ;;		Unchanged: 0/0
 32421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32422 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32423 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32425 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32426 ;;Total ram usage:       20 bytes
 32427 ;; Hardware stack levels used:    1
 32428 ;; Hardware stack levels required when called:    9
 32429 ;; This function calls:
 32430 ;;		_AESEncode
 32431 ;;		_memcpy
 32432 ;; This function is called by:
 32433 ;;		_AESCmac
 32434 ;;		_GenerateSubkey
 32435 ;;		_LORAWAN_RxDone
 32436 ;;		_ComputeSessionKeys
 32437 ;;		_EncryptFRMPayload
 32438 ;; This function uses a non-reentrant model
 32439 ;;
 32440                           
 32441                           	psect	text155
 32442  00840A                     __ptext155:
 32443                           	opt stack 0
 32444  00840A                     _AESEncodeLoRa:
 32445                           	opt stack 18
 32446                           
 32447                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 32448                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 32449                           
 32450                           ; BSR set to: 0
 32451                           ;incstack = 0
 32452  00840A  0E81               	movlw	low AESEncodeLoRa@useKey
 32453  00840C  0100               	movlb	0	; () banked
 32454  00840E  6F60               	movwf	memcpy@d1& (0+255),b
 32455  008410  0E00               	movlw	high AESEncodeLoRa@useKey
 32456  008412  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32457  008414  C07F  F062         	movff	AESEncodeLoRa@key,memcpy@s1
 32458  008418  C080  F063         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 32459  00841C  0E00               	movlw	0
 32460  00841E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32461  008420  0E10               	movlw	16
 32462  008422  6F64               	movwf	memcpy@n& (0+255),b
 32463  008424  EC5C  F03D         	call	_memcpy	;wreg free
 32464                           
 32465                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 32466  008428  C07D  F066         	movff	AESEncodeLoRa@block,AESEncode@block
 32467  00842C  C07E  F067         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 32468  008430  0E81               	movlw	low AESEncodeLoRa@useKey
 32469  008432  0100               	movlb	0	; () banked
 32470  008434  6F68               	movwf	AESEncode@key& (0+255),b
 32471  008436  0E00               	movlw	high AESEncodeLoRa@useKey
 32472  008438  6F69               	movwf	(AESEncode@key+1)& (0+255),b
 32473  00843A  EC7F  F014         	call	_AESEncode	;wreg free
 32474  00843E  0012               	return		;funcret
 32475  008440                     __end_of_AESEncodeLoRa:
 32476                           	opt stack 0
 32477                           tosu	equ	0xFFF
 32478                           tosh	equ	0xFFE
 32479                           tosl	equ	0xFFD
 32480                           pclath	equ	0xFFA
 32481                           tblptru	equ	0xFF8
 32482                           tblptrh	equ	0xFF7
 32483                           tblptrl	equ	0xFF6
 32484                           tablat	equ	0xFF5
 32485                           prodh	equ	0xFF4
 32486                           prodl	equ	0xFF3
 32487                           intcon	equ	0xFF2
 32488                           intcon2	equ	0xFF1
 32489                           intcon3	equ	0xFF0
 32490                           indf0	equ	0xFEF
 32491                           postinc0	equ	0xFEE
 32492                           plusw0	equ	0xFEB
 32493                           fsr0h	equ	0xFEA
 32494                           fsr0l	equ	0xFE9
 32495                           wreg	equ	0xFE8
 32496                           postinc1	equ	0xFE6
 32497                           postdec1	equ	0xFE5
 32498                           plusw1	equ	0xFE3
 32499                           fsr1h	equ	0xFE2
 32500                           fsr1l	equ	0xFE1
 32501                           indf2	equ	0xFDF
 32502                           postinc2	equ	0xFDE
 32503                           postdec2	equ	0xFDD
 32504                           plusw2	equ	0xFDB
 32505                           fsr2h	equ	0xFDA
 32506                           fsr2l	equ	0xFD9
 32507                           status	equ	0xFD8
 32508                           
 32509 ;; *************** function _AESEncode *****************
 32510 ;; Defined at:
 32511 ;;		line 248 in file "mcc_generated_files/LoRaWAN/AES.c"
 32512 ;; Parameters:    Size  Location     Type
 32513 ;;  block           2    6[BANK0 ] PTR unsigned char 
 32514 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 32515 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 32516 ;;  key             2    8[BANK0 ] PTR unsigned char 
 32517 ;;		 -> AESEncodeLoRa@useKey(16), 
 32518 ;; Auto vars:     Size  Location     Type
 32519 ;;  aux3            1   27[BANK0 ] unsigned char 
 32520 ;;  aux1            1   26[BANK0 ] unsigned char 
 32521 ;;  aux2            1   25[BANK0 ] unsigned char 
 32522 ;;  aux             1   24[BANK0 ] unsigned char 
 32523 ;;  i               1   28[BANK0 ] unsigned char 
 32524 ;;  temp            1    0        unsigned char 
 32525 ;; Return value:  Size  Location     Type
 32526 ;;                  1    wreg      void 
 32527 ;; Registers used:
 32528 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32529 ;; Tracked objects:
 32530 ;;		On entry : 0/0
 32531 ;;		On exit  : 0/0
 32532 ;;		Unchanged: 0/0
 32533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32534 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32535 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32536 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32537 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32538 ;;Total ram usage:       23 bytes
 32539 ;; Hardware stack levels used:    1
 32540 ;; Hardware stack levels required when called:    8
 32541 ;; This function calls:
 32542 ;;		_EncKeySchedule
 32543 ;;		_EncodeShiftRow
 32544 ;; This function is called by:
 32545 ;;		_AESEncodeLoRa
 32546 ;; This function uses a non-reentrant model
 32547 ;;
 32548                           
 32549                           	psect	text156
 32550  0028FE                     __ptext156:
 32551                           	opt stack 0
 32552  0028FE                     _AESEncode:
 32553                           	opt stack 18
 32554                           
 32555                           ;AES.c: 250: unsigned char i;
 32556                           ;AES.c: 251: unsigned char temp;
 32557                           ;AES.c: 254: _roundCounter = 10;
 32558                           
 32559                           ;incstack = 0
 32560  0028FE  0E0A               	movlw	10
 32561  002900  0101               	movlb	1	; () banked
 32562  002902  6F22               	movwf	__roundCounter& (0+255),b
 32563                           
 32564                           ;AES.c: 256: _rcon = 0x01;
 32565  002904  0E01               	movlw	1
 32566  002906  6E46               	movwf	__rcon,c
 32567                           
 32568                           ;AES.c: 259: for(i=0;i<16;i++)
 32569  002908  0E00               	movlw	0
 32570  00290A  0100               	movlb	0	; () banked
 32571  00290C  6F7C               	movwf	AESEncode@i& (0+255),b
 32572  00290E                     l13127:
 32573                           
 32574                           ; BSR set to: 0
 32575  00290E  0E0F               	movlw	15
 32576  002910  657C               	cpfsgt	AESEncode@i& (0+255),b
 32577  002912  D001               	goto	l303
 32578  002914  D016               	goto	u14400
 32579  002916                     l303:
 32580                           
 32581                           ; BSR set to: 0
 32582                           ;AES.c: 260: {
 32583                           ;AES.c: 261: block[i] ^= key[i];
 32584                           
 32585                           ; BSR set to: 0
 32586  002916  517C               	movf	AESEncode@i& (0+255),w,b
 32587  002918  0D01               	mullw	1
 32588  00291A  50F3               	movf	prodl,w,c
 32589  00291C  2568               	addwf	AESEncode@key& (0+255),w,b
 32590  00291E  6ED9               	movwf	fsr2l,c
 32591  002920  50F4               	movf	prodh,w,c
 32592  002922  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
 32593  002924  6EDA               	movwf	fsr2h,c
 32594  002926  50DF               	movf	indf2,w,c
 32595  002928  6F6A               	movwf	??_AESEncode& (0+255),b
 32596  00292A  517C               	movf	AESEncode@i& (0+255),w,b
 32597  00292C  0D01               	mullw	1
 32598  00292E  50F3               	movf	prodl,w,c
 32599  002930  2566               	addwf	AESEncode@block& (0+255),w,b
 32600  002932  6ED9               	movwf	fsr2l,c
 32601  002934  50F4               	movf	prodh,w,c
 32602  002936  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32603  002938  6EDA               	movwf	fsr2h,c
 32604  00293A  516A               	movf	??_AESEncode& (0+255),w,b
 32605  00293C  1ADF               	xorwf	indf2,f,c
 32606                           
 32607                           ; BSR set to: 0
 32608  00293E  2B7C               	incf	AESEncode@i& (0+255),f,b
 32609  002940  D7E6               	goto	l13127
 32610  002942                     u14400:
 32611                           
 32612                           ;AES.c: 265: {
 32613                           ;AES.c: 268: for(i=0;i<16;i++)
 32614                           
 32615                           ; BSR set to: 0
 32616                           
 32617                           ;AES.c: 262: }
 32618                           ;AES.c: 264: do
 32619                           
 32620                           ; BSR set to: 0
 32621  002942  0E00               	movlw	0
 32622  002944  0100               	movlb	0	; () banked
 32623  002946  6F7C               	movwf	AESEncode@i& (0+255),b
 32624  002948                     l13139:
 32625                           
 32626                           ; BSR set to: 0
 32627  002948  0E0F               	movlw	15
 32628  00294A  657C               	cpfsgt	AESEncode@i& (0+255),b
 32629  00294C  D001               	goto	l306
 32630  00294E  D022               	goto	u14420
 32631  002950                     l306:
 32632                           
 32633                           ; BSR set to: 0
 32634                           ;AES.c: 269: {
 32635                           ;AES.c: 270: block[i]=STable[block[i]];
 32636                           
 32637                           ; BSR set to: 0
 32638  002950  517C               	movf	AESEncode@i& (0+255),w,b
 32639  002952  0D01               	mullw	1
 32640  002954  50F3               	movf	prodl,w,c
 32641  002956  2566               	addwf	AESEncode@block& (0+255),w,b
 32642  002958  6ED9               	movwf	fsr2l,c
 32643  00295A  50F4               	movf	prodh,w,c
 32644  00295C  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32645  00295E  6EDA               	movwf	fsr2h,c
 32646  002960  50DF               	movf	indf2,w,c
 32647  002962  6F6A               	movwf	??_AESEncode& (0+255),b
 32648  002964  516A               	movf	??_AESEncode& (0+255),w,b
 32649  002966  0D01               	mullw	1
 32650  002968  0E49               	movlw	low _STable
 32651  00296A  24F3               	addwf	prodl,w,c
 32652  00296C  6EF6               	movwf	tblptrl,c
 32653  00296E  0EFE               	movlw	high _STable
 32654  002970  20F4               	addwfc	prodh,w,c
 32655  002972  6EF7               	movwf	tblptrh,c
 32656  002974                     	if	1	;There are 3 active tblptr bytes
 32657  002974  6AF8               	clrf	tblptru,c
 32658  002976  0E00               	movlw	low (__mediumconst shr (0+16))
 32659  002978  22F8               	addwfc	tblptru,f,c
 32660  00297A                     	endif
 32661  00297A  517C               	movf	AESEncode@i& (0+255),w,b
 32662  00297C  0D01               	mullw	1
 32663  00297E  50F3               	movf	prodl,w,c
 32664  002980  2566               	addwf	AESEncode@block& (0+255),w,b
 32665  002982  6ED9               	movwf	fsr2l,c
 32666  002984  50F4               	movf	prodh,w,c
 32667  002986  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32668  002988  6EDA               	movwf	fsr2h,c
 32669  00298A  0008               	tblrd		*
 32670  00298C  CFF5 FFDF          	movff	tablat,indf2
 32671                           
 32672                           ; BSR set to: 0
 32673  002990  2B7C               	incf	AESEncode@i& (0+255),f,b
 32674  002992  D7DA               	goto	l13139
 32675  002994                     u14420:
 32676                           
 32677                           ; BSR set to: 0
 32678                           ;AES.c: 271: }
 32679                           ;AES.c: 274: EncodeShiftRow(block);
 32680                           
 32681                           ; BSR set to: 0
 32682  002994  C066  F060         	movff	AESEncode@block,EncodeShiftRow@stateTable
 32683  002998  C067  F061         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 32684  00299C  EC71  F028         	call	_EncodeShiftRow	;wreg free
 32685                           
 32686                           ;AES.c: 277: if(_roundCounter != 1)
 32687  0029A0  0101               	movlb	1	; () banked
 32688  0029A2  0522               	decf	__roundCounter& (0+255),w,b
 32689  0029A4  B4D8               	btfsc	status,2,c
 32690  0029A6  D127               	goto	u14480
 32691                           
 32692                           ; BSR set to: 1
 32693                           ;AES.c: 278: {
 32694                           ;AES.c: 279: unsigned char aux,aux1,aux2,aux3;
 32695                           ;AES.c: 281: for(i=0;i<16;i+=4)
 32696  0029A8  0E00               	movlw	0
 32697  0029AA  0100               	movlb	0	; () banked
 32698  0029AC  6F7C               	movwf	AESEncode@i& (0+255),b
 32699  0029AE                     l13155:
 32700                           
 32701                           ; BSR set to: 0
 32702  0029AE  0E0F               	movlw	15
 32703  0029B0  657C               	cpfsgt	AESEncode@i& (0+255),b
 32704  0029B2  D001               	goto	l309
 32705  0029B4  D120               	goto	u14480
 32706  0029B6                     l309:
 32707                           
 32708                           ; BSR set to: 0
 32709                           ;AES.c: 282: {
 32710                           ;AES.c: 283: aux1= block[i+0] ^ block[i+1];
 32711                           
 32712                           ; BSR set to: 0
 32713  0029B6  517C               	movf	AESEncode@i& (0+255),w,b
 32714  0029B8  6F6A               	movwf	??_AESEncode& (0+255),b
 32715  0029BA  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32716  0029BC  0E01               	movlw	1
 32717  0029BE  276A               	addwf	??_AESEncode& (0+255),f,b
 32718  0029C0  0E00               	movlw	0
 32719  0029C2  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 32720  0029C4  516A               	movf	??_AESEncode& (0+255),w,b
 32721  0029C6  2566               	addwf	AESEncode@block& (0+255),w,b
 32722  0029C8  6ED9               	movwf	fsr2l,c
 32723  0029CA  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32724  0029CC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32725  0029CE  6EDA               	movwf	fsr2h,c
 32726  0029D0  50DF               	movf	indf2,w,c
 32727  0029D2  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 32728  0029D4  517C               	movf	AESEncode@i& (0+255),w,b
 32729  0029D6  2566               	addwf	AESEncode@block& (0+255),w,b
 32730  0029D8  6ED9               	movwf	fsr2l,c
 32731  0029DA  0E00               	movlw	0
 32732  0029DC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32733  0029DE  6EDA               	movwf	fsr2h,c
 32734  0029E0  50DF               	movf	indf2,w,c
 32735  0029E2  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 32736  0029E4  6F7A               	movwf	AESEncode@aux1& (0+255),b
 32737                           
 32738                           ;AES.c: 284: aux3= block[i+2]^block[i+3];
 32739  0029E6  517C               	movf	AESEncode@i& (0+255),w,b
 32740  0029E8  6F6A               	movwf	??_AESEncode& (0+255),b
 32741  0029EA  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32742  0029EC  0E03               	movlw	3
 32743  0029EE  276A               	addwf	??_AESEncode& (0+255),f,b
 32744  0029F0  0E00               	movlw	0
 32745  0029F2  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 32746  0029F4  516A               	movf	??_AESEncode& (0+255),w,b
 32747  0029F6  2566               	addwf	AESEncode@block& (0+255),w,b
 32748  0029F8  6ED9               	movwf	fsr2l,c
 32749  0029FA  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32750  0029FC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32751  0029FE  6EDA               	movwf	fsr2h,c
 32752  002A00  50DF               	movf	indf2,w,c
 32753  002A02  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 32754  002A04  517C               	movf	AESEncode@i& (0+255),w,b
 32755  002A06  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
 32756  002A08  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
 32757  002A0A  0E02               	movlw	2
 32758  002A0C  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
 32759  002A0E  0E00               	movlw	0
 32760  002A10  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
 32761  002A12  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 32762  002A14  2566               	addwf	AESEncode@block& (0+255),w,b
 32763  002A16  6ED9               	movwf	fsr2l,c
 32764  002A18  516E               	movf	(??_AESEncode+4)& (0+255),w,b
 32765  002A1A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32766  002A1C  6EDA               	movwf	fsr2h,c
 32767  002A1E  50DF               	movf	indf2,w,c
 32768  002A20  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 32769  002A22  6F7B               	movwf	AESEncode@aux3& (0+255),b
 32770                           
 32771                           ; BSR set to: 0
 32772                           ;AES.c: 285: aux = aux1 ^ aux3;
 32773  002A24  517A               	movf	AESEncode@aux1& (0+255),w,b
 32774  002A26  197B               	xorwf	AESEncode@aux3& (0+255),w,b
 32775  002A28  6F78               	movwf	AESEncode@aux& (0+255),b
 32776                           
 32777                           ; BSR set to: 0
 32778                           ;AES.c: 286: aux2= block[i+2]^block[i+1];
 32779  002A2A  517C               	movf	AESEncode@i& (0+255),w,b
 32780  002A2C  6F6A               	movwf	??_AESEncode& (0+255),b
 32781  002A2E  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32782  002A30  0E01               	movlw	1
 32783  002A32  276A               	addwf	??_AESEncode& (0+255),f,b
 32784  002A34  0E00               	movlw	0
 32785  002A36  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 32786  002A38  516A               	movf	??_AESEncode& (0+255),w,b
 32787  002A3A  2566               	addwf	AESEncode@block& (0+255),w,b
 32788  002A3C  6ED9               	movwf	fsr2l,c
 32789  002A3E  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32790  002A40  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32791  002A42  6EDA               	movwf	fsr2h,c
 32792  002A44  50DF               	movf	indf2,w,c
 32793  002A46  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 32794  002A48  517C               	movf	AESEncode@i& (0+255),w,b
 32795  002A4A  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
 32796  002A4C  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
 32797  002A4E  0E02               	movlw	2
 32798  002A50  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
 32799  002A52  0E00               	movlw	0
 32800  002A54  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
 32801  002A56  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 32802  002A58  2566               	addwf	AESEncode@block& (0+255),w,b
 32803  002A5A  6ED9               	movwf	fsr2l,c
 32804  002A5C  516E               	movf	(??_AESEncode+4)& (0+255),w,b
 32805  002A5E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32806  002A60  6EDA               	movwf	fsr2h,c
 32807  002A62  50DF               	movf	indf2,w,c
 32808  002A64  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 32809  002A66  6F79               	movwf	AESEncode@aux2& (0+255),b
 32810                           
 32811                           ;AES.c: 288: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 32812  002A68  0E7F               	movlw	127
 32813  002A6A  657A               	cpfsgt	AESEncode@aux1& (0+255),b
 32814  002A6C  D00C               	goto	l312
 32815                           
 32816                           ; BSR set to: 0
 32817  002A6E  0E1B               	movlw	27
 32818  002A70  C07A  F06A         	movff	AESEncode@aux1,??_AESEncode
 32819  002A74  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32820  002A76  90D8               	bcf	status,0,c
 32821  002A78  376A               	rlcf	??_AESEncode& (0+255),f,b
 32822  002A7A  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 32823  002A7C  196A               	xorwf	??_AESEncode& (0+255),w,b
 32824  002A7E  6F72               	movwf	_AESEncode$509& (0+255),b
 32825  002A80  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32826  002A82  6F73               	movwf	(_AESEncode$509+1)& (0+255),b
 32827  002A84  D005               	goto	l314
 32828  002A86                     l312:
 32829                           
 32830                           ; BSR set to: 0
 32831                           
 32832                           ; BSR set to: 0
 32833  002A86  90D8               	bcf	status,0,c
 32834  002A88  357A               	rlcf	AESEncode@aux1& (0+255),w,b
 32835  002A8A  6F72               	movwf	_AESEncode$509& (0+255),b
 32836  002A8C  6B73               	clrf	(_AESEncode$509+1)& (0+255),b
 32837  002A8E  3773               	rlcf	(_AESEncode$509+1)& (0+255),f,b
 32838  002A90                     l314:
 32839                           
 32840                           ; BSR set to: 0
 32841                           
 32842                           ; BSR set to: 0
 32843  002A90  C072  F07A         	movff	_AESEncode$509,AESEncode@aux1
 32844                           
 32845                           ;AES.c: 289: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 32846  002A94  0E7F               	movlw	127
 32847  002A96  6579               	cpfsgt	AESEncode@aux2& (0+255),b
 32848  002A98  D00C               	goto	l316
 32849                           
 32850                           ; BSR set to: 0
 32851  002A9A  0E1B               	movlw	27
 32852  002A9C  C079  F06A         	movff	AESEncode@aux2,??_AESEncode
 32853  002AA0  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32854  002AA2  90D8               	bcf	status,0,c
 32855  002AA4  376A               	rlcf	??_AESEncode& (0+255),f,b
 32856  002AA6  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 32857  002AA8  196A               	xorwf	??_AESEncode& (0+255),w,b
 32858  002AAA  6F74               	movwf	_AESEncode$510& (0+255),b
 32859  002AAC  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32860  002AAE  6F75               	movwf	(_AESEncode$510+1)& (0+255),b
 32861  002AB0  D005               	goto	l318
 32862  002AB2                     l316:
 32863                           
 32864                           ; BSR set to: 0
 32865                           
 32866                           ; BSR set to: 0
 32867  002AB2  90D8               	bcf	status,0,c
 32868  002AB4  3579               	rlcf	AESEncode@aux2& (0+255),w,b
 32869  002AB6  6F74               	movwf	_AESEncode$510& (0+255),b
 32870  002AB8  6B75               	clrf	(_AESEncode$510+1)& (0+255),b
 32871  002ABA  3775               	rlcf	(_AESEncode$510+1)& (0+255),f,b
 32872  002ABC                     l318:
 32873                           
 32874                           ; BSR set to: 0
 32875                           
 32876                           ; BSR set to: 0
 32877  002ABC  C074  F079         	movff	_AESEncode$510,AESEncode@aux2
 32878                           
 32879                           ;AES.c: 290: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 32880  002AC0  0E7F               	movlw	127
 32881  002AC2  657B               	cpfsgt	AESEncode@aux3& (0+255),b
 32882  002AC4  D00C               	goto	l320
 32883                           
 32884                           ; BSR set to: 0
 32885  002AC6  0E1B               	movlw	27
 32886  002AC8  C07B  F06A         	movff	AESEncode@aux3,??_AESEncode
 32887  002ACC  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32888  002ACE  90D8               	bcf	status,0,c
 32889  002AD0  376A               	rlcf	??_AESEncode& (0+255),f,b
 32890  002AD2  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 32891  002AD4  196A               	xorwf	??_AESEncode& (0+255),w,b
 32892  002AD6  6F76               	movwf	_AESEncode$511& (0+255),b
 32893  002AD8  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32894  002ADA  6F77               	movwf	(_AESEncode$511+1)& (0+255),b
 32895  002ADC  D005               	goto	l322
 32896  002ADE                     l320:
 32897                           
 32898                           ; BSR set to: 0
 32899                           
 32900                           ; BSR set to: 0
 32901  002ADE  90D8               	bcf	status,0,c
 32902  002AE0  357B               	rlcf	AESEncode@aux3& (0+255),w,b
 32903  002AE2  6F76               	movwf	_AESEncode$511& (0+255),b
 32904  002AE4  6B77               	clrf	(_AESEncode$511+1)& (0+255),b
 32905  002AE6  3777               	rlcf	(_AESEncode$511+1)& (0+255),f,b
 32906  002AE8                     l322:
 32907                           
 32908                           ; BSR set to: 0
 32909                           
 32910                           ; BSR set to: 0
 32911  002AE8  C076  F07B         	movff	_AESEncode$511,AESEncode@aux3
 32912                           
 32913                           ; BSR set to: 0
 32914                           ;AES.c: 292: block[i+0]= aux^aux1^block[i+0];
 32915  002AEC  517C               	movf	AESEncode@i& (0+255),w,b
 32916  002AEE  2566               	addwf	AESEncode@block& (0+255),w,b
 32917  002AF0  6ED9               	movwf	fsr2l,c
 32918  002AF2  0E00               	movlw	0
 32919  002AF4  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32920  002AF6  6EDA               	movwf	fsr2h,c
 32921  002AF8  517C               	movf	AESEncode@i& (0+255),w,b
 32922  002AFA  2566               	addwf	AESEncode@block& (0+255),w,b
 32923  002AFC  6EE9               	movwf	fsr0l,c
 32924  002AFE  0E00               	movlw	0
 32925  002B00  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32926  002B02  6EEA               	movwf	fsr0h,c
 32927  002B04  50EF               	movf	indf0,w,c
 32928  002B06  1978               	xorwf	AESEncode@aux& (0+255),w,b
 32929  002B08  197A               	xorwf	AESEncode@aux1& (0+255),w,b
 32930  002B0A  6EDF               	movwf	indf2,c
 32931                           
 32932                           ; BSR set to: 0
 32933                           ;AES.c: 293: block[i+1]= aux^aux2^block[i+1];
 32934  002B0C  517C               	movf	AESEncode@i& (0+255),w,b
 32935  002B0E  6F6A               	movwf	??_AESEncode& (0+255),b
 32936  002B10  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32937  002B12  0E01               	movlw	1
 32938  002B14  276A               	addwf	??_AESEncode& (0+255),f,b
 32939  002B16  0E00               	movlw	0
 32940  002B18  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 32941  002B1A  516A               	movf	??_AESEncode& (0+255),w,b
 32942  002B1C  2566               	addwf	AESEncode@block& (0+255),w,b
 32943  002B1E  6ED9               	movwf	fsr2l,c
 32944  002B20  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32945  002B22  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32946  002B24  6EDA               	movwf	fsr2h,c
 32947  002B26  517C               	movf	AESEncode@i& (0+255),w,b
 32948  002B28  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 32949  002B2A  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 32950  002B2C  0E01               	movlw	1
 32951  002B2E  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 32952  002B30  0E00               	movlw	0
 32953  002B32  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 32954  002B34  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 32955  002B36  2566               	addwf	AESEncode@block& (0+255),w,b
 32956  002B38  6EE9               	movwf	fsr0l,c
 32957  002B3A  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 32958  002B3C  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32959  002B3E  6EEA               	movwf	fsr0h,c
 32960  002B40  50EF               	movf	indf0,w,c
 32961  002B42  1978               	xorwf	AESEncode@aux& (0+255),w,b
 32962  002B44  1979               	xorwf	AESEncode@aux2& (0+255),w,b
 32963  002B46  6EDF               	movwf	indf2,c
 32964                           
 32965                           ; BSR set to: 0
 32966                           ;AES.c: 294: block[i+2]= aux^aux3^block[i+2];
 32967  002B48  517C               	movf	AESEncode@i& (0+255),w,b
 32968  002B4A  6F6A               	movwf	??_AESEncode& (0+255),b
 32969  002B4C  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32970  002B4E  0E02               	movlw	2
 32971  002B50  276A               	addwf	??_AESEncode& (0+255),f,b
 32972  002B52  0E00               	movlw	0
 32973  002B54  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 32974  002B56  516A               	movf	??_AESEncode& (0+255),w,b
 32975  002B58  2566               	addwf	AESEncode@block& (0+255),w,b
 32976  002B5A  6ED9               	movwf	fsr2l,c
 32977  002B5C  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32978  002B5E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32979  002B60  6EDA               	movwf	fsr2h,c
 32980  002B62  517C               	movf	AESEncode@i& (0+255),w,b
 32981  002B64  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 32982  002B66  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 32983  002B68  0E02               	movlw	2
 32984  002B6A  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 32985  002B6C  0E00               	movlw	0
 32986  002B6E  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 32987  002B70  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 32988  002B72  2566               	addwf	AESEncode@block& (0+255),w,b
 32989  002B74  6EE9               	movwf	fsr0l,c
 32990  002B76  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 32991  002B78  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32992  002B7A  6EEA               	movwf	fsr0h,c
 32993  002B7C  50EF               	movf	indf0,w,c
 32994  002B7E  1978               	xorwf	AESEncode@aux& (0+255),w,b
 32995  002B80  197B               	xorwf	AESEncode@aux3& (0+255),w,b
 32996  002B82  6EDF               	movwf	indf2,c
 32997                           
 32998                           ; BSR set to: 0
 32999                           ;AES.c: 295: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 33000  002B84  517C               	movf	AESEncode@i& (0+255),w,b
 33001  002B86  6F6A               	movwf	??_AESEncode& (0+255),b
 33002  002B88  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 33003  002B8A  0E03               	movlw	3
 33004  002B8C  276A               	addwf	??_AESEncode& (0+255),f,b
 33005  002B8E  0E00               	movlw	0
 33006  002B90  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 33007  002B92  516A               	movf	??_AESEncode& (0+255),w,b
 33008  002B94  2566               	addwf	AESEncode@block& (0+255),w,b
 33009  002B96  6ED9               	movwf	fsr2l,c
 33010  002B98  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 33011  002B9A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33012  002B9C  6EDA               	movwf	fsr2h,c
 33013  002B9E  517C               	movf	AESEncode@i& (0+255),w,b
 33014  002BA0  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 33015  002BA2  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 33016  002BA4  0E02               	movlw	2
 33017  002BA6  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 33018  002BA8  0E00               	movlw	0
 33019  002BAA  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 33020  002BAC  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 33021  002BAE  2566               	addwf	AESEncode@block& (0+255),w,b
 33022  002BB0  6EE9               	movwf	fsr0l,c
 33023  002BB2  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 33024  002BB4  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33025  002BB6  6EEA               	movwf	fsr0h,c
 33026  002BB8  50EF               	movf	indf0,w,c
 33027  002BBA  6F6E               	movwf	(??_AESEncode+4)& (0+255),b
 33028  002BBC  517C               	movf	AESEncode@i& (0+255),w,b
 33029  002BBE  6F6F               	movwf	(??_AESEncode+5)& (0+255),b
 33030  002BC0  6B70               	clrf	(??_AESEncode+6)& (0+255),b
 33031  002BC2  0E01               	movlw	1
 33032  002BC4  276F               	addwf	(??_AESEncode+5)& (0+255),f,b
 33033  002BC6  0E00               	movlw	0
 33034  002BC8  2370               	addwfc	(??_AESEncode+6)& (0+255),f,b
 33035  002BCA  516F               	movf	(??_AESEncode+5)& (0+255),w,b
 33036  002BCC  2566               	addwf	AESEncode@block& (0+255),w,b
 33037  002BCE  6EE9               	movwf	fsr0l,c
 33038  002BD0  5170               	movf	(??_AESEncode+6)& (0+255),w,b
 33039  002BD2  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33040  002BD4  6EEA               	movwf	fsr0h,c
 33041  002BD6  50EF               	movf	indf0,w,c
 33042  002BD8  6F71               	movwf	(??_AESEncode+7)& (0+255),b
 33043  002BDA  517C               	movf	AESEncode@i& (0+255),w,b
 33044  002BDC  2566               	addwf	AESEncode@block& (0+255),w,b
 33045  002BDE  6EE9               	movwf	fsr0l,c
 33046  002BE0  0E00               	movlw	0
 33047  002BE2  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33048  002BE4  6EEA               	movwf	fsr0h,c
 33049  002BE6  50EF               	movf	indf0,w,c
 33050  002BE8  1971               	xorwf	(??_AESEncode+7)& (0+255),w,b
 33051  002BEA  196E               	xorwf	(??_AESEncode+4)& (0+255),w,b
 33052  002BEC  1978               	xorwf	AESEncode@aux& (0+255),w,b
 33053  002BEE  6EDF               	movwf	indf2,c
 33054  002BF0  0E04               	movlw	4
 33055  002BF2  277C               	addwf	AESEncode@i& (0+255),f,b
 33056  002BF4  D6DC               	goto	l13155
 33057  002BF6                     u14480:
 33058                           
 33059                           ;AES.c: 296: }
 33060                           ;AES.c: 297: }
 33061                           ;AES.c: 299: EncKeySchedule(key);
 33062                           
 33063                           ; BSR set to: 0
 33064                           
 33065                           ; BSR set to: 0
 33066  002BF6  C068  F060         	movff	AESEncode@key,EncKeySchedule@key
 33067  002BFA  C069  F061         	movff	AESEncode@key+1,EncKeySchedule@key+1
 33068  002BFE  EC86  F01A         	call	_EncKeySchedule	;wreg free
 33069                           
 33070                           ;AES.c: 302: for(i=0;i<16;i++)
 33071  002C02  0E00               	movlw	0
 33072  002C04  0100               	movlb	0	; () banked
 33073  002C06  6F7C               	movwf	AESEncode@i& (0+255),b
 33074  002C08                     l13195:
 33075                           
 33076                           ; BSR set to: 0
 33077  002C08  0E0F               	movlw	15
 33078  002C0A  657C               	cpfsgt	AESEncode@i& (0+255),b
 33079  002C0C  D001               	goto	l323
 33080  002C0E  D016               	goto	u14500
 33081  002C10                     l323:
 33082                           
 33083                           ; BSR set to: 0
 33084                           ;AES.c: 303: {
 33085                           ;AES.c: 304: block[i] ^= key[i];
 33086                           
 33087                           ; BSR set to: 0
 33088  002C10  517C               	movf	AESEncode@i& (0+255),w,b
 33089  002C12  0D01               	mullw	1
 33090  002C14  50F3               	movf	prodl,w,c
 33091  002C16  2568               	addwf	AESEncode@key& (0+255),w,b
 33092  002C18  6ED9               	movwf	fsr2l,c
 33093  002C1A  50F4               	movf	prodh,w,c
 33094  002C1C  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
 33095  002C1E  6EDA               	movwf	fsr2h,c
 33096  002C20  50DF               	movf	indf2,w,c
 33097  002C22  6F6A               	movwf	??_AESEncode& (0+255),b
 33098  002C24  517C               	movf	AESEncode@i& (0+255),w,b
 33099  002C26  0D01               	mullw	1
 33100  002C28  50F3               	movf	prodl,w,c
 33101  002C2A  2566               	addwf	AESEncode@block& (0+255),w,b
 33102  002C2C  6ED9               	movwf	fsr2l,c
 33103  002C2E  50F4               	movf	prodh,w,c
 33104  002C30  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33105  002C32  6EDA               	movwf	fsr2h,c
 33106  002C34  516A               	movf	??_AESEncode& (0+255),w,b
 33107  002C36  1ADF               	xorwf	indf2,f,c
 33108                           
 33109                           ; BSR set to: 0
 33110  002C38  2B7C               	incf	AESEncode@i& (0+255),f,b
 33111  002C3A  D7E6               	goto	l13195
 33112  002C3C                     u14500:
 33113                           
 33114                           ; BSR set to: 0
 33115                           ;AES.c: 305: }
 33116                           ;AES.c: 307: _roundCounter--;
 33117                           
 33118                           ; BSR set to: 0
 33119  002C3C  0101               	movlb	1	; () banked
 33120  002C3E  0722               	decf	__roundCounter& (0+255),f,b
 33121                           
 33122                           ; BSR set to: 1
 33123                           ;AES.c: 308: }
 33124                           ;AES.c: 309: while(_roundCounter !=0);
 33125  002C40  5122               	movf	__roundCounter& (0+255),w,b
 33126  002C42  B4D8               	btfsc	status,2,c
 33127  002C44  0012               	return	
 33128  002C46  D67D               	goto	u14400
 33129  002C48                     __end_of_AESEncode:
 33130                           	opt stack 0
 33131                           tosu	equ	0xFFF
 33132                           tosh	equ	0xFFE
 33133                           tosl	equ	0xFFD
 33134                           pclath	equ	0xFFA
 33135                           tblptru	equ	0xFF8
 33136                           tblptrh	equ	0xFF7
 33137                           tblptrl	equ	0xFF6
 33138                           tablat	equ	0xFF5
 33139                           prodh	equ	0xFF4
 33140                           prodl	equ	0xFF3
 33141                           intcon	equ	0xFF2
 33142                           intcon2	equ	0xFF1
 33143                           intcon3	equ	0xFF0
 33144                           indf0	equ	0xFEF
 33145                           postinc0	equ	0xFEE
 33146                           plusw0	equ	0xFEB
 33147                           fsr0h	equ	0xFEA
 33148                           fsr0l	equ	0xFE9
 33149                           wreg	equ	0xFE8
 33150                           postinc1	equ	0xFE6
 33151                           postdec1	equ	0xFE5
 33152                           plusw1	equ	0xFE3
 33153                           fsr1h	equ	0xFE2
 33154                           fsr1l	equ	0xFE1
 33155                           indf2	equ	0xFDF
 33156                           postinc2	equ	0xFDE
 33157                           postdec2	equ	0xFDD
 33158                           plusw2	equ	0xFDB
 33159                           fsr2h	equ	0xFDA
 33160                           fsr2l	equ	0xFD9
 33161                           status	equ	0xFD8
 33162                           
 33163 ;; *************** function _EncodeShiftRow *****************
 33164 ;; Defined at:
 33165 ;;		line 385 in file "mcc_generated_files/LoRaWAN/AES.c"
 33166 ;; Parameters:    Size  Location     Type
 33167 ;;  stateTable      2    0[BANK0 ] PTR unsigned char 
 33168 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 33169 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 33170 ;; Auto vars:     Size  Location     Type
 33171 ;;  temp            1    2[BANK0 ] unsigned char 
 33172 ;; Return value:  Size  Location     Type
 33173 ;;                  1    wreg      void 
 33174 ;; Registers used:
 33175 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 33176 ;; Tracked objects:
 33177 ;;		On entry : 0/0
 33178 ;;		On exit  : 0/0
 33179 ;;		Unchanged: 0/0
 33180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33181 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33184 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33185 ;;Total ram usage:        3 bytes
 33186 ;; Hardware stack levels used:    1
 33187 ;; Hardware stack levels required when called:    7
 33188 ;; This function calls:
 33189 ;;		Nothing
 33190 ;; This function is called by:
 33191 ;;		_AESEncode
 33192 ;; This function uses a non-reentrant model
 33193 ;;
 33194                           
 33195                           	psect	text157
 33196  0050E2                     __ptext157:
 33197                           	opt stack 0
 33198  0050E2                     _EncodeShiftRow:
 33199                           	opt stack 18
 33200                           
 33201                           ;AES.c: 387: unsigned char temp;
 33202                           ;AES.c: 392: temp=stateTable[1];
 33203                           
 33204                           ; BSR set to: 1
 33205                           ;incstack = 0
 33206  0050E2  0100               	movlb	0	; () banked
 33207  0050E4  EE20 F001          	lfsr	2,1
 33208  0050E8  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33209  0050EA  26D9               	addwf	fsr2l,f,c
 33210  0050EC  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33211  0050EE  22DA               	addwfc	fsr2h,f,c
 33212  0050F0  50DF               	movf	indf2,w,c
 33213  0050F2  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33214                           
 33215                           ; BSR set to: 0
 33216                           ;AES.c: 393: stateTable[1]=stateTable[5];
 33217  0050F4  EE20 F005          	lfsr	2,5
 33218  0050F8  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33219  0050FA  26D9               	addwf	fsr2l,f,c
 33220  0050FC  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33221  0050FE  22DA               	addwfc	fsr2h,f,c
 33222  005100  EE00 F001          	lfsr	0,1
 33223  005104  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33224  005106  26E9               	addwf	fsr0l,f,c
 33225  005108  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33226  00510A  22EA               	addwfc	fsr0h,f,c
 33227  00510C  CFDF FFEF          	movff	indf2,indf0
 33228                           
 33229                           ; BSR set to: 0
 33230                           ;AES.c: 394: stateTable[5]=stateTable[9];
 33231  005110  EE20 F009          	lfsr	2,9
 33232  005114  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33233  005116  26D9               	addwf	fsr2l,f,c
 33234  005118  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33235  00511A  22DA               	addwfc	fsr2h,f,c
 33236  00511C  EE00 F005          	lfsr	0,5
 33237  005120  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33238  005122  26E9               	addwf	fsr0l,f,c
 33239  005124  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33240  005126  22EA               	addwfc	fsr0h,f,c
 33241  005128  CFDF FFEF          	movff	indf2,indf0
 33242                           
 33243                           ; BSR set to: 0
 33244                           ;AES.c: 395: stateTable[9]=stateTable[13];
 33245  00512C  EE20 F00D          	lfsr	2,13
 33246  005130  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33247  005132  26D9               	addwf	fsr2l,f,c
 33248  005134  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33249  005136  22DA               	addwfc	fsr2h,f,c
 33250  005138  EE00 F009          	lfsr	0,9
 33251  00513C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33252  00513E  26E9               	addwf	fsr0l,f,c
 33253  005140  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33254  005142  22EA               	addwfc	fsr0h,f,c
 33255  005144  CFDF FFEF          	movff	indf2,indf0
 33256                           
 33257                           ; BSR set to: 0
 33258                           ;AES.c: 396: stateTable[13]=temp;
 33259  005148  EE20 F00D          	lfsr	2,13
 33260  00514C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33261  00514E  26D9               	addwf	fsr2l,f,c
 33262  005150  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33263  005152  22DA               	addwfc	fsr2h,f,c
 33264  005154  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33265                           
 33266                           ; BSR set to: 0
 33267                           ;AES.c: 399: temp=stateTable[2];
 33268  005158  EE20 F002          	lfsr	2,2
 33269  00515C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33270  00515E  26D9               	addwf	fsr2l,f,c
 33271  005160  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33272  005162  22DA               	addwfc	fsr2h,f,c
 33273  005164  50DF               	movf	indf2,w,c
 33274  005166  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33275                           
 33276                           ; BSR set to: 0
 33277                           ;AES.c: 400: stateTable[2]=stateTable[10];
 33278  005168  EE20 F00A          	lfsr	2,10
 33279  00516C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33280  00516E  26D9               	addwf	fsr2l,f,c
 33281  005170  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33282  005172  22DA               	addwfc	fsr2h,f,c
 33283  005174  EE00 F002          	lfsr	0,2
 33284  005178  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33285  00517A  26E9               	addwf	fsr0l,f,c
 33286  00517C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33287  00517E  22EA               	addwfc	fsr0h,f,c
 33288  005180  CFDF FFEF          	movff	indf2,indf0
 33289                           
 33290                           ;AES.c: 401: stateTable[10]=temp;
 33291  005184  EE20 F00A          	lfsr	2,10
 33292  005188  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33293  00518A  26D9               	addwf	fsr2l,f,c
 33294  00518C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33295  00518E  22DA               	addwfc	fsr2h,f,c
 33296  005190  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33297                           
 33298                           ;AES.c: 402: temp=stateTable[14];
 33299  005194  EE20 F00E          	lfsr	2,14
 33300  005198  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33301  00519A  26D9               	addwf	fsr2l,f,c
 33302  00519C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33303  00519E  22DA               	addwfc	fsr2h,f,c
 33304  0051A0  50DF               	movf	indf2,w,c
 33305  0051A2  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33306                           
 33307                           ; BSR set to: 0
 33308                           ;AES.c: 403: stateTable[14]=stateTable[6];
 33309  0051A4  EE20 F006          	lfsr	2,6
 33310  0051A8  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33311  0051AA  26D9               	addwf	fsr2l,f,c
 33312  0051AC  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33313  0051AE  22DA               	addwfc	fsr2h,f,c
 33314  0051B0  EE00 F00E          	lfsr	0,14
 33315  0051B4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33316  0051B6  26E9               	addwf	fsr0l,f,c
 33317  0051B8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33318  0051BA  22EA               	addwfc	fsr0h,f,c
 33319  0051BC  CFDF FFEF          	movff	indf2,indf0
 33320                           
 33321                           ; BSR set to: 0
 33322                           ;AES.c: 404: stateTable[6]=temp;
 33323  0051C0  EE20 F006          	lfsr	2,6
 33324  0051C4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33325  0051C6  26D9               	addwf	fsr2l,f,c
 33326  0051C8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33327  0051CA  22DA               	addwfc	fsr2h,f,c
 33328  0051CC  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33329                           
 33330                           ; BSR set to: 0
 33331                           ;AES.c: 407: temp=stateTable[3];
 33332  0051D0  EE20 F003          	lfsr	2,3
 33333  0051D4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33334  0051D6  26D9               	addwf	fsr2l,f,c
 33335  0051D8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33336  0051DA  22DA               	addwfc	fsr2h,f,c
 33337  0051DC  50DF               	movf	indf2,w,c
 33338  0051DE  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33339                           
 33340                           ; BSR set to: 0
 33341                           ;AES.c: 408: stateTable[3]=stateTable[15];
 33342  0051E0  EE20 F00F          	lfsr	2,15
 33343  0051E4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33344  0051E6  26D9               	addwf	fsr2l,f,c
 33345  0051E8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33346  0051EA  22DA               	addwfc	fsr2h,f,c
 33347  0051EC  EE00 F003          	lfsr	0,3
 33348  0051F0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33349  0051F2  26E9               	addwf	fsr0l,f,c
 33350  0051F4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33351  0051F6  22EA               	addwfc	fsr0h,f,c
 33352  0051F8  CFDF FFEF          	movff	indf2,indf0
 33353                           
 33354                           ; BSR set to: 0
 33355                           ;AES.c: 409: stateTable[15]=stateTable[11];
 33356  0051FC  EE20 F00B          	lfsr	2,11
 33357  005200  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33358  005202  26D9               	addwf	fsr2l,f,c
 33359  005204  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33360  005206  22DA               	addwfc	fsr2h,f,c
 33361  005208  EE00 F00F          	lfsr	0,15
 33362  00520C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33363  00520E  26E9               	addwf	fsr0l,f,c
 33364  005210  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33365  005212  22EA               	addwfc	fsr0h,f,c
 33366  005214  CFDF FFEF          	movff	indf2,indf0
 33367                           
 33368                           ; BSR set to: 0
 33369                           ;AES.c: 410: stateTable[11]=stateTable[7];
 33370  005218  EE20 F007          	lfsr	2,7
 33371  00521C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33372  00521E  26D9               	addwf	fsr2l,f,c
 33373  005220  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33374  005222  22DA               	addwfc	fsr2h,f,c
 33375  005224  EE00 F00B          	lfsr	0,11
 33376  005228  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33377  00522A  26E9               	addwf	fsr0l,f,c
 33378  00522C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33379  00522E  22EA               	addwfc	fsr0h,f,c
 33380  005230  CFDF FFEF          	movff	indf2,indf0
 33381                           
 33382                           ;AES.c: 411: stateTable[7]=temp;
 33383  005234  EE20 F007          	lfsr	2,7
 33384  005238  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33385  00523A  26D9               	addwf	fsr2l,f,c
 33386  00523C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33387  00523E  22DA               	addwfc	fsr2h,f,c
 33388  005240  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33389                           
 33390                           ; BSR set to: 0
 33391  005244  0012               	return		;funcret
 33392  005246                     __end_of_EncodeShiftRow:
 33393                           	opt stack 0
 33394                           tosu	equ	0xFFF
 33395                           tosh	equ	0xFFE
 33396                           tosl	equ	0xFFD
 33397                           pclath	equ	0xFFA
 33398                           tblptru	equ	0xFF8
 33399                           tblptrh	equ	0xFF7
 33400                           tblptrl	equ	0xFF6
 33401                           tablat	equ	0xFF5
 33402                           prodh	equ	0xFF4
 33403                           prodl	equ	0xFF3
 33404                           intcon	equ	0xFF2
 33405                           intcon2	equ	0xFF1
 33406                           intcon3	equ	0xFF0
 33407                           indf0	equ	0xFEF
 33408                           postinc0	equ	0xFEE
 33409                           plusw0	equ	0xFEB
 33410                           fsr0h	equ	0xFEA
 33411                           fsr0l	equ	0xFE9
 33412                           wreg	equ	0xFE8
 33413                           postinc1	equ	0xFE6
 33414                           postdec1	equ	0xFE5
 33415                           plusw1	equ	0xFE3
 33416                           fsr1h	equ	0xFE2
 33417                           fsr1l	equ	0xFE1
 33418                           indf2	equ	0xFDF
 33419                           postinc2	equ	0xFDE
 33420                           postdec2	equ	0xFDD
 33421                           plusw2	equ	0xFDB
 33422                           fsr2h	equ	0xFDA
 33423                           fsr2l	equ	0xFD9
 33424                           status	equ	0xFD8
 33425                           
 33426 ;; *************** function _EncKeySchedule *****************
 33427 ;; Defined at:
 33428 ;;		line 337 in file "mcc_generated_files/LoRaWAN/AES.c"
 33429 ;; Parameters:    Size  Location     Type
 33430 ;;  key             2    0[BANK0 ] PTR unsigned char 
 33431 ;;		 -> AESEncodeLoRa@useKey(16), 
 33432 ;; Auto vars:     Size  Location     Type
 33433 ;;		None
 33434 ;; Return value:  Size  Location     Type
 33435 ;;                  1    wreg      void 
 33436 ;; Registers used:
 33437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 33438 ;; Tracked objects:
 33439 ;;		On entry : 0/0
 33440 ;;		On exit  : 0/0
 33441 ;;		Unchanged: 0/0
 33442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33443 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33444 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33445 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33446 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33447 ;;Total ram usage:        6 bytes
 33448 ;; Hardware stack levels used:    1
 33449 ;; Hardware stack levels required when called:    7
 33450 ;; This function calls:
 33451 ;;		Nothing
 33452 ;; This function is called by:
 33453 ;;		_AESEncode
 33454 ;; This function uses a non-reentrant model
 33455 ;;
 33456                           
 33457                           	psect	text158
 33458  00350C                     __ptext158:
 33459                           	opt stack 0
 33460  00350C                     _EncKeySchedule:
 33461                           	opt stack 18
 33462                           
 33463                           ;AES.c: 340: key[0]^=STable[key[13]];
 33464                           
 33465                           ; BSR set to: 0
 33466                           ;incstack = 0
 33467  00350C  0100               	movlb	0	; () banked
 33468  00350E  EE20 F00D          	lfsr	2,13
 33469  003512  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33470  003514  26D9               	addwf	fsr2l,f,c
 33471  003516  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33472  003518  22DA               	addwfc	fsr2h,f,c
 33473  00351A  50DF               	movf	indf2,w,c
 33474  00351C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33475  00351E  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33476  003520  0D01               	mullw	1
 33477  003522  0E49               	movlw	low _STable
 33478  003524  24F3               	addwf	prodl,w,c
 33479  003526  6EF6               	movwf	tblptrl,c
 33480  003528  0EFE               	movlw	high _STable
 33481  00352A  20F4               	addwfc	prodh,w,c
 33482  00352C  6EF7               	movwf	tblptrh,c
 33483  00352E                     	if	1	;There are 3 active tblptr bytes
 33484  00352E  6AF8               	clrf	tblptru,c
 33485  003530  0E00               	movlw	low (__mediumconst shr (0+16))
 33486  003532  22F8               	addwfc	tblptru,f,c
 33487  003534                     	endif
 33488  003534  0008               	tblrd		*
 33489  003536  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 33490  00353A  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 33491  00353E  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 33492  003542  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 33493  003544  1ADF               	xorwf	indf2,f,c
 33494                           
 33495                           ;AES.c: 341: key[1]^=STable[key[14]];
 33496  003546  EE20 F00E          	lfsr	2,14
 33497  00354A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33498  00354C  26D9               	addwf	fsr2l,f,c
 33499  00354E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33500  003550  22DA               	addwfc	fsr2h,f,c
 33501  003552  50DF               	movf	indf2,w,c
 33502  003554  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33503  003556  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33504  003558  0D01               	mullw	1
 33505  00355A  0E49               	movlw	low _STable
 33506  00355C  24F3               	addwf	prodl,w,c
 33507  00355E  6EF6               	movwf	tblptrl,c
 33508  003560  0EFE               	movlw	high _STable
 33509  003562  20F4               	addwfc	prodh,w,c
 33510  003564  6EF7               	movwf	tblptrh,c
 33511  003566                     	if	1	;There are 3 active tblptr bytes
 33512  003566  6AF8               	clrf	tblptru,c
 33513  003568  0E00               	movlw	low (__mediumconst shr (0+16))
 33514  00356A  22F8               	addwfc	tblptru,f,c
 33515  00356C                     	endif
 33516  00356C  0008               	tblrd		*
 33517  00356E  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 33518  003572  EE20 F001          	lfsr	2,1
 33519  003576  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33520  003578  26D9               	addwf	fsr2l,f,c
 33521  00357A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33522  00357C  22DA               	addwfc	fsr2h,f,c
 33523  00357E  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 33524  003580  1ADF               	xorwf	indf2,f,c
 33525                           
 33526                           ;AES.c: 342: key[2]^=STable[key[15]];
 33527  003582  EE20 F00F          	lfsr	2,15
 33528  003586  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33529  003588  26D9               	addwf	fsr2l,f,c
 33530  00358A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33531  00358C  22DA               	addwfc	fsr2h,f,c
 33532  00358E  50DF               	movf	indf2,w,c
 33533  003590  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33534  003592  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33535  003594  0D01               	mullw	1
 33536  003596  0E49               	movlw	low _STable
 33537  003598  24F3               	addwf	prodl,w,c
 33538  00359A  6EF6               	movwf	tblptrl,c
 33539  00359C  0EFE               	movlw	high _STable
 33540  00359E  20F4               	addwfc	prodh,w,c
 33541  0035A0  6EF7               	movwf	tblptrh,c
 33542  0035A2                     	if	1	;There are 3 active tblptr bytes
 33543  0035A2  6AF8               	clrf	tblptru,c
 33544  0035A4  0E00               	movlw	low (__mediumconst shr (0+16))
 33545  0035A6  22F8               	addwfc	tblptru,f,c
 33546  0035A8                     	endif
 33547  0035A8  0008               	tblrd		*
 33548  0035AA  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 33549  0035AE  EE20 F002          	lfsr	2,2
 33550  0035B2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33551  0035B4  26D9               	addwf	fsr2l,f,c
 33552  0035B6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33553  0035B8  22DA               	addwfc	fsr2h,f,c
 33554  0035BA  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 33555  0035BC  1ADF               	xorwf	indf2,f,c
 33556                           
 33557                           ;AES.c: 343: key[3]^=STable[key[12]];
 33558  0035BE  EE20 F00C          	lfsr	2,12
 33559  0035C2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33560  0035C4  26D9               	addwf	fsr2l,f,c
 33561  0035C6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33562  0035C8  22DA               	addwfc	fsr2h,f,c
 33563  0035CA  50DF               	movf	indf2,w,c
 33564  0035CC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33565  0035CE  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33566  0035D0  0D01               	mullw	1
 33567  0035D2  0E49               	movlw	low _STable
 33568  0035D4  24F3               	addwf	prodl,w,c
 33569  0035D6  6EF6               	movwf	tblptrl,c
 33570  0035D8  0EFE               	movlw	high _STable
 33571  0035DA  20F4               	addwfc	prodh,w,c
 33572  0035DC  6EF7               	movwf	tblptrh,c
 33573  0035DE                     	if	1	;There are 3 active tblptr bytes
 33574  0035DE  6AF8               	clrf	tblptru,c
 33575  0035E0  0E00               	movlw	low (__mediumconst shr (0+16))
 33576  0035E2  22F8               	addwfc	tblptru,f,c
 33577  0035E4                     	endif
 33578  0035E4  0008               	tblrd		*
 33579  0035E6  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 33580  0035EA  EE20 F003          	lfsr	2,3
 33581  0035EE  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33582  0035F0  26D9               	addwf	fsr2l,f,c
 33583  0035F2  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33584  0035F4  22DA               	addwfc	fsr2h,f,c
 33585  0035F6  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 33586  0035F8  1ADF               	xorwf	indf2,f,c
 33587                           
 33588                           ; BSR set to: 0
 33589                           ;AES.c: 345: key[0]^=_rcon;
 33590  0035FA  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 33591  0035FE  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 33592  003602  5046               	movf	__rcon,w,c
 33593  003604  1ADF               	xorwf	indf2,f,c
 33594                           
 33595                           ; BSR set to: 0
 33596                           ;AES.c: 346: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 33597  003606  0E7F               	movlw	127
 33598  003608  6446               	cpfsgt	__rcon,c
 33599  00360A  D00C               	goto	l330
 33600                           
 33601                           ; BSR set to: 0
 33602  00360C  0E1B               	movlw	27
 33603  00360E  C046  F062         	movff	__rcon,??_EncKeySchedule
 33604  003612  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 33605  003614  90D8               	bcf	status,0,c
 33606  003616  3762               	rlcf	??_EncKeySchedule& (0+255),f,b
 33607  003618  3763               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 33608  00361A  1962               	xorwf	??_EncKeySchedule& (0+255),w,b
 33609  00361C  6F64               	movwf	_EncKeySchedule$514& (0+255),b
 33610  00361E  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 33611  003620  6F65               	movwf	(_EncKeySchedule$514+1)& (0+255),b
 33612  003622  D005               	goto	l332
 33613  003624                     l330:
 33614                           
 33615                           ; BSR set to: 0
 33616                           
 33617                           ; BSR set to: 0
 33618  003624  90D8               	bcf	status,0,c
 33619  003626  3446               	rlcf	__rcon,w,c
 33620  003628  6F64               	movwf	_EncKeySchedule$514& (0+255),b
 33621  00362A  6B65               	clrf	(_EncKeySchedule$514+1)& (0+255),b
 33622  00362C  3765               	rlcf	(_EncKeySchedule$514+1)& (0+255),f,b
 33623  00362E                     l332:
 33624                           
 33625                           ; BSR set to: 0
 33626                           
 33627                           ; BSR set to: 0
 33628  00362E  C064  F046         	movff	_EncKeySchedule$514,__rcon
 33629                           
 33630                           ; BSR set to: 0
 33631                           ;AES.c: 349: key[4]^=key[0];
 33632  003632  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 33633  003636  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 33634  00363A  50DF               	movf	indf2,w,c
 33635  00363C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33636  00363E  EE20 F004          	lfsr	2,4
 33637  003642  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33638  003644  26D9               	addwf	fsr2l,f,c
 33639  003646  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33640  003648  22DA               	addwfc	fsr2h,f,c
 33641  00364A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33642  00364C  1ADF               	xorwf	indf2,f,c
 33643                           
 33644                           ; BSR set to: 0
 33645                           ;AES.c: 350: key[5]^=key[1];
 33646  00364E  EE20 F001          	lfsr	2,1
 33647  003652  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33648  003654  26D9               	addwf	fsr2l,f,c
 33649  003656  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33650  003658  22DA               	addwfc	fsr2h,f,c
 33651  00365A  50DF               	movf	indf2,w,c
 33652  00365C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33653  00365E  EE20 F005          	lfsr	2,5
 33654  003662  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33655  003664  26D9               	addwf	fsr2l,f,c
 33656  003666  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33657  003668  22DA               	addwfc	fsr2h,f,c
 33658  00366A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33659  00366C  1ADF               	xorwf	indf2,f,c
 33660                           
 33661                           ; BSR set to: 0
 33662                           ;AES.c: 351: key[6]^=key[2];
 33663  00366E  EE20 F002          	lfsr	2,2
 33664  003672  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33665  003674  26D9               	addwf	fsr2l,f,c
 33666  003676  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33667  003678  22DA               	addwfc	fsr2h,f,c
 33668  00367A  50DF               	movf	indf2,w,c
 33669  00367C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33670  00367E  EE20 F006          	lfsr	2,6
 33671  003682  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33672  003684  26D9               	addwf	fsr2l,f,c
 33673  003686  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33674  003688  22DA               	addwfc	fsr2h,f,c
 33675  00368A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33676  00368C  1ADF               	xorwf	indf2,f,c
 33677                           
 33678                           ; BSR set to: 0
 33679                           ;AES.c: 352: key[7]^=key[3];
 33680  00368E  EE20 F003          	lfsr	2,3
 33681  003692  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33682  003694  26D9               	addwf	fsr2l,f,c
 33683  003696  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33684  003698  22DA               	addwfc	fsr2h,f,c
 33685  00369A  50DF               	movf	indf2,w,c
 33686  00369C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33687  00369E  EE20 F007          	lfsr	2,7
 33688  0036A2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33689  0036A4  26D9               	addwf	fsr2l,f,c
 33690  0036A6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33691  0036A8  22DA               	addwfc	fsr2h,f,c
 33692  0036AA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33693  0036AC  1ADF               	xorwf	indf2,f,c
 33694                           
 33695                           ; BSR set to: 0
 33696                           ;AES.c: 355: key[8]^=key[4];
 33697  0036AE  EE20 F004          	lfsr	2,4
 33698  0036B2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33699  0036B4  26D9               	addwf	fsr2l,f,c
 33700  0036B6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33701  0036B8  22DA               	addwfc	fsr2h,f,c
 33702  0036BA  50DF               	movf	indf2,w,c
 33703  0036BC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33704  0036BE  EE20 F008          	lfsr	2,8
 33705  0036C2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33706  0036C4  26D9               	addwf	fsr2l,f,c
 33707  0036C6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33708  0036C8  22DA               	addwfc	fsr2h,f,c
 33709  0036CA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33710  0036CC  1ADF               	xorwf	indf2,f,c
 33711                           
 33712                           ; BSR set to: 0
 33713                           ;AES.c: 356: key[9]^=key[5];
 33714  0036CE  EE20 F005          	lfsr	2,5
 33715  0036D2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33716  0036D4  26D9               	addwf	fsr2l,f,c
 33717  0036D6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33718  0036D8  22DA               	addwfc	fsr2h,f,c
 33719  0036DA  50DF               	movf	indf2,w,c
 33720  0036DC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33721  0036DE  EE20 F009          	lfsr	2,9
 33722  0036E2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33723  0036E4  26D9               	addwf	fsr2l,f,c
 33724  0036E6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33725  0036E8  22DA               	addwfc	fsr2h,f,c
 33726  0036EA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33727  0036EC  1ADF               	xorwf	indf2,f,c
 33728                           
 33729                           ; BSR set to: 0
 33730                           ;AES.c: 357: key[10]^=key[6];
 33731  0036EE  EE20 F006          	lfsr	2,6
 33732  0036F2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33733  0036F4  26D9               	addwf	fsr2l,f,c
 33734  0036F6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33735  0036F8  22DA               	addwfc	fsr2h,f,c
 33736  0036FA  50DF               	movf	indf2,w,c
 33737  0036FC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33738  0036FE  EE20 F00A          	lfsr	2,10
 33739  003702  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33740  003704  26D9               	addwf	fsr2l,f,c
 33741  003706  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33742  003708  22DA               	addwfc	fsr2h,f,c
 33743  00370A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33744  00370C  1ADF               	xorwf	indf2,f,c
 33745                           
 33746                           ; BSR set to: 0
 33747                           ;AES.c: 358: key[11]^=key[7];
 33748  00370E  EE20 F007          	lfsr	2,7
 33749  003712  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33750  003714  26D9               	addwf	fsr2l,f,c
 33751  003716  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33752  003718  22DA               	addwfc	fsr2h,f,c
 33753  00371A  50DF               	movf	indf2,w,c
 33754  00371C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33755  00371E  EE20 F00B          	lfsr	2,11
 33756  003722  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33757  003724  26D9               	addwf	fsr2l,f,c
 33758  003726  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33759  003728  22DA               	addwfc	fsr2h,f,c
 33760  00372A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33761  00372C  1ADF               	xorwf	indf2,f,c
 33762                           
 33763                           ; BSR set to: 0
 33764                           ;AES.c: 361: key[12]^=key[8];
 33765  00372E  EE20 F008          	lfsr	2,8
 33766  003732  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33767  003734  26D9               	addwf	fsr2l,f,c
 33768  003736  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33769  003738  22DA               	addwfc	fsr2h,f,c
 33770  00373A  50DF               	movf	indf2,w,c
 33771  00373C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33772  00373E  EE20 F00C          	lfsr	2,12
 33773  003742  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33774  003744  26D9               	addwf	fsr2l,f,c
 33775  003746  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33776  003748  22DA               	addwfc	fsr2h,f,c
 33777  00374A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33778  00374C  1ADF               	xorwf	indf2,f,c
 33779                           
 33780                           ; BSR set to: 0
 33781                           ;AES.c: 362: key[13]^=key[9];
 33782  00374E  EE20 F009          	lfsr	2,9
 33783  003752  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33784  003754  26D9               	addwf	fsr2l,f,c
 33785  003756  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33786  003758  22DA               	addwfc	fsr2h,f,c
 33787  00375A  50DF               	movf	indf2,w,c
 33788  00375C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33789  00375E  EE20 F00D          	lfsr	2,13
 33790  003762  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33791  003764  26D9               	addwf	fsr2l,f,c
 33792  003766  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33793  003768  22DA               	addwfc	fsr2h,f,c
 33794  00376A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33795  00376C  1ADF               	xorwf	indf2,f,c
 33796                           
 33797                           ; BSR set to: 0
 33798                           ;AES.c: 363: key[14]^=key[10];
 33799  00376E  EE20 F00A          	lfsr	2,10
 33800  003772  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33801  003774  26D9               	addwf	fsr2l,f,c
 33802  003776  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33803  003778  22DA               	addwfc	fsr2h,f,c
 33804  00377A  50DF               	movf	indf2,w,c
 33805  00377C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33806  00377E  EE20 F00E          	lfsr	2,14
 33807  003782  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33808  003784  26D9               	addwf	fsr2l,f,c
 33809  003786  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33810  003788  22DA               	addwfc	fsr2h,f,c
 33811  00378A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33812  00378C  1ADF               	xorwf	indf2,f,c
 33813                           
 33814                           ; BSR set to: 0
 33815                           ;AES.c: 364: key[15]^=key[11];
 33816  00378E  EE20 F00B          	lfsr	2,11
 33817  003792  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33818  003794  26D9               	addwf	fsr2l,f,c
 33819  003796  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33820  003798  22DA               	addwfc	fsr2h,f,c
 33821  00379A  50DF               	movf	indf2,w,c
 33822  00379C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33823  00379E  EE20 F00F          	lfsr	2,15
 33824  0037A2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33825  0037A4  26D9               	addwf	fsr2l,f,c
 33826  0037A6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33827  0037A8  22DA               	addwfc	fsr2h,f,c
 33828  0037AA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33829  0037AC  1ADF               	xorwf	indf2,f,c
 33830                           
 33831                           ; BSR set to: 0
 33832  0037AE  0012               	return		;funcret
 33833  0037B0                     __end_of_EncKeySchedule:
 33834                           	opt stack 0
 33835                           tosu	equ	0xFFF
 33836                           tosh	equ	0xFFE
 33837                           tosl	equ	0xFFD
 33838                           pclath	equ	0xFFA
 33839                           tblptru	equ	0xFF8
 33840                           tblptrh	equ	0xFF7
 33841                           tblptrl	equ	0xFF6
 33842                           tablat	equ	0xFF5
 33843                           prodh	equ	0xFF4
 33844                           prodl	equ	0xFF3
 33845                           intcon	equ	0xFF2
 33846                           intcon2	equ	0xFF1
 33847                           intcon3	equ	0xFF0
 33848                           indf0	equ	0xFEF
 33849                           postinc0	equ	0xFEE
 33850                           plusw0	equ	0xFEB
 33851                           fsr0h	equ	0xFEA
 33852                           fsr0l	equ	0xFE9
 33853                           wreg	equ	0xFE8
 33854                           postinc1	equ	0xFE6
 33855                           postdec1	equ	0xFE5
 33856                           plusw1	equ	0xFE3
 33857                           fsr1h	equ	0xFE2
 33858                           fsr1l	equ	0xFE1
 33859                           indf2	equ	0xFDF
 33860                           postinc2	equ	0xFDE
 33861                           postdec2	equ	0xFDD
 33862                           plusw2	equ	0xFDB
 33863                           fsr2h	equ	0xFDA
 33864                           fsr2l	equ	0xFD9
 33865                           status	equ	0xFD8
 33866                           
 33867 ;; *************** function _LORAWAN_Init *****************
 33868 ;; Defined at:
 33869 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 33870 ;; Parameters:    Size  Location     Type
 33871 ;;  RxPayload       2   82[BANK0 ] PTR FTN(PTR unsigned cha
 33872 ;;		 -> RxData(1), 
 33873 ;;  RxJoinRespon    2   84[BANK0 ] PTR FTN(unsigned char ,)
 33874 ;;		 -> RxJoinResponse(1), 
 33875 ;; Auto vars:     Size  Location     Type
 33876 ;;		None
 33877 ;; Return value:  Size  Location     Type
 33878 ;;                  1    wreg      void 
 33879 ;; Registers used:
 33880 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33881 ;; Tracked objects:
 33882 ;;		On entry : 0/0
 33883 ;;		On exit  : 0/0
 33884 ;;		Unchanged: 0/0
 33885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33886 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33889 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33890 ;;Total ram usage:        4 bytes
 33891 ;; Hardware stack levels used:    1
 33892 ;; Hardware stack levels required when called:   13
 33893 ;; This function calls:
 33894 ;;		_CreateAllSoftwareTimers
 33895 ;;		_LORAWAN_Reset
 33896 ;;		_RADIO_Init
 33897 ;;		_RADIO_ReadRandom
 33898 ;;		_SetCallbackSoftwareTimers
 33899 ;;		_StopAllSoftwareTimers
 33900 ;;		_srand
 33901 ;; This function is called by:
 33902 ;;		_main
 33903 ;; This function uses a non-reentrant model
 33904 ;;
 33905                           
 33906                           	psect	text159
 33907  0079F6                     __ptext159:
 33908                           	opt stack 0
 33909  0079F6                     _LORAWAN_Init:
 33910                           	opt stack 17
 33911                           
 33912                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 33913                           
 33914                           ; BSR set to: 0
 33915                           ;incstack = 0
 33916  0079F6  0102               	movlb	2	; () banked
 33917  0079F8  51F0               	movf	(_loRa+240)& (0+255),w,b
 33918  0079FA  A4D8               	btfss	status,2,c
 33919  0079FC  D008               	goto	l969
 33920                           
 33921                           ; BSR set to: 2
 33922                           ;lorawan_eu.c: 127: {
 33923                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 33924  0079FE  EC9A  F03F         	call	_CreateAllSoftwareTimers	;wreg free
 33925                           
 33926                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 33927  007A02  ECC7  F032         	call	_SetCallbackSoftwareTimers	;wreg free
 33928                           
 33929                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 33930  007A06  0E01               	movlw	1
 33931  007A08  0102               	movlb	2	; () banked
 33932  007A0A  6FF0               	movwf	(_loRa+240)& (0+255),b
 33933                           
 33934                           ;lorawan_eu.c: 131: }
 33935  007A0C  D002               	goto	l970
 33936  007A0E                     l969:
 33937                           
 33938                           ; BSR set to: 2
 33939                           ;lorawan_eu.c: 132: else
 33940                           ;lorawan_eu.c: 133: {
 33941                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 33942                           
 33943                           ; BSR set to: 2
 33944  007A0E  EC71  F03F         	call	_StopAllSoftwareTimers	;wreg free
 33945  007A12                     l970:
 33946                           
 33947                           ;lorawan_eu.c: 135: }
 33948                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 33949  007A12  C0B2  F110         	movff	LORAWAN_Init@RxPayload,_rxPayload
 33950  007A16  C0B3  F111         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 33951                           
 33952                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 33953  007A1A  C0B4  F112         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 33954  007A1E  C0B5  F113         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 33955                           
 33956                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 33957  007A22  0EFF               	movlw	low (_radioBuffer+16)
 33958  007A24  0100               	movlb	0	; () banked
 33959  007A26  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 33960  007A28  0E05               	movlw	high (_radioBuffer+16)
 33961  007A2A  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 33962  007A2C  0EA0               	movlw	160
 33963  007A2E  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 33964  007A30  0E27               	movlw	39
 33965  007A32  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 33966  007A34  0EBE               	movlw	190
 33967  007A36  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 33968  007A38  0E33               	movlw	51
 33969  007A3A  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 33970  007A3C  EC18  F023         	call	_RADIO_Init	;wreg free
 33971                           
 33972                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 33973  007A40  ECE9  F036         	call	_RADIO_ReadRandom	;wreg free
 33974  007A44  C06C  F072         	movff	?_RADIO_ReadRandom,srand@x
 33975  007A48  C06D  F073         	movff	?_RADIO_ReadRandom+1,srand@x+1
 33976  007A4C  EC10  F046         	call	_srand	;wreg free
 33977                           
 33978                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 33979  007A50  0E00               	movlw	0
 33980  007A52  EC31  F022         	call	_LORAWAN_Reset
 33981  007A56  0012               	return		;funcret
 33982  007A58                     __end_of_LORAWAN_Init:
 33983                           	opt stack 0
 33984                           tosu	equ	0xFFF
 33985                           tosh	equ	0xFFE
 33986                           tosl	equ	0xFFD
 33987                           pclath	equ	0xFFA
 33988                           tblptru	equ	0xFF8
 33989                           tblptrh	equ	0xFF7
 33990                           tblptrl	equ	0xFF6
 33991                           tablat	equ	0xFF5
 33992                           prodh	equ	0xFF4
 33993                           prodl	equ	0xFF3
 33994                           intcon	equ	0xFF2
 33995                           intcon2	equ	0xFF1
 33996                           intcon3	equ	0xFF0
 33997                           indf0	equ	0xFEF
 33998                           postinc0	equ	0xFEE
 33999                           plusw0	equ	0xFEB
 34000                           fsr0h	equ	0xFEA
 34001                           fsr0l	equ	0xFE9
 34002                           wreg	equ	0xFE8
 34003                           postinc1	equ	0xFE6
 34004                           postdec1	equ	0xFE5
 34005                           plusw1	equ	0xFE3
 34006                           fsr1h	equ	0xFE2
 34007                           fsr1l	equ	0xFE1
 34008                           indf2	equ	0xFDF
 34009                           postinc2	equ	0xFDE
 34010                           postdec2	equ	0xFDD
 34011                           plusw2	equ	0xFDB
 34012                           fsr2h	equ	0xFDA
 34013                           fsr2l	equ	0xFD9
 34014                           status	equ	0xFD8
 34015                           
 34016 ;; *************** function _srand *****************
 34017 ;; Defined at:
 34018 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 34019 ;; Parameters:    Size  Location     Type
 34020 ;;  x               2   18[BANK0 ] unsigned int 
 34021 ;; Auto vars:     Size  Location     Type
 34022 ;;		None
 34023 ;; Return value:  Size  Location     Type
 34024 ;;                  1    wreg      void 
 34025 ;; Registers used:
 34026 ;;		status,2
 34027 ;; Tracked objects:
 34028 ;;		On entry : 0/0
 34029 ;;		On exit  : 0/0
 34030 ;;		Unchanged: 0/0
 34031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34032 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34035 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34036 ;;Total ram usage:        2 bytes
 34037 ;; Hardware stack levels used:    1
 34038 ;; Hardware stack levels required when called:    7
 34039 ;; This function calls:
 34040 ;;		Nothing
 34041 ;; This function is called by:
 34042 ;;		_LORAWAN_Init
 34043 ;; This function uses a non-reentrant model
 34044 ;;
 34045                           
 34046                           	psect	text160
 34047  008C20                     __ptext160:
 34048                           	opt stack 0
 34049  008C20                     _srand:
 34050                           	opt stack 22
 34051                           
 34052                           ;incstack = 0
 34053  008C20  C072  F1E3         	movff	srand@x,_randx
 34054  008C24  C073  F1E4         	movff	srand@x+1,_randx+1
 34055  008C28  0101               	movlb	1	; () banked
 34056  008C2A  6BE5               	clrf	(_randx+2)& (0+255),b
 34057  008C2C  6BE6               	clrf	(_randx+3)& (0+255),b
 34058                           
 34059                           ; BSR set to: 1
 34060  008C2E  0012               	return		;funcret
 34061  008C30                     __end_of_srand:
 34062                           	opt stack 0
 34063                           tosu	equ	0xFFF
 34064                           tosh	equ	0xFFE
 34065                           tosl	equ	0xFFD
 34066                           pclath	equ	0xFFA
 34067                           tblptru	equ	0xFF8
 34068                           tblptrh	equ	0xFF7
 34069                           tblptrl	equ	0xFF6
 34070                           tablat	equ	0xFF5
 34071                           prodh	equ	0xFF4
 34072                           prodl	equ	0xFF3
 34073                           intcon	equ	0xFF2
 34074                           intcon2	equ	0xFF1
 34075                           intcon3	equ	0xFF0
 34076                           indf0	equ	0xFEF
 34077                           postinc0	equ	0xFEE
 34078                           plusw0	equ	0xFEB
 34079                           fsr0h	equ	0xFEA
 34080                           fsr0l	equ	0xFE9
 34081                           wreg	equ	0xFE8
 34082                           postinc1	equ	0xFE6
 34083                           postdec1	equ	0xFE5
 34084                           plusw1	equ	0xFE3
 34085                           fsr1h	equ	0xFE2
 34086                           fsr1l	equ	0xFE1
 34087                           indf2	equ	0xFDF
 34088                           postinc2	equ	0xFDE
 34089                           postdec2	equ	0xFDD
 34090                           plusw2	equ	0xFDB
 34091                           fsr2h	equ	0xFDA
 34092                           fsr2l	equ	0xFD9
 34093                           status	equ	0xFD8
 34094                           
 34095 ;; *************** function _SetCallbackSoftwareTimers *****************
 34096 ;; Defined at:
 34097 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34098 ;; Parameters:    Size  Location     Type
 34099 ;;		None
 34100 ;; Auto vars:     Size  Location     Type
 34101 ;;		None
 34102 ;; Return value:  Size  Location     Type
 34103 ;;                  1    wreg      void 
 34104 ;; Registers used:
 34105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34106 ;; Tracked objects:
 34107 ;;		On entry : 0/0
 34108 ;;		On exit  : 0/0
 34109 ;;		Unchanged: 0/0
 34110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34115 ;;Total ram usage:        0 bytes
 34116 ;; Hardware stack levels used:    1
 34117 ;; Hardware stack levels required when called:    8
 34118 ;; This function calls:
 34119 ;;		_SwTimerSetCallback
 34120 ;; This function is called by:
 34121 ;;		_LORAWAN_Init
 34122 ;; This function uses a non-reentrant model
 34123 ;;
 34124                           
 34125                           	psect	text161
 34126  00658E                     __ptext161:
 34127                           	opt stack 0
 34128  00658E                     _SetCallbackSoftwareTimers:
 34129                           	opt stack 21
 34130                           
 34131                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 34132                           
 34133                           ; BSR set to: 1
 34134                           ;incstack = 0
 34135  00658E  0E6E               	movlw	low _LORAWAN_ReceiveWindow1Callback
 34136  006590  0100               	movlb	0	; () banked
 34137  006592  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34138  006594  0E6A               	movlw	high _LORAWAN_ReceiveWindow1Callback
 34139  006596  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34140  006598  0E00               	movlw	0
 34141  00659A  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34142  00659C  0102               	movlb	2	; () banked
 34143  00659E  51E2               	movf	(_loRa+226)& (0+255),w,b
 34144  0065A0  EC01  F041         	call	_SwTimerSetCallback
 34145                           
 34146                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 34147  0065A4  0E6C               	movlw	low _LORAWAN_ReceiveWindow2Callback
 34148  0065A6  0100               	movlb	0	; () banked
 34149  0065A8  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34150  0065AA  0E66               	movlw	high _LORAWAN_ReceiveWindow2Callback
 34151  0065AC  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34152  0065AE  0E00               	movlw	0
 34153  0065B0  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34154  0065B2  0102               	movlb	2	; () banked
 34155  0065B4  51E3               	movf	(_loRa+227)& (0+255),w,b
 34156  0065B6  EC01  F041         	call	_SwTimerSetCallback
 34157                           
 34158                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 34159  0065BA  0EA4               	movlw	low _LORAWAN_LinkCheckCallback
 34160  0065BC  0100               	movlb	0	; () banked
 34161  0065BE  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34162  0065C0  0E4C               	movlw	high _LORAWAN_LinkCheckCallback
 34163  0065C2  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34164  0065C4  0E00               	movlw	0
 34165  0065C6  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34166  0065C8  0102               	movlb	2	; () banked
 34167  0065CA  51E7               	movf	(_loRa+231)& (0+255),w,b
 34168  0065CC  EC01  F041         	call	_SwTimerSetCallback
 34169                           
 34170                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 34171  0065D0  0E6E               	movlw	low _LORAWAN_ReceiveWindow1Callback
 34172  0065D2  0100               	movlb	0	; () banked
 34173  0065D4  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34174  0065D6  0E6A               	movlw	high _LORAWAN_ReceiveWindow1Callback
 34175  0065D8  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34176  0065DA  0E00               	movlw	0
 34177  0065DC  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34178  0065DE  0102               	movlb	2	; () banked
 34179  0065E0  51E4               	movf	(_loRa+228)& (0+255),w,b
 34180  0065E2  EC01  F041         	call	_SwTimerSetCallback
 34181                           
 34182                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 34183  0065E6  0E6C               	movlw	low _LORAWAN_ReceiveWindow2Callback
 34184  0065E8  0100               	movlb	0	; () banked
 34185  0065EA  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34186  0065EC  0E66               	movlw	high _LORAWAN_ReceiveWindow2Callback
 34187  0065EE  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34188  0065F0  0E00               	movlw	0
 34189  0065F2  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34190  0065F4  0102               	movlb	2	; () banked
 34191  0065F6  51E5               	movf	(_loRa+229)& (0+255),w,b
 34192  0065F8  EC01  F041         	call	_SwTimerSetCallback
 34193                           
 34194                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 34195  0065FC  0EFA               	movlw	low _AckRetransmissionCallback
 34196  0065FE  0100               	movlb	0	; () banked
 34197  006600  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34198  006602  0E5A               	movlw	high _AckRetransmissionCallback
 34199  006604  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34200  006606  0E00               	movlw	0
 34201  006608  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34202  00660A  0102               	movlb	2	; () banked
 34203  00660C  51E8               	movf	(_loRa+232)& (0+255),w,b
 34204  00660E  EC01  F041         	call	_SwTimerSetCallback
 34205                           
 34206                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 34207  006612  0E1A               	movlw	low _AutomaticReplyCallback
 34208  006614  0100               	movlb	0	; () banked
 34209  006616  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34210  006618  0E88               	movlw	high _AutomaticReplyCallback
 34211  00661A  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34212  00661C  0E00               	movlw	0
 34213  00661E  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34214  006620  0102               	movlb	2	; () banked
 34215  006622  51E6               	movf	(_loRa+230)& (0+255),w,b
 34216  006624  EC01  F041         	call	_SwTimerSetCallback
 34217                           
 34218                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 34219  006628  0E6A               	movlw	low _UnconfirmedTransmissionCallback
 34220  00662A  0100               	movlb	0	; () banked
 34221  00662C  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34222  00662E  0E75               	movlw	high _UnconfirmedTransmissionCallback
 34223  006630  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34224  006632  0E00               	movlw	0
 34225  006634  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34226  006636  0102               	movlb	2	; () banked
 34227  006638  51EA               	movf	(_loRa+234)& (0+255),w,b
 34228  00663A  EC01  F041         	call	_SwTimerSetCallback
 34229                           
 34230                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 34231  00663E  0E3E               	movlw	low _UpdateJoinSuccessState
 34232  006640  0100               	movlb	0	; () banked
 34233  006642  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34234  006644  0E56               	movlw	high _UpdateJoinSuccessState
 34235  006646  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34236  006648  0E00               	movlw	0
 34237  00664A  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34238  00664C  0102               	movlb	2	; () banked
 34239  00664E  51F3               	movf	(_loRa+243)& (0+255),w,b
 34240  006650  EC01  F041         	call	_SwTimerSetCallback
 34241                           
 34242                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 34243  006654  0E48               	movlw	low _DutyCycleCallback
 34244  006656  0100               	movlb	0	; () banked
 34245  006658  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34246  00665A  0E2C               	movlw	high _DutyCycleCallback
 34247  00665C  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34248  00665E  0E00               	movlw	0
 34249  006660  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34250  006662  0102               	movlb	2	; () banked
 34251  006664  51E9               	movf	(_loRa+233)& (0+255),w,b
 34252  006666  EC01  F041         	call	_SwTimerSetCallback
 34253  00666A  0012               	return		;funcret
 34254  00666C                     __end_of_SetCallbackSoftwareTimers:
 34255                           	opt stack 0
 34256                           tosu	equ	0xFFF
 34257                           tosh	equ	0xFFE
 34258                           tosl	equ	0xFFD
 34259                           pclath	equ	0xFFA
 34260                           tblptru	equ	0xFF8
 34261                           tblptrh	equ	0xFF7
 34262                           tblptrl	equ	0xFF6
 34263                           tablat	equ	0xFF5
 34264                           prodh	equ	0xFF4
 34265                           prodl	equ	0xFF3
 34266                           intcon	equ	0xFF2
 34267                           intcon2	equ	0xFF1
 34268                           intcon3	equ	0xFF0
 34269                           indf0	equ	0xFEF
 34270                           postinc0	equ	0xFEE
 34271                           plusw0	equ	0xFEB
 34272                           fsr0h	equ	0xFEA
 34273                           fsr0l	equ	0xFE9
 34274                           wreg	equ	0xFE8
 34275                           postinc1	equ	0xFE6
 34276                           postdec1	equ	0xFE5
 34277                           plusw1	equ	0xFE3
 34278                           fsr1h	equ	0xFE2
 34279                           fsr1l	equ	0xFE1
 34280                           indf2	equ	0xFDF
 34281                           postinc2	equ	0xFDE
 34282                           postdec2	equ	0xFDD
 34283                           plusw2	equ	0xFDB
 34284                           fsr2h	equ	0xFDA
 34285                           fsr2l	equ	0xFD9
 34286                           status	equ	0xFD8
 34287                           
 34288 ;; *************** function _RADIO_ReadRandom *****************
 34289 ;; Defined at:
 34290 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34291 ;; Parameters:    Size  Location     Type
 34292 ;;		None
 34293 ;; Auto vars:     Size  Location     Type
 34294 ;;  retVal          2   15[BANK0 ] unsigned int 
 34295 ;;  i               1   17[BANK0 ] unsigned char 
 34296 ;; Return value:  Size  Location     Type
 34297 ;;                  2   12[BANK0 ] unsigned int 
 34298 ;; Registers used:
 34299 ;;		wreg, status,2, status,0, cstack
 34300 ;; Tracked objects:
 34301 ;;		On entry : 0/0
 34302 ;;		On exit  : 0/0
 34303 ;;		Unchanged: 0/0
 34304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34305 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34306 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34307 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34308 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34309 ;;Total ram usage:        6 bytes
 34310 ;; Hardware stack levels used:    1
 34311 ;; Hardware stack levels required when called:   11
 34312 ;; This function calls:
 34313 ;;		_RADIO_RegisterRead
 34314 ;;		_RADIO_RegisterWrite
 34315 ;;		_RADIO_WriteMode
 34316 ;;		_SystemBlockingWaitMs
 34317 ;; This function is called by:
 34318 ;;		_LORAWAN_Init
 34319 ;; This function uses a non-reentrant model
 34320 ;;
 34321                           
 34322                           	psect	text162
 34323  006DD2                     __ptext162:
 34324                           	opt stack 0
 34325  006DD2                     _RADIO_ReadRandom:
 34326                           	opt stack 18
 34327                           
 34328                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 34329                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 34330                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 34331                           
 34332                           ;incstack = 0
 34333  006DD2  0E00               	movlw	0
 34334  006DD4  0100               	movlb	0	; () banked
 34335  006DD6  6F70               	movwf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 34336  006DD8  0E00               	movlw	0
 34337  006DDA  6F6F               	movwf	RADIO_ReadRandom@retVal& (0+255),b
 34338                           
 34339                           ; BSR set to: 0
 34340                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 34341  006DDC  0E01               	movlw	1
 34342  006DDE  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34343  006DE0  0E01               	movlw	1
 34344  006DE2  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 34345  006DE4  0E00               	movlw	0
 34346  006DE6  EC0D  F02F         	call	_RADIO_WriteMode
 34347                           
 34348                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 34349  006DEA  0EFF               	movlw	255
 34350  006DEC  0100               	movlb	0	; () banked
 34351  006DEE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34352  006DF0  0E11               	movlw	17
 34353  006DF2  ECA6  F044         	call	_RADIO_RegisterWrite
 34354                           
 34355                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 34356  006DF6  0E01               	movlw	1
 34357  006DF8  0100               	movlb	0	; () banked
 34358  006DFA  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34359  006DFC  0E01               	movlw	1
 34360  006DFE  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 34361  006E00  0E05               	movlw	5
 34362  006E02  EC0D  F02F         	call	_RADIO_WriteMode
 34363                           
 34364                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 34365  006E06  0E00               	movlw	0
 34366  006E08  0100               	movlb	0	; () banked
 34367  006E0A  6F71               	movwf	RADIO_ReadRandom@i& (0+255),b
 34368  006E0C                     l16559:
 34369                           
 34370                           ; BSR set to: 0
 34371  006E0C  0E0F               	movlw	15
 34372  006E0E  6571               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 34373  006E10  D001               	goto	l673
 34374  006E12  D019               	goto	u20160
 34375  006E14                     l673:
 34376                           
 34377                           ; BSR set to: 0
 34378                           ;radio_driver_SX1276.c: 1377: {
 34379                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 34380                           
 34381                           ; BSR set to: 0
 34382  006E14  0E01               	movlw	1
 34383  006E16  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34384  006E18  0E00               	movlw	0
 34385  006E1A  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34386  006E1C  0E00               	movlw	0
 34387  006E1E  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34388  006E20  0E00               	movlw	0
 34389  006E22  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34390  006E24  ECB3  F042         	call	_SystemBlockingWaitMs	;wreg free
 34391                           
 34392                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 34393  006E28  0100               	movlb	0	; () banked
 34394  006E2A  90D8               	bcf	status,0,c
 34395  006E2C  376F               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 34396  006E2E  3770               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 34397                           
 34398                           ; BSR set to: 0
 34399                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 34400  006E30  0E2C               	movlw	44
 34401  006E32  ECE5  F043         	call	_RADIO_RegisterRead
 34402  006E36  0100               	movlb	0	; () banked
 34403  006E38  6F6E               	movwf	??_RADIO_ReadRandom& (0+255),b
 34404  006E3A  0E01               	movlw	1
 34405  006E3C  176E               	andwf	??_RADIO_ReadRandom& (0+255),f,b
 34406  006E3E  516E               	movf	??_RADIO_ReadRandom& (0+255),w,b
 34407  006E40  136F               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 34408  006E42  2B71               	incf	RADIO_ReadRandom@i& (0+255),f,b
 34409  006E44  D7E3               	goto	l16559
 34410  006E46                     u20160:
 34411                           
 34412                           ; BSR set to: 0
 34413                           ;radio_driver_SX1276.c: 1381: }
 34414                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 34415                           
 34416                           ; BSR set to: 0
 34417  006E46  0E01               	movlw	1
 34418  006E48  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34419  006E4A  0E01               	movlw	1
 34420  006E4C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 34421  006E4E  0E00               	movlw	0
 34422  006E50  EC0D  F02F         	call	_RADIO_WriteMode
 34423                           
 34424                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 34425  006E54  0EFF               	movlw	255
 34426  006E56  0100               	movlb	0	; () banked
 34427  006E58  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34428  006E5A  0E12               	movlw	18
 34429  006E5C  ECA6  F044         	call	_RADIO_RegisterWrite
 34430                           
 34431                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 34432  006E60  0E00               	movlw	0
 34433  006E62  0100               	movlb	0	; () banked
 34434  006E64  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34435  006E66  0E11               	movlw	17
 34436  006E68  ECA6  F044         	call	_RADIO_RegisterWrite
 34437                           
 34438                           ;radio_driver_SX1276.c: 1389: return retVal;
 34439  006E6C  C06F  F06C         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 34440  006E70  C070  F06D         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 34441  006E74  0012               	return	
 34442  006E76                     __end_of_RADIO_ReadRandom:
 34443                           	opt stack 0
 34444                           tosu	equ	0xFFF
 34445                           tosh	equ	0xFFE
 34446                           tosl	equ	0xFFD
 34447                           pclath	equ	0xFFA
 34448                           tblptru	equ	0xFF8
 34449                           tblptrh	equ	0xFF7
 34450                           tblptrl	equ	0xFF6
 34451                           tablat	equ	0xFF5
 34452                           prodh	equ	0xFF4
 34453                           prodl	equ	0xFF3
 34454                           intcon	equ	0xFF2
 34455                           intcon2	equ	0xFF1
 34456                           intcon3	equ	0xFF0
 34457                           indf0	equ	0xFEF
 34458                           postinc0	equ	0xFEE
 34459                           plusw0	equ	0xFEB
 34460                           fsr0h	equ	0xFEA
 34461                           fsr0l	equ	0xFE9
 34462                           wreg	equ	0xFE8
 34463                           postinc1	equ	0xFE6
 34464                           postdec1	equ	0xFE5
 34465                           plusw1	equ	0xFE3
 34466                           fsr1h	equ	0xFE2
 34467                           fsr1l	equ	0xFE1
 34468                           indf2	equ	0xFDF
 34469                           postinc2	equ	0xFDE
 34470                           postdec2	equ	0xFDD
 34471                           plusw2	equ	0xFDB
 34472                           fsr2h	equ	0xFDA
 34473                           fsr2l	equ	0xFD9
 34474                           status	equ	0xFD8
 34475                           
 34476 ;; *************** function _LORAWAN_Reset *****************
 34477 ;; Defined at:
 34478 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34479 ;; Parameters:    Size  Location     Type
 34480 ;;  ismBandNew      1    wreg     enum E7280
 34481 ;; Auto vars:     Size  Location     Type
 34482 ;;  ismBandNew      1   81[BANK0 ] enum E7280
 34483 ;; Return value:  Size  Location     Type
 34484 ;;                  1    wreg      void 
 34485 ;; Registers used:
 34486 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34487 ;; Tracked objects:
 34488 ;;		On entry : 0/0
 34489 ;;		On exit  : 0/0
 34490 ;;		Unchanged: 0/0
 34491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34493 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34495 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34496 ;;Total ram usage:        1 bytes
 34497 ;; Hardware stack levels used:    1
 34498 ;; Hardware stack levels required when called:   12
 34499 ;; This function calls:
 34500 ;;		_InitDefault433Channels
 34501 ;;		_InitDefault868Channels
 34502 ;;		_LORAWAN_LinkCheckConfigure
 34503 ;;		_RADIO_Init
 34504 ;;		_RADIO_SetLoRaSyncWord
 34505 ;;		_StopAllSoftwareTimers
 34506 ;;		_UpdateMinMaxChDataRate
 34507 ;;		_memset
 34508 ;; This function is called by:
 34509 ;;		_LORAWAN_Init
 34510 ;; This function uses a non-reentrant model
 34511 ;;
 34512                           
 34513                           	psect	text163
 34514  004462                     __ptext163:
 34515                           	opt stack 0
 34516  004462                     _LORAWAN_Reset:
 34517                           	opt stack 17
 34518                           
 34519                           ;incstack = 0
 34520                           ;LORAWAN_Reset@ismBandNew stored from wreg
 34521  004462  0100               	movlb	0	; () banked
 34522  004464  6FB1               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 34523                           
 34524                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 34525  004466  0102               	movlb	2	; () banked
 34526  004468  05F0               	decf	(_loRa+240)& (0+255),w,b
 34527  00446A  B4D8               	btfsc	status,2,c
 34528                           
 34529                           ; BSR set to: 2
 34530                           ;lorawan_eu.c: 151: {
 34531                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 34532  00446C  EC71  F03F         	call	_StopAllSoftwareTimers	;wreg free
 34533                           
 34534                           ;lorawan_eu.c: 153: }
 34535                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 34536  004470  0E34               	movlw	52
 34537  004472  0102               	movlb	2	; () banked
 34538  004474  6FF4               	movwf	(_loRa+244)& (0+255),b
 34539                           
 34540                           ; BSR set to: 2
 34541                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 34542  004476  51F4               	movf	(_loRa+244)& (0+255),w,b
 34543  004478  EC9C  F046         	call	_RADIO_SetLoRaSyncWord
 34544                           
 34545                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 34546  00447C  0E00               	movlw	0
 34547  00447E  0102               	movlb	2	; () banked
 34548  004480  6F02               	movwf	(_loRa+2)& (0+255),b
 34549  004482  0E00               	movlw	0
 34550  004484  6F03               	movwf	(_loRa+3)& (0+255),b
 34551  004486  0E00               	movlw	0
 34552  004488  6F04               	movwf	(_loRa+4)& (0+255),b
 34553  00448A  0E00               	movlw	0
 34554  00448C  6F05               	movwf	(_loRa+5)& (0+255),b
 34555                           
 34556                           ; BSR set to: 2
 34557                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 34558  00448E  69DD               	setf	(_loRa+221)& (0+255),b
 34559                           
 34560                           ; BSR set to: 2
 34561                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 34562  004490  0E00               	movlw	0
 34563  004492  6FDE               	movwf	(_loRa+222)& (0+255),b
 34564                           
 34565                           ; BSR set to: 2
 34566                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 34567  004494  0E00               	movlw	0
 34568  004496  6FC8               	movwf	(_loRa+200)& (0+255),b
 34569  004498  0E00               	movlw	0
 34570  00449A  6FC9               	movwf	(_loRa+201)& (0+255),b
 34571  00449C  0E00               	movlw	0
 34572  00449E  6FCA               	movwf	(_loRa+202)& (0+255),b
 34573  0044A0  0E00               	movlw	0
 34574  0044A2  6FCB               	movwf	(_loRa+203)& (0+255),b
 34575                           
 34576                           ; BSR set to: 2
 34577                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 34578  0044A4  0E00               	movlw	0
 34579  0044A6  6FD5               	movwf	(_loRa+213)& (0+255),b
 34580  0044A8  0E00               	movlw	0
 34581  0044AA  6FD4               	movwf	(_loRa+212)& (0+255),b
 34582                           
 34583                           ; BSR set to: 2
 34584                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 34585  0044AC  0E00               	movlw	0
 34586  0044AE  6F0A               	movwf	(_loRa+10)& (0+255),b
 34587  0044B0  0E00               	movlw	0
 34588  0044B2  6F0B               	movwf	(_loRa+11)& (0+255),b
 34589  0044B4  0E00               	movlw	0
 34590  0044B6  6F0C               	movwf	(_loRa+12)& (0+255),b
 34591  0044B8  0E00               	movlw	0
 34592  0044BA  6F0D               	movwf	(_loRa+13)& (0+255),b
 34593                           
 34594                           ; BSR set to: 2
 34595                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 34596  0044BC  0E00               	movlw	0
 34597  0044BE  6F06               	movwf	(_loRa+6)& (0+255),b
 34598  0044C0  0E00               	movlw	0
 34599  0044C2  6F07               	movwf	(_loRa+7)& (0+255),b
 34600  0044C4  0E00               	movlw	0
 34601  0044C6  6F08               	movwf	(_loRa+8)& (0+255),b
 34602  0044C8  0E00               	movlw	0
 34603  0044CA  6F09               	movwf	(_loRa+9)& (0+255),b
 34604                           
 34605                           ; BSR set to: 2
 34606                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 34607  0044CC  0E00               	movlw	0
 34608  0044CE  6FD3               	movwf	(_loRa+211)& (0+255),b
 34609  0044D0  0E00               	movlw	0
 34610  0044D2  6FD2               	movwf	(_loRa+210)& (0+255),b
 34611                           
 34612                           ; BSR set to: 2
 34613                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 34614  0044D4  0E00               	movlw	0
 34615  0044D6  6FDC               	movwf	(_loRa+220)& (0+255),b
 34616  0044D8  0E01               	movlw	1
 34617  0044DA  6FDB               	movwf	(_loRa+219)& (0+255),b
 34618                           
 34619                           ; BSR set to: 2
 34620                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 34621  0044DC  0E00               	movlw	0
 34622  0044DE  6FD1               	movwf	(_loRa+209)& (0+255),b
 34623  0044E0  0E00               	movlw	0
 34624  0044E2  6FD0               	movwf	(_loRa+208)& (0+255),b
 34625                           
 34626                           ; BSR set to: 2
 34627                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 34628  0044E4  0E00               	movlw	0
 34629  0044E6  6FEE               	movwf	(_loRa+238)& (0+255),b
 34630                           
 34631                           ; BSR set to: 2
 34632                           ;lorawan_eu.c: 169: loRa.offset = 0;
 34633  0044E8  0E00               	movlw	0
 34634  0044EA  6FEF               	movwf	(_loRa+239)& (0+255),b
 34635                           
 34636                           ; BSR set to: 2
 34637                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 34638  0044EC  0E00               	movlw	0
 34639  0044EE  6FC8               	movwf	(_loRa+200)& (0+255),b
 34640  0044F0  0E00               	movlw	0
 34641  0044F2  6FC9               	movwf	(_loRa+201)& (0+255),b
 34642  0044F4  0E00               	movlw	0
 34643  0044F6  6FCA               	movwf	(_loRa+202)& (0+255),b
 34644  0044F8  0E00               	movlw	0
 34645  0044FA  6FCB               	movwf	(_loRa+203)& (0+255),b
 34646                           
 34647                           ; BSR set to: 2
 34648                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 34649  0044FC  9503               	bcf	(_loRa+3)& (0+255),2,b
 34650                           
 34651                           ; BSR set to: 2
 34652                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 34653  0044FE  0E00               	movlw	0
 34654  004500  6F02               	movwf	(_loRa+2)& (0+255),b
 34655  004502  0E00               	movlw	0
 34656  004504  6F03               	movwf	(_loRa+3)& (0+255),b
 34657  004506  0E00               	movlw	0
 34658  004508  6F04               	movwf	(_loRa+4)& (0+255),b
 34659  00450A  0E00               	movlw	0
 34660  00450C  6F05               	movwf	(_loRa+5)& (0+255),b
 34661                           
 34662                           ; BSR set to: 2
 34663                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 34664  00450E  0E00               	movlw	0
 34665  004510  6F01               	movwf	(_loRa+1)& (0+255),b
 34666  004512  0E00               	movlw	0
 34667  004514  6F00               	movwf	_loRa& (0+255),b
 34668                           
 34669                           ; BSR set to: 2
 34670                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 34671  004516  0E07               	movlw	7
 34672  004518  6FD7               	movwf	(_loRa+215)& (0+255),b
 34673                           
 34674                           ; BSR set to: 2
 34675                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 34676  00451A  0E00               	movlw	0
 34677  00451C  6FD6               	movwf	(_loRa+214)& (0+255),b
 34678                           
 34679                           ; BSR set to: 2
 34680                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 34681  00451E  0E01               	movlw	1
 34682  004520  6FD9               	movwf	(_loRa+217)& (0+255),b
 34683                           
 34684                           ; BSR set to: 2
 34685                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 34686  004522  0E01               	movlw	1
 34687  004524  6FD8               	movwf	(_loRa+216)& (0+255),b
 34688                           
 34689                           ; BSR set to: 2
 34690                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 34691  004526  69E0               	setf	(_loRa+224)& (0+255),b
 34692                           
 34693                           ; BSR set to: 2
 34694                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 34695  004528  C0B1  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 34696                           
 34697                           ; BSR set to: 2
 34698                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 34699  00452C  0E00               	movlw	0
 34700  00452E  6F12               	movwf	(_loRa+18)& (0+255),b
 34701                           
 34702                           ; BSR set to: 2
 34703                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 34704  004530  0E10               	movlw	16
 34705  004532  6FED               	movwf	(_loRa+237)& (0+255),b
 34706                           
 34707                           ; BSR set to: 2
 34708                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 34709  004534  0100               	movlb	0	; () banked
 34710  004536  51B1               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 34711  004538  A4D8               	btfss	status,2,c
 34712  00453A  D01B               	goto	l975
 34713                           
 34714                           ; BSR set to: 0
 34715                           ;lorawan_eu.c: 193: {
 34716                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 34717  00453C  0EFF               	movlw	low (_radioBuffer+16)
 34718  00453E  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 34719  004540  0E05               	movlw	high (_radioBuffer+16)
 34720  004542  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 34721  004544  0EA0               	movlw	160
 34722  004546  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 34723  004548  0E27               	movlw	39
 34724  00454A  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 34725  00454C  0EBE               	movlw	190
 34726  00454E  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 34727  004550  0E33               	movlw	51
 34728  004552  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 34729  004554  EC18  F023         	call	_RADIO_Init	;wreg free
 34730                           
 34731                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 34732  004558  ECA4  F038         	call	_InitDefault868Channels	;wreg free
 34733                           
 34734                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 34735  00455C  0E00               	movlw	0
 34736  00455E  0102               	movlb	2	; () banked
 34737  004560  6F1C               	movwf	(_loRa+28)& (0+255),b
 34738                           
 34739                           ; BSR set to: 2
 34740                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 34741  004562  0E08               	movlw	8
 34742  004564  6F18               	movwf	(_loRa+24)& (0+255),b
 34743  004566  0EE6               	movlw	230
 34744  004568  6F19               	movwf	(_loRa+25)& (0+255),b
 34745  00456A  0ED3               	movlw	211
 34746  00456C  6F1A               	movwf	(_loRa+26)& (0+255),b
 34747  00456E  0E33               	movlw	51
 34748  004570  D01B               	goto	L25
 34749  004572                     l975:
 34750                           
 34751                           ;lorawan_eu.c: 201: else
 34752                           ;lorawan_eu.c: 202: {
 34753                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 34754                           
 34755                           ; BSR set to: 2
 34756  004572  0EFF               	movlw	low (_radioBuffer+16)
 34757  004574  0100               	movlb	0	; () banked
 34758  004576  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 34759  004578  0E05               	movlw	high (_radioBuffer+16)
 34760  00457A  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 34761  00457C  0E20               	movlw	32
 34762  00457E  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 34763  004580  0EA2               	movlw	162
 34764  004582  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 34765  004584  0ED3               	movlw	211
 34766  004586  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 34767  004588  0E19               	movlw	25
 34768  00458A  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 34769  00458C  EC18  F023         	call	_RADIO_Init	;wreg free
 34770                           
 34771                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 34772  004590  ECE9  F038         	call	_InitDefault433Channels	;wreg free
 34773                           
 34774                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 34775  004594  0E00               	movlw	0
 34776  004596  0102               	movlb	2	; () banked
 34777  004598  6F1C               	movwf	(_loRa+28)& (0+255),b
 34778                           
 34779                           ; BSR set to: 2
 34780                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 34781  00459A  0E28               	movlw	40
 34782  00459C  6F18               	movwf	(_loRa+24)& (0+255),b
 34783  00459E  0E76               	movlw	118
 34784  0045A0  6F19               	movwf	(_loRa+25)& (0+255),b
 34785  0045A2  0EE8               	movlw	232
 34786  0045A4  6F1A               	movwf	(_loRa+26)& (0+255),b
 34787  0045A6  0E19               	movlw	25
 34788  0045A8                     L25:
 34789  0045A8  6F1B               	movwf	(_loRa+27)& (0+255),b
 34790                           
 34791                           ; BSR set to: 2
 34792                           ;lorawan_eu.c: 209: }
 34793                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 34794                           
 34795                           ; BSR set to: 2
 34796  0045AA  0E01               	movlw	1
 34797  0045AC  6FE1               	movwf	(_loRa+225)& (0+255),b
 34798                           
 34799                           ; BSR set to: 2
 34800                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 34801  0045AE  0E00               	movlw	0
 34802  0045B0  6FDF               	movwf	(_loRa+223)& (0+255),b
 34803                           
 34804                           ; BSR set to: 2
 34805                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 34806  0045B2  EC8C  F02F         	call	_UpdateMinMaxChDataRate	;wreg free
 34807                           
 34808                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 34809  0045B6  0E00               	movlw	0
 34810  0045B8  0102               	movlb	2	; () banked
 34811  0045BA  6FA6               	movwf	(_loRa+166)& (0+255),b
 34812  0045BC  0E00               	movlw	0
 34813  0045BE  6FA5               	movwf	(_loRa+165)& (0+255),b
 34814                           
 34815                           ; BSR set to: 2
 34816                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 34817  0045C0  0E1D               	movlw	low (_loRa+29)
 34818  0045C2  0100               	movlb	0	; () banked
 34819  0045C4  6F60               	movwf	memset@p1& (0+255),b
 34820  0045C6  0E02               	movlw	high (_loRa+29)
 34821  0045C8  6F61               	movwf	(memset@p1+1)& (0+255),b
 34822  0045CA  0E00               	movlw	0
 34823  0045CC  6F63               	movwf	(memset@c+1)& (0+255),b
 34824  0045CE  0E00               	movlw	0
 34825  0045D0  6F62               	movwf	memset@c& (0+255),b
 34826  0045D2  0E00               	movlw	0
 34827  0045D4  6F65               	movwf	(memset@n+1)& (0+255),b
 34828  0045D6  0E69               	movlw	105
 34829  0045D8  6F64               	movwf	memset@n& (0+255),b
 34830  0045DA  ECCB  F042         	call	_memset	;wreg free
 34831                           
 34832                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 34833  0045DE  0E03               	movlw	3
 34834  0045E0  0102               	movlb	2	; () banked
 34835  0045E2  6F95               	movwf	(_loRa+149)& (0+255),b
 34836  0045E4  0EE8               	movlw	232
 34837  0045E6  6F94               	movwf	(_loRa+148)& (0+255),b
 34838                           
 34839                           ; BSR set to: 2
 34840                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 34841  0045E8  0E07               	movlw	7
 34842  0045EA  6F97               	movwf	(_loRa+151)& (0+255),b
 34843  0045EC  0ED0               	movlw	208
 34844  0045EE  6F96               	movwf	(_loRa+150)& (0+255),b
 34845                           
 34846                           ; BSR set to: 2
 34847                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 34848  0045F0  0E13               	movlw	19
 34849  0045F2  6F99               	movwf	(_loRa+153)& (0+255),b
 34850  0045F4  0E88               	movlw	136
 34851  0045F6  6F98               	movwf	(_loRa+152)& (0+255),b
 34852                           
 34853                           ; BSR set to: 2
 34854                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 34855  0045F8  0E17               	movlw	23
 34856  0045FA  6F9B               	movwf	(_loRa+155)& (0+255),b
 34857  0045FC  0E70               	movlw	112
 34858  0045FE  6F9A               	movwf	(_loRa+154)& (0+255),b
 34859                           
 34860                           ; BSR set to: 2
 34861                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 34862  004600  0E07               	movlw	7
 34863  004602  6FA1               	movwf	(_loRa+161)& (0+255),b
 34864  004604  0ED0               	movlw	208
 34865  004606  6FA0               	movwf	(_loRa+160)& (0+255),b
 34866                           
 34867                           ; BSR set to: 2
 34868                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 34869  004608  0E20               	movlw	32
 34870  00460A  6FA3               	movwf	(_loRa+163)& (0+255),b
 34871                           
 34872                           ; BSR set to: 2
 34873                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 34874  00460C  0E40               	movlw	64
 34875  00460E  6FA2               	movwf	(_loRa+162)& (0+255),b
 34876                           
 34877                           ; BSR set to: 2
 34878                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 34879  004610  0E40               	movlw	64
 34880  004612  6F9D               	movwf	(_loRa+157)& (0+255),b
 34881  004614  0E00               	movlw	0
 34882  004616  6F9C               	movwf	(_loRa+156)& (0+255),b
 34883                           
 34884                           ; BSR set to: 2
 34885                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 34886  004618  0E40               	movlw	64
 34887  00461A  6F9F               	movwf	(_loRa+159)& (0+255),b
 34888  00461C  0E00               	movlw	0
 34889  00461E  6F9E               	movwf	(_loRa+158)& (0+255),b
 34890                           
 34891                           ; BSR set to: 2
 34892                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 34893  004620  0E00               	movlw	0
 34894  004622  0100               	movlb	0	; () banked
 34895  004624  6FA7               	movwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 34896  004626  0E00               	movlw	0
 34897  004628  6FA6               	movwf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 34898  00462A  EC23  F029         	call	_LORAWAN_LinkCheckConfigure	;wreg free
 34899  00462E  0012               	return		;funcret
 34900  004630                     __end_of_LORAWAN_Reset:
 34901                           	opt stack 0
 34902                           tosu	equ	0xFFF
 34903                           tosh	equ	0xFFE
 34904                           tosl	equ	0xFFD
 34905                           pclath	equ	0xFFA
 34906                           tblptru	equ	0xFF8
 34907                           tblptrh	equ	0xFF7
 34908                           tblptrl	equ	0xFF6
 34909                           tablat	equ	0xFF5
 34910                           prodh	equ	0xFF4
 34911                           prodl	equ	0xFF3
 34912                           intcon	equ	0xFF2
 34913                           intcon2	equ	0xFF1
 34914                           intcon3	equ	0xFF0
 34915                           indf0	equ	0xFEF
 34916                           postinc0	equ	0xFEE
 34917                           plusw0	equ	0xFEB
 34918                           fsr0h	equ	0xFEA
 34919                           fsr0l	equ	0xFE9
 34920                           wreg	equ	0xFE8
 34921                           postinc1	equ	0xFE6
 34922                           postdec1	equ	0xFE5
 34923                           plusw1	equ	0xFE3
 34924                           fsr1h	equ	0xFE2
 34925                           fsr1l	equ	0xFE1
 34926                           indf2	equ	0xFDF
 34927                           postinc2	equ	0xFDE
 34928                           postdec2	equ	0xFDD
 34929                           plusw2	equ	0xFDB
 34930                           fsr2h	equ	0xFDA
 34931                           fsr2l	equ	0xFD9
 34932                           status	equ	0xFD8
 34933                           
 34934 ;; *************** function _UpdateMinMaxChDataRate *****************
 34935 ;; Defined at:
 34936 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 34937 ;; Parameters:    Size  Location     Type
 34938 ;;		None
 34939 ;; Auto vars:     Size  Location     Type
 34940 ;;  i               1    1[BANK0 ] unsigned char 
 34941 ;; Return value:  Size  Location     Type
 34942 ;;                  1    wreg      void 
 34943 ;; Registers used:
 34944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34945 ;; Tracked objects:
 34946 ;;		On entry : 0/0
 34947 ;;		On exit  : 0/0
 34948 ;;		Unchanged: 0/0
 34949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34951 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34952 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34953 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34954 ;;Total ram usage:        2 bytes
 34955 ;; Hardware stack levels used:    1
 34956 ;; Hardware stack levels required when called:    7
 34957 ;; This function calls:
 34958 ;;		Nothing
 34959 ;; This function is called by:
 34960 ;;		_LORAWAN_Reset
 34961 ;; This function uses a non-reentrant model
 34962 ;;
 34963                           
 34964                           	psect	text164
 34965  005F18                     __ptext164:
 34966                           	opt stack 0
 34967  005F18                     _UpdateMinMaxChDataRate:
 34968                           	opt stack 21
 34969                           
 34970                           ;lorawan.c: 1065: uint8_t i;
 34971                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 34972                           
 34973                           ;incstack = 0
 34974  005F18  0E07               	movlw	7
 34975  005F1A  0102               	movlb	2	; () banked
 34976  005F1C  6FEB               	movwf	(_loRa+235)& (0+255),b
 34977                           
 34978                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 34979  005F1E  0E00               	movlw	0
 34980  005F20  6FEC               	movwf	(_loRa+236)& (0+255),b
 34981                           
 34982                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 34983  005F22  0E00               	movlw	0
 34984  005F24  0100               	movlb	0	; () banked
 34985  005F26  6F61               	movwf	UpdateMinMaxChDataRate@i& (0+255),b
 34986  005F28  D06D               	goto	l1877
 34987  005F2A                     
 34988                           ; BSR set to: 0
 34989                           ;lorawan.c: 1072: {
 34990                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 34991                           
 34992                           ; BSR set to: 0
 34993  005F2A  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34994  005F2C  0D0E               	mullw	14
 34995  005F2E  0E05               	movlw	5
 34996  005F30  26F3               	addwf	prodl,f,c
 34997  005F32  0E00               	movlw	0
 34998  005F34  22F4               	addwfc	prodh,f,c
 34999  005F36  0E00               	movlw	low _Channels
 35000  005F38  24F3               	addwf	prodl,w,c
 35001  005F3A  6ED9               	movwf	fsr2l,c
 35002  005F3C  0E04               	movlw	high _Channels
 35003  005F3E  20F4               	addwfc	prodh,w,c
 35004  005F40  6EDA               	movwf	fsr2h,c
 35005  005F42  0104               	movlb	4	; () banked
 35006  005F44  50DF               	movf	223,w,c
 35007  005F46  0B0F               	andlw	15
 35008  005F48  0100               	movlb	0	; () banked
 35009  005F4A  6F60               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 35010  005F4C  0102               	movlb	2	; () banked
 35011  005F4E  51EB               	movf	(_loRa+235)& (0+255),w,b
 35012  005F50  0100               	movlb	0	; () banked
 35013  005F52  5D60               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 35014  005F54  B0D8               	btfsc	status,0,c
 35015  005F56  D020               	goto	l1879
 35016                           
 35017                           ; BSR set to: 0
 35018  005F58  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35019  005F5A  0D0E               	mullw	14
 35020  005F5C  0E04               	movlw	4
 35021  005F5E  26F3               	addwf	prodl,f,c
 35022  005F60  0E00               	movlw	0
 35023  005F62  22F4               	addwfc	prodh,f,c
 35024  005F64  0E00               	movlw	low _Channels
 35025  005F66  24F3               	addwf	prodl,w,c
 35026  005F68  6ED9               	movwf	fsr2l,c
 35027  005F6A  0E04               	movlw	high _Channels
 35028  005F6C  20F4               	addwfc	prodh,w,c
 35029  005F6E  6EDA               	movwf	fsr2h,c
 35030  005F70  04DE               	decf	postinc2,w,c
 35031  005F72  A4D8               	btfss	status,2,c
 35032  005F74  D011               	goto	l1879
 35033                           
 35034                           ; BSR set to: 0
 35035                           ;lorawan.c: 1074: {
 35036                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 35037  005F76  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35038  005F78  0D0E               	mullw	14
 35039  005F7A  0E05               	movlw	5
 35040  005F7C  26F3               	addwf	prodl,f,c
 35041  005F7E  0E00               	movlw	0
 35042  005F80  22F4               	addwfc	prodh,f,c
 35043  005F82  0E00               	movlw	low _Channels
 35044  005F84  24F3               	addwf	prodl,w,c
 35045  005F86  6ED9               	movwf	fsr2l,c
 35046  005F88  0E04               	movlw	high _Channels
 35047  005F8A  20F4               	addwfc	prodh,w,c
 35048  005F8C  6EDA               	movwf	fsr2h,c
 35049  005F8E  0104               	movlb	4	; () banked
 35050  005F90  50DF               	movf	223,w,c
 35051  005F92  0B0F               	andlw	15
 35052  005F94  0102               	movlb	2	; () banked
 35053  005F96  6FEB               	movwf	(_loRa+235)& (0+255),b
 35054  005F98                     l1879:
 35055                           
 35056                           ;lorawan.c: 1076: }
 35057                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 35058  005F98  0100               	movlb	0	; () banked
 35059  005F9A  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35060  005F9C  0D0E               	mullw	14
 35061  005F9E  0E05               	movlw	5
 35062  005FA0  26F3               	addwf	prodl,f,c
 35063  005FA2  0E00               	movlw	0
 35064  005FA4  22F4               	addwfc	prodh,f,c
 35065  005FA6  0E00               	movlw	low _Channels
 35066  005FA8  24F3               	addwf	prodl,w,c
 35067  005FAA  6ED9               	movwf	fsr2l,c
 35068  005FAC  0E04               	movlw	high _Channels
 35069  005FAE  20F4               	addwfc	prodh,w,c
 35070  005FB0  6EDA               	movwf	fsr2h,c
 35071  005FB2  0104               	movlb	4	; () banked
 35072  005FB4  38DF               	swapf	223,w,c
 35073  005FB6  0B0F               	andlw	15
 35074  005FB8  0102               	movlb	2	; () banked
 35075  005FBA  61EC               	cpfslt	(_loRa+236)& (0+255),b
 35076  005FBC  D021               	goto	l1880
 35077                           
 35078                           ; BSR set to: 2
 35079  005FBE  0100               	movlb	0	; () banked
 35080  005FC0  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35081  005FC2  0D0E               	mullw	14
 35082  005FC4  0E04               	movlw	4
 35083  005FC6  26F3               	addwf	prodl,f,c
 35084  005FC8  0E00               	movlw	0
 35085  005FCA  22F4               	addwfc	prodh,f,c
 35086  005FCC  0E00               	movlw	low _Channels
 35087  005FCE  24F3               	addwf	prodl,w,c
 35088  005FD0  6ED9               	movwf	fsr2l,c
 35089  005FD2  0E04               	movlw	high _Channels
 35090  005FD4  20F4               	addwfc	prodh,w,c
 35091  005FD6  6EDA               	movwf	fsr2h,c
 35092  005FD8  04DE               	decf	postinc2,w,c
 35093  005FDA  A4D8               	btfss	status,2,c
 35094  005FDC  D011               	goto	l1880
 35095                           
 35096                           ; BSR set to: 0
 35097                           ;lorawan.c: 1078: {
 35098                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 35099  005FDE  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35100  005FE0  0D0E               	mullw	14
 35101  005FE2  0E05               	movlw	5
 35102  005FE4  26F3               	addwf	prodl,f,c
 35103  005FE6  0E00               	movlw	0
 35104  005FE8  22F4               	addwfc	prodh,f,c
 35105  005FEA  0E00               	movlw	low _Channels
 35106  005FEC  24F3               	addwf	prodl,w,c
 35107  005FEE  6ED9               	movwf	fsr2l,c
 35108  005FF0  0E04               	movlw	high _Channels
 35109  005FF2  20F4               	addwfc	prodh,w,c
 35110  005FF4  6EDA               	movwf	fsr2h,c
 35111  005FF6  0104               	movlb	4	; () banked
 35112  005FF8  38DF               	swapf	223,w,c
 35113  005FFA  0B0F               	andlw	15
 35114  005FFC  0102               	movlb	2	; () banked
 35115  005FFE  6FEC               	movwf	(_loRa+236)& (0+255),b
 35116  006000                     l1880:
 35117                           
 35118                           ; BSR set to: 2
 35119  006000  0100               	movlb	0	; () banked
 35120  006002  2B61               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 35121  006004                     l1877:
 35122                           
 35123                           ; BSR set to: 0
 35124                           
 35125                           ; BSR set to: 0
 35126  006004  0102               	movlb	2	; () banked
 35127  006006  51ED               	movf	(_loRa+237)& (0+255),w,b
 35128  006008  0100               	movlb	0	; () banked
 35129  00600A  5D61               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35130  00600C  B0D8               	btfsc	status,0,c
 35131  00600E  0012               	return	
 35132  006010  D78C               	goto	l1878
 35133  006012                     __end_of_UpdateMinMaxChDataRate:
 35134                           	opt stack 0
 35135                           tosu	equ	0xFFF
 35136                           tosh	equ	0xFFE
 35137                           tosl	equ	0xFFD
 35138                           pclath	equ	0xFFA
 35139                           tblptru	equ	0xFF8
 35140                           tblptrh	equ	0xFF7
 35141                           tblptrl	equ	0xFF6
 35142                           tablat	equ	0xFF5
 35143                           prodh	equ	0xFF4
 35144                           prodl	equ	0xFF3
 35145                           intcon	equ	0xFF2
 35146                           intcon2	equ	0xFF1
 35147                           intcon3	equ	0xFF0
 35148                           indf0	equ	0xFEF
 35149                           postinc0	equ	0xFEE
 35150                           plusw0	equ	0xFEB
 35151                           fsr0h	equ	0xFEA
 35152                           fsr0l	equ	0xFE9
 35153                           wreg	equ	0xFE8
 35154                           postinc1	equ	0xFE6
 35155                           postdec1	equ	0xFE5
 35156                           plusw1	equ	0xFE3
 35157                           fsr1h	equ	0xFE2
 35158                           fsr1l	equ	0xFE1
 35159                           indf2	equ	0xFDF
 35160                           postinc2	equ	0xFDE
 35161                           postdec2	equ	0xFDD
 35162                           plusw2	equ	0xFDB
 35163                           fsr2h	equ	0xFDA
 35164                           fsr2l	equ	0xFD9
 35165                           status	equ	0xFD8
 35166                           
 35167 ;; *************** function _StopAllSoftwareTimers *****************
 35168 ;; Defined at:
 35169 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 35170 ;; Parameters:    Size  Location     Type
 35171 ;;		None
 35172 ;; Auto vars:     Size  Location     Type
 35173 ;;		None
 35174 ;; Return value:  Size  Location     Type
 35175 ;;                  1    wreg      void 
 35176 ;; Registers used:
 35177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35178 ;; Tracked objects:
 35179 ;;		On entry : 0/0
 35180 ;;		On exit  : 0/0
 35181 ;;		Unchanged: 0/0
 35182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35187 ;;Total ram usage:        0 bytes
 35188 ;; Hardware stack levels used:    1
 35189 ;; Hardware stack levels required when called:    8
 35190 ;; This function calls:
 35191 ;;		_SwTimerStop
 35192 ;; This function is called by:
 35193 ;;		_LORAWAN_Init
 35194 ;;		_LORAWAN_Reset
 35195 ;; This function uses a non-reentrant model
 35196 ;;
 35197                           
 35198                           	psect	text165
 35199  007EE2                     __ptext165:
 35200                           	opt stack 0
 35201  007EE2                     _StopAllSoftwareTimers:
 35202                           	opt stack 21
 35203                           
 35204                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 35205                           
 35206                           ; BSR set to: 0
 35207                           ;incstack = 0
 35208  007EE2  0102               	movlb	2	; () banked
 35209  007EE4  51E2               	movf	(_loRa+226)& (0+255),w,b
 35210  007EE6  ECF9  F043         	call	_SwTimerStop
 35211                           
 35212                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 35213  007EEA  0102               	movlb	2	; () banked
 35214  007EEC  51E3               	movf	(_loRa+227)& (0+255),w,b
 35215  007EEE  ECF9  F043         	call	_SwTimerStop
 35216                           
 35217                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 35218  007EF2  0102               	movlb	2	; () banked
 35219  007EF4  51E7               	movf	(_loRa+231)& (0+255),w,b
 35220  007EF6  ECF9  F043         	call	_SwTimerStop
 35221                           
 35222                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 35223  007EFA  0102               	movlb	2	; () banked
 35224  007EFC  51E4               	movf	(_loRa+228)& (0+255),w,b
 35225  007EFE  ECF9  F043         	call	_SwTimerStop
 35226                           
 35227                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 35228  007F02  0102               	movlb	2	; () banked
 35229  007F04  51E5               	movf	(_loRa+229)& (0+255),w,b
 35230  007F06  ECF9  F043         	call	_SwTimerStop
 35231                           
 35232                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 35233  007F0A  0102               	movlb	2	; () banked
 35234  007F0C  51E8               	movf	(_loRa+232)& (0+255),w,b
 35235  007F0E  ECF9  F043         	call	_SwTimerStop
 35236                           
 35237                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 35238  007F12  0102               	movlb	2	; () banked
 35239  007F14  51E6               	movf	(_loRa+230)& (0+255),w,b
 35240  007F16  ECF9  F043         	call	_SwTimerStop
 35241                           
 35242                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 35243  007F1A  0102               	movlb	2	; () banked
 35244  007F1C  51EA               	movf	(_loRa+234)& (0+255),w,b
 35245  007F1E  ECF9  F043         	call	_SwTimerStop
 35246                           
 35247                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 35248  007F22  0102               	movlb	2	; () banked
 35249  007F24  51F3               	movf	(_loRa+243)& (0+255),w,b
 35250  007F26  ECF9  F043         	call	_SwTimerStop
 35251                           
 35252                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 35253  007F2A  0102               	movlb	2	; () banked
 35254  007F2C  51E9               	movf	(_loRa+233)& (0+255),w,b
 35255  007F2E  ECF9  F043         	call	_SwTimerStop
 35256  007F32  0012               	return		;funcret
 35257  007F34                     __end_of_StopAllSoftwareTimers:
 35258                           	opt stack 0
 35259                           tosu	equ	0xFFF
 35260                           tosh	equ	0xFFE
 35261                           tosl	equ	0xFFD
 35262                           pclath	equ	0xFFA
 35263                           tblptru	equ	0xFF8
 35264                           tblptrh	equ	0xFF7
 35265                           tblptrl	equ	0xFF6
 35266                           tablat	equ	0xFF5
 35267                           prodh	equ	0xFF4
 35268                           prodl	equ	0xFF3
 35269                           intcon	equ	0xFF2
 35270                           intcon2	equ	0xFF1
 35271                           intcon3	equ	0xFF0
 35272                           indf0	equ	0xFEF
 35273                           postinc0	equ	0xFEE
 35274                           plusw0	equ	0xFEB
 35275                           fsr0h	equ	0xFEA
 35276                           fsr0l	equ	0xFE9
 35277                           wreg	equ	0xFE8
 35278                           postinc1	equ	0xFE6
 35279                           postdec1	equ	0xFE5
 35280                           plusw1	equ	0xFE3
 35281                           fsr1h	equ	0xFE2
 35282                           fsr1l	equ	0xFE1
 35283                           indf2	equ	0xFDF
 35284                           postinc2	equ	0xFDE
 35285                           postdec2	equ	0xFDD
 35286                           plusw2	equ	0xFDB
 35287                           fsr2h	equ	0xFDA
 35288                           fsr2l	equ	0xFD9
 35289                           status	equ	0xFD8
 35290                           
 35291 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 35292 ;; Defined at:
 35293 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35294 ;; Parameters:    Size  Location     Type
 35295 ;;  syncWord        1    wreg     unsigned char 
 35296 ;; Auto vars:     Size  Location     Type
 35297 ;;  syncWord        1    0[BANK0 ] unsigned char 
 35298 ;; Return value:  Size  Location     Type
 35299 ;;                  1    wreg      void 
 35300 ;; Registers used:
 35301 ;;		wreg
 35302 ;; Tracked objects:
 35303 ;;		On entry : 0/0
 35304 ;;		On exit  : 0/0
 35305 ;;		Unchanged: 0/0
 35306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35310 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35311 ;;Total ram usage:        1 bytes
 35312 ;; Hardware stack levels used:    1
 35313 ;; Hardware stack levels required when called:    7
 35314 ;; This function calls:
 35315 ;;		Nothing
 35316 ;; This function is called by:
 35317 ;;		_LORAWAN_Reset
 35318 ;;		_ConfigureRadio
 35319 ;; This function uses a non-reentrant model
 35320 ;;
 35321                           
 35322                           	psect	text166
 35323  008D38                     __ptext166:
 35324                           	opt stack 0
 35325  008D38                     _RADIO_SetLoRaSyncWord:
 35326                           	opt stack 19
 35327                           
 35328                           ;incstack = 0
 35329                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 35330  008D38  0100               	movlb	0	; () banked
 35331  008D3A  6F60               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 35332                           
 35333                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 35334  008D3C  C060  F132         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 35335  008D40  0012               	return		;funcret
 35336  008D42                     __end_of_RADIO_SetLoRaSyncWord:
 35337                           	opt stack 0
 35338                           tosu	equ	0xFFF
 35339                           tosh	equ	0xFFE
 35340                           tosl	equ	0xFFD
 35341                           pclath	equ	0xFFA
 35342                           tblptru	equ	0xFF8
 35343                           tblptrh	equ	0xFF7
 35344                           tblptrl	equ	0xFF6
 35345                           tablat	equ	0xFF5
 35346                           prodh	equ	0xFF4
 35347                           prodl	equ	0xFF3
 35348                           intcon	equ	0xFF2
 35349                           intcon2	equ	0xFF1
 35350                           intcon3	equ	0xFF0
 35351                           indf0	equ	0xFEF
 35352                           postinc0	equ	0xFEE
 35353                           plusw0	equ	0xFEB
 35354                           fsr0h	equ	0xFEA
 35355                           fsr0l	equ	0xFE9
 35356                           wreg	equ	0xFE8
 35357                           postinc1	equ	0xFE6
 35358                           postdec1	equ	0xFE5
 35359                           plusw1	equ	0xFE3
 35360                           fsr1h	equ	0xFE2
 35361                           fsr1l	equ	0xFE1
 35362                           indf2	equ	0xFDF
 35363                           postinc2	equ	0xFDE
 35364                           postdec2	equ	0xFDD
 35365                           plusw2	equ	0xFDB
 35366                           fsr2h	equ	0xFDA
 35367                           fsr2l	equ	0xFD9
 35368                           status	equ	0xFD8
 35369                           
 35370 ;; *************** function _RADIO_Init *****************
 35371 ;; Defined at:
 35372 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35373 ;; Parameters:    Size  Location     Type
 35374 ;;  radioBuffer     2   25[BANK0 ] PTR unsigned char 
 35375 ;;		 -> radioBuffer(271), 
 35376 ;;  frequency       4   27[BANK0 ] unsigned long 
 35377 ;; Auto vars:     Size  Location     Type
 35378 ;;		None
 35379 ;; Return value:  Size  Location     Type
 35380 ;;                  1    wreg      void 
 35381 ;; Registers used:
 35382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35383 ;; Tracked objects:
 35384 ;;		On entry : 0/0
 35385 ;;		On exit  : 0/0
 35386 ;;		Unchanged: 0/0
 35387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35388 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35390 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35391 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35392 ;;Total ram usage:        7 bytes
 35393 ;; Hardware stack levels used:    1
 35394 ;; Hardware stack levels required when called:   11
 35395 ;; This function calls:
 35396 ;;		_RADIO_RegisterRead
 35397 ;;		_RADIO_RegisterWrite
 35398 ;;		_RADIO_Reset
 35399 ;;		_RADIO_WriteFrequency
 35400 ;;		_RADIO_WriteMode
 35401 ;;		_SwTimerCreate
 35402 ;;		_SwTimerSetCallback
 35403 ;;		_SwTimerStop
 35404 ;; This function is called by:
 35405 ;;		_LORAWAN_Init
 35406 ;;		_LORAWAN_Reset
 35407 ;; This function uses a non-reentrant model
 35408 ;;
 35409                           
 35410                           	psect	text167
 35411  004630                     __ptext167:
 35412                           	opt stack 0
 35413  004630                     _RADIO_Init:
 35414                           	opt stack 18
 35415                           
 35416                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 35417                           
 35418                           ;incstack = 0
 35419  004630  C07B  F124         	movff	RADIO_Init@frequency,_RadioConfiguration
 35420  004634  C07C  F125         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 35421  004638  C07D  F126         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 35422  00463C  C07E  F127         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 35423                           
 35424                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 35425  004640  0EA8               	movlw	168
 35426  004642  0101               	movlb	1	; () banked
 35427  004644  6F28               	movwf	(_RadioConfiguration+4)& (0+255),b
 35428  004646  0E61               	movlw	97
 35429  004648  6F29               	movwf	(_RadioConfiguration+5)& (0+255),b
 35430  00464A  0E00               	movlw	0
 35431  00464C  6F2A               	movwf	(_RadioConfiguration+6)& (0+255),b
 35432  00464E  0E00               	movlw	0
 35433  004650  6F2B               	movwf	(_RadioConfiguration+7)& (0+255),b
 35434                           
 35435                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 35436  004652  0E50               	movlw	80
 35437  004654  6F2C               	movwf	(_RadioConfiguration+8)& (0+255),b
 35438  004656  0EC3               	movlw	195
 35439  004658  6F2D               	movwf	(_RadioConfiguration+9)& (0+255),b
 35440  00465A  0E00               	movlw	0
 35441  00465C  6F2E               	movwf	(_RadioConfiguration+10)& (0+255),b
 35442  00465E  0E00               	movlw	0
 35443  004660  6F2F               	movwf	(_RadioConfiguration+11)& (0+255),b
 35444                           
 35445                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 35446  004662  0E01               	movlw	1
 35447  004664  6F3C               	movwf	(_RadioConfiguration+24)& (0+255),b
 35448                           
 35449                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 35450  004666  0E07               	movlw	7
 35451  004668  6F3E               	movwf	(_RadioConfiguration+26)& (0+255),b
 35452                           
 35453                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 35454  00466A  0E01               	movlw	1
 35455  00466C  6F3F               	movwf	(_RadioConfiguration+27)& (0+255),b
 35456                           
 35457                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 35458  00466E  0E01               	movlw	1
 35459  004670  6F45               	movwf	(_RadioConfiguration+33)& (0+255),b
 35460                           
 35461                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 35462  004672  0E00               	movlw	0
 35463  004674  6F46               	movwf	(_RadioConfiguration+34)& (0+255),b
 35464                           
 35465                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 35466  004676  0E00               	movlw	0
 35467  004678  6F31               	movwf	(_RadioConfiguration+13)& (0+255),b
 35468  00467A  0E08               	movlw	8
 35469  00467C  6F30               	movwf	(_RadioConfiguration+12)& (0+255),b
 35470                           
 35471                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 35472  00467E  0E0C               	movlw	12
 35473  004680  6F3D               	movwf	(_RadioConfiguration+25)& (0+255),b
 35474                           
 35475                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 35476  004682  0E01               	movlw	1
 35477  004684  6F40               	movwf	(_RadioConfiguration+28)& (0+255),b
 35478                           
 35479                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 35480  004686  0E00               	movlw	0
 35481  004688  6F41               	movwf	(_RadioConfiguration+29)& (0+255),b
 35482                           
 35483                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 35484  00468A  0E00               	movlw	0
 35485  00468C  6F44               	movwf	(_RadioConfiguration+32)& (0+255),b
 35486                           
 35487                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 35488  00468E  0EC1               	movlw	193
 35489  004690  6F33               	movwf	(_RadioConfiguration+15)& (0+255),b
 35490                           
 35491                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 35492  004692  0E94               	movlw	148
 35493  004694  6F34               	movwf	(_RadioConfiguration+16)& (0+255),b
 35494                           
 35495                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 35496  004696  0EC1               	movlw	193
 35497  004698  6F35               	movwf	(_RadioConfiguration+17)& (0+255),b
 35498                           
 35499                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 35500  00469A  0E03               	movlw	3
 35501  00469C  6F3B               	movwf	(_RadioConfiguration+23)& (0+255),b
 35502                           
 35503                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 35504  00469E  0E34               	movlw	52
 35505  0046A0  6F32               	movwf	(_RadioConfiguration+14)& (0+255),b
 35506                           
 35507                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 35508  0046A2  0E00               	movlw	0
 35509  0046A4  6F47               	movwf	(_RadioConfiguration+35)& (0+255),b
 35510                           
 35511                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 35512  0046A6  0E00               	movlw	0
 35513  0046A8  6F48               	movwf	(_RadioConfiguration+36)& (0+255),b
 35514                           
 35515                           ; BSR set to: 1
 35516                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 35517  0046AA  C079  F149         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 35518  0046AE  C07A  F14A         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 35519                           
 35520                           ; BSR set to: 1
 35521                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 35522  0046B2  0E00               	movlw	0
 35523  0046B4  6F43               	movwf	(_RadioConfiguration+31)& (0+255),b
 35524  0046B6  0E00               	movlw	0
 35525  0046B8  6F42               	movwf	(_RadioConfiguration+30)& (0+255),b
 35526                           
 35527                           ; BSR set to: 1
 35528                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 35529  0046BA  0E80               	movlw	128
 35530  0046BC  6F56               	movwf	(_RadioConfiguration+50)& (0+255),b
 35531                           
 35532                           ; BSR set to: 1
 35533                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 35534  0046BE  0E98               	movlw	152
 35535  0046C0  6F4E               	movwf	(_RadioConfiguration+42)& (0+255),b
 35536  0046C2  0E3A               	movlw	58
 35537  0046C4  6F4F               	movwf	(_RadioConfiguration+43)& (0+255),b
 35538  0046C6  0E00               	movlw	0
 35539  0046C8  6F50               	movwf	(_RadioConfiguration+44)& (0+255),b
 35540  0046CA  0E00               	movlw	0
 35541  0046CC  6F51               	movwf	(_RadioConfiguration+45)& (0+255),b
 35542                           
 35543                           ; BSR set to: 1
 35544                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 35545  0046CE  0E02               	movlw	2
 35546  0046D0  6F57               	movwf	(_RadioConfiguration+51)& (0+255),b
 35547                           
 35548                           ; BSR set to: 1
 35549                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 35550  0046D2  0E0B               	movlw	11
 35551  0046D4  6F58               	movwf	(_RadioConfiguration+52)& (0+255),b
 35552                           
 35553                           ; BSR set to: 1
 35554                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 35555  0046D6  0E12               	movlw	18
 35556  0046D8  6F59               	movwf	(_RadioConfiguration+53)& (0+255),b
 35557                           
 35558                           ; BSR set to: 1
 35559                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 35560  0046DA  0E00               	movlw	0
 35561  0046DC  6F53               	movwf	(_RadioConfiguration+47)& (0+255),b
 35562  0046DE  0E00               	movlw	0
 35563  0046E0  6F54               	movwf	(_RadioConfiguration+48)& (0+255),b
 35564                           
 35565                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 35566  0046E2  5152               	movf	(_RadioConfiguration+46)& (0+255),w,b
 35567  0046E4  A4D8               	btfss	status,2,c
 35568  0046E6  D026               	goto	l441
 35569                           
 35570                           ; BSR set to: 1
 35571                           ;radio_driver_SX1276.c: 457: {
 35572                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 35573  0046E8  EC19  F038         	call	_SwTimerCreate	;wreg free
 35574  0046EC  0101               	movlb	1	; () banked
 35575  0046EE  6F4B               	movwf	(_RadioConfiguration+39)& (0+255),b
 35576                           
 35577                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 35578  0046F0  EC19  F038         	call	_SwTimerCreate	;wreg free
 35579  0046F4  0101               	movlb	1	; () banked
 35580  0046F6  6F4C               	movwf	(_RadioConfiguration+40)& (0+255),b
 35581                           
 35582                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 35583  0046F8  EC19  F038         	call	_SwTimerCreate	;wreg free
 35584  0046FC  0101               	movlb	1	; () banked
 35585  0046FE  6F4D               	movwf	(_RadioConfiguration+41)& (0+255),b
 35586                           
 35587                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 35588  004700  0ECE               	movlw	low _RADIO_RxFSKTimeout
 35589  004702  0100               	movlb	0	; () banked
 35590  004704  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35591  004706  0E83               	movlw	high _RADIO_RxFSKTimeout
 35592  004708  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35593  00470A  0E00               	movlw	0
 35594  00470C  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35595  00470E  0101               	movlb	1	; () banked
 35596  004710  514C               	movf	(_RadioConfiguration+40)& (0+255),w,b
 35597  004712  EC01  F041         	call	_SwTimerSetCallback
 35598                           
 35599                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 35600  004716  0E64               	movlw	low _RADIO_WatchdogTimeout
 35601  004718  0100               	movlb	0	; () banked
 35602  00471A  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35603  00471C  0E80               	movlw	high _RADIO_WatchdogTimeout
 35604  00471E  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35605  004720  0E00               	movlw	0
 35606  004722  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35607  004724  0101               	movlb	1	; () banked
 35608  004726  514D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 35609  004728  EC01  F041         	call	_SwTimerSetCallback
 35610                           
 35611                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 35612  00472C  0E01               	movlw	1
 35613  00472E  0101               	movlb	1	; () banked
 35614  004730  6F52               	movwf	(_RadioConfiguration+46)& (0+255),b
 35615                           
 35616                           ;radio_driver_SX1276.c: 466: }
 35617  004732  D00B               	goto	l442
 35618  004734                     l441:
 35619                           
 35620                           ; BSR set to: 1
 35621                           ;radio_driver_SX1276.c: 467: else
 35622                           ;radio_driver_SX1276.c: 468: {
 35623                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 35624                           
 35625                           ; BSR set to: 1
 35626  004734  514B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 35627  004736  ECF9  F043         	call	_SwTimerStop
 35628                           
 35629                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 35630  00473A  0101               	movlb	1	; () banked
 35631  00473C  514C               	movf	(_RadioConfiguration+40)& (0+255),w,b
 35632  00473E  ECF9  F043         	call	_SwTimerStop
 35633                           
 35634                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 35635  004742  0101               	movlb	1	; () banked
 35636  004744  514D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 35637  004746  ECF9  F043         	call	_SwTimerStop
 35638  00474A                     l442:
 35639                           
 35640                           ;radio_driver_SX1276.c: 472: }
 35641                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 35642  00474A  EC78  F040         	call	_RADIO_Reset	;wreg free
 35643                           
 35644                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 35645  00474E  0E00               	movlw	0
 35646  004750  0100               	movlb	0	; () banked
 35647  004752  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 35648  004754  0E01               	movlw	1
 35649  004756  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 35650  004758  0E01               	movlw	1
 35651  00475A  EC0D  F02F         	call	_RADIO_WriteMode
 35652                           
 35653                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 35654  00475E  C124  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 35655  004762  C125  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 35656  004766  C126  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 35657  00476A  C127  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 35658  00476E  ECFB  F030         	call	_RADIO_WriteFrequency	;wreg free
 35659                           
 35660                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 35661  004772  0E42               	movlw	66
 35662  004774  0100               	movlb	0	; () banked
 35663  004776  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35664  004778  0E3B               	movlw	59
 35665  00477A  ECA6  F044         	call	_RADIO_RegisterWrite
 35666  00477E                     
 35667                           ;radio_driver_SX1276.c: 490: ;
 35668  00477E  0E3B               	movlw	59
 35669  004780  ECE5  F043         	call	_RADIO_RegisterRead
 35670  004784  0100               	movlb	0	; () banked
 35671  004786  6F7F               	movwf	??_RADIO_Init& (0+255),b
 35672  004788  BB7F               	btfsc	??_RADIO_Init& (0+255),5,b
 35673  00478A  D7F9               	goto	l444
 35674                           
 35675                           ; BSR set to: 0
 35676                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 35677                           
 35678                           ; BSR set to: 0
 35679  00478C  0E23               	movlw	35
 35680  00478E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35681  004790  0E0C               	movlw	12
 35682  004792  ECA6  F044         	call	_RADIO_RegisterWrite
 35683                           
 35684                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 35685  004796  0E1E               	movlw	30
 35686  004798  0100               	movlb	0	; () banked
 35687  00479A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35688  00479C  0E0D               	movlw	13
 35689  00479E  ECA6  F044         	call	_RADIO_RegisterWrite
 35690                           
 35691                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 35692  0047A2  0EAA               	movlw	170
 35693  0047A4  0100               	movlb	0	; () banked
 35694  0047A6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35695  0047A8  0E1F               	movlw	31
 35696  0047AA  ECA6  F044         	call	_RADIO_RegisterWrite
 35697                           
 35698                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 35699  0047AE  0E8F               	movlw	143
 35700  0047B0  0100               	movlb	0	; () banked
 35701  0047B2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35702  0047B4  0E35               	movlw	53
 35703  0047B6  ECA6  F044         	call	_RADIO_RegisterWrite
 35704                           
 35705                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 35706  0047BA  0EFF               	movlw	255
 35707  0047BC  0100               	movlb	0	; () banked
 35708  0047BE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35709  0047C0  0E32               	movlw	50
 35710  0047C2  ECA6  F044         	call	_RADIO_RegisterWrite
 35711                           
 35712                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 35713  0047C6  0E40               	movlw	64
 35714  0047C8  0100               	movlb	0	; () banked
 35715  0047CA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35716  0047CC  0E31               	movlw	49
 35717  0047CE  ECA6  F044         	call	_RADIO_RegisterWrite
 35718                           
 35719                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 35720  0047D2  0E01               	movlw	1
 35721  0047D4  0100               	movlb	0	; () banked
 35722  0047D6  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 35723  0047D8  0E01               	movlw	1
 35724  0047DA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 35725  0047DC  0E00               	movlw	0
 35726  0047DE  EC0D  F02F         	call	_RADIO_WriteMode
 35727                           
 35728                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 35729  0047E2  0EFF               	movlw	255
 35730  0047E4  0100               	movlb	0	; () banked
 35731  0047E6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35732  0047E8  0E23               	movlw	35
 35733  0047EA  ECA6  F044         	call	_RADIO_RegisterWrite
 35734                           
 35735                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 35736  0047EE  0E42               	movlw	66
 35737  0047F0  ECE5  F043         	call	_RADIO_RegisterRead
 35738  0047F4  0101               	movlb	1	; () banked
 35739  0047F6  6F55               	movwf	(_RadioConfiguration+49)& (0+255),b
 35740                           
 35741                           ; BSR set to: 1
 35742  0047F8  0012               	return		;funcret
 35743  0047FA                     __end_of_RADIO_Init:
 35744                           	opt stack 0
 35745                           tosu	equ	0xFFF
 35746                           tosh	equ	0xFFE
 35747                           tosl	equ	0xFFD
 35748                           pclath	equ	0xFFA
 35749                           tblptru	equ	0xFF8
 35750                           tblptrh	equ	0xFF7
 35751                           tblptrl	equ	0xFF6
 35752                           tablat	equ	0xFF5
 35753                           prodh	equ	0xFF4
 35754                           prodl	equ	0xFF3
 35755                           intcon	equ	0xFF2
 35756                           intcon2	equ	0xFF1
 35757                           intcon3	equ	0xFF0
 35758                           indf0	equ	0xFEF
 35759                           postinc0	equ	0xFEE
 35760                           plusw0	equ	0xFEB
 35761                           fsr0h	equ	0xFEA
 35762                           fsr0l	equ	0xFE9
 35763                           wreg	equ	0xFE8
 35764                           postinc1	equ	0xFE6
 35765                           postdec1	equ	0xFE5
 35766                           plusw1	equ	0xFE3
 35767                           fsr1h	equ	0xFE2
 35768                           fsr1l	equ	0xFE1
 35769                           indf2	equ	0xFDF
 35770                           postinc2	equ	0xFDE
 35771                           postdec2	equ	0xFDD
 35772                           plusw2	equ	0xFDB
 35773                           fsr2h	equ	0xFDA
 35774                           fsr2l	equ	0xFD9
 35775                           status	equ	0xFD8
 35776                           
 35777 ;; *************** function _SwTimerSetCallback *****************
 35778 ;; Defined at:
 35779 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35780 ;; Parameters:    Size  Location     Type
 35781 ;;  timerId         1    wreg     unsigned char 
 35782 ;;  callback        2    0[BANK0 ] PTR FTN(unsigned char ,)
 35783 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 35784 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 35785 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 35786 ;;  callbackPara    1    2[BANK0 ] unsigned char 
 35787 ;; Auto vars:     Size  Location     Type
 35788 ;;  timerId         1    3[BANK0 ] unsigned char 
 35789 ;; Return value:  Size  Location     Type
 35790 ;;                  1    wreg      void 
 35791 ;; Registers used:
 35792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35793 ;; Tracked objects:
 35794 ;;		On entry : 0/0
 35795 ;;		On exit  : 0/0
 35796 ;;		Unchanged: 0/0
 35797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35798 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35799 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35801 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35802 ;;Total ram usage:        4 bytes
 35803 ;; Hardware stack levels used:    1
 35804 ;; Hardware stack levels required when called:    7
 35805 ;; This function calls:
 35806 ;;		Nothing
 35807 ;; This function is called by:
 35808 ;;		_RADIO_Init
 35809 ;;		_SetCallbackSoftwareTimers
 35810 ;; This function uses a non-reentrant model
 35811 ;;
 35812                           
 35813                           	psect	text168
 35814  008202                     __ptext168:
 35815                           	opt stack 0
 35816  008202                     _SwTimerSetCallback:
 35817                           	opt stack 21
 35818                           
 35819                           ; BSR set to: 1
 35820                           ;incstack = 0
 35821                           ;SwTimerSetCallback@timerId stored from wreg
 35822  008202  0100               	movlb	0	; () banked
 35823  008204  6F63               	movwf	SwTimerSetCallback@timerId& (0+255),b
 35824                           
 35825                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 35826  008206  0100               	movlb	0	; () banked
 35827  008208  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 35828  00820A  0D08               	mullw	8
 35829  00820C  0E06               	movlw	6
 35830  00820E  26F3               	addwf	prodl,f,c
 35831  008210  0E00               	movlw	0
 35832  008212  22F4               	addwfc	prodh,f,c
 35833  008214  0E00               	movlw	low _swTimers
 35834  008216  24F3               	addwf	prodl,w,c
 35835  008218  6ED9               	movwf	fsr2l,c
 35836  00821A  0E03               	movlw	high _swTimers
 35837  00821C  20F4               	addwfc	prodh,w,c
 35838  00821E  6EDA               	movwf	fsr2h,c
 35839  008220  C060  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 35840  008224  C061  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 35841                           
 35842                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 35843  008228  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 35844  00822A  0D08               	mullw	8
 35845  00822C  0E05               	movlw	5
 35846  00822E  26F3               	addwf	prodl,f,c
 35847  008230  0E00               	movlw	0
 35848  008232  22F4               	addwfc	prodh,f,c
 35849  008234  0E00               	movlw	low _swTimers
 35850  008236  24F3               	addwf	prodl,w,c
 35851  008238  6ED9               	movwf	fsr2l,c
 35852  00823A  0E03               	movlw	high _swTimers
 35853  00823C  20F4               	addwfc	prodh,w,c
 35854  00823E  6EDA               	movwf	fsr2h,c
 35855  008240  C062  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 35856                           
 35857                           ; BSR set to: 0
 35858  008244  0012               	return		;funcret
 35859  008246                     __end_of_SwTimerSetCallback:
 35860                           	opt stack 0
 35861                           tosu	equ	0xFFF
 35862                           tosh	equ	0xFFE
 35863                           tosl	equ	0xFFD
 35864                           pclath	equ	0xFFA
 35865                           tblptru	equ	0xFF8
 35866                           tblptrh	equ	0xFF7
 35867                           tblptrl	equ	0xFF6
 35868                           tablat	equ	0xFF5
 35869                           prodh	equ	0xFF4
 35870                           prodl	equ	0xFF3
 35871                           intcon	equ	0xFF2
 35872                           intcon2	equ	0xFF1
 35873                           intcon3	equ	0xFF0
 35874                           indf0	equ	0xFEF
 35875                           postinc0	equ	0xFEE
 35876                           plusw0	equ	0xFEB
 35877                           fsr0h	equ	0xFEA
 35878                           fsr0l	equ	0xFE9
 35879                           wreg	equ	0xFE8
 35880                           postinc1	equ	0xFE6
 35881                           postdec1	equ	0xFE5
 35882                           plusw1	equ	0xFE3
 35883                           fsr1h	equ	0xFE2
 35884                           fsr1l	equ	0xFE1
 35885                           indf2	equ	0xFDF
 35886                           postinc2	equ	0xFDE
 35887                           postdec2	equ	0xFDD
 35888                           plusw2	equ	0xFDB
 35889                           fsr2h	equ	0xFDA
 35890                           fsr2l	equ	0xFD9
 35891                           status	equ	0xFD8
 35892                           
 35893 ;; *************** function _RADIO_WriteMode *****************
 35894 ;; Defined at:
 35895 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35896 ;; Parameters:    Size  Location     Type
 35897 ;;  newMode         1    wreg     enum E7718
 35898 ;;  newModulatio    1    5[BANK0 ] enum E6984
 35899 ;;  blocking        1    6[BANK0 ] unsigned char 
 35900 ;; Auto vars:     Size  Location     Type
 35901 ;;  newMode         1   10[BANK0 ] enum E7718
 35902 ;;  opMode          1   11[BANK0 ] unsigned char 
 35903 ;;  currentMode     1    9[BANK0 ] enum E7718
 35904 ;;  dioMapping      1    8[BANK0 ] unsigned char 
 35905 ;;  currentModul    1    7[BANK0 ] enum E6984
 35906 ;; Return value:  Size  Location     Type
 35907 ;;                  1    wreg      void 
 35908 ;; Registers used:
 35909 ;;		wreg, status,2, status,0, cstack
 35910 ;; Tracked objects:
 35911 ;;		On entry : 0/0
 35912 ;;		On exit  : 0/0
 35913 ;;		Unchanged: 0/0
 35914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35915 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35916 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35918 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35919 ;;Total ram usage:        7 bytes
 35920 ;; Hardware stack levels used:    1
 35921 ;; Hardware stack levels required when called:   10
 35922 ;; This function calls:
 35923 ;;		_HALDIO5PinValue
 35924 ;;		_RADIO_RegisterRead
 35925 ;;		_RADIO_RegisterWrite
 35926 ;;		_SystemBlockingWaitMs
 35927 ;; This function is called by:
 35928 ;;		_RADIO_Init
 35929 ;;		_RADIO_WriteConfiguration
 35930 ;;		_RADIO_Transmit
 35931 ;;		_RADIO_ReceiveStart
 35932 ;;		_RADIO_ReceiveStop
 35933 ;;		_RADIO_RxDone
 35934 ;;		_RADIO_FSKPayloadReady
 35935 ;;		_RADIO_RxTimeout
 35936 ;;		_RADIO_TxDone
 35937 ;;		_RADIO_FSKPacketSent
 35938 ;;		_RADIO_ReadRandom
 35939 ;;		_RADIO_RxFSKTimeout
 35940 ;;		_RADIO_WatchdogTimeout
 35941 ;;		_RADIO_StopCW
 35942 ;; This function uses a non-reentrant model
 35943 ;;
 35944                           
 35945                           	psect	text169
 35946  005E1A                     __ptext169:
 35947                           	opt stack 0
 35948  005E1A                     _RADIO_WriteMode:
 35949                           	opt stack 18
 35950                           
 35951                           ; BSR set to: 0
 35952                           ;incstack = 0
 35953                           ;RADIO_WriteMode@newMode stored from wreg
 35954  005E1A  0100               	movlb	0	; () banked
 35955  005E1C  6F6A               	movwf	RADIO_WriteMode@newMode& (0+255),b
 35956                           
 35957                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 35958                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 35959                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 35960                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 35961                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 35962                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 35963  005E1E  0100               	movlb	0	; () banked
 35964  005E20  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 35965  005E22  A4D8               	btfss	status,2,c
 35966  005E24  D008               	goto	l387
 35967                           
 35968                           ; BSR set to: 0
 35969  005E26  0E06               	movlw	6
 35970  005E28  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 35971  005E2A  B4D8               	btfsc	status,2,c
 35972  005E2C  0012               	return	
 35973                           
 35974                           ; BSR set to: 0
 35975  005E2E  0E07               	movlw	7
 35976  005E30  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 35977  005E32  B4D8               	btfsc	status,2,c
 35978  005E34  0012               	return	
 35979  005E36                     l387:
 35980                           
 35981                           ; BSR set to: 0
 35982                           ;radio_driver_SX1276.c: 159: }
 35983                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 35984                           
 35985                           ; BSR set to: 0
 35986  005E36  0E07               	movlw	7
 35987  005E38  176A               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 35988                           
 35989                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 35990  005E3A  0E01               	movlw	1
 35991  005E3C  1765               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 35992                           
 35993                           ; BSR set to: 0
 35994                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 35995  005E3E  0E01               	movlw	1
 35996  005E40  ECE5  F043         	call	_RADIO_RegisterRead
 35997  005E44  0100               	movlb	0	; () banked
 35998  005E46  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 35999                           
 36000                           ; BSR set to: 0
 36001                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 36002  005E48  AF6B               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 36003  005E4A  D002               	goto	l391
 36004                           
 36005                           ; BSR set to: 0
 36006                           ;radio_driver_SX1276.c: 168: {
 36007                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 36008  005E4C  0E01               	movlw	1
 36009  005E4E  D001               	goto	L26
 36010  005E50                     l391:
 36011                           
 36012                           ; BSR set to: 0
 36013                           ;radio_driver_SX1276.c: 171: else
 36014                           ;radio_driver_SX1276.c: 172: {
 36015                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 36016                           
 36017                           ; BSR set to: 0
 36018  005E50  0E00               	movlw	0
 36019  005E52                     L26:
 36020  005E52  6F67               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 36021                           
 36022                           ; BSR set to: 0
 36023                           ;radio_driver_SX1276.c: 174: }
 36024                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 36025                           
 36026                           ; BSR set to: 0
 36027  005E54  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 36028  005E56  0B07               	andlw	7
 36029  005E58  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 36030                           
 36031                           ; BSR set to: 0
 36032                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 36033  005E5A  5167               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 36034  005E5C  1965               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 36035  005E5E  B4D8               	btfsc	status,2,c
 36036  005E60  D01B               	goto	l393
 36037                           
 36038                           ; BSR set to: 0
 36039                           ;radio_driver_SX1276.c: 181: {
 36040                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 36041  005E62  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 36042  005E64  B4D8               	btfsc	status,2,c
 36043  005E66  D009               	goto	l394
 36044                           
 36045                           ; BSR set to: 0
 36046                           ;radio_driver_SX1276.c: 184: {
 36047                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 36048  005E68  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 36049  005E6A  0BF8               	andlw	248
 36050  005E6C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 36051  005E6E  0E01               	movlw	1
 36052  005E70  ECA6  F044         	call	_RADIO_RegisterWrite
 36053                           
 36054                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 36055  005E74  0E00               	movlw	0
 36056  005E76  0100               	movlb	0	; () banked
 36057  005E78  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 36058  005E7A                     l394:
 36059                           
 36060                           ; BSR set to: 0
 36061                           ;radio_driver_SX1276.c: 188: }
 36062                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 36063                           
 36064                           ; BSR set to: 0
 36065  005E7A  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 36066  005E7C  A4D8               	btfss	status,2,c
 36067  005E7E  D003               	goto	l395
 36068                           
 36069                           ; BSR set to: 0
 36070                           ;radio_driver_SX1276.c: 191: {
 36071                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 36072  005E80  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 36073  005E82  0B78               	andlw	120
 36074  005E84  D003               	goto	L27
 36075  005E86                     l395:
 36076                           
 36077                           ; BSR set to: 0
 36078                           ;radio_driver_SX1276.c: 195: else
 36079                           ;radio_driver_SX1276.c: 196: {
 36080                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 36081                           
 36082                           ; BSR set to: 0
 36083  005E86  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 36084  005E88  0B78               	andlw	120
 36085  005E8A  0980               	iorlw	128
 36086  005E8C                     L27:
 36087  005E8C  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 36088                           
 36089                           ; BSR set to: 0
 36090                           ;radio_driver_SX1276.c: 199: }
 36091                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 36092                           
 36093                           ; BSR set to: 0
 36094  005E8E  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 36095  005E92  0E01               	movlw	1
 36096  005E94  ECA6  F044         	call	_RADIO_RegisterWrite
 36097  005E98                     l393:
 36098                           
 36099                           ;radio_driver_SX1276.c: 201: }
 36100                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 36101  005E98  0100               	movlb	0	; () banked
 36102  005E9A  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 36103  005E9C  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 36104  005E9E  B4D8               	btfsc	status,2,c
 36105  005EA0  0012               	return	
 36106                           
 36107                           ; BSR set to: 0
 36108                           ;radio_driver_SX1276.c: 208: {
 36109                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 36110  005EA2  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 36111  005EA4  B4D8               	btfsc	status,2,c
 36112  005EA6  D015               	goto	l398
 36113                           
 36114                           ; BSR set to: 0
 36115  005EA8  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 36116  005EAA  A4D8               	btfss	status,2,c
 36117  005EAC  D012               	goto	l398
 36118                           
 36119                           ; BSR set to: 0
 36120                           ;radio_driver_SX1276.c: 212: {
 36121                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 36122  005EAE  0E41               	movlw	65
 36123  005EB0  ECE5  F043         	call	_RADIO_RegisterRead
 36124  005EB4  0100               	movlb	0	; () banked
 36125  005EB6  6F68               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 36126                           
 36127                           ; BSR set to: 0
 36128                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 36129  005EB8  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 36130  005EBA  A4D8               	btfss	status,2,c
 36131  005EBC  D003               	goto	l399
 36132                           
 36133                           ; BSR set to: 0
 36134                           ;radio_driver_SX1276.c: 215: {
 36135                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 36136  005EBE  0E30               	movlw	48
 36137  005EC0  1368               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 36138                           
 36139                           ;radio_driver_SX1276.c: 218: }
 36140  005EC2  D002               	goto	l400
 36141  005EC4                     l399:
 36142                           
 36143                           ; BSR set to: 0
 36144                           ;radio_driver_SX1276.c: 219: else
 36145                           ;radio_driver_SX1276.c: 220: {
 36146                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 36147                           
 36148                           ; BSR set to: 0
 36149  005EC4  0ECF               	movlw	207
 36150  005EC6  1768               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 36151  005EC8                     l400:
 36152                           
 36153                           ; BSR set to: 0
 36154                           ;radio_driver_SX1276.c: 223: }
 36155                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 36156                           
 36157                           ; BSR set to: 0
 36158  005EC8  C068  F062         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 36159  005ECC  0E41               	movlw	65
 36160  005ECE  ECA6  F044         	call	_RADIO_RegisterWrite
 36161  005ED2                     l398:
 36162                           
 36163                           ;radio_driver_SX1276.c: 225: }
 36164                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 36165  005ED2  0EF8               	movlw	248
 36166  005ED4  0100               	movlb	0	; () banked
 36167  005ED6  176B               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 36168                           
 36169                           ; BSR set to: 0
 36170                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 36171  005ED8  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 36172  005EDA  136B               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 36173                           
 36174                           ; BSR set to: 0
 36175                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 36176  005EDC  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 36177  005EE0  0E01               	movlw	1
 36178  005EE2  ECA6  F044         	call	_RADIO_RegisterWrite
 36179                           
 36180                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 36181  005EE6  0100               	movlb	0	; () banked
 36182  005EE8  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 36183  005EEA  A4D8               	btfss	status,2,c
 36184  005EEC  0012               	return	
 36185                           
 36186                           ; BSR set to: 0
 36187                           ;radio_driver_SX1276.c: 234: {
 36188                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 36189  005EEE  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 36190  005EF0  B4D8               	btfsc	status,2,c
 36191  005EF2  D006               	goto	l402
 36192  005EF4                     u14820:
 36193                           
 36194                           ; BSR set to: 0
 36195                           
 36196                           ;radio_driver_SX1276.c: 238: ;
 36197                           
 36198                           ; BSR set to: 0
 36199                           
 36200                           ; BSR set to: 0
 36201                           ;radio_driver_SX1276.c: 236: {
 36202                           ;radio_driver_SX1276.c: 237: while (HALDIO5PinValue() == 0)
 36203  005EF4  EC41  F046         	call	_HALDIO5PinValue	;wreg free
 36204  005EF8  0900               	iorlw	0
 36205  005EFA  A4D8               	btfss	status,2,c
 36206  005EFC  0012               	return	
 36207  005EFE  D7FA               	goto	u14820
 36208  005F00                     l402:
 36209                           
 36210                           ;radio_driver_SX1276.c: 240: else
 36211                           ;radio_driver_SX1276.c: 241: {
 36212                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 36213  005F00  0E01               	movlw	1
 36214  005F02  0100               	movlb	0	; () banked
 36215  005F04  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36216  005F06  0E00               	movlw	0
 36217  005F08  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36218  005F0A  0E00               	movlw	0
 36219  005F0C  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36220  005F0E  0E00               	movlw	0
 36221  005F10  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36222  005F12  ECB3  F042         	call	_SystemBlockingWaitMs	;wreg free
 36223  005F16  0012               	return	
 36224  005F18                     __end_of_RADIO_WriteMode:
 36225                           	opt stack 0
 36226                           tosu	equ	0xFFF
 36227                           tosh	equ	0xFFE
 36228                           tosl	equ	0xFFD
 36229                           pclath	equ	0xFFA
 36230                           tblptru	equ	0xFF8
 36231                           tblptrh	equ	0xFF7
 36232                           tblptrl	equ	0xFF6
 36233                           tablat	equ	0xFF5
 36234                           prodh	equ	0xFF4
 36235                           prodl	equ	0xFF3
 36236                           intcon	equ	0xFF2
 36237                           intcon2	equ	0xFF1
 36238                           intcon3	equ	0xFF0
 36239                           indf0	equ	0xFEF
 36240                           postinc0	equ	0xFEE
 36241                           plusw0	equ	0xFEB
 36242                           fsr0h	equ	0xFEA
 36243                           fsr0l	equ	0xFE9
 36244                           wreg	equ	0xFE8
 36245                           postinc1	equ	0xFE6
 36246                           postdec1	equ	0xFE5
 36247                           plusw1	equ	0xFE3
 36248                           fsr1h	equ	0xFE2
 36249                           fsr1l	equ	0xFE1
 36250                           indf2	equ	0xFDF
 36251                           postinc2	equ	0xFDE
 36252                           postdec2	equ	0xFDD
 36253                           plusw2	equ	0xFDB
 36254                           fsr2h	equ	0xFDA
 36255                           fsr2l	equ	0xFD9
 36256                           status	equ	0xFD8
 36257                           
 36258 ;; *************** function _RADIO_RegisterRead *****************
 36259 ;; Defined at:
 36260 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36261 ;; Parameters:    Size  Location     Type
 36262 ;;  reg             1    wreg     unsigned char 
 36263 ;; Auto vars:     Size  Location     Type
 36264 ;;  reg             1    2[BANK0 ] unsigned char 
 36265 ;;  readValue       1    3[BANK0 ] unsigned char 
 36266 ;; Return value:  Size  Location     Type
 36267 ;;                  1    wreg      unsigned char 
 36268 ;; Registers used:
 36269 ;;		wreg, status,2, status,0, cstack
 36270 ;; Tracked objects:
 36271 ;;		On entry : 0/0
 36272 ;;		On exit  : 0/0
 36273 ;;		Unchanged: 0/0
 36274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36276 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36278 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36279 ;;Total ram usage:        2 bytes
 36280 ;; Hardware stack levels used:    1
 36281 ;; Hardware stack levels required when called:    9
 36282 ;; This function calls:
 36283 ;;		_HALSPICSAssert
 36284 ;;		_HALSPICSDeassert
 36285 ;;		_HALSPISend
 36286 ;; This function is called by:
 36287 ;;		_RADIO_WriteMode
 36288 ;;		_RADIO_WritePower
 36289 ;;		_RADIO_Init
 36290 ;;		_RADIO_WriteConfiguration
 36291 ;;		_RADIO_Transmit
 36292 ;;		_RADIO_RxDone
 36293 ;;		_RADIO_FSKPayloadReady
 36294 ;;		_RADIO_FSKPacketSent
 36295 ;;		_RADIO_FHSSChangeChannel
 36296 ;;		_RADIO_DIO0
 36297 ;;		_RADIO_DIO1
 36298 ;;		_RADIO_DIO2
 36299 ;;		_RADIO_DIO3
 36300 ;;		_RADIO_DIO4
 36301 ;;		_RADIO_DIO5
 36302 ;;		_RADIO_ReadRandom
 36303 ;;		_RADIO_RxFSKTimeout
 36304 ;; This function uses a non-reentrant model
 36305 ;;
 36306                           
 36307                           	psect	text170
 36308  0087CA                     __ptext170:
 36309                           	opt stack 0
 36310  0087CA                     _RADIO_RegisterRead:
 36311                           	opt stack 18
 36312                           
 36313                           ;incstack = 0
 36314                           ;RADIO_RegisterRead@reg stored from wreg
 36315  0087CA  0100               	movlb	0	; () banked
 36316  0087CC  6F62               	movwf	RADIO_RegisterRead@reg& (0+255),b
 36317                           
 36318                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 36319                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 36320  0087CE  0100               	movlb	0	; () banked
 36321  0087D0  9F62               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 36322                           
 36323                           ; BSR set to: 0
 36324                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 36325  0087D2  ECCA  F046         	call	_HALSPICSAssert	;wreg free
 36326                           
 36327                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 36328  0087D6  0100               	movlb	0	; () banked
 36329  0087D8  5162               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 36330  0087DA  EC34  F046         	call	_HALSPISend
 36331                           
 36332                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 36333  0087DE  0EFF               	movlw	255
 36334  0087E0  EC34  F046         	call	_HALSPISend
 36335  0087E4  0100               	movlb	0	; () banked
 36336  0087E6  6F63               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 36337                           
 36338                           ; BSR set to: 0
 36339                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 36340  0087E8  ECC8  F046         	call	_HALSPICSDeassert	;wreg free
 36341                           
 36342                           ;radio_driver_SX1276.c: 142: return readValue;
 36343  0087EC  0100               	movlb	0	; () banked
 36344  0087EE  5163               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 36345  0087F0  0012               	return	
 36346  0087F2                     __end_of_RADIO_RegisterRead:
 36347                           	opt stack 0
 36348                           tosu	equ	0xFFF
 36349                           tosh	equ	0xFFE
 36350                           tosl	equ	0xFFD
 36351                           pclath	equ	0xFFA
 36352                           tblptru	equ	0xFF8
 36353                           tblptrh	equ	0xFF7
 36354                           tblptrl	equ	0xFF6
 36355                           tablat	equ	0xFF5
 36356                           prodh	equ	0xFF4
 36357                           prodl	equ	0xFF3
 36358                           intcon	equ	0xFF2
 36359                           intcon2	equ	0xFF1
 36360                           intcon3	equ	0xFF0
 36361                           indf0	equ	0xFEF
 36362                           postinc0	equ	0xFEE
 36363                           plusw0	equ	0xFEB
 36364                           fsr0h	equ	0xFEA
 36365                           fsr0l	equ	0xFE9
 36366                           wreg	equ	0xFE8
 36367                           postinc1	equ	0xFE6
 36368                           postdec1	equ	0xFE5
 36369                           plusw1	equ	0xFE3
 36370                           fsr1h	equ	0xFE2
 36371                           fsr1l	equ	0xFE1
 36372                           indf2	equ	0xFDF
 36373                           postinc2	equ	0xFDE
 36374                           postdec2	equ	0xFDD
 36375                           plusw2	equ	0xFDB
 36376                           fsr2h	equ	0xFDA
 36377                           fsr2l	equ	0xFD9
 36378                           status	equ	0xFD8
 36379                           
 36380 ;; *************** function _HALDIO5PinValue *****************
 36381 ;; Defined at:
 36382 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36383 ;; Parameters:    Size  Location     Type
 36384 ;;		None
 36385 ;; Auto vars:     Size  Location     Type
 36386 ;;		None
 36387 ;; Return value:  Size  Location     Type
 36388 ;;                  1    wreg      unsigned char 
 36389 ;; Registers used:
 36390 ;;		wreg
 36391 ;; Tracked objects:
 36392 ;;		On entry : 0/0
 36393 ;;		On exit  : 0/0
 36394 ;;		Unchanged: 0/0
 36395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36400 ;;Total ram usage:        0 bytes
 36401 ;; Hardware stack levels used:    1
 36402 ;; Hardware stack levels required when called:    7
 36403 ;; This function calls:
 36404 ;;		Nothing
 36405 ;; This function is called by:
 36406 ;;		_RADIO_WriteMode
 36407 ;; This function uses a non-reentrant model
 36408 ;;
 36409                           
 36410                           	psect	text171
 36411  008C82                     __ptext171:
 36412                           	opt stack 0
 36413  008C82                     _HALDIO5PinValue:
 36414                           	opt stack 20
 36415                           
 36416                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 36417                           
 36418                           ; BSR set to: 0
 36419                           ;incstack = 0
 36420  008C82  A081               	btfss	3969,0,c	;volatile
 36421  008C84  D002               	goto	u14350
 36422  008C86  0E01               	movlw	1
 36423  008C88  0012               	return	
 36424  008C8A                     u14350:
 36425  008C8A  0E00               	movlw	0
 36426  008C8C  0012               	return	
 36427  008C8E                     __end_of_HALDIO5PinValue:
 36428                           	opt stack 0
 36429                           tosu	equ	0xFFF
 36430                           tosh	equ	0xFFE
 36431                           tosl	equ	0xFFD
 36432                           pclath	equ	0xFFA
 36433                           tblptru	equ	0xFF8
 36434                           tblptrh	equ	0xFF7
 36435                           tblptrl	equ	0xFF6
 36436                           tablat	equ	0xFF5
 36437                           prodh	equ	0xFF4
 36438                           prodl	equ	0xFF3
 36439                           intcon	equ	0xFF2
 36440                           intcon2	equ	0xFF1
 36441                           intcon3	equ	0xFF0
 36442                           indf0	equ	0xFEF
 36443                           postinc0	equ	0xFEE
 36444                           plusw0	equ	0xFEB
 36445                           fsr0h	equ	0xFEA
 36446                           fsr0l	equ	0xFE9
 36447                           wreg	equ	0xFE8
 36448                           postinc1	equ	0xFE6
 36449                           postdec1	equ	0xFE5
 36450                           plusw1	equ	0xFE3
 36451                           fsr1h	equ	0xFE2
 36452                           fsr1l	equ	0xFE1
 36453                           indf2	equ	0xFDF
 36454                           postinc2	equ	0xFDE
 36455                           postdec2	equ	0xFDD
 36456                           plusw2	equ	0xFDB
 36457                           fsr2h	equ	0xFDA
 36458                           fsr2l	equ	0xFD9
 36459                           status	equ	0xFD8
 36460                           
 36461 ;; *************** function _RADIO_WriteFrequency *****************
 36462 ;; Defined at:
 36463 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36464 ;; Parameters:    Size  Location     Type
 36465 ;;  frequency       4   13[BANK0 ] unsigned long 
 36466 ;; Auto vars:     Size  Location     Type
 36467 ;;  num             4   21[BANK0 ] unsigned long 
 36468 ;;  num_mod         4   17[BANK0 ] unsigned long 
 36469 ;; Return value:  Size  Location     Type
 36470 ;;                  1    wreg      void 
 36471 ;; Registers used:
 36472 ;;		wreg, status,2, status,0, cstack
 36473 ;; Tracked objects:
 36474 ;;		On entry : 0/0
 36475 ;;		On exit  : 0/0
 36476 ;;		Unchanged: 0/0
 36477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36478 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36479 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36481 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36482 ;;Total ram usage:       12 bytes
 36483 ;; Hardware stack levels used:    1
 36484 ;; Hardware stack levels required when called:   10
 36485 ;; This function calls:
 36486 ;;		_RADIO_RegisterWrite
 36487 ;;		___lldiv
 36488 ;;		___llmod
 36489 ;; This function is called by:
 36490 ;;		_RADIO_Init
 36491 ;;		_RADIO_WriteConfiguration
 36492 ;;		_RADIO_FHSSChangeChannel
 36493 ;; This function uses a non-reentrant model
 36494 ;;
 36495                           
 36496                           	psect	text172
 36497  0061F6                     __ptext172:
 36498                           	opt stack 0
 36499  0061F6                     _RADIO_WriteFrequency:
 36500                           	opt stack 17
 36501                           
 36502                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 36503                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 36504                           
 36505                           ;incstack = 0
 36506  0061F6  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 36507  0061FA  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 36508  0061FE  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 36509  006202  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 36510  006206  0E09               	movlw	9
 36511  006208  0100               	movlb	0	; () banked
 36512  00620A  6F64               	movwf	___lldiv@divisor& (0+255),b
 36513  00620C  0E3D               	movlw	61
 36514  00620E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 36515  006210  0E00               	movlw	0
 36516  006212  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 36517  006214  0E00               	movlw	0
 36518  006216  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 36519  006218  ECB4  F039         	call	___lldiv	;wreg free
 36520  00621C  C060  F075         	movff	?___lldiv,RADIO_WriteFrequency@num
 36521  006220  C061  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 36522  006224  C062  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 36523  006228  C063  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 36524                           
 36525                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 36526  00622C  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 36527  006230  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 36528  006234  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 36529  006238  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 36530  00623C  0E09               	movlw	9
 36531  00623E  0100               	movlb	0	; () banked
 36532  006240  6F64               	movwf	___llmod@divisor& (0+255),b
 36533  006242  0E3D               	movlw	61
 36534  006244  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
 36535  006246  0E00               	movlw	0
 36536  006248  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 36537  00624A  0E00               	movlw	0
 36538  00624C  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 36539  00624E  ECFF  F03B         	call	___llmod	;wreg free
 36540  006252  C060  F071         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 36541  006256  C061  F072         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 36542  00625A  C062  F073         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 36543  00625E  C063  F074         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 36544                           
 36545                           ;radio_driver_SX1276.c: 277: num <<= (8);
 36546  006262  C077  F078         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 36547  006266  C076  F077         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 36548  00626A  C075  F076         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 36549  00626E  0100               	movlb	0	; () banked
 36550  006270  6B75               	clrf	RADIO_WriteFrequency@num& (0+255),b
 36551                           
 36552                           ; BSR set to: 0
 36553                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 36554  006272  C073  F074         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 36555  006276  C072  F073         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 36556  00627A  C071  F072         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 36557  00627E  6B71               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 36558                           
 36559                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 36560  006280  C071  F060         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 36561  006284  C072  F061         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 36562  006288  C073  F062         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 36563  00628C  C074  F063         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 36564  006290  0E09               	movlw	9
 36565  006292  6F64               	movwf	___lldiv@divisor& (0+255),b
 36566  006294  0E3D               	movlw	61
 36567  006296  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 36568  006298  0E00               	movlw	0
 36569  00629A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 36570  00629C  0E00               	movlw	0
 36571  00629E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 36572  0062A0  ECB4  F039         	call	___lldiv	;wreg free
 36573  0062A4  C060  F071         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 36574  0062A8  C061  F072         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 36575  0062AC  C062  F073         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 36576  0062B0  C063  F074         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 36577                           
 36578                           ;radio_driver_SX1276.c: 283: num += num_mod;
 36579  0062B4  0100               	movlb	0	; () banked
 36580  0062B6  5171               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 36581  0062B8  2775               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 36582  0062BA  5172               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 36583  0062BC  2376               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 36584  0062BE  5173               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 36585  0062C0  2377               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 36586  0062C2  5174               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 36587  0062C4  2378               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 36588                           
 36589                           ; BSR set to: 0
 36590                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 36591  0062C6  C077  F062         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 36592  0062CA  0E06               	movlw	6
 36593  0062CC  ECA6  F044         	call	_RADIO_RegisterWrite
 36594                           
 36595                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 36596  0062D0  C076  F062         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 36597  0062D4  0E07               	movlw	7
 36598  0062D6  ECA6  F044         	call	_RADIO_RegisterWrite
 36599                           
 36600                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 36601  0062DA  C075  F062         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 36602  0062DE  0E08               	movlw	8
 36603  0062E0  ECA6  F044         	call	_RADIO_RegisterWrite
 36604  0062E4  0012               	return		;funcret
 36605  0062E6                     __end_of_RADIO_WriteFrequency:
 36606                           	opt stack 0
 36607                           tosu	equ	0xFFF
 36608                           tosh	equ	0xFFE
 36609                           tosl	equ	0xFFD
 36610                           pclath	equ	0xFFA
 36611                           tblptru	equ	0xFF8
 36612                           tblptrh	equ	0xFF7
 36613                           tblptrl	equ	0xFF6
 36614                           tablat	equ	0xFF5
 36615                           prodh	equ	0xFF4
 36616                           prodl	equ	0xFF3
 36617                           intcon	equ	0xFF2
 36618                           intcon2	equ	0xFF1
 36619                           intcon3	equ	0xFF0
 36620                           indf0	equ	0xFEF
 36621                           postinc0	equ	0xFEE
 36622                           plusw0	equ	0xFEB
 36623                           fsr0h	equ	0xFEA
 36624                           fsr0l	equ	0xFE9
 36625                           wreg	equ	0xFE8
 36626                           postinc1	equ	0xFE6
 36627                           postdec1	equ	0xFE5
 36628                           plusw1	equ	0xFE3
 36629                           fsr1h	equ	0xFE2
 36630                           fsr1l	equ	0xFE1
 36631                           indf2	equ	0xFDF
 36632                           postinc2	equ	0xFDE
 36633                           postdec2	equ	0xFDD
 36634                           plusw2	equ	0xFDB
 36635                           fsr2h	equ	0xFDA
 36636                           fsr2l	equ	0xFD9
 36637                           status	equ	0xFD8
 36638                           
 36639 ;; *************** function ___llmod *****************
 36640 ;; Defined at:
 36641 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 36642 ;; Parameters:    Size  Location     Type
 36643 ;;  dividend        4    0[BANK0 ] unsigned long 
 36644 ;;  divisor         4    4[BANK0 ] unsigned long 
 36645 ;; Auto vars:     Size  Location     Type
 36646 ;;  counter         1    8[BANK0 ] unsigned char 
 36647 ;; Return value:  Size  Location     Type
 36648 ;;                  4    0[BANK0 ] unsigned long 
 36649 ;; Registers used:
 36650 ;;		wreg, status,2, status,0
 36651 ;; Tracked objects:
 36652 ;;		On entry : 0/0
 36653 ;;		On exit  : 0/0
 36654 ;;		Unchanged: 0/0
 36655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36656 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36657 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36659 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36660 ;;Total ram usage:        9 bytes
 36661 ;; Hardware stack levels used:    1
 36662 ;; Hardware stack levels required when called:    7
 36663 ;; This function calls:
 36664 ;;		Nothing
 36665 ;; This function is called by:
 36666 ;;		_RADIO_WriteFrequency
 36667 ;; This function uses a non-reentrant model
 36668 ;;
 36669                           
 36670                           	psect	text173
 36671  0077FE                     __ptext173:
 36672                           	opt stack 0
 36673  0077FE                     ___llmod:
 36674                           	opt stack 19
 36675                           
 36676                           ;incstack = 0
 36677  0077FE  0100               	movlb	0	; () banked
 36678  007800  5164               	movf	___llmod@divisor& (0+255),w,b
 36679  007802  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 36680  007804  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 36681  007806  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 36682  007808  B4D8               	btfsc	status,2,c
 36683  00780A  D024               	goto	l3091
 36684                           
 36685                           ; BSR set to: 0
 36686  00780C  0E01               	movlw	1
 36687  00780E  6F68               	movwf	___llmod@counter& (0+255),b
 36688  007810  D006               	goto	l3086
 36689  007812                     
 36690                           ; BSR set to: 0
 36691                           
 36692                           ; BSR set to: 0
 36693  007812  90D8               	bcf	status,0,c
 36694  007814  3764               	rlcf	___llmod@divisor& (0+255),f,b
 36695  007816  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 36696  007818  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 36697  00781A  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 36698  00781C  2B68               	incf	___llmod@counter& (0+255),f,b
 36699  00781E                     l3086:
 36700                           
 36701                           ; BSR set to: 0
 36702                           
 36703                           ; BSR set to: 0
 36704  00781E  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 36705  007820  D7F8               	goto	l3087
 36706  007822                     u14580:
 36707                           
 36708                           ; BSR set to: 0
 36709                           
 36710                           ; BSR set to: 0
 36711                           
 36712                           ; BSR set to: 0
 36713  007822  5164               	movf	___llmod@divisor& (0+255),w,b
 36714  007824  5D60               	subwf	___llmod@dividend& (0+255),w,b
 36715  007826  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 36716  007828  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 36717  00782A  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 36718  00782C  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 36719  00782E  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 36720  007830  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 36721  007832  A0D8               	btfss	status,0,c
 36722  007834  D008               	goto	l3090
 36723                           
 36724                           ; BSR set to: 0
 36725  007836  5164               	movf	___llmod@divisor& (0+255),w,b
 36726  007838  5F60               	subwf	___llmod@dividend& (0+255),f,b
 36727  00783A  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 36728  00783C  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 36729  00783E  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 36730  007840  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 36731  007842  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 36732  007844  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 36733  007846                     l3090:
 36734                           
 36735                           ; BSR set to: 0
 36736                           
 36737                           ; BSR set to: 0
 36738  007846  90D8               	bcf	status,0,c
 36739  007848  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 36740  00784A  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 36741  00784C  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 36742  00784E  3364               	rrcf	___llmod@divisor& (0+255),f,b
 36743                           
 36744                           ; BSR set to: 0
 36745  007850  2F68               	decfsz	___llmod@counter& (0+255),f,b
 36746  007852  D7E7               	goto	u14580
 36747  007854                     l3091:
 36748                           
 36749                           ; BSR set to: 0
 36750                           
 36751                           ; BSR set to: 0
 36752  007854  C060  F060         	movff	___llmod@dividend,?___llmod
 36753  007858  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 36754  00785C  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 36755  007860  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 36756                           
 36757                           ; BSR set to: 0
 36758  007864  0012               	return		;funcret
 36759  007866                     __end_of___llmod:
 36760                           	opt stack 0
 36761                           tosu	equ	0xFFF
 36762                           tosh	equ	0xFFE
 36763                           tosl	equ	0xFFD
 36764                           pclath	equ	0xFFA
 36765                           tblptru	equ	0xFF8
 36766                           tblptrh	equ	0xFF7
 36767                           tblptrl	equ	0xFF6
 36768                           tablat	equ	0xFF5
 36769                           prodh	equ	0xFF4
 36770                           prodl	equ	0xFF3
 36771                           intcon	equ	0xFF2
 36772                           intcon2	equ	0xFF1
 36773                           intcon3	equ	0xFF0
 36774                           indf0	equ	0xFEF
 36775                           postinc0	equ	0xFEE
 36776                           plusw0	equ	0xFEB
 36777                           fsr0h	equ	0xFEA
 36778                           fsr0l	equ	0xFE9
 36779                           wreg	equ	0xFE8
 36780                           postinc1	equ	0xFE6
 36781                           postdec1	equ	0xFE5
 36782                           plusw1	equ	0xFE3
 36783                           fsr1h	equ	0xFE2
 36784                           fsr1l	equ	0xFE1
 36785                           indf2	equ	0xFDF
 36786                           postinc2	equ	0xFDE
 36787                           postdec2	equ	0xFDD
 36788                           plusw2	equ	0xFDB
 36789                           fsr2h	equ	0xFDA
 36790                           fsr2l	equ	0xFD9
 36791                           status	equ	0xFD8
 36792                           
 36793 ;; *************** function _RADIO_RegisterWrite *****************
 36794 ;; Defined at:
 36795 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36796 ;; Parameters:    Size  Location     Type
 36797 ;;  reg             1    wreg     unsigned char 
 36798 ;;  value           1    2[BANK0 ] unsigned char 
 36799 ;; Auto vars:     Size  Location     Type
 36800 ;;  reg             1    3[BANK0 ] unsigned char 
 36801 ;; Return value:  Size  Location     Type
 36802 ;;                  1    wreg      void 
 36803 ;; Registers used:
 36804 ;;		wreg, status,2, status,0, cstack
 36805 ;; Tracked objects:
 36806 ;;		On entry : 0/0
 36807 ;;		On exit  : 0/0
 36808 ;;		Unchanged: 0/0
 36809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36810 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36813 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36814 ;;Total ram usage:        2 bytes
 36815 ;; Hardware stack levels used:    1
 36816 ;; Hardware stack levels required when called:    9
 36817 ;; This function calls:
 36818 ;;		_HALSPICSAssert
 36819 ;;		_HALSPICSDeassert
 36820 ;;		_HALSPISend
 36821 ;; This function is called by:
 36822 ;;		_RADIO_WriteMode
 36823 ;;		_RADIO_WriteFrequency
 36824 ;;		_RADIO_WriteFSKFrequencyDeviation
 36825 ;;		_RADIO_WriteFSKBitRate
 36826 ;;		_RADIO_WritePower
 36827 ;;		_RADIO_Init
 36828 ;;		_RADIO_WriteConfiguration
 36829 ;;		_RADIO_Transmit
 36830 ;;		_RADIO_ReceiveStart
 36831 ;;		_RADIO_RxDone
 36832 ;;		_RADIO_RxTimeout
 36833 ;;		_RADIO_TxDone
 36834 ;;		_RADIO_UnhandledInterrupt
 36835 ;;		_RADIO_FHSSChangeChannel
 36836 ;;		_RADIO_ReadRandom
 36837 ;;		_RADIO_TransmitCW
 36838 ;; This function uses a non-reentrant model
 36839 ;;
 36840                           
 36841                           	psect	text174
 36842  00894C                     __ptext174:
 36843                           	opt stack 0
 36844  00894C                     _RADIO_RegisterWrite:
 36845                           	opt stack 18
 36846                           
 36847                           ; BSR set to: 0
 36848                           ;incstack = 0
 36849                           ;RADIO_RegisterWrite@reg stored from wreg
 36850  00894C  0100               	movlb	0	; () banked
 36851  00894E  6F63               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 36852                           
 36853                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 36854  008950  ECCA  F046         	call	_HALSPICSAssert	;wreg free
 36855                           
 36856                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 36857  008954  0100               	movlb	0	; () banked
 36858  008956  5163               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 36859  008958  0980               	iorlw	128
 36860  00895A  EC34  F046         	call	_HALSPISend
 36861                           
 36862                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 36863  00895E  0100               	movlb	0	; () banked
 36864  008960  5162               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 36865  008962  EC34  F046         	call	_HALSPISend
 36866                           
 36867                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 36868  008966  ECC8  F046         	call	_HALSPICSDeassert	;wreg free
 36869  00896A  0012               	return		;funcret
 36870  00896C                     __end_of_RADIO_RegisterWrite:
 36871                           	opt stack 0
 36872                           tosu	equ	0xFFF
 36873                           tosh	equ	0xFFE
 36874                           tosl	equ	0xFFD
 36875                           pclath	equ	0xFFA
 36876                           tblptru	equ	0xFF8
 36877                           tblptrh	equ	0xFF7
 36878                           tblptrl	equ	0xFF6
 36879                           tablat	equ	0xFF5
 36880                           prodh	equ	0xFF4
 36881                           prodl	equ	0xFF3
 36882                           intcon	equ	0xFF2
 36883                           intcon2	equ	0xFF1
 36884                           intcon3	equ	0xFF0
 36885                           indf0	equ	0xFEF
 36886                           postinc0	equ	0xFEE
 36887                           plusw0	equ	0xFEB
 36888                           fsr0h	equ	0xFEA
 36889                           fsr0l	equ	0xFE9
 36890                           wreg	equ	0xFE8
 36891                           postinc1	equ	0xFE6
 36892                           postdec1	equ	0xFE5
 36893                           plusw1	equ	0xFE3
 36894                           fsr1h	equ	0xFE2
 36895                           fsr1l	equ	0xFE1
 36896                           indf2	equ	0xFDF
 36897                           postinc2	equ	0xFDE
 36898                           postdec2	equ	0xFDD
 36899                           plusw2	equ	0xFDB
 36900                           fsr2h	equ	0xFDA
 36901                           fsr2l	equ	0xFD9
 36902                           status	equ	0xFD8
 36903                           
 36904 ;; *************** function _HALSPISend *****************
 36905 ;; Defined at:
 36906 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36907 ;; Parameters:    Size  Location     Type
 36908 ;;  data            1    wreg     unsigned char 
 36909 ;; Auto vars:     Size  Location     Type
 36910 ;;  data            1    1[BANK0 ] unsigned char 
 36911 ;; Return value:  Size  Location     Type
 36912 ;;                  1    wreg      unsigned char 
 36913 ;; Registers used:
 36914 ;;		wreg, status,2, cstack
 36915 ;; Tracked objects:
 36916 ;;		On entry : 0/0
 36917 ;;		On exit  : 0/0
 36918 ;;		Unchanged: 0/0
 36919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36921 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36923 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36924 ;;Total ram usage:        1 bytes
 36925 ;; Hardware stack levels used:    1
 36926 ;; Hardware stack levels required when called:    8
 36927 ;; This function calls:
 36928 ;;		_SPI2_Exchange8bit
 36929 ;; This function is called by:
 36930 ;;		_RADIO_RegisterWrite
 36931 ;;		_RADIO_RegisterRead
 36932 ;;		_RADIO_Transmit
 36933 ;;		_RADIO_RxDone
 36934 ;;		_RADIO_FSKPayloadReady
 36935 ;; This function uses a non-reentrant model
 36936 ;;
 36937                           
 36938                           	psect	text175
 36939  008C68                     __ptext175:
 36940                           	opt stack 0
 36941  008C68                     _HALSPISend:
 36942                           	opt stack 18
 36943                           
 36944                           ;incstack = 0
 36945                           ;HALSPISend@data stored from wreg
 36946  008C68  0100               	movlb	0	; () banked
 36947  008C6A  6F61               	movwf	HALSPISend@data& (0+255),b
 36948                           
 36949                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 36950  008C6C  0100               	movlb	0	; () banked
 36951  008C6E  5161               	movf	HALSPISend@data& (0+255),w,b
 36952  008C70  ECDF  F045         	call	_SPI2_Exchange8bit
 36953  008C74  0012               	return	
 36954  008C76                     __end_of_HALSPISend:
 36955                           	opt stack 0
 36956                           tosu	equ	0xFFF
 36957                           tosh	equ	0xFFE
 36958                           tosl	equ	0xFFD
 36959                           pclath	equ	0xFFA
 36960                           tblptru	equ	0xFF8
 36961                           tblptrh	equ	0xFF7
 36962                           tblptrl	equ	0xFF6
 36963                           tablat	equ	0xFF5
 36964                           prodh	equ	0xFF4
 36965                           prodl	equ	0xFF3
 36966                           intcon	equ	0xFF2
 36967                           intcon2	equ	0xFF1
 36968                           intcon3	equ	0xFF0
 36969                           indf0	equ	0xFEF
 36970                           postinc0	equ	0xFEE
 36971                           plusw0	equ	0xFEB
 36972                           fsr0h	equ	0xFEA
 36973                           fsr0l	equ	0xFE9
 36974                           wreg	equ	0xFE8
 36975                           postinc1	equ	0xFE6
 36976                           postdec1	equ	0xFE5
 36977                           plusw1	equ	0xFE3
 36978                           fsr1h	equ	0xFE2
 36979                           fsr1l	equ	0xFE1
 36980                           indf2	equ	0xFDF
 36981                           postinc2	equ	0xFDE
 36982                           postdec2	equ	0xFDD
 36983                           plusw2	equ	0xFDB
 36984                           fsr2h	equ	0xFDA
 36985                           fsr2l	equ	0xFD9
 36986                           status	equ	0xFD8
 36987                           
 36988 ;; *************** function _SPI2_Exchange8bit *****************
 36989 ;; Defined at:
 36990 ;;		line 79 in file "mcc_generated_files/spi2.c"
 36991 ;; Parameters:    Size  Location     Type
 36992 ;;  data            1    wreg     unsigned char 
 36993 ;; Auto vars:     Size  Location     Type
 36994 ;;  data            1    0[BANK0 ] unsigned char 
 36995 ;; Return value:  Size  Location     Type
 36996 ;;                  1    wreg      unsigned char 
 36997 ;; Registers used:
 36998 ;;		wreg, status,2
 36999 ;; Tracked objects:
 37000 ;;		On entry : 0/0
 37001 ;;		On exit  : 0/0
 37002 ;;		Unchanged: 0/0
 37003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37005 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37007 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37008 ;;Total ram usage:        1 bytes
 37009 ;; Hardware stack levels used:    1
 37010 ;; Hardware stack levels required when called:    7
 37011 ;; This function calls:
 37012 ;;		Nothing
 37013 ;; This function is called by:
 37014 ;;		_HALSPISend
 37015 ;;		_SPI2_Exchange8bitBuffer
 37016 ;; This function uses a non-reentrant model
 37017 ;;
 37018                           
 37019                           	psect	text176
 37020  008BBE                     __ptext176:
 37021                           	opt stack 0
 37022  008BBE                     _SPI2_Exchange8bit:
 37023                           	opt stack 18
 37024                           
 37025                           ;incstack = 0
 37026                           ;SPI2_Exchange8bit@data stored from wreg
 37027  008BBE  0100               	movlb	0	; () banked
 37028  008BC0  6F60               	movwf	SPI2_Exchange8bit@data& (0+255),b
 37029                           
 37030                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 37031  008BC2  9E6C               	bcf	3948,7,c	;volatile
 37032                           
 37033                           ;spi2.c: 84: SSP2BUF = data;
 37034  008BC4  C060  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 37035  008BC8                     
 37036                           ;spi2.c: 87: {
 37037  008BC8  A06D               	btfss	3949,0,c	;volatile
 37038  008BCA  D7FE               	goto	l2190
 37039                           
 37040                           ;spi2.c: 88: }
 37041                           ;spi2.c: 90: return (SSP2BUF);
 37042  008BCC  506F               	movf	3951,w,c	;volatile
 37043  008BCE  0012               	return		;funcret
 37044  008BD0                     __end_of_SPI2_Exchange8bit:
 37045                           	opt stack 0
 37046                           tosu	equ	0xFFF
 37047                           tosh	equ	0xFFE
 37048                           tosl	equ	0xFFD
 37049                           pclath	equ	0xFFA
 37050                           tblptru	equ	0xFF8
 37051                           tblptrh	equ	0xFF7
 37052                           tblptrl	equ	0xFF6
 37053                           tablat	equ	0xFF5
 37054                           prodh	equ	0xFF4
 37055                           prodl	equ	0xFF3
 37056                           intcon	equ	0xFF2
 37057                           intcon2	equ	0xFF1
 37058                           intcon3	equ	0xFF0
 37059                           indf0	equ	0xFEF
 37060                           postinc0	equ	0xFEE
 37061                           plusw0	equ	0xFEB
 37062                           fsr0h	equ	0xFEA
 37063                           fsr0l	equ	0xFE9
 37064                           wreg	equ	0xFE8
 37065                           postinc1	equ	0xFE6
 37066                           postdec1	equ	0xFE5
 37067                           plusw1	equ	0xFE3
 37068                           fsr1h	equ	0xFE2
 37069                           fsr1l	equ	0xFE1
 37070                           indf2	equ	0xFDF
 37071                           postinc2	equ	0xFDE
 37072                           postdec2	equ	0xFDD
 37073                           plusw2	equ	0xFDB
 37074                           fsr2h	equ	0xFDA
 37075                           fsr2l	equ	0xFD9
 37076                           status	equ	0xFD8
 37077                           
 37078 ;; *************** function _HALSPICSDeassert *****************
 37079 ;; Defined at:
 37080 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 37081 ;; Parameters:    Size  Location     Type
 37082 ;;		None
 37083 ;; Auto vars:     Size  Location     Type
 37084 ;;		None
 37085 ;; Return value:  Size  Location     Type
 37086 ;;                  1    wreg      void 
 37087 ;; Registers used:
 37088 ;;		None
 37089 ;; Tracked objects:
 37090 ;;		On entry : 0/0
 37091 ;;		On exit  : 0/0
 37092 ;;		Unchanged: 0/0
 37093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37098 ;;Total ram usage:        0 bytes
 37099 ;; Hardware stack levels used:    1
 37100 ;; Hardware stack levels required when called:    7
 37101 ;; This function calls:
 37102 ;;		Nothing
 37103 ;; This function is called by:
 37104 ;;		_RADIO_RegisterWrite
 37105 ;;		_RADIO_RegisterRead
 37106 ;;		_RADIO_Transmit
 37107 ;;		_RADIO_RxDone
 37108 ;;		_RADIO_FSKPayloadReady
 37109 ;; This function uses a non-reentrant model
 37110 ;;
 37111                           
 37112                           	psect	text177
 37113  008D90                     __ptext177:
 37114                           	opt stack 0
 37115  008D90                     _HALSPICSDeassert:
 37116                           	opt stack 19
 37117                           
 37118                           ;incstack = 0
 37119                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 37120  008D90  868C               	bsf	3980,3,c	;volatile
 37121  008D92  0012               	return	
 37122  008D94                     __end_of_HALSPICSDeassert:
 37123                           	opt stack 0
 37124                           tosu	equ	0xFFF
 37125                           tosh	equ	0xFFE
 37126                           tosl	equ	0xFFD
 37127                           pclath	equ	0xFFA
 37128                           tblptru	equ	0xFF8
 37129                           tblptrh	equ	0xFF7
 37130                           tblptrl	equ	0xFF6
 37131                           tablat	equ	0xFF5
 37132                           prodh	equ	0xFF4
 37133                           prodl	equ	0xFF3
 37134                           intcon	equ	0xFF2
 37135                           intcon2	equ	0xFF1
 37136                           intcon3	equ	0xFF0
 37137                           indf0	equ	0xFEF
 37138                           postinc0	equ	0xFEE
 37139                           plusw0	equ	0xFEB
 37140                           fsr0h	equ	0xFEA
 37141                           fsr0l	equ	0xFE9
 37142                           wreg	equ	0xFE8
 37143                           postinc1	equ	0xFE6
 37144                           postdec1	equ	0xFE5
 37145                           plusw1	equ	0xFE3
 37146                           fsr1h	equ	0xFE2
 37147                           fsr1l	equ	0xFE1
 37148                           indf2	equ	0xFDF
 37149                           postinc2	equ	0xFDE
 37150                           postdec2	equ	0xFDD
 37151                           plusw2	equ	0xFDB
 37152                           fsr2h	equ	0xFDA
 37153                           fsr2l	equ	0xFD9
 37154                           status	equ	0xFD8
 37155                           
 37156 ;; *************** function _HALSPICSAssert *****************
 37157 ;; Defined at:
 37158 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 37159 ;; Parameters:    Size  Location     Type
 37160 ;;		None
 37161 ;; Auto vars:     Size  Location     Type
 37162 ;;		None
 37163 ;; Return value:  Size  Location     Type
 37164 ;;                  1    wreg      void 
 37165 ;; Registers used:
 37166 ;;		None
 37167 ;; Tracked objects:
 37168 ;;		On entry : 0/0
 37169 ;;		On exit  : 0/0
 37170 ;;		Unchanged: 0/0
 37171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37176 ;;Total ram usage:        0 bytes
 37177 ;; Hardware stack levels used:    1
 37178 ;; Hardware stack levels required when called:    7
 37179 ;; This function calls:
 37180 ;;		Nothing
 37181 ;; This function is called by:
 37182 ;;		_RADIO_RegisterWrite
 37183 ;;		_RADIO_RegisterRead
 37184 ;;		_RADIO_Transmit
 37185 ;;		_RADIO_RxDone
 37186 ;;		_RADIO_FSKPayloadReady
 37187 ;; This function uses a non-reentrant model
 37188 ;;
 37189                           
 37190                           	psect	text178
 37191  008D94                     __ptext178:
 37192                           	opt stack 0
 37193  008D94                     _HALSPICSAssert:
 37194                           	opt stack 19
 37195                           
 37196                           ;incstack = 0
 37197                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 37198  008D94  968C               	bcf	3980,3,c	;volatile
 37199  008D96  0012               	return	
 37200  008D98                     __end_of_HALSPICSAssert:
 37201                           	opt stack 0
 37202                           tosu	equ	0xFFF
 37203                           tosh	equ	0xFFE
 37204                           tosl	equ	0xFFD
 37205                           pclath	equ	0xFFA
 37206                           tblptru	equ	0xFF8
 37207                           tblptrh	equ	0xFF7
 37208                           tblptrl	equ	0xFF6
 37209                           tablat	equ	0xFF5
 37210                           prodh	equ	0xFF4
 37211                           prodl	equ	0xFF3
 37212                           intcon	equ	0xFF2
 37213                           intcon2	equ	0xFF1
 37214                           intcon3	equ	0xFF0
 37215                           indf0	equ	0xFEF
 37216                           postinc0	equ	0xFEE
 37217                           plusw0	equ	0xFEB
 37218                           fsr0h	equ	0xFEA
 37219                           fsr0l	equ	0xFE9
 37220                           wreg	equ	0xFE8
 37221                           postinc1	equ	0xFE6
 37222                           postdec1	equ	0xFE5
 37223                           plusw1	equ	0xFE3
 37224                           fsr1h	equ	0xFE2
 37225                           fsr1l	equ	0xFE1
 37226                           indf2	equ	0xFDF
 37227                           postinc2	equ	0xFDE
 37228                           postdec2	equ	0xFDD
 37229                           plusw2	equ	0xFDB
 37230                           fsr2h	equ	0xFDA
 37231                           fsr2l	equ	0xFD9
 37232                           status	equ	0xFD8
 37233                           
 37234 ;; *************** function _RADIO_Reset *****************
 37235 ;; Defined at:
 37236 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 37237 ;; Parameters:    Size  Location     Type
 37238 ;;		None
 37239 ;; Auto vars:     Size  Location     Type
 37240 ;;		None
 37241 ;; Return value:  Size  Location     Type
 37242 ;;                  1    wreg      void 
 37243 ;; Registers used:
 37244 ;;		wreg, status,2, status,0, cstack
 37245 ;; Tracked objects:
 37246 ;;		On entry : 0/0
 37247 ;;		On exit  : 0/0
 37248 ;;		Unchanged: 0/0
 37249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37254 ;;Total ram usage:        0 bytes
 37255 ;; Hardware stack levels used:    1
 37256 ;; Hardware stack levels required when called:    8
 37257 ;; This function calls:
 37258 ;;		_HALResetPinMakeInput
 37259 ;;		_HALResetPinMakeOutput
 37260 ;;		_HALResetPinOutputValue
 37261 ;;		_SystemBlockingWaitMs
 37262 ;; This function is called by:
 37263 ;;		_RADIO_Init
 37264 ;; This function uses a non-reentrant model
 37265 ;;
 37266                           
 37267                           	psect	text179
 37268  0080F0                     __ptext179:
 37269                           	opt stack 0
 37270  0080F0                     _RADIO_Reset:
 37271                           	opt stack 20
 37272                           
 37273                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 37274                           
 37275                           ;incstack = 0
 37276  0080F0  ECCC  F046         	call	_HALResetPinMakeOutput	;wreg free
 37277                           
 37278                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 37279  0080F4  0E00               	movlw	0
 37280  0080F6  EC5C  F045         	call	_HALResetPinOutputValue
 37281                           
 37282                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 37283  0080FA  0E01               	movlw	1
 37284  0080FC  0100               	movlb	0	; () banked
 37285  0080FE  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 37286  008100  0E00               	movlw	0
 37287  008102  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 37288  008104  0E00               	movlw	0
 37289  008106  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 37290  008108  0E00               	movlw	0
 37291  00810A  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 37292  00810C  ECB3  F042         	call	_SystemBlockingWaitMs	;wreg free
 37293                           
 37294                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 37295  008110  ECCE  F046         	call	_HALResetPinMakeInput	;wreg free
 37296                           
 37297                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 37298  008114  0E0A               	movlw	10
 37299  008116  0100               	movlb	0	; () banked
 37300  008118  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 37301  00811A  0E00               	movlw	0
 37302  00811C  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 37303  00811E  0E00               	movlw	0
 37304  008120  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 37305  008122  0E00               	movlw	0
 37306  008124  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 37307  008126  ECB3  F042         	call	_SystemBlockingWaitMs	;wreg free
 37308                           
 37309                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 37310  00812A  0E01               	movlw	1
 37311  00812C  EC5C  F045         	call	_HALResetPinOutputValue
 37312                           
 37313                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 37314  008130  ECCC  F046         	call	_HALResetPinMakeOutput	;wreg free
 37315  008134  0012               	return		;funcret
 37316  008136                     __end_of_RADIO_Reset:
 37317                           	opt stack 0
 37318                           tosu	equ	0xFFF
 37319                           tosh	equ	0xFFE
 37320                           tosl	equ	0xFFD
 37321                           pclath	equ	0xFFA
 37322                           tblptru	equ	0xFF8
 37323                           tblptrh	equ	0xFF7
 37324                           tblptrl	equ	0xFF6
 37325                           tablat	equ	0xFF5
 37326                           prodh	equ	0xFF4
 37327                           prodl	equ	0xFF3
 37328                           intcon	equ	0xFF2
 37329                           intcon2	equ	0xFF1
 37330                           intcon3	equ	0xFF0
 37331                           indf0	equ	0xFEF
 37332                           postinc0	equ	0xFEE
 37333                           plusw0	equ	0xFEB
 37334                           fsr0h	equ	0xFEA
 37335                           fsr0l	equ	0xFE9
 37336                           wreg	equ	0xFE8
 37337                           postinc1	equ	0xFE6
 37338                           postdec1	equ	0xFE5
 37339                           plusw1	equ	0xFE3
 37340                           fsr1h	equ	0xFE2
 37341                           fsr1l	equ	0xFE1
 37342                           indf2	equ	0xFDF
 37343                           postinc2	equ	0xFDE
 37344                           postdec2	equ	0xFDD
 37345                           plusw2	equ	0xFDB
 37346                           fsr2h	equ	0xFDA
 37347                           fsr2l	equ	0xFD9
 37348                           status	equ	0xFD8
 37349                           
 37350 ;; *************** function _SystemBlockingWaitMs *****************
 37351 ;; Defined at:
 37352 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37353 ;; Parameters:    Size  Location     Type
 37354 ;;  ms              4    0[BANK0 ] unsigned long 
 37355 ;; Auto vars:     Size  Location     Type
 37356 ;;		None
 37357 ;; Return value:  Size  Location     Type
 37358 ;;                  1    wreg      void 
 37359 ;; Registers used:
 37360 ;;		wreg, status,2, status,0
 37361 ;; Tracked objects:
 37362 ;;		On entry : 0/0
 37363 ;;		On exit  : 0/0
 37364 ;;		Unchanged: 0/0
 37365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37366 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37368 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37369 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37370 ;;Total ram usage:        5 bytes
 37371 ;; Hardware stack levels used:    1
 37372 ;; Hardware stack levels required when called:    7
 37373 ;; This function calls:
 37374 ;;		Nothing
 37375 ;; This function is called by:
 37376 ;;		_RADIO_WriteMode
 37377 ;;		_RADIO_Reset
 37378 ;;		_RADIO_ReadRandom
 37379 ;;		_RADIO_StopCW
 37380 ;; This function uses a non-reentrant model
 37381 ;;
 37382                           
 37383                           	psect	text180
 37384  008566                     __ptext180:
 37385                           	opt stack 0
 37386  008566                     _SystemBlockingWaitMs:
 37387                           	opt stack 20
 37388                           
 37389                           ;sw_timer.c: 147: while (ms > 0)
 37390                           
 37391                           ;incstack = 0
 37392  008566  D00F               	goto	l234
 37393  008568                     
 37394                           ;sw_timer.c: 148: {
 37395                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 37396  008568  0E06               	movlw	6
 37397  00856A  0100               	movlb	0	; () banked
 37398  00856C  6F64               	movwf	??_SystemBlockingWaitMs& (0+255),b
 37399  00856E  0E30               	movlw	48
 37400  008570                     u22077:
 37401  008570  2EE8               	decfsz	wreg,f,c
 37402  008572  D7FE               	bra	u22077
 37403  008574  2F64               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 37404  008576  D7FC               	bra	u22077
 37405  008578  F000               	nop	
 37406                           
 37407                           ;sw_timer.c: 150: ms--;
 37408  00857A  0100               	movlb	0	; () banked
 37409  00857C  0760               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 37410  00857E  0E00               	movlw	0
 37411  008580  5B61               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 37412  008582  5B62               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 37413  008584  5B63               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 37414  008586                     l234:
 37415                           
 37416                           ; BSR set to: 0
 37417  008586  0100               	movlb	0	; () banked
 37418  008588  5160               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 37419  00858A  1161               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 37420  00858C  1162               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 37421  00858E  1163               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 37422  008590  B4D8               	btfsc	status,2,c
 37423  008592  0012               	return	
 37424  008594  D7E9               	goto	l235
 37425  008596                     __end_of_SystemBlockingWaitMs:
 37426                           	opt stack 0
 37427                           tosu	equ	0xFFF
 37428                           tosh	equ	0xFFE
 37429                           tosl	equ	0xFFD
 37430                           pclath	equ	0xFFA
 37431                           tblptru	equ	0xFF8
 37432                           tblptrh	equ	0xFF7
 37433                           tblptrl	equ	0xFF6
 37434                           tablat	equ	0xFF5
 37435                           prodh	equ	0xFF4
 37436                           prodl	equ	0xFF3
 37437                           intcon	equ	0xFF2
 37438                           intcon2	equ	0xFF1
 37439                           intcon3	equ	0xFF0
 37440                           indf0	equ	0xFEF
 37441                           postinc0	equ	0xFEE
 37442                           plusw0	equ	0xFEB
 37443                           fsr0h	equ	0xFEA
 37444                           fsr0l	equ	0xFE9
 37445                           wreg	equ	0xFE8
 37446                           postinc1	equ	0xFE6
 37447                           postdec1	equ	0xFE5
 37448                           plusw1	equ	0xFE3
 37449                           fsr1h	equ	0xFE2
 37450                           fsr1l	equ	0xFE1
 37451                           indf2	equ	0xFDF
 37452                           postinc2	equ	0xFDE
 37453                           postdec2	equ	0xFDD
 37454                           plusw2	equ	0xFDB
 37455                           fsr2h	equ	0xFDA
 37456                           fsr2l	equ	0xFD9
 37457                           status	equ	0xFD8
 37458                           
 37459 ;; *************** function _HALResetPinOutputValue *****************
 37460 ;; Defined at:
 37461 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 37462 ;; Parameters:    Size  Location     Type
 37463 ;;  value           1    wreg     unsigned char 
 37464 ;; Auto vars:     Size  Location     Type
 37465 ;;  value           1    0[BANK0 ] unsigned char 
 37466 ;; Return value:  Size  Location     Type
 37467 ;;                  1    wreg      void 
 37468 ;; Registers used:
 37469 ;;		wreg, status,2, status,0
 37470 ;; Tracked objects:
 37471 ;;		On entry : 0/0
 37472 ;;		On exit  : 0/0
 37473 ;;		Unchanged: 0/0
 37474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37478 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37479 ;;Total ram usage:        1 bytes
 37480 ;; Hardware stack levels used:    1
 37481 ;; Hardware stack levels required when called:    7
 37482 ;; This function calls:
 37483 ;;		Nothing
 37484 ;; This function is called by:
 37485 ;;		_RADIO_Reset
 37486 ;; This function uses a non-reentrant model
 37487 ;;
 37488                           
 37489                           	psect	text181
 37490  008AB8                     __ptext181:
 37491                           	opt stack 0
 37492  008AB8                     _HALResetPinOutputValue:
 37493                           	opt stack 20
 37494                           
 37495                           ; BSR set to: 0
 37496                           ;incstack = 0
 37497                           ;HALResetPinOutputValue@value stored from wreg
 37498  008AB8  0100               	movlb	0	; () banked
 37499  008ABA  6F60               	movwf	HALResetPinOutputValue@value& (0+255),b
 37500                           
 37501                           ;radio_driver_hal.c: 57: if (value == 0)
 37502  008ABC  0100               	movlb	0	; () banked
 37503  008ABE  5160               	movf	HALResetPinOutputValue@value& (0+255),w,b
 37504  008AC0  A4D8               	btfss	status,2,c
 37505  008AC2  D002               	goto	l144
 37506                           
 37507                           ; BSR set to: 0
 37508                           
 37509                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 37510  008AC4  948B               	bcf	3979,2,c	;volatile
 37511                           
 37512                           ; BSR set to: 0
 37513  008AC6  0012               	return	
 37514  008AC8                     l144:
 37515                           
 37516                           ; BSR set to: 0
 37517                           ;radio_driver_hal.c: 59: else if (value == 1)
 37518                           
 37519                           ; BSR set to: 0
 37520  008AC8  0560               	decf	HALResetPinOutputValue@value& (0+255),w,b
 37521  008ACA  A4D8               	btfss	status,2,c
 37522  008ACC  0012               	return	
 37523                           
 37524                           ; BSR set to: 0
 37525                           
 37526                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 37527  008ACE  848B               	bsf	3979,2,c	;volatile
 37528                           
 37529                           ; BSR set to: 0
 37530                           
 37531                           ; BSR set to: 0
 37532  008AD0  0012               	return	
 37533  008AD2                     __end_of_HALResetPinOutputValue:
 37534                           	opt stack 0
 37535                           tosu	equ	0xFFF
 37536                           tosh	equ	0xFFE
 37537                           tosl	equ	0xFFD
 37538                           pclath	equ	0xFFA
 37539                           tblptru	equ	0xFF8
 37540                           tblptrh	equ	0xFF7
 37541                           tblptrl	equ	0xFF6
 37542                           tablat	equ	0xFF5
 37543                           prodh	equ	0xFF4
 37544                           prodl	equ	0xFF3
 37545                           intcon	equ	0xFF2
 37546                           intcon2	equ	0xFF1
 37547                           intcon3	equ	0xFF0
 37548                           indf0	equ	0xFEF
 37549                           postinc0	equ	0xFEE
 37550                           plusw0	equ	0xFEB
 37551                           fsr0h	equ	0xFEA
 37552                           fsr0l	equ	0xFE9
 37553                           wreg	equ	0xFE8
 37554                           postinc1	equ	0xFE6
 37555                           postdec1	equ	0xFE5
 37556                           plusw1	equ	0xFE3
 37557                           fsr1h	equ	0xFE2
 37558                           fsr1l	equ	0xFE1
 37559                           indf2	equ	0xFDF
 37560                           postinc2	equ	0xFDE
 37561                           postdec2	equ	0xFDD
 37562                           plusw2	equ	0xFDB
 37563                           fsr2h	equ	0xFDA
 37564                           fsr2l	equ	0xFD9
 37565                           status	equ	0xFD8
 37566                           
 37567 ;; *************** function _HALResetPinMakeOutput *****************
 37568 ;; Defined at:
 37569 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 37570 ;; Parameters:    Size  Location     Type
 37571 ;;		None
 37572 ;; Auto vars:     Size  Location     Type
 37573 ;;		None
 37574 ;; Return value:  Size  Location     Type
 37575 ;;                  1    wreg      void 
 37576 ;; Registers used:
 37577 ;;		None
 37578 ;; Tracked objects:
 37579 ;;		On entry : 0/0
 37580 ;;		On exit  : 0/0
 37581 ;;		Unchanged: 0/0
 37582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37587 ;;Total ram usage:        0 bytes
 37588 ;; Hardware stack levels used:    1
 37589 ;; Hardware stack levels required when called:    7
 37590 ;; This function calls:
 37591 ;;		Nothing
 37592 ;; This function is called by:
 37593 ;;		_RADIO_Reset
 37594 ;; This function uses a non-reentrant model
 37595 ;;
 37596                           
 37597                           	psect	text182
 37598  008D98                     __ptext182:
 37599                           	opt stack 0
 37600  008D98                     _HALResetPinMakeOutput:
 37601                           	opt stack 20
 37602                           
 37603                           ; BSR set to: 0
 37604                           ;incstack = 0
 37605                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 37606  008D98  9494               	bcf	3988,2,c	;volatile
 37607  008D9A  0012               	return	
 37608  008D9C                     __end_of_HALResetPinMakeOutput:
 37609                           	opt stack 0
 37610                           tosu	equ	0xFFF
 37611                           tosh	equ	0xFFE
 37612                           tosl	equ	0xFFD
 37613                           pclath	equ	0xFFA
 37614                           tblptru	equ	0xFF8
 37615                           tblptrh	equ	0xFF7
 37616                           tblptrl	equ	0xFF6
 37617                           tablat	equ	0xFF5
 37618                           prodh	equ	0xFF4
 37619                           prodl	equ	0xFF3
 37620                           intcon	equ	0xFF2
 37621                           intcon2	equ	0xFF1
 37622                           intcon3	equ	0xFF0
 37623                           indf0	equ	0xFEF
 37624                           postinc0	equ	0xFEE
 37625                           plusw0	equ	0xFEB
 37626                           fsr0h	equ	0xFEA
 37627                           fsr0l	equ	0xFE9
 37628                           wreg	equ	0xFE8
 37629                           postinc1	equ	0xFE6
 37630                           postdec1	equ	0xFE5
 37631                           plusw1	equ	0xFE3
 37632                           fsr1h	equ	0xFE2
 37633                           fsr1l	equ	0xFE1
 37634                           indf2	equ	0xFDF
 37635                           postinc2	equ	0xFDE
 37636                           postdec2	equ	0xFDD
 37637                           plusw2	equ	0xFDB
 37638                           fsr2h	equ	0xFDA
 37639                           fsr2l	equ	0xFD9
 37640                           status	equ	0xFD8
 37641                           
 37642 ;; *************** function _HALResetPinMakeInput *****************
 37643 ;; Defined at:
 37644 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 37645 ;; Parameters:    Size  Location     Type
 37646 ;;		None
 37647 ;; Auto vars:     Size  Location     Type
 37648 ;;		None
 37649 ;; Return value:  Size  Location     Type
 37650 ;;                  1    wreg      void 
 37651 ;; Registers used:
 37652 ;;		None
 37653 ;; Tracked objects:
 37654 ;;		On entry : 0/0
 37655 ;;		On exit  : 0/0
 37656 ;;		Unchanged: 0/0
 37657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37662 ;;Total ram usage:        0 bytes
 37663 ;; Hardware stack levels used:    1
 37664 ;; Hardware stack levels required when called:    7
 37665 ;; This function calls:
 37666 ;;		Nothing
 37667 ;; This function is called by:
 37668 ;;		_RADIO_Reset
 37669 ;; This function uses a non-reentrant model
 37670 ;;
 37671                           
 37672                           	psect	text183
 37673  008D9C                     __ptext183:
 37674                           	opt stack 0
 37675  008D9C                     _HALResetPinMakeInput:
 37676                           	opt stack 20
 37677                           
 37678                           ;incstack = 0
 37679                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 37680  008D9C  8494               	bsf	3988,2,c	;volatile
 37681  008D9E  0012               	return	
 37682  008DA0                     __end_of_HALResetPinMakeInput:
 37683                           	opt stack 0
 37684                           tosu	equ	0xFFF
 37685                           tosh	equ	0xFFE
 37686                           tosl	equ	0xFFD
 37687                           pclath	equ	0xFFA
 37688                           tblptru	equ	0xFF8
 37689                           tblptrh	equ	0xFF7
 37690                           tblptrl	equ	0xFF6
 37691                           tablat	equ	0xFF5
 37692                           prodh	equ	0xFF4
 37693                           prodl	equ	0xFF3
 37694                           intcon	equ	0xFF2
 37695                           intcon2	equ	0xFF1
 37696                           intcon3	equ	0xFF0
 37697                           indf0	equ	0xFEF
 37698                           postinc0	equ	0xFEE
 37699                           plusw0	equ	0xFEB
 37700                           fsr0h	equ	0xFEA
 37701                           fsr0l	equ	0xFE9
 37702                           wreg	equ	0xFE8
 37703                           postinc1	equ	0xFE6
 37704                           postdec1	equ	0xFE5
 37705                           plusw1	equ	0xFE3
 37706                           fsr1h	equ	0xFE2
 37707                           fsr1l	equ	0xFE1
 37708                           indf2	equ	0xFDF
 37709                           postinc2	equ	0xFDE
 37710                           postdec2	equ	0xFDD
 37711                           plusw2	equ	0xFDB
 37712                           fsr2h	equ	0xFDA
 37713                           fsr2l	equ	0xFD9
 37714                           status	equ	0xFD8
 37715                           
 37716 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 37717 ;; Defined at:
 37718 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37719 ;; Parameters:    Size  Location     Type
 37720 ;;  period          2   70[BANK0 ] unsigned int 
 37721 ;; Auto vars:     Size  Location     Type
 37722 ;;  iCtr            1   80[BANK0 ] unsigned char 
 37723 ;; Return value:  Size  Location     Type
 37724 ;;                  1    wreg      void 
 37725 ;; Registers used:
 37726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37727 ;; Tracked objects:
 37728 ;;		On entry : 0/0
 37729 ;;		On exit  : 0/0
 37730 ;;		Unchanged: 0/0
 37731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37732 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37733 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37734 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37735 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37736 ;;Total ram usage:       11 bytes
 37737 ;; Hardware stack levels used:    1
 37738 ;; Hardware stack levels required when called:   11
 37739 ;; This function calls:
 37740 ;;		_SwTimerSetTimeout
 37741 ;;		_SwTimerStart
 37742 ;;		_SwTimerStop
 37743 ;;		___lldiv
 37744 ;;		___lmul
 37745 ;; This function is called by:
 37746 ;;		_LORAWAN_Reset
 37747 ;; This function uses a non-reentrant model
 37748 ;;
 37749                           
 37750                           	psect	text184
 37751  005246                     __ptext184:
 37752                           	opt stack 0
 37753  005246                     _LORAWAN_LinkCheckConfigure:
 37754                           	opt stack 17
 37755                           
 37756                           ;lorawan.c: 757: uint8_t iCtr;
 37757                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 37758                           
 37759                           ;incstack = 0
 37760  005246  C0A6  F09A         	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 37761  00524A  C0A7  F09B         	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 37762  00524E  0100               	movlb	0	; () banked
 37763  005250  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 37764  005252  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 37765  005254  0EE8               	movlw	232
 37766  005256  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 37767  005258  0E03               	movlw	3
 37768  00525A  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 37769  00525C  0E00               	movlw	0
 37770  00525E  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 37771  005260  0E00               	movlw	0
 37772  005262  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 37773  005264  EC72  F03E         	call	___lmul	;wreg free
 37774  005268  C09A  F2CC         	movff	?___lmul,_loRa+204
 37775  00526C  C09B  F2CD         	movff	?___lmul+1,_loRa+205
 37776  005270  C09C  F2CE         	movff	?___lmul+2,_loRa+206
 37777  005274  C09D  F2CF         	movff	?___lmul+3,_loRa+207
 37778                           
 37779                           ;lorawan.c: 761: if (period == 0)
 37780  005278  0100               	movlb	0	; () banked
 37781  00527A  51A6               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 37782  00527C  11A7               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 37783  00527E  A4D8               	btfss	status,2,c
 37784  005280  D02B               	goto	l1777
 37785                           
 37786                           ; BSR set to: 0
 37787                           ;lorawan.c: 762: {
 37788                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 37789  005282  0102               	movlb	2	; () banked
 37790  005284  51E7               	movf	(_loRa+231)& (0+255),w,b
 37791  005286  ECF9  F043         	call	_SwTimerStop
 37792                           
 37793                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 37794  00528A  0102               	movlb	2	; () banked
 37795  00528C  9503               	bcf	(_loRa+3)& (0+255),2,b
 37796                           
 37797                           ; BSR set to: 2
 37798                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 37799  00528E  0E00               	movlw	0
 37800  005290  0100               	movlb	0	; () banked
 37801  005292  6FB0               	movwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 37802  005294  D01A               	goto	l1778
 37803  005296                     
 37804                           ; BSR set to: 0
 37805                           ;lorawan.c: 766: {
 37806                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 37807                           
 37808                           ; BSR set to: 0
 37809  005296  51B0               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 37810  005298  0D02               	mullw	2
 37811  00529A  0EA8               	movlw	low (_loRa+168)
 37812  00529C  24F3               	addwf	prodl,w,c
 37813  00529E  6ED9               	movwf	fsr2l,c
 37814  0052A0  0E02               	movlw	high (_loRa+168)
 37815  0052A2  20F4               	addwfc	prodh,w,c
 37816  0052A4  6EDA               	movwf	fsr2h,c
 37817  0052A6  0E02               	movlw	2
 37818  0052A8  18DE               	xorwf	postinc2,w,c
 37819  0052AA  A4D8               	btfss	status,2,c
 37820  0052AC  D00C               	goto	l1780
 37821                           
 37822                           ; BSR set to: 0
 37823                           ;lorawan.c: 768: {
 37824                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 37825  0052AE  51B0               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 37826  0052B0  0D02               	mullw	2
 37827  0052B2  0EA8               	movlw	low (_loRa+168)
 37828  0052B4  24F3               	addwf	prodl,w,c
 37829  0052B6  6ED9               	movwf	fsr2l,c
 37830  0052B8  0E02               	movlw	high (_loRa+168)
 37831  0052BA  20F4               	addwfc	prodh,w,c
 37832  0052BC  6EDA               	movwf	fsr2h,c
 37833  0052BE  0EFF               	movlw	255
 37834  0052C0  6EDF               	movwf	indf2,c
 37835                           
 37836                           ; BSR set to: 0
 37837                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 37838  0052C2  0102               	movlb	2	; () banked
 37839  0052C4  07A7               	decf	(_loRa+167)& (0+255),f,b
 37840  0052C6                     l1780:
 37841                           
 37842                           ; BSR set to: 2
 37843  0052C6  0100               	movlb	0	; () banked
 37844  0052C8  2BB0               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 37845  0052CA                     l1778:
 37846                           
 37847                           ; BSR set to: 0
 37848                           
 37849                           ; BSR set to: 0
 37850  0052CA  0102               	movlb	2	; () banked
 37851  0052CC  51A7               	movf	(_loRa+167)& (0+255),w,b
 37852  0052CE  0100               	movlb	0	; () banked
 37853  0052D0  5DB0               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 37854  0052D2  B0D8               	btfsc	status,0,c
 37855  0052D4  0012               	return	
 37856  0052D6  D7DF               	goto	l1779
 37857  0052D8                     l1777:
 37858                           
 37859                           ; BSR set to: 0
 37860                           ;lorawan.c: 776: else
 37861                           ;lorawan.c: 777: {
 37862                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 37863  0052D8  0102               	movlb	2	; () banked
 37864  0052DA  8503               	bsf	(_loRa+3)& (0+255),2,b
 37865                           
 37866                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 37867  0052DC  A902               	btfss	(_loRa+2)& (0+255),4,b
 37868  0052DE  0012               	return	
 37869                           
 37870                           ; BSR set to: 2
 37871                           ;lorawan.c: 782: {
 37872                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 37873  0052E0  51CF               	movf	(_loRa+207)& (0+255),w,b
 37874  0052E2  E107               	bnz	u19560
 37875  0052E4  29CC               	incf	(_loRa+204)& (0+255),w,b
 37876  0052E6  0EFF               	movlw	255
 37877  0052E8  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 37878  0052EA  0E0F               	movlw	15
 37879  0052EC  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 37880  0052EE  A0D8               	btfss	status,0,c
 37881  0052F0  D01D               	goto	l1785
 37882  0052F2                     u19560:
 37883                           
 37884                           ; BSR set to: 2
 37885  0052F2  C2CC  F060         	movff	_loRa+204,___lldiv@dividend
 37886  0052F6  C2CD  F061         	movff	_loRa+205,___lldiv@dividend+1
 37887  0052FA  C2CE  F062         	movff	_loRa+206,___lldiv@dividend+2
 37888  0052FE  C2CF  F063         	movff	_loRa+207,___lldiv@dividend+3
 37889  005302  0E7D               	movlw	125
 37890  005304  0100               	movlb	0	; () banked
 37891  005306  6F64               	movwf	___lldiv@divisor& (0+255),b
 37892  005308  0E00               	movlw	0
 37893  00530A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 37894  00530C  0E00               	movlw	0
 37895  00530E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 37896  005310  0E00               	movlw	0
 37897  005312  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 37898  005314  ECB4  F039         	call	___lldiv	;wreg free
 37899  005318  0E0C               	movlw	12
 37900  00531A                     u19575:
 37901  00531A  90D8               	bcf	status,0,c
 37902  00531C  0100               	movlb	0	; () banked
 37903  00531E  3760               	rlcf	?___lldiv& (0+255),f,b
 37904  005320  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 37905  005322  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 37906  005324  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 37907  005326  2EE8               	decfsz	wreg,f,c
 37908  005328  D7F8               	goto	u19575
 37909  00532A  D023               	goto	L28
 37910  00532C                     l1785:
 37911                           
 37912                           ; BSR set to: 0
 37913  00532C  C2CC  F0A8         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 37914  005330  C2CD  F0A9         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 37915  005334  C2CE  F0AA         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 37916  005338  C2CF  F0AB         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 37917  00533C  0E0C               	movlw	12
 37918  00533E                     u19585:
 37919  00533E  90D8               	bcf	status,0,c
 37920  005340  0100               	movlb	0	; () banked
 37921  005342  37A8               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 37922  005344  37A9               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 37923  005346  37AA               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 37924  005348  37AB               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 37925  00534A  2EE8               	decfsz	wreg,f,c
 37926  00534C  D7F8               	goto	u19585
 37927  00534E  C0A8  F060         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 37928  005352  C0A9  F061         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 37929  005356  C0AA  F062         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 37930  00535A  C0AB  F063         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 37931  00535E  0E7D               	movlw	125
 37932  005360  6F64               	movwf	___lldiv@divisor& (0+255),b
 37933  005362  0E00               	movlw	0
 37934  005364  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 37935  005366  0E00               	movlw	0
 37936  005368  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 37937  00536A  0E00               	movlw	0
 37938  00536C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 37939  00536E  ECB4  F039         	call	___lldiv	;wreg free
 37940  005372                     L28:
 37941  005372  C060  F0AC         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$2492
 37942  005376  C061  F0AD         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$2492+1
 37943  00537A  C062  F0AE         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$2492+2
 37944  00537E  C063  F0AF         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$2492+3
 37945  005382  C0AC  F06D         	movff	_LORAWAN_LinkCheckConfigure$2492,SwTimerSetTimeout@timeout
 37946  005386  C0AD  F06E         	movff	_LORAWAN_LinkCheckConfigure$2492+1,SwTimerSetTimeout@timeout+1
 37947  00538A  C0AE  F06F         	movff	_LORAWAN_LinkCheckConfigure$2492+2,SwTimerSetTimeout@timeout+2
 37948  00538E  C0AF  F070         	movff	_LORAWAN_LinkCheckConfigure$2492+3,SwTimerSetTimeout@timeout+3
 37949  005392  0102               	movlb	2	; () banked
 37950  005394  51E7               	movf	(_loRa+231)& (0+255),w,b
 37951  005396  EC23  F041         	call	_SwTimerSetTimeout
 37952                           
 37953                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 37954  00539A  0102               	movlb	2	; () banked
 37955  00539C  51E7               	movf	(_loRa+231)& (0+255),w,b
 37956  00539E  EC3B  F037         	call	_SwTimerStart
 37957  0053A2  0012               	return	
 37958  0053A4                     __end_of_LORAWAN_LinkCheckConfigure:
 37959                           	opt stack 0
 37960                           tosu	equ	0xFFF
 37961                           tosh	equ	0xFFE
 37962                           tosl	equ	0xFFD
 37963                           pclath	equ	0xFFA
 37964                           tblptru	equ	0xFF8
 37965                           tblptrh	equ	0xFF7
 37966                           tblptrl	equ	0xFF6
 37967                           tablat	equ	0xFF5
 37968                           prodh	equ	0xFF4
 37969                           prodl	equ	0xFF3
 37970                           intcon	equ	0xFF2
 37971                           intcon2	equ	0xFF1
 37972                           intcon3	equ	0xFF0
 37973                           indf0	equ	0xFEF
 37974                           postinc0	equ	0xFEE
 37975                           plusw0	equ	0xFEB
 37976                           fsr0h	equ	0xFEA
 37977                           fsr0l	equ	0xFE9
 37978                           wreg	equ	0xFE8
 37979                           postinc1	equ	0xFE6
 37980                           postdec1	equ	0xFE5
 37981                           plusw1	equ	0xFE3
 37982                           fsr1h	equ	0xFE2
 37983                           fsr1l	equ	0xFE1
 37984                           indf2	equ	0xFDF
 37985                           postinc2	equ	0xFDE
 37986                           postdec2	equ	0xFDD
 37987                           plusw2	equ	0xFDB
 37988                           fsr2h	equ	0xFDA
 37989                           fsr2l	equ	0xFD9
 37990                           status	equ	0xFD8
 37991                           
 37992 ;; *************** function ___lmul *****************
 37993 ;; Defined at:
 37994 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 37995 ;; Parameters:    Size  Location     Type
 37996 ;;  multiplier      4   58[BANK0 ] unsigned long 
 37997 ;;  multiplicand    4   62[BANK0 ] unsigned long 
 37998 ;; Auto vars:     Size  Location     Type
 37999 ;;  product         4   66[BANK0 ] unsigned long 
 38000 ;; Return value:  Size  Location     Type
 38001 ;;                  4   58[BANK0 ] unsigned long 
 38002 ;; Registers used:
 38003 ;;		wreg, status,2, status,0
 38004 ;; Tracked objects:
 38005 ;;		On entry : 0/0
 38006 ;;		On exit  : 0/0
 38007 ;;		Unchanged: 0/0
 38008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38009 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38010 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38012 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38013 ;;Total ram usage:       12 bytes
 38014 ;; Hardware stack levels used:    1
 38015 ;; Hardware stack levels required when called:    7
 38016 ;; This function calls:
 38017 ;;		Nothing
 38018 ;; This function is called by:
 38019 ;;		_RADIO_WriteConfiguration
 38020 ;;		_RADIO_TxDone
 38021 ;;		_RADIO_FSKPacketSent
 38022 ;;		_LORAWAN_TxDone
 38023 ;;		_ExecuteNewChannel
 38024 ;;		_ExecuteRxParamSetupReq
 38025 ;;		_UpdateCfList
 38026 ;;		_LORAWAN_LinkCheckConfigure
 38027 ;;		_rand
 38028 ;;		_LORAWAN_Pause
 38029 ;; This function uses a non-reentrant model
 38030 ;;
 38031                           
 38032                           	psect	text185
 38033  007CE4                     __ptext185:
 38034                           	opt stack 0
 38035  007CE4                     ___lmul:
 38036                           	opt stack 18
 38037                           
 38038                           ;incstack = 0
 38039  007CE4  0E00               	movlw	0
 38040  007CE6  0100               	movlb	0	; () banked
 38041  007CE8  6FA2               	movwf	___lmul@product& (0+255),b
 38042  007CEA  0E00               	movlw	0
 38043  007CEC  6FA3               	movwf	(___lmul@product+1)& (0+255),b
 38044  007CEE  0E00               	movlw	0
 38045  007CF0  6FA4               	movwf	(___lmul@product+2)& (0+255),b
 38046  007CF2  0E00               	movlw	0
 38047  007CF4  6FA5               	movwf	(___lmul@product+3)& (0+255),b
 38048  007CF6                     
 38049                           ; BSR set to: 0
 38050                           
 38051                           ; BSR set to: 0
 38052  007CF6  A19A               	btfss	___lmul@multiplier& (0+255),0,b
 38053  007CF8  D008               	goto	l2738
 38054                           
 38055                           ; BSR set to: 0
 38056  007CFA  519E               	movf	___lmul@multiplicand& (0+255),w,b
 38057  007CFC  27A2               	addwf	___lmul@product& (0+255),f,b
 38058  007CFE  519F               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 38059  007D00  23A3               	addwfc	(___lmul@product+1)& (0+255),f,b
 38060  007D02  51A0               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 38061  007D04  23A4               	addwfc	(___lmul@product+2)& (0+255),f,b
 38062  007D06  51A1               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 38063  007D08  23A5               	addwfc	(___lmul@product+3)& (0+255),f,b
 38064  007D0A                     l2738:
 38065                           
 38066                           ; BSR set to: 0
 38067                           
 38068                           ; BSR set to: 0
 38069  007D0A  90D8               	bcf	status,0,c
 38070  007D0C  379E               	rlcf	___lmul@multiplicand& (0+255),f,b
 38071  007D0E  379F               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 38072  007D10  37A0               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 38073  007D12  37A1               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 38074                           
 38075                           ; BSR set to: 0
 38076  007D14  90D8               	bcf	status,0,c
 38077  007D16  339D               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 38078  007D18  339C               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 38079  007D1A  339B               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 38080  007D1C  339A               	rrcf	___lmul@multiplier& (0+255),f,b
 38081  007D1E  519A               	movf	___lmul@multiplier& (0+255),w,b
 38082  007D20  119B               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 38083  007D22  119C               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 38084  007D24  119D               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 38085  007D26  A4D8               	btfss	status,2,c
 38086  007D28  D7E6               	goto	l2737
 38087                           
 38088                           ; BSR set to: 0
 38089  007D2A  C0A2  F09A         	movff	___lmul@product,?___lmul
 38090  007D2E  C0A3  F09B         	movff	___lmul@product+1,?___lmul+1
 38091  007D32  C0A4  F09C         	movff	___lmul@product+2,?___lmul+2
 38092  007D36  C0A5  F09D         	movff	___lmul@product+3,?___lmul+3
 38093                           
 38094                           ; BSR set to: 0
 38095  007D3A  0012               	return		;funcret
 38096  007D3C                     __end_of___lmul:
 38097                           	opt stack 0
 38098                           tosu	equ	0xFFF
 38099                           tosh	equ	0xFFE
 38100                           tosl	equ	0xFFD
 38101                           pclath	equ	0xFFA
 38102                           tblptru	equ	0xFF8
 38103                           tblptrh	equ	0xFF7
 38104                           tblptrl	equ	0xFF6
 38105                           tablat	equ	0xFF5
 38106                           prodh	equ	0xFF4
 38107                           prodl	equ	0xFF3
 38108                           intcon	equ	0xFF2
 38109                           intcon2	equ	0xFF1
 38110                           intcon3	equ	0xFF0
 38111                           indf0	equ	0xFEF
 38112                           postinc0	equ	0xFEE
 38113                           plusw0	equ	0xFEB
 38114                           fsr0h	equ	0xFEA
 38115                           fsr0l	equ	0xFE9
 38116                           wreg	equ	0xFE8
 38117                           postinc1	equ	0xFE6
 38118                           postdec1	equ	0xFE5
 38119                           plusw1	equ	0xFE3
 38120                           fsr1h	equ	0xFE2
 38121                           fsr1l	equ	0xFE1
 38122                           indf2	equ	0xFDF
 38123                           postinc2	equ	0xFDE
 38124                           postdec2	equ	0xFDD
 38125                           plusw2	equ	0xFDB
 38126                           fsr2h	equ	0xFDA
 38127                           fsr2l	equ	0xFD9
 38128                           status	equ	0xFD8
 38129                           
 38130 ;; *************** function ___lldiv *****************
 38131 ;; Defined at:
 38132 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 38133 ;; Parameters:    Size  Location     Type
 38134 ;;  dividend        4    0[BANK0 ] unsigned long 
 38135 ;;  divisor         4    4[BANK0 ] unsigned long 
 38136 ;; Auto vars:     Size  Location     Type
 38137 ;;  quotient        4    8[BANK0 ] unsigned long 
 38138 ;;  counter         1   12[BANK0 ] unsigned char 
 38139 ;; Return value:  Size  Location     Type
 38140 ;;                  4    0[BANK0 ] unsigned long 
 38141 ;; Registers used:
 38142 ;;		wreg, status,2, status,0
 38143 ;; Tracked objects:
 38144 ;;		On entry : 0/0
 38145 ;;		On exit  : 0/0
 38146 ;;		Unchanged: 0/0
 38147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38148 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38149 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38151 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38152 ;;Total ram usage:       13 bytes
 38153 ;; Hardware stack levels used:    1
 38154 ;; Hardware stack levels required when called:    7
 38155 ;; This function calls:
 38156 ;;		Nothing
 38157 ;; This function is called by:
 38158 ;;		_RADIO_WriteFrequency
 38159 ;;		_RADIO_WriteFSKFrequencyDeviation
 38160 ;;		_RADIO_WriteFSKBitRate
 38161 ;;		_RADIO_Transmit
 38162 ;;		_RADIO_ReceiveStart
 38163 ;;		_LORAWAN_TxDone
 38164 ;;		_LORAWAN_RxTimeout
 38165 ;;		_StartReTxTimer
 38166 ;;		_DutyCycleCallback
 38167 ;;		_LORAWAN_LinkCheckConfigure
 38168 ;;		_LORAWAN_LinkCheckCallback
 38169 ;;		_UpdateRetransmissionAckTimeoutState
 38170 ;;		_UpdateJoinSuccessState
 38171 ;; This function uses a non-reentrant model
 38172 ;;
 38173                           
 38174                           	psect	text186
 38175  007368                     __ptext186:
 38176                           	opt stack 0
 38177  007368                     ___lldiv:
 38178                           	opt stack 21
 38179                           
 38180                           ; BSR set to: 0
 38181                           ;incstack = 0
 38182  007368  0E00               	movlw	0
 38183  00736A  0100               	movlb	0	; () banked
 38184  00736C  6F68               	movwf	___lldiv@quotient& (0+255),b
 38185  00736E  0E00               	movlw	0
 38186  007370  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 38187  007372  0E00               	movlw	0
 38188  007374  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 38189  007376  0E00               	movlw	0
 38190  007378  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 38191                           
 38192                           ; BSR set to: 0
 38193  00737A  5164               	movf	___lldiv@divisor& (0+255),w,b
 38194  00737C  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 38195  00737E  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 38196  007380  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 38197  007382  B4D8               	btfsc	status,2,c
 38198  007384  D02A               	goto	l3081
 38199                           
 38200                           ; BSR set to: 0
 38201  007386  0E01               	movlw	1
 38202  007388  6F6C               	movwf	___lldiv@counter& (0+255),b
 38203  00738A  D006               	goto	l3076
 38204  00738C                     
 38205                           ; BSR set to: 0
 38206                           
 38207                           ; BSR set to: 0
 38208  00738C  90D8               	bcf	status,0,c
 38209  00738E  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 38210  007390  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 38211  007392  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 38212  007394  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 38213  007396  2B6C               	incf	___lldiv@counter& (0+255),f,b
 38214  007398                     l3076:
 38215                           
 38216                           ; BSR set to: 0
 38217                           
 38218                           ; BSR set to: 0
 38219  007398  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 38220  00739A  D7F8               	goto	l3077
 38221  00739C                     u14550:
 38222                           
 38223                           ; BSR set to: 0
 38224                           
 38225                           ; BSR set to: 0
 38226                           
 38227                           ; BSR set to: 0
 38228  00739C  90D8               	bcf	status,0,c
 38229  00739E  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 38230  0073A0  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 38231  0073A2  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 38232  0073A4  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 38233                           
 38234                           ; BSR set to: 0
 38235  0073A6  5164               	movf	___lldiv@divisor& (0+255),w,b
 38236  0073A8  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 38237  0073AA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 38238  0073AC  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 38239  0073AE  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 38240  0073B0  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 38241  0073B2  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 38242  0073B4  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 38243  0073B6  A0D8               	btfss	status,0,c
 38244  0073B8  D009               	goto	l3080
 38245                           
 38246                           ; BSR set to: 0
 38247  0073BA  5164               	movf	___lldiv@divisor& (0+255),w,b
 38248  0073BC  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 38249  0073BE  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 38250  0073C0  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 38251  0073C2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 38252  0073C4  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 38253  0073C6  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 38254  0073C8  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 38255                           
 38256                           ; BSR set to: 0
 38257  0073CA  8168               	bsf	___lldiv@quotient& (0+255),0,b
 38258  0073CC                     l3080:
 38259                           
 38260                           ; BSR set to: 0
 38261                           
 38262                           ; BSR set to: 0
 38263  0073CC  90D8               	bcf	status,0,c
 38264  0073CE  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 38265  0073D0  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 38266  0073D2  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 38267  0073D4  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 38268                           
 38269                           ; BSR set to: 0
 38270  0073D6  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 38271  0073D8  D7E1               	goto	u14550
 38272  0073DA                     l3081:
 38273                           
 38274                           ; BSR set to: 0
 38275                           
 38276                           ; BSR set to: 0
 38277  0073DA  C068  F060         	movff	___lldiv@quotient,?___lldiv
 38278  0073DE  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 38279  0073E2  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 38280  0073E6  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 38281                           
 38282                           ; BSR set to: 0
 38283  0073EA  0012               	return		;funcret
 38284  0073EC                     __end_of___lldiv:
 38285                           	opt stack 0
 38286                           tosu	equ	0xFFF
 38287                           tosh	equ	0xFFE
 38288                           tosl	equ	0xFFD
 38289                           pclath	equ	0xFFA
 38290                           tblptru	equ	0xFF8
 38291                           tblptrh	equ	0xFF7
 38292                           tblptrl	equ	0xFF6
 38293                           tablat	equ	0xFF5
 38294                           prodh	equ	0xFF4
 38295                           prodl	equ	0xFF3
 38296                           intcon	equ	0xFF2
 38297                           intcon2	equ	0xFF1
 38298                           intcon3	equ	0xFF0
 38299                           indf0	equ	0xFEF
 38300                           postinc0	equ	0xFEE
 38301                           plusw0	equ	0xFEB
 38302                           fsr0h	equ	0xFEA
 38303                           fsr0l	equ	0xFE9
 38304                           wreg	equ	0xFE8
 38305                           postinc1	equ	0xFE6
 38306                           postdec1	equ	0xFE5
 38307                           plusw1	equ	0xFE3
 38308                           fsr1h	equ	0xFE2
 38309                           fsr1l	equ	0xFE1
 38310                           indf2	equ	0xFDF
 38311                           postinc2	equ	0xFDE
 38312                           postdec2	equ	0xFDD
 38313                           plusw2	equ	0xFDB
 38314                           fsr2h	equ	0xFDA
 38315                           fsr2l	equ	0xFD9
 38316                           status	equ	0xFD8
 38317                           
 38318 ;; *************** function _SwTimerStop *****************
 38319 ;; Defined at:
 38320 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38321 ;; Parameters:    Size  Location     Type
 38322 ;;  timerId         1    wreg     unsigned char 
 38323 ;; Auto vars:     Size  Location     Type
 38324 ;;  timerId         1    0[BANK0 ] unsigned char 
 38325 ;; Return value:  Size  Location     Type
 38326 ;;                  1    wreg      void 
 38327 ;; Registers used:
 38328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38329 ;; Tracked objects:
 38330 ;;		On entry : 0/0
 38331 ;;		On exit  : 0/0
 38332 ;;		Unchanged: 0/0
 38333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38335 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38337 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38338 ;;Total ram usage:        1 bytes
 38339 ;; Hardware stack levels used:    1
 38340 ;; Hardware stack levels required when called:    7
 38341 ;; This function calls:
 38342 ;;		Nothing
 38343 ;; This function is called by:
 38344 ;;		_RADIO_Init
 38345 ;;		_RADIO_Transmit
 38346 ;;		_RADIO_RxDone
 38347 ;;		_RADIO_FSKPayloadReady
 38348 ;;		_RADIO_RxTimeout
 38349 ;;		_RADIO_TxDone
 38350 ;;		_RADIO_FSKPacketSent
 38351 ;;		_RADIO_RxFSKTimeout
 38352 ;;		_LORAWAN_TxDone
 38353 ;;		_StopAllSoftwareTimers
 38354 ;;		_LORAWAN_LinkCheckConfigure
 38355 ;;		_LORAWAN_RxDone
 38356 ;; This function uses a non-reentrant model
 38357 ;;
 38358                           
 38359                           	psect	text187
 38360  0087F2                     __ptext187:
 38361                           	opt stack 0
 38362  0087F2                     _SwTimerStop:
 38363                           	opt stack 21
 38364                           
 38365                           ; BSR set to: 0
 38366                           ;incstack = 0
 38367                           ;SwTimerStop@timerId stored from wreg
 38368  0087F2  0100               	movlb	0	; () banked
 38369  0087F4  6F60               	movwf	SwTimerStop@timerId& (0+255),b
 38370                           
 38371                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 38372  0087F6  9EF2               	bcf	intcon,7,c	;volatile
 38373                           
 38374                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 38375  0087F8  0100               	movlb	0	; () banked
 38376  0087FA  5160               	movf	SwTimerStop@timerId& (0+255),w,b
 38377  0087FC  0D08               	mullw	8
 38378  0087FE  0E04               	movlw	4
 38379  008800  26F3               	addwf	prodl,f,c
 38380  008802  0E00               	movlw	0
 38381  008804  22F4               	addwfc	prodh,f,c
 38382  008806  0E00               	movlw	low _swTimers
 38383  008808  24F3               	addwf	prodl,w,c
 38384  00880A  6ED9               	movwf	fsr2l,c
 38385  00880C  0E03               	movlw	high _swTimers
 38386  00880E  20F4               	addwfc	prodh,w,c
 38387  008810  6EDA               	movwf	fsr2h,c
 38388  008812  0E00               	movlw	0
 38389  008814  6EDF               	movwf	indf2,c
 38390                           
 38391                           ; BSR set to: 0
 38392                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 38393  008816  8EF2               	bsf	intcon,7,c	;volatile
 38394                           
 38395                           ; BSR set to: 0
 38396  008818  0012               	return		;funcret
 38397  00881A                     __end_of_SwTimerStop:
 38398                           	opt stack 0
 38399                           tosu	equ	0xFFF
 38400                           tosh	equ	0xFFE
 38401                           tosl	equ	0xFFD
 38402                           pclath	equ	0xFFA
 38403                           tblptru	equ	0xFF8
 38404                           tblptrh	equ	0xFF7
 38405                           tblptrl	equ	0xFF6
 38406                           tablat	equ	0xFF5
 38407                           prodh	equ	0xFF4
 38408                           prodl	equ	0xFF3
 38409                           intcon	equ	0xFF2
 38410                           intcon2	equ	0xFF1
 38411                           intcon3	equ	0xFF0
 38412                           indf0	equ	0xFEF
 38413                           postinc0	equ	0xFEE
 38414                           plusw0	equ	0xFEB
 38415                           fsr0h	equ	0xFEA
 38416                           fsr0l	equ	0xFE9
 38417                           wreg	equ	0xFE8
 38418                           postinc1	equ	0xFE6
 38419                           postdec1	equ	0xFE5
 38420                           plusw1	equ	0xFE3
 38421                           fsr1h	equ	0xFE2
 38422                           fsr1l	equ	0xFE1
 38423                           indf2	equ	0xFDF
 38424                           postinc2	equ	0xFDE
 38425                           postdec2	equ	0xFDD
 38426                           plusw2	equ	0xFDB
 38427                           fsr2h	equ	0xFDA
 38428                           fsr2l	equ	0xFD9
 38429                           status	equ	0xFD8
 38430                           
 38431 ;; *************** function _SwTimerStart *****************
 38432 ;; Defined at:
 38433 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38434 ;; Parameters:    Size  Location     Type
 38435 ;;  timerId         1    wreg     unsigned char 
 38436 ;; Auto vars:     Size  Location     Type
 38437 ;;  timerId         1   57[BANK0 ] unsigned char 
 38438 ;;  ticksRemaini    4   53[BANK0 ] unsigned long 
 38439 ;; Return value:  Size  Location     Type
 38440 ;;                  1    wreg      void 
 38441 ;; Registers used:
 38442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38443 ;; Tracked objects:
 38444 ;;		On entry : 0/0
 38445 ;;		On exit  : 0/0
 38446 ;;		Unchanged: 0/0
 38447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38449 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38450 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38451 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38452 ;;Total ram usage:        9 bytes
 38453 ;; Hardware stack levels used:    1
 38454 ;; Hardware stack levels required when called:   10
 38455 ;; This function calls:
 38456 ;;		_SwTimersInterrupt
 38457 ;;		_TMR_OverrideRemaining
 38458 ;; This function is called by:
 38459 ;;		_RADIO_Transmit
 38460 ;;		_RADIO_ReceiveStart
 38461 ;;		_LORAWAN_TxDone
 38462 ;;		_LORAWAN_RxTimeout
 38463 ;;		_StartReTxTimer
 38464 ;;		_DutyCycleCallback
 38465 ;;		_LORAWAN_Join
 38466 ;;		_LORAWAN_LinkCheckConfigure
 38467 ;;		_LORAWAN_LinkCheckCallback
 38468 ;;		_UpdateRetransmissionAckTimeoutState
 38469 ;;		_UpdateJoinSuccessState
 38470 ;; This function uses a non-reentrant model
 38471 ;;
 38472                           
 38473                           	psect	text188
 38474  006E76                     __ptext188:
 38475                           	opt stack 0
 38476  006E76                     _SwTimerStart:
 38477                           	opt stack 18
 38478                           
 38479                           ; BSR set to: 0
 38480                           ;incstack = 0
 38481                           ;SwTimerStart@timerId stored from wreg
 38482  006E76  0100               	movlb	0	; () banked
 38483  006E78  6F99               	movwf	SwTimerStart@timerId& (0+255),b
 38484                           
 38485                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 38486                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 38487  006E7A  9EF2               	bcf	intcon,7,c	;volatile
 38488                           
 38489                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 38490  006E7C  EC0C  F02E         	call	_SwTimersInterrupt	;wreg free
 38491  006E80  C080  F095         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 38492  006E84  C081  F096         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 38493  006E88  C082  F097         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 38494  006E8C  C083  F098         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 38495                           
 38496                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 38497  006E90  0100               	movlb	0	; () banked
 38498  006E92  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 38499  006E94  0D08               	mullw	8
 38500  006E96  0E00               	movlw	low _swTimers
 38501  006E98  24F3               	addwf	prodl,w,c
 38502  006E9A  6ED9               	movwf	fsr2l,c
 38503  006E9C  0E03               	movlw	high _swTimers
 38504  006E9E  20F4               	addwfc	prodh,w,c
 38505  006EA0  6EDA               	movwf	fsr2h,c
 38506  006EA2  5195               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 38507  006EA4  5CDE               	subwf	postinc2,w,c
 38508  006EA6  5196               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 38509  006EA8  58DE               	subwfb	postinc2,w,c
 38510  006EAA  5197               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 38511  006EAC  58DE               	subwfb	postinc2,w,c
 38512  006EAE  5198               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 38513  006EB0  58DE               	subwfb	postinc2,w,c
 38514  006EB2  B0D8               	btfsc	status,0,c
 38515  006EB4  D010               	goto	l260
 38516                           
 38517                           ; BSR set to: 0
 38518                           ;sw_timer.c: 225: {
 38519                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 38520  006EB6  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 38521  006EB8  0D08               	mullw	8
 38522  006EBA  0E00               	movlw	low _swTimers
 38523  006EBC  24F3               	addwf	prodl,w,c
 38524  006EBE  6ED9               	movwf	fsr2l,c
 38525  006EC0  0E03               	movlw	high _swTimers
 38526  006EC2  20F4               	addwfc	prodh,w,c
 38527  006EC4  6EDA               	movwf	fsr2h,c
 38528  006EC6  CFDE F095          	movff	postinc2,SwTimerStart@ticksRemaining
 38529  006ECA  CFDE F096          	movff	postinc2,SwTimerStart@ticksRemaining+1
 38530  006ECE  CFDE F097          	movff	postinc2,SwTimerStart@ticksRemaining+2
 38531  006ED2  CFDE F098          	movff	postinc2,SwTimerStart@ticksRemaining+3
 38532  006ED6                     l260:
 38533                           
 38534                           ; BSR set to: 0
 38535                           ;sw_timer.c: 227: }
 38536                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 38537                           
 38538                           ; BSR set to: 0
 38539  006ED6  C095  F06A         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 38540  006EDA  C096  F06B         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 38541  006EDE  C097  F06C         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 38542  006EE2  C098  F06D         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 38543  006EE6  EC86  F037         	call	_TMR_OverrideRemaining	;wreg free
 38544                           
 38545                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 38546  006EEA  0100               	movlb	0	; () banked
 38547  006EEC  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 38548  006EEE  0D08               	mullw	8
 38549  006EF0  0E04               	movlw	4
 38550  006EF2  26F3               	addwf	prodl,f,c
 38551  006EF4  0E00               	movlw	0
 38552  006EF6  22F4               	addwfc	prodh,f,c
 38553  006EF8  0E00               	movlw	low _swTimers
 38554  006EFA  24F3               	addwf	prodl,w,c
 38555  006EFC  6ED9               	movwf	fsr2l,c
 38556  006EFE  0E03               	movlw	high _swTimers
 38557  006F00  20F4               	addwfc	prodh,w,c
 38558  006F02  6EDA               	movwf	fsr2h,c
 38559  006F04  0E01               	movlw	1
 38560  006F06  6EDF               	movwf	indf2,c
 38561                           
 38562                           ; BSR set to: 0
 38563                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 38564  006F08  8EF2               	bsf	intcon,7,c	;volatile
 38565                           
 38566                           ; BSR set to: 0
 38567  006F0A  0012               	return		;funcret
 38568  006F0C                     __end_of_SwTimerStart:
 38569                           	opt stack 0
 38570                           tosu	equ	0xFFF
 38571                           tosh	equ	0xFFE
 38572                           tosl	equ	0xFFD
 38573                           pclath	equ	0xFFA
 38574                           tblptru	equ	0xFF8
 38575                           tblptrh	equ	0xFF7
 38576                           tblptrl	equ	0xFF6
 38577                           tablat	equ	0xFF5
 38578                           prodh	equ	0xFF4
 38579                           prodl	equ	0xFF3
 38580                           intcon	equ	0xFF2
 38581                           intcon2	equ	0xFF1
 38582                           intcon3	equ	0xFF0
 38583                           indf0	equ	0xFEF
 38584                           postinc0	equ	0xFEE
 38585                           plusw0	equ	0xFEB
 38586                           fsr0h	equ	0xFEA
 38587                           fsr0l	equ	0xFE9
 38588                           wreg	equ	0xFE8
 38589                           postinc1	equ	0xFE6
 38590                           postdec1	equ	0xFE5
 38591                           plusw1	equ	0xFE3
 38592                           fsr1h	equ	0xFE2
 38593                           fsr1l	equ	0xFE1
 38594                           indf2	equ	0xFDF
 38595                           postinc2	equ	0xFDE
 38596                           postdec2	equ	0xFDD
 38597                           plusw2	equ	0xFDB
 38598                           fsr2h	equ	0xFDA
 38599                           fsr2l	equ	0xFD9
 38600                           status	equ	0xFD8
 38601                           
 38602 ;; *************** function _TMR_OverrideRemaining *****************
 38603 ;; Defined at:
 38604 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38605 ;; Parameters:    Size  Location     Type
 38606 ;;  ticksRemaini    4   10[BANK0 ] unsigned long 
 38607 ;; Auto vars:     Size  Location     Type
 38608 ;;  oldReloadVal    2   18[BANK0 ] unsigned int 
 38609 ;;  tmrVal          2   16[BANK0 ] unsigned int 
 38610 ;; Return value:  Size  Location     Type
 38611 ;;                  1    wreg      void 
 38612 ;; Registers used:
 38613 ;;		wreg, status,2, status,0, cstack
 38614 ;; Tracked objects:
 38615 ;;		On entry : 0/0
 38616 ;;		On exit  : 0/0
 38617 ;;		Unchanged: 0/0
 38618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38619 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38620 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38621 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38622 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38623 ;;Total ram usage:       10 bytes
 38624 ;; Hardware stack levels used:    1
 38625 ;; Hardware stack levels required when called:    9
 38626 ;; This function calls:
 38627 ;;		_TMR_SwapTimer
 38628 ;; This function is called by:
 38629 ;;		_SwTimerStart
 38630 ;; This function uses a non-reentrant model
 38631 ;;
 38632                           
 38633                           	psect	text189
 38634  006F0C                     __ptext189:
 38635                           	opt stack 0
 38636  006F0C                     _TMR_OverrideRemaining:
 38637                           	opt stack 18
 38638                           
 38639                           ;sw_timer.c: 67: uint16_t tmrVal;
 38640                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 38641                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 38642                           
 38643                           ; BSR set to: 0
 38644                           ;incstack = 0
 38645  006F0C  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 38646  006F0E  1056               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 38647  006F10  1055               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 38648  006F12  E104               	bnz	u14640
 38649  006F14  0E0B               	movlw	11
 38650  006F16  5C54               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 38651  006F18  A0D8               	btfss	status,0,c
 38652  006F1A  0012               	return	
 38653  006F1C                     u14640:
 38654                           
 38655                           ;sw_timer.c: 72: {
 38656                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 38657  006F1C  5054               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 38658  006F1E  0100               	movlb	0	; () banked
 38659  006F20  5D6A               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 38660  006F22  5055               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 38661  006F24  596B               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 38662  006F26  5056               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 38663  006F28  596C               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 38664  006F2A  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 38665  006F2C  596D               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 38666  006F2E  B0D8               	btfsc	status,0,c
 38667  006F30  0012               	return	
 38668                           
 38669                           ; BSR set to: 0
 38670                           ;sw_timer.c: 74: {
 38671                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 38672  006F32  C06A  F054         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 38673  006F36  C06B  F055         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 38674  006F3A  C06C  F056         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 38675  006F3E  C06D  F057         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 38676                           
 38677                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 38678  006F42  C044  F072         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 38679  006F46  C045  F073         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 38680                           
 38681                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 38682  006F4A  C06A  F06E         	movff	TMR_OverrideRemaining@ticksRemaining,??_TMR_OverrideRemaining
 38683  006F4E  C06B  F06F         	movff	TMR_OverrideRemaining@ticksRemaining+1,??_TMR_OverrideRemaining+1
 38684  006F52  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 38685  006F54  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 38686  006F56  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 38687  006F58  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 38688  006F5A  C06E  F044         	movff	??_TMR_OverrideRemaining,_reloadVal	;volatile
 38689  006F5E  C06F  F045         	movff	??_TMR_OverrideRemaining+1,_reloadVal+1	;volatile
 38690                           
 38691                           ; BSR set to: 0
 38692                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 38693  006F62  C044  F068         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 38694  006F66  C045  F069         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 38695  006F6A  ECEA  F03F         	call	_TMR_SwapTimer	;wreg free
 38696  006F6E  C068  F070         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 38697  006F72  C069  F071         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 38698                           
 38699                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 38700  006F76  C072  F06E         	movff	TMR_OverrideRemaining@oldReloadVal,??_TMR_OverrideRemaining
 38701  006F7A  C073  F06F         	movff	TMR_OverrideRemaining@oldReloadVal+1,??_TMR_OverrideRemaining+1
 38702  006F7E  0100               	movlb	0	; () banked
 38703  006F80  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 38704  006F82  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 38705  006F84  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 38706  006F86  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 38707  006F88  5170               	movf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 38708  006F8A  276E               	addwf	??_TMR_OverrideRemaining& (0+255),f,b
 38709  006F8C  5171               	movf	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 38710  006F8E  236F               	addwfc	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 38711  006F90  516E               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 38712  006F92  2640               	addwf	_ticksAdded,f,c	;volatile
 38713  006F94  516F               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 38714  006F96  2241               	addwfc	_ticksAdded+1,f,c	;volatile
 38715  006F98  0E00               	movlw	0
 38716  006F9A  2242               	addwfc	_ticksAdded+2,f,c	;volatile
 38717  006F9C  0E00               	movlw	0
 38718  006F9E  2243               	addwfc	_ticksAdded+3,f,c	;volatile
 38719                           
 38720                           ; BSR set to: 0
 38721  006FA0  0012               	return	
 38722  006FA2                     __end_of_TMR_OverrideRemaining:
 38723                           	opt stack 0
 38724                           tosu	equ	0xFFF
 38725                           tosh	equ	0xFFE
 38726                           tosl	equ	0xFFD
 38727                           pclath	equ	0xFFA
 38728                           tblptru	equ	0xFF8
 38729                           tblptrh	equ	0xFF7
 38730                           tblptrl	equ	0xFF6
 38731                           tablat	equ	0xFF5
 38732                           prodh	equ	0xFF4
 38733                           prodl	equ	0xFF3
 38734                           intcon	equ	0xFF2
 38735                           intcon2	equ	0xFF1
 38736                           intcon3	equ	0xFF0
 38737                           indf0	equ	0xFEF
 38738                           postinc0	equ	0xFEE
 38739                           plusw0	equ	0xFEB
 38740                           fsr0h	equ	0xFEA
 38741                           fsr0l	equ	0xFE9
 38742                           wreg	equ	0xFE8
 38743                           postinc1	equ	0xFE6
 38744                           postdec1	equ	0xFE5
 38745                           plusw1	equ	0xFE3
 38746                           fsr1h	equ	0xFE2
 38747                           fsr1l	equ	0xFE1
 38748                           indf2	equ	0xFDF
 38749                           postinc2	equ	0xFDE
 38750                           postdec2	equ	0xFDD
 38751                           plusw2	equ	0xFDB
 38752                           fsr2h	equ	0xFDA
 38753                           fsr2l	equ	0xFD9
 38754                           status	equ	0xFD8
 38755                           
 38756 ;; *************** function _TMR_SwapTimer *****************
 38757 ;; Defined at:
 38758 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38759 ;; Parameters:    Size  Location     Type
 38760 ;;  timerVal        2    8[BANK0 ] unsigned int 
 38761 ;; Auto vars:     Size  Location     Type
 38762 ;;		None
 38763 ;; Return value:  Size  Location     Type
 38764 ;;                  2    8[BANK0 ] unsigned int 
 38765 ;; Registers used:
 38766 ;;		wreg, status,2, status,0, cstack
 38767 ;; Tracked objects:
 38768 ;;		On entry : 0/0
 38769 ;;		On exit  : 0/0
 38770 ;;		Unchanged: 0/0
 38771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38775 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38776 ;;Total ram usage:        2 bytes
 38777 ;; Hardware stack levels used:    1
 38778 ;; Hardware stack levels required when called:    8
 38779 ;; This function calls:
 38780 ;;		_TMR1_ReadTimer
 38781 ;;		_TMR1_WriteTimer
 38782 ;; This function is called by:
 38783 ;;		_TMR_OverrideRemaining
 38784 ;; This function uses a non-reentrant model
 38785 ;;
 38786                           
 38787                           	psect	text190
 38788  007FD4                     __ptext190:
 38789                           	opt stack 0
 38790  007FD4                     _TMR_SwapTimer:
 38791                           	opt stack 18
 38792                           
 38793                           ;sw_timer.c: 114: static uint16_t oldVal;
 38794                           ;sw_timer.c: 115: static uint16_t retVal;
 38795                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 38796                           
 38797                           ;incstack = 0
 38798  007FD4  EC65  F044         	call	_TMR1_ReadTimer	;wreg free
 38799  007FD8  C060  F11A         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 38800  007FDC  C061  F11B         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 38801  007FE0                     
 38802                           ;sw_timer.c: 123: ;
 38803  007FE0  EC65  F044         	call	_TMR1_ReadTimer	;wreg free
 38804  007FE4  0101               	movlb	1	; () banked
 38805  007FE6  511A               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 38806  007FE8  0100               	movlb	0	; () banked
 38807  007FEA  1960               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 38808  007FEC  E106               	bnz	l13087
 38809  007FEE  0101               	movlb	1	; () banked
 38810  007FF0  511B               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 38811  007FF2  0100               	movlb	0	; () banked
 38812  007FF4  1961               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 38813  007FF6  B4D8               	btfsc	status,2,c
 38814  007FF8  D7F3               	goto	l226
 38815  007FFA                     l13087:
 38816                           
 38817                           ; BSR set to: 0
 38818                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 38819  007FFA  C068  F060         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 38820  007FFE  C069  F061         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 38821  008002  ECB6  F044         	call	_TMR1_WriteTimer	;wreg free
 38822                           
 38823                           ;sw_timer.c: 128: oldVal++;
 38824  008006  0101               	movlb	1	; () banked
 38825  008008  4B1A               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 38826  00800A  2B1B               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 38827                           
 38828                           ; BSR set to: 1
 38829                           ;sw_timer.c: 130: retVal = oldVal;
 38830  00800C  C11A  F118         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 38831  008010  C11B  F119         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 38832                           
 38833                           ; BSR set to: 1
 38834                           ;sw_timer.c: 132: return retVal;
 38835  008014  C118  F068         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 38836  008018  C119  F069         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 38837  00801C  0012               	return	
 38838  00801E                     __end_of_TMR_SwapTimer:
 38839                           	opt stack 0
 38840                           tosu	equ	0xFFF
 38841                           tosh	equ	0xFFE
 38842                           tosl	equ	0xFFD
 38843                           pclath	equ	0xFFA
 38844                           tblptru	equ	0xFF8
 38845                           tblptrh	equ	0xFF7
 38846                           tblptrl	equ	0xFF6
 38847                           tablat	equ	0xFF5
 38848                           prodh	equ	0xFF4
 38849                           prodl	equ	0xFF3
 38850                           intcon	equ	0xFF2
 38851                           intcon2	equ	0xFF1
 38852                           intcon3	equ	0xFF0
 38853                           indf0	equ	0xFEF
 38854                           postinc0	equ	0xFEE
 38855                           plusw0	equ	0xFEB
 38856                           fsr0h	equ	0xFEA
 38857                           fsr0l	equ	0xFE9
 38858                           wreg	equ	0xFE8
 38859                           postinc1	equ	0xFE6
 38860                           postdec1	equ	0xFE5
 38861                           plusw1	equ	0xFE3
 38862                           fsr1h	equ	0xFE2
 38863                           fsr1l	equ	0xFE1
 38864                           indf2	equ	0xFDF
 38865                           postinc2	equ	0xFDE
 38866                           postdec2	equ	0xFDD
 38867                           plusw2	equ	0xFDB
 38868                           fsr2h	equ	0xFDA
 38869                           fsr2l	equ	0xFD9
 38870                           status	equ	0xFD8
 38871                           
 38872 ;; *************** function _TMR1_WriteTimer *****************
 38873 ;; Defined at:
 38874 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 38875 ;; Parameters:    Size  Location     Type
 38876 ;;  timerVal        2    0[BANK0 ] unsigned int 
 38877 ;; Auto vars:     Size  Location     Type
 38878 ;;		None
 38879 ;; Return value:  Size  Location     Type
 38880 ;;                  1    wreg      void 
 38881 ;; Registers used:
 38882 ;;		wreg, status,2
 38883 ;; Tracked objects:
 38884 ;;		On entry : 0/0
 38885 ;;		On exit  : 0/0
 38886 ;;		Unchanged: 0/0
 38887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38888 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38891 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38892 ;;Total ram usage:        2 bytes
 38893 ;; Hardware stack levels used:    1
 38894 ;; Hardware stack levels required when called:    7
 38895 ;; This function calls:
 38896 ;;		Nothing
 38897 ;; This function is called by:
 38898 ;;		_TMR_SwapTimer
 38899 ;;		_TMR1_Reload
 38900 ;; This function uses a non-reentrant model
 38901 ;;
 38902                           
 38903                           	psect	text191
 38904  00896C                     __ptext191:
 38905                           	opt stack 0
 38906  00896C                     _TMR1_WriteTimer:
 38907                           	opt stack 18
 38908                           
 38909                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 38910                           
 38911                           ; BSR set to: 1
 38912                           ;incstack = 0
 38913  00896C  A4CD               	btfss	4045,2,c	;volatile
 38914  00896E  D008               	goto	l2437
 38915                           
 38916                           ;tmr1.c: 124: {
 38917                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 38918  008970  90CD               	bcf	4045,0,c	;volatile
 38919                           
 38920                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 38921  008972  0100               	movlb	0	; () banked
 38922  008974  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 38923  008976  6ECF               	movwf	4047,c	;volatile
 38924                           
 38925                           ; BSR set to: 0
 38926                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 38927  008978  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 38928                           
 38929                           ; BSR set to: 0
 38930                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 38931  00897C  80CD               	bsf	4045,0,c	;volatile
 38932                           
 38933                           ;tmr1.c: 134: }
 38934  00897E  0012               	return	
 38935  008980                     l2437:
 38936                           
 38937                           ;tmr1.c: 135: else
 38938                           ;tmr1.c: 136: {
 38939                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 38940                           
 38941                           ; BSR set to: 0
 38942  008980  0100               	movlb	0	; () banked
 38943  008982  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 38944  008984  6ECF               	movwf	4047,c	;volatile
 38945                           
 38946                           ; BSR set to: 0
 38947                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 38948  008986  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 38949  00898A  0012               	return	
 38950  00898C                     __end_of_TMR1_WriteTimer:
 38951                           	opt stack 0
 38952                           tosu	equ	0xFFF
 38953                           tosh	equ	0xFFE
 38954                           tosl	equ	0xFFD
 38955                           pclath	equ	0xFFA
 38956                           tblptru	equ	0xFF8
 38957                           tblptrh	equ	0xFF7
 38958                           tblptrl	equ	0xFF6
 38959                           tablat	equ	0xFF5
 38960                           prodh	equ	0xFF4
 38961                           prodl	equ	0xFF3
 38962                           intcon	equ	0xFF2
 38963                           intcon2	equ	0xFF1
 38964                           intcon3	equ	0xFF0
 38965                           indf0	equ	0xFEF
 38966                           postinc0	equ	0xFEE
 38967                           plusw0	equ	0xFEB
 38968                           fsr0h	equ	0xFEA
 38969                           fsr0l	equ	0xFE9
 38970                           wreg	equ	0xFE8
 38971                           postinc1	equ	0xFE6
 38972                           postdec1	equ	0xFE5
 38973                           plusw1	equ	0xFE3
 38974                           fsr1h	equ	0xFE2
 38975                           fsr1l	equ	0xFE1
 38976                           indf2	equ	0xFDF
 38977                           postinc2	equ	0xFDE
 38978                           postdec2	equ	0xFDD
 38979                           plusw2	equ	0xFDB
 38980                           fsr2h	equ	0xFDA
 38981                           fsr2l	equ	0xFD9
 38982                           status	equ	0xFD8
 38983                           
 38984 ;; *************** function _SwTimersInterrupt *****************
 38985 ;; Defined at:
 38986 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38987 ;; Parameters:    Size  Location     Type
 38988 ;;		None
 38989 ;; Auto vars:     Size  Location     Type
 38990 ;;  ticksToNextT    4   44[BANK0 ] unsigned long 
 38991 ;;  timeElapsed     4   40[BANK0 ] unsigned long 
 38992 ;;  i               1   48[BANK0 ] unsigned char 
 38993 ;; Return value:  Size  Location     Type
 38994 ;;                  4   32[BANK0 ] unsigned long 
 38995 ;; Registers used:
 38996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38997 ;; Tracked objects:
 38998 ;;		On entry : 0/0
 38999 ;;		On exit  : 0/0
 39000 ;;		Unchanged: 0/0
 39001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39002 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39003 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39004 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39005 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39006 ;;Total ram usage:       17 bytes
 39007 ;; Hardware stack levels used:    1
 39008 ;; Hardware stack levels required when called:    9
 39009 ;; This function calls:
 39010 ;;		_TMR_GetDeltaTime
 39011 ;; This function is called by:
 39012 ;;		_SwTimerReadValue
 39013 ;;		_SwTimerStart
 39014 ;;		_SwTimersCanSleep
 39015 ;; This function uses a non-reentrant model
 39016 ;;
 39017                           
 39018                           	psect	text192
 39019  005C18                     __ptext192:
 39020                           	opt stack 0
 39021  005C18                     _SwTimersInterrupt:
 39022                           	opt stack 18
 39023                           
 39024                           ;sw_timer.c: 289: uint8_t i;
 39025                           ;sw_timer.c: 290: uint32_t timeElapsed;
 39026                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 39027                           
 39028                           ; BSR set to: 0
 39029                           ;incstack = 0
 39030  005C18  0100               	movlb	0	; () banked
 39031  005C1A  698C               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 39032  005C1C  698D               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 39033  005C1E  698E               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 39034  005C20  698F               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 39035                           
 39036                           ; BSR set to: 0
 39037                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 39038  005C22  ECFD  F023         	call	_TMR_GetDeltaTime	;wreg free
 39039  005C26  C068  F088         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 39040  005C2A  C069  F089         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 39041  005C2E  C06A  F08A         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 39042  005C32  C06B  F08B         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 39043                           
 39044                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 39045  005C36  0E00               	movlw	0
 39046  005C38  0100               	movlb	0	; () banked
 39047  005C3A  6F90               	movwf	SwTimersInterrupt@i& (0+255),b
 39048  005C3C  D061               	goto	l283
 39049  005C3E                     
 39050                           ; BSR set to: 0
 39051                           ;sw_timer.c: 298: {
 39052                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 39053                           
 39054                           ; BSR set to: 0
 39055  005C3E  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 39056  005C40  0D08               	mullw	8
 39057  005C42  0E04               	movlw	4
 39058  005C44  26F3               	addwf	prodl,f,c
 39059  005C46  0E00               	movlw	0
 39060  005C48  22F4               	addwfc	prodh,f,c
 39061  005C4A  0E00               	movlw	low _swTimers
 39062  005C4C  24F3               	addwf	prodl,w,c
 39063  005C4E  6ED9               	movwf	fsr2l,c
 39064  005C50  0E03               	movlw	high _swTimers
 39065  005C52  20F4               	addwfc	prodh,w,c
 39066  005C54  6EDA               	movwf	fsr2h,c
 39067  005C56  04DE               	decf	postinc2,w,c
 39068  005C58  A4D8               	btfss	status,2,c
 39069  005C5A  D051               	goto	l288
 39070                           
 39071                           ; BSR set to: 0
 39072                           ;sw_timer.c: 302: {
 39073                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 39074  005C5C  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 39075  005C5E  0D08               	mullw	8
 39076  005C60  0E00               	movlw	low _swTimers
 39077  005C62  24F3               	addwf	prodl,w,c
 39078  005C64  6ED9               	movwf	fsr2l,c
 39079  005C66  0E03               	movlw	high _swTimers
 39080  005C68  20F4               	addwfc	prodh,w,c
 39081  005C6A  6EDA               	movwf	fsr2h,c
 39082  005C6C  50DE               	movf	postinc2,w,c
 39083  005C6E  5D88               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 39084  005C70  50DE               	movf	postinc2,w,c
 39085  005C72  5989               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 39086  005C74  50DE               	movf	postinc2,w,c
 39087  005C76  598A               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 39088  005C78  50DE               	movf	postinc2,w,c
 39089  005C7A  598B               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 39090  005C7C  A0D8               	btfss	status,0,c
 39091  005C7E  D00D               	goto	l286
 39092                           
 39093                           ; BSR set to: 0
 39094                           ;sw_timer.c: 304: {
 39095                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 39096  005C80  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 39097  005C82  0D08               	mullw	8
 39098  005C84  0E00               	movlw	low _swTimers
 39099  005C86  24F3               	addwf	prodl,w,c
 39100  005C88  6ED9               	movwf	fsr2l,c
 39101  005C8A  0E03               	movlw	high _swTimers
 39102  005C8C  20F4               	addwfc	prodh,w,c
 39103  005C8E  6EDA               	movwf	fsr2h,c
 39104  005C90  6ADE               	clrf	postinc2,c
 39105  005C92  6ADE               	clrf	postinc2,c
 39106  005C94  6ADE               	clrf	postinc2,c
 39107  005C96  6ADD               	clrf	postdec2,c
 39108                           
 39109                           ;sw_timer.c: 306: }
 39110  005C98  D032               	goto	l288
 39111  005C9A                     l286:
 39112                           
 39113                           ; BSR set to: 0
 39114                           ;sw_timer.c: 307: else
 39115                           ;sw_timer.c: 308: {
 39116                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 39117                           
 39118                           ; BSR set to: 0
 39119  005C9A  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 39120  005C9C  0D08               	mullw	8
 39121  005C9E  0E00               	movlw	low _swTimers
 39122  005CA0  24F3               	addwf	prodl,w,c
 39123  005CA2  6ED9               	movwf	fsr2l,c
 39124  005CA4  0E03               	movlw	high _swTimers
 39125  005CA6  20F4               	addwfc	prodh,w,c
 39126  005CA8  6EDA               	movwf	fsr2h,c
 39127  005CAA  5188               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 39128  005CAC  5EDE               	subwf	postinc2,f,c
 39129  005CAE  5189               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 39130  005CB0  5ADE               	subwfb	postinc2,f,c
 39131  005CB2  518A               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 39132  005CB4  5ADE               	subwfb	postinc2,f,c
 39133  005CB6  518B               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 39134  005CB8  5ADE               	subwfb	postinc2,f,c
 39135                           
 39136                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 39137  005CBA  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 39138  005CBC  0D08               	mullw	8
 39139  005CBE  0E00               	movlw	low _swTimers
 39140  005CC0  24F3               	addwf	prodl,w,c
 39141  005CC2  6ED9               	movwf	fsr2l,c
 39142  005CC4  0E03               	movlw	high _swTimers
 39143  005CC6  20F4               	addwfc	prodh,w,c
 39144  005CC8  6EDA               	movwf	fsr2h,c
 39145  005CCA  518C               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 39146  005CCC  5CDE               	subwf	postinc2,w,c
 39147  005CCE  518D               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 39148  005CD0  58DE               	subwfb	postinc2,w,c
 39149  005CD2  518E               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 39150  005CD4  58DE               	subwfb	postinc2,w,c
 39151  005CD6  518F               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 39152  005CD8  58DE               	subwfb	postinc2,w,c
 39153  005CDA  B0D8               	btfsc	status,0,c
 39154  005CDC  D010               	goto	l288
 39155                           
 39156                           ; BSR set to: 0
 39157                           ;sw_timer.c: 313: {
 39158                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 39159  005CDE  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 39160  005CE0  0D08               	mullw	8
 39161  005CE2  0E00               	movlw	low _swTimers
 39162  005CE4  24F3               	addwf	prodl,w,c
 39163  005CE6  6ED9               	movwf	fsr2l,c
 39164  005CE8  0E03               	movlw	high _swTimers
 39165  005CEA  20F4               	addwfc	prodh,w,c
 39166  005CEC  6EDA               	movwf	fsr2h,c
 39167  005CEE  CFDE F08C          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 39168  005CF2  CFDE F08D          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 39169  005CF6  CFDE F08E          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 39170  005CFA  CFDE F08F          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 39171  005CFE                     l288:
 39172                           
 39173                           ; BSR set to: 0
 39174                           
 39175                           ; BSR set to: 0
 39176                           
 39177                           ; BSR set to: 0
 39178                           
 39179                           ; BSR set to: 0
 39180  005CFE  2B90               	incf	SwTimersInterrupt@i& (0+255),f,b
 39181  005D00                     l283:
 39182                           
 39183                           ; BSR set to: 0
 39184                           
 39185                           ; BSR set to: 0
 39186  005D00  51FB               	movf	_allocatedTimers& (0+255),w,b	;volatile
 39187  005D02  5D90               	subwf	SwTimersInterrupt@i& (0+255),w,b
 39188  005D04  A0D8               	btfss	status,0,c
 39189  005D06  D79B               	goto	l284
 39190                           
 39191                           ; BSR set to: 0
 39192                           ;sw_timer.c: 315: }
 39193                           ;sw_timer.c: 316: }
 39194                           ;sw_timer.c: 317: }
 39195                           ;sw_timer.c: 318: }
 39196                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 39197  005D08  C08C  F080         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 39198  005D0C  C08D  F081         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 39199  005D10  C08E  F082         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 39200  005D14  C08F  F083         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 39201                           
 39202                           ; BSR set to: 0
 39203  005D18  0012               	return		;funcret
 39204  005D1A                     __end_of_SwTimersInterrupt:
 39205                           	opt stack 0
 39206                           tosu	equ	0xFFF
 39207                           tosh	equ	0xFFE
 39208                           tosl	equ	0xFFD
 39209                           pclath	equ	0xFFA
 39210                           tblptru	equ	0xFF8
 39211                           tblptrh	equ	0xFF7
 39212                           tblptrl	equ	0xFF6
 39213                           tablat	equ	0xFF5
 39214                           prodh	equ	0xFF4
 39215                           prodl	equ	0xFF3
 39216                           intcon	equ	0xFF2
 39217                           intcon2	equ	0xFF1
 39218                           intcon3	equ	0xFF0
 39219                           indf0	equ	0xFEF
 39220                           postinc0	equ	0xFEE
 39221                           plusw0	equ	0xFEB
 39222                           fsr0h	equ	0xFEA
 39223                           fsr0l	equ	0xFE9
 39224                           wreg	equ	0xFE8
 39225                           postinc1	equ	0xFE6
 39226                           postdec1	equ	0xFE5
 39227                           plusw1	equ	0xFE3
 39228                           fsr1h	equ	0xFE2
 39229                           fsr1l	equ	0xFE1
 39230                           indf2	equ	0xFDF
 39231                           postinc2	equ	0xFDE
 39232                           postdec2	equ	0xFDD
 39233                           plusw2	equ	0xFDB
 39234                           fsr2h	equ	0xFDA
 39235                           fsr2l	equ	0xFD9
 39236                           status	equ	0xFD8
 39237                           
 39238 ;; *************** function _TMR_GetDeltaTime *****************
 39239 ;; Defined at:
 39240 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 39241 ;; Parameters:    Size  Location     Type
 39242 ;;		None
 39243 ;; Auto vars:     Size  Location     Type
 39244 ;;		None
 39245 ;; Return value:  Size  Location     Type
 39246 ;;                  4    8[BANK0 ] unsigned long 
 39247 ;; Registers used:
 39248 ;;		wreg, status,2, status,0, cstack
 39249 ;; Tracked objects:
 39250 ;;		On entry : 0/0
 39251 ;;		On exit  : 0/0
 39252 ;;		Unchanged: 0/0
 39253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39254 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39256 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39257 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39258 ;;Total ram usage:       24 bytes
 39259 ;; Hardware stack levels used:    1
 39260 ;; Hardware stack levels required when called:    8
 39261 ;; This function calls:
 39262 ;;		_TMR1_ReadTimer
 39263 ;; This function is called by:
 39264 ;;		_SwTimersInterrupt
 39265 ;; This function uses a non-reentrant model
 39266 ;;
 39267                           
 39268                           	psect	text193
 39269  0047FA                     __ptext193:
 39270                           	opt stack 0
 39271  0047FA                     _TMR_GetDeltaTime:
 39272                           	opt stack 18
 39273                           
 39274                           ;sw_timer.c: 90: static uint32_t retVal;
 39275                           ;sw_timer.c: 91: static uint16_t tmrVal;
 39276                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 39277                           
 39278                           ; BSR set to: 0
 39279                           ;incstack = 0
 39280  0047FA  EC65  F044         	call	_TMR1_ReadTimer	;wreg free
 39281  0047FE  C060  F11C         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 39282  004802  C061  F11D         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 39283                           
 39284                           ;sw_timer.c: 95: if (timerOverflow == 1)
 39285  004806  0447               	decf	_timerOverflow,w,c	;volatile
 39286  004808  A4D8               	btfss	status,2,c
 39287  00480A  D071               	goto	l216
 39288                           
 39289                           ;sw_timer.c: 96: {
 39290                           ;sw_timer.c: 97: timerOverflow = 0;
 39291  00480C  0E00               	movlw	0
 39292  00480E  6E47               	movwf	_timerOverflow,c	;volatile
 39293                           
 39294                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 39295  004810  C03C  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 39296  004814  C03D  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 39297  004818  C03E  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 39298  00481C  C03F  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 39299  004820  0100               	movlb	0	; () banked
 39300  004822  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 39301  004824  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 39302  004826  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 39303  004828  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 39304  00482A  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 39305  00482C  0E00               	movlw	0
 39306  00482E  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 39307  004830  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 39308  004832  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 39309  004834  5044               	movf	_reloadVal,w,c	;volatile
 39310  004836  6F70               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 39311  004838  5045               	movf	_reloadVal+1,w,c	;volatile
 39312  00483A  6F71               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 39313  00483C  6B72               	clrf	(??_TMR_GetDeltaTime+6)& (0+255),b
 39314  00483E  6B73               	clrf	(??_TMR_GetDeltaTime+7)& (0+255),b
 39315  004840  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 39316  004842  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 39317  004844  1F72               	comf	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 39318  004846  1F73               	comf	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 39319  004848  2B70               	incf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 39320  00484A  0E00               	movlw	0
 39321  00484C  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 39322  00484E  2372               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 39323  004850  2373               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 39324  004852  0101               	movlb	1	; () banked
 39325  004854  511C               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 39326  004856  0100               	movlb	0	; () banked
 39327  004858  2570               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 39328  00485A  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 39329  00485C  0101               	movlb	1	; () banked
 39330  00485E  511D               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 39331  004860  0100               	movlb	0	; () banked
 39332  004862  2171               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 39333  004864  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 39334  004866  0E00               	movlw	0
 39335  004868  2172               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 39336  00486A  6F76               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 39337  00486C  0E00               	movlw	0
 39338  00486E  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 39339  004870  6F77               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 39340  004872  516C               	movf	??_TMR_GetDeltaTime& (0+255),w,b
 39341  004874  2574               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 39342  004876  6F78               	movwf	(??_TMR_GetDeltaTime+12)& (0+255),b
 39343  004878  516D               	movf	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 39344  00487A  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 39345  00487C  6F79               	movwf	(??_TMR_GetDeltaTime+13)& (0+255),b
 39346  00487E  516E               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 39347  004880  2176               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 39348  004882  6F7A               	movwf	(??_TMR_GetDeltaTime+14)& (0+255),b
 39349  004884  516F               	movf	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 39350  004886  2177               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 39351  004888  6F7B               	movwf	(??_TMR_GetDeltaTime+15)& (0+255),b
 39352  00488A  5040               	movf	_ticksAdded,w,c	;volatile
 39353  00488C  2578               	addwf	(??_TMR_GetDeltaTime+12)& (0+255),w,b
 39354  00488E  6F7C               	movwf	(??_TMR_GetDeltaTime+16)& (0+255),b
 39355  004890  5041               	movf	_ticksAdded+1,w,c	;volatile
 39356  004892  2179               	addwfc	(??_TMR_GetDeltaTime+13)& (0+255),w,b
 39357  004894  6F7D               	movwf	(??_TMR_GetDeltaTime+17)& (0+255),b
 39358  004896  5042               	movf	_ticksAdded+2,w,c	;volatile
 39359  004898  217A               	addwfc	(??_TMR_GetDeltaTime+14)& (0+255),w,b
 39360  00489A  6F7E               	movwf	(??_TMR_GetDeltaTime+18)& (0+255),b
 39361  00489C  5043               	movf	_ticksAdded+3,w,c	;volatile
 39362  00489E  217B               	addwfc	(??_TMR_GetDeltaTime+15)& (0+255),w,b
 39363  0048A0  6F7F               	movwf	(??_TMR_GetDeltaTime+19)& (0+255),b
 39364  0048A2  0E00               	movlw	0
 39365  0048A4  257C               	addwf	(??_TMR_GetDeltaTime+16)& (0+255),w,b
 39366  0048A6  0101               	movlb	1	; () banked
 39367  0048A8  6F14               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 39368  0048AA  0E00               	movlw	0
 39369  0048AC  0100               	movlb	0	; () banked
 39370  0048AE  217D               	addwfc	(??_TMR_GetDeltaTime+17)& (0+255),w,b
 39371  0048B0  0101               	movlb	1	; () banked
 39372  0048B2  6F15               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 39373  0048B4  0E01               	movlw	1
 39374  0048B6  0100               	movlb	0	; () banked
 39375  0048B8  217E               	addwfc	(??_TMR_GetDeltaTime+18)& (0+255),w,b
 39376  0048BA  0101               	movlb	1	; () banked
 39377  0048BC  6F16               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 39378  0048BE  0E00               	movlw	0
 39379  0048C0  0100               	movlb	0	; () banked
 39380  0048C2  217F               	addwfc	(??_TMR_GetDeltaTime+19)& (0+255),w,b
 39381  0048C4  0101               	movlb	1	; () banked
 39382  0048C6  6F17               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 39383                           
 39384                           ; BSR set to: 1
 39385                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 39386  0048C8  C11C  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 39387  0048CC  C11D  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 39388  0048D0  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 39389  0048D2  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 39390                           
 39391                           ; BSR set to: 1
 39392                           ;sw_timer.c: 100: ticksAdded = 0;
 39393  0048D4  0E00               	movlw	0
 39394  0048D6  6E40               	movwf	_ticksAdded,c	;volatile
 39395  0048D8  0E00               	movlw	0
 39396  0048DA  6E41               	movwf	_ticksAdded+1,c	;volatile
 39397  0048DC  0E00               	movlw	0
 39398  0048DE  6E42               	movwf	_ticksAdded+2,c	;volatile
 39399  0048E0  0E00               	movlw	0
 39400  0048E2  6E43               	movwf	_ticksAdded+3,c	;volatile
 39401                           
 39402                           ; BSR set to: 1
 39403                           ;sw_timer.c: 101: reloadVal = 0;
 39404  0048E4  0E00               	movlw	0
 39405  0048E6  6E45               	movwf	_reloadVal+1,c	;volatile
 39406  0048E8  0E00               	movlw	0
 39407  0048EA  6E44               	movwf	_reloadVal,c	;volatile
 39408                           
 39409                           ;sw_timer.c: 102: }
 39410  0048EC  D049               	goto	l217
 39411  0048EE                     l216:
 39412                           
 39413                           ;sw_timer.c: 103: else
 39414                           ;sw_timer.c: 104: {
 39415                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 39416                           
 39417                           ; BSR set to: 1
 39418  0048EE  C03C  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 39419  0048F2  C03D  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 39420  0048F6  C03E  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 39421  0048FA  C03F  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 39422  0048FE  0100               	movlb	0	; () banked
 39423  004900  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 39424  004902  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 39425  004904  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 39426  004906  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 39427  004908  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 39428  00490A  0E00               	movlw	0
 39429  00490C  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 39430  00490E  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 39431  004910  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 39432  004912  C044  F070         	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
 39433  004916  C045  F071         	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
 39434  00491A  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 39435  00491C  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 39436  00491E  4B70               	infsnz	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 39437  004920  2B71               	incf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 39438  004922  0101               	movlb	1	; () banked
 39439  004924  511C               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 39440  004926  0100               	movlb	0	; () banked
 39441  004928  2770               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 39442  00492A  0101               	movlb	1	; () banked
 39443  00492C  511D               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 39444  00492E  0100               	movlb	0	; () banked
 39445  004930  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 39446  004932  5170               	movf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 39447  004934  256C               	addwf	??_TMR_GetDeltaTime& (0+255),w,b
 39448  004936  6F72               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 39449  004938  5171               	movf	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 39450  00493A  216D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 39451  00493C  6F73               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 39452  00493E  0E00               	movlw	0
 39453  004940  216E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 39454  004942  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 39455  004944  0E00               	movlw	0
 39456  004946  216F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 39457  004948  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 39458  00494A  5040               	movf	_ticksAdded,w,c	;volatile
 39459  00494C  2572               	addwf	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 39460  00494E  0101               	movlb	1	; () banked
 39461  004950  6F14               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 39462  004952  5041               	movf	_ticksAdded+1,w,c	;volatile
 39463  004954  0100               	movlb	0	; () banked
 39464  004956  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 39465  004958  0101               	movlb	1	; () banked
 39466  00495A  6F15               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 39467  00495C  5042               	movf	_ticksAdded+2,w,c	;volatile
 39468  00495E  0100               	movlb	0	; () banked
 39469  004960  2174               	addwfc	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 39470  004962  0101               	movlb	1	; () banked
 39471  004964  6F16               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 39472  004966  5043               	movf	_ticksAdded+3,w,c	;volatile
 39473  004968  0100               	movlb	0	; () banked
 39474  00496A  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 39475  00496C  0101               	movlb	1	; () banked
 39476  00496E  6F17               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 39477                           
 39478                           ;sw_timer.c: 106: ticksAccounted += retVal;
 39479  004970  5114               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 39480  004972  263C               	addwf	_ticksAccounted,f,c	;volatile
 39481  004974  5115               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 39482  004976  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 39483  004978  5116               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 39484  00497A  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 39485  00497C  5117               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 39486  00497E  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 39487  004980                     l217:
 39488                           
 39489                           ; BSR set to: 1
 39490                           ;sw_timer.c: 107: }
 39491                           ;sw_timer.c: 109: return retVal;
 39492                           
 39493                           ; BSR set to: 1
 39494  004980  C114  F068         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 39495  004984  C115  F069         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 39496  004988  C116  F06A         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 39497  00498C  C117  F06B         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 39498  004990  0012               	return	
 39499  004992                     __end_of_TMR_GetDeltaTime:
 39500                           	opt stack 0
 39501                           tosu	equ	0xFFF
 39502                           tosh	equ	0xFFE
 39503                           tosl	equ	0xFFD
 39504                           pclath	equ	0xFFA
 39505                           tblptru	equ	0xFF8
 39506                           tblptrh	equ	0xFF7
 39507                           tblptrl	equ	0xFF6
 39508                           tablat	equ	0xFF5
 39509                           prodh	equ	0xFF4
 39510                           prodl	equ	0xFF3
 39511                           intcon	equ	0xFF2
 39512                           intcon2	equ	0xFF1
 39513                           intcon3	equ	0xFF0
 39514                           indf0	equ	0xFEF
 39515                           postinc0	equ	0xFEE
 39516                           plusw0	equ	0xFEB
 39517                           fsr0h	equ	0xFEA
 39518                           fsr0l	equ	0xFE9
 39519                           wreg	equ	0xFE8
 39520                           postinc1	equ	0xFE6
 39521                           postdec1	equ	0xFE5
 39522                           plusw1	equ	0xFE3
 39523                           fsr1h	equ	0xFE2
 39524                           fsr1l	equ	0xFE1
 39525                           indf2	equ	0xFDF
 39526                           postinc2	equ	0xFDE
 39527                           postdec2	equ	0xFDD
 39528                           plusw2	equ	0xFDB
 39529                           fsr2h	equ	0xFDA
 39530                           fsr2l	equ	0xFD9
 39531                           status	equ	0xFD8
 39532                           
 39533 ;; *************** function _TMR1_ReadTimer *****************
 39534 ;; Defined at:
 39535 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 39536 ;; Parameters:    Size  Location     Type
 39537 ;;		None
 39538 ;; Auto vars:     Size  Location     Type
 39539 ;;  readVal         2    4[BANK0 ] unsigned int 
 39540 ;;  readValLow      1    7[BANK0 ] unsigned char 
 39541 ;;  readValHigh     1    6[BANK0 ] unsigned char 
 39542 ;; Return value:  Size  Location     Type
 39543 ;;                  2    0[BANK0 ] unsigned int 
 39544 ;; Registers used:
 39545 ;;		wreg, status,2
 39546 ;; Tracked objects:
 39547 ;;		On entry : 0/0
 39548 ;;		On exit  : 0/0
 39549 ;;		Unchanged: 0/0
 39550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39552 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39553 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39554 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39555 ;;Total ram usage:        8 bytes
 39556 ;; Hardware stack levels used:    1
 39557 ;; Hardware stack levels required when called:    7
 39558 ;; This function calls:
 39559 ;;		Nothing
 39560 ;; This function is called by:
 39561 ;;		_TMR_GetDeltaTime
 39562 ;;		_TMR_SwapTimer
 39563 ;; This function uses a non-reentrant model
 39564 ;;
 39565                           
 39566                           	psect	text194
 39567  0088CA                     __ptext194:
 39568                           	opt stack 0
 39569  0088CA                     _TMR1_ReadTimer:
 39570                           	opt stack 18
 39571                           
 39572                           ;tmr1.c: 107: uint16_t readVal;
 39573                           ;tmr1.c: 108: uint8_t readValHigh;
 39574                           ;tmr1.c: 109: uint8_t readValLow;
 39575                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 39576                           
 39577                           ; BSR set to: 1
 39578                           ;incstack = 0
 39579  0088CA  82CD               	bsf	4045,1,c	;volatile
 39580                           
 39581                           ;tmr1.c: 113: readValLow = TMR1L;
 39582  0088CC  CFCE F067          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 39583                           
 39584                           ;tmr1.c: 114: readValHigh = TMR1H;
 39585  0088D0  CFCF F066          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 39586                           
 39587                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 39588  0088D4  0100               	movlb	0	; () banked
 39589  0088D6  5166               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 39590  0088D8  6F62               	movwf	??_TMR1_ReadTimer& (0+255),b
 39591  0088DA  5167               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 39592  0088DC  6F64               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 39593  0088DE  C062  F065         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 39594                           
 39595                           ; BSR set to: 0
 39596                           ;tmr1.c: 118: return readVal;
 39597  0088E2  C064  F060         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 39598  0088E6  C065  F061         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 39599  0088EA  0012               	return	
 39600  0088EC                     __end_of_TMR1_ReadTimer:
 39601                           	opt stack 0
 39602                           tosu	equ	0xFFF
 39603                           tosh	equ	0xFFE
 39604                           tosl	equ	0xFFD
 39605                           pclath	equ	0xFFA
 39606                           tblptru	equ	0xFF8
 39607                           tblptrh	equ	0xFF7
 39608                           tblptrl	equ	0xFF6
 39609                           tablat	equ	0xFF5
 39610                           prodh	equ	0xFF4
 39611                           prodl	equ	0xFF3
 39612                           intcon	equ	0xFF2
 39613                           intcon2	equ	0xFF1
 39614                           intcon3	equ	0xFF0
 39615                           indf0	equ	0xFEF
 39616                           postinc0	equ	0xFEE
 39617                           plusw0	equ	0xFEB
 39618                           fsr0h	equ	0xFEA
 39619                           fsr0l	equ	0xFE9
 39620                           wreg	equ	0xFE8
 39621                           postinc1	equ	0xFE6
 39622                           postdec1	equ	0xFE5
 39623                           plusw1	equ	0xFE3
 39624                           fsr1h	equ	0xFE2
 39625                           fsr1l	equ	0xFE1
 39626                           indf2	equ	0xFDF
 39627                           postinc2	equ	0xFDE
 39628                           postdec2	equ	0xFDD
 39629                           plusw2	equ	0xFDB
 39630                           fsr2h	equ	0xFDA
 39631                           fsr2l	equ	0xFD9
 39632                           status	equ	0xFD8
 39633                           
 39634 ;; *************** function _SwTimerSetTimeout *****************
 39635 ;; Defined at:
 39636 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 39637 ;; Parameters:    Size  Location     Type
 39638 ;;  timerId         1    wreg     unsigned char 
 39639 ;;  timeout         4   13[BANK0 ] unsigned long 
 39640 ;; Auto vars:     Size  Location     Type
 39641 ;;  timerId         1   21[BANK0 ] unsigned char 
 39642 ;; Return value:  Size  Location     Type
 39643 ;;                  1    wreg      void 
 39644 ;; Registers used:
 39645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39646 ;; Tracked objects:
 39647 ;;		On entry : 0/0
 39648 ;;		On exit  : 0/0
 39649 ;;		Unchanged: 0/0
 39650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39651 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39652 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39653 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39654 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39655 ;;Total ram usage:        9 bytes
 39656 ;; Hardware stack levels used:    1
 39657 ;; Hardware stack levels required when called:    7
 39658 ;; This function calls:
 39659 ;;		Nothing
 39660 ;; This function is called by:
 39661 ;;		_RADIO_Transmit
 39662 ;;		_RADIO_ReceiveStart
 39663 ;;		_LORAWAN_TxDone
 39664 ;;		_LORAWAN_RxTimeout
 39665 ;;		_StartReTxTimer
 39666 ;;		_DutyCycleCallback
 39667 ;;		_LORAWAN_Join
 39668 ;;		_LORAWAN_LinkCheckConfigure
 39669 ;;		_LORAWAN_LinkCheckCallback
 39670 ;;		_UpdateRetransmissionAckTimeoutState
 39671 ;;		_UpdateJoinSuccessState
 39672 ;; This function uses a non-reentrant model
 39673 ;;
 39674                           
 39675                           	psect	text195
 39676  008246                     __ptext195:
 39677                           	opt stack 0
 39678  008246                     _SwTimerSetTimeout:
 39679                           	opt stack 21
 39680                           
 39681                           ; BSR set to: 0
 39682                           ;incstack = 0
 39683                           ;SwTimerSetTimeout@timerId stored from wreg
 39684  008246  0100               	movlb	0	; () banked
 39685  008248  6F75               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 39686                           
 39687                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 39688  00824A  9EF2               	bcf	intcon,7,c	;volatile
 39689                           
 39690                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 39691  00824C  0EE0               	movlw	224
 39692  00824E  0100               	movlb	0	; () banked
 39693  008250  256D               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 39694  008252  6F71               	movwf	??_SwTimerSetTimeout& (0+255),b
 39695  008254  0EFF               	movlw	255
 39696  008256  216E               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 39697  008258  6F72               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 39698  00825A  0EFF               	movlw	255
 39699  00825C  216F               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 39700  00825E  6F73               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 39701  008260  0EFF               	movlw	255
 39702  008262  2170               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 39703  008264  6F74               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 39704  008266  5175               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 39705  008268  0D08               	mullw	8
 39706  00826A  0E00               	movlw	low _swTimers
 39707  00826C  24F3               	addwf	prodl,w,c
 39708  00826E  6ED9               	movwf	fsr2l,c
 39709  008270  0E03               	movlw	high _swTimers
 39710  008272  20F4               	addwfc	prodh,w,c
 39711  008274  6EDA               	movwf	fsr2h,c
 39712  008276  C071  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 39713  00827A  C072  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 39714  00827E  C073  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 39715  008282  C074  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 39716                           
 39717                           ; BSR set to: 0
 39718                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 39719  008286  8EF2               	bsf	intcon,7,c	;volatile
 39720                           
 39721                           ; BSR set to: 0
 39722  008288  0012               	return		;funcret
 39723  00828A                     __end_of_SwTimerSetTimeout:
 39724                           	opt stack 0
 39725                           tosu	equ	0xFFF
 39726                           tosh	equ	0xFFE
 39727                           tosl	equ	0xFFD
 39728                           pclath	equ	0xFFA
 39729                           tblptru	equ	0xFF8
 39730                           tblptrh	equ	0xFF7
 39731                           tblptrl	equ	0xFF6
 39732                           tablat	equ	0xFF5
 39733                           prodh	equ	0xFF4
 39734                           prodl	equ	0xFF3
 39735                           intcon	equ	0xFF2
 39736                           intcon2	equ	0xFF1
 39737                           intcon3	equ	0xFF0
 39738                           indf0	equ	0xFEF
 39739                           postinc0	equ	0xFEE
 39740                           plusw0	equ	0xFEB
 39741                           fsr0h	equ	0xFEA
 39742                           fsr0l	equ	0xFE9
 39743                           wreg	equ	0xFE8
 39744                           postinc1	equ	0xFE6
 39745                           postdec1	equ	0xFE5
 39746                           plusw1	equ	0xFE3
 39747                           fsr1h	equ	0xFE2
 39748                           fsr1l	equ	0xFE1
 39749                           indf2	equ	0xFDF
 39750                           postinc2	equ	0xFDE
 39751                           postdec2	equ	0xFDD
 39752                           plusw2	equ	0xFDB
 39753                           fsr2h	equ	0xFDA
 39754                           fsr2l	equ	0xFD9
 39755                           status	equ	0xFD8
 39756                           
 39757 ;; *************** function _InitDefault868Channels *****************
 39758 ;; Defined at:
 39759 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 39760 ;; Parameters:    Size  Location     Type
 39761 ;;		None
 39762 ;; Auto vars:     Size  Location     Type
 39763 ;;  i               1   11[BANK0 ] unsigned char 
 39764 ;; Return value:  Size  Location     Type
 39765 ;;                  1    wreg      void 
 39766 ;; Registers used:
 39767 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39768 ;; Tracked objects:
 39769 ;;		On entry : 0/0
 39770 ;;		On exit  : 0/0
 39771 ;;		Unchanged: 0/0
 39772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39774 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39776 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39777 ;;Total ram usage:        1 bytes
 39778 ;; Hardware stack levels used:    1
 39779 ;; Hardware stack levels required when called:    8
 39780 ;; This function calls:
 39781 ;;		_memcpy
 39782 ;;		_memset
 39783 ;; This function is called by:
 39784 ;;		_LORAWAN_Reset
 39785 ;; This function uses a non-reentrant model
 39786 ;;
 39787                           
 39788                           	psect	text196
 39789  007148                     __ptext196:
 39790                           	opt stack 0
 39791  007148                     _InitDefault868Channels:
 39792                           	opt stack 20
 39793                           
 39794                           ;lorawan_eu.c: 981: uint8_t i;
 39795                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 39796                           
 39797                           ; BSR set to: 0
 39798                           ;incstack = 0
 39799  007148  0E00               	movlw	low _Channels
 39800  00714A  0100               	movlb	0	; () banked
 39801  00714C  6F60               	movwf	memset@p1& (0+255),b
 39802  00714E  0E04               	movlw	high _Channels
 39803  007150  6F61               	movwf	(memset@p1+1)& (0+255),b
 39804  007152  0E00               	movlw	0
 39805  007154  6F63               	movwf	(memset@c+1)& (0+255),b
 39806  007156  0E00               	movlw	0
 39807  007158  6F62               	movwf	memset@c& (0+255),b
 39808  00715A  0E00               	movlw	0
 39809  00715C  6F65               	movwf	(memset@n+1)& (0+255),b
 39810  00715E  0EE0               	movlw	224
 39811  007160  6F64               	movwf	memset@n& (0+255),b
 39812  007162  ECCB  F042         	call	_memset	;wreg free
 39813                           
 39814                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 39815  007166  0E00               	movlw	low _Channels
 39816  007168  0100               	movlb	0	; () banked
 39817  00716A  6F60               	movwf	memcpy@d1& (0+255),b
 39818  00716C  0E04               	movlw	high _Channels
 39819  00716E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 39820  007170  0EB4               	movlw	low _DefaultChannels868
 39821  007172  6F62               	movwf	memcpy@s1& (0+255),b
 39822  007174  0EFF               	movlw	high _DefaultChannels868
 39823  007176  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 39824  007178  0E00               	movlw	0
 39825  00717A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 39826  00717C  0E2A               	movlw	42
 39827  00717E  6F64               	movwf	memcpy@n& (0+255),b
 39828  007180  EC5C  F03D         	call	_memcpy	;wreg free
 39829                           
 39830                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 39831  007184  0E03               	movlw	3
 39832  007186  0100               	movlb	0	; () banked
 39833  007188  6F6B               	movwf	InitDefault868Channels@i& (0+255),b
 39834  00718A                     l16219:
 39835                           
 39836                           ; BSR set to: 0
 39837  00718A  0E0F               	movlw	15
 39838  00718C  656B               	cpfsgt	InitDefault868Channels@i& (0+255),b
 39839  00718E  D001               	goto	l1201
 39840  007190  0012               	return	
 39841  007192                     l1201:
 39842                           
 39843                           ; BSR set to: 0
 39844                           ;lorawan_eu.c: 986: {
 39845                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 39846                           
 39847                           ; BSR set to: 0
 39848  007192  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 39849  007194  0D0E               	mullw	14
 39850  007196  0E06               	movlw	6
 39851  007198  26F3               	addwf	prodl,f,c
 39852  00719A  0E00               	movlw	0
 39853  00719C  22F4               	addwfc	prodh,f,c
 39854  00719E  0E00               	movlw	low _Channels
 39855  0071A0  24F3               	addwf	prodl,w,c
 39856  0071A2  6ED9               	movwf	fsr2l,c
 39857  0071A4  0E04               	movlw	high _Channels
 39858  0071A6  20F4               	addwfc	prodh,w,c
 39859  0071A8  6EDA               	movwf	fsr2h,c
 39860  0071AA  0EFF               	movlw	255
 39861  0071AC  6EDE               	movwf	postinc2,c
 39862  0071AE  0EFF               	movlw	255
 39863  0071B0  6EDD               	movwf	postdec2,c
 39864                           
 39865                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 39866  0071B2  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 39867  0071B4  0D0E               	mullw	14
 39868  0071B6  0E05               	movlw	5
 39869  0071B8  26F3               	addwf	prodl,f,c
 39870  0071BA  0E00               	movlw	0
 39871  0071BC  22F4               	addwfc	prodh,f,c
 39872  0071BE  0E00               	movlw	low _Channels
 39873  0071C0  24F3               	addwf	prodl,w,c
 39874  0071C2  6ED9               	movwf	fsr2l,c
 39875  0071C4  0E04               	movlw	high _Channels
 39876  0071C6  20F4               	addwfc	prodh,w,c
 39877  0071C8  6EDA               	movwf	fsr2h,c
 39878  0071CA  0EFF               	movlw	255
 39879  0071CC  6EDF               	movwf	indf2,c
 39880                           
 39881                           ; BSR set to: 0
 39882  0071CE  2B6B               	incf	InitDefault868Channels@i& (0+255),f,b
 39883  0071D0  D7DC               	goto	l16219
 39884  0071D2                     __end_of_InitDefault868Channels:
 39885                           	opt stack 0
 39886                           tosu	equ	0xFFF
 39887                           tosh	equ	0xFFE
 39888                           tosl	equ	0xFFD
 39889                           pclath	equ	0xFFA
 39890                           tblptru	equ	0xFF8
 39891                           tblptrh	equ	0xFF7
 39892                           tblptrl	equ	0xFF6
 39893                           tablat	equ	0xFF5
 39894                           prodh	equ	0xFF4
 39895                           prodl	equ	0xFF3
 39896                           intcon	equ	0xFF2
 39897                           intcon2	equ	0xFF1
 39898                           intcon3	equ	0xFF0
 39899                           indf0	equ	0xFEF
 39900                           postinc0	equ	0xFEE
 39901                           plusw0	equ	0xFEB
 39902                           fsr0h	equ	0xFEA
 39903                           fsr0l	equ	0xFE9
 39904                           wreg	equ	0xFE8
 39905                           postinc1	equ	0xFE6
 39906                           postdec1	equ	0xFE5
 39907                           plusw1	equ	0xFE3
 39908                           fsr1h	equ	0xFE2
 39909                           fsr1l	equ	0xFE1
 39910                           indf2	equ	0xFDF
 39911                           postinc2	equ	0xFDE
 39912                           postdec2	equ	0xFDD
 39913                           plusw2	equ	0xFDB
 39914                           fsr2h	equ	0xFDA
 39915                           fsr2l	equ	0xFD9
 39916                           status	equ	0xFD8
 39917                           
 39918 ;; *************** function _InitDefault433Channels *****************
 39919 ;; Defined at:
 39920 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 39921 ;; Parameters:    Size  Location     Type
 39922 ;;		None
 39923 ;; Auto vars:     Size  Location     Type
 39924 ;;  i               1   11[BANK0 ] unsigned char 
 39925 ;; Return value:  Size  Location     Type
 39926 ;;                  1    wreg      void 
 39927 ;; Registers used:
 39928 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39929 ;; Tracked objects:
 39930 ;;		On entry : 0/0
 39931 ;;		On exit  : 0/0
 39932 ;;		Unchanged: 0/0
 39933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39937 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39938 ;;Total ram usage:        1 bytes
 39939 ;; Hardware stack levels used:    1
 39940 ;; Hardware stack levels required when called:    8
 39941 ;; This function calls:
 39942 ;;		_memcpy
 39943 ;;		_memset
 39944 ;; This function is called by:
 39945 ;;		_LORAWAN_Reset
 39946 ;; This function uses a non-reentrant model
 39947 ;;
 39948                           
 39949                           	psect	text197
 39950  0071D2                     __ptext197:
 39951                           	opt stack 0
 39952  0071D2                     _InitDefault433Channels:
 39953                           	opt stack 20
 39954                           
 39955                           ;lorawan_eu.c: 996: uint8_t i;
 39956                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 39957                           
 39958                           ; BSR set to: 0
 39959                           ;incstack = 0
 39960  0071D2  0E00               	movlw	low _Channels
 39961  0071D4  0100               	movlb	0	; () banked
 39962  0071D6  6F60               	movwf	memset@p1& (0+255),b
 39963  0071D8  0E04               	movlw	high _Channels
 39964  0071DA  6F61               	movwf	(memset@p1+1)& (0+255),b
 39965  0071DC  0E00               	movlw	0
 39966  0071DE  6F63               	movwf	(memset@c+1)& (0+255),b
 39967  0071E0  0E00               	movlw	0
 39968  0071E2  6F62               	movwf	memset@c& (0+255),b
 39969  0071E4  0E00               	movlw	0
 39970  0071E6  6F65               	movwf	(memset@n+1)& (0+255),b
 39971  0071E8  0EE0               	movlw	224
 39972  0071EA  6F64               	movwf	memset@n& (0+255),b
 39973  0071EC  ECCB  F042         	call	_memset	;wreg free
 39974                           
 39975                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 39976  0071F0  0E00               	movlw	low _Channels
 39977  0071F2  0100               	movlb	0	; () banked
 39978  0071F4  6F60               	movwf	memcpy@d1& (0+255),b
 39979  0071F6  0E04               	movlw	high _Channels
 39980  0071F8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 39981  0071FA  0E8A               	movlw	low _DefaultChannels433
 39982  0071FC  6F62               	movwf	memcpy@s1& (0+255),b
 39983  0071FE  0EFF               	movlw	high _DefaultChannels433
 39984  007200  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 39985  007202  0E00               	movlw	0
 39986  007204  6F65               	movwf	(memcpy@n+1)& (0+255),b
 39987  007206  0E2A               	movlw	42
 39988  007208  6F64               	movwf	memcpy@n& (0+255),b
 39989  00720A  EC5C  F03D         	call	_memcpy	;wreg free
 39990                           
 39991                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 39992  00720E  0E03               	movlw	3
 39993  007210  0100               	movlb	0	; () banked
 39994  007212  6F6B               	movwf	InitDefault433Channels@i& (0+255),b
 39995  007214                     l16235:
 39996                           
 39997                           ; BSR set to: 0
 39998  007214  0E0F               	movlw	15
 39999  007216  656B               	cpfsgt	InitDefault433Channels@i& (0+255),b
 40000  007218  D001               	goto	l1206
 40001  00721A  0012               	return	
 40002  00721C                     l1206:
 40003                           
 40004                           ; BSR set to: 0
 40005                           ;lorawan_eu.c: 1001: {
 40006                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 40007                           
 40008                           ; BSR set to: 0
 40009  00721C  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 40010  00721E  0D0E               	mullw	14
 40011  007220  0E06               	movlw	6
 40012  007222  26F3               	addwf	prodl,f,c
 40013  007224  0E00               	movlw	0
 40014  007226  22F4               	addwfc	prodh,f,c
 40015  007228  0E00               	movlw	low _Channels
 40016  00722A  24F3               	addwf	prodl,w,c
 40017  00722C  6ED9               	movwf	fsr2l,c
 40018  00722E  0E04               	movlw	high _Channels
 40019  007230  20F4               	addwfc	prodh,w,c
 40020  007232  6EDA               	movwf	fsr2h,c
 40021  007234  0EFF               	movlw	255
 40022  007236  6EDE               	movwf	postinc2,c
 40023  007238  0EFF               	movlw	255
 40024  00723A  6EDD               	movwf	postdec2,c
 40025                           
 40026                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 40027  00723C  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 40028  00723E  0D0E               	mullw	14
 40029  007240  0E05               	movlw	5
 40030  007242  26F3               	addwf	prodl,f,c
 40031  007244  0E00               	movlw	0
 40032  007246  22F4               	addwfc	prodh,f,c
 40033  007248  0E00               	movlw	low _Channels
 40034  00724A  24F3               	addwf	prodl,w,c
 40035  00724C  6ED9               	movwf	fsr2l,c
 40036  00724E  0E04               	movlw	high _Channels
 40037  007250  20F4               	addwfc	prodh,w,c
 40038  007252  6EDA               	movwf	fsr2h,c
 40039  007254  0EFF               	movlw	255
 40040  007256  6EDF               	movwf	indf2,c
 40041                           
 40042                           ; BSR set to: 0
 40043  007258  2B6B               	incf	InitDefault433Channels@i& (0+255),f,b
 40044  00725A  D7DC               	goto	l16235
 40045  00725C                     __end_of_InitDefault433Channels:
 40046                           	opt stack 0
 40047                           tosu	equ	0xFFF
 40048                           tosh	equ	0xFFE
 40049                           tosl	equ	0xFFD
 40050                           pclath	equ	0xFFA
 40051                           tblptru	equ	0xFF8
 40052                           tblptrh	equ	0xFF7
 40053                           tblptrl	equ	0xFF6
 40054                           tablat	equ	0xFF5
 40055                           prodh	equ	0xFF4
 40056                           prodl	equ	0xFF3
 40057                           intcon	equ	0xFF2
 40058                           intcon2	equ	0xFF1
 40059                           intcon3	equ	0xFF0
 40060                           indf0	equ	0xFEF
 40061                           postinc0	equ	0xFEE
 40062                           plusw0	equ	0xFEB
 40063                           fsr0h	equ	0xFEA
 40064                           fsr0l	equ	0xFE9
 40065                           wreg	equ	0xFE8
 40066                           postinc1	equ	0xFE6
 40067                           postdec1	equ	0xFE5
 40068                           plusw1	equ	0xFE3
 40069                           fsr1h	equ	0xFE2
 40070                           fsr1l	equ	0xFE1
 40071                           indf2	equ	0xFDF
 40072                           postinc2	equ	0xFDE
 40073                           postdec2	equ	0xFDD
 40074                           plusw2	equ	0xFDB
 40075                           fsr2h	equ	0xFDA
 40076                           fsr2l	equ	0xFD9
 40077                           status	equ	0xFD8
 40078                           
 40079 ;; *************** function _memset *****************
 40080 ;; Defined at:
 40081 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 40082 ;; Parameters:    Size  Location     Type
 40083 ;;  p1              2    0[BANK0 ] PTR void 
 40084 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 40085 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 40086 ;;  c               2    2[BANK0 ] int 
 40087 ;;  n               2    4[BANK0 ] unsigned int 
 40088 ;; Auto vars:     Size  Location     Type
 40089 ;;  p               2    6[BANK0 ] PTR unsigned char 
 40090 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 40091 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 40092 ;; Return value:  Size  Location     Type
 40093 ;;                  2    0[BANK0 ] PTR void 
 40094 ;; Registers used:
 40095 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40096 ;; Tracked objects:
 40097 ;;		On entry : 0/0
 40098 ;;		On exit  : 0/0
 40099 ;;		Unchanged: 0/0
 40100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40101 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40102 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40104 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40105 ;;Total ram usage:        8 bytes
 40106 ;; Hardware stack levels used:    1
 40107 ;; Hardware stack levels required when called:    7
 40108 ;; This function calls:
 40109 ;;		Nothing
 40110 ;; This function is called by:
 40111 ;;		_AESCmac
 40112 ;;		_GenerateSubkey
 40113 ;;		_LORAWAN_Reset
 40114 ;;		_InitDefault868Channels
 40115 ;;		_InitDefault433Channels
 40116 ;;		_AssemblePacket
 40117 ;;		_PrepareJoinRequestFrame
 40118 ;;		_PrepareSessionKeys
 40119 ;;		_AssembleEncryptionBlock
 40120 ;; This function uses a non-reentrant model
 40121 ;;
 40122                           
 40123                           	psect	text198
 40124  008596                     __ptext198:
 40125                           	opt stack 0
 40126  008596                     _memset:
 40127                           	opt stack 21
 40128                           
 40129                           ; BSR set to: 0
 40130                           ;incstack = 0
 40131  008596  C060  F066         	movff	memset@p1,memset@p
 40132  00859A  C061  F067         	movff	memset@p1+1,memset@p+1
 40133  00859E  D009               	goto	l3159
 40134  0085A0                     l13281:
 40135  0085A0  C066  FFD9         	movff	memset@p,fsr2l
 40136  0085A4  C067  FFDA         	movff	memset@p+1,fsr2h
 40137  0085A8  C062  FFDF         	movff	memset@c,indf2
 40138  0085AC  0100               	movlb	0	; () banked
 40139  0085AE  4B66               	infsnz	memset@p& (0+255),f,b
 40140  0085B0  2B67               	incf	(memset@p+1)& (0+255),f,b
 40141  0085B2                     l3159:
 40142                           
 40143                           ; BSR set to: 0
 40144  0085B2  0100               	movlb	0	; () banked
 40145  0085B4  0764               	decf	memset@n& (0+255),f,b
 40146  0085B6  A0D8               	btfss	status,0,c
 40147  0085B8  0765               	decf	(memset@n+1)& (0+255),f,b
 40148  0085BA  2964               	incf	memset@n& (0+255),w,b
 40149  0085BC  E1F1               	bnz	l13281
 40150  0085BE  2965               	incf	(memset@n+1)& (0+255),w,b
 40151  0085C0  B4D8               	btfsc	status,2,c
 40152  0085C2  0012               	return	
 40153  0085C4  D7ED               	goto	l3160
 40154  0085C6                     __end_of_memset:
 40155                           	opt stack 0
 40156                           tosu	equ	0xFFF
 40157                           tosh	equ	0xFFE
 40158                           tosl	equ	0xFFD
 40159                           pclath	equ	0xFFA
 40160                           tblptru	equ	0xFF8
 40161                           tblptrh	equ	0xFF7
 40162                           tblptrl	equ	0xFF6
 40163                           tablat	equ	0xFF5
 40164                           prodh	equ	0xFF4
 40165                           prodl	equ	0xFF3
 40166                           intcon	equ	0xFF2
 40167                           intcon2	equ	0xFF1
 40168                           intcon3	equ	0xFF0
 40169                           indf0	equ	0xFEF
 40170                           postinc0	equ	0xFEE
 40171                           plusw0	equ	0xFEB
 40172                           fsr0h	equ	0xFEA
 40173                           fsr0l	equ	0xFE9
 40174                           wreg	equ	0xFE8
 40175                           postinc1	equ	0xFE6
 40176                           postdec1	equ	0xFE5
 40177                           plusw1	equ	0xFE3
 40178                           fsr1h	equ	0xFE2
 40179                           fsr1l	equ	0xFE1
 40180                           indf2	equ	0xFDF
 40181                           postinc2	equ	0xFDE
 40182                           postdec2	equ	0xFDD
 40183                           plusw2	equ	0xFDB
 40184                           fsr2h	equ	0xFDA
 40185                           fsr2l	equ	0xFD9
 40186                           status	equ	0xFD8
 40187                           
 40188 ;; *************** function _memcpy *****************
 40189 ;; Defined at:
 40190 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 40191 ;; Parameters:    Size  Location     Type
 40192 ;;  d1              2    0[BANK0 ] PTR void 
 40193 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 40194 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 40195 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 40196 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 40197 ;;  s1              2    2[BANK0 ] PTR const void 
 40198 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), STR_3(6), appSKey(16), 
 40199 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 40200 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 40201 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 40202 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 40203 ;;		 -> FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), loRa.devNonce(2), 
 40204 ;;		 -> loRa.fCntUp(4), radioBuffer(271), loRa(245), DefaultChannels433(42), 
 40205 ;;		 -> DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), 
 40206 ;;		 -> NULL(0), 
 40207 ;;  n               2    4[BANK0 ] unsigned int 
 40208 ;; Auto vars:     Size  Location     Type
 40209 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 40210 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), STR_3(6), appSKey(16), 
 40211 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 40212 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 40213 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 40214 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 40215 ;;		 -> FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), loRa.devNonce(2), 
 40216 ;;		 -> loRa.fCntUp(4), radioBuffer(271), loRa(245), DefaultChannels433(42), 
 40217 ;;		 -> DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), 
 40218 ;;		 -> NULL(0), 
 40219 ;;  d               2    7[BANK0 ] PTR unsigned char 
 40220 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 40221 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 40222 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 40223 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 40224 ;;  tmp             1    6[BANK0 ] unsigned char 
 40225 ;; Return value:  Size  Location     Type
 40226 ;;                  2    0[BANK0 ] PTR void 
 40227 ;; Registers used:
 40228 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 40229 ;; Tracked objects:
 40230 ;;		On entry : 0/0
 40231 ;;		On exit  : 0/0
 40232 ;;		Unchanged: 0/0
 40233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40234 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40235 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40237 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40238 ;;Total ram usage:       11 bytes
 40239 ;; Hardware stack levels used:    1
 40240 ;; Hardware stack levels required when called:    7
 40241 ;; This function calls:
 40242 ;;		Nothing
 40243 ;; This function is called by:
 40244 ;;		_AESCmac
 40245 ;;		_RADIO_SetFSKSyncWord
 40246 ;;		_UpdateCfList
 40247 ;;		_InitDefault868Channels
 40248 ;;		_InitDefault433Channels
 40249 ;;		_AESEncodeLoRa
 40250 ;;		_LORAWAN_SetNetworkSessionKey
 40251 ;;		_LORAWAN_SetApplicationSessionKey
 40252 ;;		_LORAWAN_RxDone
 40253 ;;		_AssemblePacket
 40254 ;;		_PrepareJoinRequestFrame
 40255 ;;		_PrepareSessionKeys
 40256 ;;		_AssembleEncryptionBlock
 40257 ;;		_ExtractMic
 40258 ;;		_ComputeMic
 40259 ;;		_RADIO_GetData
 40260 ;;		_RADIO_GetFSKSyncWord
 40261 ;;		_LORAWAN_SetMcastNetworkSessionKey
 40262 ;;		_LORAWAN_SetMcastApplicationSessionKey
 40263 ;;		_LORAWAN_GetMcastApplicationSessionKey
 40264 ;;		_LORAWAN_GetMcastNetworkSessionKey
 40265 ;;		_LORAWAN_SetDeviceEui
 40266 ;;		_LORAWAN_GetDeviceEui
 40267 ;;		_LORAWAN_SetApplicationEui
 40268 ;;		_LORAWAN_GetApplicationEui
 40269 ;;		_LORAWAN_GetNetworkSessionKey
 40270 ;;		_LORAWAN_GetApplicationSessionKey
 40271 ;;		_LORAWAN_SetApplicationKey
 40272 ;;		_LORAWAN_GetApplicationKey
 40273 ;; This function uses a non-reentrant model
 40274 ;;
 40275                           
 40276                           	psect	text199
 40277  007AB8                     __ptext199:
 40278                           	opt stack 0
 40279  007AB8                     _memcpy:
 40280                           	opt stack 22
 40281                           
 40282                           ; BSR set to: 0
 40283                           ;incstack = 0
 40284  007AB8  C062  F069         	movff	memcpy@s1,memcpy@s
 40285  007ABC  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 40286  007AC0  C060  F067         	movff	memcpy@d1,memcpy@d
 40287  007AC4  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 40288  007AC8  D01D               	goto	l3153
 40289  007ACA                     l13069:
 40290  007ACA  C069  FFF6         	movff	memcpy@s,tblptrl
 40291  007ACE  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 40292  007AD2  0E00               	movlw	low (__mediumconst shr (0+16))
 40293  007AD4  6EF8               	movwf	tblptru,c
 40294  007AD6  0E0F               	movlw	(high __ramtop+-1)
 40295  007AD8  64F7               	cpfsgt	tblptrh,c
 40296  007ADA  D003               	bra	u14337
 40297  007ADC  0008               	tblrd		*
 40298  007ADE  50F5               	movf	tablat,w,c
 40299  007AE0  D005               	bra	u14330
 40300  007AE2                     u14337:
 40301  007AE2  CFF6 FFE9          	movff	tblptrl,fsr0l
 40302  007AE6  CFF7 FFEA          	movff	tblptrh,fsr0h
 40303  007AEA  50EF               	movf	indf0,w,c
 40304  007AEC                     u14330:
 40305  007AEC  0100               	movlb	0	; () banked
 40306  007AEE  6F66               	movwf	memcpy@tmp& (0+255),b
 40307                           
 40308                           ; BSR set to: 0
 40309  007AF0  4B69               	infsnz	memcpy@s& (0+255),f,b
 40310  007AF2  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 40311                           
 40312                           ; BSR set to: 0
 40313  007AF4  C067  FFD9         	movff	memcpy@d,fsr2l
 40314  007AF8  C068  FFDA         	movff	memcpy@d+1,fsr2h
 40315  007AFC  C066  FFDF         	movff	memcpy@tmp,indf2
 40316                           
 40317                           ; BSR set to: 0
 40318  007B00  4B67               	infsnz	memcpy@d& (0+255),f,b
 40319  007B02  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 40320  007B04                     l3153:
 40321                           
 40322                           ; BSR set to: 0
 40323  007B04  0100               	movlb	0	; () banked
 40324  007B06  0764               	decf	memcpy@n& (0+255),f,b
 40325  007B08  A0D8               	btfss	status,0,c
 40326  007B0A  0765               	decf	(memcpy@n+1)& (0+255),f,b
 40327  007B0C  2964               	incf	memcpy@n& (0+255),w,b
 40328  007B0E  E1DD               	bnz	l13069
 40329  007B10  2965               	incf	(memcpy@n+1)& (0+255),w,b
 40330  007B12  B4D8               	btfsc	status,2,c
 40331  007B14  0012               	return	
 40332  007B16  D7D9               	goto	l3154
 40333  007B18                     __end_of_memcpy:
 40334                           	opt stack 0
 40335                           tosu	equ	0xFFF
 40336                           tosh	equ	0xFFE
 40337                           tosl	equ	0xFFD
 40338                           pclath	equ	0xFFA
 40339                           tblptru	equ	0xFF8
 40340                           tblptrh	equ	0xFF7
 40341                           tblptrl	equ	0xFF6
 40342                           tablat	equ	0xFF5
 40343                           prodh	equ	0xFF4
 40344                           prodl	equ	0xFF3
 40345                           intcon	equ	0xFF2
 40346                           intcon2	equ	0xFF1
 40347                           intcon3	equ	0xFF0
 40348                           indf0	equ	0xFEF
 40349                           postinc0	equ	0xFEE
 40350                           plusw0	equ	0xFEB
 40351                           fsr0h	equ	0xFEA
 40352                           fsr0l	equ	0xFE9
 40353                           wreg	equ	0xFE8
 40354                           postinc1	equ	0xFE6
 40355                           postdec1	equ	0xFE5
 40356                           plusw1	equ	0xFE3
 40357                           fsr1h	equ	0xFE2
 40358                           fsr1l	equ	0xFE1
 40359                           indf2	equ	0xFDF
 40360                           postinc2	equ	0xFDE
 40361                           postdec2	equ	0xFDD
 40362                           plusw2	equ	0xFDB
 40363                           fsr2h	equ	0xFDA
 40364                           fsr2l	equ	0xFD9
 40365                           status	equ	0xFD8
 40366                           
 40367 ;; *************** function _CreateAllSoftwareTimers *****************
 40368 ;; Defined at:
 40369 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 40370 ;; Parameters:    Size  Location     Type
 40371 ;;		None
 40372 ;; Auto vars:     Size  Location     Type
 40373 ;;		None
 40374 ;; Return value:  Size  Location     Type
 40375 ;;                  1    wreg      void 
 40376 ;; Registers used:
 40377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40378 ;; Tracked objects:
 40379 ;;		On entry : 0/0
 40380 ;;		On exit  : 0/0
 40381 ;;		Unchanged: 0/0
 40382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40387 ;;Total ram usage:        0 bytes
 40388 ;; Hardware stack levels used:    1
 40389 ;; Hardware stack levels required when called:    8
 40390 ;; This function calls:
 40391 ;;		_SwTimerCreate
 40392 ;; This function is called by:
 40393 ;;		_LORAWAN_Init
 40394 ;; This function uses a non-reentrant model
 40395 ;;
 40396                           
 40397                           	psect	text200
 40398  007F34                     __ptext200:
 40399                           	opt stack 0
 40400  007F34                     _CreateAllSoftwareTimers:
 40401                           	opt stack 21
 40402                           
 40403                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 40404                           
 40405                           ; BSR set to: 0
 40406                           ;incstack = 0
 40407  007F34  EC19  F038         	call	_SwTimerCreate	;wreg free
 40408  007F38  0102               	movlb	2	; () banked
 40409  007F3A  6FE2               	movwf	(_loRa+226)& (0+255),b
 40410                           
 40411                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 40412  007F3C  EC19  F038         	call	_SwTimerCreate	;wreg free
 40413  007F40  0102               	movlb	2	; () banked
 40414  007F42  6FE3               	movwf	(_loRa+227)& (0+255),b
 40415                           
 40416                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 40417  007F44  EC19  F038         	call	_SwTimerCreate	;wreg free
 40418  007F48  0102               	movlb	2	; () banked
 40419  007F4A  6FE4               	movwf	(_loRa+228)& (0+255),b
 40420                           
 40421                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 40422  007F4C  EC19  F038         	call	_SwTimerCreate	;wreg free
 40423  007F50  0102               	movlb	2	; () banked
 40424  007F52  6FE5               	movwf	(_loRa+229)& (0+255),b
 40425                           
 40426                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 40427  007F54  EC19  F038         	call	_SwTimerCreate	;wreg free
 40428  007F58  0102               	movlb	2	; () banked
 40429  007F5A  6FE7               	movwf	(_loRa+231)& (0+255),b
 40430                           
 40431                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 40432  007F5C  EC19  F038         	call	_SwTimerCreate	;wreg free
 40433  007F60  0102               	movlb	2	; () banked
 40434  007F62  6FE8               	movwf	(_loRa+232)& (0+255),b
 40435                           
 40436                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 40437  007F64  EC19  F038         	call	_SwTimerCreate	;wreg free
 40438  007F68  0102               	movlb	2	; () banked
 40439  007F6A  6FE6               	movwf	(_loRa+230)& (0+255),b
 40440                           
 40441                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 40442  007F6C  EC19  F038         	call	_SwTimerCreate	;wreg free
 40443  007F70  0102               	movlb	2	; () banked
 40444  007F72  6FEA               	movwf	(_loRa+234)& (0+255),b
 40445                           
 40446                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 40447  007F74  EC19  F038         	call	_SwTimerCreate	;wreg free
 40448  007F78  0102               	movlb	2	; () banked
 40449  007F7A  6FF3               	movwf	(_loRa+243)& (0+255),b
 40450                           
 40451                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 40452  007F7C  EC19  F038         	call	_SwTimerCreate	;wreg free
 40453  007F80  0102               	movlb	2	; () banked
 40454  007F82  6FE9               	movwf	(_loRa+233)& (0+255),b
 40455                           
 40456                           ; BSR set to: 2
 40457  007F84  0012               	return		;funcret
 40458  007F86                     __end_of_CreateAllSoftwareTimers:
 40459                           	opt stack 0
 40460                           tosu	equ	0xFFF
 40461                           tosh	equ	0xFFE
 40462                           tosl	equ	0xFFD
 40463                           pclath	equ	0xFFA
 40464                           tblptru	equ	0xFF8
 40465                           tblptrh	equ	0xFF7
 40466                           tblptrl	equ	0xFF6
 40467                           tablat	equ	0xFF5
 40468                           prodh	equ	0xFF4
 40469                           prodl	equ	0xFF3
 40470                           intcon	equ	0xFF2
 40471                           intcon2	equ	0xFF1
 40472                           intcon3	equ	0xFF0
 40473                           indf0	equ	0xFEF
 40474                           postinc0	equ	0xFEE
 40475                           plusw0	equ	0xFEB
 40476                           fsr0h	equ	0xFEA
 40477                           fsr0l	equ	0xFE9
 40478                           wreg	equ	0xFE8
 40479                           postinc1	equ	0xFE6
 40480                           postdec1	equ	0xFE5
 40481                           plusw1	equ	0xFE3
 40482                           fsr1h	equ	0xFE2
 40483                           fsr1l	equ	0xFE1
 40484                           indf2	equ	0xFDF
 40485                           postinc2	equ	0xFDE
 40486                           postdec2	equ	0xFDD
 40487                           plusw2	equ	0xFDB
 40488                           fsr2h	equ	0xFDA
 40489                           fsr2l	equ	0xFD9
 40490                           status	equ	0xFD8
 40491                           
 40492 ;; *************** function _SwTimerCreate *****************
 40493 ;; Defined at:
 40494 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40495 ;; Parameters:    Size  Location     Type
 40496 ;;		None
 40497 ;; Auto vars:     Size  Location     Type
 40498 ;;  retVal          1    0[BANK0 ] unsigned char 
 40499 ;; Return value:  Size  Location     Type
 40500 ;;                  1    wreg      unsigned char 
 40501 ;; Registers used:
 40502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 40503 ;; Tracked objects:
 40504 ;;		On entry : 0/0
 40505 ;;		On exit  : 0/0
 40506 ;;		Unchanged: 0/0
 40507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40509 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40511 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40512 ;;Total ram usage:        1 bytes
 40513 ;; Hardware stack levels used:    1
 40514 ;; Hardware stack levels required when called:    7
 40515 ;; This function calls:
 40516 ;;		Nothing
 40517 ;; This function is called by:
 40518 ;;		_RADIO_Init
 40519 ;;		_CreateAllSoftwareTimers
 40520 ;; This function uses a non-reentrant model
 40521 ;;
 40522                           
 40523                           	psect	text201
 40524  007032                     __ptext201:
 40525                           	opt stack 0
 40526  007032                     _SwTimerCreate:
 40527                           	opt stack 21
 40528                           
 40529                           ;sw_timer.c: 156: uint8_t retVal;
 40530                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 40531                           
 40532                           ; BSR set to: 2
 40533                           ;incstack = 0
 40534  007032  0E14               	movlw	20
 40535  007034  0100               	movlb	0	; () banked
 40536  007036  61FB               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 40537  007038  D03E               	goto	l240
 40538                           
 40539                           ; BSR set to: 0
 40540                           ;sw_timer.c: 158: {
 40541                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 40542  00703A  9EF2               	bcf	intcon,7,c	;volatile
 40543                           
 40544                           ;sw_timer.c: 160: retVal = allocatedTimers;
 40545  00703C  C0FB  F060         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 40546                           
 40547                           ; BSR set to: 0
 40548                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 40549  007040  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 40550  007042  0D08               	mullw	8
 40551  007044  0E04               	movlw	4
 40552  007046  26F3               	addwf	prodl,f,c
 40553  007048  0E00               	movlw	0
 40554  00704A  22F4               	addwfc	prodh,f,c
 40555  00704C  0E00               	movlw	low _swTimers
 40556  00704E  24F3               	addwf	prodl,w,c
 40557  007050  6ED9               	movwf	fsr2l,c
 40558  007052  0E03               	movlw	high _swTimers
 40559  007054  20F4               	addwfc	prodh,w,c
 40560  007056  6EDA               	movwf	fsr2h,c
 40561  007058  0E00               	movlw	0
 40562  00705A  6EDF               	movwf	indf2,c
 40563                           
 40564                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 40565  00705C  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 40566  00705E  0D08               	mullw	8
 40567  007060  0E00               	movlw	low _swTimers
 40568  007062  24F3               	addwf	prodl,w,c
 40569  007064  6ED9               	movwf	fsr2l,c
 40570  007066  0E03               	movlw	high _swTimers
 40571  007068  20F4               	addwfc	prodh,w,c
 40572  00706A  6EDA               	movwf	fsr2h,c
 40573  00706C  6ADE               	clrf	postinc2,c
 40574  00706E  6ADE               	clrf	postinc2,c
 40575  007070  6ADE               	clrf	postinc2,c
 40576  007072  6ADD               	clrf	postdec2,c
 40577                           
 40578                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 40579  007074  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 40580  007076  0D08               	mullw	8
 40581  007078  0E05               	movlw	5
 40582  00707A  26F3               	addwf	prodl,f,c
 40583  00707C  0E00               	movlw	0
 40584  00707E  22F4               	addwfc	prodh,f,c
 40585  007080  0E00               	movlw	low _swTimers
 40586  007082  24F3               	addwf	prodl,w,c
 40587  007084  6ED9               	movwf	fsr2l,c
 40588  007086  0E03               	movlw	high _swTimers
 40589  007088  20F4               	addwfc	prodh,w,c
 40590  00708A  6EDA               	movwf	fsr2h,c
 40591  00708C  0E00               	movlw	0
 40592  00708E  6EDF               	movwf	indf2,c
 40593                           
 40594                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 40595  007090  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 40596  007092  0D08               	mullw	8
 40597  007094  0E06               	movlw	6
 40598  007096  26F3               	addwf	prodl,f,c
 40599  007098  0E00               	movlw	0
 40600  00709A  22F4               	addwfc	prodh,f,c
 40601  00709C  0E00               	movlw	low _swTimers
 40602  00709E  24F3               	addwf	prodl,w,c
 40603  0070A0  6ED9               	movwf	fsr2l,c
 40604  0070A2  0E03               	movlw	high _swTimers
 40605  0070A4  20F4               	addwfc	prodh,w,c
 40606  0070A6  6EDA               	movwf	fsr2h,c
 40607  0070A8  0E00               	movlw	0
 40608  0070AA  6EDE               	movwf	postinc2,c
 40609  0070AC  0E00               	movlw	0
 40610  0070AE  6EDD               	movwf	postdec2,c
 40611                           
 40612                           ; BSR set to: 0
 40613                           ;sw_timer.c: 165: allocatedTimers++;
 40614  0070B0  2BFB               	incf	_allocatedTimers& (0+255),f,b	;volatile
 40615                           
 40616                           ; BSR set to: 0
 40617                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 40618  0070B2  8EF2               	bsf	intcon,7,c	;volatile
 40619                           
 40620                           ;sw_timer.c: 167: }
 40621  0070B4  D001               	goto	l244
 40622  0070B6                     l240:
 40623                           
 40624                           ;sw_timer.c: 171: {
 40625                           
 40626                           ; BSR set to: 0
 40627                           ;sw_timer.c: 168: else
 40628                           ;sw_timer.c: 169: {
 40629                           ;sw_timer.c: 170: while(1)
 40630  0070B6  D7FF               	goto	l240
 40631  0070B8                     l244:
 40632                           
 40633                           ;sw_timer.c: 175: }
 40634                           ;sw_timer.c: 176: }
 40635                           ;sw_timer.c: 177: return retVal;
 40636  0070B8  0100               	movlb	0	; () banked
 40637  0070BA  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 40638  0070BC  0012               	return	
 40639  0070BE                     __end_of_SwTimerCreate:
 40640                           	opt stack 0
 40641                           tosu	equ	0xFFF
 40642                           tosh	equ	0xFFE
 40643                           tosl	equ	0xFFD
 40644                           pclath	equ	0xFFA
 40645                           tblptru	equ	0xFF8
 40646                           tblptrh	equ	0xFF7
 40647                           tblptrl	equ	0xFF6
 40648                           tablat	equ	0xFF5
 40649                           prodh	equ	0xFF4
 40650                           prodl	equ	0xFF3
 40651                           intcon	equ	0xFF2
 40652                           intcon2	equ	0xFF1
 40653                           intcon3	equ	0xFF0
 40654                           indf0	equ	0xFEF
 40655                           postinc0	equ	0xFEE
 40656                           plusw0	equ	0xFEB
 40657                           fsr0h	equ	0xFEA
 40658                           fsr0l	equ	0xFE9
 40659                           wreg	equ	0xFE8
 40660                           postinc1	equ	0xFE6
 40661                           postdec1	equ	0xFE5
 40662                           plusw1	equ	0xFE3
 40663                           fsr1h	equ	0xFE2
 40664                           fsr1l	equ	0xFE1
 40665                           indf2	equ	0xFDF
 40666                           postinc2	equ	0xFDE
 40667                           postdec2	equ	0xFDD
 40668                           plusw2	equ	0xFDB
 40669                           fsr2h	equ	0xFDA
 40670                           fsr2l	equ	0xFD9
 40671                           status	equ	0xFD8
 40672                           
 40673 ;; *************** function _INTERRUPT_InterruptManager *****************
 40674 ;; Defined at:
 40675 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 40676 ;; Parameters:    Size  Location     Type
 40677 ;;		None
 40678 ;; Auto vars:     Size  Location     Type
 40679 ;;		None
 40680 ;; Return value:  Size  Location     Type
 40681 ;;                  1    wreg      void 
 40682 ;; Registers used:
 40683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 40684 ;; Tracked objects:
 40685 ;;		On entry : 0/0
 40686 ;;		On exit  : 0/0
 40687 ;;		Unchanged: 0/0
 40688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40691 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40692 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40693 ;;Total ram usage:        8 bytes
 40694 ;; Hardware stack levels used:    1
 40695 ;; Hardware stack levels required when called:    6
 40696 ;; This function calls:
 40697 ;;		_INT1_ISR
 40698 ;;		_INT2_ISR
 40699 ;;		_PIN_MANAGER_IOC
 40700 ;;		_TMR1_ISR
 40701 ;; This function is called by:
 40702 ;;		Interrupt level 2
 40703 ;; This function uses a non-reentrant model
 40704 ;;
 40705                           
 40706                           	psect	intcode
 40707  000008                     __pintcode:
 40708                           	opt stack 0
 40709  000008                     _INTERRUPT_InterruptManager:
 40710                           	opt stack 12
 40711                           
 40712                           ; BSR set to: 0
 40713                           ;incstack = 0
 40714  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
 40715  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 40716  000010  CFE1 F036          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 40717  000014  CFE2 F037          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 40718  000018  CFD9 F038          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 40719  00001C  CFDA F039          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 40720  000020  CFF3 F03A          	movff	prodl,??_INTERRUPT_InterruptManager+6
 40721  000024  CFF4 F03B          	movff	prodh,??_INTERRUPT_InterruptManager+7
 40722  000028  EE19  F0BC         	lfsr	1,___inthi_sp
 40723                           
 40724                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 40725  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 40726  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 40727  000030  D003               	goto	i2l2285
 40728                           
 40729                           ;interrupt_manager.c: 62: {
 40730                           ;interrupt_manager.c: 63: INT1_ISR();
 40731  000032  ECAE  F046         	call	_INT1_ISR	;wreg free
 40732                           
 40733                           ;interrupt_manager.c: 64: }
 40734  000036  D012               	goto	i2l2292
 40735  000038                     i2l2285:
 40736                           
 40737                           ;interrupt_manager.c: 65: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 40738  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 40739  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 40740  00003C  D003               	goto	i2l2287
 40741                           
 40742                           ;interrupt_manager.c: 66: {
 40743                           ;interrupt_manager.c: 67: INT2_ISR();
 40744  00003E  ECAA  F046         	call	_INT2_ISR	;wreg free
 40745                           
 40746                           ;interrupt_manager.c: 68: }
 40747  000042  D00C               	goto	i2l2292
 40748  000044                     i2l2287:
 40749                           
 40750                           ;interrupt_manager.c: 69: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 40751  000044  B6F2               	btfsc	intcon,3,c	;volatile
 40752  000046  A0F2               	btfss	intcon,0,c	;volatile
 40753  000048  D003               	goto	i2l2289
 40754                           
 40755                           ;interrupt_manager.c: 70: {
 40756                           ;interrupt_manager.c: 71: PIN_MANAGER_IOC();
 40757  00004A  ECA1  F046         	call	_PIN_MANAGER_IOC	;wreg free
 40758                           
 40759                           ;interrupt_manager.c: 72: }
 40760  00004E  D006               	goto	i2l2292
 40761  000050                     i2l2289:
 40762                           
 40763                           ;interrupt_manager.c: 73: else if(INTCONbits.PEIE == 1)
 40764  000050  BCF2               	btfsc	intcon,6,c	;volatile
 40765                           
 40766                           ;interrupt_manager.c: 74: {
 40767                           ;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 40768  000052  A09D               	btfss	3997,0,c	;volatile
 40769  000054  D003               	goto	i2l2292
 40770  000056  B09E               	btfsc	3998,0,c	;volatile
 40771                           
 40772                           ;interrupt_manager.c: 76: {
 40773                           ;interrupt_manager.c: 77: TMR1_ISR();
 40774  000058  ECC3  F045         	call	_TMR1_ISR	;wreg free
 40775  00005C                     i2l2292:
 40776                           
 40777                           ;interrupt_manager.c: 84: else
 40778                           ;interrupt_manager.c: 85: {
 40779                           
 40780                           ;interrupt_manager.c: 82: }
 40781                           ;interrupt_manager.c: 83: }
 40782                           
 40783                           ;interrupt_manager.c: 79: else
 40784                           ;interrupt_manager.c: 80: {
 40785  00005C  C03B  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 40786  000060  C03A  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 40787  000064  C039  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 40788  000068  C038  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 40789  00006C  C037  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 40790  000070  C036  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 40791  000074  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 40792  000078  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 40793  00007C  0011               	retfie		f
 40794  00007E                     __end_of_INTERRUPT_InterruptManager:
 40795                           	opt stack 0
 40796                           tosu	equ	0xFFF
 40797                           tosh	equ	0xFFE
 40798                           tosl	equ	0xFFD
 40799                           pclatu	equ	0xFFB
 40800                           pclath	equ	0xFFA
 40801                           tblptru	equ	0xFF8
 40802                           tblptrh	equ	0xFF7
 40803                           tblptrl	equ	0xFF6
 40804                           tablat	equ	0xFF5
 40805                           prodh	equ	0xFF4
 40806                           prodl	equ	0xFF3
 40807                           intcon	equ	0xFF2
 40808                           intcon2	equ	0xFF1
 40809                           intcon3	equ	0xFF0
 40810                           indf0	equ	0xFEF
 40811                           postinc0	equ	0xFEE
 40812                           plusw0	equ	0xFEB
 40813                           fsr0h	equ	0xFEA
 40814                           fsr0l	equ	0xFE9
 40815                           wreg	equ	0xFE8
 40816                           postinc1	equ	0xFE6
 40817                           postdec1	equ	0xFE5
 40818                           plusw1	equ	0xFE3
 40819                           fsr1h	equ	0xFE2
 40820                           fsr1l	equ	0xFE1
 40821                           indf2	equ	0xFDF
 40822                           postinc2	equ	0xFDE
 40823                           postdec2	equ	0xFDD
 40824                           plusw2	equ	0xFDB
 40825                           fsr2h	equ	0xFDA
 40826                           fsr2l	equ	0xFD9
 40827                           status	equ	0xFD8
 40828                           
 40829 ;; *************** function _TMR1_ISR *****************
 40830 ;; Defined at:
 40831 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 40832 ;; Parameters:    Size  Location     Type
 40833 ;;		None
 40834 ;; Auto vars:     Size  Location     Type
 40835 ;;		None
 40836 ;; Return value:  Size  Location     Type
 40837 ;;                  1    wreg      void 
 40838 ;; Registers used:
 40839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 40840 ;; Tracked objects:
 40841 ;;		On entry : 0/0
 40842 ;;		On exit  : 0/0
 40843 ;;		Unchanged: 0/0
 40844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40849 ;;Total ram usage:        0 bytes
 40850 ;; Hardware stack levels used:    1
 40851 ;; Hardware stack levels required when called:    5
 40852 ;; This function calls:
 40853 ;;		_TMR1_CallBack
 40854 ;;		i2_TMR1_WriteTimer
 40855 ;; This function is called by:
 40856 ;;		_INTERRUPT_InterruptManager
 40857 ;; This function uses a non-reentrant model
 40858 ;;
 40859                           
 40860                           	psect	text203
 40861  008B86                     __ptext203:
 40862                           	opt stack 0
 40863  008B86                     _TMR1_ISR:
 40864                           	opt stack 12
 40865                           
 40866                           ;tmr1.c: 162: PIR1bits.TMR1IF = 0;
 40867                           
 40868                           ;incstack = 0
 40869  008B86  909E               	bcf	3998,0,c	;volatile
 40870                           
 40871                           ;tmr1.c: 163: TMR1_WriteTimer(timer1ReloadVal);
 40872  008B88  C1F3  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 40873  008B8C  C1F4  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 40874  008B90  EC41  F045         	call	i2_TMR1_WriteTimer	;wreg free
 40875                           
 40876                           ;tmr1.c: 167: TMR1_CallBack();
 40877  008B94  ECC6  F044         	call	_TMR1_CallBack	;wreg free
 40878  008B98  0012               	return		;funcret
 40879  008B9A                     __end_of_TMR1_ISR:
 40880                           	opt stack 0
 40881                           tosu	equ	0xFFF
 40882                           tosh	equ	0xFFE
 40883                           tosl	equ	0xFFD
 40884                           pclatu	equ	0xFFB
 40885                           pclath	equ	0xFFA
 40886                           tblptru	equ	0xFF8
 40887                           tblptrh	equ	0xFF7
 40888                           tblptrl	equ	0xFF6
 40889                           tablat	equ	0xFF5
 40890                           prodh	equ	0xFF4
 40891                           prodl	equ	0xFF3
 40892                           intcon	equ	0xFF2
 40893                           intcon2	equ	0xFF1
 40894                           intcon3	equ	0xFF0
 40895                           indf0	equ	0xFEF
 40896                           postinc0	equ	0xFEE
 40897                           plusw0	equ	0xFEB
 40898                           fsr0h	equ	0xFEA
 40899                           fsr0l	equ	0xFE9
 40900                           wreg	equ	0xFE8
 40901                           postinc1	equ	0xFE6
 40902                           postdec1	equ	0xFE5
 40903                           plusw1	equ	0xFE3
 40904                           fsr1h	equ	0xFE2
 40905                           fsr1l	equ	0xFE1
 40906                           indf2	equ	0xFDF
 40907                           postinc2	equ	0xFDE
 40908                           postdec2	equ	0xFDD
 40909                           plusw2	equ	0xFDB
 40910                           fsr2h	equ	0xFDA
 40911                           fsr2l	equ	0xFD9
 40912                           status	equ	0xFD8
 40913                           
 40914 ;; *************** function _TMR1_CallBack *****************
 40915 ;; Defined at:
 40916 ;;		line 170 in file "mcc_generated_files/tmr1.c"
 40917 ;; Parameters:    Size  Location     Type
 40918 ;;		None
 40919 ;; Auto vars:     Size  Location     Type
 40920 ;;		None
 40921 ;; Return value:  Size  Location     Type
 40922 ;;                  1    wreg      void 
 40923 ;; Registers used:
 40924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 40925 ;; Tracked objects:
 40926 ;;		On entry : 0/0
 40927 ;;		On exit  : 0/0
 40928 ;;		Unchanged: 0/0
 40929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40934 ;;Total ram usage:        0 bytes
 40935 ;; Hardware stack levels used:    1
 40936 ;; Hardware stack levels required when called:    4
 40937 ;; This function calls:
 40938 ;;		Absolute function
 40939 ;;		_TMR1_DefaultInterruptHandler
 40940 ;;		_TMR_ISR_lora
 40941 ;; This function is called by:
 40942 ;;		_TMR1_ISR
 40943 ;; This function uses a non-reentrant model
 40944 ;;
 40945                           
 40946                           	psect	text204
 40947  00898C                     __ptext204:
 40948                           	opt stack 0
 40949  00898C                     _TMR1_CallBack:
 40950                           	opt stack 12
 40951                           
 40952                           ;tmr1.c: 173: if(TMR1_InterruptHandler)
 40953                           
 40954                           ;incstack = 0
 40955  00898C  0101               	movlb	1	; () banked
 40956  00898E  51F1               	movf	_TMR1_InterruptHandler& (0+255),w,b
 40957  008990  11F2               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 40958  008992  B4D8               	btfsc	status,2,c
 40959  008994  0012               	return	
 40960                           
 40961                           ; BSR set to: 1
 40962                           ;tmr1.c: 174: {
 40963                           ;tmr1.c: 175: TMR1_InterruptHandler();
 40964  008996  D801               	call	i2u2187_48
 40965  008998  0012               	return	
 40966  00899A                     i2u2187_48:
 40967  00899A  0005               	push	
 40968  00899C  6EFA               	movwf	pclath,c
 40969  00899E  51F1               	movf	_TMR1_InterruptHandler& (0+255),w,b
 40970  0089A0  6EFD               	movwf	tosl,c
 40971  0089A2  51F2               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 40972  0089A4  6EFE               	movwf	tosh,c
 40973  0089A6  6AFF               	clrf	tosu,c
 40974  0089A8  50FA               	movf	pclath,w,c
 40975  0089AA  0012               	return		;indir
 40976  0089AC                     __end_of_TMR1_CallBack:
 40977                           	opt stack 0
 40978                           tosu	equ	0xFFF
 40979                           tosh	equ	0xFFE
 40980                           tosl	equ	0xFFD
 40981                           pclatu	equ	0xFFB
 40982                           pclath	equ	0xFFA
 40983                           tblptru	equ	0xFF8
 40984                           tblptrh	equ	0xFF7
 40985                           tblptrl	equ	0xFF6
 40986                           tablat	equ	0xFF5
 40987                           prodh	equ	0xFF4
 40988                           prodl	equ	0xFF3
 40989                           intcon	equ	0xFF2
 40990                           intcon2	equ	0xFF1
 40991                           intcon3	equ	0xFF0
 40992                           indf0	equ	0xFEF
 40993                           postinc0	equ	0xFEE
 40994                           plusw0	equ	0xFEB
 40995                           fsr0h	equ	0xFEA
 40996                           fsr0l	equ	0xFE9
 40997                           wreg	equ	0xFE8
 40998                           postinc1	equ	0xFE6
 40999                           postdec1	equ	0xFE5
 41000                           plusw1	equ	0xFE3
 41001                           fsr1h	equ	0xFE2
 41002                           fsr1l	equ	0xFE1
 41003                           indf2	equ	0xFDF
 41004                           postinc2	equ	0xFDE
 41005                           postdec2	equ	0xFDD
 41006                           plusw2	equ	0xFDB
 41007                           fsr2h	equ	0xFDA
 41008                           fsr2l	equ	0xFD9
 41009                           status	equ	0xFD8
 41010                           
 41011 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 41012 ;; Defined at:
 41013 ;;		line 183 in file "mcc_generated_files/tmr1.c"
 41014 ;; Parameters:    Size  Location     Type
 41015 ;;		None
 41016 ;; Auto vars:     Size  Location     Type
 41017 ;;		None
 41018 ;; Return value:  Size  Location     Type
 41019 ;;                  1    wreg      void 
 41020 ;; Registers used:
 41021 ;;		None
 41022 ;; Tracked objects:
 41023 ;;		On entry : 0/0
 41024 ;;		On exit  : 0/0
 41025 ;;		Unchanged: 0/0
 41026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41031 ;;Total ram usage:        0 bytes
 41032 ;; Hardware stack levels used:    1
 41033 ;; This function calls:
 41034 ;;		Nothing
 41035 ;; This function is called by:
 41036 ;;		_TMR1_Initialize
 41037 ;;		_TMR1_CallBack
 41038 ;; This function uses a non-reentrant model
 41039 ;;
 41040                           
 41041                           	psect	text205
 41042  008DAA                     __ptext205:
 41043                           	opt stack 0
 41044  008DAA                     _TMR1_DefaultInterruptHandler:
 41045                           	opt stack 15
 41046                           
 41047                           ;incstack = 0
 41048  008DAA  0012               	return		;funcret
 41049  008DAC                     __end_of_TMR1_DefaultInterruptHandler:
 41050                           	opt stack 0
 41051                           tosu	equ	0xFFF
 41052                           tosh	equ	0xFFE
 41053                           tosl	equ	0xFFD
 41054                           pclatu	equ	0xFFB
 41055                           pclath	equ	0xFFA
 41056                           tblptru	equ	0xFF8
 41057                           tblptrh	equ	0xFF7
 41058                           tblptrl	equ	0xFF6
 41059                           tablat	equ	0xFF5
 41060                           prodh	equ	0xFF4
 41061                           prodl	equ	0xFF3
 41062                           intcon	equ	0xFF2
 41063                           intcon2	equ	0xFF1
 41064                           intcon3	equ	0xFF0
 41065                           indf0	equ	0xFEF
 41066                           postinc0	equ	0xFEE
 41067                           plusw0	equ	0xFEB
 41068                           fsr0h	equ	0xFEA
 41069                           fsr0l	equ	0xFE9
 41070                           wreg	equ	0xFE8
 41071                           postinc1	equ	0xFE6
 41072                           postdec1	equ	0xFE5
 41073                           plusw1	equ	0xFE3
 41074                           fsr1h	equ	0xFE2
 41075                           fsr1l	equ	0xFE1
 41076                           indf2	equ	0xFDF
 41077                           postinc2	equ	0xFDE
 41078                           postdec2	equ	0xFDD
 41079                           plusw2	equ	0xFDB
 41080                           fsr2h	equ	0xFDA
 41081                           fsr2l	equ	0xFD9
 41082                           status	equ	0xFD8
 41083                           
 41084 ;; *************** function _TMR_ISR_lora *****************
 41085 ;; Defined at:
 41086 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 41087 ;; Parameters:    Size  Location     Type
 41088 ;;		None
 41089 ;; Auto vars:     Size  Location     Type
 41090 ;;		None
 41091 ;; Return value:  Size  Location     Type
 41092 ;;                  1    wreg      void 
 41093 ;; Registers used:
 41094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41095 ;; Tracked objects:
 41096 ;;		On entry : 0/0
 41097 ;;		On exit  : 0/0
 41098 ;;		Unchanged: 0/0
 41099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41102 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41103 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41104 ;;Total ram usage:        2 bytes
 41105 ;; Hardware stack levels used:    1
 41106 ;; Hardware stack levels required when called:    3
 41107 ;; This function calls:
 41108 ;;		i2_SwTimersInterrupt
 41109 ;;		i2_TMR_SwapTimer
 41110 ;; This function is called by:
 41111 ;;		_TMR_ISR_Lora_Init
 41112 ;;		_TMR1_CallBack
 41113 ;; This function uses a non-reentrant model
 41114 ;;
 41115                           
 41116                           	psect	text206
 41117  007D92                     __ptext206:
 41118                           	opt stack 0
 41119  007D92                     _TMR_ISR_lora:
 41120                           	opt stack 12
 41121                           
 41122                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 41123                           
 41124                           ;incstack = 0
 41125  007D92  0E01               	movlw	1
 41126  007D94  6E47               	movwf	_timerOverflow,c	;volatile
 41127                           
 41128                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 41129  007D96  EC8D  F02E         	call	i2_SwTimersInterrupt	;wreg free
 41130  007D9A  C021  F054         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 41131  007D9E  C022  F055         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 41132  007DA2  C023  F056         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 41133  007DA6  C024  F057         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 41134                           
 41135                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 41136  007DAA  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 41137  007DAC  E11C               	bnz	i2l1334
 41138  007DAE  0456               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 41139  007DB0  B0D8               	btfsc	status,0,c
 41140  007DB2  0012               	return	
 41141                           
 41142                           ;tmr_lora_addons.c: 66: {
 41143                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 41144  007DB4  C054  F032         	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
 41145  007DB8  C055  F033         	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
 41146  007DBC  1E32               	comf	??_TMR_ISR_lora,f,c
 41147  007DBE  1E33               	comf	??_TMR_ISR_lora+1,f,c
 41148  007DC0  4A32               	infsnz	??_TMR_ISR_lora,f,c
 41149  007DC2  2A33               	incf	??_TMR_ISR_lora+1,f,c
 41150  007DC4  C032  F044         	movff	??_TMR_ISR_lora,_reloadVal	;volatile
 41151  007DC8  C033  F045         	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
 41152                           
 41153                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 41154  007DCC  C044  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 41155  007DD0  C045  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 41156  007DD4  EC45  F041         	call	i2_TMR_SwapTimer	;wreg free
 41157  007DD8  C009  F040         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 41158  007DDC  C00A  F041         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 41159  007DE0  6A42               	clrf	_ticksAdded+2,c	;volatile
 41160  007DE2  6A43               	clrf	_ticksAdded+3,c	;volatile
 41161  007DE4  0012               	return	
 41162  007DE6                     i2l1334:
 41163  007DE6  0012               	return		;funcret
 41164  007DE8                     __end_of_TMR_ISR_lora:
 41165                           	opt stack 0
 41166                           tosu	equ	0xFFF
 41167                           tosh	equ	0xFFE
 41168                           tosl	equ	0xFFD
 41169                           pclatu	equ	0xFFB
 41170                           pclath	equ	0xFFA
 41171                           tblptru	equ	0xFF8
 41172                           tblptrh	equ	0xFF7
 41173                           tblptrl	equ	0xFF6
 41174                           tablat	equ	0xFF5
 41175                           prodh	equ	0xFF4
 41176                           prodl	equ	0xFF3
 41177                           intcon	equ	0xFF2
 41178                           intcon2	equ	0xFF1
 41179                           intcon3	equ	0xFF0
 41180                           indf0	equ	0xFEF
 41181                           postinc0	equ	0xFEE
 41182                           plusw0	equ	0xFEB
 41183                           fsr0h	equ	0xFEA
 41184                           fsr0l	equ	0xFE9
 41185                           wreg	equ	0xFE8
 41186                           postinc1	equ	0xFE6
 41187                           postdec1	equ	0xFE5
 41188                           plusw1	equ	0xFE3
 41189                           fsr1h	equ	0xFE2
 41190                           fsr1l	equ	0xFE1
 41191                           indf2	equ	0xFDF
 41192                           postinc2	equ	0xFDE
 41193                           postdec2	equ	0xFDD
 41194                           plusw2	equ	0xFDB
 41195                           fsr2h	equ	0xFDA
 41196                           fsr2l	equ	0xFD9
 41197                           status	equ	0xFD8
 41198                           
 41199 ;; *************** function i2_TMR_SwapTimer *****************
 41200 ;; Defined at:
 41201 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41202 ;; Parameters:    Size  Location     Type
 41203 ;;  timerVal        2    8[COMRAM] unsigned int 
 41204 ;; Auto vars:     Size  Location     Type
 41205 ;;		None
 41206 ;; Return value:  Size  Location     Type
 41207 ;;                  2    8[COMRAM] unsigned int 
 41208 ;; Registers used:
 41209 ;;		wreg, status,2, status,0, cstack
 41210 ;; Tracked objects:
 41211 ;;		On entry : 0/0
 41212 ;;		On exit  : 0/0
 41213 ;;		Unchanged: 0/0
 41214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41219 ;;Total ram usage:        2 bytes
 41220 ;; Hardware stack levels used:    1
 41221 ;; Hardware stack levels required when called:    1
 41222 ;; This function calls:
 41223 ;;		i2_TMR1_ReadTimer
 41224 ;;		i2_TMR1_WriteTimer
 41225 ;; This function is called by:
 41226 ;;		_TMR_ISR_lora
 41227 ;; This function uses a non-reentrant model
 41228 ;;
 41229                           
 41230                           	psect	text207
 41231  00828A                     __ptext207:
 41232                           	opt stack 0
 41233  00828A                     i2_TMR_SwapTimer:
 41234                           	opt stack 13
 41235                           
 41236                           ;sw_timer.c: 114: static uint16_t oldVal;
 41237                           ;sw_timer.c: 115: static uint16_t retVal;
 41238                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 41239                           
 41240                           ;incstack = 0
 41241  00828A  ECD6  F044         	call	i2_TMR1_ReadTimer	;wreg free
 41242  00828E  C001  F11A         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 41243  008292  C002  F11B         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 41244  008296                     
 41245                           ;sw_timer.c: 123: ;
 41246  008296  ECD6  F044         	call	i2_TMR1_ReadTimer	;wreg free
 41247  00829A  0101               	movlb	1	; () banked
 41248  00829C  511A               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 41249  00829E  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 41250  0082A0  E104               	bnz	i2l11403
 41251  0082A2  511B               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 41252  0082A4  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 41253  0082A6  B4D8               	btfsc	status,2,c
 41254  0082A8  D7F6               	goto	i2l226
 41255  0082AA                     i2l11403:
 41256                           
 41257                           ; BSR set to: 1
 41258                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 41259  0082AA  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 41260  0082AE  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 41261  0082B2  EC41  F045         	call	i2_TMR1_WriteTimer	;wreg free
 41262                           
 41263                           ;sw_timer.c: 128: oldVal++;
 41264  0082B6  0101               	movlb	1	; () banked
 41265  0082B8  4B1A               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 41266  0082BA  2B1B               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 41267                           
 41268                           ; BSR set to: 1
 41269                           ;sw_timer.c: 130: retVal = oldVal;
 41270  0082BC  C11A  F118         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 41271  0082C0  C11B  F119         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 41272                           
 41273                           ; BSR set to: 1
 41274                           ;sw_timer.c: 132: return retVal;
 41275  0082C4  C118  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 41276  0082C8  C119  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 41277  0082CC  0012               	return	
 41278  0082CE                     __end_ofi2_TMR_SwapTimer:
 41279                           	opt stack 0
 41280                           tosu	equ	0xFFF
 41281                           tosh	equ	0xFFE
 41282                           tosl	equ	0xFFD
 41283                           pclatu	equ	0xFFB
 41284                           pclath	equ	0xFFA
 41285                           tblptru	equ	0xFF8
 41286                           tblptrh	equ	0xFF7
 41287                           tblptrl	equ	0xFF6
 41288                           tablat	equ	0xFF5
 41289                           prodh	equ	0xFF4
 41290                           prodl	equ	0xFF3
 41291                           intcon	equ	0xFF2
 41292                           intcon2	equ	0xFF1
 41293                           intcon3	equ	0xFF0
 41294                           indf0	equ	0xFEF
 41295                           postinc0	equ	0xFEE
 41296                           plusw0	equ	0xFEB
 41297                           fsr0h	equ	0xFEA
 41298                           fsr0l	equ	0xFE9
 41299                           wreg	equ	0xFE8
 41300                           postinc1	equ	0xFE6
 41301                           postdec1	equ	0xFE5
 41302                           plusw1	equ	0xFE3
 41303                           fsr1h	equ	0xFE2
 41304                           fsr1l	equ	0xFE1
 41305                           indf2	equ	0xFDF
 41306                           postinc2	equ	0xFDE
 41307                           postdec2	equ	0xFDD
 41308                           plusw2	equ	0xFDB
 41309                           fsr2h	equ	0xFDA
 41310                           fsr2l	equ	0xFD9
 41311                           status	equ	0xFD8
 41312                           
 41313 ;; *************** function i2_TMR1_WriteTimer *****************
 41314 ;; Defined at:
 41315 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 41316 ;; Parameters:    Size  Location     Type
 41317 ;;  timerVal        2    0[COMRAM] unsigned int 
 41318 ;; Auto vars:     Size  Location     Type
 41319 ;;		None
 41320 ;; Return value:  Size  Location     Type
 41321 ;;                  1    wreg      void 
 41322 ;; Registers used:
 41323 ;;		wreg, status,2
 41324 ;; Tracked objects:
 41325 ;;		On entry : 0/0
 41326 ;;		On exit  : 0/0
 41327 ;;		Unchanged: 0/0
 41328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41332 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41333 ;;Total ram usage:        2 bytes
 41334 ;; Hardware stack levels used:    1
 41335 ;; This function calls:
 41336 ;;		Nothing
 41337 ;; This function is called by:
 41338 ;;		_TMR1_ISR
 41339 ;;		i2_TMR_SwapTimer
 41340 ;; This function uses a non-reentrant model
 41341 ;;
 41342                           
 41343                           	psect	text208
 41344  008A82                     __ptext208:
 41345                           	opt stack 0
 41346  008A82                     i2_TMR1_WriteTimer:
 41347                           	opt stack 16
 41348                           
 41349                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 41350                           
 41351                           ; BSR set to: 1
 41352                           ;incstack = 0
 41353  008A82  A4CD               	btfss	4045,2,c	;volatile
 41354  008A84  D007               	goto	i2l2437
 41355                           
 41356                           ;tmr1.c: 124: {
 41357                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 41358  008A86  90CD               	bcf	4045,0,c	;volatile
 41359                           
 41360                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 41361  008A88  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 41362  008A8A  6ECF               	movwf	4047,c	;volatile
 41363                           
 41364                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 41365  008A8C  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 41366                           
 41367                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 41368  008A90  80CD               	bsf	4045,0,c	;volatile
 41369                           
 41370                           ;tmr1.c: 134: }
 41371  008A92  0012               	return	
 41372  008A94                     i2l2437:
 41373                           
 41374                           ;tmr1.c: 135: else
 41375                           ;tmr1.c: 136: {
 41376                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 41377  008A94  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 41378  008A96  6ECF               	movwf	4047,c	;volatile
 41379                           
 41380                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 41381  008A98  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 41382  008A9C  0012               	return	
 41383  008A9E                     __end_ofi2_TMR1_WriteTimer:
 41384                           	opt stack 0
 41385                           tosu	equ	0xFFF
 41386                           tosh	equ	0xFFE
 41387                           tosl	equ	0xFFD
 41388                           pclatu	equ	0xFFB
 41389                           pclath	equ	0xFFA
 41390                           tblptru	equ	0xFF8
 41391                           tblptrh	equ	0xFF7
 41392                           tblptrl	equ	0xFF6
 41393                           tablat	equ	0xFF5
 41394                           prodh	equ	0xFF4
 41395                           prodl	equ	0xFF3
 41396                           intcon	equ	0xFF2
 41397                           intcon2	equ	0xFF1
 41398                           intcon3	equ	0xFF0
 41399                           indf0	equ	0xFEF
 41400                           postinc0	equ	0xFEE
 41401                           plusw0	equ	0xFEB
 41402                           fsr0h	equ	0xFEA
 41403                           fsr0l	equ	0xFE9
 41404                           wreg	equ	0xFE8
 41405                           postinc1	equ	0xFE6
 41406                           postdec1	equ	0xFE5
 41407                           plusw1	equ	0xFE3
 41408                           fsr1h	equ	0xFE2
 41409                           fsr1l	equ	0xFE1
 41410                           indf2	equ	0xFDF
 41411                           postinc2	equ	0xFDE
 41412                           postdec2	equ	0xFDD
 41413                           plusw2	equ	0xFDB
 41414                           fsr2h	equ	0xFDA
 41415                           fsr2l	equ	0xFD9
 41416                           status	equ	0xFD8
 41417                           
 41418 ;; *************** function i2_SwTimersInterrupt *****************
 41419 ;; Defined at:
 41420 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41421 ;; Parameters:    Size  Location     Type
 41422 ;;		None
 41423 ;; Auto vars:     Size  Location     Type
 41424 ;;  SwTimersInte    4   44[COMRAM] unsigned long 
 41425 ;;  SwTimersInte    4   40[COMRAM] unsigned long 
 41426 ;;  SwTimersInte    1   48[COMRAM] unsigned char 
 41427 ;; Return value:  Size  Location     Type
 41428 ;;                  4   32[COMRAM] unsigned long 
 41429 ;; Registers used:
 41430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41431 ;; Tracked objects:
 41432 ;;		On entry : 0/0
 41433 ;;		On exit  : 0/0
 41434 ;;		Unchanged: 0/0
 41435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41436 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41437 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41438 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41439 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41440 ;;Total ram usage:       17 bytes
 41441 ;; Hardware stack levels used:    1
 41442 ;; Hardware stack levels required when called:    2
 41443 ;; This function calls:
 41444 ;;		i2_TMR_GetDeltaTime
 41445 ;; This function is called by:
 41446 ;;		_TMR_ISR_lora
 41447 ;; This function uses a non-reentrant model
 41448 ;;
 41449                           
 41450                           	psect	text209
 41451  005D1A                     __ptext209:
 41452                           	opt stack 0
 41453  005D1A                     i2_SwTimersInterrupt:
 41454                           	opt stack 12
 41455                           
 41456                           ;sw_timer.c: 289: uint8_t i;
 41457                           ;sw_timer.c: 290: uint32_t timeElapsed;
 41458                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 41459                           
 41460                           ;incstack = 0
 41461  005D1A  682D               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 41462  005D1C  682E               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 41463  005D1E  682F               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 41464  005D20  6830               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 41465                           
 41466                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 41467  005D22  EC08  F027         	call	i2_TMR_GetDeltaTime	;wreg free
 41468  005D26  C009  F029         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 41469  005D2A  C00A  F02A         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 41470  005D2E  C00B  F02B         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 41471  005D32  C00C  F02C         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 41472                           
 41473                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 41474  005D36  0E00               	movlw	0
 41475  005D38  6E31               	movwf	i2SwTimersInterrupt@i,c
 41476  005D3A  D061               	goto	i2l283
 41477  005D3C                     
 41478                           ;sw_timer.c: 298: {
 41479                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 41480  005D3C  5031               	movf	i2SwTimersInterrupt@i,w,c
 41481  005D3E  0D08               	mullw	8
 41482  005D40  0E04               	movlw	4
 41483  005D42  26F3               	addwf	prodl,f,c
 41484  005D44  0E00               	movlw	0
 41485  005D46  22F4               	addwfc	prodh,f,c
 41486  005D48  0E00               	movlw	low _swTimers
 41487  005D4A  24F3               	addwf	prodl,w,c
 41488  005D4C  6ED9               	movwf	fsr2l,c
 41489  005D4E  0E03               	movlw	high _swTimers
 41490  005D50  20F4               	addwfc	prodh,w,c
 41491  005D52  6EDA               	movwf	fsr2h,c
 41492  005D54  04DE               	decf	postinc2,w,c
 41493  005D56  A4D8               	btfss	status,2,c
 41494  005D58  D051               	goto	i2l288
 41495                           
 41496                           ;sw_timer.c: 302: {
 41497                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 41498  005D5A  5031               	movf	i2SwTimersInterrupt@i,w,c
 41499  005D5C  0D08               	mullw	8
 41500  005D5E  0E00               	movlw	low _swTimers
 41501  005D60  24F3               	addwf	prodl,w,c
 41502  005D62  6ED9               	movwf	fsr2l,c
 41503  005D64  0E03               	movlw	high _swTimers
 41504  005D66  20F4               	addwfc	prodh,w,c
 41505  005D68  6EDA               	movwf	fsr2h,c
 41506  005D6A  50DE               	movf	postinc2,w,c
 41507  005D6C  5C29               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 41508  005D6E  50DE               	movf	postinc2,w,c
 41509  005D70  582A               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 41510  005D72  50DE               	movf	postinc2,w,c
 41511  005D74  582B               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 41512  005D76  50DE               	movf	postinc2,w,c
 41513  005D78  582C               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 41514  005D7A  A0D8               	btfss	status,0,c
 41515  005D7C  D00D               	goto	i2l286
 41516                           
 41517                           ;sw_timer.c: 304: {
 41518                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 41519  005D7E  5031               	movf	i2SwTimersInterrupt@i,w,c
 41520  005D80  0D08               	mullw	8
 41521  005D82  0E00               	movlw	low _swTimers
 41522  005D84  24F3               	addwf	prodl,w,c
 41523  005D86  6ED9               	movwf	fsr2l,c
 41524  005D88  0E03               	movlw	high _swTimers
 41525  005D8A  20F4               	addwfc	prodh,w,c
 41526  005D8C  6EDA               	movwf	fsr2h,c
 41527  005D8E  6ADE               	clrf	postinc2,c
 41528  005D90  6ADE               	clrf	postinc2,c
 41529  005D92  6ADE               	clrf	postinc2,c
 41530  005D94  6ADD               	clrf	postdec2,c
 41531                           
 41532                           ;sw_timer.c: 306: }
 41533  005D96  D032               	goto	i2l288
 41534  005D98                     i2l286:
 41535                           
 41536                           ;sw_timer.c: 307: else
 41537                           ;sw_timer.c: 308: {
 41538                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 41539  005D98  5031               	movf	i2SwTimersInterrupt@i,w,c
 41540  005D9A  0D08               	mullw	8
 41541  005D9C  0E00               	movlw	low _swTimers
 41542  005D9E  24F3               	addwf	prodl,w,c
 41543  005DA0  6ED9               	movwf	fsr2l,c
 41544  005DA2  0E03               	movlw	high _swTimers
 41545  005DA4  20F4               	addwfc	prodh,w,c
 41546  005DA6  6EDA               	movwf	fsr2h,c
 41547  005DA8  5029               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 41548  005DAA  5EDE               	subwf	postinc2,f,c
 41549  005DAC  502A               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 41550  005DAE  5ADE               	subwfb	postinc2,f,c
 41551  005DB0  502B               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 41552  005DB2  5ADE               	subwfb	postinc2,f,c
 41553  005DB4  502C               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 41554  005DB6  5ADE               	subwfb	postinc2,f,c
 41555                           
 41556                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 41557  005DB8  5031               	movf	i2SwTimersInterrupt@i,w,c
 41558  005DBA  0D08               	mullw	8
 41559  005DBC  0E00               	movlw	low _swTimers
 41560  005DBE  24F3               	addwf	prodl,w,c
 41561  005DC0  6ED9               	movwf	fsr2l,c
 41562  005DC2  0E03               	movlw	high _swTimers
 41563  005DC4  20F4               	addwfc	prodh,w,c
 41564  005DC6  6EDA               	movwf	fsr2h,c
 41565  005DC8  502D               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 41566  005DCA  5CDE               	subwf	postinc2,w,c
 41567  005DCC  502E               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 41568  005DCE  58DE               	subwfb	postinc2,w,c
 41569  005DD0  502F               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 41570  005DD2  58DE               	subwfb	postinc2,w,c
 41571  005DD4  5030               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 41572  005DD6  58DE               	subwfb	postinc2,w,c
 41573  005DD8  B0D8               	btfsc	status,0,c
 41574  005DDA  D010               	goto	i2l288
 41575                           
 41576                           ;sw_timer.c: 313: {
 41577                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 41578  005DDC  5031               	movf	i2SwTimersInterrupt@i,w,c
 41579  005DDE  0D08               	mullw	8
 41580  005DE0  0E00               	movlw	low _swTimers
 41581  005DE2  24F3               	addwf	prodl,w,c
 41582  005DE4  6ED9               	movwf	fsr2l,c
 41583  005DE6  0E03               	movlw	high _swTimers
 41584  005DE8  20F4               	addwfc	prodh,w,c
 41585  005DEA  6EDA               	movwf	fsr2h,c
 41586  005DEC  CFDE F02D          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 41587  005DF0  CFDE F02E          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 41588  005DF4  CFDE F02F          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 41589  005DF8  CFDE F030          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 41590  005DFC                     i2l288:
 41591  005DFC  2A31               	incf	i2SwTimersInterrupt@i,f,c
 41592  005DFE                     i2l283:
 41593  005DFE  0100               	movlb	0	; () banked
 41594  005E00  51FB               	movf	_allocatedTimers& (0+255),w,b	;volatile
 41595  005E02  5C31               	subwf	i2SwTimersInterrupt@i,w,c
 41596  005E04  A0D8               	btfss	status,0,c
 41597  005E06  D79A               	goto	i2l284
 41598                           
 41599                           ; BSR set to: 0
 41600                           ;sw_timer.c: 315: }
 41601                           ;sw_timer.c: 316: }
 41602                           ;sw_timer.c: 317: }
 41603                           ;sw_timer.c: 318: }
 41604                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 41605  005E08  C02D  F021         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 41606  005E0C  C02E  F022         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 41607  005E10  C02F  F023         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 41608  005E14  C030  F024         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 41609                           
 41610                           ; BSR set to: 0
 41611  005E18  0012               	return		;funcret
 41612  005E1A                     __end_ofi2_SwTimersInterrupt:
 41613                           	opt stack 0
 41614                           tosu	equ	0xFFF
 41615                           tosh	equ	0xFFE
 41616                           tosl	equ	0xFFD
 41617                           pclatu	equ	0xFFB
 41618                           pclath	equ	0xFFA
 41619                           tblptru	equ	0xFF8
 41620                           tblptrh	equ	0xFF7
 41621                           tblptrl	equ	0xFF6
 41622                           tablat	equ	0xFF5
 41623                           prodh	equ	0xFF4
 41624                           prodl	equ	0xFF3
 41625                           intcon	equ	0xFF2
 41626                           intcon2	equ	0xFF1
 41627                           intcon3	equ	0xFF0
 41628                           indf0	equ	0xFEF
 41629                           postinc0	equ	0xFEE
 41630                           plusw0	equ	0xFEB
 41631                           fsr0h	equ	0xFEA
 41632                           fsr0l	equ	0xFE9
 41633                           wreg	equ	0xFE8
 41634                           postinc1	equ	0xFE6
 41635                           postdec1	equ	0xFE5
 41636                           plusw1	equ	0xFE3
 41637                           fsr1h	equ	0xFE2
 41638                           fsr1l	equ	0xFE1
 41639                           indf2	equ	0xFDF
 41640                           postinc2	equ	0xFDE
 41641                           postdec2	equ	0xFDD
 41642                           plusw2	equ	0xFDB
 41643                           fsr2h	equ	0xFDA
 41644                           fsr2l	equ	0xFD9
 41645                           status	equ	0xFD8
 41646                           
 41647 ;; *************** function i2_TMR_GetDeltaTime *****************
 41648 ;; Defined at:
 41649 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41650 ;; Parameters:    Size  Location     Type
 41651 ;;		None
 41652 ;; Auto vars:     Size  Location     Type
 41653 ;;		None
 41654 ;; Return value:  Size  Location     Type
 41655 ;;                  4    8[COMRAM] unsigned long 
 41656 ;; Registers used:
 41657 ;;		wreg, status,2, status,0, cstack
 41658 ;; Tracked objects:
 41659 ;;		On entry : 0/0
 41660 ;;		On exit  : 0/0
 41661 ;;		Unchanged: 0/0
 41662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41665 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41666 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41667 ;;Total ram usage:       24 bytes
 41668 ;; Hardware stack levels used:    1
 41669 ;; Hardware stack levels required when called:    1
 41670 ;; This function calls:
 41671 ;;		i2_TMR1_ReadTimer
 41672 ;; This function is called by:
 41673 ;;		i2_SwTimersInterrupt
 41674 ;; This function uses a non-reentrant model
 41675 ;;
 41676                           
 41677                           	psect	text210
 41678  004E10                     __ptext210:
 41679                           	opt stack 0
 41680  004E10                     i2_TMR_GetDeltaTime:
 41681                           	opt stack 12
 41682                           
 41683                           ;sw_timer.c: 90: static uint32_t retVal;
 41684                           ;sw_timer.c: 91: static uint16_t tmrVal;
 41685                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 41686                           
 41687                           ; BSR set to: 0
 41688                           ;incstack = 0
 41689  004E10  ECD6  F044         	call	i2_TMR1_ReadTimer	;wreg free
 41690  004E14  C001  F11C         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 41691  004E18  C002  F11D         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 41692                           
 41693                           ;sw_timer.c: 95: if (timerOverflow == 1)
 41694  004E1C  0447               	decf	_timerOverflow,w,c	;volatile
 41695  004E1E  A4D8               	btfss	status,2,c
 41696  004E20  D066               	goto	i2l216
 41697                           
 41698                           ;sw_timer.c: 96: {
 41699                           ;sw_timer.c: 97: timerOverflow = 0;
 41700  004E22  0E00               	movlw	0
 41701  004E24  6E47               	movwf	_timerOverflow,c	;volatile
 41702                           
 41703                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 41704  004E26  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 41705  004E2A  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 41706  004E2E  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 41707  004E32  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 41708  004E36  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 41709  004E38  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 41710  004E3A  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 41711  004E3C  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 41712  004E3E  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 41713  004E40  0E00               	movlw	0
 41714  004E42  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 41715  004E44  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 41716  004E46  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 41717  004E48  5044               	movf	_reloadVal,w,c	;volatile
 41718  004E4A  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 41719  004E4C  5045               	movf	_reloadVal+1,w,c	;volatile
 41720  004E4E  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 41721  004E50  6A13               	clrf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 41722  004E52  6A14               	clrf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 41723  004E54  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 41724  004E56  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 41725  004E58  1E13               	comf	??i2_TMR_GetDeltaTime+6,f,c
 41726  004E5A  1E14               	comf	??i2_TMR_GetDeltaTime+7,f,c
 41727  004E5C  2A11               	incf	??i2_TMR_GetDeltaTime+4,f,c
 41728  004E5E  0E00               	movlw	0
 41729  004E60  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 41730  004E62  2213               	addwfc	??i2_TMR_GetDeltaTime+6,f,c
 41731  004E64  2214               	addwfc	??i2_TMR_GetDeltaTime+7,f,c
 41732  004E66  0101               	movlb	1	; () banked
 41733  004E68  511C               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 41734  004E6A  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 41735  004E6C  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 41736  004E6E  511D               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 41737  004E70  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 41738  004E72  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 41739  004E74  0E00               	movlw	0
 41740  004E76  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 41741  004E78  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 41742  004E7A  0E00               	movlw	0
 41743  004E7C  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 41744  004E7E  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 41745  004E80  500D               	movf	??i2_TMR_GetDeltaTime,w,c
 41746  004E82  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 41747  004E84  6E19               	movwf	(??i2_TMR_GetDeltaTime+12)& (0+255),c
 41748  004E86  500E               	movf	??i2_TMR_GetDeltaTime+1,w,c
 41749  004E88  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 41750  004E8A  6E1A               	movwf	(??i2_TMR_GetDeltaTime+13)& (0+255),c
 41751  004E8C  500F               	movf	??i2_TMR_GetDeltaTime+2,w,c
 41752  004E8E  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 41753  004E90  6E1B               	movwf	(??i2_TMR_GetDeltaTime+14)& (0+255),c
 41754  004E92  5010               	movf	??i2_TMR_GetDeltaTime+3,w,c
 41755  004E94  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 41756  004E96  6E1C               	movwf	(??i2_TMR_GetDeltaTime+15)& (0+255),c
 41757  004E98  5040               	movf	_ticksAdded,w,c	;volatile
 41758  004E9A  2419               	addwf	??i2_TMR_GetDeltaTime+12,w,c
 41759  004E9C  6E1D               	movwf	(??i2_TMR_GetDeltaTime+16)& (0+255),c
 41760  004E9E  5041               	movf	_ticksAdded+1,w,c	;volatile
 41761  004EA0  201A               	addwfc	??i2_TMR_GetDeltaTime+13,w,c
 41762  004EA2  6E1E               	movwf	(??i2_TMR_GetDeltaTime+17)& (0+255),c
 41763  004EA4  5042               	movf	_ticksAdded+2,w,c	;volatile
 41764  004EA6  201B               	addwfc	??i2_TMR_GetDeltaTime+14,w,c
 41765  004EA8  6E1F               	movwf	(??i2_TMR_GetDeltaTime+18)& (0+255),c
 41766  004EAA  5043               	movf	_ticksAdded+3,w,c	;volatile
 41767  004EAC  201C               	addwfc	??i2_TMR_GetDeltaTime+15,w,c
 41768  004EAE  6E20               	movwf	(??i2_TMR_GetDeltaTime+19)& (0+255),c
 41769  004EB0  0E00               	movlw	0
 41770  004EB2  241D               	addwf	??i2_TMR_GetDeltaTime+16,w,c
 41771  004EB4  6F14               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 41772  004EB6  0E00               	movlw	0
 41773  004EB8  201E               	addwfc	??i2_TMR_GetDeltaTime+17,w,c
 41774  004EBA  6F15               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 41775  004EBC  0E01               	movlw	1
 41776  004EBE  201F               	addwfc	??i2_TMR_GetDeltaTime+18,w,c
 41777  004EC0  6F16               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 41778  004EC2  0E00               	movlw	0
 41779  004EC4  2020               	addwfc	??i2_TMR_GetDeltaTime+19,w,c
 41780  004EC6  6F17               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 41781                           
 41782                           ; BSR set to: 1
 41783                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 41784  004EC8  C11C  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 41785  004ECC  C11D  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 41786  004ED0  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 41787  004ED2  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 41788                           
 41789                           ; BSR set to: 1
 41790                           ;sw_timer.c: 100: ticksAdded = 0;
 41791  004ED4  0E00               	movlw	0
 41792  004ED6  6E40               	movwf	_ticksAdded,c	;volatile
 41793  004ED8  0E00               	movlw	0
 41794  004EDA  6E41               	movwf	_ticksAdded+1,c	;volatile
 41795  004EDC  0E00               	movlw	0
 41796  004EDE  6E42               	movwf	_ticksAdded+2,c	;volatile
 41797  004EE0  0E00               	movlw	0
 41798  004EE2  6E43               	movwf	_ticksAdded+3,c	;volatile
 41799                           
 41800                           ; BSR set to: 1
 41801                           ;sw_timer.c: 101: reloadVal = 0;
 41802  004EE4  0E00               	movlw	0
 41803  004EE6  6E45               	movwf	_reloadVal+1,c	;volatile
 41804  004EE8  0E00               	movlw	0
 41805  004EEA  6E44               	movwf	_reloadVal,c	;volatile
 41806                           
 41807                           ;sw_timer.c: 102: }
 41808  004EEC  D03E               	goto	i2l217
 41809  004EEE                     i2l216:
 41810                           
 41811                           ;sw_timer.c: 103: else
 41812                           ;sw_timer.c: 104: {
 41813                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 41814                           
 41815                           ; BSR set to: 1
 41816  004EEE  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 41817  004EF2  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 41818  004EF6  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 41819  004EFA  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 41820  004EFE  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 41821  004F00  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 41822  004F02  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 41823  004F04  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 41824  004F06  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 41825  004F08  0E00               	movlw	0
 41826  004F0A  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 41827  004F0C  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 41828  004F0E  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 41829  004F10  C044  F011         	movff	_reloadVal,??i2_TMR_GetDeltaTime+4	;volatile
 41830  004F14  C045  F012         	movff	_reloadVal+1,??i2_TMR_GetDeltaTime+5	;volatile
 41831  004F18  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 41832  004F1A  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 41833  004F1C  4A11               	infsnz	??i2_TMR_GetDeltaTime+4,f,c
 41834  004F1E  2A12               	incf	??i2_TMR_GetDeltaTime+5,f,c
 41835  004F20  0101               	movlb	1	; () banked
 41836  004F22  511C               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 41837  004F24  2611               	addwf	??i2_TMR_GetDeltaTime+4,f,c
 41838  004F26  511D               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 41839  004F28  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 41840  004F2A  5011               	movf	??i2_TMR_GetDeltaTime+4,w,c
 41841  004F2C  240D               	addwf	??i2_TMR_GetDeltaTime,w,c
 41842  004F2E  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 41843  004F30  5012               	movf	??i2_TMR_GetDeltaTime+5,w,c
 41844  004F32  200E               	addwfc	??i2_TMR_GetDeltaTime+1,w,c
 41845  004F34  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 41846  004F36  0E00               	movlw	0
 41847  004F38  200F               	addwfc	??i2_TMR_GetDeltaTime+2,w,c
 41848  004F3A  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 41849  004F3C  0E00               	movlw	0
 41850  004F3E  2010               	addwfc	??i2_TMR_GetDeltaTime+3,w,c
 41851  004F40  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 41852  004F42  5040               	movf	_ticksAdded,w,c	;volatile
 41853  004F44  2413               	addwf	??i2_TMR_GetDeltaTime+6,w,c
 41854  004F46  6F14               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 41855  004F48  5041               	movf	_ticksAdded+1,w,c	;volatile
 41856  004F4A  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 41857  004F4C  6F15               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 41858  004F4E  5042               	movf	_ticksAdded+2,w,c	;volatile
 41859  004F50  2015               	addwfc	??i2_TMR_GetDeltaTime+8,w,c
 41860  004F52  6F16               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 41861  004F54  5043               	movf	_ticksAdded+3,w,c	;volatile
 41862  004F56  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 41863  004F58  6F17               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 41864                           
 41865                           ;sw_timer.c: 106: ticksAccounted += retVal;
 41866  004F5A  5114               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 41867  004F5C  263C               	addwf	_ticksAccounted,f,c	;volatile
 41868  004F5E  5115               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 41869  004F60  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 41870  004F62  5116               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 41871  004F64  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 41872  004F66  5117               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 41873  004F68  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 41874  004F6A                     i2l217:
 41875                           
 41876                           ; BSR set to: 1
 41877                           ;sw_timer.c: 107: }
 41878                           ;sw_timer.c: 109: return retVal;
 41879                           
 41880                           ; BSR set to: 1
 41881  004F6A  C114  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 41882  004F6E  C115  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 41883  004F72  C116  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 41884  004F76  C117  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 41885  004F7A  0012               	return	
 41886  004F7C                     __end_ofi2_TMR_GetDeltaTime:
 41887                           	opt stack 0
 41888                           tosu	equ	0xFFF
 41889                           tosh	equ	0xFFE
 41890                           tosl	equ	0xFFD
 41891                           pclatu	equ	0xFFB
 41892                           pclath	equ	0xFFA
 41893                           tblptru	equ	0xFF8
 41894                           tblptrh	equ	0xFF7
 41895                           tblptrl	equ	0xFF6
 41896                           tablat	equ	0xFF5
 41897                           prodh	equ	0xFF4
 41898                           prodl	equ	0xFF3
 41899                           intcon	equ	0xFF2
 41900                           intcon2	equ	0xFF1
 41901                           intcon3	equ	0xFF0
 41902                           indf0	equ	0xFEF
 41903                           postinc0	equ	0xFEE
 41904                           plusw0	equ	0xFEB
 41905                           fsr0h	equ	0xFEA
 41906                           fsr0l	equ	0xFE9
 41907                           wreg	equ	0xFE8
 41908                           postinc1	equ	0xFE6
 41909                           postdec1	equ	0xFE5
 41910                           plusw1	equ	0xFE3
 41911                           fsr1h	equ	0xFE2
 41912                           fsr1l	equ	0xFE1
 41913                           indf2	equ	0xFDF
 41914                           postinc2	equ	0xFDE
 41915                           postdec2	equ	0xFDD
 41916                           plusw2	equ	0xFDB
 41917                           fsr2h	equ	0xFDA
 41918                           fsr2l	equ	0xFD9
 41919                           status	equ	0xFD8
 41920                           
 41921 ;; *************** function i2_TMR1_ReadTimer *****************
 41922 ;; Defined at:
 41923 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 41924 ;; Parameters:    Size  Location     Type
 41925 ;;		None
 41926 ;; Auto vars:     Size  Location     Type
 41927 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 41928 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 41929 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 41930 ;; Return value:  Size  Location     Type
 41931 ;;                  2    0[COMRAM] unsigned int 
 41932 ;; Registers used:
 41933 ;;		wreg, status,2
 41934 ;; Tracked objects:
 41935 ;;		On entry : 0/0
 41936 ;;		On exit  : 0/0
 41937 ;;		Unchanged: 0/0
 41938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41940 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41941 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41942 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41943 ;;Total ram usage:        8 bytes
 41944 ;; Hardware stack levels used:    1
 41945 ;; This function calls:
 41946 ;;		Nothing
 41947 ;; This function is called by:
 41948 ;;		i2_TMR_GetDeltaTime
 41949 ;;		i2_TMR_SwapTimer
 41950 ;; This function uses a non-reentrant model
 41951 ;;
 41952                           
 41953                           	psect	text211
 41954  0089AC                     __ptext211:
 41955                           	opt stack 0
 41956  0089AC                     i2_TMR1_ReadTimer:
 41957                           	opt stack 13
 41958                           
 41959                           ;tmr1.c: 107: uint16_t readVal;
 41960                           ;tmr1.c: 108: uint8_t readValHigh;
 41961                           ;tmr1.c: 109: uint8_t readValLow;
 41962                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 41963                           
 41964                           ; BSR set to: 1
 41965                           ;incstack = 0
 41966  0089AC  82CD               	bsf	4045,1,c	;volatile
 41967                           
 41968                           ;tmr1.c: 113: readValLow = TMR1L;
 41969  0089AE  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 41970                           
 41971                           ;tmr1.c: 114: readValHigh = TMR1H;
 41972  0089B2  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 41973                           
 41974                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 41975  0089B6  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 41976  0089B8  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 41977  0089BA  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 41978  0089BC  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 41979  0089BE  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 41980                           
 41981                           ;tmr1.c: 118: return readVal;
 41982  0089C2  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 41983  0089C6  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 41984  0089CA  0012               	return	
 41985  0089CC                     __end_ofi2_TMR1_ReadTimer:
 41986                           	opt stack 0
 41987                           tosu	equ	0xFFF
 41988                           tosh	equ	0xFFE
 41989                           tosl	equ	0xFFD
 41990                           pclatu	equ	0xFFB
 41991                           pclath	equ	0xFFA
 41992                           tblptru	equ	0xFF8
 41993                           tblptrh	equ	0xFF7
 41994                           tblptrl	equ	0xFF6
 41995                           tablat	equ	0xFF5
 41996                           prodh	equ	0xFF4
 41997                           prodl	equ	0xFF3
 41998                           intcon	equ	0xFF2
 41999                           intcon2	equ	0xFF1
 42000                           intcon3	equ	0xFF0
 42001                           indf0	equ	0xFEF
 42002                           postinc0	equ	0xFEE
 42003                           plusw0	equ	0xFEB
 42004                           fsr0h	equ	0xFEA
 42005                           fsr0l	equ	0xFE9
 42006                           wreg	equ	0xFE8
 42007                           postinc1	equ	0xFE6
 42008                           postdec1	equ	0xFE5
 42009                           plusw1	equ	0xFE3
 42010                           fsr1h	equ	0xFE2
 42011                           fsr1l	equ	0xFE1
 42012                           indf2	equ	0xFDF
 42013                           postinc2	equ	0xFDE
 42014                           postdec2	equ	0xFDD
 42015                           plusw2	equ	0xFDB
 42016                           fsr2h	equ	0xFDA
 42017                           fsr2l	equ	0xFD9
 42018                           status	equ	0xFD8
 42019                           
 42020 ;; *************** function _PIN_MANAGER_IOC *****************
 42021 ;; Defined at:
 42022 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
 42023 ;; Parameters:    Size  Location     Type
 42024 ;;		None
 42025 ;; Auto vars:     Size  Location     Type
 42026 ;;		None
 42027 ;; Return value:  Size  Location     Type
 42028 ;;                  1    wreg      void 
 42029 ;; Registers used:
 42030 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42031 ;; Tracked objects:
 42032 ;;		On entry : 0/0
 42033 ;;		On exit  : 0/0
 42034 ;;		Unchanged: 0/0
 42035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42040 ;;Total ram usage:        0 bytes
 42041 ;; Hardware stack levels used:    1
 42042 ;; Hardware stack levels required when called:    2
 42043 ;; This function calls:
 42044 ;;		_IOCB4_ISR
 42045 ;; This function is called by:
 42046 ;;		_INTERRUPT_InterruptManager
 42047 ;; This function uses a non-reentrant model
 42048 ;;
 42049                           
 42050                           	psect	text212
 42051  008D42                     __ptext212:
 42052                           	opt stack 0
 42053  008D42                     _PIN_MANAGER_IOC:
 42054                           	opt stack 15
 42055                           
 42056                           ;pin_manager.c: 113: if(IOCBbits.IOCB4 == 1)
 42057                           
 42058                           ;incstack = 0
 42059  008D42  B862               	btfsc	3938,4,c	;volatile
 42060                           
 42061                           ;pin_manager.c: 114: {
 42062                           ;pin_manager.c: 115: IOCB4_ISR();
 42063  008D44  ECE6  F044         	call	_IOCB4_ISR	;wreg free
 42064                           
 42065                           ;pin_manager.c: 116: }
 42066                           ;pin_manager.c: 118: INTCONbits.RBIF = 0;
 42067  008D48  90F2               	bcf	intcon,0,c	;volatile
 42068  008D4A  0012               	return		;funcret
 42069  008D4C                     __end_of_PIN_MANAGER_IOC:
 42070                           	opt stack 0
 42071                           tosu	equ	0xFFF
 42072                           tosh	equ	0xFFE
 42073                           tosl	equ	0xFFD
 42074                           pclatu	equ	0xFFB
 42075                           pclath	equ	0xFFA
 42076                           tblptru	equ	0xFF8
 42077                           tblptrh	equ	0xFF7
 42078                           tblptrl	equ	0xFF6
 42079                           tablat	equ	0xFF5
 42080                           prodh	equ	0xFF4
 42081                           prodl	equ	0xFF3
 42082                           intcon	equ	0xFF2
 42083                           intcon2	equ	0xFF1
 42084                           intcon3	equ	0xFF0
 42085                           indf0	equ	0xFEF
 42086                           postinc0	equ	0xFEE
 42087                           plusw0	equ	0xFEB
 42088                           fsr0h	equ	0xFEA
 42089                           fsr0l	equ	0xFE9
 42090                           wreg	equ	0xFE8
 42091                           postinc1	equ	0xFE6
 42092                           postdec1	equ	0xFE5
 42093                           plusw1	equ	0xFE3
 42094                           fsr1h	equ	0xFE2
 42095                           fsr1l	equ	0xFE1
 42096                           indf2	equ	0xFDF
 42097                           postinc2	equ	0xFDE
 42098                           postdec2	equ	0xFDD
 42099                           plusw2	equ	0xFDB
 42100                           fsr2h	equ	0xFDA
 42101                           fsr2l	equ	0xFD9
 42102                           status	equ	0xFD8
 42103                           
 42104 ;; *************** function _IOCB4_ISR *****************
 42105 ;; Defined at:
 42106 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
 42107 ;; Parameters:    Size  Location     Type
 42108 ;;		None
 42109 ;; Auto vars:     Size  Location     Type
 42110 ;;		None
 42111 ;; Return value:  Size  Location     Type
 42112 ;;                  1    wreg      void 
 42113 ;; Registers used:
 42114 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42115 ;; Tracked objects:
 42116 ;;		On entry : 0/0
 42117 ;;		On exit  : 0/0
 42118 ;;		Unchanged: 0/0
 42119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42124 ;;Total ram usage:        0 bytes
 42125 ;; Hardware stack levels used:    1
 42126 ;; Hardware stack levels required when called:    1
 42127 ;; This function calls:
 42128 ;;		Absolute function
 42129 ;;		_DIO2_ISR_Lora
 42130 ;;		_IOCB4_DefaultInterruptHandler
 42131 ;; This function is called by:
 42132 ;;		_PIN_MANAGER_IOC
 42133 ;; This function uses a non-reentrant model
 42134 ;;
 42135                           
 42136                           	psect	text213
 42137  0089CC                     __ptext213:
 42138                           	opt stack 0
 42139  0089CC                     _IOCB4_ISR:
 42140                           	opt stack 15
 42141                           
 42142                           ;pin_manager.c: 129: if(IOCB4_InterruptHandler)
 42143                           
 42144                           ;incstack = 0
 42145  0089CC  0101               	movlb	1	; () banked
 42146  0089CE  51F5               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 42147  0089D0  11F6               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 42148  0089D2  B4D8               	btfsc	status,2,c
 42149  0089D4  0012               	return	
 42150                           
 42151                           ; BSR set to: 1
 42152                           ;pin_manager.c: 130: {
 42153                           ;pin_manager.c: 131: IOCB4_InterruptHandler();
 42154  0089D6  D801               	call	i2u2185_48
 42155  0089D8  0012               	return	
 42156  0089DA                     i2u2185_48:
 42157  0089DA  0005               	push	
 42158  0089DC  6EFA               	movwf	pclath,c
 42159  0089DE  51F5               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 42160  0089E0  6EFD               	movwf	tosl,c
 42161  0089E2  51F6               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 42162  0089E4  6EFE               	movwf	tosh,c
 42163  0089E6  6AFF               	clrf	tosu,c
 42164  0089E8  50FA               	movf	pclath,w,c
 42165  0089EA  0012               	return		;indir
 42166  0089EC                     __end_of_IOCB4_ISR:
 42167                           	opt stack 0
 42168                           tosu	equ	0xFFF
 42169                           tosh	equ	0xFFE
 42170                           tosl	equ	0xFFD
 42171                           pclatu	equ	0xFFB
 42172                           pclath	equ	0xFFA
 42173                           tblptru	equ	0xFF8
 42174                           tblptrh	equ	0xFF7
 42175                           tblptrl	equ	0xFF6
 42176                           tablat	equ	0xFF5
 42177                           prodh	equ	0xFF4
 42178                           prodl	equ	0xFF3
 42179                           intcon	equ	0xFF2
 42180                           intcon2	equ	0xFF1
 42181                           intcon3	equ	0xFF0
 42182                           indf0	equ	0xFEF
 42183                           postinc0	equ	0xFEE
 42184                           plusw0	equ	0xFEB
 42185                           fsr0h	equ	0xFEA
 42186                           fsr0l	equ	0xFE9
 42187                           wreg	equ	0xFE8
 42188                           postinc1	equ	0xFE6
 42189                           postdec1	equ	0xFE5
 42190                           plusw1	equ	0xFE3
 42191                           fsr1h	equ	0xFE2
 42192                           fsr1l	equ	0xFE1
 42193                           indf2	equ	0xFDF
 42194                           postinc2	equ	0xFDE
 42195                           postdec2	equ	0xFDD
 42196                           plusw2	equ	0xFDB
 42197                           fsr2h	equ	0xFDA
 42198                           fsr2l	equ	0xFD9
 42199                           status	equ	0xFD8
 42200                           
 42201 ;; *************** function _DIO2_ISR_Lora *****************
 42202 ;; Defined at:
 42203 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 42204 ;; Parameters:    Size  Location     Type
 42205 ;;		None
 42206 ;; Auto vars:     Size  Location     Type
 42207 ;;		None
 42208 ;; Return value:  Size  Location     Type
 42209 ;;                  1    wreg      void 
 42210 ;; Registers used:
 42211 ;;		status,2, status,0
 42212 ;; Tracked objects:
 42213 ;;		On entry : 0/0
 42214 ;;		On exit  : 0/0
 42215 ;;		Unchanged: 0/0
 42216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42221 ;;Total ram usage:        0 bytes
 42222 ;; Hardware stack levels used:    1
 42223 ;; This function calls:
 42224 ;;		Nothing
 42225 ;; This function is called by:
 42226 ;;		_DIO2_ISR_Lora_Init
 42227 ;;		_IOCB4_ISR
 42228 ;; This function uses a non-reentrant model
 42229 ;;
 42230                           
 42231                           	psect	text214
 42232  008D76                     __ptext214:
 42233                           	opt stack 0
 42234  008D76                     _DIO2_ISR_Lora:
 42235                           	opt stack 15
 42236                           
 42237                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 42238                           
 42239                           ;incstack = 0
 42240  008D76  0101               	movlb	1	; () banked
 42241  008D78  8523               	bsf	_dioStatus& (0+255),2,b	;volatile
 42242                           
 42243                           ; BSR set to: 1
 42244  008D7A  0012               	return		;funcret
 42245  008D7C                     __end_of_DIO2_ISR_Lora:
 42246                           	opt stack 0
 42247                           tosu	equ	0xFFF
 42248                           tosh	equ	0xFFE
 42249                           tosl	equ	0xFFD
 42250                           pclatu	equ	0xFFB
 42251                           pclath	equ	0xFFA
 42252                           tblptru	equ	0xFF8
 42253                           tblptrh	equ	0xFF7
 42254                           tblptrl	equ	0xFF6
 42255                           tablat	equ	0xFF5
 42256                           prodh	equ	0xFF4
 42257                           prodl	equ	0xFF3
 42258                           intcon	equ	0xFF2
 42259                           intcon2	equ	0xFF1
 42260                           intcon3	equ	0xFF0
 42261                           indf0	equ	0xFEF
 42262                           postinc0	equ	0xFEE
 42263                           plusw0	equ	0xFEB
 42264                           fsr0h	equ	0xFEA
 42265                           fsr0l	equ	0xFE9
 42266                           wreg	equ	0xFE8
 42267                           postinc1	equ	0xFE6
 42268                           postdec1	equ	0xFE5
 42269                           plusw1	equ	0xFE3
 42270                           fsr1h	equ	0xFE2
 42271                           fsr1l	equ	0xFE1
 42272                           indf2	equ	0xFDF
 42273                           postinc2	equ	0xFDE
 42274                           postdec2	equ	0xFDD
 42275                           plusw2	equ	0xFDB
 42276                           fsr2h	equ	0xFDA
 42277                           fsr2l	equ	0xFD9
 42278                           status	equ	0xFD8
 42279                           
 42280 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 42281 ;; Defined at:
 42282 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
 42283 ;; Parameters:    Size  Location     Type
 42284 ;;		None
 42285 ;; Auto vars:     Size  Location     Type
 42286 ;;		None
 42287 ;; Return value:  Size  Location     Type
 42288 ;;                  1    wreg      void 
 42289 ;; Registers used:
 42290 ;;		None
 42291 ;; Tracked objects:
 42292 ;;		On entry : 0/0
 42293 ;;		On exit  : 0/0
 42294 ;;		Unchanged: 0/0
 42295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42300 ;;Total ram usage:        0 bytes
 42301 ;; Hardware stack levels used:    1
 42302 ;; This function calls:
 42303 ;;		Nothing
 42304 ;; This function is called by:
 42305 ;;		_PIN_MANAGER_Initialize
 42306 ;;		_IOCB4_ISR
 42307 ;; This function uses a non-reentrant model
 42308 ;;
 42309                           
 42310                           	psect	text215
 42311  008DAC                     __ptext215:
 42312                           	opt stack 0
 42313  008DAC                     _IOCB4_DefaultInterruptHandler:
 42314                           	opt stack 15
 42315                           
 42316                           ; BSR set to: 1
 42317                           ;incstack = 0
 42318  008DAC  0012               	return		;funcret
 42319  008DAE                     __end_of_IOCB4_DefaultInterruptHandler:
 42320                           	opt stack 0
 42321                           tosu	equ	0xFFF
 42322                           tosh	equ	0xFFE
 42323                           tosl	equ	0xFFD
 42324                           pclatu	equ	0xFFB
 42325                           pclath	equ	0xFFA
 42326                           tblptru	equ	0xFF8
 42327                           tblptrh	equ	0xFF7
 42328                           tblptrl	equ	0xFF6
 42329                           tablat	equ	0xFF5
 42330                           prodh	equ	0xFF4
 42331                           prodl	equ	0xFF3
 42332                           intcon	equ	0xFF2
 42333                           intcon2	equ	0xFF1
 42334                           intcon3	equ	0xFF0
 42335                           indf0	equ	0xFEF
 42336                           postinc0	equ	0xFEE
 42337                           plusw0	equ	0xFEB
 42338                           fsr0h	equ	0xFEA
 42339                           fsr0l	equ	0xFE9
 42340                           wreg	equ	0xFE8
 42341                           postinc1	equ	0xFE6
 42342                           postdec1	equ	0xFE5
 42343                           plusw1	equ	0xFE3
 42344                           fsr1h	equ	0xFE2
 42345                           fsr1l	equ	0xFE1
 42346                           indf2	equ	0xFDF
 42347                           postinc2	equ	0xFDE
 42348                           postdec2	equ	0xFDD
 42349                           plusw2	equ	0xFDB
 42350                           fsr2h	equ	0xFDA
 42351                           fsr2l	equ	0xFD9
 42352                           status	equ	0xFD8
 42353                           
 42354 ;; *************** function _INT2_ISR *****************
 42355 ;; Defined at:
 42356 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 42357 ;; Parameters:    Size  Location     Type
 42358 ;;		None
 42359 ;; Auto vars:     Size  Location     Type
 42360 ;;		None
 42361 ;; Return value:  Size  Location     Type
 42362 ;;                  1    wreg      void 
 42363 ;; Registers used:
 42364 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42365 ;; Tracked objects:
 42366 ;;		On entry : 0/0
 42367 ;;		On exit  : 0/0
 42368 ;;		Unchanged: 0/0
 42369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42374 ;;Total ram usage:        0 bytes
 42375 ;; Hardware stack levels used:    1
 42376 ;; Hardware stack levels required when called:    2
 42377 ;; This function calls:
 42378 ;;		_INT2_CallBack
 42379 ;; This function is called by:
 42380 ;;		_INTERRUPT_InterruptManager
 42381 ;; This function uses a non-reentrant model
 42382 ;;
 42383                           
 42384                           	psect	text216
 42385  008D54                     __ptext216:
 42386                           	opt stack 0
 42387  008D54                     _INT2_ISR:
 42388                           	opt stack 15
 42389                           
 42390                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
 42391                           
 42392                           ;incstack = 0
 42393  008D54  92F0               	bcf	intcon3,1,c	;volatile
 42394                           
 42395                           ;ext_int.c: 64: INT2_CallBack();
 42396  008D56  ECF6  F044         	call	_INT2_CallBack	;wreg free
 42397  008D5A  0012               	return		;funcret
 42398  008D5C                     __end_of_INT2_ISR:
 42399                           	opt stack 0
 42400                           tosu	equ	0xFFF
 42401                           tosh	equ	0xFFE
 42402                           tosl	equ	0xFFD
 42403                           pclatu	equ	0xFFB
 42404                           pclath	equ	0xFFA
 42405                           tblptru	equ	0xFF8
 42406                           tblptrh	equ	0xFF7
 42407                           tblptrl	equ	0xFF6
 42408                           tablat	equ	0xFF5
 42409                           prodh	equ	0xFF4
 42410                           prodl	equ	0xFF3
 42411                           intcon	equ	0xFF2
 42412                           intcon2	equ	0xFF1
 42413                           intcon3	equ	0xFF0
 42414                           indf0	equ	0xFEF
 42415                           postinc0	equ	0xFEE
 42416                           plusw0	equ	0xFEB
 42417                           fsr0h	equ	0xFEA
 42418                           fsr0l	equ	0xFE9
 42419                           wreg	equ	0xFE8
 42420                           postinc1	equ	0xFE6
 42421                           postdec1	equ	0xFE5
 42422                           plusw1	equ	0xFE3
 42423                           fsr1h	equ	0xFE2
 42424                           fsr1l	equ	0xFE1
 42425                           indf2	equ	0xFDF
 42426                           postinc2	equ	0xFDE
 42427                           postdec2	equ	0xFDD
 42428                           plusw2	equ	0xFDB
 42429                           fsr2h	equ	0xFDA
 42430                           fsr2l	equ	0xFD9
 42431                           status	equ	0xFD8
 42432                           
 42433 ;; *************** function _INT2_CallBack *****************
 42434 ;; Defined at:
 42435 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 42436 ;; Parameters:    Size  Location     Type
 42437 ;;		None
 42438 ;; Auto vars:     Size  Location     Type
 42439 ;;		None
 42440 ;; Return value:  Size  Location     Type
 42441 ;;                  1    wreg      void 
 42442 ;; Registers used:
 42443 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42444 ;; Tracked objects:
 42445 ;;		On entry : 0/0
 42446 ;;		On exit  : 0/0
 42447 ;;		Unchanged: 0/0
 42448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42453 ;;Total ram usage:        0 bytes
 42454 ;; Hardware stack levels used:    1
 42455 ;; Hardware stack levels required when called:    1
 42456 ;; This function calls:
 42457 ;;		Absolute function
 42458 ;;		_DIO1_ISR_Lora
 42459 ;;		_INT2_DefaultInterruptHandler
 42460 ;; This function is called by:
 42461 ;;		_INT2_ISR
 42462 ;; This function uses a non-reentrant model
 42463 ;;
 42464                           
 42465                           	psect	text217
 42466  0089EC                     __ptext217:
 42467                           	opt stack 0
 42468  0089EC                     _INT2_CallBack:
 42469                           	opt stack 15
 42470                           
 42471                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 42472                           
 42473                           ;incstack = 0
 42474  0089EC  0101               	movlb	1	; () banked
 42475  0089EE  51F7               	movf	_INT2_InterruptHandler& (0+255),w,b
 42476  0089F0  11F8               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 42477  0089F2  B4D8               	btfsc	status,2,c
 42478  0089F4  0012               	return	
 42479                           
 42480                           ; BSR set to: 1
 42481                           ;ext_int.c: 72: {
 42482                           ;ext_int.c: 73: INT2_InterruptHandler();
 42483  0089F6  D801               	call	i2u2183_48
 42484  0089F8  0012               	return	
 42485  0089FA                     i2u2183_48:
 42486  0089FA  0005               	push	
 42487  0089FC  6EFA               	movwf	pclath,c
 42488  0089FE  51F7               	movf	_INT2_InterruptHandler& (0+255),w,b
 42489  008A00  6EFD               	movwf	tosl,c
 42490  008A02  51F8               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 42491  008A04  6EFE               	movwf	tosh,c
 42492  008A06  6AFF               	clrf	tosu,c
 42493  008A08  50FA               	movf	pclath,w,c
 42494  008A0A  0012               	return		;indir
 42495  008A0C                     __end_of_INT2_CallBack:
 42496                           	opt stack 0
 42497                           tosu	equ	0xFFF
 42498                           tosh	equ	0xFFE
 42499                           tosl	equ	0xFFD
 42500                           pclatu	equ	0xFFB
 42501                           pclath	equ	0xFFA
 42502                           tblptru	equ	0xFF8
 42503                           tblptrh	equ	0xFF7
 42504                           tblptrl	equ	0xFF6
 42505                           tablat	equ	0xFF5
 42506                           prodh	equ	0xFF4
 42507                           prodl	equ	0xFF3
 42508                           intcon	equ	0xFF2
 42509                           intcon2	equ	0xFF1
 42510                           intcon3	equ	0xFF0
 42511                           indf0	equ	0xFEF
 42512                           postinc0	equ	0xFEE
 42513                           plusw0	equ	0xFEB
 42514                           fsr0h	equ	0xFEA
 42515                           fsr0l	equ	0xFE9
 42516                           wreg	equ	0xFE8
 42517                           postinc1	equ	0xFE6
 42518                           postdec1	equ	0xFE5
 42519                           plusw1	equ	0xFE3
 42520                           fsr1h	equ	0xFE2
 42521                           fsr1l	equ	0xFE1
 42522                           indf2	equ	0xFDF
 42523                           postinc2	equ	0xFDE
 42524                           postdec2	equ	0xFDD
 42525                           plusw2	equ	0xFDB
 42526                           fsr2h	equ	0xFDA
 42527                           fsr2l	equ	0xFD9
 42528                           status	equ	0xFD8
 42529                           
 42530 ;; *************** function _DIO1_ISR_Lora *****************
 42531 ;; Defined at:
 42532 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 42533 ;; Parameters:    Size  Location     Type
 42534 ;;		None
 42535 ;; Auto vars:     Size  Location     Type
 42536 ;;		None
 42537 ;; Return value:  Size  Location     Type
 42538 ;;                  1    wreg      void 
 42539 ;; Registers used:
 42540 ;;		status,2, status,0
 42541 ;; Tracked objects:
 42542 ;;		On entry : 0/0
 42543 ;;		On exit  : 0/0
 42544 ;;		Unchanged: 0/0
 42545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42550 ;;Total ram usage:        0 bytes
 42551 ;; Hardware stack levels used:    1
 42552 ;; This function calls:
 42553 ;;		Nothing
 42554 ;; This function is called by:
 42555 ;;		_DIO1_ISR_Lora_Init
 42556 ;;		_INT2_CallBack
 42557 ;; This function uses a non-reentrant model
 42558 ;;
 42559                           
 42560                           	psect	text218
 42561  008D7C                     __ptext218:
 42562                           	opt stack 0
 42563  008D7C                     _DIO1_ISR_Lora:
 42564                           	opt stack 15
 42565                           
 42566                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 42567                           
 42568                           ;incstack = 0
 42569  008D7C  0101               	movlb	1	; () banked
 42570  008D7E  8323               	bsf	_dioStatus& (0+255),1,b	;volatile
 42571                           
 42572                           ; BSR set to: 1
 42573  008D80  0012               	return		;funcret
 42574  008D82                     __end_of_DIO1_ISR_Lora:
 42575                           	opt stack 0
 42576                           tosu	equ	0xFFF
 42577                           tosh	equ	0xFFE
 42578                           tosl	equ	0xFFD
 42579                           pclatu	equ	0xFFB
 42580                           pclath	equ	0xFFA
 42581                           tblptru	equ	0xFF8
 42582                           tblptrh	equ	0xFF7
 42583                           tblptrl	equ	0xFF6
 42584                           tablat	equ	0xFF5
 42585                           prodh	equ	0xFF4
 42586                           prodl	equ	0xFF3
 42587                           intcon	equ	0xFF2
 42588                           intcon2	equ	0xFF1
 42589                           intcon3	equ	0xFF0
 42590                           indf0	equ	0xFEF
 42591                           postinc0	equ	0xFEE
 42592                           plusw0	equ	0xFEB
 42593                           fsr0h	equ	0xFEA
 42594                           fsr0l	equ	0xFE9
 42595                           wreg	equ	0xFE8
 42596                           postinc1	equ	0xFE6
 42597                           postdec1	equ	0xFE5
 42598                           plusw1	equ	0xFE3
 42599                           fsr1h	equ	0xFE2
 42600                           fsr1l	equ	0xFE1
 42601                           indf2	equ	0xFDF
 42602                           postinc2	equ	0xFDE
 42603                           postdec2	equ	0xFDD
 42604                           plusw2	equ	0xFDB
 42605                           fsr2h	equ	0xFDA
 42606                           fsr2l	equ	0xFD9
 42607                           status	equ	0xFD8
 42608                           
 42609 ;; *************** function _INT2_DefaultInterruptHandler *****************
 42610 ;; Defined at:
 42611 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 42612 ;; Parameters:    Size  Location     Type
 42613 ;;		None
 42614 ;; Auto vars:     Size  Location     Type
 42615 ;;		None
 42616 ;; Return value:  Size  Location     Type
 42617 ;;                  1    wreg      void 
 42618 ;; Registers used:
 42619 ;;		None
 42620 ;; Tracked objects:
 42621 ;;		On entry : 0/0
 42622 ;;		On exit  : 0/0
 42623 ;;		Unchanged: 0/0
 42624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42629 ;;Total ram usage:        0 bytes
 42630 ;; Hardware stack levels used:    1
 42631 ;; This function calls:
 42632 ;;		Nothing
 42633 ;; This function is called by:
 42634 ;;		_EXT_INT_Initialize
 42635 ;;		_INT2_CallBack
 42636 ;; This function uses a non-reentrant model
 42637 ;;
 42638                           
 42639                           	psect	text219
 42640  008DAE                     __ptext219:
 42641                           	opt stack 0
 42642  008DAE                     _INT2_DefaultInterruptHandler:
 42643                           	opt stack 15
 42644                           
 42645                           ; BSR set to: 1
 42646                           ;incstack = 0
 42647  008DAE  0012               	return		;funcret
 42648  008DB0                     __end_of_INT2_DefaultInterruptHandler:
 42649                           	opt stack 0
 42650                           tosu	equ	0xFFF
 42651                           tosh	equ	0xFFE
 42652                           tosl	equ	0xFFD
 42653                           pclatu	equ	0xFFB
 42654                           pclath	equ	0xFFA
 42655                           tblptru	equ	0xFF8
 42656                           tblptrh	equ	0xFF7
 42657                           tblptrl	equ	0xFF6
 42658                           tablat	equ	0xFF5
 42659                           prodh	equ	0xFF4
 42660                           prodl	equ	0xFF3
 42661                           intcon	equ	0xFF2
 42662                           intcon2	equ	0xFF1
 42663                           intcon3	equ	0xFF0
 42664                           indf0	equ	0xFEF
 42665                           postinc0	equ	0xFEE
 42666                           plusw0	equ	0xFEB
 42667                           fsr0h	equ	0xFEA
 42668                           fsr0l	equ	0xFE9
 42669                           wreg	equ	0xFE8
 42670                           postinc1	equ	0xFE6
 42671                           postdec1	equ	0xFE5
 42672                           plusw1	equ	0xFE3
 42673                           fsr1h	equ	0xFE2
 42674                           fsr1l	equ	0xFE1
 42675                           indf2	equ	0xFDF
 42676                           postinc2	equ	0xFDE
 42677                           postdec2	equ	0xFDD
 42678                           plusw2	equ	0xFDB
 42679                           fsr2h	equ	0xFDA
 42680                           fsr2l	equ	0xFD9
 42681                           status	equ	0xFD8
 42682                           
 42683 ;; *************** function _INT1_ISR *****************
 42684 ;; Defined at:
 42685 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 42686 ;; Parameters:    Size  Location     Type
 42687 ;;		None
 42688 ;; Auto vars:     Size  Location     Type
 42689 ;;		None
 42690 ;; Return value:  Size  Location     Type
 42691 ;;                  1    wreg      void 
 42692 ;; Registers used:
 42693 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42694 ;; Tracked objects:
 42695 ;;		On entry : 0/0
 42696 ;;		On exit  : 0/0
 42697 ;;		Unchanged: 0/0
 42698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42703 ;;Total ram usage:        0 bytes
 42704 ;; Hardware stack levels used:    1
 42705 ;; Hardware stack levels required when called:    2
 42706 ;; This function calls:
 42707 ;;		_INT1_CallBack
 42708 ;; This function is called by:
 42709 ;;		_INTERRUPT_InterruptManager
 42710 ;; This function uses a non-reentrant model
 42711 ;;
 42712                           
 42713                           	psect	text220
 42714  008D5C                     __ptext220:
 42715                           	opt stack 0
 42716  008D5C                     _INT1_ISR:
 42717                           	opt stack 15
 42718                           
 42719                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
 42720                           
 42721                           ;incstack = 0
 42722  008D5C  90F0               	bcf	intcon3,0,c	;volatile
 42723                           
 42724                           ;ext_int.c: 38: INT1_CallBack();
 42725  008D5E  EC06  F045         	call	_INT1_CallBack	;wreg free
 42726  008D62  0012               	return		;funcret
 42727  008D64                     __end_of_INT1_ISR:
 42728                           	opt stack 0
 42729                           tosu	equ	0xFFF
 42730                           tosh	equ	0xFFE
 42731                           tosl	equ	0xFFD
 42732                           pclatu	equ	0xFFB
 42733                           pclath	equ	0xFFA
 42734                           tblptru	equ	0xFF8
 42735                           tblptrh	equ	0xFF7
 42736                           tblptrl	equ	0xFF6
 42737                           tablat	equ	0xFF5
 42738                           prodh	equ	0xFF4
 42739                           prodl	equ	0xFF3
 42740                           intcon	equ	0xFF2
 42741                           intcon2	equ	0xFF1
 42742                           intcon3	equ	0xFF0
 42743                           indf0	equ	0xFEF
 42744                           postinc0	equ	0xFEE
 42745                           plusw0	equ	0xFEB
 42746                           fsr0h	equ	0xFEA
 42747                           fsr0l	equ	0xFE9
 42748                           wreg	equ	0xFE8
 42749                           postinc1	equ	0xFE6
 42750                           postdec1	equ	0xFE5
 42751                           plusw1	equ	0xFE3
 42752                           fsr1h	equ	0xFE2
 42753                           fsr1l	equ	0xFE1
 42754                           indf2	equ	0xFDF
 42755                           postinc2	equ	0xFDE
 42756                           postdec2	equ	0xFDD
 42757                           plusw2	equ	0xFDB
 42758                           fsr2h	equ	0xFDA
 42759                           fsr2l	equ	0xFD9
 42760                           status	equ	0xFD8
 42761                           
 42762 ;; *************** function _INT1_CallBack *****************
 42763 ;; Defined at:
 42764 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 42765 ;; Parameters:    Size  Location     Type
 42766 ;;		None
 42767 ;; Auto vars:     Size  Location     Type
 42768 ;;		None
 42769 ;; Return value:  Size  Location     Type
 42770 ;;                  1    wreg      void 
 42771 ;; Registers used:
 42772 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42773 ;; Tracked objects:
 42774 ;;		On entry : 0/0
 42775 ;;		On exit  : 0/0
 42776 ;;		Unchanged: 0/0
 42777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42782 ;;Total ram usage:        0 bytes
 42783 ;; Hardware stack levels used:    1
 42784 ;; Hardware stack levels required when called:    1
 42785 ;; This function calls:
 42786 ;;		Absolute function
 42787 ;;		_DIO0_ISR_Lora
 42788 ;;		_INT1_DefaultInterruptHandler
 42789 ;; This function is called by:
 42790 ;;		_INT1_ISR
 42791 ;; This function uses a non-reentrant model
 42792 ;;
 42793                           
 42794                           	psect	text221
 42795  008A0C                     __ptext221:
 42796                           	opt stack 0
 42797  008A0C                     _INT1_CallBack:
 42798                           	opt stack 15
 42799                           
 42800                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 42801                           
 42802                           ;incstack = 0
 42803  008A0C  0101               	movlb	1	; () banked
 42804  008A0E  51F9               	movf	_INT1_InterruptHandler& (0+255),w,b
 42805  008A10  11FA               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 42806  008A12  B4D8               	btfsc	status,2,c
 42807  008A14  0012               	return	
 42808                           
 42809                           ; BSR set to: 1
 42810                           ;ext_int.c: 46: {
 42811                           ;ext_int.c: 47: INT1_InterruptHandler();
 42812  008A16  D801               	call	i2u2181_48
 42813  008A18  0012               	return	
 42814  008A1A                     i2u2181_48:
 42815  008A1A  0005               	push	
 42816  008A1C  6EFA               	movwf	pclath,c
 42817  008A1E  51F9               	movf	_INT1_InterruptHandler& (0+255),w,b
 42818  008A20  6EFD               	movwf	tosl,c
 42819  008A22  51FA               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 42820  008A24  6EFE               	movwf	tosh,c
 42821  008A26  6AFF               	clrf	tosu,c
 42822  008A28  50FA               	movf	pclath,w,c
 42823  008A2A  0012               	return		;indir
 42824  008A2C                     __end_of_INT1_CallBack:
 42825                           	opt stack 0
 42826                           tosu	equ	0xFFF
 42827                           tosh	equ	0xFFE
 42828                           tosl	equ	0xFFD
 42829                           pclatu	equ	0xFFB
 42830                           pclath	equ	0xFFA
 42831                           tblptru	equ	0xFF8
 42832                           tblptrh	equ	0xFF7
 42833                           tblptrl	equ	0xFF6
 42834                           tablat	equ	0xFF5
 42835                           prodh	equ	0xFF4
 42836                           prodl	equ	0xFF3
 42837                           intcon	equ	0xFF2
 42838                           intcon2	equ	0xFF1
 42839                           intcon3	equ	0xFF0
 42840                           indf0	equ	0xFEF
 42841                           postinc0	equ	0xFEE
 42842                           plusw0	equ	0xFEB
 42843                           fsr0h	equ	0xFEA
 42844                           fsr0l	equ	0xFE9
 42845                           wreg	equ	0xFE8
 42846                           postinc1	equ	0xFE6
 42847                           postdec1	equ	0xFE5
 42848                           plusw1	equ	0xFE3
 42849                           fsr1h	equ	0xFE2
 42850                           fsr1l	equ	0xFE1
 42851                           indf2	equ	0xFDF
 42852                           postinc2	equ	0xFDE
 42853                           postdec2	equ	0xFDD
 42854                           plusw2	equ	0xFDB
 42855                           fsr2h	equ	0xFDA
 42856                           fsr2l	equ	0xFD9
 42857                           status	equ	0xFD8
 42858                           
 42859 ;; *************** function _DIO0_ISR_Lora *****************
 42860 ;; Defined at:
 42861 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 42862 ;; Parameters:    Size  Location     Type
 42863 ;;		None
 42864 ;; Auto vars:     Size  Location     Type
 42865 ;;		None
 42866 ;; Return value:  Size  Location     Type
 42867 ;;                  1    wreg      void 
 42868 ;; Registers used:
 42869 ;;		status,2, status,0
 42870 ;; Tracked objects:
 42871 ;;		On entry : 0/0
 42872 ;;		On exit  : 0/0
 42873 ;;		Unchanged: 0/0
 42874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42879 ;;Total ram usage:        0 bytes
 42880 ;; Hardware stack levels used:    1
 42881 ;; This function calls:
 42882 ;;		Nothing
 42883 ;; This function is called by:
 42884 ;;		_DIO0_ISR_Lora_Init
 42885 ;;		_INT1_CallBack
 42886 ;; This function uses a non-reentrant model
 42887 ;;
 42888                           
 42889                           	psect	text222
 42890  008D82                     __ptext222:
 42891                           	opt stack 0
 42892  008D82                     _DIO0_ISR_Lora:
 42893                           	opt stack 15
 42894                           
 42895                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 42896                           
 42897                           ;incstack = 0
 42898  008D82  0101               	movlb	1	; () banked
 42899  008D84  8123               	bsf	_dioStatus& (0+255),0,b	;volatile
 42900                           
 42901                           ; BSR set to: 1
 42902  008D86  0012               	return		;funcret
 42903  008D88                     __end_of_DIO0_ISR_Lora:
 42904                           	opt stack 0
 42905                           tosu	equ	0xFFF
 42906                           tosh	equ	0xFFE
 42907                           tosl	equ	0xFFD
 42908                           pclatu	equ	0xFFB
 42909                           pclath	equ	0xFFA
 42910                           tblptru	equ	0xFF8
 42911                           tblptrh	equ	0xFF7
 42912                           tblptrl	equ	0xFF6
 42913                           tablat	equ	0xFF5
 42914                           prodh	equ	0xFF4
 42915                           prodl	equ	0xFF3
 42916                           intcon	equ	0xFF2
 42917                           intcon2	equ	0xFF1
 42918                           intcon3	equ	0xFF0
 42919                           indf0	equ	0xFEF
 42920                           postinc0	equ	0xFEE
 42921                           plusw0	equ	0xFEB
 42922                           fsr0h	equ	0xFEA
 42923                           fsr0l	equ	0xFE9
 42924                           wreg	equ	0xFE8
 42925                           postinc1	equ	0xFE6
 42926                           postdec1	equ	0xFE5
 42927                           plusw1	equ	0xFE3
 42928                           fsr1h	equ	0xFE2
 42929                           fsr1l	equ	0xFE1
 42930                           indf2	equ	0xFDF
 42931                           postinc2	equ	0xFDE
 42932                           postdec2	equ	0xFDD
 42933                           plusw2	equ	0xFDB
 42934                           fsr2h	equ	0xFDA
 42935                           fsr2l	equ	0xFD9
 42936                           status	equ	0xFD8
 42937                           
 42938 ;; *************** function _INT1_DefaultInterruptHandler *****************
 42939 ;; Defined at:
 42940 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 42941 ;; Parameters:    Size  Location     Type
 42942 ;;		None
 42943 ;; Auto vars:     Size  Location     Type
 42944 ;;		None
 42945 ;; Return value:  Size  Location     Type
 42946 ;;                  1    wreg      void 
 42947 ;; Registers used:
 42948 ;;		None
 42949 ;; Tracked objects:
 42950 ;;		On entry : 0/0
 42951 ;;		On exit  : 0/0
 42952 ;;		Unchanged: 0/0
 42953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42958 ;;Total ram usage:        0 bytes
 42959 ;; Hardware stack levels used:    1
 42960 ;; This function calls:
 42961 ;;		Nothing
 42962 ;; This function is called by:
 42963 ;;		_EXT_INT_Initialize
 42964 ;;		_INT1_CallBack
 42965 ;; This function uses a non-reentrant model
 42966 ;;
 42967                           
 42968                           	psect	text223
 42969  008DB0                     __ptext223:
 42970                           	opt stack 0
 42971  008DB0                     _INT1_DefaultInterruptHandler:
 42972                           	opt stack 15
 42973                           
 42974                           ; BSR set to: 1
 42975                           ;incstack = 0
 42976  008DB0  0012               	return		;funcret
 42977  008DB2                     __end_of_INT1_DefaultInterruptHandler:
 42978                           	opt stack 0
 42979                           tosu	equ	0xFFF
 42980                           tosh	equ	0xFFE
 42981                           tosl	equ	0xFFD
 42982                           pclatu	equ	0xFFB
 42983                           pclath	equ	0xFFA
 42984                           tblptru	equ	0xFF8
 42985                           tblptrh	equ	0xFF7
 42986                           tblptrl	equ	0xFF6
 42987                           tablat	equ	0xFF5
 42988                           prodh	equ	0xFF4
 42989                           prodl	equ	0xFF3
 42990                           intcon	equ	0xFF2
 42991                           intcon2	equ	0xFF1
 42992                           intcon3	equ	0xFF0
 42993                           indf0	equ	0xFEF
 42994                           postinc0	equ	0xFEE
 42995                           plusw0	equ	0xFEB
 42996                           fsr0h	equ	0xFEA
 42997                           fsr0l	equ	0xFE9
 42998                           wreg	equ	0xFE8
 42999                           postinc1	equ	0xFE6
 43000                           postdec1	equ	0xFE5
 43001                           plusw1	equ	0xFE3
 43002                           fsr1h	equ	0xFE2
 43003                           fsr1l	equ	0xFE1
 43004                           indf2	equ	0xFDF
 43005                           postinc2	equ	0xFDE
 43006                           postdec2	equ	0xFDD
 43007                           plusw2	equ	0xFDB
 43008                           fsr2h	equ	0xFDA
 43009                           fsr2l	equ	0xFD9
 43010                           status	equ	0xFD8
 43011                           tosu	equ	0xFFF
 43012                           tosh	equ	0xFFE
 43013                           tosl	equ	0xFFD
 43014                           pclatu	equ	0xFFB
 43015                           pclath	equ	0xFFA
 43016                           tblptru	equ	0xFF8
 43017                           tblptrh	equ	0xFF7
 43018                           tblptrl	equ	0xFF6
 43019                           tablat	equ	0xFF5
 43020                           prodh	equ	0xFF4
 43021                           prodl	equ	0xFF3
 43022                           intcon	equ	0xFF2
 43023                           intcon2	equ	0xFF1
 43024                           intcon3	equ	0xFF0
 43025                           indf0	equ	0xFEF
 43026                           postinc0	equ	0xFEE
 43027                           plusw0	equ	0xFEB
 43028                           fsr0h	equ	0xFEA
 43029                           fsr0l	equ	0xFE9
 43030                           wreg	equ	0xFE8
 43031                           postinc1	equ	0xFE6
 43032                           postdec1	equ	0xFE5
 43033                           plusw1	equ	0xFE3
 43034                           fsr1h	equ	0xFE2
 43035                           fsr1l	equ	0xFE1
 43036                           indf2	equ	0xFDF
 43037                           postinc2	equ	0xFDE
 43038                           postdec2	equ	0xFDD
 43039                           plusw2	equ	0xFDB
 43040                           fsr2h	equ	0xFDA
 43041                           fsr2l	equ	0xFD9
 43042                           status	equ	0xFD8
 43043                           
 43044                           	psect	text224
 43045  000000                     __ptext224:
 43046                           	opt stack 0
 43047                           tosu	equ	0xFFF
 43048                           tosh	equ	0xFFE
 43049                           tosl	equ	0xFFD
 43050                           pclatu	equ	0xFFB
 43051                           pclath	equ	0xFFA
 43052                           tblptru	equ	0xFF8
 43053                           tblptrh	equ	0xFF7
 43054                           tblptrl	equ	0xFF6
 43055                           tablat	equ	0xFF5
 43056                           prodh	equ	0xFF4
 43057                           prodl	equ	0xFF3
 43058                           intcon	equ	0xFF2
 43059                           intcon2	equ	0xFF1
 43060                           intcon3	equ	0xFF0
 43061                           indf0	equ	0xFEF
 43062                           postinc0	equ	0xFEE
 43063                           plusw0	equ	0xFEB
 43064                           fsr0h	equ	0xFEA
 43065                           fsr0l	equ	0xFE9
 43066                           wreg	equ	0xFE8
 43067                           postinc1	equ	0xFE6
 43068                           postdec1	equ	0xFE5
 43069                           plusw1	equ	0xFE3
 43070                           fsr1h	equ	0xFE2
 43071                           fsr1l	equ	0xFE1
 43072                           indf2	equ	0xFDF
 43073                           postinc2	equ	0xFDE
 43074                           postdec2	equ	0xFDD
 43075                           plusw2	equ	0xFDB
 43076                           fsr2h	equ	0xFDA
 43077                           fsr2l	equ	0xFD9
 43078                           status	equ	0xFD8
 43079                           
 43080                           	psect	rparam
 43081  0000                     tosu	equ	0xFFF
 43082                           tosh	equ	0xFFE
 43083                           tosl	equ	0xFFD
 43084                           pclatu	equ	0xFFB
 43085                           pclath	equ	0xFFA
 43086                           tblptru	equ	0xFF8
 43087                           tblptrh	equ	0xFF7
 43088                           tblptrl	equ	0xFF6
 43089                           tablat	equ	0xFF5
 43090                           prodh	equ	0xFF4
 43091                           prodl	equ	0xFF3
 43092                           intcon	equ	0xFF2
 43093                           intcon2	equ	0xFF1
 43094                           intcon3	equ	0xFF0
 43095                           indf0	equ	0xFEF
 43096                           postinc0	equ	0xFEE
 43097                           plusw0	equ	0xFEB
 43098                           fsr0h	equ	0xFEA
 43099                           fsr0l	equ	0xFE9
 43100                           wreg	equ	0xFE8
 43101                           postinc1	equ	0xFE6
 43102                           postdec1	equ	0xFE5
 43103                           plusw1	equ	0xFE3
 43104                           fsr1h	equ	0xFE2
 43105                           fsr1l	equ	0xFE1
 43106                           indf2	equ	0xFDF
 43107                           postinc2	equ	0xFDE
 43108                           postdec2	equ	0xFDD
 43109                           plusw2	equ	0xFDB
 43110                           fsr2h	equ	0xFDA
 43111                           fsr2l	equ	0xFD9
 43112                           status	equ	0xFD8
 43113                           
 43114                           	psect	temp
 43115  000048                     btemp:
 43116                           	opt stack 0
 43117  000048                     	ds	12
 43118  0000                     wtemp0	set	btemp
 43119  0000                     wtemp1	set	btemp+2
 43120  0000                     wtemp2	set	btemp+4
 43121  0000                     wtemp3	set	btemp+6
 43122  0000                     wtemp4	set	btemp+8
 43123  0000                     wtemp5	set	btemp+10
 43124  0000                     wtemp6	set	btemp+1
 43125  0000                     ttemp0	set	btemp
 43126  0000                     ttemp1	set	btemp+3
 43127  0000                     ttemp2	set	btemp+6
 43128  0000                     ttemp3	set	btemp+9
 43129  0000                     ltemp0	set	btemp
 43130  0000                     ltemp1	set	btemp+4
 43131  0000                     ltemp2	set	btemp+8
 43132                           tosu	equ	0xFFF
 43133                           tosh	equ	0xFFE
 43134                           tosl	equ	0xFFD
 43135                           pclatu	equ	0xFFB
 43136                           pclath	equ	0xFFA
 43137                           tblptru	equ	0xFF8
 43138                           tblptrh	equ	0xFF7
 43139                           tblptrl	equ	0xFF6
 43140                           tablat	equ	0xFF5
 43141                           prodh	equ	0xFF4
 43142                           prodl	equ	0xFF3
 43143                           intcon	equ	0xFF2
 43144                           intcon2	equ	0xFF1
 43145                           intcon3	equ	0xFF0
 43146                           indf0	equ	0xFEF
 43147                           postinc0	equ	0xFEE
 43148                           plusw0	equ	0xFEB
 43149                           fsr0h	equ	0xFEA
 43150                           fsr0l	equ	0xFE9
 43151                           wreg	equ	0xFE8
 43152                           postinc1	equ	0xFE6
 43153                           postdec1	equ	0xFE5
 43154                           plusw1	equ	0xFE3
 43155                           fsr1h	equ	0xFE2
 43156                           fsr1l	equ	0xFE1
 43157                           indf2	equ	0xFDF
 43158                           postinc2	equ	0xFDE
 43159                           postdec2	equ	0xFDD
 43160                           plusw2	equ	0xFDB
 43161                           fsr2h	equ	0xFDA
 43162                           fsr2l	equ	0xFD9
 43163                           status	equ	0xFD8


Data Sizes:
    Strings     29
    Constant    408
    Data        60
    BSS         1290
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     59      75
    BANK0           160    155     156
    BANK1           256    105     251
    BANK2           256      0     247
    BANK3           256      0     192
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxData@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1236$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), STR_3(CODE[6]), appSKey(BANK3[16]), 
		 -> nwkSKey(BANK3[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), 
		 -> loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), DefaultChannels433(CODE[42]), 
		 -> DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), STR_3(CODE[6]), appSKey(BANK3[16]), 
		 -> nwkSKey(BANK3[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), 
		 -> loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), DefaultChannels433(CODE[42]), 
		 -> DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), 
		 -> NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), Absolute function(), DIO2_ISR_Lora(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), DIO1_ISR_Lora(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), DIO0_ISR_Lora(), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> STR_3(CODE[6]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(2) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 6
		 -> STR_3(CODE[6]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK3[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK3[16]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 6
		 -> STR_3(CODE[6]), NULL(NULL[0]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK0[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    S1236$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1236$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S567$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S567$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S345$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _printf->_putch
    _putch->_EUSART1_Write
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_DIO2->_RADIO_FHSSChangeChannel
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteNewChannel
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _UpdateReceiveDelays->___wmul
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_RADIO_WriteConfiguration
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_RADIO_WriteConfiguration
    _RADIO_WriteConfiguration->___lmul
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->___lmul
    ___lmul->_SwTimerReadValue
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0 6891456
                                            153 BANK0      2     2      0
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
                       _LORAWAN_Send
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                  _SYSTEM_Initialize
            _TMR5_HasOverflowOccured
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     268
                                              2 BANK0      5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR5_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1933
                     _ADC_Initialize
                    _CCP5_Initialize
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     333
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 6093343
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2366018
                                            122 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  156134
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  693430
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  508445
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  158447
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    9521
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1    9964
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  327333
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  166277
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                             _RxData *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           3     3      0    9960
                                              5 BANK0      3     3      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36563
                                             26 BANK0      3     3      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  554668
                                            107 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  518077
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26569
                                             25 BANK0      1     1      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 3106191
                                            149 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9827
                                              4 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  217228
                                            131 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1094645
                                            147 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              7     6      1     549
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1576601
                                            147 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  492335
                                             98 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  326528
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1067995
                                            122 BANK0     25    25      0
                                            102 BANK1      3     0      3
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                             _RxData *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9382
                                             58 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1    9419
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                         9     7      2   25173
                                             70 BANK0      9     7      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9673
                                             58 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  168115
     _LORAWAN_EnterContinuousReceive
                             _RxData *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   27672
                                             80 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2    1745
                                              7 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  1     1      0    1542
                                              6 BANK0      1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1480
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               9     7      2    7473
                                             70 BANK0      9     7      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     478
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                   10     8      2   13487
                                             70 BANK0     10     8      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     684
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              2 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     405
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     405
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     628
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2489
                                              4 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     962
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                      10     8      2    3388
                                             15 BANK0     10     8      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRate                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  5     3      2     302
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _UpdateCurrentDataRate                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2075
                                             12 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      8     3      5    1805
                                              4 BANK0      8     3      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Send                                         7     3      4  327333
                                            115 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                              8 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (2) _AssemblePacket                                      12     7      5  158326
                                            103 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _IncludeMacCommandsResponse                          15    10      5    2532
                                              0 BANK0     15    10      5
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (4) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FindSmallestDataRate                                 4     4      0     455
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _EncryptFRMPayload                                   24    10     14   46483
                                             49 BANK0     24    10     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _AssembleEncryptionBlock                              9     2      7   20074
                                             11 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _CountfOptsLength                                     8     8      0     198
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          12     8      4   14693
                                             11 BANK0     12     8      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   39374
                                             49 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   18513
                                             11 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  207596
                                            131 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      40    38      2  185180
                                             91 BANK0     40    38      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                             _RxData *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             49 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  163264
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _RxData                                               4     0      4    4851
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReceiveStop                                    0     0      0   15915
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  126952
                                             81 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   15546
                                             19 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  263894
                                            123 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SelectChannelForTransmission                         3     3      0   23204
                                             91 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (3) _SearchAvailableChannel                              12     9      3    7600
                                             79 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (3) _ConfigureRadioTx                                     6     2      4   15406
                                             19 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetOutputPower                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetIQInverted                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetCRC                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadio                                       5     1      4   15110
                                             14 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetModulation                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFSKSyncWord                                 3     1      2   14167
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetChannelFrequency                            4     0      4     321
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetBandwidth                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Transmit                                      17    14      3  128079
                                             81 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteConfiguration                            11     9      2   91386
                                             70 BANK0     11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _RADIO_WritePower                                     3     3      0   10383
                                              4 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15890
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKBitRate                                8     4      4   15887
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                             11    11      0  108927
                                            112 BANK0     11    11      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _Random                                               2     0      2    6391
                                             77 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 2     0      2    5712
                                             70 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     440
                                             72 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   84335
                                            103 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _AESCmac                                            116   109      7   69611
                                             89 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _GenerateSubkey                                      40    34      6   27112
                                             49 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (5) _FillSubKey                                           8     3      5    1539
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _AESEncodeLoRa                                       20    16      4   20630
                                             29 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _AESEncode                                           24    20      4    4744
                                              6 BANK0     23    19      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (6) _EncodeShiftRow                                       3     1      2     984
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EncKeySchedule                                       6     4      2    1164
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  176370
                                             82 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             18 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   26607
                                             12 BANK0      6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0  100781
                                             81 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   46235
                                             25 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteMode                                      7     5      2   15915
                                              5 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterRead                                   2     2      0     130
                                              2 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (4) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFrequency                                12     8      4   16640
                                             13 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     440
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterWrite                                  2     1      1    9796
                                              2 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALSPISend                                           1     1      0      62
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI2_Exchange8bit                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     702
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _SystemBlockingWaitMs                                 5     1      4     658
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          11     9      2   15427
                                             70 BANK0     11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    5712
                                             58 BANK0     12     4      8
                   _SwTimerReadValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    5857
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _SwTimerStop                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SwTimerStart                                         9     9      0    1591
                                             49 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (4) _TMR_OverrideRemaining                               10     6      4     972
                                             10 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (5) _TMR_SwapTimer                                        2     0      2     707
                                              8 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     401
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _SwTimersInterrupt                                   17    13      4     458
                                             32 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (5) _TMR_GetDeltaTime                                    24    20      4     102
                                              8 BANK0     24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_ReadTimer                                       8     6      2     102
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetTimeout                                    9     5      4    1934
                                             13 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   17635
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   17635
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    3569
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6   13936
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     713
                                             51 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     713
                      _TMR1_CallBack
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     573
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        2     2      0     573
                                             49 COMRAM     2     2      0
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     257
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     316
                                             32 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 24    20      4      69
                                              8 COMRAM    24    20      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _rand
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               ___awdiv
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxData *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_Send
     _AssemblePacket
       _AESCmac
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _GenerateSubkey
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _FillSubKey
           _memset
         _memcpy
         _memset
       _AssembleEncryptionBlock
         _memcpy
         _memset
       _CountfOptsLength
       _EncryptFRMPayload
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _AssembleEncryptionBlock
           _memcpy
           _memset
         ___awdiv
       _FindSmallestDataRate
       _IncludeMacCommandsResponse
         _RADIO_GetPacketSnr
       _memcpy
       _memset
     _LORAWAN_GetMaxPayloadSize
       _CountfOptsLength
     _RADIO_ReceiveStop
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR5_Initialize
   _TMR5_HasOverflowOccured
   _printf
     _putch
       _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F7       9       96.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9B      9C       5       97.5%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3B      4B       1       90.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     479      12        0.0%
DATA                 0      0     699       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Aug 18 15:35:04 2020

                                        ??_LORAWAN_TxDone 00BD  
                              __end_of_DIO3_ISR_Lora_Init 8DA6  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 0040  
                                          HALSPISend@data 0061  
                         __end_of_ValidateChannelMaskCntl 892C  
                                                      l41 225A  
                                                      l50 2378  
                                                      l43 2308  
                                                      l52 239A  
                                                      l44 22CE  
                                                      l61 251E  
                                                      l53 23AE  
                                                      l45 2286  
                                                      l70 5584  
                                                      l54 23BE  
                                                      l80 79A4  
                                                      l72 55D8  
                                                      l56 24D6  
                                                      l48 2346  
                                                      l57 242A  
                                                      l74 5600  
                                                      l58 2438  
                                                      l68 555C  
                                                      l79 79EC  
                                            ___awdiv@sign 0065  
                         __size_of_UpdateJoinSuccessState 013E  
                                     ___wmul@multiplicand 0062  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 7D92  
                                   __end_of_AESEncodeLoRa 8440  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0060  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 00C2  
                                                     l303 2916  
                                                     l240 70B6  
                                                     l216 48EE  
                                                     l144 8AC8  
                                                     l400 5EC8  
                                                     l320 2ADE  
                                                     l312 2A86  
                                                     l217 4980  
                                                     l226 7FE0  
                                                     l234 8586  
                                                     l402 5F00  
                                                     l330 3624  
                                                     l322 2AE8  
                                                     l314 2A90  
                                                     l306 2950  
                                                     l235 8568  
                                                     l323 2C10  
                                                     l244 70B8  
                                                     l260 6ED6  
                                                     l332 362E  
                                                     l316 2AB2  
                                                     l309 29B6  
                                                     l501 3A4A  
                                                     l318 2ABC  
                                                     l502 3A64  
                                                     l503 3AD0  
                                                     l432 6182  
                                                     l504 3AE8  
                                                     l520 3C6A  
                                                     l441 4734  
                                                     l433 6190  
                                                     l513 3C4C  
                                                     l505 3AFA  
                                                     l442 474A  
                                                     l426 6172  
                                                     l506 3B26  
                                                     l530 3DAC  
                                                     l522 3C82  
                                                     l610 6FD4  
                                                     l602 8342  
                                                     l274 63C0  
                                                     l283 5D00  
                                                     l435 619E  
                                                     l427 6122  
                                                     l515 3BD6  
                                                     l507 3B0C  
                                                     l531 3E7C  
                                                     l523 3C98  
                                                     l611 6FDA  
                                                     l275 62F0  
                                                     l284 5C3E  
                                                     l444 477E  
                                                     l436 61CA  
                                                     l428 6130  
                                                     l460 15BE  
                                                     l524 3CA4  
                                                     l620 701E  
                                                     l437 61D2  
                                                     l429 6162  
                                                     l461 15E6  
                                                     l533 3E06  
                                                     l525 3CD2  
                                                     l613 7026  
                                                     l286 5C9A  
                                                     l462 161E  
                                                     l526 3CFE  
                                                     l614 6FF4  
                                                     l278 63BC  
                                                     l391 5E50  
                                                     l455 18EC  
                                                     l471 1744  
                                                     l463 1676  
                                                     l527 3D20  
                                                     l543 6486  
                                                     l615 7006  
                                                     l607 6FE2  
                                                     l631 7FCE  
                                                     l288 5CFE  
                                                     l480 18C6  
                                                     l464 16C4  
                                                     l456 1664  
                                                     l560 6BBE  
                                                     l608 6FCE  
                                                     l640 7D6C  
                                                     l393 5E98  
                                                     l481 18DE  
                                                     l457 1632  
                                                     l529 3D3A  
                                                     l561 6BD4  
                                                     l617 7016  
                                                     l625 7FBC  
                                                     l394 5E7A  
                                                     l474 1764  
                                                     l458 1596  
                                                     l554 6B7E  
                                                     l546 6454  
                                                     l626 7FA8  
                                                     l395 5E86  
                                                     l387 5E36  
                                                     l483 1962  
                                                     l459 164A  
                                                     l555 6B60  
                                                     l547 6436  
                                                     l571 5A5E  
                                                     l484 1994  
                                                     l476 1844  
                                                     l804 8546  
                                                     l580 5806  
                                                     l628 7FAE  
                                                     l644 7D72  
                                                     l485 1974  
                                                     l469 16C8  
                                                     l557 6BBC  
                                                     l549 648A  
                                                     l629 7FB4  
                                             ?_RADIO_Init 0079  
                                                     l398 5ED2  
                                                     l478 1890  
                                                     l558 6BB6  
                                                     l399 5EC4  
                                                     l487 19B8  
                                                     l479 189C  
                                                     l639 7D7A  
                                                     l488 19C4  
                                                     l673 6E14  
                                                     l682 8094  
                                                     l499 3A32  
                                                     l596 848A  
                                                     l685 80A6  
                                                     l679 8404  
                                                     l970 7A12  
                                                     l975 4572  
                                         ??_UpdateTxPower 0060  
                                                     l969 7A0E  
                                                     l999 7C52  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 772C  
                   __size_of_SelectChannelForTransmission 006C  
                            _SelectChannelForTransmission 76C0  
                                  _ExecuteRxParamSetupReq 3E88  
                                      _RADIO_Transmit$772 00B8  
                                      _RADIO_Transmit$774 00BC  
                                      _DIO2_ISR_Lora_Init 8BE0  
                                      __size_of_AESEncode 034A  
                                         _timer1ReloadVal 01F3  
                                         ?_EncKeySchedule 0060  
                                   _RADIO_SetLoRaSyncWord 8D38  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                              _TXSTA1bits 000FAC  
                                         __end_of_AESCmac 259A  
                                 __end_of_SwTimersExecute 63CC  
                                  SystemBlockingWaitMs@ms 0060  
                                 LORAWAN_Join@bufferIndex 00DB  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0060  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 00B2  
                            __end_of_FindSmallestDataRate 658E  
                     __end_of_RADIO_SetFrequencyHopPeriod 8D2E  
                             _RADIO_SetFrequencyHopPeriod 8D24  
                                              _CheckFlags 7B76  
                                         _CCP5_Initialize 8C10  
                                  ?_TMR_OverrideRemaining 006A  
                                           _INT1_CallBack 8A0C  
                                ?_AssembleEncryptionBlock 006B  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0064  
                                      __size_of_IOCB4_ISR 0020  
                                                    l1001 7C82  
                                                    l1100 7E7A  
                                                    l1101 7E86  
                                                    l1110 345E  
                                                    l1031 0FF8  
                                                    l1032 11D4  
                                                    l1112 3502  
                                                    l1120 38AC  
                                                    l2000 3188  
                                                    l1201 7192  
                                                    l1041 12E8  
                                                    l1105 3478  
                                                    l2001 3212  
                                                    l1042 1308  
                                                    l1034 113E  
                                                    l1106 32F4  
                                                    l1130 3A12  
                                                    l1051 14AA  
                                                    l1043 1386  
                                                    l1107 3346  
                                                    l1211 54CC  
                                                    l1123 38EA  
                                                    l1028 1476  
                                                    l1044 145E  
                                                    l2020 1FA6  
                                                    l1108 3384  
                                                    l1212 53F2  
                                                    l1124 3A16  
                                                    l2100 8300  
                                                    l1037 11E2  
                                                    l1029 0EDA  
                                                    l1221 4FDC  
                                                    l1213 5460  
                                                    l1125 39AE  
                                                    l1206 721C  
                                                    l1142 58CA  
                                                    l1046 13EA  
                                                    l2030 205A  
                                                    l2014 1EBC  
                                                    l1222 50BC  
                                                    l1214 54C8  
                                                    l1126 39A0  
                                                    l1134 3F56  
                                                    l1143 5996  
                                                    l2031 20E4  
                                                    l2015 1EC6  
                                                    l1223 4FE2  
                                                    l1135 3F96  
                                                    l1071 2892  
                                                    l1063 25E0  
                                                    l1152 59B2  
                                                    l1144 58D0  
                                                    l2120 7426  
                                                    l2024 1FAC  
                                                    l1224 5050  
                                                    l1232 8B16  
                                                    l1136 3FD6  
                                                    l1160 40BA  
                                                    l1072 2718  
                                                    l2113 7B8C  
                                                    l2033 214C  
                                                    l2025 1FBA  
                                                    l2017 1FAA  
                                                    l1225 50B8  
                                                    l1241 792E  
                                                    l1129 3A04  
                                                    l1137 4092  
                                                    l1057 28CA  
                                                    l1073 26E0  
                                                    l1154 59CC  
                                                    l1146 5990  
                                                    l2114 7BA2  
                                                    l2130 69A4  
                                                    l2050 1A8C  
                                                    l2026 1FDC  
                                                    l2018 1F62  
                                                    l1162 4270  
                                                    l1066 2698  
                                                    l1058 25D6  
                                                    l1306 2F44  
                                                    l1155 59D0  
                                                    l2115 7BB8  
                                                    l2131 68F6  
                                                    l2051 1AFA  
                                                    l1067 2660  
                                                    l1059 25C4  
                                                    l1148 5992  
                                                    l2124 7440  
                                                    l2044 1E26  
                                                    l2060 1CE2  
                                                    l2052 1B40  
                                                    l1092 86FA  
                                                    l1236 7900  
                                                    l1164 427E  
                                                    l2037 49E8  
                                                    l2045 19F6  
                                                    l2029 1FEE  
                                                    l1253 8860  
                                                    l1181 4C2A  
                                                    l1077 2818  
                                                    l1502 6D9A  
                                                    l2126 7456  
                                                    l2134 69A2  
                                                    l2150 4390  
                                                    l2054 1E24  
                                                    l1182 4B32  
                                                    l1078 2720  
                                                    l2039 4A3E  
                                                    l2127 746A  
                                                    l2151 42B6  
                                                    l2055 1B88  
                                                    l1247 80EC  
                                                    l1183 4C26  
                                                    l1079 2814  
                                                    l1168 6D1C  
                                                    l2152 42FC  
                                                    l2064 1D02  
                                                    l2056 1BF6  
                                                    l1272 7B72  
                                                    l1088 8B2E  
                                                    l1176 8A5A  
                                                    l2081 656C  
                                                    l2049 1DE8  
                                                    l2065 1D70  
                                                    l2057 1C3C  
                                                    l1281 767C  
                                                    l1273 7B32  
                                                    l2058 1C82  
                                                    l1530 68DC  
                                                    l1522 6838  
                                                    l1290 76A4  
                                                    l1282 7672  
                                                    l2139 6096  
                                                    l2067 1DB8  
                                                    l2059 1C86  
                                                    l1283 7664  
                                                    l1275 7B5C  
                                                    l1259 8928  
                                                    l3140 81CE  
                                                    l1188 7726  
                                                    l2156 4450  
                                                    l2076 64CA  
                                                    l2068 1DC2  
                                                    l1524 6860  
                                                    l2157 43E4  
                                                    l2085 6588  
                                                    l2077 654A  
                                                    l1525 6870  
                                                    l2190 8BC8  
                                                    l2078 64D0  
                                                    l3143 81EE  
                                                    l2079 6548  
                                                    l1287 76B6  
                                                    l3160 85A0  
                                                    l3080 73CC  
                                                    l3144 81F8  
                                                    l1288 7688  
                                                    l3153 7B04  
                                                    l3081 73DA  
                                                    l1289 7698  
                                                    l2089 74D6  
                                                    l1801 6730  
                                                    l3154 7ACA  
                                                    l3090 7846  
                                                    l1810 6740  
                                                    l3091 7854  
                                                    l3139 81D6  
                                                    l3076 7398  
                                                    l2437 8980  
                                                    l3077 738C  
                                                    l1901 0CC4  
                                                    l3086 781E  
                                                    l1902 025C  
                                                    l2710 67BE  
                   RADIO_WriteConfiguration@symbolTimeout 00A6  
                                                    l3159 85B2  
                                                    l3087 7812  
                                                    l2711 67EE  
                                                    l1920 03EE  
                                                    l1904 00BC  
                                                    l1921 04AA  
                                                    l1913 01B2  
                                                    l1905 010A  
                                                    l1825 4E06  
                                                    l1922 0492  
                                                    l1906 010E  
                                                    l2722 84E8  
                                                    l1915 0CBE  
                                                    l1931 0592  
                                                    l2723 84E2  
                                                    l1780 52C6  
                                                    l2900 72C0  
                                                    l1908 01A0  
                                                    l2901 72CA  
                                                    l1941 08E6  
                                                    l1933 05A4  
                                                    l2902 72D8  
                                                    l1950 096E  
                                                    l1942 08CE  
                                                    l1918 06AE  
                                                    l1934 0652  
                                                    l1926 04DA  
                                                    l2750 7884  
                                                    l1927 051E  
                                                    l1919 02DE  
                                                    l1847 5C12  
                                                    l1880 6000  
                                                    l1960 0C18  
                                                    l1952 0980  
                                                    l2752 789A  
                                                    l2737 7CF6  
                                                    l1785 532C  
                                                    l1777 52D8  
                                                    l1961 0C12  
                                                    l1953 09D6  
                                                    l1937 06F4  
                                                    l1929 0576  
                                                    l2753 7894  
                                                    l2738 7D0A  
                                                    l1778 52CA  
                                                    l1954 09E4  
                                                    l1779 5296  
                                                    l1955 0B48  
                                                    l1947 0926  
                                                    l1939 0810  
                                                    l1980 0D02  
                                                    l1956 0AB2  
                                                    l1948 0942  
                                                    l2756 78BA  
                                                    l1796 6A98  
                                                    l1877 6004  
                                                    l2757 78C2  
                                                    l2749 787A  
                                                    l1878 5F2A  
                                                    l1990 2F5E  
                                                    l1974 0CA2  
                                                    l1966 0C0C  
                                                    l1958 0B42  
                                                    l1798 6B1C  
                                                    l1879 5F98  
                                                    l1991 31B6  
                                                    l1975 0CA6  
                                                    l1984 7A8C  
                                                    l1992 30EE  
                                                    l1985 7AB2  
                                                    l1993 31F2  
                                                    l1994 3104  
                                                    l1995 311A  
                                                    l1996 3130  
                                                    l2893 7272  
                                                    l1997 3146  
                                                    l2894 7282  
                                                    l1998 315C  
                                                    l1999 3172  
                                                    l2896 72A0  
                                                    l2897 7298  
                                                    STR_1 FFEE  
                                                    STR_2 FFE1  
                                                    STR_3 FFF8  
                                        _RADIO_WritePower 6106  
                            ??_LORAWAN_SetChannelIdStatus 0065  
                                 _PrepareJoinRequestFrame 4992  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                            ?_RADIO_Reset 0001  
                              __size_of_RADIO_ReceiveStop 0020  
                                                    _TMR1 000FCE  
                                                    _TMR5 000F4F  
                                       ??_UpdateDutyCycle 0062  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0062  
                                           _INT2_CallBack 89EC  
                                           _EUSART1_Write 8C3E  
                                ??_InitDefault433Channels 006B  
                                ExecuteNewChannel@drRange 00AA  
                                                    _data 0100  
                                      _PrepareSessionKeys 6BDA  
                                                    _loRa 0200  
                                                    _main 6744  
                                                    _rand 7BD4  
                          __end_of_UpdateMinMaxChDataRate 6012  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr2h 000FDA  
                                                    fsr0l 000FE9  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 0238  
                                                    btemp 0048  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 0052  
                                           ComputeMic@mic 00CC  
                                           ComputeMic@key 00C7  
                               __end_of_LORAWAN_RxTimeout 28FE  
                               __size_of_ConfigureRadioRx 002A  
                               __size_of_ConfigureRadioTx 0052  
                       __size_of_INT2_SetInterruptHandler 000A  
                           __end_of_StopAllSoftwareTimers 7F34  
                               ?_INT2_SetInterruptHandler 0060  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 007E  
                                         _timer5ReloadVal 01EB  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 69B4  
                                   ExecuteLinkAdr@txPower 0075  
                                     __size_of_HALSPISend 000E  
                              ??_TMR1_SetInterruptHandler 0062  
                              EnableChannels1@channelMask 0064  
                                        ??_AssemblePacket 00CC  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006B  
                                  __size_of_TMR_SwapTimer 004A  
                              __end_of_RADIO_GetPacketSnr 8D6A  
                                            ___param_bank 000000  
                                              _GetRx1Freq 8B9A  
                              __size_of_RADIO_ReleaseData 0006  
                                    ??_DIO2_ISR_Lora_Init 0062  
                         __end_of_CreateAllSoftwareTimers 7F86  
                  SearchAvailableChannel@transmissionType 00AF  
                         __size_of_HALResetPinOutputValue 001A  
                                   MacExecuteCommands@ptr 00B6  
                                   _RADIO_WriteFSKBitRate 7796  
                                __size_of_SystemTimerInit 0008  
                                        __end_of_INT1_ISR 8D64  
                                        __end_of_INT2_ISR 8D5C  
                          __size_of_OSCILLATOR_Initialize 000E  
                                  ExecuteLinkAdr@dataRate 0078  
                           __end_of_OSCILLATOR_Initialize 8C68  
                      __size_of_LORAWAN_LinkCheckCallback 016C  
                                                   l14003 23B6  
                                         __end_of___abdiv 78CC  
                                                   l13127 290E  
                                                   l13155 29AE  
                                                   l13139 2948  
                                                   l14019 2430  
                                                   l13069 7ACA  
                                                   l13087 7FFA  
                                                   l14039 2516  
                                                   l13281 85A0  
                                                   l13195 2C08  
                                                   l13611 55F8  
                                                   l15203 5750  
                                                   l14405 42F4  
                                                   l14245 7B2A  
                                                   l15053 6728  
                                                   l11933 8C42  
                                                   l15057 6738  
                                                   l15049 671A  
                                                   l15149 6860  
                                                   l15333 319E  
                                                   l15069 40B2  
                                                   l14447 69B0  
                                                   l16303 2DF2  
                                                   l13593 557C  
                                                   l15513 0576  
                                                   l16401 5B9C  
                                                   l16235 7214  
                                                   l16219 718A  
                                                   l16331 6A9A  
                                                   l16411 5BCC  
                                                   l16315 2EA0  
                                                   l14901 1F62  
                                                   l16405 5BA2  
                                                   l16421 5C0E  
                                                   l15197 56B4  
                                                   l16431 75A6  
                                                   l14913 1FA4  
                                                   l15625 0926  
                                                   l15491 04DA  
                                                   l16371 4D6A  
                                                   l16355 4CD8  
                                                   l16349 4CBA  
                                                   l16365 4D0C  
                                                   l16293 2D3C  
                                                   l16285 2C80  
                                                   l13983 233E  
                                                   l13895 60BA  
                                                   l15751 0C9C  
                                                   l15647 096E  
                                                   l16295 2D56  
                                                   l16713 4A36  
                                                   l16559 6E0C  
                                                   l14899 1F5E  
                                                   l15893 11DA  
                                                   l16699 49E0  
                                                   ?_main 0001  
                                                   ?_rand 00A6  
                                         __end_of___awdiv 72E2  
                                              _FillSubKey 7994  
                       __end_of_IOCB4_SetInterruptHandler 8CA2  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 73EC  
                                         RADIO_Transmit@i 00C1  
                                                   u20200 4A2C  
                                                   u20220 4A82  
                                         ___awdiv@divisor 0062  
                                                   u20125 844E  
                                                   u20055 6FB0  
                                                   u20160 6E46  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 7866  
                                       ??_EnableChannels1 0069  
                                                   u15101 5502  
                                                   u14400 2942  
                                                   u15200 165E  
                                                   u13600 8C7E  
                                                   _LATC2 007C5A  
                                                   u14330 7AEC  
                                                   u15130 55B0  
                                    RxJoinResponse@status 0001  
                                                   u22067 67E0  
                                                   _LATD3 007C63  
                                                   u14500 2C3C  
                                                   u14420 2994  
                                                   u22077 8570  
                                                   u15205 1654  
                                                   u14350 8C8A  
                                                   u15230 16AE  
                                                   u15080 81DA  
                       __end_of_AckRetransmissionCallback 5C18  
                  SearchAvailableChannel@randomNumberCopy 00B6  
                                                   u14337 7AE2  
                                                   u15305 177E  
                                                   u14610 79E8  
                                                   u15250 16BE  
                                                   u14620 79EA  
                                                   u14550 739C  
                                                   u16150 7B6E  
                                                   u16070 86EE  
                                                   u14640 6F1C  
                                                   u14480 2BF6  
                                                   u15280 1716  
                                                   u16240 59A4  
                                                   u16080 86F6  
                                                   _T5CON 000F4E  
                                                   u18001 02B6  
                                                   u16410 436E  
                                                   u16330 6556  
                                                   u14580 7822  
                                                   u14820 5EF4  
                                                   u15620 226C  
                                                   u16260 59B8  
                                                   u16420 438E  
                                                   u15460 885C  
                                                   u15605 223C  
                                                   u15710 2404  
                                                   u15630 226E  
                                                   u18030 03DE  
                                                   u16600 1CCA  
                                                   u16520 1A8A  
                                                   u18200 06D8  
                                                   u16417 4364  
                                                   u15730 249E  
                                                   u14930 70E8  
                                                   u15570 72A4  
                                                   u16450 4432  
                                                   u16370 6580  
                                                   u17180 1FD0  
                                                   u18220 07F4  
                                                   u21788 63A8  
                                                   u21789 63BA  
                                                   u14950 7110  
                                                   u16630 1E32  
                                                   u17318 8522  
                                                   u18118 04FA  
                                          __CFG_DEBUG$OFF 000000  
                                                   u18119 050E  
                                                   u15760 2564  
                                                   u16720 3B9C  
                                                   u16480 6964  
                                                   u17360 4284  
                                                   u16457 4428  
                                                   u15690 23B2  
                                                   u14970 7136  
                                                   u15850 3DCC  
                                                   u19050 138A  
                                                   u16490 69B0  
                                                   u15930 792A  
                                                   u18170 05E4  
                                                   u17610 566C  
                                                   u15835 3D5A  
                                                   u16804 7E6A  
                                                   u18148 0552  
                                                   u16805 7E64  
                                                   u18149 0566  
                                                   u19070 13B2  
                                                   u18078 046E  
                                                   u16735 3BC4  
                                                   u17455 4C4E  
                                                   u18079 0482  
                                                   u19128 1496  
                                                   u19400 57DC  
                                                   u15960 80E6  
                                                   u18360 0A18  
                                                   u17288 6706  
                                                   u16745 3BE8  
                                                   u15865 3DF4  
                                                   u17625 56A4  
                                                   u19410 5844  
                                                   u18530 0C68  
                                                   u15875 3E18  
                                                   u17635 56C6  
                                                   u19148 14CA  
                                                   u17740 748A  
                                                   u18460 0BD6  
                                                   u18428 0BB0  
                                                   u19180 78A8  
                                                   u19260 640E  
                                                   u19340 5A1C  
                                                   u19085 13D8  
                                                   u19405 57D0  
                                                   u18429 0BC4  
                                                   u16950 387C  
                                                   u18278 089E  
                                                   u18198 068A  
                                                   u19350 5A34  
                                                   u19095 13FC  
                                                   u19415 5838  
                                                   u18279 08B2  
                                                   u18199 069E  
                                                   u17680 7422  
                                                   u17920 017E  
                                                   u19360 5A9C  
                                                   u16778 7556  
                                                   u17658 575E  
                                                   u17595 7600  
                                                   u19355 5A28  
                                                   u17659 5772  
                                                   u17860 323A  
                                                   u18708 2684  
                                                   u19365 5A90  
                                                   u19390 57C4  
                                                   u17950 019A  
                                                   u19560 52F2  
                                                   u18905 0E22  
                                                   u18825 2834  
                                                   u17778 74BE  
                                                   u18498 0C44  
                                                   u18915 0F14  
                                                   u17779 74D2  
                                                   u18499 0C58  
                                                   u18588 0CEE  
                                                   u17980 0278  
                                                   u19660 2E4A  
                                                   u18925 0F98  
                                                   u18685 260C  
                                                   u19805 4D5A  
                                                   u18950 10F6  
                                                   u18598 0D18  
                                                   u18758 2704  
                                                   u19750 4CE6  
                                                   u19575 531A  
                                                   u19815 4D7C  
                                                   u18960 1114  
                                                   u18848 28B6  
                                                   u19585 533E  
                                                   u18970 1174  
                                                   u19675 2E90  
                                                   u18868 28EA  
                                                   u18965 110A  
                                                   u19685 2EBA  
                                                   u19790 4D22  
                                                   u19918 5BC6  
                                                   u18975 1168  
                                                   u18895 0D9E  
                                         __end_of___lwmod 8202  
                                                   u19890 5B96  
                                                   u19958 5BFA  
                                                   i2l216 4EEE  
                                                   i2l217 4F6A  
                                                   i2l226 8296  
                                                   u19998 75CA  
                                                   u19999 75DE  
                                                   i2l283 5DFE  
                                                   i2l284 5D3C  
                                                   i2l286 5D98  
                                                   i2l288 5DFC  
                                           ?_RADIO_RxDone 0001  
                                         ___awdiv@counter 0064  
                             __size_of_RADIO_ReceiveStart 0230  
                     __size_of_LORAWAN_SetChannelIdStatus 005A  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR1L 000FCE  
                                                   _TMR5H 000F50  
                                                   _TMR5L 000F4F  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 002E  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 009E  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 8DA6  
                                 ?_SetReceptionNotOkState 0001  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0071  
                                        __end_of_TMR1_ISR 8B9A  
                               FindSmallestDataRate@found 0061  
                                           __CFG_WRTB$OFF 000000  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00C6  
                             __size_of_RADIO_SetBandwidth 000A  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0046  
                                                   __rcon 0046  
                                 __end_of_PIN_MANAGER_IOC 8D4C  
                            ??_IncludeMacCommandsResponse 0065  
                           __end_of_RADIO_WatchdogTimeout 80AA  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 006D  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 0018  
                                                   _randx 01E3  
                          LORAWAN_RxDone@frmPayloadLength 00F0  
                           ValidateChannelMaskCntl@result 0060  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 8C20  
                                        UpdateDataRange@i 0063  
                                LORAWAN_RxDone@joinAccept 00EE  
                                                   _putch 8C30  
                                  _UpdateJoinSuccessState 563E  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler 8CAC  
                                          ?_EUSART1_Write 0001  
                                              _ComputeMic 7932  
                                 __end_of_TMR1_Initialize 86AA  
                                  UpdateCfList@joinAccept 00A6  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                                   ltemp0 0048  
                                 RADIO_WriteFrequency@num 0075  
                                                   ltemp1 004C  
                                                   ltemp2 0050  
                          __size_of_UpdateCurrentDataRate 000A  
                          __size_of_UpdateChannelIdStatus 0166  
                              PrepareSessionKeys@appNonce 006D  
                                  UpdateChannelIdStatus@i 0063  
                           __end_of_UpdateCurrentDataRate 8CE8  
                            __size_of_RADIO_FSKPacketSent 012E  
                           __end_of_UpdateChannelIdStatus 50E2  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                                   ttemp0 0048  
                                                   ttemp1 004B  
                                                   ttemp2 004E  
                                                   ttemp3 0051  
                                UpdateFrequency@channelId 0064  
                                                   status 000FD8  
                                                   wtemp0 0048  
                                                   wtemp1 004A  
                                                   wtemp2 004C  
                                                   wtemp3 004E  
                                                   wtemp4 0050  
                                                   wtemp5 0052  
                                                   wtemp6 0049  
                                      _MacExecuteCommands 2F4E  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 00AD  
                                     __size_of_RADIO_DIO0 0090  
                                     __size_of_RADIO_DIO1 004E  
                                     __size_of_RADIO_DIO2 0056  
                                     __size_of_RADIO_DIO3 0022  
                                     __size_of_RADIO_DIO4 0032  
                                     __size_of_RADIO_DIO5 0028  
                      PrepareJoinRequestFrame@bufferIndex 00DA  
                      _EUSART1_DefaultFramingErrorHandler 000000  
                                         _TMR1_WriteTimer 896C  
                       TMR_OverrideRemaining@oldReloadVal 0072  
                                     LORAWAN_RxDone@fPort 00DF  
                                __size_of_RADIO_WriteMode 00FE  
                                       __end_of_AESEncode 2C48  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 01CA  
                        __end_of_RADIO_WriteConfiguration 19DE  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                                         _TMR5_Initialize 8A2C  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 0020  
                               RADIO_WriteMode@dioMapping 0068  
                                         __initialization 69B4  
                            __size_ofi2_SwTimersInterrupt 0100  
                                        LORAWAN_Send@port 00D3  
                             __size_of_DIO1_ISR_Lora_Init 0010  
                                     ?_MacExecuteCommands 00B0  
                                       _SPI2_Exchange8bit 8BBE  
                              __end_of_EUSART1_Initialize 8064  
                                            __end_of_main 6818  
                              AssembleEncryptionBlock@dir 0072  
                                            __end_of_rand 7C30  
                                       ?_TMR_GetDeltaTime 0068  
                                           AESCmac@padded 019A  
                                __end_of_RADIO_ReadRandom 6E76  
                                        _SetJoinFailState 8506  
                                 RADIO_WriteMode@blocking 0066  
                                    _UpdateJoinInProgress 8A9E  
                                    _ExecuteRxTimingSetup 877A  
                                       __end_of_IOCB4_ISR 89EC  
                               __size_of_UpdateDLSettings 001C  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0018  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 006C  
                                           AESCmac@output 00BB  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower 8CFC  
                                               ??_AESCmac 00C0  
                                          ??_RADIO_SetCRC 0060  
                                  MacExecuteCommands@done 00B5  
                                 InitDefault868Channels@i 006B  
                                                  ??_main 00F9  
                                                  ??_rand 00A8  
                                 __end_of_CCP5_Initialize 8C20  
                                          ??_RADIO_RxDone 00F3  
                                          ??_RADIO_TxDone 00E3  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse 8DA8  
                       __end_of_LORAWAN_LinkCheckCallback 4E10  
                          __end_of_SetReceptionNotOkState 74EC  
                             __end_of_UpdateReceiveDelays 8310  
                         __end_of_AssembleEncryptionBlock 6106  
                                __size_of_SPI2_Initialize 000E  
                                  ??_SystemBlockingWaitMs 0064  
                                        ??_StartReTxTimer 009A  
                                     ??_SPI2_Exchange8bit 0060  
                        CountfOptsLength@macCommandLength 0066  
                                      EncodeShiftRow@temp 0062  
                                ??_InitDefault868Channels 006B  
                             __size_of_RADIO_RegisterRead 0028  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 7FD4  
                                          _EnableChannels 8A66  
                               ??_PrepareJoinRequestFrame 00D0  
                                          _HALSPICSAssert 8D94  
                                    ??_MacExecuteCommands 00B3  
                                             ?_CheckFlags 0060  
                                 LORAWAN_TxDone@timeOnAir 00BB  
                                              _ExtractMic 7C8A  
                         __size_of_SearchAvailableChannel 012A  
                                                  _ADCON0 000FC2  
                                                  _ADCON1 000FC1  
                                                  _ADCON2 000FC0  
                                      ??_HALSPICSDeassert 0060  
                                  _HALResetPinOutputValue 8AB8  
                                        ___llmod@dividend 0060  
                                                  _ADRESH 000FC4  
                                                  _ADRESL 000FC3  
                                                  _CCPR5H 000F56  
                                                  _CCPR5L 000F55  
                                        ___awdiv@dividend 0060  
                                                  ?_srand 0072  
                  __end_of_LORAWAN_ReceiveWindow1Callback 6B26  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00B8  
                          _LORAWAN_ReceiveWindow1Callback 6A6E  
                                                  _ANSELA 000F38  
                                                  ?_putch 0001  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                         _ValidateTxPower 86D4  
                                                  _T1GCON 000FCC  
                                                  _T5GCON 000F4D  
                                 SwTimerReadValue@timerId 0099  
                                 TMR1_WriteTimer@timerVal 0060  
                                          _ExecuteLinkAdr 3244  
                                                  i2l1334 7DE6  
                  __end_of_LORAWAN_ReceiveWindow2Callback 6744  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00D8  
                          _LORAWAN_ReceiveWindow2Callback 666C  
                                                  i2l2292 005C  
                                                  i2l2437 8A94  
                                                  i2l2285 0038  
                                                  i2l2287 0044  
                                                  i2l2289 0050  
                           __size_of_RADIO_SetFSKSyncWord 0030  
                                                  _RCREG1 000FAE  
                                                  _RCSTA1 000FAB  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0060  
                                                  _SPBRG1 000FAF  
                        __size_of_ValidateChannelMaskCntl 0020  
                                                  _TMR5IF 007BF1  
                         __size_of_InitDefault433Channels 008A  
                                                  _TRISC2 007CA2  
                                           ?_LORAWAN_Init 00B2  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0070  
                                           ?_LORAWAN_Send 00D3  
                         __size_of_AutomaticReplyCallback 0026  
                                                  _TXREG1 000FAD  
                              __size_of_LORAWAN_RxTimeout 0364  
                                                  _TXSTA1 000FAC  
                                       ?_ExecuteDevStatus 0060  
                              __end_of_DIO0_ISR_Lora_Init 8C10  
                                __size_ofi2_TMR_SwapTimer 0044  
                                       ExecuteLinkAdr@ptr 006F  
                           __size_of_RADIO_WriteFrequency 00F0  
                                                  _STable FE49  
                             RADIO_WriteFrequency@num_mod 0071  
                                     LORAWAN_TxDone@delta 00D2  
                             __size_of_ComputeSessionKeys 0086  
                                               AESCmac@k1 017A  
                                               AESCmac@k2 016A  
                               __end_of_SPI2_Exchange8bit 8BD0  
                                     LORAWAN_TxDone@found 00D1  
                                         _CheckMcastFlags 73EC  
                                     LORAWAN_TxDone@minim 00DE  
                                      ??_ExecuteDevStatus 0062  
                                                  _Random 88A8  
                                          __CFG_XINST$OFF 000000  
                                                  _RxData 8DA8  
                                     LORAWAN_TxDone@ticks 00DA  
                      SearchAvailableChannel@randomNumber 00B9  
                    __end_of_TMR1_DefaultInterruptHandler 8DAC  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler 8DAA  
                                             ?_GetRx1Freq 0060  
                           ValidateDataRange@dataRangeNew 0063  
                                 _RADIO_FHSSChangeChannel 8310  
                                               ??___abdiv 0061  
                                                  ___lmul 7CE4  
                                  ?_RADIO_WriteFSKBitRate 006D  
                                   ?_UpdateJoinInProgress 0001  
                                                  ___wmul 87A2  
                             ?_LORAWAN_LinkCheckConfigure 00A6  
                                   ?_ExecuteRxTimingSetup 0067  
                                               ??___awdiv 0064  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 64B0  
                                               ??___lldiv 0068  
                                               ??___llmod 0068  
                                               ??___lwmod 00AC  
                      RADIO_SetChannelFrequency@frequency 0060  
                                         StartReTxTimer@i 00A2  
                                ?_EUSART1_SetErrorHandler 0060  
                               ExecuteRxParamSetupReq@ptr 00A6  
                                  __size_of_LORAWAN_Reset 01CE  
                                                  _memcpy 7AB8  
                                                  _memset 8596  
                                                  clear_0 6A1C  
                                                  clear_1 6A2E  
                                                  clear_2 6A3A  
                                                  clear_3 6A46  
                                                  clear_4 6A52  
                                                  clear_5 6A62  
                                 SwTimerIsRunning@timerId 0060  
                                        ___awdiv@quotient 0066  
                                                  _printf 84D6  
                        ??_EUSART1_SetOverrunErrorHandler 0062  
                         ?_EUSART1_SetOverrunErrorHandler 0060  
                             __size_of_DIO5_ISR_Lora_Init 0002  
                                             ?_FillSubKey 0060  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0060  
                                         ?_RxJoinResponse 0001  
                                ?_TMR5_HasOverflowOccured 0001  
                                 __size_of_EncodeShiftRow 0164  
                                  __end_of_EnableChannels 8A82  
                              ??_RADIO_UnhandledInterrupt 0064  
                                            ??_HALSPISend 0061  
                    __end_of_INT2_DefaultInterruptHandler 8DB0  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler 8DAE  
                                            __pdataCOMRAM 0054  
                                             RxData@pData 0060  
                                  __end_of_HALSPICSAssert 8D98  
                       __size_of_RADIO_SetSpreadingFactor 000A  
                            __size_of_ValidateChannelMask 005E  
                                           ??_SwTimerStop 0060  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0060  
                               ?_RADIO_SetSpreadingFactor 0001  
                                       ?_SwTimerReadValue 0091  
                                      ??_SwTimerIsRunning 0060  
                                          ?_TMR_SwapTimer 0068  
                         RADIO_FHSSChangeChannel@irqFlags 0079  
                                       ?_ExecuteDutyCycle 0060  
                                      ??_ExecuteLinkCheck 0062  
                                            __mediumconst FE48  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0072  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0095  
                                         _UpdateDataRange 53A4  
                                         ??_EUSART1_Write 0060  
                                  __end_of_ExecuteLinkAdr 350C  
                                      ??_ExecuteDutyCycle 0062  
                TMR1_SetInterruptHandler@InterruptHandler 0060  
               IOCB4_SetInterruptHandler@InterruptHandler 0060  
                INT2_SetInterruptHandler@InterruptHandler 0060  
                INT1_SetInterruptHandler@InterruptHandler 0060  
                      __end_of_LORAWAN_SetChannelIdStatus 7C8A  
                              _LORAWAN_SetChannelIdStatus 7C30  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 007A  
                                           AESEncode@aux2 0079  
                                           AESEncode@aux3 007B  
                                 __end_of_TMR1_WriteTimer 898C  
                                   __end_of_SwTimerCreate 70BE  
                          ??_SelectChannelForTransmission 00BB  
                                             ?_ComputeMic 00C7  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 89AC  
                               ExecuteDutyCycle@maxDCycle 0065  
                                       ??_RADIO_RxTimeout 00CB  
                                        ?_TMR1_Initialize 0001  
                                 __end_of_TMR5_Initialize 8A4A  
                             UpdateFrequency@frequencyNew 0060  
                                       _SYSTEM_Initialize 85C6  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 014C  
                                          ??_LORAWAN_Init 00B6  
                                          ??_LORAWAN_Join 00DB  
                                          ??_LORAWAN_Send 00D7  
                          __size_of_RADIO_FSKPayloadReady 00B4  
                                              __accesstop 0060  
                                 __end_of__initialization 6A68  
                           __end_of_RADIO_FSKPayloadReady 6BDA  
                                          _RADIO_Transmit 3A20  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                    LORAWAN_RxDone@buffer 01D0  
                                  RADIO_ReadRandom@retVal 006F  
                                        _ConfigureRadioRx 8728  
                                    __size_of_RADIO_Reset 0046  
                                        _ConfigureRadioTx 7E90  
                                     ExecuteDevStatus@ptr 0060  
                        ??_UpdateReceiveWindow2Parameters 0065  
                         ?_UpdateReceiveWindow2Parameters 0060  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 00E8  
                                          _maxPayloadSize FF59  
                           RADIO_SetLoRaSyncWord@syncWord 0060  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0062  
                               ExecuteLinkAdr@channelMask 0073  
                                              _adcVoltage 0108  
                                      __end_of_HALSPISend 8C76  
                                          __pcstackCOMRAM 0001  
                                              ___inthi_sp 09BC  
                                  _SearchAvailableChannel 58AA  
                                 ValidateChannelId@result 0061  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 8AD2  
                                            __pidataBANK3 88EC  
                                     ??_SYSTEM_Initialize 0062  
                              __end_of_DIO4_ISR_Lora_Init 8DA4  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 005E  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                _RADIO_WriteConfiguration 14DE  
                                       ??_RADIO_WriteMode 0067  
                                         _spreadingFactor FF77  
                               __size_of_LORAWAN_Mainloop 003E  
                                        ??_EncKeySchedule 0062  
                   __end_of_IOCB4_DefaultInterruptHandler 8DAE  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler 8DAC  
                                __end_of_RADIO_WritePower 61F6  
                                 ?_ExecuteRxParamSetupReq 00A6  
                                           __end_of_srand 8C30  
                                           __end_of_putch 8C3E  
                                       LORAWAN_RxDone@hdr 00F1  
                                            ??_RADIO_DIO0 00F5  
                                            ??_RADIO_DIO1 00CB  
                                            ??_RADIO_DIO2 007A  
                                            ??_RADIO_DIO3 0065  
                                            ??_RADIO_DIO4 0065  
                                            ??_RADIO_DIO5 0065  
                                  _InitDefault433Channels 71D2  
                                         _UpdateFrequency 8136  
                                  _AutomaticReplyCallback 881A  
                             ??_IOCB4_SetInterruptHandler 0062  
                                ??_INTERRUPT_GetDioStatus 0060  
                                            ??_RADIO_Init 007F  
                                        ?_CCP5_Initialize 0001  
                               SwTimerSetCallback@timerId 0063  
                              LORAWAN_RxDone@channelIndex 00E0  
                          AssembleEncryptionBlock@blockId 006F  
                             __size_of_EXT_INT_Initialize 002A  
                                         _UpdateDutyCycle 817A  
                                         ?_EnableChannels 006C  
                                 ??_TMR_OverrideRemaining 006E  
                                 __end_of_ValidateTxPower 86FE  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 8DA4  
                            __end_of_HALResetPinMakeInput 8DA0  
                                 __size_of_TMR1_ReadTimer 0022  
                        __end_of_INT2_SetInterruptHandler 8CAC  
                                        RADIO_DIO0@opMode 00F8  
                             RADIO_RegisterRead@readValue 0063  
                      __end_of_IncludeMacCommandsResponse 1E40  
                              _IncludeMacCommandsResponse 19DE  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 008A  
                                UpdateCfList@bufferLength 00A8  
                                        RADIO_DIO2@opMode 007B  
                                   LORAWAN_Send@confirmed 00D9  
                                             ?_ExtractMic 006B  
                                         ?_ExecuteLinkAdr 006F  
                                        _ValidateDataRate 8B1A  
                         LORAWAN_GetMaxPayloadSize@result 006A  
                                     __size_of_GetRx1Freq 0012  
                               __end_of_SYSTEM_Initialize 85F4  
                      __size_of_RADIO_SetChannelFrequency 008A  
                                                 ??_srand 0074  
                                                 ??_putch 0061  
                                  __end_of_RADIO_Transmit 3C58  
                                       ??_SPI2_Initialize 0060  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 4462  
                              ?_RADIO_SetChannelFrequency 0060  
                                              __pbssBANK0 00FB  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                        RxData@dataLength 0062  
                                     __end_of_SwTimerStop 881A  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags 746E  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF61  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 0090  
                                    _RADIO_SetOutputPower 8CF2  
                                    __end_of_RADIO_SetCRC 8D10  
                                  _RADIO_ReceiveStart$777 00B7  
                                  __size_of_DIO0_ISR_Lora 0006  
                                 ??_HALResetPinMakeOutput 0060  
                                    __end_of_RADIO_RxDone 64B0  
                              __end_of_RADIO_RxFSKTimeout 840A  
                                    __end_of_RADIO_TxDone 5AFA  
                                     __size_of_FillSubKey 0062  
                                      __end_of_RADIO_DIO0 7032  
                                      __end_of_RADIO_DIO1 7FD4  
                                      __end_of_RADIO_DIO2 7D92  
                                      __end_of_RADIO_DIO3 88A8  
                                      __end_of_RADIO_DIO4 8472  
                                      __end_of_RADIO_DIO5 877A  
                               ??_RADIO_FHSSChangeChannel 0079  
                             __size_of_SwTimerSetCallback 0044  
                               RADIO_SetOutputPower@power 0060  
                              __size_of_SPI2_Exchange8bit 0012  
                                      __end_of_RADIO_Init 47FA  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00BB  
                                                 ?_Random 00AD  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0006  
                                                 ?_RxData 0060  
                         __end_of_EUSART1_SetErrorHandler 8CD4  
                               ?_LORAWAN_SetDeviceAddress 0060  
                                        i2_TMR1_ReadTimer 89AC  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0064  
                                         _EnableChannels1 7654  
                                __size_of_HALDIO5PinValue 000C  
                            __size_of_RADIO_RegisterWrite 0020  
                                  ??_UpdateJoinInProgress 0060  
                        __size_of_AssembleEncryptionBlock 00F4  
                                  ??_ExecuteRxTimingSetup 0069  
                                        FillSubKey@source 0060  
            SelectChannelForTransmission@transmissionType 00BB  
                                                 ?___lmul 009A  
                  AssembleEncryptionBlock@multicastStatus 0071  
                          __end_of_ExecuteRxParamSetupReq 409C  
                                      ??_CountfOptsLength 0060  
                                                 ?___wmul 0060  
                                  __size_of_DIO2_ISR_Lora 0006  
                                      EncryptFRMPayload@i 00A7  
                                      EncryptFRMPayload@j 00A8  
                                      EncryptFRMPayload@k 00A6  
                                              ??_TMR1_ISR 0034  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                    ??_DIO3_ISR_Lora_Init 0060  
                                        _UpdateDLSettings 8A4A  
                         __end_of_TMR5_HasOverflowOccured 8C82  
                                        _ValidateRxOffset 8B02  
                                                 _CCP5CON 000F54  
                                                 ?_memcpy 0060  
                                                 ?_memset 0060  
                                          ___lmul@product 00A2  
                                       _TMR_ISR_Lora_Init 8BD0  
                                  RADIO_RegisterWrite@reg 0063  
                                     __size_of_ComputeMic 0062  
                                  RADIO_Transmit@regValue 00C0  
                            __size_of_RADIO_SetModulation 000A  
                                     _RADIO_FSKPacketSent 577C  
                                                 _AESCmac 21F0  
                                                 ?_printf 0062  
                                  ComputeMic@bufferLength 00CB  
                                 __size_of_ADC_Initialize 0016  
                  __end_of_EUSART1_SetFramingErrorHandler 8CCA  
                 __size_of_EUSART1_SetFramingErrorHandler 000A  
                          _EUSART1_SetFramingErrorHandler 8CC0  
                                 __end_of_UpdateDataRange 54F2  
                                         ??_TMR_SwapTimer 006A  
                                RADIO_WriteFSKBitRate@num 0071  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0062  
                                                 i2l11403 82AA  
                                    EncryptFRMPayload@dir 0094  
                                      _RADIO_GetPacketSnr 8D64  
                                    EncryptFRMPayload@key 0099  
                                         __CFG_WDTEN$SWON 000000  
                                   __end_of_UpdateTxPower 8CDE  
                                     _RADIO_SetIQInverted 8CFC  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 00A8  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 016C  
                                                 _SPBRGH1 000FB0  
                                     i2_SwTimersInterrupt 5D1A  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0062  
                                       __end_of_bandwidth FF77  
                  UpdateReceiveWindow2Parameters@dataRate 0064  
                                __end_of_SetJoinFailState 8536  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0065  
                                  ValidateDataRate@result 0061  
                                        ?_TMR1_WriteTimer 0060  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0060  
                                         ?_RADIO_Transmit 00B1  
                                 _ValidateChannelMaskCntl 890C  
                                         ___abdiv@counter 0063  
                                     StartReTxTimer@minim 009E  
                              AssemblePacket@bufferLength 00CA  
                            PrepareSessionKeys@sessionKey 006B  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 0068  
                                        ?_TMR5_Initialize 0001  
                       __end_of_RADIO_SetChannelFrequency 7148  
                             PrepareJoinRequestFrame@iCtr 00D9  
                               _IOCB4_SetInterruptHandler 8C98  
                       __end_of_SetCallbackSoftwareTimers 666C  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 5AFA  
                             PrepareJoinRequestFrame@mhdr 00D8  
                                  __size_of_AESEncodeLoRa 0036  
                                      _EncKeySchedule$514 0064  
                           __size_of_LORAWAN_PlatformInit 0022  
                                          _ticksAccounted 003C  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00B9  
                                              AESCmac@ptr 01CA  
                                 __end_of_spreadingFactor FF7E  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 0060  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00D4  
                                  _InitDefault868Channels 7148  
                                RADIO_RegisterWrite@value 0062  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0060  
                                LORAWAN_Send@bufferLength 00D6  
                                   _StopAllSoftwareTimers 7EE2  
                                         __size_of_Random 0022  
                                         __size_of_RxData 0002  
                                    ?i2_SwTimersInterrupt 0021  
                                 __end_of_UpdateFrequency 817A  
                                     AssemblePacket@fCtrl 00D0  
                                                 ___abdiv 7866  
                                              AESEncode@i 007C  
                                               _AESEncode 28FE  
                                  ValidateRxOffset@result 0061  
                               __end_of_TMR_ISR_Lora_Init 8BE0  
                                                 ___awdiv 725C  
                                         __size_of___lmul 0058  
                             __size_of_DIO2_ISR_Lora_Init 0010  
                                 __end_of_UpdateDutyCycle 81BE  
                                                 ___lldiv 7368  
                                     __size_of_ExtractMic 005A  
                                         __size_of___wmul 0028  
                                    ??_RADIO_GetPacketSnr 0060  
                                                 ___llmod 77FE  
                                       ?_RADIO_ReadRandom 006C  
                                                 ___lwmod 81BE  
                               SwTimerIsRunning@isRunning 0061  
                                 ??_RADIO_SetLoRaSyncWord 0060  
                                                 _devAddr 01E7  
                                    ValidateChannelMask@i 0064  
                                                 __pcinit 69B4  
                      __size_of_LORAWAN_GetMaxPayloadSize 0060  
                                                 _appSKey 03A0  
                                         __size_of_memcpy 0060  
                              __end_of_RADIO_ReceiveStart 3E88  
                                   RADIO_Init@radioBuffer 0079  
                                         __size_of_memset 0030  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 0067  
                        EncryptFRMPayload@multicastStatus 009E  
                                      ??_RADIO_ReadRandom 006E  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0060  
                                                 __ptext0 6744  
                                                 __ptext1 84D6  
                                                 __ptext2 8C30  
                                                 __ptext3 8C3E  
                                                 __ptext4 8C76  
                                                 __ptext5 85C6  
                                                 __ptext6 8A2C  
                                                 __ptext7 867E  
                                                 __ptext8 8C4C  
                                                 __ptext9 7DE8  
                                    __end_of_LORAWAN_Init 7A58  
                                    __end_of_LORAWAN_Join 6DD2  
                                    __end_of_LORAWAN_Send 68EA  
                                         __size_of_printf 0030  
                                           _DIO0_ISR_Lora 8D82  
                          ??_TMR1_DefaultInterruptHandler 0001  
                         RADIO_SetFSKSyncWord@syncWordLen 006D  
                                          _EncodeShiftRow 50E2  
                                               _IOCB4_ISR 89CC  
                              ExecuteNewChannel@frequency 00AB  
                               TMR1_ReadTimer@readValHigh 0066  
                         __size_of_INTERRUPT_GetDioStatus 0014  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 00BC  
                                                 _counter 011E  
                                 __size_of_LORAWAN_RxDone 0CA6  
                                   _OSCILLATOR_Initialize 8C5A  
                          __end_of_UpdateJoinSuccessState 577C  
                                 __size_of_LORAWAN_TxDone 07B2  
                              __end_of_RADIO_SetBandwidth 8D38  
                                         _RADIO_GetStatus 8D6A  
                                        ?_ValidateTxPower 0001  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF70  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora 8D7C  
                                      _EUSART1_Initialize 801E  
                                             _SwTimerStop 87F2  
                                ??_PIN_MANAGER_Initialize 0062  
                               ?_TMR1_SetInterruptHandler 0060  
                                                 _nwkSKey 03B0  
                             IncludeMacCommandsResponse@i 006D  
                                               _T5CONbits 000F4E  
                                           ?_UpdateCfList 00A6  
                                       _ExecuteNewChannel 37B0  
                             __size_of_PrepareSessionKeys 00AC  
                                            ??_CheckFlags 0062  
                           RADIO_SetModulation@modulation 0060  
                                 UpdateDLSettings@dlRx2Dr 0061  
                               __size_of_TMR_GetDeltaTime 0198  
                                           _DIO2_ISR_Lora 8D76  
                              __size_of_SYSTEM_Initialize 002E  
                    __end_of_LORAWAN_SetNetworkSessionKey 8622  
                   __size_of_LORAWAN_SetNetworkSessionKey 002E  
                            _LORAWAN_SetNetworkSessionKey 85F4  
                                      ?_ExecuteNewChannel 00A6  
                              RADIO_WriteMode@currentMode 0069  
                                        ComputeMic@buffer 00C9  
                                    end_of_initialization 6A68  
                                 _CreateAllSoftwareTimers 7F34  
                                     SwTimerCreate@retVal 0060  
                                _INT2_SetInterruptHandler 8CA2  
                                   ??_RADIO_FSKPacketSent 00E3  
                                     ?_EUSART1_Initialize 0001  
                                          _GenerateSubkey 54F2  
                                   _RADIO_WatchdogTimeout 8064  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FF49  
                                        ?_CheckMcastFlags 0060  
                                  ExtractMic@bufferLength 006D  
                                                 memcpy@d 0067  
                                                 memcpy@n 0064  
                                                 memcpy@s 0069  
                                 __end_of_EnableChannels1 76C0  
                                                 memset@c 0062  
                                                 memset@n 0064  
                                                 memset@p 0066  
                               _LORAWAN_LinkCheckCallback 4CA4  
                             _EUSART1_OverrunErrorHandler 01ED  
                                          ??_SwTimerStart 0091  
                                     ??_ExecuteNewChannel 00A8  
                                               i2u2181_48 8A1A  
                                               i2u2183_48 89FA  
                                   _UpdateCurrentDataRate 8CDE  
                                   _UpdateChannelIdStatus 4F7C  
                                               i2u2185_48 89DA  
                                               i2u2187_48 899A  
                                 ??_RADIO_WriteFSKBitRate 0071  
                                   ??_RADIO_SetIQInverted 0060  
                              __end_of_DIO1_ISR_Lora_Init 8C00  
                                         ___lldiv@divisor 0064  
                                     _ValidateChannelMask 7B18  
                                              _ticksAdded 0040  
                             HALResetPinOutputValue@value 0060  
                                EncodeShiftRow@stateTable 0060  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0060  
                                         ___lldiv@counter 006C  
                             TMR_OverrideRemaining@tmrVal 0070  
                                   ??i2_SwTimersInterrupt 0025  
                                ExecuteLinkAdr@redundancy 0076  
                                       GenerateSubkey@key 0091  
                                    _HALResetPinMakeInput 8D9C  
                                            ??_GetRx1Freq 0064  
                           UpdateDLSettings@dlRx1DrOffset 0060  
                              LORAWAN_Init@RxJoinResponse 00B4  
                              LORAWAN_RxDone@bufferLength 01D2  
                        __end_of_RADIO_SetSpreadingFactor 8D1A  
                                                 printf@c 0066  
                      AssembleEncryptionBlock@bufferIndex 0073  
                                                 printf@f 0062  
                                            RxData@status 0063  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 0066  
                                         _SystemTimerInit 8D4C  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                           _AESEncode$510 0074  
                                           _AESEncode$511 0076  
                                           _AESEncode$509 0072  
                                        ??_RxJoinResponse 0060  
                                        _LORAWAN_Mainloop 8390  
                            __end_of_RADIO_SetFSKSyncWord 8566  
                                      LORAWAN_Join@result 00DC  
                                      __end_of_CheckFlags 7BD4  
                                    ??_EUSART1_Initialize 0062  
                               ValidateTxPower@txPowerNew 0061  
                                          AESEncode@block 0066  
                       SearchAvailableChannel@maxChannels 00B8  
                                  __end_of_EncodeShiftRow 5246  
                                      _DIO0_ISR_Lora_Init 8C00  
                                       ??_HALDIO5PinValue 0060  
                                          ?_DIO0_ISR_Lora 0001  
                                   _INT1_InterruptHandler 01F9  
                                               _PORTBbits 000F81  
                                            ??_FillSubKey 0065  
                            SwTimersInterrupt@timeElapsed 0088  
                                           _AESEncodeLoRa 840A  
                               __size_of_ExecuteDevStatus 000A  
                            __end_of_RADIO_WriteFrequency 62E6  
                              __end_of_RADIO_RegisterRead 87F2  
                       __end_of_LORAWAN_GetMaxPayloadSize 7AB8  
                          __end_of_HALResetPinOutputValue 8AD2  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0060  
                                __end_of_ConfigureRadioRx 8752  
                                __end_of_ConfigureRadioTx 7EE2  
                                         _RADIO_RxTimeout 8650  
                          UpdateChannelIdStatus@channelId 0062  
                               __end_of_ExecuteNewChannel 3A20  
                                        EnableChannels1@i 006B  
                                 __size_of_AssemblePacket 03B0  
                                          ?_DIO1_ISR_Lora 0001  
                                    ?_ValidateChannelMask 0060  
                                       _SwTimerSetTimeout 8246  
                                          _TMR1_ReadTimer 88CA  
                                          ??_UpdateCfList 00A8  
                                              _txPower433 FF7E  
                                              _txPower868 FF84  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                         ??_LORAWAN_Reset 00B1  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 0030  
                               ??_ValidateChannelMaskCntl 0060  
                                      ?_SwTimerSetTimeout 006D  
                             __size_of_MacExecuteCommands 02F6  
                                    ExecuteNewChannel@ptr 00A6  
                                ??_UpdateMinMaxChDataRate 0060  
                                  __end_of_GenerateSubkey 563E  
                        __size_of_EUSART1_SetErrorHandler 000A  
                                           RADIO_RxDone@i 00F4  
                                     EUSART1_Write@txData 0060  
                                   __size_of_RADIO_SetCRC 000A  
                                 AssemblePacket@macCmdIdx 00D1  
                             ?_LORAWAN_SetChannelIdStatus 0064  
                                          _localDioStatus 0121  
                                      __end_of_GetRx1Freq 8BAC  
                                   __size_of_RADIO_RxDone 00E4  
                                            ??_ComputeMic 00CC  
                            __size_of_UpdateReceiveDelays 0042  
                                   __size_of_RADIO_TxDone 0126  
                                  ??_RADIO_SetOutputPower 0060  
                         EncryptFRMPayload@macBufferIndex 009B  
                           ?_LORAWAN_SetNetworkSessionKey 006B  
                                 UpdateMinMaxChDataRate@i 0061  
                                 LORAWAN_Reset@ismBandNew 00B1  
                               __size_of_SwTimerIsRunning 002A  
                              __end_of_ComputeSessionKeys 7368  
                        __size_of_TMR5_HasOverflowOccured 000C  
                                     ??_SwTimerSetTimeout 0071  
                                __size_of_SwTimersExecute 00E6  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus 8B72  
                                         _RADIO_WriteMode 5E1A  
                              ??_RADIO_WriteConfiguration 00A8  
                                   SPI2_Exchange8bit@data 0060  
                                 ?_SearchAvailableChannel 00AF  
                               __size_of_SwTimerReadValue 0040  
                             RADIO_FSKPacketSent@irqFlags 00EF  
                               __size_of_ExecuteDutyCycle 0054  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00CE  
                                      __end_of_FillSubKey 79F6  
                                 _AssembleEncryptionBlock 6012  
                                       __size_of_INT1_ISR 0008  
                                       __size_of_INT2_ISR 0008  
                                    ??_DIO0_ISR_Lora_Init 0062  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF49  
                                     AESEncodeLoRa@useKey 0081  
                              SwTimerSetCallback@callback 0060  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0060  
                                        ?_UpdateFrequency 0060  
                                      LORAWAN_Send@buffer 00D4  
                                          __end_of_Random 88CA  
                                          __end_of_RxData 8DAA  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 0010  
                                __end_of_ValidateDataRate 8B32  
                            __end_of_INTERRUPT_Initialize 8D90  
                          EnableChannels1@channelMaskCntl 0066  
                          EnableChannels1@channelIndexMax 0068  
                          EnableChannels1@channelIndexMin 0067  
                     LORAWAN_SetChannelIdStatus@channelId 0066  
                                        ?_UpdateDutyCycle 0060  
                              __end_of_DIO5_ISR_Lora_Init 8DA2  
                                 __end_of_RADIO_GetStatus 8D70  
                                          __end_of___lmul 7D3C  
                                      LORAWAN_Send@result 00D8  
                                        ??_EnableChannels 006F  
                               i2TMR1_WriteTimer@timerVal 0001  
                                          __end_of___wmul 87CA  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0060  
                     TMR_OverrideRemaining@ticksRemaining 006A  
                                       ?_RADIO_WritePower 0001  
                                           __pidataCOMRAM 8D88  
                                         ?_EncodeShiftRow 0060  
                                          ?_AESEncodeLoRa 007D  
                                       __size_of_TMR1_ISR 0014  
                                          _ADC_Initialize 8B32  
                                      __end_of_ComputeMic 7994  
                                               Random@max 00AD  
                                          __end_of_memcpy 7B18  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 828A  
                                  __end_of_TMR1_ReadTimer 88EC  
                                          __end_of_memset 85C6  
                                         _SPI2_Initialize 8C4C  
                        LORAWAN_SetChannelIdStatus@result 0065  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0064  
                                            _RADIO_SetCRC 8D06  
                                   ??_ValidateChannelMask 0062  
                                        ??_ExecuteLinkAdr 0071  
                                   UpdateCfList@frequency 00A9  
                                          __end_of_printf 8506  
                                            _RADIO_RxDone 63CC  
                                            _RADIO_TxDone 59D4  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006B  
                                     start_initialization 69B4  
                                          _ConfigureRadio 6C86  
                                      LORAWAN_RxDone@mhdr 00E1  
                                      LORAWAN_RxDone@temp 00E7  
                                      _DIO4_ISR_Lora_Init 8DA2  
                                __end_ofi2_TMR1_ReadTimer 89CC  
                          __size_of_TMR_OverrideRemaining 0096  
                                     _RADIO_RegisterWrite 894C  
                                            AESCmac@mLast 018A  
                               ??_CreateAllSoftwareTimers 0061  
                         __size_of_PIN_MANAGER_Initialize 0054  
                           __end_of_TMR_OverrideRemaining 6FA2  
                             ?_IncludeMacCommandsResponse 0060  
                                   __end_of_INT1_CallBack 8A2C  
                                            ??_ExtractMic 006F  
                    EncryptFRMPayload@bufferToBeEncrypted 009C  
                                            AESCmac@input 00BD  
                        __end_of_LORAWAN_SetDeviceAddress 8B02  
                                         ?_GenerateSubkey 0091  
                            ?_RADIO_SetFrequencyHopPeriod 0060  
                                         LORAWAN_TxDone@i 00E2  
                                   LORAWAN_Init@RxPayload 00B2  
                     AssembleEncryptionBlock@frameCounter 006B  
                                 i2TMR_SwapTimer@timerVal 0009  
                                             putch@txData 0061  
                                   __end_of_INT2_CallBack 8A0C  
                                           ??_RADIO_Reset 0065  
                                __end_of_UpdateDLSettings 8A66  
                                   __end_of_EUSART1_Write 8C4C  
                              SwTimerStart@ticksRemaining 0095  
                                  RADIO_WriteMode@newMode 006A  
                                __end_of_ValidateRxOffset 8B1A  
                             ??_RADIO_SetChannelFrequency 0064  
                             ??_SetCallbackSoftwareTimers 0064  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 8D1A  
                           ExecuteNewChannel@channelIndex 00AF  
                          __end_of_SearchAvailableChannel 59D4  
                                        ?_EnableChannels1 0064  
                                         i2_TMR_SwapTimer 828A  
                                 __size_of_StartReTxTimer 0182  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0060  
                                         ___llmod@divisor 0064  
                              MacExecuteCommands@fOptsLen 00B2  
                                 _RADIO_FSKPacketSent$793 00EB  
                                 __end_of_SystemTimerInit 8D54  
                          UpdateChannelIdStatus@statusNew 0060  
                       __size_of_RADIO_UnhandledInterrupt 0032  
                                         ___llmod@counter 0068  
                                     TMR_SwapTimer@oldVal 011A  
                               ?_RADIO_UnhandledInterrupt 0001  
                                __size_of_PIN_MANAGER_IOC 000A  
                                     TMR_SwapTimer@retVal 0118  
                                   _RADIO_FSKPayloadReady 6B26  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 8D9C  
                                                ??_Random 00AF  
                                                ??_RxData 0064  
                                                AESCmac@i 01CF  
                                                AESCmac@j 01CE  
                                                AESCmac@n 01CD  
                                                AESCmac@x 01BA  
                                                AESCmac@y 01AA  
                              SwTimerReadValue@ticksCount 0095  
                                    ?_RADIO_RegisterWrite 0062  
                          __end_of_InitDefault433Channels 725C  
                          __end_of_AutomaticReplyCallback 8840  
                                     RADIO_Init@frequency 007B  
                                __size_of_TMR1_Initialize 002C  
                                    _macEndDevCmdReplyLen FF69  
                                                ??___lmul 00A2  
                                             ??_AESEncode 006A  
                       RADIO_WriteConfiguration@tempValue 00AC  
                                        _activationMethod 011F  
                                   __size_of_LORAWAN_Init 0062  
                      __size_of_AckRetransmissionCallback 011E  
                                   __size_of_LORAWAN_Join 00A4  
                                                ??___wmul 0064  
                                   __size_of_LORAWAN_Send 00D2  
                                 __end_of_RADIO_RxTimeout 867E  
                                MacExecuteCommands@buffer 00B0  
                                ??_SetReceptionNotOkState 00BB  
                                  __end_of_ADC_Initialize 8B48  
                                          ??_TMR_ISR_lora 0032  
                                         ??_DIO0_ISR_Lora 0001  
                                             __pdataBANK1 01D3  
                                             __pdataBANK3 03A0  
                                       _ValidateDataRange 80AA  
                                      __end_of_ExtractMic 7CE4  
                i2SwTimersInterrupt@ticksToNextTimerEvent 002D  
                  SwTimersInterrupt@ticksToNextTimerEvent 008C  
                                                ??_memcpy 0066  
                                  __size_of_SwTimerCreate 008C  
                                                ??_memset 0066  
                                    ??_DIO4_ISR_Lora_Init 0060  
                              __end_of_EXT_INT_Initialize 86D4  
                                       _ValidateChannelId 8840  
                                    ?_RADIO_SetModulation 0001  
                                _RADIO_SetSpreadingFactor 8D10  
                                      _RADIO_RxFSKTimeout 83CE  
                                                ?_AESCmac 00B9  
                                  __size_of_TMR1_CallBack 0020  
                                                ??_printf 0064  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0001  
                                ValidateRxOffset@rxOffset 0060  
                                            AESEncode@aux 0078  
                                            AESEncode@key 0068  
                                  TMR_GetDeltaTime@retVal 0114  
                                         ?_TMR1_ReadTimer 0060  
                                             ??_IOCB4_ISR 0001  
                                  __end_of_ConfigureRadio 6D2E  
                                          _LORAWAN_RxDone 0086  
                                      ?_ValidateChannelId 0060  
                                  TMR_GetDeltaTime@tmrVal 011C  
                                          _LORAWAN_TxDone 0D2C  
                              __size_of_ExecuteNewChannel 0270  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 0069  
                                    __end_of_SwTimerStart 6F0C  
                  __end_of_LORAWAN_EnterContinuousReceive 756A  
                 __size_of_LORAWAN_EnterContinuousReceive 007E  
                          _LORAWAN_EnterContinuousReceive 74EC  
                                             __pbssBIGRAM 04E0  
                                         ??_DIO2_ISR_Lora 0001  
                               __size_of_CountfOptsLength 00CA  
                                       CountfOptsLength@i 0067  
                                             __pbssCOMRAM 003C  
                              __end_of_DefaultChannels433 FFB4  
                              __end_of_DefaultChannels868 FFDE  
                                        ??_RADIO_Transmit 00B4  
                                               _adcResult 010C  
                                      LORAWAN_RxTimeout@i 00CA  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 016A  
                                     ??_ValidateDataRange 0062  
                                        _TMR_GetDeltaTime 47FA  
                           EnableChannels@channelMaskCntl 006E  
                                 __end_of_RADIO_WriteMode 5F18  
                 __end_of_UnconfirmedTransmissionCallback 75E2  
                __size_of_UnconfirmedTransmissionCallback 0078  
                         _UnconfirmedTransmissionCallback 756A  
                                 SearchAvailableChannel@i 00BA  
                                     ??_ValidateChannelId 0061  
                                   RADIO_RegisterRead@reg 0062  
                         __size_of_UpdateMinMaxChDataRate 00FA  
                     LORAWAN_SetChannelIdStatus@statusNew 0064  
                                __size_of_CCP5_Initialize 0010  
                                               _aesBuffer 015A  
                                 INTERRUPT_GetDioStatus@a 0060  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0099  
                           ??_RADIO_SetFrequencyHopPeriod 0062  
                                    _RADIO_SetFSKSyncWord 8536  
                             RADIO_SetBandwidth@bandwidth 0060  
                        ??_EUSART1_SetFramingErrorHandler 0062  
                         ?_EUSART1_SetFramingErrorHandler 0060  
                              __end_of_SwTimerSetCallback 8246  
       __end_of_ResetParametersForUnconfirmedTransmission 8B72  
      __size_of_ResetParametersForUnconfirmedTransmission 0014  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0060  
               _ResetParametersForUnconfirmedTransmission 8B5E  
                               ??_AssembleEncryptionBlock 0072  
                                   _INT2_InterruptHandler 01F7  
                                               _bandwidth FF70  
                                      ??_SetJoinFailState 0060  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 79F6  
                                            _LORAWAN_Join 6D2E  
                                            _LORAWAN_Send 6818  
                                  RADIO_FSKPayloadReady@i 00F4  
                                       _ValidateFrequency 78CC  
                                               __pnvBANK1 01EB  
                                               __pnvBANK2 02F5  
                                  ??_HALResetPinMakeInput 0060  
                                    _RADIO_WriteFrequency 61F6  
                                         FillSubKey@carry 0066  
                                        _HALSPICSDeassert 8D90  
                          ??_LORAWAN_SetNetworkSessionKey 006D  
                                     __end_of_RADIO_Reset 8136  
                                   ??_RADIO_RegisterWrite 0063  
                                  _PIN_MANAGER_Initialize 7DE8  
                                           FillSubKey@key 0062  
                                      ?_ValidateFrequency 0060  
                                    __end_of_UpdateCfList 428A  
                     RADIO_WriteFSKFrequencyDeviation@num 0071  
                               EnableChannels@channelMask 006C  
                                               _macBuffer 04E0  
                                               _dioStatus 0123  
                               __end_of_ValidateDataRange 80F0  
                           RADIO_FSKPayloadReady@irqFlags 00F3  
                                       _SwTimersInterrupt 5C18  
                                       ??_SwTimersExecute 00DA  
                                               __pintcode 0008  
                                                ?___abdiv 0060  
                        __end_of_TMR1_SetInterruptHandler 8C98  
                                           __pmediumconst FE48  
                                 RADIO_Transmit@bufferLen 00B3  
                                 __end_of_SPI2_Initialize 8C5A  
                                                ?___awdiv 0060  
                                               __ptext100 1E40  
                                               __ptext101 19DE  
                                               __ptext110 6BDA  
                                               __ptext102 8D64  
                               __end_of_ValidateChannelId 8864  
                                               __ptext111 73EC  
                                               __ptext103 64B0  
                                               __ptext200 7F34  
                                               __ptext120 8B5E  
                                               __ptext112 7B76  
                                               __ptext104 428A  
                                               __ptext201 7032  
                                               __ptext121 8BAC  
                                               __ptext113 577C  
                                               __ptext105 725C  
                                               __ptext210 4E10  
                                               __ptext130 58AA  
                                               __ptext122 8D70  
                                               __ptext114 0D2C  
                                               __ptext106 6012  
                                               __ptext211 89AC  
                                               __ptext203 8B86  
                                               __ptext131 7E90  
                                               __ptext123 892C  
                                               __ptext115 8350  
                                               __ptext107 68EA  
                                               __ptext220 8D5C  
                                               __ptext212 8D42  
                                               __ptext204 898C  
                                               __ptext140 70BE  
                                               __ptext132 8CF2  
                                               __ptext124 3C58  
                                               __ptext116 86FE  
                                               __ptext108 7C8A  
                                               __ptext221 8A0C  
                                               __ptext213 89CC  
                                               __ptext205 8DAA  
                                               __ptext141 8D2E  
                                               __ptext133 8CFC  
                                               __ptext125 8728  
                                               __ptext117 8D6A  
                                               __ptext109 72E2  
                                               __ptext222 8D82  
                                               __ptext214 8D76  
                                               __ptext206 7D92  
                                               __ptext150 81BE  
                                               __ptext142 3A20  
                                               __ptext134 8D06  
                                               __ptext126 8B72  
                                               __ptext118 74EC  
                                               __ptext223 8DB0  
                                               __ptext215 8DAC  
                                               __ptext207 828A  
                                               __ptext151 7932  
                                               __ptext143 14DE  
                                               __ptext135 6C86  
                                               __ptext127 6D2E  
                                               __ptext119 8DA8  
                                               __ptext224 0000  
                                               __ptext216 8D54  
                                               __ptext208 8A82  
                                               __ptext160 8C20  
                                               __ptext152 21F0  
                                               __ptext144 6106  
                                               __ptext136 8D10  
                                               __ptext128 8A9E  
                                               __ptext217 89EC  
                                               __ptext209 5D1A  
                                               __ptext161 658E  
                                               __ptext153 54F2  
                                               __ptext145 772C  
                                               __ptext137 8D1A  
                                               __ptext129 76C0  
                                               __ptext218 8D7C  
                                               __ptext170 87CA  
                                               __ptext162 6DD2  
                                               __ptext154 7994  
                                               __ptext146 7796  
                                               __ptext138 8D24  
                                               __ptext219 8DAE  
                                               __ptext171 8C82  
                                               __ptext163 4462  
                                               __ptext155 840A  
                                               __ptext147 4992  
                                               __ptext139 8536  
                                               __ptext180 8566  
                                               __ptext172 61F6  
                                               __ptext164 5F18  
                                               __ptext156 28FE  
                                               __ptext148 88A8  
                                               __ptext181 8AB8  
                                               __ptext173 77FE  
                                               __ptext165 7EE2  
                                               __ptext157 50E2  
                                               __ptext149 7BD4  
                                               __ptext190 7FD4  
                                               __ptext182 8D98  
                                               __ptext174 894C  
                                               __ptext166 8D38  
                                               __ptext158 350C  
                                               __ptext191 896C  
                                               __ptext183 8D9C  
                                               __ptext175 8C68  
                                               __ptext167 4630  
                                               __ptext159 79F6  
                                               __ptext192 5C18  
                                               __ptext184 5246  
                                               __ptext176 8BBE  
                                               __ptext168 8202  
                                               __ptext193 47FA  
                                               __ptext185 7CE4  
                                               __ptext177 8D90  
                                               __ptext169 5E1A  
                                               __ptext194 88CA  
                                               __ptext186 7368  
                                               __ptext178 8D94  
                                               __ptext195 8246  
                                               __ptext187 87F2  
                                               __ptext179 80F0  
                                               __ptext196 7148  
                                               __ptext188 6E76  
                                               __ptext197 71D2  
                                               __ptext189 6F0C  
                                               __ptext198 8596  
                                               __ptext199 7AB8  
                                       _EncryptFRMPayload 428A  
                                                ?___lldiv 0060  
                            RADIO_FSKPacketSent@timeOnAir 00E7  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0060  
                           __size_of_ExecuteRxTimingSetup 0028  
                                         ??_AESEncodeLoRa 0081  
                SelectChannelForTransmission@channelIndex 00BD  
                         __end_of_PrepareJoinRequestFrame 4B22  
                                                ?___lwmod 00A8  
                                         ?_ADC_Initialize 0001  
                                      ?_SwTimersInterrupt 0080  
                               _RADIO_SetChannelFrequency 70BE  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 006E  
                               _SetCallbackSoftwareTimers 658E  
                                      ConfigureRadio@freq 006E  
                                   ??_RADIO_SetModulation 0060  
                                        ?_RADIO_GetStatus 0001  
                                  __end_of_LORAWAN_RxDone 0D2C  
                                     ??_ValidateFrequency 0064  
                                  __end_of_LORAWAN_TxDone 14DE  
                                      ?_EncryptFRMPayload 0091  
                            ??_INTERRUPT_InterruptManager 0034  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 8886  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                        _ExecuteDevStatus 8CE8  
                           __end_of_RADIO_SetLoRaSyncWord 8D42  
                  IncludeMacCommandsResponse@pBufferIndex 0062  
                              __size_of_SwTimerSetTimeout 0044  
                             ??_LORAWAN_GetMaxPayloadSize 0068  
                          LORAWAN_LinkCheckConfigure@iCtr 00B0  
                        ExecuteRxParamSetupReq@dlSettings 00AE  
                                          _AssemblePacket 1E40  
                                         ?_ConfigureRadio 006E  
                               AssemblePacket@bufferIndex 00D2  
                              ??_INT2_SetInterruptHandler 0062  
                                                _BAUDCON1 000FB8  
                              __end_ofi2_TMR_GetDeltaTime 4F7C  
                      _EUSART1_DefaultOverrunErrorHandler 000000  
                                     ??_SwTimersInterrupt 0084  
                                    RADIO_DIO0@dioMapping 00F7  
                                       _DutyCycleCallback 2C48  
                                 InitDefault433Channels@i 006B  
                                    _EUSART1_ErrorHandler 02F5  
                                   __end_of_TMR_SwapTimer 801E  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 009F  
                                 _EUSART1_SetErrorHandler 8CCA  
                                 __end_ofi2_TMR_SwapTimer 82CE  
                                 __size_of_EncKeySchedule 02A4  
                                      AssemblePacket@mhdr 00CF  
                                      AssemblePacket@port 00C7  
                               __size_of_RADIO_ReadRandom 00A4  
                                ConfigureRadioRx@dataRate 0077  
                                      _RADIO_ReceiveStart 3C58  
                                          __size_of_srand 0010  
                                __end_of_LORAWAN_Mainloop 83CE  
                                          __size_of_putch 000E  
                                   ?_RADIO_SetFSKSyncWord 006B  
                                    _INTERRUPT_Initialize 8D8C  
                                           _SwTimerCreate 7032  
                          __end_of_InitDefault868Channels 71D2  
                     IncludeMacCommandsResponse@macBuffer 0060  
                                 _TMR5_HasOverflowOccured 8C76  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0060  
                                           _TMR1_CallBack 898C  
                               __end_of_ValidateFrequency 7932  
                                        _SwTimerIsRunning 86FE  
                                        _ExecuteLinkCheck 84A4  
                                    i2SwTimersInterrupt@i 0031  
                                                _INT1_ISR 8D5C  
                                _LORAWAN_SetDeviceAddress 8AEA  
                                                _INT2_ISR 8D54  
                                       EncKeySchedule@key 0060  
                                          ___wmul@product 0064  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 8D2E  
                                                _LATAbits 000F89  
                 EUSART1_SetErrorHandler@interruptHandler 0060  
                                  ?_RADIO_FSKPayloadReady 0001  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF69  
                                   ?_RADIO_WriteFrequency 006D  
                               ?_INT1_SetInterruptHandler 0060  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 0044  
                                     ?_RADIO_ReceiveStart 00B1  
                                        _SwTimerReadValue 8350  
                                                _PIE1bits 000F9D  
                                        _ExecuteDutyCycle 7E3C  
                                         _HALDIO5PinValue 8C82  
                                    RADIO_DIO1@dioMapping 00CC  
                               __end_of_SwTimersInterrupt 5D1A  
                                __size_of_TMR1_WriteTimer 0020  
                     __size_of_INTERRUPT_InterruptManager 0076  
                              __end_of_DIO2_ISR_Lora_Init 8BF0  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 0093  
                                        GenerateSubkey@k2 0095  
                                    ConfigureRadioRx@freq 0073  
                               __end_of_EncryptFRMPayload 4462  
                                                _PIR5bits 000F7E  
                          __size_of_RADIO_WriteFSKBitRate 0068  
                                UpdateReceiveDelays@delay 0066  
                               LORAWAN_RxDone@bufferIndex 00E6  
                                  __size_of_UpdateTxPower 000A  
                           __end_of_RADIO_WriteFSKBitRate 77FE  
                                    ConfigureRadioTx@freq 0073  
                             UpdateDataRange@dataRangeNew 0060  
                                __size_of_TMR5_Initialize 001E  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 00B0  
                                               _rxPayload 0110  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 5F18  
                           EncryptFRMPayload@bufferLength 0093  
                                 ValidateDataRange@result 0062  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0060  
              ValidateChannelId@allowedForDefaultChannels 0060  
                           __size_of_FindSmallestDataRate 00DE  
                                                _TMR1_ISR 8B86  
                                ConfigureRadioTx@dataRate 0077  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                   ValidateTxPower@result 0060  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 0462  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 00A8  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 82CE  
                         __size_of_SetReceptionNotOkState 007E  
                                  __end_of_AssemblePacket 21F0  
                                         ?_LORAWAN_RxDone 01D0  
                                         ?_LORAWAN_TxDone 00BB  
                                       ??_TMR1_Initialize 0062  
                                              _ADCON0bits 000FC2  
                                        ___abdiv@dividend 0066  
                                      _DIO1_ISR_Lora_Init 8BF0  
                               __end_of_DutyCycleCallback 2F4E  
                                       ___wmul@multiplier 0060  
                                        __size_of_AESCmac 03AA  
                                    ??_RADIO_ReceiveStart 00B3  
                                 ValidateFrequency@result 0064  
                              __end_of_PrepareSessionKeys 6C86  
                                       ?_ConfigureRadioRx 0073  
                                       ?_ConfigureRadioTx 0073  
                                    RADIO_DIO2@dioMapping 007C  
                                      AESEncodeLoRa@block 007D  
                                                _Channels 0400  
                             __end_of_RADIO_FSKPacketSent 58AA  
                 RADIO_SetSpreadingFactor@spreadingFactor 0060  
                                      ??_ConfigureRadioRx 0077  
                                      ??_ConfigureRadioTx 0077  
                                    ??_RADIO_SetBandwidth 0060  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0060  
                                        ?_RADIO_WriteMode 0065  
                               LORAWAN_RxDone@computedMic 00EA  
                                       ___lmul@multiplier 009A  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 69C8  
                                               copy_data1 69E8  
                                               copy_data2 6A08  
                                   ?_INTERRUPT_Initialize 0001  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                             __end_of_RADIO_SetIQInverted 8D06  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 7DE8  
                                             _RADIO_Reset 80F0  
                                     ExecuteLinkCheck@ptr 0060  
                          i2SwTimersInterrupt@timeElapsed 0029  
                                      _RADIO_RegisterRead 87CA  
                                __size_of_ValidateTxPower 002A  
                                 ??_StopAllSoftwareTimers 0061  
                                          _StartReTxTimer 4B22  
                             __end_ofi2_SwTimersInterrupt 5E1A  
                               _LORAWAN_GetMaxPayloadSize 7A58  
                              LORAWAN_RxDone@extractedMic 00E2  
                                             AESCmac@flag 01CC  
                           EncryptFRMPayload@frameCounter 0095  
                                      CheckMcastFlags@hdr 0060  
                                             AESCmac@size 00BF  
                                SwTimerSetTimeout@timerId 0075  
                                SwTimerSetTimeout@timeout 006D  
                                   RADIO_WriteMode@opMode 006B  
                                ??_ExecuteRxParamSetupReq 00A8  
                     __size_of_LORAWAN_LinkCheckConfigure 015E  
                                       ??_CCP5_Initialize 0060  
                                        ___abdiv@quotient 0065  
                 UpdateReceiveWindow2Parameters@frequency 0060  
                                    RADIO_DIO3@dioMapping 0066  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 8596  
                  ValidateChannelMaskCntl@channelMaskCntl 0061  
                                       i2_TMR1_WriteTimer 8A82  
                                               memcpy@tmp 0066  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0062  
                                    ??_DIO1_ISR_Lora_Init 0062  
                                __size_of_CheckMcastFlags 0082  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0064  
                              __size_of_ValidateDataRange 0046  
                               _ticksToScheduledInterrupt 0054  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0064  
                            ValidateDataRange@dataRateMin 0065  
                              __size_of_ValidateChannelId 0024  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                        __size_of___abdiv 0066  
                                 ??_OSCILLATOR_Initialize 0060  
                                       ?_ValidateDataRate 0001  
                                        __size_of___awdiv 0086  
                                      _ComputeSessionKeys 72E2  
                                   __size_of_SwTimerStart 0096  
                                        __size_of___lldiv 0084  
                                        __size_of___llmod 0068  
                             __size_of_EUSART1_Initialize 0046  
                                        __size_of___lwmod 0044  
                                         ?_AssemblePacket 00C7  
                                    AssemblePacket@buffer 00C8  
                                        SwTimersExecute@i 00DE  
                                      ??_ValidateDataRate 0060  
                                _TMR1_SetInterruptHandler 8C8E  
                                  _IOCB4_InterruptHandler 01F5  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission 8BBE  
        __size_of_ResetParametersForConfirmedTransmission 0012  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0060  
                 _ResetParametersForConfirmedTransmission 8BAC  
                                   _TMR1_InterruptHandler 01F1  
                               ??_EUSART1_SetErrorHandler 0062  
                                        ??_GenerateSubkey 0097  
                             _EUSART1_DefaultErrorHandler 000000  
                                        _CountfOptsLength 68EA  
                                              _HALSPISend 8C68  
                                     ?_ComputeSessionKeys 0091  
                                          _rxWindowOffset FF51  
                      RADIO_UnhandledInterrupt@modulation 0064  
                              __end_of_MacExecuteCommands 3244  
                                    ??_RADIO_RegisterRead 0062  
                                    RADIO_DIO4@dioMapping 0067  
                        __end_of_RADIO_UnhandledInterrupt 84A4  
                                           _UpdateTxPower 8CD4  
                                    RADIO_Transmit@buffer 00B1  
                         __end_of_RADIO_FHSSChangeChannel 8350  
                                         _allocatedTimers 00FB  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                          __end_of_INTERRUPT_GetDioStatus 8B86  
                                       ?i2_TMR1_ReadTimer 0001  
                               ??_TMR5_HasOverflowOccured 0060  
                                      _DIO5_ISR_Lora_Init 8DA0  
                                                __ptext10 8C5A  
                                                __ptext11 8864  
                                                __ptext20 8BF0  
                                                __ptext12 8BD0  
                                                __ptext21 8C00  
                                                __ptext13 8C8E  
                                              _T1GCONbits 000FCC  
                                                __ptext30 8C10  
                                                __ptext22 8D8C  
                                                __ptext14 8D4C  
                                                __ptext31 8B32  
                                                __ptext23 86AA  
                                                __ptext15 8DA0  
                                                __ptext40 5AFA  
                                                __ptext32 85F4  
                                                __ptext24 8CA2  
                                                __ptext16 8DA2  
                                                __ptext41 4CA4  
                                                __ptext33 8AEA  
                                                __ptext25 8CAC  
                                                __ptext17 8DA4  
                                                __ptext50 8886  
                                                __ptext42 6A6E  
                                                __ptext34 8622  
                                                __ptext26 801E  
                                                __ptext18 8BE0  
                                                __ptext51 7D3C  
                                                __ptext43 666C  
                                                __ptext35 8390  
                                                __ptext27 8CB6  
                                                __ptext19 8C98  
                                                __ptext60 6B26  
                                                __ptext52 7F86  
                                                __ptext44 8064  
                                                __ptext36 62E6  
                                                __ptext28 8CC0  
                                                __ptext61 259A  
                                                __ptext53 8650  
                                                __ptext45 83CE  
                                                __ptext37 2C48  
                                                __ptext29 8CCA  
                                                __ptext70 2F4E  
                                                __ptext62 0086  
                                                __ptext54 8310  
                                                __ptext46 756A  
                                                __ptext38 563E  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 877A  
                                                __ptext63 75E2  
                                                __ptext55 6FA2  
                                                __ptext47 8B9A  
                                                __ptext39 881A  
                                                __ptext80 8136  
                                                __ptext72 82CE  
                                                __ptext64 8A4A  
                                                __ptext56 8472  
                                                __ptext48 8752  
                                                __ptext81 817A  
                                                __ptext73 87A2  
                                                __ptext65 409C  
                                                __ptext57 59D4  
                                                __ptext49 8440  
                                                __ptext90 7B18  
                                                __ptext82 53A4  
                                                __ptext74 3E88  
                                                __ptext66 4B22  
                                                __ptext58 63CC  
                                                __ptext91 8CD4  
                                                __ptext83 7C30  
                                                __ptext75 8B02  
                                                __ptext67 746E  
                                                __ptext59 7866  
                                                __ptext92 8CDE  
                                                __ptext84 8840  
                                                __ptext76 8B48  
                                                __ptext68 8506  
                                                __ptext93 8A66  
                                                __ptext85 84A4  
                                                __ptext77 37B0  
                                                __ptext69 8DA6  
                                                __ptext94 7654  
                                                __ptext86 3244  
                                                __ptext78 78CC  
                                                __ptext95 4F7C  
                                                __ptext87 86D4  
                                                __ptext79 80AA  
                                                __ptext96 7E3C  
                                                __ptext88 8B1A  
                                                __ptext97 8CE8  
                                                __ptext89 890C  
                                                __ptext98 6818  
                                                __ptext99 7A58  
                                 ExecuteRxTimingSetup@ptr 0067  
                                  ??_RADIO_SetFSKSyncWord 006D  
                                   ??_UpdateReceiveDelays 0066  
                                   __end_of_LORAWAN_Reset 4630  
                                  __end_of_StartReTxTimer 4CA4  
                                 ??_UpdateCurrentDataRate 0060  
                                 ??_UpdateChannelIdStatus 0061  
                                __size_of_UpdateDataRange 014E  
                                  _SetReceptionNotOkState 746E  
                                            _SSP2CON1bits 000F6C  
                                     GenerateSubkey@F7103 01D3  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00F0  
                                 __end_of_HALDIO5PinValue 8C8E  
                                       ?_UpdateDLSettings 0060  
                                  ConfigureRadio@dataRate 0072  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 0066  
                        __size_of_PrepareJoinRequestFrame 0190  
                                           CheckFlags@hdr 0060  
                                  ??_RADIO_WriteFrequency 0071  
                                   __size_of_UpdateCfList 01EE  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 000A  
                                           __size_of_main 00D4  
                                           __size_of_rand 005C  
                                              _T5GCONbits 000F4D  
                                       _RADIO_ReceiveStop 892C  
                                      ??_UpdateDLSettings 0061  
                                    _LORAWAN_PlatformInit 8864  
                                         _FskSyncWordBuff FFDE  
                                      ??_ValidateRxOffset 0060  
                               __end_ofi2_TMR1_WriteTimer 8A9E  
               IncludeMacCommandsResponse@bIncludeInFopts 0064  
                                    ??_ComputeSessionKeys 0093  
                                           _timerOverflow 0047  
                                            _SwTimerStart 6E76  
                              __size_of_SwTimersInterrupt 0102  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0060  
                                    RADIO_DIO5@dioMapping 0066  
                                   RADIO_TxDone@timeOnAir 00E7  
                          ValidateChannelMask@channelMask 0060  
                             __size_of_DIO0_ISR_Lora_Init 0010  
                              __size_of_EncryptFRMPayload 01D8  
                                         GenerateSubkey@i 00B8  
                                         GenerateSubkey@l 00A8  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0060  
                                 PrepareSessionKeys@index 0071  
                                __end_of_TMR_GetDeltaTime 4992  
                                      SwTimerStop@timerId 0060  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0062  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006B  
                                    RADIO_RxDone@irqFlags 00F3  
                             __end_of_ValidateChannelMask 7B76  
                                           UpdateCfList@i 00AE  
                      __end_of_INTERRUPT_InterruptManager 007E  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 006C  
                             PrepareSessionKeys@networkId 006F  
                                       _RADIO_ReleaseData 8D70  
                                       ??_TMR1_WriteTimer 0062  
                             _EUSART1_FramingErrorHandler 01EF  
                                              _RADIO_DIO0 6FA2  
                                              _RADIO_DIO1 7F86  
                                              _RADIO_DIO2 7D3C  
                                              _RADIO_DIO3 8886  
                                              _RADIO_DIO4 8440  
                                              _RADIO_DIO5 8752  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0060  
                    __end_of_INT1_DefaultInterruptHandler 8DB2  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler 8DB0  
                       __size_of_RADIO_WriteConfiguration 0500  
                                  __end_of_rxWindowOffset FF59  
                             i2TMR1_ReadTimer@readValHigh 0007  
                                       ??_TMR5_Initialize 0060  
                              __size_of_DutyCycleCallback 0306  
                                 EncryptFRMPayload@buffer 0091  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 00A6  
                                      __end_of_modulation FF51  
                                              _RADIO_Init 4630  
                         ExecuteRxParamSetupReq@frequency 00AA  
                                __size_of_UpdateFrequency 0044  
                                ?_ValidateChannelMaskCntl 0001  
                                           __roundCounter 0122  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 0078  
                                __end_of_HALSPICSDeassert 8D94  
                                __size_of_UpdateDutyCycle 0044  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0060  
                                                memcpy@s1 0062  
                                          _EncKeySchedule 350C  
                      __size_of_SetCallbackSoftwareTimers 00DE  
                                 __size_of_RxJoinResponse 0002  
                                         ??_SwTimerCreate 0060  
                                     ExecuteDutyCycle@ptr 0060  
                                            _UpdateCfList 409C  
                                     ??_RADIO_ReleaseData 0060  
                                  ??_INTERRUPT_Initialize 0060  
                                                memset@p1 0060  
                                         ??_TMR1_CallBack 0034  
                                    __size_of_SwTimerStop 0028  
                                        _RADIO_ReadRandom 6DD2  
                                      _EXT_INT_Initialize 86AA  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining 6F0C  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 00B1  
                               __end_of_RADIO_ReceiveStop 894C  
                                         _SwTimersExecute 62E6  
                     SwTimerSetCallback@callbackParameter 0062  
                                             FillSubKey@i 0067  
                           RADIO_WriteFrequency@frequency 006D  
                                        ___lwmod@dividend 00A8  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0060  
                                __end_of_ExecuteDevStatus 8CF2  
                                 ?_PIN_MANAGER_Initialize 0001  
                                      _DefaultChannels433 FF8A  
                                      _DefaultChannels868 FFB4  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0064  
                  __end_of_EUSART1_SetOverrunErrorHandler 8CC0  
                 __size_of_EUSART1_SetOverrunErrorHandler 000A  
                          _EUSART1_SetOverrunErrorHandler 8CB6  
                                UpdateDutyCycle@channelId 0062  
                                              _RCSTA1bits 000FAB  
                                  GenerateSubkey@const_Rb 0098  
                         __size_of_ExecuteRxParamSetupReq 0214  
                                        ??_ADC_Initialize 0060  
                                              _OSCCONbits 000FD3  
                               UpdateJoinInProgress@state 0060  
                                       ??_ValidateTxPower 0060  
                                     _LORAWAN_TxDone$1666 00C9  
                                     _LORAWAN_TxDone$1667 00CD  
                                     _LORAWAN_TxDone$5688 00D6  
                      __end_of_LORAWAN_LinkCheckConfigure 53A4  
                               __end_of_RADIO_ReleaseData 8D76  
                              _LORAWAN_LinkCheckConfigure 5246  
                                      __end_of_txPower433 FF84  
                                __size_of_EnableChannels1 006C  
                                      __end_of_txPower868 FF8A  
                                                printf@ap 0064  
                                   _HALResetPinMakeOutput 8D98  
                                ??_HALResetPinOutputValue 0060  
                                  __size_of_INT1_CallBack 0020  
                               RADIO_WriteConfiguration@i 00AB  
                               ExecuteRxTimingSetup@delay 0069  
                                        AESEncodeLoRa@key 007F  
                               __size_of_SetJoinFailState 0030  
                        LORAWAN_LinkCheckConfigure@period 00A6  
                                        ??_ConfigureRadio 0072  
          EUSART1_SetFramingErrorHandler@interruptHandler 0060  
                                      _SwTimerSetCallback 8202  
             __end_of_UpdateRetransmissionAckTimeoutState 7654  
            __size_of_UpdateRetransmissionAckTimeoutState 0072  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 009A  
                     _UpdateRetransmissionAckTimeoutState 75E2  
                                       RADIO_ReadRandom@i 0071  
                            SearchAvailableChannel@result 00B7  
                                   RADIO_WritePower@paDac 0065  
                                  __size_of_INT2_CallBack 0020  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                  __size_of_EUSART1_Write 000E  
                                      _eusart1RxLastError 0120  
                                   __end_of_DIO0_ISR_Lora 8D88  
                                __end_of_SwTimerIsRunning 8728  
                                       ??_CheckMcastFlags 0062  
                                __end_of_ExecuteLinkCheck 84D6  
                                   RADIO_WritePower@power 0066  
                                        _RADIO_TxDone$789 00EB  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 0067  
                                    ??_EXT_INT_Initialize 0062  
                            RADIO_SetFSKSyncWord@syncWord 006B  
                                            _rxWindowSize FF61  
                                  __end_of_EncKeySchedule 37B0  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora 8D82  
                                     ?_SwTimerSetCallback 0060  
                                __end_of_SwTimerReadValue 8390  
                                        ___lldiv@quotient 0068  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 7E90  
                                         ___lwmod@divisor 00AA  
                  __end_of_UpdateReceiveWindow2Parameters 8B5E  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters 8B48  
                                 UpdateTxPower@txPowerNew 0060  
                                         ___lwmod@counter 00AC  
                         _LORAWAN_LinkCheckConfigure$2492 00AC  
                        __end_of_INT1_SetInterruptHandler 8CB6  
                            FindSmallestDataRate@dataRate 0063  
                           LORAWAN_Join@activationTypeNew 00DD  
                                   __size_of_TMR_ISR_lora 0056  
                              ??_LORAWAN_SetDeviceAddress 0064  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora 8D7C  
                                    _SystemBlockingWaitMs 8566  
                                   FindSmallestDataRate@i 0062  
                      ComputeSessionKeys@joinAcceptBuffer 0091  
                                 __size_of_EnableChannels 001C  
                            __end_of_UpdateJoinInProgress 8AB8  
                            __end_of_ExecuteRxTimingSetup 87A2  
                                 __size_of_HALSPICSAssert 0004  
                                 __end_of_FskSyncWordBuff FFE1  
                __end_of_RADIO_WriteFSKFrequencyDeviation 7796  
               __size_of_RADIO_WriteFSKFrequencyDeviation 006A  
                      ??_RADIO_WriteFSKFrequencyDeviation 0071  
                       ?_RADIO_WriteFSKFrequencyDeviation 006D  
                        _RADIO_WriteFSKFrequencyDeviation 772C  
                __end_of_LORAWAN_SetApplicationSessionKey 8650  
               __size_of_LORAWAN_SetApplicationSessionKey 002E  
                      ??_LORAWAN_SetApplicationSessionKey 006D  
                       ?_LORAWAN_SetApplicationSessionKey 006B  
                        _LORAWAN_SetApplicationSessionKey 8622  
                                        ExtractMic@buffer 006B  
                                 ??_RADIO_FSKPayloadReady 00F3  
                                UpdateDataRange@channelId 0062  
                                _RADIO_UnhandledInterrupt 8472  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 7E3C  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite 896C  
                                 __size_of_ExecuteLinkAdr 02C8  
                            RADIO_WriteFSKBitRate@bitRate 006D  
                                      i2_TMR_GetDeltaTime 4E10  
                                         RADIO_SetCRC@crc 0060  
                                       __CFG_FOSC$INTIO67 000000  
                                         _PIN_MANAGER_IOC 8D42  
                                     RADIO_WritePower@ocp 0064  
                                      ??_LORAWAN_Mainloop 00F9  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0063  
                                       ??_UpdateDataRange 0061  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 867E  
                        RADIO_WriteConfiguration@regValue 00B0  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 0124  
                                           ExtractMic@mic 0073  
                                       _LORAWAN_RxTimeout 259A  
                             __end_of_RADIO_SetModulation 8D24  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 003C  
                                        ??_LORAWAN_RxDone 00DA  
                                     ?i2_TMR_GetDeltaTime 0009  
