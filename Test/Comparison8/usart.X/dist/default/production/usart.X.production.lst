

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 06 16:04:05 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84  0000                     
    85                           ; Version 1.45
    86                           ; Generated 16/11/2017 GMT
    87                           ; 
    88                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18LF46K22 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     
   120 ;; Function _RADIO_RxFSKTimeout is unused but had its address taken
   121  0000                     
   122 ;; Function _RADIO_WatchdogTimeout is unused but had its address taken
   123  0000                     
   124 ;; Function _LORAWAN_ReceiveWindow1Callback is unused but had its address taken
   125  0000                     
   126 ;; Function _LORAWAN_ReceiveWindow2Callback is unused but had its address taken
   127  0000                     
   128 ;; Function _LORAWAN_LinkCheckCallback is unused but had its address taken
   129  0000                     
   130 ;; Function _AckRetransmissionCallback is unused but had its address taken
   131  0000                     
   132 ;; Function _UnconfirmedTransmissionCallback is unused but had its address taken
   133  0000                     
   134 ;; Function _AutomaticReplyCallback is unused but had its address taken
   135  0000                     
   136 ;; Function _UpdateJoinSuccessState is unused but had its address taken
   137  0000                     
   138 ;; Function _DutyCycleCallback is unused but had its address taken
   139  0000                     
   140                           	psect	idataBANK0
   141  000BC4                     __pidataBANK0:
   142                           	opt stack 0
   143                           
   144                           ;initializer for _randx
   145  000BC4  0001               	dw	1
   146  000BC6  0000               	dw	0
   147                           
   148                           ;initializer for _devAddr
   149  000BC8  5E47               	dw	24135
   150  000BCA  3DEF               	dw	15855
   151                           
   152                           ;initializer for _ticksToScheduledInterrupt
   153  000BCC  FFFF               	dw	65535
   154  000BCE  FFFF               	dw	65535
   155                           
   156                           	psect	idataBANK3
   157  000956                     __pidataBANK3:
   158                           	opt stack 0
   159                           
   160                           ;initializer for _appSKey
   161  000956  96                 	db	150
   162  000957  23                 	db	35
   163  000958  5A                 	db	90
   164  000959  1F                 	db	31
   165  00095A  9A                 	db	154
   166  00095B  E1                 	db	225
   167  00095C  60                 	db	96
   168  00095D  36                 	db	54
   169  00095E  81                 	db	129
   170  00095F  C4                 	db	196
   171  000960  E4                 	db	228
   172  000961  B5                 	db	181
   173  000962  54                 	db	84
   174  000963  C3                 	db	195
   175  000964  CA                 	db	202
   176  000965  B5                 	db	181
   177                           
   178                           ;initializer for _nwkSKey
   179  000966  CB                 	db	203
   180  000967  1E                 	db	30
   181  000968  88                 	db	136
   182  000969  5D                 	db	93
   183  00096A  5D                 	db	93
   184  00096B  F1                 	db	241
   185  00096C  12                 	db	18
   186  00096D  D5                 	db	213
   187  00096E  08                 	db	8
   188  00096F  CC                 	db	204
   189  000970  B9                 	db	185
   190  000971  D1                 	db	209
   191  000972  D4                 	db	212
   192  000973  4B                 	db	75
   193  000974  1E                 	db	30
   194  000975  DF                 	db	223
   195                           
   196                           ;initializer for GenerateSubkey@F7103
   197  000976  00                 	db	0
   198  000977  00                 	db	0
   199  000978  00                 	db	0
   200  000979  00                 	db	0
   201  00097A  00                 	db	0
   202  00097B  00                 	db	0
   203  00097C  00                 	db	0
   204  00097D  00                 	db	0
   205  00097E  00                 	db	0
   206  00097F  00                 	db	0
   207  000980  00                 	db	0
   208  000981  00                 	db	0
   209  000982  00                 	db	0
   210  000983  00                 	db	0
   211  000984  00                 	db	0
   212  000985  87                 	db	135
   213                           
   214                           	psect	mediumconst
   215  00FE66                     __pmediumconst:
   216                           	opt stack 0
   217  00FE66  00                 	db	0
   218  00FE67                     _STable:
   219                           	opt stack 0
   220  00FE67  63                 	db	99
   221  00FE68  7C                 	db	124
   222  00FE69  77                 	db	119
   223  00FE6A  7B                 	db	123
   224  00FE6B  F2                 	db	242
   225  00FE6C  6B                 	db	107
   226  00FE6D  6F                 	db	111
   227  00FE6E  C5                 	db	197
   228  00FE6F  30                 	db	48
   229  00FE70  01                 	db	1
   230  00FE71  67                 	db	103
   231  00FE72  2B                 	db	43
   232  00FE73  FE                 	db	254
   233  00FE74  D7                 	db	215
   234  00FE75  AB                 	db	171
   235  00FE76  76                 	db	118
   236  00FE77  CA                 	db	202
   237  00FE78  82                 	db	130
   238  00FE79  C9                 	db	201
   239  00FE7A  7D                 	db	125
   240  00FE7B  FA                 	db	250
   241  00FE7C  59                 	db	89
   242  00FE7D  47                 	db	71
   243  00FE7E  F0                 	db	240
   244  00FE7F  AD                 	db	173
   245  00FE80  D4                 	db	212
   246  00FE81  A2                 	db	162
   247  00FE82  AF                 	db	175
   248  00FE83  9C                 	db	156
   249  00FE84  A4                 	db	164
   250  00FE85  72                 	db	114
   251  00FE86  C0                 	db	192
   252  00FE87  B7                 	db	183
   253  00FE88  FD                 	db	253
   254  00FE89  93                 	db	147
   255  00FE8A  26                 	db	38
   256  00FE8B  36                 	db	54
   257  00FE8C  3F                 	db	63
   258  00FE8D  F7                 	db	247
   259  00FE8E  CC                 	db	204
   260  00FE8F  34                 	db	52
   261  00FE90  A5                 	db	165
   262  00FE91  E5                 	db	229
   263  00FE92  F1                 	db	241
   264  00FE93  71                 	db	113
   265  00FE94  D8                 	db	216
   266  00FE95  31                 	db	49
   267  00FE96  15                 	db	21
   268  00FE97  04                 	db	4
   269  00FE98  C7                 	db	199
   270  00FE99  23                 	db	35
   271  00FE9A  C3                 	db	195
   272  00FE9B  18                 	db	24
   273  00FE9C  96                 	db	150
   274  00FE9D  05                 	db	5
   275  00FE9E  9A                 	db	154
   276  00FE9F  07                 	db	7
   277  00FEA0  12                 	db	18
   278  00FEA1  80                 	db	128
   279  00FEA2  E2                 	db	226
   280  00FEA3  EB                 	db	235
   281  00FEA4  27                 	db	39
   282  00FEA5  B2                 	db	178
   283  00FEA6  75                 	db	117
   284  00FEA7  09                 	db	9
   285  00FEA8  83                 	db	131
   286  00FEA9  2C                 	db	44
   287  00FEAA  1A                 	db	26
   288  00FEAB  1B                 	db	27
   289  00FEAC  6E                 	db	110
   290  00FEAD  5A                 	db	90
   291  00FEAE  A0                 	db	160
   292  00FEAF  52                 	db	82
   293  00FEB0  3B                 	db	59
   294  00FEB1  D6                 	db	214
   295  00FEB2  B3                 	db	179
   296  00FEB3  29                 	db	41
   297  00FEB4  E3                 	db	227
   298  00FEB5  2F                 	db	47
   299  00FEB6  84                 	db	132
   300  00FEB7  53                 	db	83
   301  00FEB8  D1                 	db	209
   302  00FEB9  00                 	db	0
   303  00FEBA  ED                 	db	237
   304  00FEBB  20                 	db	32
   305  00FEBC  FC                 	db	252
   306  00FEBD  B1                 	db	177
   307  00FEBE  5B                 	db	91
   308  00FEBF  6A                 	db	106
   309  00FEC0  CB                 	db	203
   310  00FEC1  BE                 	db	190
   311  00FEC2  39                 	db	57
   312  00FEC3  4A                 	db	74
   313  00FEC4  4C                 	db	76
   314  00FEC5  58                 	db	88
   315  00FEC6  CF                 	db	207
   316  00FEC7  D0                 	db	208
   317  00FEC8  EF                 	db	239
   318  00FEC9  AA                 	db	170
   319  00FECA  FB                 	db	251
   320  00FECB  43                 	db	67
   321  00FECC  4D                 	db	77
   322  00FECD  33                 	db	51
   323  00FECE  85                 	db	133
   324  00FECF  45                 	db	69
   325  00FED0  F9                 	db	249
   326  00FED1  02                 	db	2
   327  00FED2  7F                 	db	127
   328  00FED3  50                 	db	80
   329  00FED4  3C                 	db	60
   330  00FED5  9F                 	db	159
   331  00FED6  A8                 	db	168
   332  00FED7  51                 	db	81
   333  00FED8  A3                 	db	163
   334  00FED9  40                 	db	64
   335  00FEDA  8F                 	db	143
   336  00FEDB  92                 	db	146
   337  00FEDC  9D                 	db	157
   338  00FEDD  38                 	db	56
   339  00FEDE  F5                 	db	245
   340  00FEDF  BC                 	db	188
   341  00FEE0  B6                 	db	182
   342  00FEE1  DA                 	db	218
   343  00FEE2  21                 	db	33
   344  00FEE3  10                 	db	16
   345  00FEE4  FF                 	db	255
   346  00FEE5  F3                 	db	243
   347  00FEE6  D2                 	db	210
   348  00FEE7  CD                 	db	205
   349  00FEE8  0C                 	db	12
   350  00FEE9  13                 	db	19
   351  00FEEA  EC                 	db	236
   352  00FEEB  5F                 	db	95
   353  00FEEC  97                 	db	151
   354  00FEED  44                 	db	68
   355  00FEEE  17                 	db	23
   356  00FEEF  C4                 	db	196
   357  00FEF0  A7                 	db	167
   358  00FEF1  7E                 	db	126
   359  00FEF2  3D                 	db	61
   360  00FEF3  64                 	db	100
   361  00FEF4  5D                 	db	93
   362  00FEF5  19                 	db	25
   363  00FEF6  73                 	db	115
   364  00FEF7  60                 	db	96
   365  00FEF8  81                 	db	129
   366  00FEF9  4F                 	db	79
   367  00FEFA  DC                 	db	220
   368  00FEFB  22                 	db	34
   369  00FEFC  2A                 	db	42
   370  00FEFD  90                 	db	144
   371  00FEFE  88                 	db	136
   372  00FEFF  46                 	db	70
   373  00FF00  EE                 	db	238
   374  00FF01  B8                 	db	184
   375  00FF02  14                 	db	20
   376  00FF03  DE                 	db	222
   377  00FF04  5E                 	db	94
   378  00FF05  0B                 	db	11
   379  00FF06  DB                 	db	219
   380  00FF07  E0                 	db	224
   381  00FF08  32                 	db	50
   382  00FF09  3A                 	db	58
   383  00FF0A  0A                 	db	10
   384  00FF0B  49                 	db	73
   385  00FF0C  06                 	db	6
   386  00FF0D  24                 	db	36
   387  00FF0E  5C                 	db	92
   388  00FF0F  C2                 	db	194
   389  00FF10  D3                 	db	211
   390  00FF11  AC                 	db	172
   391  00FF12  62                 	db	98
   392  00FF13  91                 	db	145
   393  00FF14  95                 	db	149
   394  00FF15  E4                 	db	228
   395  00FF16  79                 	db	121
   396  00FF17  E7                 	db	231
   397  00FF18  C8                 	db	200
   398  00FF19  37                 	db	55
   399  00FF1A  6D                 	db	109
   400  00FF1B  8D                 	db	141
   401  00FF1C  D5                 	db	213
   402  00FF1D  4E                 	db	78
   403  00FF1E  A9                 	db	169
   404  00FF1F  6C                 	db	108
   405  00FF20  56                 	db	86
   406  00FF21  F4                 	db	244
   407  00FF22  EA                 	db	234
   408  00FF23  65                 	db	101
   409  00FF24  7A                 	db	122
   410  00FF25  AE                 	db	174
   411  00FF26  08                 	db	8
   412  00FF27  BA                 	db	186
   413  00FF28  78                 	db	120
   414  00FF29  25                 	db	37
   415  00FF2A  2E                 	db	46
   416  00FF2B  1C                 	db	28
   417  00FF2C  A6                 	db	166
   418  00FF2D  B4                 	db	180
   419  00FF2E  C6                 	db	198
   420  00FF2F  E8                 	db	232
   421  00FF30  DD                 	db	221
   422  00FF31  74                 	db	116
   423  00FF32  1F                 	db	31
   424  00FF33  4B                 	db	75
   425  00FF34  BD                 	db	189
   426  00FF35  8B                 	db	139
   427  00FF36  8A                 	db	138
   428  00FF37  70                 	db	112
   429  00FF38  3E                 	db	62
   430  00FF39  B5                 	db	181
   431  00FF3A  66                 	db	102
   432  00FF3B  48                 	db	72
   433  00FF3C  03                 	db	3
   434  00FF3D  F6                 	db	246
   435  00FF3E  0E                 	db	14
   436  00FF3F  61                 	db	97
   437  00FF40  35                 	db	53
   438  00FF41  57                 	db	87
   439  00FF42  B9                 	db	185
   440  00FF43  86                 	db	134
   441  00FF44  C1                 	db	193
   442  00FF45  1D                 	db	29
   443  00FF46  9E                 	db	158
   444  00FF47  E1                 	db	225
   445  00FF48  F8                 	db	248
   446  00FF49  98                 	db	152
   447  00FF4A  11                 	db	17
   448  00FF4B  69                 	db	105
   449  00FF4C  D9                 	db	217
   450  00FF4D  8E                 	db	142
   451  00FF4E  94                 	db	148
   452  00FF4F  9B                 	db	155
   453  00FF50  1E                 	db	30
   454  00FF51  87                 	db	135
   455  00FF52  E9                 	db	233
   456  00FF53  CE                 	db	206
   457  00FF54  55                 	db	85
   458  00FF55  28                 	db	40
   459  00FF56  DF                 	db	223
   460  00FF57  8C                 	db	140
   461  00FF58  A1                 	db	161
   462  00FF59  89                 	db	137
   463  00FF5A  0D                 	db	13
   464  00FF5B  BF                 	db	191
   465  00FF5C  E6                 	db	230
   466  00FF5D  42                 	db	66
   467  00FF5E  68                 	db	104
   468  00FF5F  41                 	db	65
   469  00FF60  99                 	db	153
   470  00FF61  2D                 	db	45
   471  00FF62  0F                 	db	15
   472  00FF63  B0                 	db	176
   473  00FF64  54                 	db	84
   474  00FF65  BB                 	db	187
   475  00FF66  16                 	db	22
   476  00FF67                     __end_of_STable:
   477                           	opt stack 0
   478  00FF67                     _modulation:
   479                           	opt stack 0
   480  00FF67  01                 	db	1
   481  00FF68  01                 	db	1
   482  00FF69  01                 	db	1
   483  00FF6A  01                 	db	1
   484  00FF6B  01                 	db	1
   485  00FF6C  01                 	db	1
   486  00FF6D  01                 	db	1
   487  00FF6E  00                 	db	0
   488  00FF6F                     __end_of_modulation:
   489                           	opt stack 0
   490  00FF6F                     _rxWindowOffset:
   491                           	opt stack 0
   492  00FF6F  DF                 	db	223
   493  00FF70  CE                 	db	206
   494  00FF71  C6                 	db	198
   495  00FF72  C2                 	db	194
   496  00FF73  BE                 	db	190
   497  00FF74  BC                 	db	188
   498  00FF75  F1                 	db	241
   499  00FF76  FE                 	db	254
   500  00FF77                     __end_of_rxWindowOffset:
   501                           	opt stack 0
   502  00FF77                     _maxPayloadSize:
   503                           	opt stack 0
   504  00FF77  33                 	db	51
   505  00FF78  33                 	db	51
   506  00FF79  33                 	db	51
   507  00FF7A  73                 	db	115
   508  00FF7B  F2                 	db	242
   509  00FF7C  F2                 	db	242
   510  00FF7D  F2                 	db	242
   511  00FF7E  38                 	db	56
   512  00FF7F                     __end_of_maxPayloadSize:
   513                           	opt stack 0
   514  00FF7F                     _rxWindowSize:
   515                           	opt stack 0
   516  00FF7F  08                 	db	8
   517  00FF80  0A                 	db	10
   518  00FF81  0E                 	db	14
   519  00FF82  1A                 	db	26
   520  00FF83  31                 	db	49
   521  00FF84  58                 	db	88
   522  00FF85  3C                 	db	60
   523  00FF86  08                 	db	8
   524  00FF87                     __end_of_rxWindowSize:
   525                           	opt stack 0
   526  00FF87                     _bandwidth:
   527                           	opt stack 0
   528  00FF87  07                 	db	7
   529  00FF88  07                 	db	7
   530  00FF89  07                 	db	7
   531  00FF8A  07                 	db	7
   532  00FF8B  07                 	db	7
   533  00FF8C  07                 	db	7
   534  00FF8D  08                 	db	8
   535  00FF8E                     __end_of_bandwidth:
   536                           	opt stack 0
   537  00FF8E                     _spreadingFactor:
   538                           	opt stack 0
   539  00FF8E  0C                 	db	12
   540  00FF8F  0B                 	db	11
   541  00FF90  0A                 	db	10
   542  00FF91  09                 	db	9
   543  00FF92  08                 	db	8
   544  00FF93  07                 	db	7
   545  00FF94  07                 	db	7
   546  00FF95                     __end_of_spreadingFactor:
   547                           	opt stack 0
   548  00FF95                     _macEndDevCmdReplyLen:
   549                           	opt stack 0
   550  00FF95  01                 	db	1
   551  00FF96  02                 	db	2
   552  00FF97  01                 	db	1
   553  00FF98  02                 	db	2
   554  00FF99  03                 	db	3
   555  00FF9A  02                 	db	2
   556  00FF9B  01                 	db	1
   557  00FF9C                     __end_of_macEndDevCmdReplyLen:
   558                           	opt stack 0
   559  00FF9C  0A                 	db	10
   560  00FF9D  07                 	db	7
   561  00FF9E  04                 	db	4
   562  00FF9F  01                 	db	1
   563  00FFA0  FE                 	db	254
   564  00FFA1  FB                 	db	251
   565  00FFA2                     __end_of_txPower433:
   566                           	opt stack 0
   567  00FFA2                     _txPower868:
   568                           	opt stack 0
   569  00FFA2  14                 	db	20
   570  00FFA3  0E                 	db	14
   571  00FFA4  0B                 	db	11
   572  00FFA5  08                 	db	8
   573  00FFA6  05                 	db	5
   574  00FFA7  02                 	db	2
   575  00FFA8                     __end_of_txPower868:
   576                           	opt stack 0
   577  00FFA8                     _DefaultChannels433:
   578                           	opt stack 0
   579  00FFA8  B9D8               	dw	47576
   580  00FFAA  19D1               	dw	6609
   581  00FFAC  01                 	db	1
   582  00FFAD  50                 	db	80
   583  00FFAE  012E               	dw	302
   584  00FFB0  0000               	dw	0
   585  00FFB2  0000               	dw	0
   586  00FFB4  01                 	db	1
   587  00FFB5  FF                 	db	255
   588  00FFB6  C718               	dw	50968
   589  00FFB8  19D4               	dw	6612
   590  00FFBA  01                 	db	1
   591  00FFBB  50                 	db	80
   592  00FFBC  012E               	dw	302
   593  00FFBE  0000               	dw	0
   594  00FFC0  0000               	dw	0
   595  00FFC2  01                 	db	1
   596  00FFC3  FF                 	db	255
   597  00FFC4  D458               	dw	54360
   598  00FFC6  19D7               	dw	6615
   599  00FFC8  01                 	db	1
   600  00FFC9  50                 	db	80
   601  00FFCA  012E               	dw	302
   602  00FFCC  0000               	dw	0
   603  00FFCE  0000               	dw	0
   604  00FFD0  01                 	db	1
   605  00FFD1  FF                 	db	255
   606  00FFD2                     __end_of_DefaultChannels433:
   607                           	opt stack 0
   608  00FFD2                     _DefaultChannels868:
   609                           	opt stack 0
   610  00FFD2  27A0               	dw	10144
   611  00FFD4  33BE               	dw	13246
   612  00FFD6  01                 	db	1
   613  00FFD7  50                 	db	80
   614  00FFD8  012E               	dw	302
   615  00FFDA  0000               	dw	0
   616  00FFDC  0000               	dw	0
   617  00FFDE  01                 	db	1
   618  00FFDF  FF                 	db	255
   619  00FFE0  34E0               	dw	13536
   620  00FFE2  33C1               	dw	13249
   621  00FFE4  01                 	db	1
   622  00FFE5  50                 	db	80
   623  00FFE6  012E               	dw	302
   624  00FFE8  0000               	dw	0
   625  00FFEA  0000               	dw	0
   626  00FFEC  01                 	db	1
   627  00FFED  FF                 	db	255
   628  00FFEE  4220               	dw	16928
   629  00FFF0  33C4               	dw	13252
   630  00FFF2  01                 	db	1
   631  00FFF3  50                 	db	80
   632  00FFF4  012E               	dw	302
   633  00FFF6  0000               	dw	0
   634  00FFF8  0000               	dw	0
   635  00FFFA  01                 	db	1
   636  00FFFB  FF                 	db	255
   637  00FFFC                     __end_of_DefaultChannels868:
   638                           	opt stack 0
   639  00FFFC                     _FskSyncWordBuff:
   640                           	opt stack 0
   641  00FFFC  C1                 	db	193
   642  00FFFD  94                 	db	148
   643  00FFFE  C1                 	db	193
   644  00FFFF                     __end_of_FskSyncWordBuff:
   645                           	opt stack 0
   646  00FFFF  00                 	db	0	; dummy byte at the end
   647  0000                     
   648                           	psect	nvBANK0
   649  0000E3                     __pnvBANK0:
   650                           	opt stack 0
   651  0000E3                     _timer5ReloadVal:
   652                           	opt stack 0
   653  0000E3                     	ds	2
   654  0000E5                     _TMR1_InterruptHandler:
   655                           	opt stack 0
   656  0000E5                     	ds	2
   657  0000E7                     _timer1ReloadVal:
   658                           	opt stack 0
   659  0000E7                     	ds	2
   660  0000E9                     _IOCB4_InterruptHandler:
   661                           	opt stack 0
   662  0000E9                     	ds	2
   663  0000EB                     _INT2_InterruptHandler:
   664                           	opt stack 0
   665  0000EB                     	ds	2
   666  0000ED                     _INT1_InterruptHandler:
   667                           	opt stack 0
   668  0000ED                     	ds	2
   669  0000EF                     _eusart1TxBufferRemaining:
   670                           	opt stack 0
   671  0000EF                     	ds	1
   672                           
   673                           	psect	nvBANK1
   674  0001F5                     __pnvBANK1:
   675                           	opt stack 0
   676  0001F5                     _EUSART1_ErrorHandler:
   677                           	opt stack 0
   678  0001F5                     	ds	2
   679  0001F7                     _EUSART1_OverrunErrorHandler:
   680                           	opt stack 0
   681  0001F7                     	ds	2
   682  0001F9                     _EUSART1_FramingErrorHandler:
   683                           	opt stack 0
   684  0001F9                     	ds	2
   685  0001FB                     _EUSART1_RxDefaultInterruptHandler:
   686                           	opt stack 0
   687  0001FB                     	ds	2
   688  0001FD                     _EUSART1_TxDefaultInterruptHandler:
   689                           	opt stack 0
   690  0001FD                     	ds	2
   691  0000                     _TMR5	set	3919
   692  0000                     _T5GCONbits	set	3917
   693  0000                     _T5CONbits	set	3918
   694  0000                     _T5CON	set	3918
   695  0000                     _TMR5L	set	3919
   696  0000                     _TMR5H	set	3920
   697  0000                     _T5GCON	set	3917
   698  0000                     _ANSELA	set	3896
   699  0000                     _ANSELE	set	3900
   700  0000                     _ANSELB	set	3897
   701  0000                     _ANSELC	set	3898
   702  0000                     _ANSELD	set	3899
   703  0000                     _TMR1	set	4046
   704  0000                     _TXREG	set	4013
   705  0000                     _PIR5bits	set	3966
   706  0000                     _T1GCONbits	set	4044
   707  0000                     _T1CONbits	set	4045
   708  0000                     _T1CON	set	4045
   709  0000                     _TMR1L	set	4046
   710  0000                     _TMR1H	set	4047
   711  0000                     _T1GCON	set	4044
   712  0000                     _RCREG1	set	4014
   713  0000                     _RCSTA1bits	set	4011
   714  0000                     _TXREG1	set	4013
   715  0000                     _TXSTA1bits	set	4012
   716  0000                     _SPBRGH1	set	4016
   717  0000                     _SPBRG1	set	4015
   718  0000                     _TXSTA1	set	4012
   719  0000                     _RCSTA1	set	4011
   720  0000                     _BAUDCON1	set	4024
   721  0000                     _SSP2STATbits	set	3949
   722  0000                     _SSP2BUF	set	3951
   723  0000                     _SSP2CON1bits	set	3948
   724  0000                     _SSP2ADD	set	3950
   725  0000                     _SSP2CON1	set	3948
   726  0000                     _SSP2STAT	set	3949
   727  0000                     _IOCBbits	set	3938
   728  0000                     _WPUB	set	3937
   729  0000                     _TRISD	set	3989
   730  0000                     _TRISC	set	3988
   731  0000                     _TRISB	set	3987
   732  0000                     _TRISA	set	3986
   733  0000                     _TRISE	set	3990
   734  0000                     _LATC	set	3979
   735  0000                     _LATB	set	3978
   736  0000                     _LATA	set	3977
   737  0000                     _LATD	set	3980
   738  0000                     _LATE	set	3981
   739  0000                     _OSCTUNE	set	3995
   740  0000                     _OSCCON2	set	4050
   741  0000                     _OSCCON	set	4051
   742  0000                     _PIR1bits	set	3998
   743  0000                     _PIE1bits	set	3997
   744  0000                     _RCONbits	set	4048
   745  0000                     _INTCON2bits	set	4081
   746  0000                     _INTCON3bits	set	4080
   747  0000                     _INTCONbits	set	4082
   748  0000                     _PORTBbits	set	3969
   749  0000                     _LATD3	set	31843
   750  0000                     _LATC2	set	31834
   751  0000                     _TRISC2	set	31906
   752                           
   753                           ; #config settings
   754  0000                     
   755                           	psect	cinit
   756  000660                     __pcinit:
   757                           	opt stack 0
   758  000660                     start_initialization:
   759                           	opt stack 0
   760  000660                     __initialization:
   761                           	opt stack 0
   762                           
   763                           ; Initialize objects allocated to BANK3 (48 bytes)
   764                           ; load TBLPTR registers with __pidataBANK3
   765  000660  0E56               	movlw	low __pidataBANK3
   766  000662  6EF6               	movwf	tblptrl,c
   767  000664  0E09               	movlw	high __pidataBANK3
   768  000666  6EF7               	movwf	tblptrh,c
   769  000668  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   770  00066A  6EF8               	movwf	tblptru,c
   771  00066C  EE03  F0A0         	lfsr	0,__pdataBANK3
   772  000670  EE20 F030          	lfsr	2,48
   773  000674                     copy_data0:
   774  000674  0009               	tblrd		*+
   775  000676  CFF5 FFEE          	movff	tablat,postinc0
   776  00067A  50DD               	movf	postdec2,w,c
   777  00067C  50D9               	movf	fsr2l,w,c
   778  00067E  E1FA               	bnz	copy_data0
   779                           
   780                           ; Initialize objects allocated to BANK0 (12 bytes)
   781                           ; load TBLPTR registers with __pidataBANK0
   782  000680  0EC4               	movlw	low __pidataBANK0
   783  000682  6EF6               	movwf	tblptrl,c
   784  000684  0E0B               	movlw	high __pidataBANK0
   785  000686  6EF7               	movwf	tblptrh,c
   786  000688  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   787  00068A  6EF8               	movwf	tblptru,c
   788  00068C  EE00  F0F0         	lfsr	0,__pdataBANK0
   789  000690  EE20 F00C          	lfsr	2,12
   790  000694                     copy_data1:
   791  000694  0009               	tblrd		*+
   792  000696  CFF5 FFEE          	movff	tablat,postinc0
   793  00069A  50DD               	movf	postdec2,w,c
   794  00069C  50D9               	movf	fsr2l,w,c
   795  00069E  E1FA               	bnz	copy_data1
   796                           
   797                           ; Clear objects allocated to BIGRAM (2566 bytes)
   798  0006A0  EE03  F0D0         	lfsr	0,__pbssBIGRAM
   799  0006A4  EE2A F006          	lfsr	2,2566
   800  0006A8                     clear_0:
   801  0006A8  6AEE               	clrf	postinc0,c
   802  0006AA  50DD               	movf	postdec2,w,c
   803  0006AC  50D9               	movf	fsr2l,w,c
   804  0006AE  E1FC               	bnz	clear_0
   805  0006B0  50DA               	movf	fsr2h,w,c
   806  0006B2  E1FA               	bnz	clear_0
   807                           
   808                           ; Clear objects allocated to BANK3 (160 bytes)
   809  0006B4  EE03  F000         	lfsr	0,__pbssBANK3
   810  0006B8  0EA0               	movlw	160
   811  0006BA                     clear_1:
   812  0006BA  6AEE               	clrf	postinc0,c
   813  0006BC  06E8               	decf	wreg,f,c
   814  0006BE  E1FD               	bnz	clear_1
   815                           
   816                           ; Clear objects allocated to BANK2 (248 bytes)
   817  0006C0  EE02  F000         	lfsr	0,__pbssBANK2
   818  0006C4  0EF8               	movlw	248
   819  0006C6                     clear_2:
   820  0006C6  6AEE               	clrf	postinc0,c
   821  0006C8  06E8               	decf	wreg,f,c
   822  0006CA  E1FD               	bnz	clear_2
   823                           
   824                           ; Clear objects allocated to BANK1 (245 bytes)
   825  0006CC  EE01  F000         	lfsr	0,__pbssBANK1
   826  0006D0  0EF5               	movlw	245
   827  0006D2                     clear_3:
   828  0006D2  6AEE               	clrf	postinc0,c
   829  0006D4  06E8               	decf	wreg,f,c
   830  0006D6  E1FD               	bnz	clear_3
   831                           
   832                           ; Clear objects allocated to BANK0 (131 bytes)
   833  0006D8  EE00  F060         	lfsr	0,__pbssBANK0
   834  0006DC  0E83               	movlw	131
   835  0006DE                     clear_4:
   836  0006DE  6AEE               	clrf	postinc0,c
   837  0006E0  06E8               	decf	wreg,f,c
   838  0006E2  E1FD               	bnz	clear_4
   839                           
   840                           ; Clear objects allocated to COMRAM (14 bytes)
   841  0006E4  EE00  F03E         	lfsr	0,__pbssCOMRAM
   842  0006E8  0E0E               	movlw	14
   843  0006EA                     clear_5:
   844  0006EA  6AEE               	clrf	postinc0,c
   845  0006EC  06E8               	decf	wreg,f,c
   846  0006EE  E1FD               	bnz	clear_5
   847  0006F0                     end_of_initialization:
   848                           	opt stack 0
   849  0006F0                     __end_of__initialization:
   850                           	opt stack 0
   851  0006F0  0100               	movlb	0
   852  0006F2  EFD1  F002         	goto	_main	;jump to C main() function
   853                           tblptru	equ	0xFF8
   854                           tblptrh	equ	0xFF7
   855                           tblptrl	equ	0xFF6
   856                           tablat	equ	0xFF5
   857                           postinc0	equ	0xFEE
   858                           wreg	equ	0xFE8
   859                           postdec2	equ	0xFDD
   860                           fsr2h	equ	0xFDA
   861                           fsr2l	equ	0xFD9
   862                           
   863                           	psect	bssCOMRAM
   864  00003E                     __pbssCOMRAM:
   865                           	opt stack 0
   866  00003E                     _rxPayload:
   867                           	opt stack 0
   868  00003E                     	ds	4
   869  000042                     _datatobesolved:
   870                           	opt stack 0
   871  000042                     	ds	2
   872  000044                     _reloadVal:
   873                           	opt stack 0
   874  000044                     	ds	2
   875  000046                     _eusart1RxStatusBuffer:
   876                           	opt stack 0
   877  000046                     	ds	1
   878  000047                     _eusart1RxTail:
   879                           	opt stack 0
   880  000047                     	ds	1
   881  000048                     _eusart1RxHead:
   882                           	opt stack 0
   883  000048                     	ds	1
   884  000049                     __rcon:
   885                           	opt stack 0
   886  000049                     	ds	1
   887  00004A                     _allocatedTimers:
   888                           	opt stack 0
   889  00004A                     	ds	1
   890  00004B                     _localDioStatus:
   891                           	opt stack 0
   892  00004B                     	ds	1
   893                           tblptru	equ	0xFF8
   894                           tblptrh	equ	0xFF7
   895                           tblptrl	equ	0xFF6
   896                           tablat	equ	0xFF5
   897                           postinc0	equ	0xFEE
   898                           wreg	equ	0xFE8
   899                           postdec2	equ	0xFDD
   900                           fsr2h	equ	0xFDA
   901                           fsr2l	equ	0xFD9
   902                           
   903                           	psect	bssBANK0
   904  000060                     __pbssBANK0:
   905                           	opt stack 0
   906  000060                     TMR_GetDeltaTime@retVal:
   907                           	opt stack 0
   908  000060                     	ds	4
   909  000064                     _ticksAccounted:
   910                           	opt stack 0
   911  000064                     	ds	4
   912  000068                     _ticksAdded:
   913                           	opt stack 0
   914  000068                     	ds	4
   915  00006C                     _c:
   916                           	opt stack 0
   917  00006C                     	ds	2
   918  00006E                     _length:
   919                           	opt stack 0
   920  00006E                     	ds	2
   921  000070                     _position:
   922                           	opt stack 0
   923  000070                     	ds	2
   924  000072                     _n:
   925                           	opt stack 0
   926  000072                     	ds	2
   927  000074                     _countera:
   928                           	opt stack 0
   929  000074                     	ds	2
   930  000076                     _counterx:
   931                           	opt stack 0
   932  000076                     	ds	2
   933  000078                     _bitStatus7:
   934                           	opt stack 0
   935  000078                     	ds	2
   936  00007A                     _bitStatus6:
   937                           	opt stack 0
   938  00007A                     	ds	2
   939  00007C                     _bitStatus5:
   940                           	opt stack 0
   941  00007C                     	ds	2
   942  00007E                     _bitStatus4:
   943                           	opt stack 0
   944  00007E                     	ds	2
   945  000080                     _bitStatus3:
   946                           	opt stack 0
   947  000080                     	ds	2
   948  000082                     _bitStatus2:
   949                           	opt stack 0
   950  000082                     	ds	2
   951  000084                     _bitStatus1:
   952                           	opt stack 0
   953  000084                     	ds	2
   954  000086                     _bitStatus:
   955                           	opt stack 0
   956  000086                     	ds	2
   957  000088                     _bitStatusbefore7:
   958                           	opt stack 0
   959  000088                     	ds	2
   960  00008A                     _bitStatusbefore6:
   961                           	opt stack 0
   962  00008A                     	ds	2
   963  00008C                     _bitStatusbefore5:
   964                           	opt stack 0
   965  00008C                     	ds	2
   966  00008E                     _bitStatusbefore4:
   967                           	opt stack 0
   968  00008E                     	ds	2
   969  000090                     _bitStatusbefore3:
   970                           	opt stack 0
   971  000090                     	ds	2
   972  000092                     _bitStatusbefore2:
   973                           	opt stack 0
   974  000092                     	ds	2
   975  000094                     _bitStatusbefore1:
   976                           	opt stack 0
   977  000094                     	ds	2
   978  000096                     _counterinterrupt:
   979                           	opt stack 0
   980  000096                     	ds	2
   981  000098                     TMR_SwapTimer@retVal:
   982                           	opt stack 0
   983  000098                     	ds	2
   984  00009A                     TMR_SwapTimer@oldVal:
   985                           	opt stack 0
   986  00009A                     	ds	2
   987  00009C                     TMR_GetDeltaTime@tmrVal:
   988                           	opt stack 0
   989  00009C                     	ds	2
   990  00009E                     _character:
   991                           	opt stack 0
   992  00009E                     	ds	1
   993  00009F                     _counter:
   994                           	opt stack 0
   995  00009F                     	ds	1
   996  0000A0                     _dataxsolved:
   997                           	opt stack 0
   998  0000A0                     	ds	1
   999  0000A1                     _datax:
  1000                           	opt stack 0
  1001  0000A1                     	ds	1
  1002  0000A2                     _eusart1RxLastError:
  1003                           	opt stack 0
  1004  0000A2                     	ds	1
  1005  0000A3                     _eusart1RxCount:
  1006                           	opt stack 0
  1007  0000A3                     	ds	1
  1008  0000A4                     _eusart1RxBuffer:
  1009                           	opt stack 0
  1010  0000A4                     	ds	1
  1011  0000A5                     _eusart1TxBuffer:
  1012                           	opt stack 0
  1013  0000A5                     	ds	1
  1014  0000A6                     _eusart1TxTail:
  1015                           	opt stack 0
  1016  0000A6                     	ds	1
  1017  0000A7                     _eusart1TxHead:
  1018                           	opt stack 0
  1019  0000A7                     	ds	1
  1020  0000A8                     __roundCounter:
  1021                           	opt stack 0
  1022  0000A8                     	ds	1
  1023  0000A9                     _timerOverflow:
  1024                           	opt stack 0
  1025  0000A9                     	ds	1
  1026  0000AA                     _dioStatus:
  1027                           	opt stack 0
  1028  0000AA                     	ds	1
  1029  0000AB                     _RadioConfiguration:
  1030                           	opt stack 0
  1031  0000AB                     	ds	54
  1032  0000E1                     _dataresult:
  1033                           	opt stack 0
  1034  0000E1                     	ds	2
  1035                           tblptru	equ	0xFF8
  1036                           tblptrh	equ	0xFF7
  1037                           tblptrl	equ	0xFF6
  1038                           tablat	equ	0xFF5
  1039                           postinc0	equ	0xFEE
  1040                           wreg	equ	0xFE8
  1041                           postdec2	equ	0xFDD
  1042                           fsr2h	equ	0xFDA
  1043                           fsr2l	equ	0xFD9
  1044                           
  1045                           	psect	dataBANK0
  1046  0000F0                     __pdataBANK0:
  1047                           	opt stack 0
  1048  0000F0                     _randx:
  1049                           	opt stack 0
  1050  0000F0                     	ds	4
  1051  0000F4                     _devAddr:
  1052                           	opt stack 0
  1053  0000F4                     	ds	4
  1054  0000F8                     _ticksToScheduledInterrupt:
  1055                           	opt stack 0
  1056  0000F8                     	ds	4
  1057                           tblptru	equ	0xFF8
  1058                           tblptrh	equ	0xFF7
  1059                           tblptrl	equ	0xFF6
  1060                           tablat	equ	0xFF5
  1061                           postinc0	equ	0xFEE
  1062                           wreg	equ	0xFE8
  1063                           postdec2	equ	0xFDD
  1064                           fsr2h	equ	0xFDA
  1065                           fsr2l	equ	0xFD9
  1066                           
  1067                           	psect	bssBANK1
  1068  000100                     __pbssBANK1:
  1069                           	opt stack 0
  1070  000100                     _loRa:
  1071                           	opt stack 0
  1072  000100                     	ds	245
  1073                           tblptru	equ	0xFF8
  1074                           tblptrh	equ	0xFF7
  1075                           tblptrl	equ	0xFF6
  1076                           tablat	equ	0xFF5
  1077                           postinc0	equ	0xFEE
  1078                           wreg	equ	0xFE8
  1079                           postdec2	equ	0xFDD
  1080                           fsr2h	equ	0xFDA
  1081                           fsr2l	equ	0xFD9
  1082                           
  1083                           	psect	bssBANK2
  1084  000200                     __pbssBANK2:
  1085                           	opt stack 0
  1086  000200                     _readurt:
  1087                           	opt stack 0
  1088  000200                     	ds	8
  1089  000208                     _Channels:
  1090                           	opt stack 0
  1091  000208                     	ds	224
  1092  0002E8                     _aesBuffer:
  1093                           	opt stack 0
  1094  0002E8                     	ds	16
  1095                           tblptru	equ	0xFF8
  1096                           tblptrh	equ	0xFF7
  1097                           tblptrl	equ	0xFF6
  1098                           tablat	equ	0xFF5
  1099                           postinc0	equ	0xFEE
  1100                           wreg	equ	0xFE8
  1101                           postdec2	equ	0xFDD
  1102                           fsr2h	equ	0xFDA
  1103                           fsr2l	equ	0xFD9
  1104                           
  1105                           	psect	bssBANK3
  1106  000300                     __pbssBANK3:
  1107                           	opt stack 0
  1108  000300                     _swTimers:
  1109                           	opt stack 0
  1110  000300                     	ds	160
  1111                           tblptru	equ	0xFF8
  1112                           tblptrh	equ	0xFF7
  1113                           tblptrl	equ	0xFF6
  1114                           tablat	equ	0xFF5
  1115                           postinc0	equ	0xFEE
  1116                           wreg	equ	0xFE8
  1117                           postdec2	equ	0xFDD
  1118                           fsr2h	equ	0xFDA
  1119                           fsr2l	equ	0xFD9
  1120                           
  1121                           	psect	dataBANK3
  1122  0003A0                     __pdataBANK3:
  1123                           	opt stack 0
  1124  0003A0                     _appSKey:
  1125                           	opt stack 0
  1126  0003A0                     	ds	16
  1127  0003B0                     _nwkSKey:
  1128                           	opt stack 0
  1129  0003B0                     	ds	16
  1130  0003C0                     GenerateSubkey@F7103:
  1131                           	opt stack 0
  1132  0003C0                     	ds	16
  1133                           tblptru	equ	0xFF8
  1134                           tblptrh	equ	0xFF7
  1135                           tblptrl	equ	0xFF6
  1136                           tablat	equ	0xFF5
  1137                           postinc0	equ	0xFEE
  1138                           wreg	equ	0xFE8
  1139                           postdec2	equ	0xFDD
  1140                           fsr2h	equ	0xFDA
  1141                           fsr2l	equ	0xFD9
  1142                           
  1143                           	psect	bssBIGRAM
  1144  0003D0                     __pbssBIGRAM:
  1145                           	opt stack 0
  1146  0003D0                     _sub:
  1147                           	opt stack 0
  1148  0003D0                     	ds	1000
  1149  0007B8                     _dataxstr:
  1150                           	opt stack 0
  1151  0007B8                     	ds	1024
  1152  000BB8                     _radioBuffer:
  1153                           	opt stack 0
  1154  000BB8                     	ds	271
  1155  000CC7                     _macBuffer:
  1156                           	opt stack 0
  1157  000CC7                     	ds	271
  1158                           tblptru	equ	0xFF8
  1159                           tblptrh	equ	0xFF7
  1160                           tblptrl	equ	0xFF6
  1161                           tablat	equ	0xFF5
  1162                           postinc0	equ	0xFEE
  1163                           wreg	equ	0xFE8
  1164                           postdec2	equ	0xFDD
  1165                           fsr2h	equ	0xFDA
  1166                           fsr2l	equ	0xFD9
  1167                           
  1168                           	psect	cstackBANK0
  1169  0000FC                     __pcstackBANK0:
  1170                           	opt stack 0
  1171  0000FC                     EUSART1_Write@txData:
  1172                           	opt stack 0
  1173  0000FC                     INT1_SetInterruptHandler@InterruptHandler:
  1174                           	opt stack 0
  1175  0000FC                     INT2_SetInterruptHandler@InterruptHandler:
  1176                           	opt stack 0
  1177  0000FC                     IOCB4_SetInterruptHandler@InterruptHandler:
  1178                           	opt stack 0
  1179  0000FC                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1180                           	opt stack 0
  1181  0000FC                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1182                           	opt stack 0
  1183  0000FC                     EUSART1_SetErrorHandler@interruptHandler:
  1184                           	opt stack 0
  1185  0000FC                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1186                           	opt stack 0
  1187  0000FC                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1188                           	opt stack 0
  1189  0000FC                     TMR1_SetInterruptHandler@InterruptHandler:
  1190                           	opt stack 0
  1191                           
  1192                           ; 2 bytes @ 0x0
  1193  0000FC                     	ds	2
  1194  0000FE                     ??_main:
  1195                           
  1196                           ; 1 bytes @ 0x2
  1197  0000FE                     	ds	2
  1198                           tblptru	equ	0xFF8
  1199                           tblptrh	equ	0xFF7
  1200                           tblptrl	equ	0xFF6
  1201                           tablat	equ	0xFF5
  1202                           postinc0	equ	0xFEE
  1203                           wreg	equ	0xFE8
  1204                           postdec2	equ	0xFDD
  1205                           fsr2h	equ	0xFDA
  1206                           fsr2l	equ	0xFD9
  1207                           
  1208                           	psect	cstackCOMRAM
  1209  000001                     __pcstackCOMRAM:
  1210                           	opt stack 0
  1211  000001                     ?_TMR1_ReadTimer:
  1212                           	opt stack 0
  1213  000001                     EUSART1_Read@readValue:
  1214                           	opt stack 0
  1215  000001                     TMR1_WriteTimer@timerVal:
  1216                           	opt stack 0
  1217  000001                     strncat@to:
  1218                           	opt stack 0
  1219                           
  1220                           ; 2 bytes @ 0x0
  1221  000001                     	ds	2
  1222  000003                     ??_TMR1_ReadTimer:
  1223  000003                     strncat@from:
  1224                           	opt stack 0
  1225                           
  1226                           ; 2 bytes @ 0x2
  1227  000003                     	ds	2
  1228  000005                     TMR1_ReadTimer@readVal:
  1229                           	opt stack 0
  1230  000005                     strncat@size:
  1231                           	opt stack 0
  1232                           
  1233                           ; 2 bytes @ 0x4
  1234  000005                     	ds	2
  1235  000007                     TMR1_ReadTimer@readValHigh:
  1236                           	opt stack 0
  1237  000007                     strncat@cp:
  1238                           	opt stack 0
  1239                           
  1240                           ; 2 bytes @ 0x6
  1241  000007                     	ds	1
  1242  000008                     TMR1_ReadTimer@readValLow:
  1243                           	opt stack 0
  1244                           
  1245                           ; 1 bytes @ 0x7
  1246  000008                     	ds	1
  1247  000009                     ??_EUSART1_Receive_ISR:
  1248  000009                     ?_TMR_SwapTimer:
  1249                           	opt stack 0
  1250  000009                     ?_TMR_GetDeltaTime:
  1251                           	opt stack 0
  1252  000009                     TMR_SwapTimer@timerVal:
  1253                           	opt stack 0
  1254                           
  1255                           ; 2 bytes @ 0x8
  1256  000009                     	ds	2
  1257  00000B                     
  1258                           ; 1 bytes @ 0xA
  1259  00000B                     	ds	2
  1260  00000D                     ??_TMR_GetDeltaTime:
  1261                           
  1262                           ; 1 bytes @ 0xC
  1263  00000D                     	ds	20
  1264  000021                     ?_SwTimersInterrupt:
  1265                           	opt stack 0
  1266                           
  1267                           ; 4 bytes @ 0x20
  1268  000021                     	ds	4
  1269  000025                     
  1270                           ; 1 bytes @ 0x24
  1271  000025                     	ds	4
  1272  000029                     SwTimersInterrupt@timeElapsed:
  1273                           	opt stack 0
  1274                           
  1275                           ; 4 bytes @ 0x28
  1276  000029                     	ds	4
  1277  00002D                     SwTimersInterrupt@ticksToNextTimerEvent:
  1278                           	opt stack 0
  1279                           
  1280                           ; 4 bytes @ 0x2C
  1281  00002D                     	ds	4
  1282  000031                     SwTimersInterrupt@i:
  1283                           	opt stack 0
  1284                           
  1285                           ; 1 bytes @ 0x30
  1286  000031                     	ds	1
  1287  000032                     ??_TMR_ISR_lora:
  1288                           
  1289                           ; 1 bytes @ 0x31
  1290  000032                     	ds	2
  1291  000034                     ??_INTERRUPT_InterruptManager:
  1292                           
  1293                           ; 1 bytes @ 0x33
  1294  000034                     	ds	10
  1295                           tblptru	equ	0xFF8
  1296                           tblptrh	equ	0xFF7
  1297                           tblptrl	equ	0xFF6
  1298                           tablat	equ	0xFF5
  1299                           postinc0	equ	0xFEE
  1300                           wreg	equ	0xFE8
  1301                           postdec2	equ	0xFDD
  1302                           fsr2h	equ	0xFDA
  1303                           fsr2l	equ	0xFD9
  1304                           
  1305 ;;
  1306 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1307 ;;
  1308 ;; *************** function _main *****************
  1309 ;; Defined at:
  1310 ;;		line 130 in file "main.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1326 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1327 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;Total ram usage:        2 bytes
  1329 ;; Hardware stack levels required when called:   11
  1330 ;; This function calls:
  1331 ;;		_EUSART1_Write
  1332 ;;		_SYSTEM_Initialize
  1333 ;; This function is called by:
  1334 ;;		Startup code after reset
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text0
  1339  0005A2                     __ptext0:
  1340                           	opt stack 0
  1341  0005A2                     _main:
  1342                           	opt stack 20
  1343                           
  1344                           ;main.c: 132: SYSTEM_Initialize();
  1345                           
  1346                           ;incstack = 0
  1347  0005A2  EC06  F005         	call	_SYSTEM_Initialize	;wreg free
  1348                           
  1349                           ;main.c: 133: (INTCONbits.GIE = 1);
  1350  0005A6  8EF2               	bsf	intcon,7,c	;volatile
  1351                           
  1352                           ;main.c: 134: (INTCONbits.PEIE = 1);
  1353  0005A8  8CF2               	bsf	intcon,6,c	;volatile
  1354                           
  1355                           ;main.c: 152: TRISA = 0xF0;
  1356  0005AA  0EF0               	movlw	240
  1357  0005AC  6E92               	movwf	3986,c	;volatile
  1358                           
  1359                           ;main.c: 160: counterx=0;
  1360  0005AE  0E00               	movlw	0
  1361  0005B0  0100               	movlb	0	; () banked
  1362  0005B2  6F77               	movwf	(_counterx+1)& (0+255),b
  1363  0005B4  0E00               	movlw	0
  1364  0005B6  6F76               	movwf	_counterx& (0+255),b
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;main.c: 161: countera=0;
  1368  0005B8  0E00               	movlw	0
  1369  0005BA  6F75               	movwf	(_countera+1)& (0+255),b
  1370  0005BC  0E00               	movlw	0
  1371  0005BE  6F74               	movwf	_countera& (0+255),b
  1372  0005C0                     l12248:
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;main.c: 175: {
  1376                           ;main.c: 176: if(counterx <1){
  1377  0005C0  BF77               	btfsc	(_counterx+1)& (0+255),7,b
  1378  0005C2  D005               	goto	u12740
  1379  0005C4  5177               	movf	(_counterx+1)& (0+255),w,b
  1380  0005C6  E1FC               	bnz	l12248
  1381  0005C8  0576               	decf	_counterx& (0+255),w,b
  1382  0005CA  B0D8               	btfsc	status,0,c
  1383  0005CC  D7F9               	goto	l2816
  1384  0005CE                     u12740:
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;main.c: 177: LATA=0xFF;
  1388  0005CE  6889               	setf	3977,c	;volatile
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;main.c: 179: EUSART1_Write(0b10101111);
  1392  0005D0  0EAF               	movlw	175
  1393  0005D2  EC8C  F004         	call	_EUSART1_Write
  1394                           
  1395                           ;main.c: 180: EUSART1_Write(0b00111111);
  1396  0005D6  0E3F               	movlw	63
  1397  0005D8  EC8C  F004         	call	_EUSART1_Write
  1398                           
  1399                           ;main.c: 181: EUSART1_Write(0b00100001);
  1400  0005DC  0E21               	movlw	33
  1401  0005DE  EC8C  F004         	call	_EUSART1_Write
  1402                           
  1403                           ;main.c: 182: EUSART1_Write(0b10001101);
  1404  0005E2  0E8D               	movlw	141
  1405  0005E4  EC8C  F004         	call	_EUSART1_Write
  1406                           
  1407                           ;main.c: 183: EUSART1_Write(0b00001010);
  1408  0005E8  0E0A               	movlw	10
  1409  0005EA  EC8C  F004         	call	_EUSART1_Write
  1410                           
  1411                           ;main.c: 189: EUSART1_Write(0b00101110);
  1412  0005EE  0E2E               	movlw	46
  1413  0005F0  EC8C  F004         	call	_EUSART1_Write
  1414                           
  1415                           ;main.c: 190: EUSART1_Write(0b00110000);
  1416  0005F4  0E30               	movlw	48
  1417  0005F6  EC8C  F004         	call	_EUSART1_Write
  1418                           
  1419                           ;main.c: 191: EUSART1_Write(0b00110000);
  1420  0005FA  0E30               	movlw	48
  1421  0005FC  EC8C  F004         	call	_EUSART1_Write
  1422                           
  1423                           ;main.c: 193: LATA=0xF0;
  1424  000600  0EF0               	movlw	240
  1425  000602  6E89               	movwf	3977,c	;volatile
  1426                           
  1427                           ;main.c: 195: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1428  000604  0E29               	movlw	41
  1429  000606  0100               	movlb	0	; () banked
  1430  000608  6FFF               	movwf	(??_main+1)& (0+255),b
  1431  00060A  0E96               	movlw	150
  1432  00060C  6FFE               	movwf	??_main& (0+255),b
  1433  00060E  0E7F               	movlw	127
  1434  000610                     u12967:
  1435  000610  2EE8               	decfsz	wreg,f,c
  1436  000612  D7FE               	bra	u12967
  1437  000614  2FFE               	decfsz	??_main& (0+255),f,b
  1438  000616  D7FC               	bra	u12967
  1439  000618  2FFF               	decfsz	(??_main+1)& (0+255),f,b
  1440  00061A  D7FA               	bra	u12967
  1441                           
  1442                           ;main.c: 197: LATA=0xFF;
  1443  00061C  6889               	setf	3977,c	;volatile
  1444                           
  1445                           ;main.c: 198: EUSART1_Write(0b00101110);
  1446  00061E  0E2E               	movlw	46
  1447  000620  EC8C  F004         	call	_EUSART1_Write
  1448                           
  1449                           ;main.c: 199: EUSART1_Write(0b00110000);
  1450  000624  0E30               	movlw	48
  1451  000626  EC8C  F004         	call	_EUSART1_Write
  1452                           
  1453                           ;main.c: 200: EUSART1_Write(0b00110000);
  1454  00062A  0E30               	movlw	48
  1455  00062C  EC8C  F004         	call	_EUSART1_Write
  1456                           
  1457                           ;main.c: 201: EUSART1_Write(0b10110111);
  1458  000630  0EB7               	movlw	183
  1459  000632  EC8C  F004         	call	_EUSART1_Write
  1460                           
  1461                           ;main.c: 202: EUSART1_Write(0b10001101);
  1462  000636  0E8D               	movlw	141
  1463  000638  EC8C  F004         	call	_EUSART1_Write
  1464                           
  1465                           ;main.c: 203: EUSART1_Write(0b00001010);
  1466  00063C  0E0A               	movlw	10
  1467  00063E  EC8C  F004         	call	_EUSART1_Write
  1468                           
  1469                           ;main.c: 205: EUSART1_Write(0x61);
  1470  000642  0E61               	movlw	97
  1471  000644  EC8C  F004         	call	_EUSART1_Write
  1472                           
  1473                           ;main.c: 206: EUSART1_Write(0x61);
  1474  000648  0E61               	movlw	97
  1475  00064A  EC8C  F004         	call	_EUSART1_Write
  1476                           
  1477                           ;main.c: 207: EUSART1_Write(0x61);
  1478  00064E  0E61               	movlw	97
  1479  000650  EC8C  F004         	call	_EUSART1_Write
  1480                           
  1481                           ;main.c: 208: LATA=0xF0;
  1482  000654  0EF0               	movlw	240
  1483  000656  6E89               	movwf	3977,c	;volatile
  1484                           
  1485                           ;main.c: 234: counterx++;
  1486  000658  0100               	movlb	0	; () banked
  1487  00065A  4B76               	infsnz	_counterx& (0+255),f,b
  1488  00065C  2B77               	incf	(_counterx+1)& (0+255),f,b
  1489                           
  1490                           ; BSR set to: 0
  1491                           
  1492                           ; BSR set to: 0
  1493  00065E  D7B0               	goto	l2816
  1494  000660                     __end_of_main:
  1495                           	opt stack 0
  1496                           tblptru	equ	0xFF8
  1497                           tblptrh	equ	0xFF7
  1498                           tblptrl	equ	0xFF6
  1499                           tablat	equ	0xFF5
  1500                           intcon	equ	0xFF2
  1501                           postinc0	equ	0xFEE
  1502                           wreg	equ	0xFE8
  1503                           postdec2	equ	0xFDD
  1504                           fsr2h	equ	0xFDA
  1505                           fsr2l	equ	0xFD9
  1506                           status	equ	0xFD8
  1507                           
  1508 ;; *************** function _SYSTEM_Initialize *****************
  1509 ;; Defined at:
  1510 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:   10
  1531 ;; This function calls:
  1532 ;;		_EUSART1_Initialize
  1533 ;;		_EXT_INT_Initialize
  1534 ;;		_INTERRUPT_Initialize
  1535 ;;		_LORAWAN_PlatformInit
  1536 ;;		_OSCILLATOR_Initialize
  1537 ;;		_PIN_MANAGER_Initialize
  1538 ;;		_SPI2_Initialize
  1539 ;;		_TMR1_Initialize
  1540 ;;		_TMR5_Initialize
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text1
  1547  000A0C                     __ptext1:
  1548                           	opt stack 0
  1549  000A0C                     _SYSTEM_Initialize:
  1550                           	opt stack 20
  1551                           
  1552                           ;mcc.c: 53: INTERRUPT_Initialize();
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;incstack = 0
  1556  000A0C  EC34  F006         	call	_INTERRUPT_Initialize	;wreg free
  1557                           
  1558                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  1559  000A10  EC1B  F004         	call	_PIN_MANAGER_Initialize	;wreg free
  1560                           
  1561                           ;mcc.c: 55: OSCILLATOR_Initialize();
  1562  000A14  ECDB  F005         	call	_OSCILLATOR_Initialize	;wreg free
  1563                           
  1564                           ;mcc.c: 56: SPI2_Initialize();
  1565  000A18  ECD4  F005         	call	_SPI2_Initialize	;wreg free
  1566                           
  1567                           ;mcc.c: 59: TMR5_Initialize();
  1568  000A1C  EC8D  F005         	call	_TMR5_Initialize	;wreg free
  1569                           
  1570                           ;mcc.c: 60: EXT_INT_Initialize();
  1571  000A20  ECF1  F004         	call	_EXT_INT_Initialize	;wreg free
  1572                           
  1573                           ;mcc.c: 61: TMR1_Initialize();
  1574  000A24  ECDB  F004         	call	_TMR1_Initialize	;wreg free
  1575                           
  1576                           ;mcc.c: 62: EUSART1_Initialize();
  1577  000A28  EC7B  F003         	call	_EUSART1_Initialize	;wreg free
  1578                           
  1579                           ;mcc.c: 63: LORAWAN_PlatformInit();
  1580  000A2C  EC2C  F005         	call	_LORAWAN_PlatformInit	;wreg free
  1581  000A30  0012               	return		;funcret
  1582  000A32                     __end_of_SYSTEM_Initialize:
  1583                           	opt stack 0
  1584                           tblptru	equ	0xFF8
  1585                           tblptrh	equ	0xFF7
  1586                           tblptrl	equ	0xFF6
  1587                           tablat	equ	0xFF5
  1588                           intcon	equ	0xFF2
  1589                           postinc0	equ	0xFEE
  1590                           wreg	equ	0xFE8
  1591                           postdec2	equ	0xFDD
  1592                           fsr2h	equ	0xFDA
  1593                           fsr2l	equ	0xFD9
  1594                           status	equ	0xFD8
  1595                           
  1596 ;; *************** function _TMR5_Initialize *****************
  1597 ;; Defined at:
  1598 ;;		line 63 in file "mcc_generated_files/tmr5.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;		None
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;Total ram usage:        0 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    7
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_SYSTEM_Initialize
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text2
  1627  000B1A                     __ptext2:
  1628                           	opt stack 0
  1629  000B1A                     _TMR5_Initialize:
  1630                           	opt stack 22
  1631                           
  1632                           ;tmr5.c: 68: T5GCON = 0x00;
  1633                           
  1634                           ;incstack = 0
  1635  000B1A  0E00               	movlw	0
  1636  000B1C  010F               	movlb	15	; () banked
  1637  000B1E  6F4D               	movwf	77,b	;volatile
  1638                           
  1639                           ;tmr5.c: 71: TMR5H = 0x10;
  1640  000B20  0E10               	movlw	16
  1641  000B22  6F50               	movwf	80,b	;volatile
  1642                           
  1643                           ;tmr5.c: 74: TMR5L = 0x00;
  1644  000B24  0E00               	movlw	0
  1645  000B26  6F4F               	movwf	79,b	;volatile
  1646                           
  1647                           ; BSR set to: 15
  1648                           ;tmr5.c: 77: timer5ReloadVal=TMR5;
  1649  000B28  CF4F F0E3          	movff	3919,_timer5ReloadVal	;volatile
  1650  000B2C  CF50 F0E4          	movff	3920,_timer5ReloadVal+1	;volatile
  1651                           
  1652                           ; BSR set to: 15
  1653                           ;tmr5.c: 80: PIR5bits.TMR5IF = 0;
  1654  000B30  927E               	bcf	3966,1,c	;volatile
  1655                           
  1656                           ;tmr5.c: 83: T5CON = 0xBD;
  1657  000B32  0EBD               	movlw	189
  1658  000B34  6F4E               	movwf	78,b	;volatile
  1659                           
  1660                           ; BSR set to: 15
  1661  000B36  0012               	return		;funcret
  1662  000B38                     __end_of_TMR5_Initialize:
  1663                           	opt stack 0
  1664                           tblptru	equ	0xFF8
  1665                           tblptrh	equ	0xFF7
  1666                           tblptrl	equ	0xFF6
  1667                           tablat	equ	0xFF5
  1668                           intcon	equ	0xFF2
  1669                           postinc0	equ	0xFEE
  1670                           wreg	equ	0xFE8
  1671                           postdec2	equ	0xFDD
  1672                           fsr2h	equ	0xFDA
  1673                           fsr2l	equ	0xFD9
  1674                           status	equ	0xFD8
  1675                           
  1676 ;; *************** function _TMR1_Initialize *****************
  1677 ;; Defined at:
  1678 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;Total ram usage:        0 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    8
  1699 ;; This function calls:
  1700 ;;		_TMR1_SetInterruptHandler
  1701 ;; This function is called by:
  1702 ;;		_SYSTEM_Initialize
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text3
  1707  0009B6                     __ptext3:
  1708                           	opt stack 0
  1709  0009B6                     _TMR1_Initialize:
  1710                           	opt stack 21
  1711                           
  1712                           ;tmr1.c: 69: T1GCON = 0x00;
  1713                           
  1714                           ; BSR set to: 15
  1715                           ;incstack = 0
  1716  0009B6  0E00               	movlw	0
  1717  0009B8  6ECC               	movwf	4044,c	;volatile
  1718                           
  1719                           ;tmr1.c: 72: TMR1H = 0x00;
  1720  0009BA  0E00               	movlw	0
  1721  0009BC  6ECF               	movwf	4047,c	;volatile
  1722                           
  1723                           ;tmr1.c: 75: TMR1L = 0x00;
  1724  0009BE  0E00               	movlw	0
  1725  0009C0  6ECE               	movwf	4046,c	;volatile
  1726                           
  1727                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
  1728  0009C2  CFCE F0E7          	movff	4046,_timer1ReloadVal	;volatile
  1729  0009C6  CFCF F0E8          	movff	4047,_timer1ReloadVal+1	;volatile
  1730                           
  1731                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  1732  0009CA  909E               	bcf	3998,0,c	;volatile
  1733                           
  1734                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  1735  0009CC  809D               	bsf	3997,0,c	;volatile
  1736                           
  1737                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  1738  0009CE  0E72               	movlw	low _TMR1_DefaultInterruptHandler
  1739  0009D0  0100               	movlb	0	; () banked
  1740  0009D2  6FFC               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  1741  0009D4  0E0C               	movlw	high _TMR1_DefaultInterruptHandler
  1742  0009D6  6FFD               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1743  0009D8  ECE8  F005         	call	_TMR1_SetInterruptHandler	;wreg free
  1744                           
  1745                           ;tmr1.c: 90: T1CON = 0x8D;
  1746  0009DC  0E8D               	movlw	141
  1747  0009DE  6ECD               	movwf	4045,c	;volatile
  1748  0009E0  0012               	return		;funcret
  1749  0009E2                     __end_of_TMR1_Initialize:
  1750                           	opt stack 0
  1751                           tblptru	equ	0xFF8
  1752                           tblptrh	equ	0xFF7
  1753                           tblptrl	equ	0xFF6
  1754                           tablat	equ	0xFF5
  1755                           intcon	equ	0xFF2
  1756                           postinc0	equ	0xFEE
  1757                           wreg	equ	0xFE8
  1758                           postdec2	equ	0xFDD
  1759                           fsr2h	equ	0xFDA
  1760                           fsr2l	equ	0xFD9
  1761                           status	equ	0xFD8
  1762                           
  1763 ;; *************** function _SPI2_Initialize *****************
  1764 ;; Defined at:
  1765 ;;		line 65 in file "mcc_generated_files/spi2.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;Total ram usage:        0 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    7
  1786 ;; This function calls:
  1787 ;;		Nothing
  1788 ;; This function is called by:
  1789 ;;		_SYSTEM_Initialize
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text4
  1794  000BA8                     __ptext4:
  1795                           	opt stack 0
  1796  000BA8                     _SPI2_Initialize:
  1797                           	opt stack 22
  1798                           
  1799                           ;spi2.c: 70: SSP2STAT = 0x40;
  1800                           
  1801                           ;incstack = 0
  1802  000BA8  0E40               	movlw	64
  1803  000BAA  6E6D               	movwf	3949,c	;volatile
  1804                           
  1805                           ;spi2.c: 73: SSP2CON1 = 0x20;
  1806  000BAC  0E20               	movlw	32
  1807  000BAE  6E6C               	movwf	3948,c	;volatile
  1808                           
  1809                           ;spi2.c: 76: SSP2ADD = 0x00;
  1810  000BB0  0E00               	movlw	0
  1811  000BB2  6E6E               	movwf	3950,c	;volatile
  1812  000BB4  0012               	return		;funcret
  1813  000BB6                     __end_of_SPI2_Initialize:
  1814                           	opt stack 0
  1815                           tblptru	equ	0xFF8
  1816                           tblptrh	equ	0xFF7
  1817                           tblptrl	equ	0xFF6
  1818                           tablat	equ	0xFF5
  1819                           intcon	equ	0xFF2
  1820                           postinc0	equ	0xFEE
  1821                           wreg	equ	0xFE8
  1822                           postdec2	equ	0xFDD
  1823                           fsr2h	equ	0xFDA
  1824                           fsr2l	equ	0xFD9
  1825                           status	equ	0xFD8
  1826                           
  1827 ;; *************** function _PIN_MANAGER_Initialize *****************
  1828 ;; Defined at:
  1829 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;Total ram usage:        0 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    8
  1850 ;; This function calls:
  1851 ;;		_IOCB4_SetInterruptHandler
  1852 ;; This function is called by:
  1853 ;;		_SYSTEM_Initialize
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text5
  1858  000836                     __ptext5:
  1859                           	opt stack 0
  1860  000836                     _PIN_MANAGER_Initialize:
  1861                           	opt stack 21
  1862                           
  1863                           ;pin_manager.c: 62: LATE = 0x00;
  1864                           
  1865                           ;incstack = 0
  1866  000836  0E00               	movlw	0
  1867  000838  6E8D               	movwf	3981,c	;volatile
  1868                           
  1869                           ;pin_manager.c: 63: LATD = 0x00;
  1870  00083A  0E00               	movlw	0
  1871  00083C  6E8C               	movwf	3980,c	;volatile
  1872                           
  1873                           ;pin_manager.c: 64: LATA = 0x00;
  1874  00083E  0E00               	movlw	0
  1875  000840  6E89               	movwf	3977,c	;volatile
  1876                           
  1877                           ;pin_manager.c: 65: LATB = 0x00;
  1878  000842  0E00               	movlw	0
  1879  000844  6E8A               	movwf	3978,c	;volatile
  1880                           
  1881                           ;pin_manager.c: 66: LATC = 0x00;
  1882  000846  0E00               	movlw	0
  1883  000848  6E8B               	movwf	3979,c	;volatile
  1884                           
  1885                           ;pin_manager.c: 71: TRISE = 0x07;
  1886  00084A  0E07               	movlw	7
  1887  00084C  6E96               	movwf	3990,c	;volatile
  1888                           
  1889                           ;pin_manager.c: 72: TRISA = 0xFF;
  1890  00084E  6892               	setf	3986,c	;volatile
  1891                           
  1892                           ;pin_manager.c: 73: TRISB = 0xFF;
  1893  000850  6893               	setf	3987,c	;volatile
  1894                           
  1895                           ;pin_manager.c: 74: TRISC = 0xBE;
  1896  000852  0EBE               	movlw	190
  1897  000854  6E94               	movwf	3988,c	;volatile
  1898                           
  1899                           ;pin_manager.c: 75: TRISD = 0xE6;
  1900  000856  0EE6               	movlw	230
  1901  000858  6E95               	movwf	3989,c	;volatile
  1902                           
  1903                           ;pin_manager.c: 80: ANSELD = 0xE4;
  1904  00085A  0EE4               	movlw	228
  1905  00085C  010F               	movlb	15	; () banked
  1906  00085E  6F3B               	movwf	59,b	;volatile
  1907                           
  1908                           ;pin_manager.c: 81: ANSELC = 0x38;
  1909  000860  0E38               	movlw	56
  1910  000862  6F3A               	movwf	58,b	;volatile
  1911                           
  1912                           ;pin_manager.c: 82: ANSELB = 0x28;
  1913  000864  0E28               	movlw	40
  1914  000866  6F39               	movwf	57,b	;volatile
  1915                           
  1916                           ;pin_manager.c: 83: ANSELE = 0x07;
  1917  000868  0E07               	movlw	7
  1918  00086A  6F3C               	movwf	60,b	;volatile
  1919                           
  1920                           ;pin_manager.c: 84: ANSELA = 0x2F;
  1921  00086C  0E2F               	movlw	47
  1922  00086E  6F38               	movwf	56,b	;volatile
  1923                           
  1924                           ;pin_manager.c: 89: WPUB = 0x00;
  1925  000870  0E00               	movlw	0
  1926  000872  6E61               	movwf	3937,c	;volatile
  1927                           
  1928                           ; BSR set to: 15
  1929                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
  1930  000874  8EF1               	bsf	intcon2,7,c	;volatile
  1931                           
  1932                           ; BSR set to: 15
  1933                           ;pin_manager.c: 98: IOCBbits.IOCB4 = 1;
  1934  000876  8862               	bsf	3938,4,c	;volatile
  1935                           
  1936                           ; BSR set to: 15
  1937                           ;pin_manager.c: 103: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  1938  000878  0E74               	movlw	low _IOCB4_DefaultInterruptHandler
  1939  00087A  0100               	movlb	0	; () banked
  1940  00087C  6FFC               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  1941  00087E  0E0C               	movlw	high _IOCB4_DefaultInterruptHandler
  1942  000880  6FFD               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1943  000882  ECED  F005         	call	_IOCB4_SetInterruptHandler	;wreg free
  1944                           
  1945                           ;pin_manager.c: 106: INTCONbits.RBIE = 1;
  1946  000886  86F2               	bsf	intcon,3,c	;volatile
  1947  000888  0012               	return		;funcret
  1948  00088A                     __end_of_PIN_MANAGER_Initialize:
  1949                           	opt stack 0
  1950                           tblptru	equ	0xFF8
  1951                           tblptrh	equ	0xFF7
  1952                           tblptrl	equ	0xFF6
  1953                           tablat	equ	0xFF5
  1954                           intcon	equ	0xFF2
  1955                           intcon2	equ	0xFF1
  1956                           postinc0	equ	0xFEE
  1957                           wreg	equ	0xFE8
  1958                           postdec2	equ	0xFDD
  1959                           fsr2h	equ	0xFDA
  1960                           fsr2l	equ	0xFD9
  1961                           status	equ	0xFD8
  1962                           
  1963 ;; *************** function _OSCILLATOR_Initialize *****************
  1964 ;; Defined at:
  1965 ;;		line 66 in file "mcc_generated_files/mcc.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;		None
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;		None
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;Total ram usage:        0 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    7
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_SYSTEM_Initialize
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text6
  1994  000BB6                     __ptext6:
  1995                           	opt stack 0
  1996  000BB6                     _OSCILLATOR_Initialize:
  1997                           	opt stack 22
  1998                           
  1999                           ;mcc.c: 69: OSCCON = 0x70;
  2000                           
  2001                           ;incstack = 0
  2002  000BB6  0E70               	movlw	112
  2003  000BB8  6ED3               	movwf	4051,c	;volatile
  2004                           
  2005                           ;mcc.c: 71: OSCCON2 = 0x04;
  2006  000BBA  0E04               	movlw	4
  2007  000BBC  6ED2               	movwf	4050,c	;volatile
  2008                           
  2009                           ;mcc.c: 73: OSCTUNE = 0x00;
  2010  000BBE  0E00               	movlw	0
  2011  000BC0  6E9B               	movwf	3995,c	;volatile
  2012  000BC2  0012               	return		;funcret
  2013  000BC4                     __end_of_OSCILLATOR_Initialize:
  2014                           	opt stack 0
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           intcon	equ	0xFF2
  2020                           intcon2	equ	0xFF1
  2021                           postinc0	equ	0xFEE
  2022                           wreg	equ	0xFE8
  2023                           postdec2	equ	0xFDD
  2024                           fsr2h	equ	0xFDA
  2025                           fsr2l	equ	0xFD9
  2026                           status	equ	0xFD8
  2027                           
  2028 ;; *************** function _LORAWAN_PlatformInit *****************
  2029 ;; Defined at:
  2030 ;;		line 73 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;		None
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;Total ram usage:        0 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    9
  2051 ;; This function calls:
  2052 ;;		_DIO0_ISR_Lora_Init
  2053 ;;		_DIO1_ISR_Lora_Init
  2054 ;;		_DIO2_ISR_Lora_Init
  2055 ;;		_DIO3_ISR_Lora_Init
  2056 ;;		_DIO4_ISR_Lora_Init
  2057 ;;		_DIO5_ISR_Lora_Init
  2058 ;;		_SystemTimerInit
  2059 ;;		_TMR_ISR_Lora_Init
  2060 ;; This function is called by:
  2061 ;;		_SYSTEM_Initialize
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text7
  2066  000A58                     __ptext7:
  2067                           	opt stack 0
  2068  000A58                     _LORAWAN_PlatformInit:
  2069                           	opt stack 20
  2070                           
  2071                           ;lorawan_init.c: 75: TMR_ISR_Lora_Init();
  2072                           
  2073                           ;incstack = 0
  2074  000A58  ECB4  F005         	call	_TMR_ISR_Lora_Init	;wreg free
  2075                           
  2076                           ;lorawan_init.c: 76: DIO0_ISR_Lora_Init();
  2077  000A5C  ECCC  F005         	call	_DIO0_ISR_Lora_Init	;wreg free
  2078                           
  2079                           ;lorawan_init.c: 77: DIO1_ISR_Lora_Init();
  2080  000A60  ECC4  F005         	call	_DIO1_ISR_Lora_Init	;wreg free
  2081                           
  2082                           ;lorawan_init.c: 78: DIO2_ISR_Lora_Init();
  2083  000A64  ECBC  F005         	call	_DIO2_ISR_Lora_Init	;wreg free
  2084                           
  2085                           ;lorawan_init.c: 79: DIO3_ISR_Lora_Init();
  2086  000A68  EC38  F006         	call	_DIO3_ISR_Lora_Init	;wreg free
  2087                           
  2088                           ;lorawan_init.c: 80: DIO4_ISR_Lora_Init();
  2089  000A6C  EC37  F006         	call	_DIO4_ISR_Lora_Init	;wreg free
  2090                           
  2091                           ;lorawan_init.c: 81: DIO5_ISR_Lora_Init();
  2092  000A70  EC36  F006         	call	_DIO5_ISR_Lora_Init	;wreg free
  2093                           
  2094                           ;lorawan_init.c: 82: SystemTimerInit();
  2095  000A74  EC22  F006         	call	_SystemTimerInit	;wreg free
  2096  000A78  0012               	return		;funcret
  2097  000A7A                     __end_of_LORAWAN_PlatformInit:
  2098                           	opt stack 0
  2099                           tblptru	equ	0xFF8
  2100                           tblptrh	equ	0xFF7
  2101                           tblptrl	equ	0xFF6
  2102                           tablat	equ	0xFF5
  2103                           intcon	equ	0xFF2
  2104                           intcon2	equ	0xFF1
  2105                           postinc0	equ	0xFEE
  2106                           wreg	equ	0xFE8
  2107                           postdec2	equ	0xFDD
  2108                           fsr2h	equ	0xFDA
  2109                           fsr2l	equ	0xFD9
  2110                           status	equ	0xFD8
  2111                           
  2112 ;; *************** function _TMR_ISR_Lora_Init *****************
  2113 ;; Defined at:
  2114 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;		None
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;Total ram usage:        0 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    8
  2135 ;; This function calls:
  2136 ;;		_TMR1_SetInterruptHandler
  2137 ;; This function is called by:
  2138 ;;		_LORAWAN_PlatformInit
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text8
  2143  000B68                     __ptext8:
  2144                           	opt stack 0
  2145  000B68                     _TMR_ISR_Lora_Init:
  2146                           	opt stack 20
  2147                           
  2148                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  2149                           
  2150                           ;incstack = 0
  2151  000B68  0EDA               	movlw	low _TMR_ISR_lora
  2152  000B6A  0100               	movlb	0	; () banked
  2153  000B6C  6FFC               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2154  000B6E  0E07               	movlw	high _TMR_ISR_lora
  2155  000B70  6FFD               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2156  000B72  ECE8  F005         	call	_TMR1_SetInterruptHandler	;wreg free
  2157  000B76  0012               	return		;funcret
  2158  000B78                     __end_of_TMR_ISR_Lora_Init:
  2159                           	opt stack 0
  2160                           tblptru	equ	0xFF8
  2161                           tblptrh	equ	0xFF7
  2162                           tblptrl	equ	0xFF6
  2163                           tablat	equ	0xFF5
  2164                           intcon	equ	0xFF2
  2165                           intcon2	equ	0xFF1
  2166                           postinc0	equ	0xFEE
  2167                           wreg	equ	0xFE8
  2168                           postdec2	equ	0xFDD
  2169                           fsr2h	equ	0xFDA
  2170                           fsr2l	equ	0xFD9
  2171                           status	equ	0xFD8
  2172                           
  2173 ;; *************** function _TMR1_SetInterruptHandler *****************
  2174 ;; Defined at:
  2175 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2178 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2190 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;Total ram usage:        2 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    7
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_TMR_ISR_Lora_Init
  2201 ;;		_TMR1_Initialize
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text9
  2206  000BD0                     __ptext9:
  2207                           	opt stack 0
  2208  000BD0                     _TMR1_SetInterruptHandler:
  2209                           	opt stack 21
  2210                           
  2211                           ;tmr1.c: 180: TMR1_InterruptHandler = InterruptHandler;
  2212                           
  2213                           ;incstack = 0
  2214  000BD0  C0FC  F0E5         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2215  000BD4  C0FD  F0E6         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2216  000BD8  0012               	return		;funcret
  2217  000BDA                     __end_of_TMR1_SetInterruptHandler:
  2218                           	opt stack 0
  2219                           tblptru	equ	0xFF8
  2220                           tblptrh	equ	0xFF7
  2221                           tblptrl	equ	0xFF6
  2222                           tablat	equ	0xFF5
  2223                           intcon	equ	0xFF2
  2224                           intcon2	equ	0xFF1
  2225                           postinc0	equ	0xFEE
  2226                           wreg	equ	0xFE8
  2227                           postdec2	equ	0xFDD
  2228                           fsr2h	equ	0xFDA
  2229                           fsr2l	equ	0xFD9
  2230                           status	equ	0xFD8
  2231                           
  2232 ;; *************** function _SystemTimerInit *****************
  2233 ;; Defined at:
  2234 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;		None
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;Total ram usage:        0 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:    7
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_LORAWAN_PlatformInit
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text10
  2263  000C44                     __ptext10:
  2264                           	opt stack 0
  2265  000C44                     _SystemTimerInit:
  2266                           	opt stack 21
  2267                           
  2268                           ;sw_timer.c: 137: allocatedTimers = 0;
  2269                           
  2270                           ;incstack = 0
  2271  000C44  0E00               	movlw	0
  2272  000C46  6E4A               	movwf	_allocatedTimers,c	;volatile
  2273  000C48  0012               	return		;funcret
  2274  000C4A                     __end_of_SystemTimerInit:
  2275                           	opt stack 0
  2276                           tblptru	equ	0xFF8
  2277                           tblptrh	equ	0xFF7
  2278                           tblptrl	equ	0xFF6
  2279                           tablat	equ	0xFF5
  2280                           intcon	equ	0xFF2
  2281                           intcon2	equ	0xFF1
  2282                           postinc0	equ	0xFEE
  2283                           wreg	equ	0xFE8
  2284                           postdec2	equ	0xFDD
  2285                           fsr2h	equ	0xFDA
  2286                           fsr2l	equ	0xFD9
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function _DIO5_ISR_Lora_Init *****************
  2290 ;; Defined at:
  2291 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;		None
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;		None
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		None
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2309 ;;Total ram usage:        0 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    7
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_LORAWAN_PlatformInit
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           	psect	text11
  2320  000C6C                     __ptext11:
  2321                           	opt stack 0
  2322  000C6C                     _DIO5_ISR_Lora_Init:
  2323                           	opt stack 21
  2324                           
  2325                           ;incstack = 0
  2326  000C6C  0012               	return		;funcret
  2327  000C6E                     __end_of_DIO5_ISR_Lora_Init:
  2328                           	opt stack 0
  2329                           tblptru	equ	0xFF8
  2330                           tblptrh	equ	0xFF7
  2331                           tblptrl	equ	0xFF6
  2332                           tablat	equ	0xFF5
  2333                           intcon	equ	0xFF2
  2334                           intcon2	equ	0xFF1
  2335                           postinc0	equ	0xFEE
  2336                           wreg	equ	0xFE8
  2337                           postdec2	equ	0xFDD
  2338                           fsr2h	equ	0xFDA
  2339                           fsr2l	equ	0xFD9
  2340                           status	equ	0xFD8
  2341                           
  2342 ;; *************** function _DIO4_ISR_Lora_Init *****************
  2343 ;; Defined at:
  2344 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		None
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;Total ram usage:        0 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    7
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_LORAWAN_PlatformInit
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text12
  2373  000C6E                     __ptext12:
  2374                           	opt stack 0
  2375  000C6E                     _DIO4_ISR_Lora_Init:
  2376                           	opt stack 21
  2377                           
  2378                           ;incstack = 0
  2379  000C6E  0012               	return		;funcret
  2380  000C70                     __end_of_DIO4_ISR_Lora_Init:
  2381                           	opt stack 0
  2382                           tblptru	equ	0xFF8
  2383                           tblptrh	equ	0xFF7
  2384                           tblptrl	equ	0xFF6
  2385                           tablat	equ	0xFF5
  2386                           intcon	equ	0xFF2
  2387                           intcon2	equ	0xFF1
  2388                           postinc0	equ	0xFEE
  2389                           wreg	equ	0xFE8
  2390                           postdec2	equ	0xFDD
  2391                           fsr2h	equ	0xFDA
  2392                           fsr2l	equ	0xFD9
  2393                           status	equ	0xFD8
  2394                           
  2395 ;; *************** function _DIO3_ISR_Lora_Init *****************
  2396 ;; Defined at:
  2397 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		None
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;Total ram usage:        0 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    7
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		_LORAWAN_PlatformInit
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text13
  2426  000C70                     __ptext13:
  2427                           	opt stack 0
  2428  000C70                     _DIO3_ISR_Lora_Init:
  2429                           	opt stack 21
  2430                           
  2431                           ;incstack = 0
  2432  000C70  0012               	return		;funcret
  2433  000C72                     __end_of_DIO3_ISR_Lora_Init:
  2434                           	opt stack 0
  2435                           tblptru	equ	0xFF8
  2436                           tblptrh	equ	0xFF7
  2437                           tblptrl	equ	0xFF6
  2438                           tablat	equ	0xFF5
  2439                           intcon	equ	0xFF2
  2440                           intcon2	equ	0xFF1
  2441                           postinc0	equ	0xFEE
  2442                           wreg	equ	0xFE8
  2443                           postdec2	equ	0xFDD
  2444                           fsr2h	equ	0xFDA
  2445                           fsr2l	equ	0xFD9
  2446                           status	equ	0xFD8
  2447                           
  2448 ;; *************** function _DIO2_ISR_Lora_Init *****************
  2449 ;; Defined at:
  2450 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, status,0, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;Total ram usage:        0 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    8
  2471 ;; This function calls:
  2472 ;;		_IOCB4_SetInterruptHandler
  2473 ;; This function is called by:
  2474 ;;		_LORAWAN_PlatformInit
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text14
  2479  000B78                     __ptext14:
  2480                           	opt stack 0
  2481  000B78                     _DIO2_ISR_Lora_Init:
  2482                           	opt stack 20
  2483                           
  2484                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  2485                           
  2486                           ;incstack = 0
  2487  000B78  0E4A               	movlw	low _DIO2_ISR_Lora
  2488  000B7A  0100               	movlb	0	; () banked
  2489  000B7C  6FFC               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  2490  000B7E  0E0C               	movlw	high _DIO2_ISR_Lora
  2491  000B80  6FFD               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2492  000B82  ECED  F005         	call	_IOCB4_SetInterruptHandler	;wreg free
  2493  000B86  0012               	return		;funcret
  2494  000B88                     __end_of_DIO2_ISR_Lora_Init:
  2495                           	opt stack 0
  2496                           tblptru	equ	0xFF8
  2497                           tblptrh	equ	0xFF7
  2498                           tblptrl	equ	0xFF6
  2499                           tablat	equ	0xFF5
  2500                           intcon	equ	0xFF2
  2501                           intcon2	equ	0xFF1
  2502                           postinc0	equ	0xFEE
  2503                           wreg	equ	0xFE8
  2504                           postdec2	equ	0xFDD
  2505                           fsr2h	equ	0xFDA
  2506                           fsr2l	equ	0xFD9
  2507                           status	equ	0xFD8
  2508                           
  2509 ;; *************** function _IOCB4_SetInterruptHandler *****************
  2510 ;; Defined at:
  2511 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2514 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2526 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;Total ram usage:        2 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    7
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_DIO2_ISR_Lora_Init
  2537 ;;		_PIN_MANAGER_Initialize
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text15
  2542  000BDA                     __ptext15:
  2543                           	opt stack 0
  2544  000BDA                     _IOCB4_SetInterruptHandler:
  2545                           	opt stack 21
  2546                           
  2547                           ;pin_manager.c: 139: IOCB4_InterruptHandler = InterruptHandler;
  2548                           
  2549                           ;incstack = 0
  2550  000BDA  C0FC  F0E9         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  2551  000BDE  C0FD  F0EA         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  2552  000BE2  0012               	return		;funcret
  2553  000BE4                     __end_of_IOCB4_SetInterruptHandler:
  2554                           	opt stack 0
  2555                           tblptru	equ	0xFF8
  2556                           tblptrh	equ	0xFF7
  2557                           tblptrl	equ	0xFF6
  2558                           tablat	equ	0xFF5
  2559                           intcon	equ	0xFF2
  2560                           intcon2	equ	0xFF1
  2561                           postinc0	equ	0xFEE
  2562                           wreg	equ	0xFE8
  2563                           postdec2	equ	0xFDD
  2564                           fsr2h	equ	0xFDA
  2565                           fsr2l	equ	0xFD9
  2566                           status	equ	0xFD8
  2567                           
  2568 ;; *************** function _DIO1_ISR_Lora_Init *****************
  2569 ;; Defined at:
  2570 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;Total ram usage:        0 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    8
  2591 ;; This function calls:
  2592 ;;		_INT2_SetInterruptHandler
  2593 ;; This function is called by:
  2594 ;;		_LORAWAN_PlatformInit
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text16
  2599  000B88                     __ptext16:
  2600                           	opt stack 0
  2601  000B88                     _DIO1_ISR_Lora_Init:
  2602                           	opt stack 20
  2603                           
  2604                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  2605                           
  2606                           ;incstack = 0
  2607  000B88  0E50               	movlw	low _DIO1_ISR_Lora
  2608  000B8A  0100               	movlb	0	; () banked
  2609  000B8C  6FFC               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  2610  000B8E  0E0C               	movlw	high _DIO1_ISR_Lora
  2611  000B90  6FFD               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2612  000B92  ECF2  F005         	call	_INT2_SetInterruptHandler	;wreg free
  2613  000B96  0012               	return		;funcret
  2614  000B98                     __end_of_DIO1_ISR_Lora_Init:
  2615                           	opt stack 0
  2616                           tblptru	equ	0xFF8
  2617                           tblptrh	equ	0xFF7
  2618                           tblptrl	equ	0xFF6
  2619                           tablat	equ	0xFF5
  2620                           intcon	equ	0xFF2
  2621                           intcon2	equ	0xFF1
  2622                           postinc0	equ	0xFEE
  2623                           wreg	equ	0xFE8
  2624                           postdec2	equ	0xFDD
  2625                           fsr2h	equ	0xFDA
  2626                           fsr2l	equ	0xFD9
  2627                           status	equ	0xFD8
  2628                           
  2629 ;; *************** function _DIO0_ISR_Lora_Init *****************
  2630 ;; Defined at:
  2631 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;		None
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;Total ram usage:        0 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    8
  2652 ;; This function calls:
  2653 ;;		_INT1_SetInterruptHandler
  2654 ;; This function is called by:
  2655 ;;		_LORAWAN_PlatformInit
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text17
  2660  000B98                     __ptext17:
  2661                           	opt stack 0
  2662  000B98                     _DIO0_ISR_Lora_Init:
  2663                           	opt stack 20
  2664                           
  2665                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  2666                           
  2667                           ;incstack = 0
  2668  000B98  0E56               	movlw	low _DIO0_ISR_Lora
  2669  000B9A  0100               	movlb	0	; () banked
  2670  000B9C  6FFC               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  2671  000B9E  0E0C               	movlw	high _DIO0_ISR_Lora
  2672  000BA0  6FFD               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2673  000BA2  ECF7  F005         	call	_INT1_SetInterruptHandler	;wreg free
  2674  000BA6  0012               	return		;funcret
  2675  000BA8                     __end_of_DIO0_ISR_Lora_Init:
  2676                           	opt stack 0
  2677                           tblptru	equ	0xFF8
  2678                           tblptrh	equ	0xFF7
  2679                           tblptrl	equ	0xFF6
  2680                           tablat	equ	0xFF5
  2681                           intcon	equ	0xFF2
  2682                           intcon2	equ	0xFF1
  2683                           postinc0	equ	0xFEE
  2684                           wreg	equ	0xFE8
  2685                           postdec2	equ	0xFDD
  2686                           fsr2h	equ	0xFDA
  2687                           fsr2l	equ	0xFD9
  2688                           status	equ	0xFD8
  2689                           
  2690 ;; *************** function _INTERRUPT_Initialize *****************
  2691 ;; Defined at:
  2692 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		None
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;Total ram usage:        0 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    7
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_SYSTEM_Initialize
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text18
  2721  000C68                     __ptext18:
  2722                           	opt stack 0
  2723  000C68                     _INTERRUPT_Initialize:
  2724                           	opt stack 22
  2725                           
  2726                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  2727                           
  2728                           ;incstack = 0
  2729  000C68  9ED0               	bcf	4048,7,c	;volatile
  2730  000C6A  0012               	return		;funcret
  2731  000C6C                     __end_of_INTERRUPT_Initialize:
  2732                           	opt stack 0
  2733                           tblptru	equ	0xFF8
  2734                           tblptrh	equ	0xFF7
  2735                           tblptrl	equ	0xFF6
  2736                           tablat	equ	0xFF5
  2737                           intcon	equ	0xFF2
  2738                           intcon2	equ	0xFF1
  2739                           postinc0	equ	0xFEE
  2740                           wreg	equ	0xFE8
  2741                           postdec2	equ	0xFDD
  2742                           fsr2h	equ	0xFDA
  2743                           fsr2l	equ	0xFD9
  2744                           status	equ	0xFD8
  2745                           
  2746 ;; *************** function _EXT_INT_Initialize *****************
  2747 ;; Defined at:
  2748 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;Total ram usage:        0 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    8
  2769 ;; This function calls:
  2770 ;;		_INT1_SetInterruptHandler
  2771 ;;		_INT2_SetInterruptHandler
  2772 ;; This function is called by:
  2773 ;;		_SYSTEM_Initialize
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text19
  2778  0009E2                     __ptext19:
  2779                           	opt stack 0
  2780  0009E2                     _EXT_INT_Initialize:
  2781                           	opt stack 21
  2782                           
  2783                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  2784                           
  2785                           ;incstack = 0
  2786  0009E2  90F0               	bcf	intcon3,0,c	;volatile
  2787                           
  2788                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  2789  0009E4  8AF1               	bsf	intcon2,5,c	;volatile
  2790                           
  2791                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  2792  0009E6  0E78               	movlw	low _INT1_DefaultInterruptHandler
  2793  0009E8  0100               	movlb	0	; () banked
  2794  0009EA  6FFC               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  2795  0009EC  0E0C               	movlw	high _INT1_DefaultInterruptHandler
  2796  0009EE  6FFD               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2797  0009F0  ECF7  F005         	call	_INT1_SetInterruptHandler	;wreg free
  2798                           
  2799                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  2800  0009F4  86F0               	bsf	intcon3,3,c	;volatile
  2801                           
  2802                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
  2803  0009F6  92F0               	bcf	intcon3,1,c	;volatile
  2804                           
  2805                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
  2806  0009F8  88F1               	bsf	intcon2,4,c	;volatile
  2807                           
  2808                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  2809  0009FA  0E76               	movlw	low _INT2_DefaultInterruptHandler
  2810  0009FC  0100               	movlb	0	; () banked
  2811  0009FE  6FFC               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  2812  000A00  0E0C               	movlw	high _INT2_DefaultInterruptHandler
  2813  000A02  6FFD               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2814  000A04  ECF2  F005         	call	_INT2_SetInterruptHandler	;wreg free
  2815                           
  2816                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
  2817  000A08  88F0               	bsf	intcon3,4,c	;volatile
  2818  000A0A  0012               	return		;funcret
  2819  000A0C                     __end_of_EXT_INT_Initialize:
  2820                           	opt stack 0
  2821                           tblptru	equ	0xFF8
  2822                           tblptrh	equ	0xFF7
  2823                           tblptrl	equ	0xFF6
  2824                           tablat	equ	0xFF5
  2825                           intcon	equ	0xFF2
  2826                           intcon2	equ	0xFF1
  2827                           intcon3	equ	0xFF0
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           postdec2	equ	0xFDD
  2831                           fsr2h	equ	0xFDA
  2832                           fsr2l	equ	0xFD9
  2833                           status	equ	0xFD8
  2834                           
  2835 ;; *************** function _INT2_SetInterruptHandler *****************
  2836 ;; Defined at:
  2837 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2840 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2852 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;Total ram usage:        2 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    7
  2859 ;; This function calls:
  2860 ;;		Nothing
  2861 ;; This function is called by:
  2862 ;;		_DIO1_ISR_Lora_Init
  2863 ;;		_EXT_INT_Initialize
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text20
  2868  000BE4                     __ptext20:
  2869                           	opt stack 0
  2870  000BE4                     _INT2_SetInterruptHandler:
  2871                           	opt stack 20
  2872                           
  2873                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
  2874                           
  2875                           ;incstack = 0
  2876  000BE4  C0FC  F0EB         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  2877  000BE8  C0FD  F0EC         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  2878  000BEC  0012               	return		;funcret
  2879  000BEE                     __end_of_INT2_SetInterruptHandler:
  2880                           	opt stack 0
  2881                           tblptru	equ	0xFF8
  2882                           tblptrh	equ	0xFF7
  2883                           tblptrl	equ	0xFF6
  2884                           tablat	equ	0xFF5
  2885                           intcon	equ	0xFF2
  2886                           intcon2	equ	0xFF1
  2887                           intcon3	equ	0xFF0
  2888                           postinc0	equ	0xFEE
  2889                           wreg	equ	0xFE8
  2890                           postdec2	equ	0xFDD
  2891                           fsr2h	equ	0xFDA
  2892                           fsr2l	equ	0xFD9
  2893                           status	equ	0xFD8
  2894                           
  2895 ;; *************** function _INT1_SetInterruptHandler *****************
  2896 ;; Defined at:
  2897 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2900 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2912 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;Total ram usage:        2 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    7
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_DIO0_ISR_Lora_Init
  2923 ;;		_EXT_INT_Initialize
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text21
  2928  000BEE                     __ptext21:
  2929                           	opt stack 0
  2930  000BEE                     _INT1_SetInterruptHandler:
  2931                           	opt stack 20
  2932                           
  2933                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  2934                           
  2935                           ;incstack = 0
  2936  000BEE  C0FC  F0ED         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  2937  000BF2  C0FD  F0EE         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  2938  000BF6  0012               	return		;funcret
  2939  000BF8                     __end_of_INT1_SetInterruptHandler:
  2940                           	opt stack 0
  2941                           tblptru	equ	0xFF8
  2942                           tblptrh	equ	0xFF7
  2943                           tblptrl	equ	0xFF6
  2944                           tablat	equ	0xFF5
  2945                           intcon	equ	0xFF2
  2946                           intcon2	equ	0xFF1
  2947                           intcon3	equ	0xFF0
  2948                           postinc0	equ	0xFEE
  2949                           wreg	equ	0xFE8
  2950                           postdec2	equ	0xFDD
  2951                           fsr2h	equ	0xFDA
  2952                           fsr2l	equ	0xFD9
  2953                           status	equ	0xFD8
  2954                           
  2955 ;; *************** function _EUSART1_Initialize *****************
  2956 ;; Defined at:
  2957 ;;		line 115 in file "mcc_generated_files/eusart1.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, status,2, status,0, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;Total ram usage:        0 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    8
  2978 ;; This function calls:
  2979 ;;		_EUSART1_SetErrorHandler
  2980 ;;		_EUSART1_SetFramingErrorHandler
  2981 ;;		_EUSART1_SetOverrunErrorHandler
  2982 ;;		_EUSART1_SetRxInterruptHandler
  2983 ;;		_EUSART1_SetTxInterruptHandler
  2984 ;; This function is called by:
  2985 ;;		_SYSTEM_Initialize
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text22
  2990  0006F6                     __ptext22:
  2991                           	opt stack 0
  2992  0006F6                     _EUSART1_Initialize:
  2993                           	opt stack 21
  2994                           
  2995                           ;eusart1.c: 118: PIE1bits.RC1IE = 0;
  2996                           
  2997                           ;incstack = 0
  2998  0006F6  9A9D               	bcf	3997,5,c	;volatile
  2999                           
  3000                           ;eusart1.c: 119: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  3001  0006F8  0ED4               	movlw	low _EUSART1_Receive_ISR
  3002  0006FA  0100               	movlb	0	; () banked
  3003  0006FC  6FFC               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
  3004  0006FE  0E00               	movlw	high _EUSART1_Receive_ISR
  3005  000700  6FFD               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  3006  000702  EC01  F006         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  3007                           
  3008                           ;eusart1.c: 120: PIE1bits.TX1IE = 0;
  3009  000706  989D               	bcf	3997,4,c	;volatile
  3010                           
  3011                           ;eusart1.c: 121: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
  3012  000708  0E86               	movlw	low _EUSART1_Transmit_ISR
  3013  00070A  0100               	movlb	0	; () banked
  3014  00070C  6FFC               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
  3015  00070E  0E09               	movlw	high _EUSART1_Transmit_ISR
  3016  000710  6FFD               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  3017  000712  ECFC  F005         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  3018                           
  3019                           ;eusart1.c: 125: BAUDCON1 = 0x08;
  3020  000716  0E08               	movlw	8
  3021  000718  6EB8               	movwf	4024,c	;volatile
  3022                           
  3023                           ;eusart1.c: 128: RCSTA1 = 0x90;
  3024  00071A  0E90               	movlw	144
  3025  00071C  6EAB               	movwf	4011,c	;volatile
  3026                           
  3027                           ;eusart1.c: 131: TXSTA1 = 0x24;
  3028  00071E  0E24               	movlw	36
  3029  000720  6EAC               	movwf	4012,c	;volatile
  3030                           
  3031                           ;eusart1.c: 134: SPBRG1 = 0x14;
  3032  000722  0E14               	movlw	20
  3033  000724  6EAF               	movwf	4015,c	;volatile
  3034                           
  3035                           ;eusart1.c: 137: SPBRGH1 = 0x34;
  3036  000726  0E34               	movlw	52
  3037  000728  6EB0               	movwf	4016,c	;volatile
  3038                           
  3039                           ;eusart1.c: 140: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  3040  00072A  0E7A               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3041  00072C  0100               	movlb	0	; () banked
  3042  00072E  6FFC               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  3043  000730  0E0C               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3044  000732  6FFD               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  3045  000734  EC0B  F006         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3046                           
  3047                           ;eusart1.c: 141: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  3048  000738  0E5C               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3049  00073A  0100               	movlb	0	; () banked
  3050  00073C  6FFC               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  3051  00073E  0E0C               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3052  000740  6FFD               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  3053  000742  EC06  F006         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3054                           
  3055                           ;eusart1.c: 142: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  3056  000746  0E62               	movlw	low _EUSART1_DefaultErrorHandler
  3057  000748  0100               	movlb	0	; () banked
  3058  00074A  6FFC               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  3059  00074C  0E0C               	movlw	high _EUSART1_DefaultErrorHandler
  3060  00074E  6FFD               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  3061  000750  EC10  F006         	call	_EUSART1_SetErrorHandler	;wreg free
  3062                           
  3063                           ;eusart1.c: 144: eusart1RxLastError.status = 0;
  3064  000754  0E00               	movlw	0
  3065  000756  0100               	movlb	0	; () banked
  3066  000758  6FA2               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3067                           
  3068                           ;eusart1.c: 147: eusart1TxHead = 0;
  3069  00075A  0E00               	movlw	0
  3070  00075C  6FA7               	movwf	_eusart1TxHead& (0+255),b	;volatile
  3071                           
  3072                           ;eusart1.c: 148: eusart1TxTail = 0;
  3073  00075E  0E00               	movlw	0
  3074  000760  6FA6               	movwf	_eusart1TxTail& (0+255),b	;volatile
  3075                           
  3076                           ;eusart1.c: 149: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  3077  000762  0E01               	movlw	1
  3078  000764  6FEF               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3079                           
  3080                           ;eusart1.c: 151: eusart1RxHead = 0;
  3081  000766  0E00               	movlw	0
  3082  000768  6E48               	movwf	_eusart1RxHead,c	;volatile
  3083                           
  3084                           ;eusart1.c: 152: eusart1RxTail = 0;
  3085  00076A  0E00               	movlw	0
  3086  00076C  6E47               	movwf	_eusart1RxTail,c	;volatile
  3087                           
  3088                           ;eusart1.c: 153: eusart1RxCount = 0;
  3089  00076E  0E00               	movlw	0
  3090  000770  6FA3               	movwf	_eusart1RxCount& (0+255),b	;volatile
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;eusart1.c: 156: PIE1bits.RC1IE = 1;
  3094  000772  8A9D               	bsf	3997,5,c	;volatile
  3095                           
  3096                           ; BSR set to: 0
  3097  000774  0012               	return		;funcret
  3098  000776                     __end_of_EUSART1_Initialize:
  3099                           	opt stack 0
  3100                           tblptru	equ	0xFF8
  3101                           tblptrh	equ	0xFF7
  3102                           tblptrl	equ	0xFF6
  3103                           tablat	equ	0xFF5
  3104                           intcon	equ	0xFF2
  3105                           intcon2	equ	0xFF1
  3106                           intcon3	equ	0xFF0
  3107                           postinc0	equ	0xFEE
  3108                           wreg	equ	0xFE8
  3109                           postdec2	equ	0xFDD
  3110                           fsr2h	equ	0xFDA
  3111                           fsr2l	equ	0xFD9
  3112                           status	equ	0xFD8
  3113                           
  3114 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3115 ;; Defined at:
  3116 ;;		line 331 in file "mcc_generated_files/eusart1.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3119 ;;		 -> EUSART1_Transmit_ISR(1), 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3131 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;Total ram usage:        2 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    7
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_EUSART1_Initialize
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text23
  3146  000BF8                     __ptext23:
  3147                           	opt stack 0
  3148  000BF8                     _EUSART1_SetTxInterruptHandler:
  3149                           	opt stack 21
  3150                           
  3151                           ;eusart1.c: 332: EUSART1_TxDefaultInterruptHandler = interruptHandler;
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;incstack = 0
  3155  000BF8  C0FC  F1FD         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3156  000BFC  C0FD  F1FE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3157  000C00  0012               	return		;funcret
  3158  000C02                     __end_of_EUSART1_SetTxInterruptHandler:
  3159                           	opt stack 0
  3160                           tblptru	equ	0xFF8
  3161                           tblptrh	equ	0xFF7
  3162                           tblptrl	equ	0xFF6
  3163                           tablat	equ	0xFF5
  3164                           intcon	equ	0xFF2
  3165                           intcon2	equ	0xFF1
  3166                           intcon3	equ	0xFF0
  3167                           postinc0	equ	0xFEE
  3168                           wreg	equ	0xFE8
  3169                           postdec2	equ	0xFDD
  3170                           fsr2h	equ	0xFDA
  3171                           fsr2l	equ	0xFD9
  3172                           status	equ	0xFD8
  3173                           
  3174 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3175 ;; Defined at:
  3176 ;;		line 335 in file "mcc_generated_files/eusart1.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3179 ;;		 -> EUSART1_Receive_ISR(1), 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;Total ram usage:        2 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    7
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_EUSART1_Initialize
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text24
  3206  000C02                     __ptext24:
  3207                           	opt stack 0
  3208  000C02                     _EUSART1_SetRxInterruptHandler:
  3209                           	opt stack 21
  3210                           
  3211                           ;eusart1.c: 336: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  3212                           
  3213                           ;incstack = 0
  3214  000C02  C0FC  F1FB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3215  000C06  C0FD  F1FC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3216  000C0A  0012               	return		;funcret
  3217  000C0C                     __end_of_EUSART1_SetRxInterruptHandler:
  3218                           	opt stack 0
  3219                           tblptru	equ	0xFF8
  3220                           tblptrh	equ	0xFF7
  3221                           tblptrl	equ	0xFF6
  3222                           tablat	equ	0xFF5
  3223                           intcon	equ	0xFF2
  3224                           intcon2	equ	0xFF1
  3225                           intcon3	equ	0xFF0
  3226                           postinc0	equ	0xFEE
  3227                           wreg	equ	0xFE8
  3228                           postdec2	equ	0xFDD
  3229                           fsr2h	equ	0xFDA
  3230                           fsr2l	equ	0xFD9
  3231                           status	equ	0xFD8
  3232                           
  3233 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3234 ;; Defined at:
  3235 ;;		line 323 in file "mcc_generated_files/eusart1.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3238 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;		None
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  1    wreg      void 
  3243 ;; Registers used:
  3244 ;;		wreg, status,2, status,0
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3250 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;Total ram usage:        2 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    7
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_EUSART1_Initialize
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text25
  3265  000C0C                     __ptext25:
  3266                           	opt stack 0
  3267  000C0C                     _EUSART1_SetOverrunErrorHandler:
  3268                           	opt stack 21
  3269                           
  3270                           ;eusart1.c: 324: EUSART1_OverrunErrorHandler = interruptHandler;
  3271                           
  3272                           ;incstack = 0
  3273  000C0C  C0FC  F1F7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3274  000C10  C0FD  F1F8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3275  000C14  0012               	return		;funcret
  3276  000C16                     __end_of_EUSART1_SetOverrunErrorHandler:
  3277                           	opt stack 0
  3278                           tblptru	equ	0xFF8
  3279                           tblptrh	equ	0xFF7
  3280                           tblptrl	equ	0xFF6
  3281                           tablat	equ	0xFF5
  3282                           intcon	equ	0xFF2
  3283                           intcon2	equ	0xFF1
  3284                           intcon3	equ	0xFF0
  3285                           postinc0	equ	0xFEE
  3286                           wreg	equ	0xFE8
  3287                           postdec2	equ	0xFDD
  3288                           fsr2h	equ	0xFDA
  3289                           fsr2l	equ	0xFD9
  3290                           status	equ	0xFD8
  3291                           
  3292 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3293 ;; Defined at:
  3294 ;;		line 319 in file "mcc_generated_files/eusart1.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3297 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3309 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;Total ram usage:        2 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    7
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_EUSART1_Initialize
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text26
  3324  000C16                     __ptext26:
  3325                           	opt stack 0
  3326  000C16                     _EUSART1_SetFramingErrorHandler:
  3327                           	opt stack 21
  3328                           
  3329                           ;eusart1.c: 320: EUSART1_FramingErrorHandler = interruptHandler;
  3330                           
  3331                           ;incstack = 0
  3332  000C16  C0FC  F1F9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3333  000C1A  C0FD  F1FA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3334  000C1E  0012               	return		;funcret
  3335  000C20                     __end_of_EUSART1_SetFramingErrorHandler:
  3336                           	opt stack 0
  3337                           tblptru	equ	0xFF8
  3338                           tblptrh	equ	0xFF7
  3339                           tblptrl	equ	0xFF6
  3340                           tablat	equ	0xFF5
  3341                           intcon	equ	0xFF2
  3342                           intcon2	equ	0xFF1
  3343                           intcon3	equ	0xFF0
  3344                           postinc0	equ	0xFEE
  3345                           wreg	equ	0xFE8
  3346                           postdec2	equ	0xFDD
  3347                           fsr2h	equ	0xFDA
  3348                           fsr2l	equ	0xFD9
  3349                           status	equ	0xFD8
  3350                           
  3351 ;; *************** function _EUSART1_SetErrorHandler *****************
  3352 ;; Defined at:
  3353 ;;		line 327 in file "mcc_generated_files/eusart1.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3356 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3368 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;Total ram usage:        2 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    7
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_EUSART1_Initialize
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text27
  3383  000C20                     __ptext27:
  3384                           	opt stack 0
  3385  000C20                     _EUSART1_SetErrorHandler:
  3386                           	opt stack 21
  3387                           
  3388                           ;eusart1.c: 328: EUSART1_ErrorHandler = interruptHandler;
  3389                           
  3390                           ;incstack = 0
  3391  000C20  C0FC  F1F5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3392  000C24  C0FD  F1F6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3393  000C28  0012               	return		;funcret
  3394  000C2A                     __end_of_EUSART1_SetErrorHandler:
  3395                           	opt stack 0
  3396                           tblptru	equ	0xFF8
  3397                           tblptrh	equ	0xFF7
  3398                           tblptrl	equ	0xFF6
  3399                           tablat	equ	0xFF5
  3400                           intcon	equ	0xFF2
  3401                           intcon2	equ	0xFF1
  3402                           intcon3	equ	0xFF0
  3403                           postinc0	equ	0xFEE
  3404                           wreg	equ	0xFE8
  3405                           postdec2	equ	0xFDD
  3406                           fsr2h	equ	0xFDA
  3407                           fsr2l	equ	0xFD9
  3408                           status	equ	0xFD8
  3409                           
  3410 ;; *************** function _EUSART1_Write *****************
  3411 ;; Defined at:
  3412 ;;		line 200 in file "mcc_generated_files/eusart1.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;  txData          1    wreg     unsigned char 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  txData          1    0[BANK0 ] unsigned char 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;Total ram usage:        1 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    7
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_main
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text28
  3441  000918                     __ptext28:
  3442                           	opt stack 0
  3443  000918                     _EUSART1_Write:
  3444                           	opt stack 23
  3445                           
  3446                           ;incstack = 0
  3447                           ;EUSART1_Write@txData stored from wreg
  3448  000918  0100               	movlb	0	; () banked
  3449  00091A  6FFC               	movwf	EUSART1_Write@txData& (0+255),b
  3450  00091C                     
  3451                           ;eusart1.c: 203: {
  3452                           
  3453                           ;eusart1.c: 202: while(0 == eusart1TxBufferRemaining)
  3454  00091C  0100               	movlb	0	; () banked
  3455  00091E  51EF               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  3456  000920  B4D8               	btfsc	status,2,c
  3457  000922  D7FC               	goto	l10632
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;eusart1.c: 204: }
  3461                           ;eusart1.c: 206: if(0 == PIE1bits.TX1IE)
  3462  000924  B89D               	btfsc	3997,4,c	;volatile
  3463  000926  D003               	goto	l2540
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;eusart1.c: 207: {
  3467                           ;eusart1.c: 208: TXREG1 = txData;
  3468  000928  C0FC  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3469                           
  3470                           ;eusart1.c: 209: }
  3471  00092C  D012               	goto	l2541
  3472  00092E                     l2540:
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;eusart1.c: 210: else
  3476                           ;eusart1.c: 211: {
  3477                           ;eusart1.c: 212: PIE1bits.TX1IE = 0;
  3478  00092E  989D               	bcf	3997,4,c	;volatile
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;eusart1.c: 213: eusart1TxBuffer[eusart1TxHead++] = txData;
  3482  000930  51A7               	movf	_eusart1TxHead& (0+255),w,b	;volatile
  3483  000932  0D01               	mullw	1
  3484  000934  0EA5               	movlw	low _eusart1TxBuffer
  3485  000936  24F3               	addwf	prodl,w,c
  3486  000938  6ED9               	movwf	fsr2l,c
  3487  00093A  0E00               	movlw	high _eusart1TxBuffer
  3488  00093C  20F4               	addwfc	prodh,w,c
  3489  00093E  6EDA               	movwf	fsr2h,c
  3490  000940  C0FC  FFDF         	movff	EUSART1_Write@txData,indf2
  3491                           
  3492                           ; BSR set to: 0
  3493  000944  2BA7               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;eusart1.c: 214: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  3497  000946  51A7               	movf	_eusart1TxHead& (0+255),w,b	;volatile
  3498  000948  B4D8               	btfsc	status,2,c
  3499  00094A  D002               	goto	l2542
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;eusart1.c: 215: {
  3503                           ;eusart1.c: 216: eusart1TxHead = 0;
  3504  00094C  0E00               	movlw	0
  3505  00094E  6FA7               	movwf	_eusart1TxHead& (0+255),b	;volatile
  3506  000950                     l2542:
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;eusart1.c: 217: }
  3510                           ;eusart1.c: 218: eusart1TxBufferRemaining--;
  3511                           
  3512                           ; BSR set to: 0
  3513  000950  07EF               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  3514  000952                     l2541:
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;eusart1.c: 219: }
  3518                           ;eusart1.c: 220: PIE1bits.TX1IE = 1;
  3519                           
  3520                           ; BSR set to: 0
  3521  000952  889D               	bsf	3997,4,c	;volatile
  3522                           
  3523                           ; BSR set to: 0
  3524  000954  0012               	return		;funcret
  3525  000956                     __end_of_EUSART1_Write:
  3526                           	opt stack 0
  3527                           tblptru	equ	0xFF8
  3528                           tblptrh	equ	0xFF7
  3529                           tblptrl	equ	0xFF6
  3530                           tablat	equ	0xFF5
  3531                           prodh	equ	0xFF4
  3532                           prodl	equ	0xFF3
  3533                           intcon	equ	0xFF2
  3534                           intcon2	equ	0xFF1
  3535                           intcon3	equ	0xFF0
  3536                           postinc0	equ	0xFEE
  3537                           wreg	equ	0xFE8
  3538                           indf2	equ	0xFDF
  3539                           postdec2	equ	0xFDD
  3540                           fsr2h	equ	0xFDA
  3541                           fsr2l	equ	0xFD9
  3542                           status	equ	0xFD8
  3543                           
  3544 ;; *************** function _INTERRUPT_InterruptManager *****************
  3545 ;; Defined at:
  3546 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;Total ram usage:       10 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    6
  3567 ;; This function calls:
  3568 ;;		Absolute function
  3569 ;;		_EUSART1_Receive_ISR
  3570 ;;		_EUSART1_Transmit_ISR
  3571 ;;		_INT1_ISR
  3572 ;;		_INT2_ISR
  3573 ;;		_PIN_MANAGER_IOC
  3574 ;;		_TMR1_ISR
  3575 ;; This function is called by:
  3576 ;;		Interrupt level 2
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	intcode
  3581  000008                     __pintcode:
  3582                           	opt stack 0
  3583  000008                     _INTERRUPT_InterruptManager:
  3584                           	opt stack 20
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;incstack = 0
  3588  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
  3589  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3590  000010  CFE9 F036          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3591  000014  CFEA F037          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3592  000018  CFE1 F038          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3593  00001C  CFE2 F039          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3594  000020  CFD9 F03A          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3595  000024  CFDA F03B          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3596  000028  CFF3 F03C          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3597  00002C  CFF4 F03D          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3598  000030  EE1E  F04C         	lfsr	1,___inthi_sp
  3599                           
  3600                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
  3601  000034  B6F0               	btfsc	intcon3,3,c	;volatile
  3602  000036  A0F0               	btfss	intcon3,0,c	;volatile
  3603  000038  D003               	goto	i2l2244
  3604                           
  3605                           ;interrupt_manager.c: 62: {
  3606                           ;interrupt_manager.c: 63: INT1_ISR();
  3607  00003A  EC1E  F006         	call	_INT1_ISR	;wreg free
  3608                           
  3609                           ;interrupt_manager.c: 64: }
  3610  00003E  D031               	goto	i2u1266_49
  3611  000040                     i2l2244:
  3612                           
  3613                           ;interrupt_manager.c: 65: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
  3614  000040  B8F0               	btfsc	intcon3,4,c	;volatile
  3615  000042  A2F0               	btfss	intcon3,1,c	;volatile
  3616  000044  D003               	goto	i2l2246
  3617                           
  3618                           ;interrupt_manager.c: 66: {
  3619                           ;interrupt_manager.c: 67: INT2_ISR();
  3620  000046  EC1A  F006         	call	_INT2_ISR	;wreg free
  3621                           
  3622                           ;interrupt_manager.c: 68: }
  3623  00004A  D02B               	goto	i2u1266_49
  3624  00004C                     i2l2246:
  3625                           
  3626                           ;interrupt_manager.c: 69: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
  3627  00004C  B6F2               	btfsc	intcon,3,c	;volatile
  3628  00004E  A0F2               	btfss	intcon,0,c	;volatile
  3629  000050  D003               	goto	i2l2248
  3630                           
  3631                           ;interrupt_manager.c: 70: {
  3632                           ;interrupt_manager.c: 71: PIN_MANAGER_IOC();
  3633  000052  EC15  F006         	call	_PIN_MANAGER_IOC	;wreg free
  3634                           
  3635                           ;interrupt_manager.c: 72: }
  3636  000056  D025               	goto	i2u1266_49
  3637  000058                     i2l2248:
  3638                           
  3639                           ;interrupt_manager.c: 73: else if(INTCONbits.PEIE == 1)
  3640  000058  ACF2               	btfss	intcon,6,c	;volatile
  3641  00005A  D023               	goto	i2u1266_49
  3642                           
  3643                           ;interrupt_manager.c: 74: {
  3644                           ;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  3645  00005C  B09D               	btfsc	3997,0,c	;volatile
  3646  00005E  A09E               	btfss	3998,0,c	;volatile
  3647  000060  D002               	goto	i2l2251
  3648                           
  3649                           ;interrupt_manager.c: 76: {
  3650                           ;interrupt_manager.c: 77: TMR1_ISR();
  3651  000062  ECAA  F005         	call	_TMR1_ISR	;wreg free
  3652  000066                     i2l2251:
  3653                           
  3654                           ;interrupt_manager.c: 78: }
  3655                           ;interrupt_manager.c: 79: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  3656  000066  B89D               	btfsc	3997,4,c	;volatile
  3657  000068  A89E               	btfss	3998,4,c	;volatile
  3658  00006A  D00C               	goto	i2u1263_49
  3659                           
  3660                           ;interrupt_manager.c: 80: {
  3661                           ;interrupt_manager.c: 81: EUSART1_TxDefaultInterruptHandler();
  3662  00006C  D801               	call	i2u1263_48
  3663  00006E  D00A               	goto	i2u1263_49
  3664  000070                     i2u1263_48:
  3665  000070  0005               	push	
  3666  000072  6EFA               	movwf	pclath,c
  3667  000074  0101               	movlb	1	; () banked
  3668  000076  51FD               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  3669  000078  6EFD               	movwf	tosl,c
  3670  00007A  51FE               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  3671  00007C  6EFE               	movwf	tosh,c
  3672  00007E  6AFF               	clrf	tosu,c
  3673  000080  50FA               	movf	pclath,w,c
  3674  000082  0012               	return		;indir
  3675  000084                     i2u1263_49:
  3676                           
  3677                           ;interrupt_manager.c: 82: }
  3678                           ;interrupt_manager.c: 83: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  3679  000084  BA9D               	btfsc	3997,5,c	;volatile
  3680  000086  AA9E               	btfss	3998,5,c	;volatile
  3681  000088  D00C               	goto	i2u1266_49
  3682                           
  3683                           ;interrupt_manager.c: 84: {
  3684                           ;interrupt_manager.c: 85: EUSART1_RxDefaultInterruptHandler();
  3685  00008A  D801               	call	i2u1266_48
  3686  00008C  D00A               	goto	i2u1266_49
  3687  00008E                     i2u1266_48:
  3688  00008E  0005               	push	
  3689  000090  6EFA               	movwf	pclath,c
  3690  000092  0101               	movlb	1	; () banked
  3691  000094  51FB               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  3692  000096  6EFD               	movwf	tosl,c
  3693  000098  51FC               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  3694  00009A  6EFE               	movwf	tosh,c
  3695  00009C  6AFF               	clrf	tosu,c
  3696  00009E  50FA               	movf	pclath,w,c
  3697  0000A0  0012               	return		;indir
  3698  0000A2                     i2u1266_49:
  3699                           
  3700                           ;interrupt_manager.c: 92: else
  3701                           ;interrupt_manager.c: 93: {
  3702                           
  3703                           ;interrupt_manager.c: 90: }
  3704                           ;interrupt_manager.c: 91: }
  3705                           
  3706                           ;interrupt_manager.c: 87: else
  3707                           ;interrupt_manager.c: 88: {
  3708                           
  3709                           ;interrupt_manager.c: 86: }
  3710  0000A2  C03D  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3711  0000A6  C03C  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3712  0000AA  C03B  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3713  0000AE  C03A  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3714  0000B2  C039  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3715  0000B6  C038  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3716  0000BA  C037  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3717  0000BE  C036  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3718  0000C2  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3719  0000C6  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3720  0000CA  0011               	retfie		f
  3721  0000CC                     __end_of_INTERRUPT_InterruptManager:
  3722                           	opt stack 0
  3723                           tosu	equ	0xFFF
  3724                           tosh	equ	0xFFE
  3725                           tosl	equ	0xFFD
  3726                           pclatu	equ	0xFFB
  3727                           pclath	equ	0xFFA
  3728                           tblptru	equ	0xFF8
  3729                           tblptrh	equ	0xFF7
  3730                           tblptrl	equ	0xFF6
  3731                           tablat	equ	0xFF5
  3732                           prodh	equ	0xFF4
  3733                           prodl	equ	0xFF3
  3734                           intcon	equ	0xFF2
  3735                           intcon2	equ	0xFF1
  3736                           intcon3	equ	0xFF0
  3737                           postinc0	equ	0xFEE
  3738                           fsr0h	equ	0xFEA
  3739                           fsr0l	equ	0xFE9
  3740                           wreg	equ	0xFE8
  3741                           fsr1h	equ	0xFE2
  3742                           fsr1l	equ	0xFE1
  3743                           indf2	equ	0xFDF
  3744                           postdec2	equ	0xFDD
  3745                           fsr2h	equ	0xFDA
  3746                           fsr2l	equ	0xFD9
  3747                           status	equ	0xFD8
  3748                           
  3749 ;; *************** function _TMR1_ISR *****************
  3750 ;; Defined at:
  3751 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;Total ram usage:        0 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    5
  3772 ;; This function calls:
  3773 ;;		_TMR1_CallBack
  3774 ;;		_TMR1_WriteTimer
  3775 ;; This function is called by:
  3776 ;;		_INTERRUPT_InterruptManager
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text30
  3781  000B54                     __ptext30:
  3782                           	opt stack 0
  3783  000B54                     _TMR1_ISR:
  3784                           	opt stack 20
  3785                           
  3786                           ;tmr1.c: 162: PIR1bits.TMR1IF = 0;
  3787                           
  3788                           ;incstack = 0
  3789  000B54  909E               	bcf	3998,0,c	;volatile
  3790                           
  3791                           ;tmr1.c: 163: TMR1_WriteTimer(timer1ReloadVal);
  3792  000B56  C0E7  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  3793  000B5A  C0E8  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  3794  000B5E  EC9C  F005         	call	_TMR1_WriteTimer	;wreg free
  3795                           
  3796                           ;tmr1.c: 167: TMR1_CallBack();
  3797  000B62  EC3D  F005         	call	_TMR1_CallBack	;wreg free
  3798  000B66  0012               	return		;funcret
  3799  000B68                     __end_of_TMR1_ISR:
  3800                           	opt stack 0
  3801                           tosu	equ	0xFFF
  3802                           tosh	equ	0xFFE
  3803                           tosl	equ	0xFFD
  3804                           pclatu	equ	0xFFB
  3805                           pclath	equ	0xFFA
  3806                           tblptru	equ	0xFF8
  3807                           tblptrh	equ	0xFF7
  3808                           tblptrl	equ	0xFF6
  3809                           tablat	equ	0xFF5
  3810                           prodh	equ	0xFF4
  3811                           prodl	equ	0xFF3
  3812                           intcon	equ	0xFF2
  3813                           intcon2	equ	0xFF1
  3814                           intcon3	equ	0xFF0
  3815                           postinc0	equ	0xFEE
  3816                           fsr0h	equ	0xFEA
  3817                           fsr0l	equ	0xFE9
  3818                           wreg	equ	0xFE8
  3819                           fsr1h	equ	0xFE2
  3820                           fsr1l	equ	0xFE1
  3821                           indf2	equ	0xFDF
  3822                           postdec2	equ	0xFDD
  3823                           fsr2h	equ	0xFDA
  3824                           fsr2l	equ	0xFD9
  3825                           status	equ	0xFD8
  3826                           
  3827 ;; *************** function _TMR1_CallBack *****************
  3828 ;; Defined at:
  3829 ;;		line 170 in file "mcc_generated_files/tmr1.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;		None
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;Total ram usage:        0 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    4
  3850 ;; This function calls:
  3851 ;;		Absolute function
  3852 ;;		_TMR1_DefaultInterruptHandler
  3853 ;;		_TMR_ISR_lora
  3854 ;; This function is called by:
  3855 ;;		_TMR1_ISR
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text31
  3860  000A7A                     __ptext31:
  3861                           	opt stack 0
  3862  000A7A                     _TMR1_CallBack:
  3863                           	opt stack 20
  3864                           
  3865                           ;tmr1.c: 173: if(TMR1_InterruptHandler)
  3866                           
  3867                           ;incstack = 0
  3868  000A7A  0100               	movlb	0	; () banked
  3869  000A7C  51E5               	movf	_TMR1_InterruptHandler& (0+255),w,b
  3870  000A7E  11E6               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  3871  000A80  B4D8               	btfsc	status,2,c
  3872  000A82  0012               	return	
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;tmr1.c: 174: {
  3876                           ;tmr1.c: 175: TMR1_InterruptHandler();
  3877  000A84  D801               	call	i2u903_48
  3878  000A86  0012               	return	
  3879  000A88                     i2u903_48:
  3880  000A88  0005               	push	
  3881  000A8A  6EFA               	movwf	pclath,c
  3882  000A8C  51E5               	movf	_TMR1_InterruptHandler& (0+255),w,b
  3883  000A8E  6EFD               	movwf	tosl,c
  3884  000A90  51E6               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  3885  000A92  6EFE               	movwf	tosh,c
  3886  000A94  6AFF               	clrf	tosu,c
  3887  000A96  50FA               	movf	pclath,w,c
  3888  000A98  0012               	return		;indir
  3889  000A9A                     __end_of_TMR1_CallBack:
  3890                           	opt stack 0
  3891                           tosu	equ	0xFFF
  3892                           tosh	equ	0xFFE
  3893                           tosl	equ	0xFFD
  3894                           pclatu	equ	0xFFB
  3895                           pclath	equ	0xFFA
  3896                           tblptru	equ	0xFF8
  3897                           tblptrh	equ	0xFF7
  3898                           tblptrl	equ	0xFF6
  3899                           tablat	equ	0xFF5
  3900                           prodh	equ	0xFF4
  3901                           prodl	equ	0xFF3
  3902                           intcon	equ	0xFF2
  3903                           intcon2	equ	0xFF1
  3904                           intcon3	equ	0xFF0
  3905                           postinc0	equ	0xFEE
  3906                           fsr0h	equ	0xFEA
  3907                           fsr0l	equ	0xFE9
  3908                           wreg	equ	0xFE8
  3909                           fsr1h	equ	0xFE2
  3910                           fsr1l	equ	0xFE1
  3911                           indf2	equ	0xFDF
  3912                           postdec2	equ	0xFDD
  3913                           fsr2h	equ	0xFDA
  3914                           fsr2l	equ	0xFD9
  3915                           status	equ	0xFD8
  3916                           
  3917 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3918 ;; Defined at:
  3919 ;;		line 183 in file "mcc_generated_files/tmr1.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;		None
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;		None
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		None
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;Total ram usage:        0 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_TMR1_Initialize
  3943 ;;		_TMR1_CallBack
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text32
  3948  000C72                     __ptext32:
  3949                           	opt stack 0
  3950  000C72                     _TMR1_DefaultInterruptHandler:
  3951                           	opt stack 23
  3952                           
  3953                           ;incstack = 0
  3954  000C72  0012               	return		;funcret
  3955  000C74                     __end_of_TMR1_DefaultInterruptHandler:
  3956                           	opt stack 0
  3957                           tosu	equ	0xFFF
  3958                           tosh	equ	0xFFE
  3959                           tosl	equ	0xFFD
  3960                           pclatu	equ	0xFFB
  3961                           pclath	equ	0xFFA
  3962                           tblptru	equ	0xFF8
  3963                           tblptrh	equ	0xFF7
  3964                           tblptrl	equ	0xFF6
  3965                           tablat	equ	0xFF5
  3966                           prodh	equ	0xFF4
  3967                           prodl	equ	0xFF3
  3968                           intcon	equ	0xFF2
  3969                           intcon2	equ	0xFF1
  3970                           intcon3	equ	0xFF0
  3971                           postinc0	equ	0xFEE
  3972                           fsr0h	equ	0xFEA
  3973                           fsr0l	equ	0xFE9
  3974                           wreg	equ	0xFE8
  3975                           fsr1h	equ	0xFE2
  3976                           fsr1l	equ	0xFE1
  3977                           indf2	equ	0xFDF
  3978                           postdec2	equ	0xFDD
  3979                           fsr2h	equ	0xFDA
  3980                           fsr2l	equ	0xFD9
  3981                           status	equ	0xFD8
  3982                           
  3983 ;; *************** function _TMR_ISR_lora *****************
  3984 ;; Defined at:
  3985 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;Total ram usage:        2 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    3
  4006 ;; This function calls:
  4007 ;;		_SwTimersInterrupt
  4008 ;;		_TMR_SwapTimer
  4009 ;; This function is called by:
  4010 ;;		_TMR_ISR_Lora_Init
  4011 ;;		_TMR1_CallBack
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text33
  4016  0007DA                     __ptext33:
  4017                           	opt stack 0
  4018  0007DA                     _TMR_ISR_lora:
  4019                           	opt stack 20
  4020                           
  4021                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
  4022                           
  4023                           ;incstack = 0
  4024  0007DA  0E01               	movlw	1
  4025  0007DC  0100               	movlb	0	; () banked
  4026  0007DE  6FA9               	movwf	_timerOverflow& (0+255),b	;volatile
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
  4030  0007E0  EC52  F002         	call	_SwTimersInterrupt	;wreg free
  4031  0007E4  C021  F0F8         	movff	?_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
  4032  0007E8  C022  F0F9         	movff	?_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
  4033  0007EC  C023  F0FA         	movff	?_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
  4034  0007F0  C024  F0FB         	movff	?_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
  4035                           
  4036                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
  4037  0007F4  0100               	movlb	0	; () banked
  4038  0007F6  51FB               	movf	(_ticksToScheduledInterrupt+3)& (0+255),w,b	;volatile
  4039  0007F8  E11D               	bnz	i2l2171
  4040  0007FA  05FA               	decf	(_ticksToScheduledInterrupt+2)& (0+255),w,b	;volatile
  4041  0007FC  B0D8               	btfsc	status,0,c
  4042  0007FE  0012               	return	
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;tmr_lora_addons.c: 66: {
  4046                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
  4047  000800  C0F8  F032         	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
  4048  000804  C0F9  F033         	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
  4049  000808  1E32               	comf	??_TMR_ISR_lora,f,c
  4050  00080A  1E33               	comf	??_TMR_ISR_lora+1,f,c
  4051  00080C  4A32               	infsnz	??_TMR_ISR_lora,f,c
  4052  00080E  2A33               	incf	??_TMR_ISR_lora+1,f,c
  4053  000810  C032  F044         	movff	??_TMR_ISR_lora,_reloadVal	;volatile
  4054  000814  C033  F045         	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
  4058  000818  C044  F009         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
  4059  00081C  C045  F00A         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
  4060  000820  EC6A  F004         	call	_TMR_SwapTimer	;wreg free
  4061  000824  C009  F068         	movff	?_TMR_SwapTimer,_ticksAdded	;volatile
  4062  000828  C00A  F069         	movff	?_TMR_SwapTimer+1,_ticksAdded+1	;volatile
  4063  00082C  0100               	movlb	0	; () banked
  4064  00082E  6B6A               	clrf	(_ticksAdded+2)& (0+255),b	;volatile
  4065  000830  6B6B               	clrf	(_ticksAdded+3)& (0+255),b	;volatile
  4066  000832  0012               	return	
  4067  000834                     i2l2171:
  4068                           
  4069                           ; BSR set to: 0
  4070  000834  0012               	return		;funcret
  4071  000836                     __end_of_TMR_ISR_lora:
  4072                           	opt stack 0
  4073                           tosu	equ	0xFFF
  4074                           tosh	equ	0xFFE
  4075                           tosl	equ	0xFFD
  4076                           pclatu	equ	0xFFB
  4077                           pclath	equ	0xFFA
  4078                           tblptru	equ	0xFF8
  4079                           tblptrh	equ	0xFF7
  4080                           tblptrl	equ	0xFF6
  4081                           tablat	equ	0xFF5
  4082                           prodh	equ	0xFF4
  4083                           prodl	equ	0xFF3
  4084                           intcon	equ	0xFF2
  4085                           intcon2	equ	0xFF1
  4086                           intcon3	equ	0xFF0
  4087                           postinc0	equ	0xFEE
  4088                           fsr0h	equ	0xFEA
  4089                           fsr0l	equ	0xFE9
  4090                           wreg	equ	0xFE8
  4091                           fsr1h	equ	0xFE2
  4092                           fsr1l	equ	0xFE1
  4093                           indf2	equ	0xFDF
  4094                           postdec2	equ	0xFDD
  4095                           fsr2h	equ	0xFDA
  4096                           fsr2l	equ	0xFD9
  4097                           status	equ	0xFD8
  4098                           
  4099 ;; *************** function _TMR_SwapTimer *****************
  4100 ;; Defined at:
  4101 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  timerVal        2    8[COMRAM] unsigned int 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;		None
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  2    8[COMRAM] unsigned int 
  4108 ;; Registers used:
  4109 ;;		wreg, status,2, status,0, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4115 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;Total ram usage:        2 bytes
  4120 ;; Hardware stack levels used:    1
  4121 ;; Hardware stack levels required when called:    1
  4122 ;; This function calls:
  4123 ;;		_TMR1_ReadTimer
  4124 ;;		_TMR1_WriteTimer
  4125 ;; This function is called by:
  4126 ;;		_TMR_ISR_lora
  4127 ;;		_TMR_OverrideRemaining
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text34
  4132  0008D4                     __ptext34:
  4133                           	opt stack 0
  4134  0008D4                     _TMR_SwapTimer:
  4135                           	opt stack 21
  4136                           
  4137                           ;sw_timer.c: 114: static uint16_t oldVal;
  4138                           ;sw_timer.c: 115: static uint16_t retVal;
  4139                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;incstack = 0
  4143  0008D4  EC4D  F005         	call	_TMR1_ReadTimer	;wreg free
  4144  0008D8  C001  F09A         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
  4145  0008DC  C002  F09B         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
  4146  0008E0                     
  4147                           ;sw_timer.c: 123: ;
  4148  0008E0  EC4D  F005         	call	_TMR1_ReadTimer	;wreg free
  4149  0008E4  0100               	movlb	0	; () banked
  4150  0008E6  519A               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
  4151  0008E8  1801               	xorwf	?_TMR1_ReadTimer,w,c
  4152  0008EA  E104               	bnz	i2l8824
  4153  0008EC  519B               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
  4154  0008EE  1802               	xorwf	?_TMR1_ReadTimer+1,w,c
  4155  0008F0  B4D8               	btfsc	status,2,c
  4156  0008F2  D7F6               	goto	i2l1535
  4157  0008F4                     i2l8824:
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
  4161  0008F4  C009  F001         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
  4162  0008F8  C00A  F002         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
  4163  0008FC  EC9C  F005         	call	_TMR1_WriteTimer	;wreg free
  4164                           
  4165                           ;sw_timer.c: 128: oldVal++;
  4166  000900  0100               	movlb	0	; () banked
  4167  000902  4B9A               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
  4168  000904  2B9B               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;sw_timer.c: 130: retVal = oldVal;
  4172  000906  C09A  F098         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
  4173  00090A  C09B  F099         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;sw_timer.c: 132: return retVal;
  4177  00090E  C098  F009         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
  4178  000912  C099  F00A         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
  4179  000916  0012               	return	
  4180  000918                     __end_of_TMR_SwapTimer:
  4181                           	opt stack 0
  4182                           tosu	equ	0xFFF
  4183                           tosh	equ	0xFFE
  4184                           tosl	equ	0xFFD
  4185                           pclatu	equ	0xFFB
  4186                           pclath	equ	0xFFA
  4187                           tblptru	equ	0xFF8
  4188                           tblptrh	equ	0xFF7
  4189                           tblptrl	equ	0xFF6
  4190                           tablat	equ	0xFF5
  4191                           prodh	equ	0xFF4
  4192                           prodl	equ	0xFF3
  4193                           intcon	equ	0xFF2
  4194                           intcon2	equ	0xFF1
  4195                           intcon3	equ	0xFF0
  4196                           postinc0	equ	0xFEE
  4197                           fsr0h	equ	0xFEA
  4198                           fsr0l	equ	0xFE9
  4199                           wreg	equ	0xFE8
  4200                           fsr1h	equ	0xFE2
  4201                           fsr1l	equ	0xFE1
  4202                           indf2	equ	0xFDF
  4203                           postdec2	equ	0xFDD
  4204                           fsr2h	equ	0xFDA
  4205                           fsr2l	equ	0xFD9
  4206                           status	equ	0xFD8
  4207                           
  4208 ;; *************** function _TMR1_WriteTimer *****************
  4209 ;; Defined at:
  4210 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  timerVal        2    0[COMRAM] unsigned int 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;Total ram usage:        2 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_TMR_SwapTimer
  4234 ;;		_TMR1_ISR
  4235 ;;		_TMR1_Reload
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text35
  4240  000B38                     __ptext35:
  4241                           	opt stack 0
  4242  000B38                     _TMR1_WriteTimer:
  4243                           	opt stack 24
  4244                           
  4245                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;incstack = 0
  4249  000B38  A4CD               	btfss	4045,2,c	;volatile
  4250  000B3A  D007               	goto	i2l2627
  4251                           
  4252                           ;tmr1.c: 124: {
  4253                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
  4254  000B3C  90CD               	bcf	4045,0,c	;volatile
  4255                           
  4256                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
  4257  000B3E  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
  4258  000B40  6ECF               	movwf	4047,c	;volatile
  4259                           
  4260                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
  4261  000B42  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4262                           
  4263                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
  4264  000B46  80CD               	bsf	4045,0,c	;volatile
  4265                           
  4266                           ;tmr1.c: 134: }
  4267  000B48  0012               	return	
  4268  000B4A                     i2l2627:
  4269                           
  4270                           ;tmr1.c: 135: else
  4271                           ;tmr1.c: 136: {
  4272                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
  4273  000B4A  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
  4274  000B4C  6ECF               	movwf	4047,c	;volatile
  4275                           
  4276                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
  4277  000B4E  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4278  000B52  0012               	return	
  4279  000B54                     __end_of_TMR1_WriteTimer:
  4280                           	opt stack 0
  4281                           tosu	equ	0xFFF
  4282                           tosh	equ	0xFFE
  4283                           tosl	equ	0xFFD
  4284                           pclatu	equ	0xFFB
  4285                           pclath	equ	0xFFA
  4286                           tblptru	equ	0xFF8
  4287                           tblptrh	equ	0xFF7
  4288                           tblptrl	equ	0xFF6
  4289                           tablat	equ	0xFF5
  4290                           prodh	equ	0xFF4
  4291                           prodl	equ	0xFF3
  4292                           intcon	equ	0xFF2
  4293                           intcon2	equ	0xFF1
  4294                           intcon3	equ	0xFF0
  4295                           postinc0	equ	0xFEE
  4296                           fsr0h	equ	0xFEA
  4297                           fsr0l	equ	0xFE9
  4298                           wreg	equ	0xFE8
  4299                           fsr1h	equ	0xFE2
  4300                           fsr1l	equ	0xFE1
  4301                           indf2	equ	0xFDF
  4302                           postdec2	equ	0xFDD
  4303                           fsr2h	equ	0xFDA
  4304                           fsr2l	equ	0xFD9
  4305                           status	equ	0xFD8
  4306                           
  4307 ;; *************** function _SwTimersInterrupt *****************
  4308 ;; Defined at:
  4309 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  ticksToNextT    4   44[COMRAM] unsigned long 
  4314 ;;  timeElapsed     4   40[COMRAM] unsigned long 
  4315 ;;  i               1   48[COMRAM] unsigned char 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  4   32[COMRAM] unsigned long 
  4318 ;; Registers used:
  4319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;Total ram usage:       17 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; Hardware stack levels required when called:    2
  4332 ;; This function calls:
  4333 ;;		_TMR_GetDeltaTime
  4334 ;; This function is called by:
  4335 ;;		_TMR_ISR_lora
  4336 ;;		_SwTimerReadValue
  4337 ;;		_SwTimerStart
  4338 ;;		_SwTimersCanSleep
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text36
  4343  0004A4                     __ptext36:
  4344                           	opt stack 0
  4345  0004A4                     _SwTimersInterrupt:
  4346                           	opt stack 20
  4347                           
  4348                           ;sw_timer.c: 289: uint8_t i;
  4349                           ;sw_timer.c: 290: uint32_t timeElapsed;
  4350                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
  4351                           
  4352                           ;incstack = 0
  4353  0004A4  682D               	setf	SwTimersInterrupt@ticksToNextTimerEvent,c
  4354  0004A6  682E               	setf	SwTimersInterrupt@ticksToNextTimerEvent+1,c
  4355  0004A8  682F               	setf	SwTimersInterrupt@ticksToNextTimerEvent+2,c
  4356  0004AA  6830               	setf	SwTimersInterrupt@ticksToNextTimerEvent+3,c
  4357                           
  4358                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
  4359  0004AC  EC9D  F001         	call	_TMR_GetDeltaTime	;wreg free
  4360  0004B0  C009  F029         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
  4361  0004B4  C00A  F02A         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
  4362  0004B8  C00B  F02B         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
  4363  0004BC  C00C  F02C         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
  4364                           
  4365                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
  4366  0004C0  0E00               	movlw	0
  4367  0004C2  6E31               	movwf	SwTimersInterrupt@i,c
  4368  0004C4  D061               	goto	i2l1592
  4369  0004C6                     
  4370                           ;sw_timer.c: 298: {
  4371                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
  4372  0004C6  5031               	movf	SwTimersInterrupt@i,w,c
  4373  0004C8  0D08               	mullw	8
  4374  0004CA  0E04               	movlw	4
  4375  0004CC  26F3               	addwf	prodl,f,c
  4376  0004CE  0E00               	movlw	0
  4377  0004D0  22F4               	addwfc	prodh,f,c
  4378  0004D2  0E00               	movlw	low _swTimers
  4379  0004D4  24F3               	addwf	prodl,w,c
  4380  0004D6  6ED9               	movwf	fsr2l,c
  4381  0004D8  0E03               	movlw	high _swTimers
  4382  0004DA  20F4               	addwfc	prodh,w,c
  4383  0004DC  6EDA               	movwf	fsr2h,c
  4384  0004DE  04DE               	decf	postinc2,w,c
  4385  0004E0  A4D8               	btfss	status,2,c
  4386  0004E2  D051               	goto	i2l1597
  4387                           
  4388                           ;sw_timer.c: 302: {
  4389                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
  4390  0004E4  5031               	movf	SwTimersInterrupt@i,w,c
  4391  0004E6  0D08               	mullw	8
  4392  0004E8  0E00               	movlw	low _swTimers
  4393  0004EA  24F3               	addwf	prodl,w,c
  4394  0004EC  6ED9               	movwf	fsr2l,c
  4395  0004EE  0E03               	movlw	high _swTimers
  4396  0004F0  20F4               	addwfc	prodh,w,c
  4397  0004F2  6EDA               	movwf	fsr2h,c
  4398  0004F4  50DE               	movf	postinc2,w,c
  4399  0004F6  5C29               	subwf	SwTimersInterrupt@timeElapsed,w,c
  4400  0004F8  50DE               	movf	postinc2,w,c
  4401  0004FA  582A               	subwfb	SwTimersInterrupt@timeElapsed+1,w,c
  4402  0004FC  50DE               	movf	postinc2,w,c
  4403  0004FE  582B               	subwfb	SwTimersInterrupt@timeElapsed+2,w,c
  4404  000500  50DE               	movf	postinc2,w,c
  4405  000502  582C               	subwfb	SwTimersInterrupt@timeElapsed+3,w,c
  4406  000504  A0D8               	btfss	status,0,c
  4407  000506  D00D               	goto	i2l1595
  4408                           
  4409                           ;sw_timer.c: 304: {
  4410                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
  4411  000508  5031               	movf	SwTimersInterrupt@i,w,c
  4412  00050A  0D08               	mullw	8
  4413  00050C  0E00               	movlw	low _swTimers
  4414  00050E  24F3               	addwf	prodl,w,c
  4415  000510  6ED9               	movwf	fsr2l,c
  4416  000512  0E03               	movlw	high _swTimers
  4417  000514  20F4               	addwfc	prodh,w,c
  4418  000516  6EDA               	movwf	fsr2h,c
  4419  000518  6ADE               	clrf	postinc2,c
  4420  00051A  6ADE               	clrf	postinc2,c
  4421  00051C  6ADE               	clrf	postinc2,c
  4422  00051E  6ADD               	clrf	postdec2,c
  4423                           
  4424                           ;sw_timer.c: 306: }
  4425  000520  D032               	goto	i2l1597
  4426  000522                     i2l1595:
  4427                           
  4428                           ;sw_timer.c: 307: else
  4429                           ;sw_timer.c: 308: {
  4430                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
  4431  000522  5031               	movf	SwTimersInterrupt@i,w,c
  4432  000524  0D08               	mullw	8
  4433  000526  0E00               	movlw	low _swTimers
  4434  000528  24F3               	addwf	prodl,w,c
  4435  00052A  6ED9               	movwf	fsr2l,c
  4436  00052C  0E03               	movlw	high _swTimers
  4437  00052E  20F4               	addwfc	prodh,w,c
  4438  000530  6EDA               	movwf	fsr2h,c
  4439  000532  5029               	movf	SwTimersInterrupt@timeElapsed,w,c
  4440  000534  5EDE               	subwf	postinc2,f,c
  4441  000536  502A               	movf	SwTimersInterrupt@timeElapsed+1,w,c
  4442  000538  5ADE               	subwfb	postinc2,f,c
  4443  00053A  502B               	movf	SwTimersInterrupt@timeElapsed+2,w,c
  4444  00053C  5ADE               	subwfb	postinc2,f,c
  4445  00053E  502C               	movf	SwTimersInterrupt@timeElapsed+3,w,c
  4446  000540  5ADE               	subwfb	postinc2,f,c
  4447                           
  4448                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
  4449  000542  5031               	movf	SwTimersInterrupt@i,w,c
  4450  000544  0D08               	mullw	8
  4451  000546  0E00               	movlw	low _swTimers
  4452  000548  24F3               	addwf	prodl,w,c
  4453  00054A  6ED9               	movwf	fsr2l,c
  4454  00054C  0E03               	movlw	high _swTimers
  4455  00054E  20F4               	addwfc	prodh,w,c
  4456  000550  6EDA               	movwf	fsr2h,c
  4457  000552  502D               	movf	SwTimersInterrupt@ticksToNextTimerEvent,w,c
  4458  000554  5CDE               	subwf	postinc2,w,c
  4459  000556  502E               	movf	SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
  4460  000558  58DE               	subwfb	postinc2,w,c
  4461  00055A  502F               	movf	SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
  4462  00055C  58DE               	subwfb	postinc2,w,c
  4463  00055E  5030               	movf	SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
  4464  000560  58DE               	subwfb	postinc2,w,c
  4465  000562  B0D8               	btfsc	status,0,c
  4466  000564  D010               	goto	i2l1597
  4467                           
  4468                           ;sw_timer.c: 313: {
  4469                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
  4470  000566  5031               	movf	SwTimersInterrupt@i,w,c
  4471  000568  0D08               	mullw	8
  4472  00056A  0E00               	movlw	low _swTimers
  4473  00056C  24F3               	addwf	prodl,w,c
  4474  00056E  6ED9               	movwf	fsr2l,c
  4475  000570  0E03               	movlw	high _swTimers
  4476  000572  20F4               	addwfc	prodh,w,c
  4477  000574  6EDA               	movwf	fsr2h,c
  4478  000576  CFDE F02D          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
  4479  00057A  CFDE F02E          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
  4480  00057E  CFDE F02F          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
  4481  000582  CFDE F030          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
  4482  000586                     i2l1597:
  4483  000586  2A31               	incf	SwTimersInterrupt@i,f,c
  4484  000588                     i2l1592:
  4485  000588  504A               	movf	_allocatedTimers,w,c	;volatile
  4486  00058A  5C31               	subwf	SwTimersInterrupt@i,w,c
  4487  00058C  A0D8               	btfss	status,0,c
  4488  00058E  D79B               	goto	i2l1593
  4489                           
  4490                           ;sw_timer.c: 315: }
  4491                           ;sw_timer.c: 316: }
  4492                           ;sw_timer.c: 317: }
  4493                           ;sw_timer.c: 318: }
  4494                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
  4495  000590  C02D  F021         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
  4496  000594  C02E  F022         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
  4497  000598  C02F  F023         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
  4498  00059C  C030  F024         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
  4499  0005A0  0012               	return		;funcret
  4500  0005A2                     __end_of_SwTimersInterrupt:
  4501                           	opt stack 0
  4502                           tosu	equ	0xFFF
  4503                           tosh	equ	0xFFE
  4504                           tosl	equ	0xFFD
  4505                           pclatu	equ	0xFFB
  4506                           pclath	equ	0xFFA
  4507                           tblptru	equ	0xFF8
  4508                           tblptrh	equ	0xFF7
  4509                           tblptrl	equ	0xFF6
  4510                           tablat	equ	0xFF5
  4511                           prodh	equ	0xFF4
  4512                           prodl	equ	0xFF3
  4513                           intcon	equ	0xFF2
  4514                           intcon2	equ	0xFF1
  4515                           intcon3	equ	0xFF0
  4516                           postinc0	equ	0xFEE
  4517                           fsr0h	equ	0xFEA
  4518                           fsr0l	equ	0xFE9
  4519                           wreg	equ	0xFE8
  4520                           fsr1h	equ	0xFE2
  4521                           fsr1l	equ	0xFE1
  4522                           indf2	equ	0xFDF
  4523                           postinc2	equ	0xFDE
  4524                           postdec2	equ	0xFDD
  4525                           fsr2h	equ	0xFDA
  4526                           fsr2l	equ	0xFD9
  4527                           status	equ	0xFD8
  4528                           
  4529 ;; *************** function _TMR_GetDeltaTime *****************
  4530 ;; Defined at:
  4531 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;		None
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;		None
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  4    8[COMRAM] unsigned long 
  4538 ;; Registers used:
  4539 ;;		wreg, status,2, status,0, cstack
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;Total ram usage:       24 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; Hardware stack levels required when called:    1
  4552 ;; This function calls:
  4553 ;;		_TMR1_ReadTimer
  4554 ;; This function is called by:
  4555 ;;		_SwTimersInterrupt
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text37
  4560  00033A                     __ptext37:
  4561                           	opt stack 0
  4562  00033A                     _TMR_GetDeltaTime:
  4563                           	opt stack 20
  4564                           
  4565                           ;sw_timer.c: 90: static uint32_t retVal;
  4566                           ;sw_timer.c: 91: static uint16_t tmrVal;
  4567                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
  4568                           
  4569                           ;incstack = 0
  4570  00033A  EC4D  F005         	call	_TMR1_ReadTimer	;wreg free
  4571  00033E  C001  F09C         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
  4572  000342  C002  F09D         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
  4573                           
  4574                           ;sw_timer.c: 95: if (timerOverflow == 1)
  4575  000346  0100               	movlb	0	; () banked
  4576  000348  05A9               	decf	_timerOverflow& (0+255),w,b	;volatile
  4577  00034A  A4D8               	btfss	status,2,c
  4578  00034C  D065               	goto	i2l1525
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;sw_timer.c: 96: {
  4582                           ;sw_timer.c: 97: timerOverflow = 0;
  4583  00034E  0E00               	movlw	0
  4584  000350  6FA9               	movwf	_timerOverflow& (0+255),b	;volatile
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
  4588  000352  C064  F00D         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
  4589  000356  C065  F00E         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
  4590  00035A  C066  F00F         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
  4591  00035E  C067  F010         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
  4592  000362  1E0D               	comf	??_TMR_GetDeltaTime,f,c
  4593  000364  1E0E               	comf	??_TMR_GetDeltaTime+1,f,c
  4594  000366  1E0F               	comf	??_TMR_GetDeltaTime+2,f,c
  4595  000368  1E10               	comf	??_TMR_GetDeltaTime+3,f,c
  4596  00036A  2A0D               	incf	??_TMR_GetDeltaTime,f,c
  4597  00036C  0E00               	movlw	0
  4598  00036E  220E               	addwfc	??_TMR_GetDeltaTime+1,f,c
  4599  000370  220F               	addwfc	??_TMR_GetDeltaTime+2,f,c
  4600  000372  2210               	addwfc	??_TMR_GetDeltaTime+3,f,c
  4601  000374  5044               	movf	_reloadVal,w,c	;volatile
  4602  000376  6E11               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),c
  4603  000378  5045               	movf	_reloadVal+1,w,c	;volatile
  4604  00037A  6E12               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),c
  4605  00037C  6A13               	clrf	(??_TMR_GetDeltaTime+6)& (0+255),c
  4606  00037E  6A14               	clrf	(??_TMR_GetDeltaTime+7)& (0+255),c
  4607  000380  1E11               	comf	??_TMR_GetDeltaTime+4,f,c
  4608  000382  1E12               	comf	??_TMR_GetDeltaTime+5,f,c
  4609  000384  1E13               	comf	??_TMR_GetDeltaTime+6,f,c
  4610  000386  1E14               	comf	??_TMR_GetDeltaTime+7,f,c
  4611  000388  2A11               	incf	??_TMR_GetDeltaTime+4,f,c
  4612  00038A  0E00               	movlw	0
  4613  00038C  2212               	addwfc	??_TMR_GetDeltaTime+5,f,c
  4614  00038E  2213               	addwfc	??_TMR_GetDeltaTime+6,f,c
  4615  000390  2214               	addwfc	??_TMR_GetDeltaTime+7,f,c
  4616  000392  519C               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
  4617  000394  2411               	addwf	??_TMR_GetDeltaTime+4,w,c
  4618  000396  6E15               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),c
  4619  000398  519D               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
  4620  00039A  2012               	addwfc	??_TMR_GetDeltaTime+5,w,c
  4621  00039C  6E16               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),c
  4622  00039E  0E00               	movlw	0
  4623  0003A0  2013               	addwfc	??_TMR_GetDeltaTime+6,w,c
  4624  0003A2  6E17               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),c
  4625  0003A4  0E00               	movlw	0
  4626  0003A6  2014               	addwfc	??_TMR_GetDeltaTime+7,w,c
  4627  0003A8  6E18               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),c
  4628  0003AA  500D               	movf	??_TMR_GetDeltaTime,w,c
  4629  0003AC  2415               	addwf	??_TMR_GetDeltaTime+8,w,c
  4630  0003AE  6E19               	movwf	(??_TMR_GetDeltaTime+12)& (0+255),c
  4631  0003B0  500E               	movf	??_TMR_GetDeltaTime+1,w,c
  4632  0003B2  2016               	addwfc	??_TMR_GetDeltaTime+9,w,c
  4633  0003B4  6E1A               	movwf	(??_TMR_GetDeltaTime+13)& (0+255),c
  4634  0003B6  500F               	movf	??_TMR_GetDeltaTime+2,w,c
  4635  0003B8  2017               	addwfc	??_TMR_GetDeltaTime+10,w,c
  4636  0003BA  6E1B               	movwf	(??_TMR_GetDeltaTime+14)& (0+255),c
  4637  0003BC  5010               	movf	??_TMR_GetDeltaTime+3,w,c
  4638  0003BE  2018               	addwfc	??_TMR_GetDeltaTime+11,w,c
  4639  0003C0  6E1C               	movwf	(??_TMR_GetDeltaTime+15)& (0+255),c
  4640  0003C2  5168               	movf	_ticksAdded& (0+255),w,b	;volatile
  4641  0003C4  2419               	addwf	??_TMR_GetDeltaTime+12,w,c
  4642  0003C6  6E1D               	movwf	(??_TMR_GetDeltaTime+16)& (0+255),c
  4643  0003C8  5169               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
  4644  0003CA  201A               	addwfc	??_TMR_GetDeltaTime+13,w,c
  4645  0003CC  6E1E               	movwf	(??_TMR_GetDeltaTime+17)& (0+255),c
  4646  0003CE  516A               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
  4647  0003D0  201B               	addwfc	??_TMR_GetDeltaTime+14,w,c
  4648  0003D2  6E1F               	movwf	(??_TMR_GetDeltaTime+18)& (0+255),c
  4649  0003D4  516B               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
  4650  0003D6  201C               	addwfc	??_TMR_GetDeltaTime+15,w,c
  4651  0003D8  6E20               	movwf	(??_TMR_GetDeltaTime+19)& (0+255),c
  4652  0003DA  0E00               	movlw	0
  4653  0003DC  241D               	addwf	??_TMR_GetDeltaTime+16,w,c
  4654  0003DE  6F60               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
  4655  0003E0  0E00               	movlw	0
  4656  0003E2  201E               	addwfc	??_TMR_GetDeltaTime+17,w,c
  4657  0003E4  6F61               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
  4658  0003E6  0E01               	movlw	1
  4659  0003E8  201F               	addwfc	??_TMR_GetDeltaTime+18,w,c
  4660  0003EA  6F62               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
  4661  0003EC  0E00               	movlw	0
  4662  0003EE  2020               	addwfc	??_TMR_GetDeltaTime+19,w,c
  4663  0003F0  6F63               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
  4667  0003F2  C09C  F064         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
  4668  0003F6  C09D  F065         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
  4669  0003FA  6B66               	clrf	(_ticksAccounted+2)& (0+255),b	;volatile
  4670  0003FC  6B67               	clrf	(_ticksAccounted+3)& (0+255),b	;volatile
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;sw_timer.c: 100: ticksAdded = 0;
  4674  0003FE  0E00               	movlw	0
  4675  000400  6F68               	movwf	_ticksAdded& (0+255),b	;volatile
  4676  000402  0E00               	movlw	0
  4677  000404  6F69               	movwf	(_ticksAdded+1)& (0+255),b	;volatile
  4678  000406  0E00               	movlw	0
  4679  000408  6F6A               	movwf	(_ticksAdded+2)& (0+255),b	;volatile
  4680  00040A  0E00               	movlw	0
  4681  00040C  6F6B               	movwf	(_ticksAdded+3)& (0+255),b	;volatile
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;sw_timer.c: 101: reloadVal = 0;
  4685  00040E  0E00               	movlw	0
  4686  000410  6E45               	movwf	_reloadVal+1,c	;volatile
  4687  000412  0E00               	movlw	0
  4688  000414  6E44               	movwf	_reloadVal,c	;volatile
  4689                           
  4690                           ;sw_timer.c: 102: }
  4691  000416  D03D               	goto	i2l1526
  4692  000418                     i2l1525:
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;sw_timer.c: 103: else
  4696                           ;sw_timer.c: 104: {
  4697                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
  4698                           
  4699                           ; BSR set to: 0
  4700  000418  C064  F00D         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
  4701  00041C  C065  F00E         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
  4702  000420  C066  F00F         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
  4703  000424  C067  F010         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
  4704  000428  1E0D               	comf	??_TMR_GetDeltaTime,f,c
  4705  00042A  1E0E               	comf	??_TMR_GetDeltaTime+1,f,c
  4706  00042C  1E0F               	comf	??_TMR_GetDeltaTime+2,f,c
  4707  00042E  1E10               	comf	??_TMR_GetDeltaTime+3,f,c
  4708  000430  2A0D               	incf	??_TMR_GetDeltaTime,f,c
  4709  000432  0E00               	movlw	0
  4710  000434  220E               	addwfc	??_TMR_GetDeltaTime+1,f,c
  4711  000436  220F               	addwfc	??_TMR_GetDeltaTime+2,f,c
  4712  000438  2210               	addwfc	??_TMR_GetDeltaTime+3,f,c
  4713  00043A  C044  F011         	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
  4714  00043E  C045  F012         	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
  4715  000442  1E11               	comf	??_TMR_GetDeltaTime+4,f,c
  4716  000444  1E12               	comf	??_TMR_GetDeltaTime+5,f,c
  4717  000446  4A11               	infsnz	??_TMR_GetDeltaTime+4,f,c
  4718  000448  2A12               	incf	??_TMR_GetDeltaTime+5,f,c
  4719  00044A  519C               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
  4720  00044C  2611               	addwf	??_TMR_GetDeltaTime+4,f,c
  4721  00044E  519D               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
  4722  000450  2212               	addwfc	??_TMR_GetDeltaTime+5,f,c
  4723  000452  5011               	movf	??_TMR_GetDeltaTime+4,w,c
  4724  000454  240D               	addwf	??_TMR_GetDeltaTime,w,c
  4725  000456  6E13               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),c
  4726  000458  5012               	movf	??_TMR_GetDeltaTime+5,w,c
  4727  00045A  200E               	addwfc	??_TMR_GetDeltaTime+1,w,c
  4728  00045C  6E14               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),c
  4729  00045E  0E00               	movlw	0
  4730  000460  200F               	addwfc	??_TMR_GetDeltaTime+2,w,c
  4731  000462  6E15               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),c
  4732  000464  0E00               	movlw	0
  4733  000466  2010               	addwfc	??_TMR_GetDeltaTime+3,w,c
  4734  000468  6E16               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),c
  4735  00046A  5168               	movf	_ticksAdded& (0+255),w,b	;volatile
  4736  00046C  2413               	addwf	??_TMR_GetDeltaTime+6,w,c
  4737  00046E  6F60               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
  4738  000470  5169               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
  4739  000472  2014               	addwfc	??_TMR_GetDeltaTime+7,w,c
  4740  000474  6F61               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
  4741  000476  516A               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
  4742  000478  2015               	addwfc	??_TMR_GetDeltaTime+8,w,c
  4743  00047A  6F62               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
  4744  00047C  516B               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
  4745  00047E  2016               	addwfc	??_TMR_GetDeltaTime+9,w,c
  4746  000480  6F63               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
  4747                           
  4748                           ;sw_timer.c: 106: ticksAccounted += retVal;
  4749  000482  5160               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
  4750  000484  2764               	addwf	_ticksAccounted& (0+255),f,b	;volatile
  4751  000486  5161               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
  4752  000488  2365               	addwfc	(_ticksAccounted+1)& (0+255),f,b	;volatile
  4753  00048A  5162               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
  4754  00048C  2366               	addwfc	(_ticksAccounted+2)& (0+255),f,b	;volatile
  4755  00048E  5163               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
  4756  000490  2367               	addwfc	(_ticksAccounted+3)& (0+255),f,b	;volatile
  4757  000492                     i2l1526:
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;sw_timer.c: 107: }
  4761                           ;sw_timer.c: 109: return retVal;
  4762                           
  4763                           ; BSR set to: 0
  4764  000492  C060  F009         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
  4765  000496  C061  F00A         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
  4766  00049A  C062  F00B         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
  4767  00049E  C063  F00C         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
  4768  0004A2  0012               	return	
  4769  0004A4                     __end_of_TMR_GetDeltaTime:
  4770                           	opt stack 0
  4771                           tosu	equ	0xFFF
  4772                           tosh	equ	0xFFE
  4773                           tosl	equ	0xFFD
  4774                           pclatu	equ	0xFFB
  4775                           pclath	equ	0xFFA
  4776                           tblptru	equ	0xFF8
  4777                           tblptrh	equ	0xFF7
  4778                           tblptrl	equ	0xFF6
  4779                           tablat	equ	0xFF5
  4780                           prodh	equ	0xFF4
  4781                           prodl	equ	0xFF3
  4782                           intcon	equ	0xFF2
  4783                           intcon2	equ	0xFF1
  4784                           intcon3	equ	0xFF0
  4785                           postinc0	equ	0xFEE
  4786                           fsr0h	equ	0xFEA
  4787                           fsr0l	equ	0xFE9
  4788                           wreg	equ	0xFE8
  4789                           fsr1h	equ	0xFE2
  4790                           fsr1l	equ	0xFE1
  4791                           indf2	equ	0xFDF
  4792                           postinc2	equ	0xFDE
  4793                           postdec2	equ	0xFDD
  4794                           fsr2h	equ	0xFDA
  4795                           fsr2l	equ	0xFD9
  4796                           status	equ	0xFD8
  4797                           
  4798 ;; *************** function _TMR1_ReadTimer *****************
  4799 ;; Defined at:
  4800 ;;		line 105 in file "mcc_generated_files/tmr1.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;		None
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;  readVal         2    4[COMRAM] unsigned int 
  4805 ;;  readValLow      1    7[COMRAM] unsigned char 
  4806 ;;  readValHigh     1    6[COMRAM] unsigned char 
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  2    0[COMRAM] unsigned int 
  4809 ;; Registers used:
  4810 ;;		wreg, status,2
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4818 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;Total ram usage:        8 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; This function calls:
  4823 ;;		Nothing
  4824 ;; This function is called by:
  4825 ;;		_TMR_GetDeltaTime
  4826 ;;		_TMR_SwapTimer
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           	psect	text38
  4831  000A9A                     __ptext38:
  4832                           	opt stack 0
  4833  000A9A                     _TMR1_ReadTimer:
  4834                           	opt stack 21
  4835                           
  4836                           ;tmr1.c: 107: uint16_t readVal;
  4837                           ;tmr1.c: 108: uint8_t readValHigh;
  4838                           ;tmr1.c: 109: uint8_t readValLow;
  4839                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;incstack = 0
  4843  000A9A  82CD               	bsf	4045,1,c	;volatile
  4844                           
  4845                           ;tmr1.c: 113: readValLow = TMR1L;
  4846  000A9C  CFCE F008          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
  4847                           
  4848                           ;tmr1.c: 114: readValHigh = TMR1H;
  4849  000AA0  CFCF F007          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
  4850                           
  4851                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
  4852  000AA4  5007               	movf	TMR1_ReadTimer@readValHigh,w,c
  4853  000AA6  6E03               	movwf	??_TMR1_ReadTimer& (0+255),c
  4854  000AA8  5008               	movf	TMR1_ReadTimer@readValLow,w,c
  4855  000AAA  6E05               	movwf	TMR1_ReadTimer@readVal,c
  4856  000AAC  C003  F006         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
  4857                           
  4858                           ;tmr1.c: 118: return readVal;
  4859  000AB0  C005  F001         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
  4860  000AB4  C006  F002         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
  4861  000AB8  0012               	return	
  4862  000ABA                     __end_of_TMR1_ReadTimer:
  4863                           	opt stack 0
  4864                           tosu	equ	0xFFF
  4865                           tosh	equ	0xFFE
  4866                           tosl	equ	0xFFD
  4867                           pclatu	equ	0xFFB
  4868                           pclath	equ	0xFFA
  4869                           tblptru	equ	0xFF8
  4870                           tblptrh	equ	0xFF7
  4871                           tblptrl	equ	0xFF6
  4872                           tablat	equ	0xFF5
  4873                           prodh	equ	0xFF4
  4874                           prodl	equ	0xFF3
  4875                           intcon	equ	0xFF2
  4876                           intcon2	equ	0xFF1
  4877                           intcon3	equ	0xFF0
  4878                           postinc0	equ	0xFEE
  4879                           fsr0h	equ	0xFEA
  4880                           fsr0l	equ	0xFE9
  4881                           wreg	equ	0xFE8
  4882                           fsr1h	equ	0xFE2
  4883                           fsr1l	equ	0xFE1
  4884                           indf2	equ	0xFDF
  4885                           postinc2	equ	0xFDE
  4886                           postdec2	equ	0xFDD
  4887                           fsr2h	equ	0xFDA
  4888                           fsr2l	equ	0xFD9
  4889                           status	equ	0xFD8
  4890                           
  4891 ;; *************** function _PIN_MANAGER_IOC *****************
  4892 ;; Defined at:
  4893 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;		None
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;		None
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      void 
  4900 ;; Registers used:
  4901 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;Total ram usage:        0 bytes
  4912 ;; Hardware stack levels used:    1
  4913 ;; Hardware stack levels required when called:    2
  4914 ;; This function calls:
  4915 ;;		_IOCB4_ISR
  4916 ;; This function is called by:
  4917 ;;		_INTERRUPT_InterruptManager
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text39
  4922  000C2A                     __ptext39:
  4923                           	opt stack 0
  4924  000C2A                     _PIN_MANAGER_IOC:
  4925                           	opt stack 23
  4926                           
  4927                           ;pin_manager.c: 113: if(IOCBbits.IOCB4 == 1)
  4928                           
  4929                           ;incstack = 0
  4930  000C2A  B862               	btfsc	3938,4,c	;volatile
  4931                           
  4932                           ;pin_manager.c: 114: {
  4933                           ;pin_manager.c: 115: IOCB4_ISR();
  4934  000C2C  EC5D  F005         	call	_IOCB4_ISR	;wreg free
  4935                           
  4936                           ;pin_manager.c: 116: }
  4937                           ;pin_manager.c: 118: INTCONbits.RBIF = 0;
  4938  000C30  90F2               	bcf	intcon,0,c	;volatile
  4939  000C32  0012               	return		;funcret
  4940  000C34                     __end_of_PIN_MANAGER_IOC:
  4941                           	opt stack 0
  4942                           tosu	equ	0xFFF
  4943                           tosh	equ	0xFFE
  4944                           tosl	equ	0xFFD
  4945                           pclatu	equ	0xFFB
  4946                           pclath	equ	0xFFA
  4947                           tblptru	equ	0xFF8
  4948                           tblptrh	equ	0xFF7
  4949                           tblptrl	equ	0xFF6
  4950                           tablat	equ	0xFF5
  4951                           prodh	equ	0xFF4
  4952                           prodl	equ	0xFF3
  4953                           intcon	equ	0xFF2
  4954                           intcon2	equ	0xFF1
  4955                           intcon3	equ	0xFF0
  4956                           postinc0	equ	0xFEE
  4957                           fsr0h	equ	0xFEA
  4958                           fsr0l	equ	0xFE9
  4959                           wreg	equ	0xFE8
  4960                           fsr1h	equ	0xFE2
  4961                           fsr1l	equ	0xFE1
  4962                           indf2	equ	0xFDF
  4963                           postinc2	equ	0xFDE
  4964                           postdec2	equ	0xFDD
  4965                           fsr2h	equ	0xFDA
  4966                           fsr2l	equ	0xFD9
  4967                           status	equ	0xFD8
  4968                           
  4969 ;; *************** function _IOCB4_ISR *****************
  4970 ;; Defined at:
  4971 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;		None
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;		None
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  1    wreg      void 
  4978 ;; Registers used:
  4979 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4989 ;;Total ram usage:        0 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:    1
  4992 ;; This function calls:
  4993 ;;		Absolute function
  4994 ;;		_DIO2_ISR_Lora
  4995 ;;		_IOCB4_DefaultInterruptHandler
  4996 ;; This function is called by:
  4997 ;;		_PIN_MANAGER_IOC
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           	psect	text40
  5002  000ABA                     __ptext40:
  5003                           	opt stack 0
  5004  000ABA                     _IOCB4_ISR:
  5005                           	opt stack 23
  5006                           
  5007                           ;pin_manager.c: 129: if(IOCB4_InterruptHandler)
  5008                           
  5009                           ;incstack = 0
  5010  000ABA  0100               	movlb	0	; () banked
  5011  000ABC  51E9               	movf	_IOCB4_InterruptHandler& (0+255),w,b
  5012  000ABE  11EA               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
  5013  000AC0  B4D8               	btfsc	status,2,c
  5014  000AC2  0012               	return	
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;pin_manager.c: 130: {
  5018                           ;pin_manager.c: 131: IOCB4_InterruptHandler();
  5019  000AC4  D801               	call	i2u895_48
  5020  000AC6  0012               	return	
  5021  000AC8                     i2u895_48:
  5022  000AC8  0005               	push	
  5023  000ACA  6EFA               	movwf	pclath,c
  5024  000ACC  51E9               	movf	_IOCB4_InterruptHandler& (0+255),w,b
  5025  000ACE  6EFD               	movwf	tosl,c
  5026  000AD0  51EA               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
  5027  000AD2  6EFE               	movwf	tosh,c
  5028  000AD4  6AFF               	clrf	tosu,c
  5029  000AD6  50FA               	movf	pclath,w,c
  5030  000AD8  0012               	return		;indir
  5031  000ADA                     __end_of_IOCB4_ISR:
  5032                           	opt stack 0
  5033                           tosu	equ	0xFFF
  5034                           tosh	equ	0xFFE
  5035                           tosl	equ	0xFFD
  5036                           pclatu	equ	0xFFB
  5037                           pclath	equ	0xFFA
  5038                           tblptru	equ	0xFF8
  5039                           tblptrh	equ	0xFF7
  5040                           tblptrl	equ	0xFF6
  5041                           tablat	equ	0xFF5
  5042                           prodh	equ	0xFF4
  5043                           prodl	equ	0xFF3
  5044                           intcon	equ	0xFF2
  5045                           intcon2	equ	0xFF1
  5046                           intcon3	equ	0xFF0
  5047                           postinc0	equ	0xFEE
  5048                           fsr0h	equ	0xFEA
  5049                           fsr0l	equ	0xFE9
  5050                           wreg	equ	0xFE8
  5051                           fsr1h	equ	0xFE2
  5052                           fsr1l	equ	0xFE1
  5053                           indf2	equ	0xFDF
  5054                           postinc2	equ	0xFDE
  5055                           postdec2	equ	0xFDD
  5056                           fsr2h	equ	0xFDA
  5057                           fsr2l	equ	0xFD9
  5058                           status	equ	0xFD8
  5059                           
  5060 ;; *************** function _DIO2_ISR_Lora *****************
  5061 ;; Defined at:
  5062 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;		None
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;		None
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  1    wreg      void 
  5069 ;; Registers used:
  5070 ;;		status,2, status,0
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;Total ram usage:        0 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; This function calls:
  5083 ;;		Nothing
  5084 ;; This function is called by:
  5085 ;;		_DIO2_ISR_Lora_Init
  5086 ;;		_IOCB4_ISR
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text41
  5091  000C4A                     __ptext41:
  5092                           	opt stack 0
  5093  000C4A                     _DIO2_ISR_Lora:
  5094                           	opt stack 23
  5095                           
  5096                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
  5097                           
  5098                           ;incstack = 0
  5099  000C4A  0100               	movlb	0	; () banked
  5100  000C4C  85AA               	bsf	_dioStatus& (0+255),2,b	;volatile
  5101                           
  5102                           ; BSR set to: 0
  5103  000C4E  0012               	return		;funcret
  5104  000C50                     __end_of_DIO2_ISR_Lora:
  5105                           	opt stack 0
  5106                           tosu	equ	0xFFF
  5107                           tosh	equ	0xFFE
  5108                           tosl	equ	0xFFD
  5109                           pclatu	equ	0xFFB
  5110                           pclath	equ	0xFFA
  5111                           tblptru	equ	0xFF8
  5112                           tblptrh	equ	0xFF7
  5113                           tblptrl	equ	0xFF6
  5114                           tablat	equ	0xFF5
  5115                           prodh	equ	0xFF4
  5116                           prodl	equ	0xFF3
  5117                           intcon	equ	0xFF2
  5118                           intcon2	equ	0xFF1
  5119                           intcon3	equ	0xFF0
  5120                           postinc0	equ	0xFEE
  5121                           fsr0h	equ	0xFEA
  5122                           fsr0l	equ	0xFE9
  5123                           wreg	equ	0xFE8
  5124                           fsr1h	equ	0xFE2
  5125                           fsr1l	equ	0xFE1
  5126                           indf2	equ	0xFDF
  5127                           postinc2	equ	0xFDE
  5128                           postdec2	equ	0xFDD
  5129                           fsr2h	equ	0xFDA
  5130                           fsr2l	equ	0xFD9
  5131                           status	equ	0xFD8
  5132                           
  5133 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
  5134 ;; Defined at:
  5135 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;		None
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;		None
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      void 
  5142 ;; Registers used:
  5143 ;;		None
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;Total ram usage:        0 bytes
  5154 ;; Hardware stack levels used:    1
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		_PIN_MANAGER_Initialize
  5159 ;;		_IOCB4_ISR
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text42
  5164  000C74                     __ptext42:
  5165                           	opt stack 0
  5166  000C74                     _IOCB4_DefaultInterruptHandler:
  5167                           	opt stack 23
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;incstack = 0
  5171  000C74  0012               	return		;funcret
  5172  000C76                     __end_of_IOCB4_DefaultInterruptHandler:
  5173                           	opt stack 0
  5174                           tosu	equ	0xFFF
  5175                           tosh	equ	0xFFE
  5176                           tosl	equ	0xFFD
  5177                           pclatu	equ	0xFFB
  5178                           pclath	equ	0xFFA
  5179                           tblptru	equ	0xFF8
  5180                           tblptrh	equ	0xFF7
  5181                           tblptrl	equ	0xFF6
  5182                           tablat	equ	0xFF5
  5183                           prodh	equ	0xFF4
  5184                           prodl	equ	0xFF3
  5185                           intcon	equ	0xFF2
  5186                           intcon2	equ	0xFF1
  5187                           intcon3	equ	0xFF0
  5188                           postinc0	equ	0xFEE
  5189                           fsr0h	equ	0xFEA
  5190                           fsr0l	equ	0xFE9
  5191                           wreg	equ	0xFE8
  5192                           fsr1h	equ	0xFE2
  5193                           fsr1l	equ	0xFE1
  5194                           indf2	equ	0xFDF
  5195                           postinc2	equ	0xFDE
  5196                           postdec2	equ	0xFDD
  5197                           fsr2h	equ	0xFDA
  5198                           fsr2l	equ	0xFD9
  5199                           status	equ	0xFD8
  5200                           
  5201 ;; *************** function _INT2_ISR *****************
  5202 ;; Defined at:
  5203 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;		None
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;		None
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      void 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;Total ram usage:        0 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    2
  5224 ;; This function calls:
  5225 ;;		_INT2_CallBack
  5226 ;; This function is called by:
  5227 ;;		_INTERRUPT_InterruptManager
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           	psect	text43
  5232  000C34                     __ptext43:
  5233                           	opt stack 0
  5234  000C34                     _INT2_ISR:
  5235                           	opt stack 23
  5236                           
  5237                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
  5238                           
  5239                           ;incstack = 0
  5240  000C34  92F0               	bcf	intcon3,1,c	;volatile
  5241                           
  5242                           ;ext_int.c: 64: INT2_CallBack();
  5243  000C36  EC6D  F005         	call	_INT2_CallBack	;wreg free
  5244  000C3A  0012               	return		;funcret
  5245  000C3C                     __end_of_INT2_ISR:
  5246                           	opt stack 0
  5247                           tosu	equ	0xFFF
  5248                           tosh	equ	0xFFE
  5249                           tosl	equ	0xFFD
  5250                           pclatu	equ	0xFFB
  5251                           pclath	equ	0xFFA
  5252                           tblptru	equ	0xFF8
  5253                           tblptrh	equ	0xFF7
  5254                           tblptrl	equ	0xFF6
  5255                           tablat	equ	0xFF5
  5256                           prodh	equ	0xFF4
  5257                           prodl	equ	0xFF3
  5258                           intcon	equ	0xFF2
  5259                           intcon2	equ	0xFF1
  5260                           intcon3	equ	0xFF0
  5261                           postinc0	equ	0xFEE
  5262                           fsr0h	equ	0xFEA
  5263                           fsr0l	equ	0xFE9
  5264                           wreg	equ	0xFE8
  5265                           fsr1h	equ	0xFE2
  5266                           fsr1l	equ	0xFE1
  5267                           indf2	equ	0xFDF
  5268                           postinc2	equ	0xFDE
  5269                           postdec2	equ	0xFDD
  5270                           fsr2h	equ	0xFDA
  5271                           fsr2l	equ	0xFD9
  5272                           status	equ	0xFD8
  5273                           
  5274 ;; *************** function _INT2_CallBack *****************
  5275 ;; Defined at:
  5276 ;;		line 68 in file "mcc_generated_files/ext_int.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;		None
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;		None
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1    wreg      void 
  5283 ;; Registers used:
  5284 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;Total ram usage:        0 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:    1
  5297 ;; This function calls:
  5298 ;;		Absolute function
  5299 ;;		_DIO1_ISR_Lora
  5300 ;;		_INT2_DefaultInterruptHandler
  5301 ;; This function is called by:
  5302 ;;		_INT2_ISR
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text44
  5307  000ADA                     __ptext44:
  5308                           	opt stack 0
  5309  000ADA                     _INT2_CallBack:
  5310                           	opt stack 23
  5311                           
  5312                           ;ext_int.c: 71: if(INT2_InterruptHandler)
  5313                           
  5314                           ;incstack = 0
  5315  000ADA  0100               	movlb	0	; () banked
  5316  000ADC  51EB               	movf	_INT2_InterruptHandler& (0+255),w,b
  5317  000ADE  11EC               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
  5318  000AE0  B4D8               	btfsc	status,2,c
  5319  000AE2  0012               	return	
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;ext_int.c: 72: {
  5323                           ;ext_int.c: 73: INT2_InterruptHandler();
  5324  000AE4  D801               	call	i2u893_48
  5325  000AE6  0012               	return	
  5326  000AE8                     i2u893_48:
  5327  000AE8  0005               	push	
  5328  000AEA  6EFA               	movwf	pclath,c
  5329  000AEC  51EB               	movf	_INT2_InterruptHandler& (0+255),w,b
  5330  000AEE  6EFD               	movwf	tosl,c
  5331  000AF0  51EC               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
  5332  000AF2  6EFE               	movwf	tosh,c
  5333  000AF4  6AFF               	clrf	tosu,c
  5334  000AF6  50FA               	movf	pclath,w,c
  5335  000AF8  0012               	return		;indir
  5336  000AFA                     __end_of_INT2_CallBack:
  5337                           	opt stack 0
  5338                           tosu	equ	0xFFF
  5339                           tosh	equ	0xFFE
  5340                           tosl	equ	0xFFD
  5341                           pclatu	equ	0xFFB
  5342                           pclath	equ	0xFFA
  5343                           tblptru	equ	0xFF8
  5344                           tblptrh	equ	0xFF7
  5345                           tblptrl	equ	0xFF6
  5346                           tablat	equ	0xFF5
  5347                           prodh	equ	0xFF4
  5348                           prodl	equ	0xFF3
  5349                           intcon	equ	0xFF2
  5350                           intcon2	equ	0xFF1
  5351                           intcon3	equ	0xFF0
  5352                           postinc0	equ	0xFEE
  5353                           fsr0h	equ	0xFEA
  5354                           fsr0l	equ	0xFE9
  5355                           wreg	equ	0xFE8
  5356                           fsr1h	equ	0xFE2
  5357                           fsr1l	equ	0xFE1
  5358                           indf2	equ	0xFDF
  5359                           postinc2	equ	0xFDE
  5360                           postdec2	equ	0xFDD
  5361                           fsr2h	equ	0xFDA
  5362                           fsr2l	equ	0xFD9
  5363                           status	equ	0xFD8
  5364                           
  5365 ;; *************** function _DIO1_ISR_Lora *****************
  5366 ;; Defined at:
  5367 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;		None
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      void 
  5374 ;; Registers used:
  5375 ;;		status,2, status,0
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5385 ;;Total ram usage:        0 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_DIO1_ISR_Lora_Init
  5391 ;;		_INT2_CallBack
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text45
  5396  000C50                     __ptext45:
  5397                           	opt stack 0
  5398  000C50                     _DIO1_ISR_Lora:
  5399                           	opt stack 23
  5400                           
  5401                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
  5402                           
  5403                           ;incstack = 0
  5404  000C50  0100               	movlb	0	; () banked
  5405  000C52  83AA               	bsf	_dioStatus& (0+255),1,b	;volatile
  5406                           
  5407                           ; BSR set to: 0
  5408  000C54  0012               	return		;funcret
  5409  000C56                     __end_of_DIO1_ISR_Lora:
  5410                           	opt stack 0
  5411                           tosu	equ	0xFFF
  5412                           tosh	equ	0xFFE
  5413                           tosl	equ	0xFFD
  5414                           pclatu	equ	0xFFB
  5415                           pclath	equ	0xFFA
  5416                           tblptru	equ	0xFF8
  5417                           tblptrh	equ	0xFF7
  5418                           tblptrl	equ	0xFF6
  5419                           tablat	equ	0xFF5
  5420                           prodh	equ	0xFF4
  5421                           prodl	equ	0xFF3
  5422                           intcon	equ	0xFF2
  5423                           intcon2	equ	0xFF1
  5424                           intcon3	equ	0xFF0
  5425                           postinc0	equ	0xFEE
  5426                           fsr0h	equ	0xFEA
  5427                           fsr0l	equ	0xFE9
  5428                           wreg	equ	0xFE8
  5429                           fsr1h	equ	0xFE2
  5430                           fsr1l	equ	0xFE1
  5431                           indf2	equ	0xFDF
  5432                           postinc2	equ	0xFDE
  5433                           postdec2	equ	0xFDD
  5434                           fsr2h	equ	0xFDA
  5435                           fsr2l	equ	0xFD9
  5436                           status	equ	0xFD8
  5437                           
  5438 ;; *************** function _INT2_DefaultInterruptHandler *****************
  5439 ;; Defined at:
  5440 ;;		line 81 in file "mcc_generated_files/ext_int.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;		None
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;		None
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  1    wreg      void 
  5447 ;; Registers used:
  5448 ;;		None
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5458 ;;Total ram usage:        0 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; This function calls:
  5461 ;;		Nothing
  5462 ;; This function is called by:
  5463 ;;		_EXT_INT_Initialize
  5464 ;;		_INT2_CallBack
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text46
  5469  000C76                     __ptext46:
  5470                           	opt stack 0
  5471  000C76                     _INT2_DefaultInterruptHandler:
  5472                           	opt stack 23
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;incstack = 0
  5476  000C76  0012               	return		;funcret
  5477  000C78                     __end_of_INT2_DefaultInterruptHandler:
  5478                           	opt stack 0
  5479                           tosu	equ	0xFFF
  5480                           tosh	equ	0xFFE
  5481                           tosl	equ	0xFFD
  5482                           pclatu	equ	0xFFB
  5483                           pclath	equ	0xFFA
  5484                           tblptru	equ	0xFF8
  5485                           tblptrh	equ	0xFF7
  5486                           tblptrl	equ	0xFF6
  5487                           tablat	equ	0xFF5
  5488                           prodh	equ	0xFF4
  5489                           prodl	equ	0xFF3
  5490                           intcon	equ	0xFF2
  5491                           intcon2	equ	0xFF1
  5492                           intcon3	equ	0xFF0
  5493                           postinc0	equ	0xFEE
  5494                           fsr0h	equ	0xFEA
  5495                           fsr0l	equ	0xFE9
  5496                           wreg	equ	0xFE8
  5497                           fsr1h	equ	0xFE2
  5498                           fsr1l	equ	0xFE1
  5499                           indf2	equ	0xFDF
  5500                           postinc2	equ	0xFDE
  5501                           postdec2	equ	0xFDD
  5502                           fsr2h	equ	0xFDA
  5503                           fsr2l	equ	0xFD9
  5504                           status	equ	0xFD8
  5505                           
  5506 ;; *************** function _INT1_ISR *****************
  5507 ;; Defined at:
  5508 ;;		line 33 in file "mcc_generated_files/ext_int.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5526 ;;Total ram usage:        0 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; Hardware stack levels required when called:    2
  5529 ;; This function calls:
  5530 ;;		_INT1_CallBack
  5531 ;; This function is called by:
  5532 ;;		_INTERRUPT_InterruptManager
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text47
  5537  000C3C                     __ptext47:
  5538                           	opt stack 0
  5539  000C3C                     _INT1_ISR:
  5540                           	opt stack 23
  5541                           
  5542                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
  5543                           
  5544                           ;incstack = 0
  5545  000C3C  90F0               	bcf	intcon3,0,c	;volatile
  5546                           
  5547                           ;ext_int.c: 38: INT1_CallBack();
  5548  000C3E  EC7D  F005         	call	_INT1_CallBack	;wreg free
  5549  000C42  0012               	return		;funcret
  5550  000C44                     __end_of_INT1_ISR:
  5551                           	opt stack 0
  5552                           tosu	equ	0xFFF
  5553                           tosh	equ	0xFFE
  5554                           tosl	equ	0xFFD
  5555                           pclatu	equ	0xFFB
  5556                           pclath	equ	0xFFA
  5557                           tblptru	equ	0xFF8
  5558                           tblptrh	equ	0xFF7
  5559                           tblptrl	equ	0xFF6
  5560                           tablat	equ	0xFF5
  5561                           prodh	equ	0xFF4
  5562                           prodl	equ	0xFF3
  5563                           intcon	equ	0xFF2
  5564                           intcon2	equ	0xFF1
  5565                           intcon3	equ	0xFF0
  5566                           postinc0	equ	0xFEE
  5567                           fsr0h	equ	0xFEA
  5568                           fsr0l	equ	0xFE9
  5569                           wreg	equ	0xFE8
  5570                           fsr1h	equ	0xFE2
  5571                           fsr1l	equ	0xFE1
  5572                           indf2	equ	0xFDF
  5573                           postinc2	equ	0xFDE
  5574                           postdec2	equ	0xFDD
  5575                           fsr2h	equ	0xFDA
  5576                           fsr2l	equ	0xFD9
  5577                           status	equ	0xFD8
  5578                           
  5579 ;; *************** function _INT1_CallBack *****************
  5580 ;; Defined at:
  5581 ;;		line 42 in file "mcc_generated_files/ext_int.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;		None
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;		None
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  1    wreg      void 
  5588 ;; Registers used:
  5589 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;Total ram usage:        0 bytes
  5600 ;; Hardware stack levels used:    1
  5601 ;; Hardware stack levels required when called:    1
  5602 ;; This function calls:
  5603 ;;		Absolute function
  5604 ;;		_DIO0_ISR_Lora
  5605 ;;		_INT1_DefaultInterruptHandler
  5606 ;; This function is called by:
  5607 ;;		_INT1_ISR
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text48
  5612  000AFA                     __ptext48:
  5613                           	opt stack 0
  5614  000AFA                     _INT1_CallBack:
  5615                           	opt stack 23
  5616                           
  5617                           ;ext_int.c: 45: if(INT1_InterruptHandler)
  5618                           
  5619                           ;incstack = 0
  5620  000AFA  0100               	movlb	0	; () banked
  5621  000AFC  51ED               	movf	_INT1_InterruptHandler& (0+255),w,b
  5622  000AFE  11EE               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
  5623  000B00  B4D8               	btfsc	status,2,c
  5624  000B02  0012               	return	
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;ext_int.c: 46: {
  5628                           ;ext_int.c: 47: INT1_InterruptHandler();
  5629  000B04  D801               	call	i2u891_48
  5630  000B06  0012               	return	
  5631  000B08                     i2u891_48:
  5632  000B08  0005               	push	
  5633  000B0A  6EFA               	movwf	pclath,c
  5634  000B0C  51ED               	movf	_INT1_InterruptHandler& (0+255),w,b
  5635  000B0E  6EFD               	movwf	tosl,c
  5636  000B10  51EE               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
  5637  000B12  6EFE               	movwf	tosh,c
  5638  000B14  6AFF               	clrf	tosu,c
  5639  000B16  50FA               	movf	pclath,w,c
  5640  000B18  0012               	return		;indir
  5641  000B1A                     __end_of_INT1_CallBack:
  5642                           	opt stack 0
  5643                           tosu	equ	0xFFF
  5644                           tosh	equ	0xFFE
  5645                           tosl	equ	0xFFD
  5646                           pclatu	equ	0xFFB
  5647                           pclath	equ	0xFFA
  5648                           tblptru	equ	0xFF8
  5649                           tblptrh	equ	0xFF7
  5650                           tblptrl	equ	0xFF6
  5651                           tablat	equ	0xFF5
  5652                           prodh	equ	0xFF4
  5653                           prodl	equ	0xFF3
  5654                           intcon	equ	0xFF2
  5655                           intcon2	equ	0xFF1
  5656                           intcon3	equ	0xFF0
  5657                           postinc0	equ	0xFEE
  5658                           fsr0h	equ	0xFEA
  5659                           fsr0l	equ	0xFE9
  5660                           wreg	equ	0xFE8
  5661                           fsr1h	equ	0xFE2
  5662                           fsr1l	equ	0xFE1
  5663                           indf2	equ	0xFDF
  5664                           postinc2	equ	0xFDE
  5665                           postdec2	equ	0xFDD
  5666                           fsr2h	equ	0xFDA
  5667                           fsr2l	equ	0xFD9
  5668                           status	equ	0xFD8
  5669                           
  5670 ;; *************** function _DIO0_ISR_Lora *****************
  5671 ;; Defined at:
  5672 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;		None
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;		None
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		status,2, status,0
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;Total ram usage:        0 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; This function calls:
  5693 ;;		Nothing
  5694 ;; This function is called by:
  5695 ;;		_DIO0_ISR_Lora_Init
  5696 ;;		_INT1_CallBack
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           	psect	text49
  5701  000C56                     __ptext49:
  5702                           	opt stack 0
  5703  000C56                     _DIO0_ISR_Lora:
  5704                           	opt stack 23
  5705                           
  5706                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
  5707                           
  5708                           ;incstack = 0
  5709  000C56  0100               	movlb	0	; () banked
  5710  000C58  81AA               	bsf	_dioStatus& (0+255),0,b	;volatile
  5711                           
  5712                           ; BSR set to: 0
  5713  000C5A  0012               	return		;funcret
  5714  000C5C                     __end_of_DIO0_ISR_Lora:
  5715                           	opt stack 0
  5716                           tosu	equ	0xFFF
  5717                           tosh	equ	0xFFE
  5718                           tosl	equ	0xFFD
  5719                           pclatu	equ	0xFFB
  5720                           pclath	equ	0xFFA
  5721                           tblptru	equ	0xFF8
  5722                           tblptrh	equ	0xFF7
  5723                           tblptrl	equ	0xFF6
  5724                           tablat	equ	0xFF5
  5725                           prodh	equ	0xFF4
  5726                           prodl	equ	0xFF3
  5727                           intcon	equ	0xFF2
  5728                           intcon2	equ	0xFF1
  5729                           intcon3	equ	0xFF0
  5730                           postinc0	equ	0xFEE
  5731                           fsr0h	equ	0xFEA
  5732                           fsr0l	equ	0xFE9
  5733                           wreg	equ	0xFE8
  5734                           fsr1h	equ	0xFE2
  5735                           fsr1l	equ	0xFE1
  5736                           indf2	equ	0xFDF
  5737                           postinc2	equ	0xFDE
  5738                           postdec2	equ	0xFDD
  5739                           fsr2h	equ	0xFDA
  5740                           fsr2l	equ	0xFD9
  5741                           status	equ	0xFD8
  5742                           
  5743 ;; *************** function _INT1_DefaultInterruptHandler *****************
  5744 ;; Defined at:
  5745 ;;		line 55 in file "mcc_generated_files/ext_int.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      void 
  5752 ;; Registers used:
  5753 ;;		None
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;Total ram usage:        0 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; This function calls:
  5766 ;;		Nothing
  5767 ;; This function is called by:
  5768 ;;		_EXT_INT_Initialize
  5769 ;;		_INT1_CallBack
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text50
  5774  000C78                     __ptext50:
  5775                           	opt stack 0
  5776  000C78                     _INT1_DefaultInterruptHandler:
  5777                           	opt stack 23
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;incstack = 0
  5781  000C78  0012               	return		;funcret
  5782  000C7A                     __end_of_INT1_DefaultInterruptHandler:
  5783                           	opt stack 0
  5784                           tosu	equ	0xFFF
  5785                           tosh	equ	0xFFE
  5786                           tosl	equ	0xFFD
  5787                           pclatu	equ	0xFFB
  5788                           pclath	equ	0xFFA
  5789                           tblptru	equ	0xFF8
  5790                           tblptrh	equ	0xFF7
  5791                           tblptrl	equ	0xFF6
  5792                           tablat	equ	0xFF5
  5793                           prodh	equ	0xFF4
  5794                           prodl	equ	0xFF3
  5795                           intcon	equ	0xFF2
  5796                           intcon2	equ	0xFF1
  5797                           intcon3	equ	0xFF0
  5798                           postinc0	equ	0xFEE
  5799                           fsr0h	equ	0xFEA
  5800                           fsr0l	equ	0xFE9
  5801                           wreg	equ	0xFE8
  5802                           fsr1h	equ	0xFE2
  5803                           fsr1l	equ	0xFE1
  5804                           indf2	equ	0xFDF
  5805                           postinc2	equ	0xFDE
  5806                           postdec2	equ	0xFDD
  5807                           fsr2h	equ	0xFDA
  5808                           fsr2l	equ	0xFD9
  5809                           status	equ	0xFD8
  5810                           
  5811 ;; *************** function _EUSART1_Transmit_ISR *****************
  5812 ;; Defined at:
  5813 ;;		line 224 in file "mcc_generated_files/eusart1.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;		None
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;		None
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  1    wreg      void 
  5820 ;; Registers used:
  5821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5831 ;;Total ram usage:        0 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; This function calls:
  5834 ;;		Nothing
  5835 ;; This function is called by:
  5836 ;;		_EUSART1_Initialize
  5837 ;;		_INTERRUPT_InterruptManager
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text51
  5842  000986                     __ptext51:
  5843                           	opt stack 0
  5844  000986                     _EUSART1_Transmit_ISR:
  5845                           	opt stack 25
  5846                           
  5847                           ;eusart1.c: 228: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  5848                           
  5849                           ;incstack = 0
  5850  000986  0100               	movlb	0	; () banked
  5851  000988  51EF               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  5852  00098A  A4D8               	btfss	status,2,c
  5853  00098C  D012               	goto	i2l2546
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;eusart1.c: 229: {
  5857                           ;eusart1.c: 230: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  5858  00098E  51A6               	movf	_eusart1TxTail& (0+255),w,b	;volatile
  5859  000990  0D01               	mullw	1
  5860  000992  0EA5               	movlw	low _eusart1TxBuffer
  5861  000994  24F3               	addwf	prodl,w,c
  5862  000996  6ED9               	movwf	fsr2l,c
  5863  000998  0E00               	movlw	high _eusart1TxBuffer
  5864  00099A  20F4               	addwfc	prodh,w,c
  5865  00099C  6EDA               	movwf	fsr2h,c
  5866  00099E  50DF               	movf	indf2,w,c
  5867  0009A0  6EAD               	movwf	4013,c	;volatile
  5868                           
  5869                           ; BSR set to: 0
  5870  0009A2  2BA6               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;eusart1.c: 231: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  5874  0009A4  51A6               	movf	_eusart1TxTail& (0+255),w,b	;volatile
  5875  0009A6  B4D8               	btfsc	status,2,c
  5876  0009A8  D002               	goto	i2l2547
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;eusart1.c: 232: {
  5880                           ;eusart1.c: 233: eusart1TxTail = 0;
  5881  0009AA  0E00               	movlw	0
  5882  0009AC  6FA6               	movwf	_eusart1TxTail& (0+255),b	;volatile
  5883  0009AE                     i2l2547:
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;eusart1.c: 234: }
  5887                           ;eusart1.c: 235: eusart1TxBufferRemaining++;
  5888                           
  5889                           ; BSR set to: 0
  5890  0009AE  2BEF               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  5891                           
  5892                           ;eusart1.c: 236: }
  5893  0009B0  0012               	return	
  5894  0009B2                     i2l2546:
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;eusart1.c: 237: else
  5898                           ;eusart1.c: 238: {
  5899                           ;eusart1.c: 239: PIE1bits.TX1IE = 0;
  5900  0009B2  989D               	bcf	3997,4,c	;volatile
  5901  0009B4  0012               	return	
  5902  0009B6                     __end_of_EUSART1_Transmit_ISR:
  5903                           	opt stack 0
  5904                           tosu	equ	0xFFF
  5905                           tosh	equ	0xFFE
  5906                           tosl	equ	0xFFD
  5907                           pclatu	equ	0xFFB
  5908                           pclath	equ	0xFFA
  5909                           tblptru	equ	0xFF8
  5910                           tblptrh	equ	0xFF7
  5911                           tblptrl	equ	0xFF6
  5912                           tablat	equ	0xFF5
  5913                           prodh	equ	0xFF4
  5914                           prodl	equ	0xFF3
  5915                           intcon	equ	0xFF2
  5916                           intcon2	equ	0xFF1
  5917                           intcon3	equ	0xFF0
  5918                           postinc0	equ	0xFEE
  5919                           fsr0h	equ	0xFEA
  5920                           fsr0l	equ	0xFE9
  5921                           wreg	equ	0xFE8
  5922                           fsr1h	equ	0xFE2
  5923                           fsr1l	equ	0xFE1
  5924                           indf2	equ	0xFDF
  5925                           postinc2	equ	0xFDE
  5926                           postdec2	equ	0xFDD
  5927                           fsr2h	equ	0xFDA
  5928                           fsr2l	equ	0xFD9
  5929                           status	equ	0xFD8
  5930                           
  5931 ;; *************** function _EUSART1_Receive_ISR *****************
  5932 ;; Defined at:
  5933 ;;		line 243 in file "mcc_generated_files/eusart1.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;		None
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;		None
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  1    wreg      void 
  5940 ;; Registers used:
  5941 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5949 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5951 ;;Total ram usage:        3 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    2
  5954 ;; This function calls:
  5955 ;;		Absolute function
  5956 ;;		_EUSART1_DefaultErrorHandler
  5957 ;;		_EUSART1_DefaultFramingErrorHandler
  5958 ;;		_EUSART1_DefaultOverrunErrorHandler
  5959 ;;		_EUSART1_Read
  5960 ;;		_EUSART1_RxDataHandler
  5961 ;;		_strncat
  5962 ;; This function is called by:
  5963 ;;		_EUSART1_Initialize
  5964 ;;		_INTERRUPT_InterruptManager
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968                           	psect	text52
  5969  0000D4                     __ptext52:
  5970                           	opt stack 0
  5971  0000D4                     _EUSART1_Receive_ISR:
  5972                           	opt stack 23
  5973                           
  5974                           ;eusart1.c: 246: eusart1RxStatusBuffer[eusart1RxHead].status = 0;
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;incstack = 0
  5978  0000D4  5048               	movf	_eusart1RxHead,w,c	;volatile
  5979  0000D6  0D01               	mullw	1
  5980  0000D8  0E46               	movlw	low _eusart1RxStatusBuffer
  5981  0000DA  24F3               	addwf	prodl,w,c
  5982  0000DC  6ED9               	movwf	fsr2l,c
  5983  0000DE  0E00               	movlw	high _eusart1RxStatusBuffer
  5984  0000E0  20F4               	addwfc	prodh,w,c
  5985  0000E2  6EDA               	movwf	fsr2h,c
  5986  0000E4  0E00               	movlw	0
  5987  0000E6  6EDF               	movwf	indf2,c
  5988                           
  5989                           ;eusart1.c: 248: if(RCSTA1bits.FERR){
  5990  0000E8  A4AB               	btfss	4011,2,c	;volatile
  5991  0000EA  D015               	goto	i2u1014_49
  5992                           
  5993                           ;eusart1.c: 249: eusart1RxStatusBuffer[eusart1RxHead].ferr = 1;
  5994  0000EC  5048               	movf	_eusart1RxHead,w,c	;volatile
  5995  0000EE  0D01               	mullw	1
  5996  0000F0  0E46               	movlw	low _eusart1RxStatusBuffer
  5997  0000F2  24F3               	addwf	prodl,w,c
  5998  0000F4  6ED9               	movwf	fsr2l,c
  5999  0000F6  0E00               	movlw	high _eusart1RxStatusBuffer
  6000  0000F8  20F4               	addwfc	prodh,w,c
  6001  0000FA  6EDA               	movwf	fsr2h,c
  6002  0000FC  82DF               	bsf	indf2,1,c
  6003                           
  6004                           ;eusart1.c: 250: EUSART1_FramingErrorHandler();
  6005  0000FE  D801               	call	i2u1014_48
  6006  000100  D00A               	goto	i2u1014_49
  6007  000102                     i2u1014_48:
  6008  000102  0005               	push	
  6009  000104  6EFA               	movwf	pclath,c
  6010  000106  0101               	movlb	1	; () banked
  6011  000108  51F9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6012  00010A  6EFD               	movwf	tosl,c
  6013  00010C  51FA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6014  00010E  6EFE               	movwf	tosh,c
  6015  000110  6AFF               	clrf	tosu,c
  6016  000112  50FA               	movf	pclath,w,c
  6017  000114  0012               	return		;indir
  6018  000116                     i2u1014_49:
  6019                           
  6020                           ;eusart1.c: 251: }
  6021                           ;eusart1.c: 253: if(RCSTA1bits.OERR){
  6022  000116  A2AB               	btfss	4011,1,c	;volatile
  6023  000118  D015               	goto	i2u1016_49
  6024                           
  6025                           ;eusart1.c: 254: eusart1RxStatusBuffer[eusart1RxHead].oerr = 1;
  6026  00011A  5048               	movf	_eusart1RxHead,w,c	;volatile
  6027  00011C  0D01               	mullw	1
  6028  00011E  0E46               	movlw	low _eusart1RxStatusBuffer
  6029  000120  24F3               	addwf	prodl,w,c
  6030  000122  6ED9               	movwf	fsr2l,c
  6031  000124  0E00               	movlw	high _eusart1RxStatusBuffer
  6032  000126  20F4               	addwfc	prodh,w,c
  6033  000128  6EDA               	movwf	fsr2h,c
  6034  00012A  84DF               	bsf	indf2,2,c
  6035                           
  6036                           ;eusart1.c: 255: EUSART1_OverrunErrorHandler();
  6037  00012C  D801               	call	i2u1016_48
  6038  00012E  D00A               	goto	i2u1016_49
  6039  000130                     i2u1016_48:
  6040  000130  0005               	push	
  6041  000132  6EFA               	movwf	pclath,c
  6042  000134  0101               	movlb	1	; () banked
  6043  000136  51F7               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6044  000138  6EFD               	movwf	tosl,c
  6045  00013A  51F8               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6046  00013C  6EFE               	movwf	tosh,c
  6047  00013E  6AFF               	clrf	tosu,c
  6048  000140  50FA               	movf	pclath,w,c
  6049  000142  0012               	return		;indir
  6050  000144                     i2u1016_49:
  6051                           
  6052                           ;eusart1.c: 256: }
  6053                           ;eusart1.c: 258: if(eusart1RxStatusBuffer[eusart1RxHead].status){
  6054  000144  5048               	movf	_eusart1RxHead,w,c	;volatile
  6055  000146  0D01               	mullw	1
  6056  000148  0E46               	movlw	low _eusart1RxStatusBuffer
  6057  00014A  24F3               	addwf	prodl,w,c
  6058  00014C  6ED9               	movwf	fsr2l,c
  6059  00014E  0E00               	movlw	high _eusart1RxStatusBuffer
  6060  000150  20F4               	addwfc	prodh,w,c
  6061  000152  6EDA               	movwf	fsr2h,c
  6062  000154  50DF               	movf	indf2,w,c
  6063  000156  B4D8               	btfsc	status,2,c
  6064  000158  D00C               	goto	i2l2554
  6065                           
  6066                           ;eusart1.c: 259: EUSART1_ErrorHandler();
  6067  00015A  D801               	call	i2u1018_48
  6068  00015C  0012               	return	
  6069  00015E                     i2u1018_48:
  6070  00015E  0005               	push	
  6071  000160  6EFA               	movwf	pclath,c
  6072  000162  0101               	movlb	1	; () banked
  6073  000164  51F5               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6074  000166  6EFD               	movwf	tosl,c
  6075  000168  51F6               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6076  00016A  6EFE               	movwf	tosh,c
  6077  00016C  6AFF               	clrf	tosu,c
  6078  00016E  50FA               	movf	pclath,w,c
  6079  000170  0012               	return		;indir
  6080  000172                     i2l2554:
  6081                           
  6082                           ;eusart1.c: 261: EUSART1_RxDataHandler();
  6083  000172  EC19  F005         	call	_EUSART1_RxDataHandler	;wreg free
  6084                           
  6085                           ;eusart1.c: 262: LATA=0xF0;
  6086  000176  0EF0               	movlw	240
  6087  000178  6E89               	movwf	3977,c	;volatile
  6088                           
  6089                           ;eusart1.c: 264: datax = EUSART1_Read();
  6090  00017A  EC45  F004         	call	_EUSART1_Read	;wreg free
  6091  00017E  0100               	movlb	0	; () banked
  6092  000180  6FA1               	movwf	_datax& (0+255),b
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;eusart1.c: 266: datatobesolved = datax;
  6096  000182  C0A1  F042         	movff	_datax,_datatobesolved
  6097  000186  6A43               	clrf	_datatobesolved+1,c
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;eusart1.c: 268: bitStatusbefore1 = (datatobesolved >> 0) & 1;
  6101  000188  0E01               	movlw	1
  6102  00018A  1442               	andwf	_datatobesolved,w,c
  6103  00018C  6F94               	movwf	_bitStatusbefore1& (0+255),b
  6104  00018E  6B95               	clrf	(_bitStatusbefore1+1)& (0+255),b
  6105                           
  6106                           ; BSR set to: 0
  6107                           ;eusart1.c: 269: bitStatusbefore2 = (datatobesolved >> 1) & 1;
  6108  000190  3443               	rlcf	_datatobesolved+1,w,c
  6109  000192  3043               	rrcf	_datatobesolved+1,w,c
  6110  000194  6E0A               	movwf	(??_EUSART1_Receive_ISR+1)& (0+255),c
  6111  000196  3042               	rrcf	_datatobesolved,w,c
  6112  000198  6E09               	movwf	??_EUSART1_Receive_ISR& (0+255),c
  6113  00019A  0E01               	movlw	1
  6114  00019C  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6115  00019E  6F92               	movwf	_bitStatusbefore2& (0+255),b
  6116  0001A0  6B93               	clrf	(_bitStatusbefore2+1)& (0+255),b
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;eusart1.c: 270: bitStatusbefore3 = (datatobesolved >> 2) & 1;
  6120  0001A2  C042  F009         	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6121  0001A6  C043  F00A         	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6122  0001AA  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6123  0001AC  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6124  0001AE  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6125  0001B0  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6126  0001B2  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6127  0001B4  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6128  0001B6  0E01               	movlw	1
  6129  0001B8  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6130  0001BA  6F90               	movwf	_bitStatusbefore3& (0+255),b
  6131  0001BC  6B91               	clrf	(_bitStatusbefore3+1)& (0+255),b
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;eusart1.c: 271: bitStatusbefore4 = (datatobesolved >> 3) & 1;
  6135  0001BE  C042  F009         	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6136  0001C2  C043  F00A         	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6137  0001C6  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6138  0001C8  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6139  0001CA  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6140  0001CC  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6141  0001CE  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6142  0001D0  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6143  0001D2  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6144  0001D4  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6145  0001D6  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6146  0001D8  0E01               	movlw	1
  6147  0001DA  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6148  0001DC  6F8E               	movwf	_bitStatusbefore4& (0+255),b
  6149  0001DE  6B8F               	clrf	(_bitStatusbefore4+1)& (0+255),b
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;eusart1.c: 272: bitStatusbefore5 = (datatobesolved >> 4) & 1;
  6153  0001E0  C042  F009         	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6154  0001E4  C043  F00A         	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6155  0001E8  0E04               	movlw	4
  6156  0001EA  6E0B               	movwf	(??_EUSART1_Receive_ISR+2)& (0+255),c
  6157  0001EC                     i2u1019_45:
  6158  0001EC  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6159  0001EE  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6160  0001F0  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6161  0001F2  2E0B               	decfsz	(??_EUSART1_Receive_ISR+2)& (0+255),f,c
  6162  0001F4  D7FB               	goto	i2u1019_45
  6163  0001F6  0E01               	movlw	1
  6164  0001F8  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6165  0001FA  6F8C               	movwf	_bitStatusbefore5& (0+255),b
  6166  0001FC  6B8D               	clrf	(_bitStatusbefore5+1)& (0+255),b
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;eusart1.c: 273: bitStatusbefore6 = (datatobesolved >> 5) & 1;
  6170  0001FE  C042  F009         	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6171  000202  C043  F00A         	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6172  000206  0E05               	movlw	5
  6173  000208  6E0B               	movwf	(??_EUSART1_Receive_ISR+2)& (0+255),c
  6174  00020A                     i2u1020_45:
  6175  00020A  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6176  00020C  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6177  00020E  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6178  000210  2E0B               	decfsz	(??_EUSART1_Receive_ISR+2)& (0+255),f,c
  6179  000212  D7FB               	goto	i2u1020_45
  6180  000214  0E01               	movlw	1
  6181  000216  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6182  000218  6F8A               	movwf	_bitStatusbefore6& (0+255),b
  6183  00021A  6B8B               	clrf	(_bitStatusbefore6+1)& (0+255),b
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;eusart1.c: 274: bitStatusbefore7 = (datatobesolved >> 6) & 1;
  6187  00021C  C042  F009         	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6188  000220  C043  F00A         	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6189  000224  0E06               	movlw	6
  6190  000226  6E0B               	movwf	(??_EUSART1_Receive_ISR+2)& (0+255),c
  6191  000228                     i2u1021_45:
  6192  000228  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6193  00022A  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6194  00022C  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6195  00022E  2E0B               	decfsz	(??_EUSART1_Receive_ISR+2)& (0+255),f,c
  6196  000230  D7FB               	goto	i2u1021_45
  6197  000232  0E01               	movlw	1
  6198  000234  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6199  000236  6F88               	movwf	_bitStatusbefore7& (0+255),b
  6200  000238  6B89               	clrf	(_bitStatusbefore7+1)& (0+255),b
  6201                           
  6202                           ; BSR set to: 0
  6203                           ;eusart1.c: 276: bitStatus1 = bitStatusbefore1<<0;
  6204  00023A  C094  F084         	movff	_bitStatusbefore1,_bitStatus1
  6205  00023E  C095  F085         	movff	_bitStatusbefore1+1,_bitStatus1+1
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;eusart1.c: 277: bitStatus2 = bitStatusbefore2<<1;
  6209  000242  90D8               	bcf	status,0,c
  6210  000244  3592               	rlcf	_bitStatusbefore2& (0+255),w,b
  6211  000246  6F82               	movwf	_bitStatus2& (0+255),b
  6212  000248  3593               	rlcf	(_bitStatusbefore2+1)& (0+255),w,b
  6213  00024A  6F83               	movwf	(_bitStatus2+1)& (0+255),b
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;eusart1.c: 278: bitStatus3 = bitStatusbefore3<<2;
  6217  00024C  C090  F009         	movff	_bitStatusbefore3,??_EUSART1_Receive_ISR
  6218  000250  C091  F00A         	movff	_bitStatusbefore3+1,??_EUSART1_Receive_ISR+1
  6219  000254  90D8               	bcf	status,0,c
  6220  000256  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6221  000258  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6222  00025A  90D8               	bcf	status,0,c
  6223  00025C  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6224  00025E  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6225  000260  C009  F080         	movff	??_EUSART1_Receive_ISR,_bitStatus3
  6226  000264  C00A  F081         	movff	??_EUSART1_Receive_ISR+1,_bitStatus3+1
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;eusart1.c: 279: bitStatus4 = bitStatusbefore4<<3;
  6230  000268  C08E  F009         	movff	_bitStatusbefore4,??_EUSART1_Receive_ISR
  6231  00026C  C08F  F00A         	movff	_bitStatusbefore4+1,??_EUSART1_Receive_ISR+1
  6232  000270  90D8               	bcf	status,0,c
  6233  000272  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6234  000274  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6235  000276  90D8               	bcf	status,0,c
  6236  000278  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6237  00027A  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6238  00027C  90D8               	bcf	status,0,c
  6239  00027E  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6240  000280  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6241  000282  C009  F07E         	movff	??_EUSART1_Receive_ISR,_bitStatus4
  6242  000286  C00A  F07F         	movff	??_EUSART1_Receive_ISR+1,_bitStatus4+1
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;eusart1.c: 280: bitStatus5 = bitStatusbefore5<<4;
  6246  00028A  C08C  F009         	movff	_bitStatusbefore5,??_EUSART1_Receive_ISR
  6247  00028E  C08D  F00A         	movff	_bitStatusbefore5+1,??_EUSART1_Receive_ISR+1
  6248  000292  3A09               	swapf	??_EUSART1_Receive_ISR,f,c
  6249  000294  3A0A               	swapf	??_EUSART1_Receive_ISR+1,f,c
  6250  000296  0EF0               	movlw	240
  6251  000298  160A               	andwf	??_EUSART1_Receive_ISR+1,f,c
  6252  00029A  5009               	movf	??_EUSART1_Receive_ISR,w,c
  6253  00029C  0B0F               	andlw	15
  6254  00029E  120A               	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6255  0002A0  0EF0               	movlw	240
  6256  0002A2  1609               	andwf	??_EUSART1_Receive_ISR,f,c
  6257  0002A4  C009  F07C         	movff	??_EUSART1_Receive_ISR,_bitStatus5
  6258  0002A8  C00A  F07D         	movff	??_EUSART1_Receive_ISR+1,_bitStatus5+1
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;eusart1.c: 281: bitStatus6 = bitStatusbefore6<<5;
  6262  0002AC  C08A  F009         	movff	_bitStatusbefore6,??_EUSART1_Receive_ISR
  6263  0002B0  C08B  F00A         	movff	_bitStatusbefore6+1,??_EUSART1_Receive_ISR+1
  6264  0002B4  0E05               	movlw	5
  6265  0002B6                     i2u1022_45:
  6266  0002B6  90D8               	bcf	status,0,c
  6267  0002B8  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6268  0002BA  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6269  0002BC  2EE8               	decfsz	wreg,f,c
  6270  0002BE  D7FB               	goto	i2u1022_45
  6271  0002C0  C009  F07A         	movff	??_EUSART1_Receive_ISR,_bitStatus6
  6272  0002C4  C00A  F07B         	movff	??_EUSART1_Receive_ISR+1,_bitStatus6+1
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;eusart1.c: 282: bitStatus7 = bitStatusbefore7<<6;
  6276  0002C8  C088  F009         	movff	_bitStatusbefore7,??_EUSART1_Receive_ISR
  6277  0002CC  C089  F00A         	movff	_bitStatusbefore7+1,??_EUSART1_Receive_ISR+1
  6278  0002D0  0E06               	movlw	6
  6279  0002D2                     i2u1023_45:
  6280  0002D2  90D8               	bcf	status,0,c
  6281  0002D4  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6282  0002D6  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6283  0002D8  2EE8               	decfsz	wreg,f,c
  6284  0002DA  D7FB               	goto	i2u1023_45
  6285  0002DC  C009  F078         	movff	??_EUSART1_Receive_ISR,_bitStatus7
  6286  0002E0  C00A  F079         	movff	??_EUSART1_Receive_ISR+1,_bitStatus7+1
  6287                           
  6288                           ; BSR set to: 0
  6289                           ;eusart1.c: 284: dataresult = bitStatus7 | bitStatus6 | bitStatus5 | bitStatus4 | bitSta
      +                          tus3 | bitStatus2 | bitStatus1;
  6290  0002E4  517A               	movf	_bitStatus6& (0+255),w,b
  6291  0002E6  1178               	iorwf	_bitStatus7& (0+255),w,b
  6292  0002E8  6E09               	movwf	??_EUSART1_Receive_ISR& (0+255),c
  6293  0002EA  517B               	movf	(_bitStatus6+1)& (0+255),w,b
  6294  0002EC  1179               	iorwf	(_bitStatus7+1)& (0+255),w,b
  6295  0002EE  6E0A               	movwf	(??_EUSART1_Receive_ISR+1)& (0+255),c
  6296  0002F0  517C               	movf	_bitStatus5& (0+255),w,b
  6297  0002F2  1209               	iorwf	??_EUSART1_Receive_ISR,f,c
  6298  0002F4  517D               	movf	(_bitStatus5+1)& (0+255),w,b
  6299  0002F6  120A               	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6300  0002F8  517E               	movf	_bitStatus4& (0+255),w,b
  6301  0002FA  1209               	iorwf	??_EUSART1_Receive_ISR,f,c
  6302  0002FC  517F               	movf	(_bitStatus4+1)& (0+255),w,b
  6303  0002FE  120A               	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6304  000300  5180               	movf	_bitStatus3& (0+255),w,b
  6305  000302  1209               	iorwf	??_EUSART1_Receive_ISR,f,c
  6306  000304  5181               	movf	(_bitStatus3+1)& (0+255),w,b
  6307  000306  120A               	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6308  000308  5182               	movf	_bitStatus2& (0+255),w,b
  6309  00030A  1209               	iorwf	??_EUSART1_Receive_ISR,f,c
  6310  00030C  5183               	movf	(_bitStatus2+1)& (0+255),w,b
  6311  00030E  120A               	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6312  000310  5184               	movf	_bitStatus1& (0+255),w,b
  6313  000312  1009               	iorwf	??_EUSART1_Receive_ISR,w,c
  6314  000314  6FE1               	movwf	_dataresult& (0+255),b
  6315  000316  5185               	movf	(_bitStatus1+1)& (0+255),w,b
  6316  000318  100A               	iorwf	??_EUSART1_Receive_ISR+1,w,c
  6317  00031A  6FE2               	movwf	(_dataresult+1)& (0+255),b
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;eusart1.c: 286: strncat(dataxstr, &dataresult, 1);
  6321  00031C  0EB8               	movlw	low _dataxstr
  6322  00031E  6E01               	movwf	strncat@to,c
  6323  000320  0E07               	movlw	high _dataxstr
  6324  000322  6E02               	movwf	strncat@to+1,c
  6325  000324  0EE1               	movlw	low _dataresult
  6326  000326  6E03               	movwf	strncat@from,c
  6327  000328  0E00               	movlw	high _dataresult
  6328  00032A  6E04               	movwf	strncat@from+1,c
  6329  00032C  0E00               	movlw	0
  6330  00032E  6E06               	movwf	strncat@size+1,c
  6331  000330  0E01               	movlw	1
  6332  000332  6E05               	movwf	strncat@size,c
  6333  000334  ECBB  F003         	call	_strncat	;wreg free
  6334  000338  0012               	return	
  6335  00033A                     __end_of_EUSART1_Receive_ISR:
  6336                           	opt stack 0
  6337                           tosu	equ	0xFFF
  6338                           tosh	equ	0xFFE
  6339                           tosl	equ	0xFFD
  6340                           pclatu	equ	0xFFB
  6341                           pclath	equ	0xFFA
  6342                           tblptru	equ	0xFF8
  6343                           tblptrh	equ	0xFF7
  6344                           tblptrl	equ	0xFF6
  6345                           tablat	equ	0xFF5
  6346                           prodh	equ	0xFF4
  6347                           prodl	equ	0xFF3
  6348                           intcon	equ	0xFF2
  6349                           intcon2	equ	0xFF1
  6350                           intcon3	equ	0xFF0
  6351                           postinc0	equ	0xFEE
  6352                           fsr0h	equ	0xFEA
  6353                           fsr0l	equ	0xFE9
  6354                           wreg	equ	0xFE8
  6355                           fsr1h	equ	0xFE2
  6356                           fsr1l	equ	0xFE1
  6357                           indf2	equ	0xFDF
  6358                           postinc2	equ	0xFDE
  6359                           postdec2	equ	0xFDD
  6360                           fsr2h	equ	0xFDA
  6361                           fsr2l	equ	0xFD9
  6362                           status	equ	0xFD8
  6363                           
  6364 ;; *************** function _strncat *****************
  6365 ;; Defined at:
  6366 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncat.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;  to              2    0[COMRAM] PTR unsigned char 
  6369 ;;		 -> dataxstr(1024), 
  6370 ;;  from            2    2[COMRAM] PTR const unsigned char 
  6371 ;;		 -> dataresult(2), 
  6372 ;;  size            2    4[COMRAM] unsigned int 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;  cp              2    6[COMRAM] PTR unsigned char 
  6375 ;;		 -> dataxstr(1024), 
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  2    0[COMRAM] PTR unsigned char 
  6378 ;; Registers used:
  6379 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6385 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;Total ram usage:        8 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; This function calls:
  6392 ;;		Nothing
  6393 ;; This function is called by:
  6394 ;;		_EUSART1_Receive_ISR
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           	psect	text53
  6399  000776                     __ptext53:
  6400                           	opt stack 0
  6401  000776                     _strncat:
  6402                           	opt stack 24
  6403                           
  6404                           ;incstack = 0
  6405  000776  C001  F007         	movff	strncat@to,strncat@cp
  6406  00077A  C002  F008         	movff	strncat@to+1,strncat@cp+1
  6407  00077E  D002               	goto	i2l3388
  6408  000780  4A07               	infsnz	strncat@cp,f,c
  6409  000782  2A08               	incf	strncat@cp+1,f,c
  6410  000784                     i2l3388:
  6411  000784  C007  FFD9         	movff	strncat@cp,fsr2l
  6412  000788  C008  FFDA         	movff	strncat@cp+1,fsr2h
  6413  00078C  50DF               	movf	indf2,w,c
  6414  00078E  B4D8               	btfsc	status,2,c
  6415  000790  D008               	goto	i2l3391
  6416  000792  D7F6               	goto	i2l3389
  6417  000794  0605               	decf	strncat@size,f,c
  6418  000796  A0D8               	btfss	status,0,c
  6419  000798  0606               	decf	strncat@size+1,f,c
  6420  00079A  4A07               	infsnz	strncat@cp,f,c
  6421  00079C  2A08               	incf	strncat@cp+1,f,c
  6422  00079E  4A03               	infsnz	strncat@from,f,c
  6423  0007A0  2A04               	incf	strncat@from+1,f,c
  6424  0007A2                     i2l3391:
  6425  0007A2  5005               	movf	strncat@size,w,c
  6426  0007A4  1006               	iorwf	strncat@size+1,w,c
  6427  0007A6  B4D8               	btfsc	status,2,c
  6428  0007A8  D00D               	goto	i2u900_40
  6429  0007AA  C003  FFD9         	movff	strncat@from,fsr2l
  6430  0007AE  C004  FFDA         	movff	strncat@from+1,fsr2h
  6431  0007B2  C007  FFE9         	movff	strncat@cp,fsr0l
  6432  0007B6  C008  FFEA         	movff	strncat@cp+1,fsr0h
  6433  0007BA  CFDF FFEF          	movff	indf2,indf0
  6434  0007BE  50EF               	movf	indf0,w,c
  6435  0007C0  A4D8               	btfss	status,2,c
  6436  0007C2  D7E8               	goto	i2l3392
  6437  0007C4                     i2u900_40:
  6438  0007C4  5005               	movf	strncat@size,w,c
  6439  0007C6  1006               	iorwf	strncat@size+1,w,c
  6440  0007C8  A4D8               	btfss	status,2,c
  6441  0007CA  0012               	return	
  6442  0007CC  C007  FFD9         	movff	strncat@cp,fsr2l
  6443  0007D0  C008  FFDA         	movff	strncat@cp+1,fsr2h
  6444  0007D4  0E00               	movlw	0
  6445  0007D6  6EDF               	movwf	indf2,c
  6446  0007D8  0012               	return	
  6447  0007DA                     __end_of_strncat:
  6448                           	opt stack 0
  6449                           tosu	equ	0xFFF
  6450                           tosh	equ	0xFFE
  6451                           tosl	equ	0xFFD
  6452                           pclatu	equ	0xFFB
  6453                           pclath	equ	0xFFA
  6454                           tblptru	equ	0xFF8
  6455                           tblptrh	equ	0xFF7
  6456                           tblptrl	equ	0xFF6
  6457                           tablat	equ	0xFF5
  6458                           prodh	equ	0xFF4
  6459                           prodl	equ	0xFF3
  6460                           intcon	equ	0xFF2
  6461                           intcon2	equ	0xFF1
  6462                           intcon3	equ	0xFF0
  6463                           indf0	equ	0xFEF
  6464                           postinc0	equ	0xFEE
  6465                           fsr0h	equ	0xFEA
  6466                           fsr0l	equ	0xFE9
  6467                           wreg	equ	0xFE8
  6468                           fsr1h	equ	0xFE2
  6469                           fsr1l	equ	0xFE1
  6470                           indf2	equ	0xFDF
  6471                           postinc2	equ	0xFDE
  6472                           postdec2	equ	0xFDD
  6473                           fsr2h	equ	0xFDA
  6474                           fsr2l	equ	0xFD9
  6475                           status	equ	0xFD8
  6476                           
  6477 ;; *************** function _EUSART1_Read *****************
  6478 ;; Defined at:
  6479 ;;		line 178 in file "mcc_generated_files/eusart1.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;		None
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;  readValue       1    0[COMRAM] unsigned char 
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  1    wreg      unsigned char 
  6486 ;; Registers used:
  6487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6497 ;;Total ram usage:        1 bytes
  6498 ;; Hardware stack levels used:    1
  6499 ;; This function calls:
  6500 ;;		Nothing
  6501 ;; This function is called by:
  6502 ;;		_EUSART1_Receive_ISR
  6503 ;;		_UART_Read_Text
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507                           	psect	text54
  6508  00088A                     __ptext54:
  6509                           	opt stack 0
  6510  00088A                     _EUSART1_Read:
  6511                           	opt stack 24
  6512                           
  6513                           ;eusart1.c: 180: uint8_t readValue = 0;
  6514                           
  6515                           ;incstack = 0
  6516  00088A  0E00               	movlw	0
  6517  00088C  6E01               	movwf	EUSART1_Read@readValue,c
  6518  00088E                     
  6519                           ;eusart1.c: 183: {
  6520  00088E  0100               	movlb	0	; () banked
  6521  000890  51A3               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  6522  000892  B4D8               	btfsc	status,2,c
  6523  000894  D7FC               	goto	i2l2531
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;eusart1.c: 184: }
  6527                           ;eusart1.c: 186: eusart1RxLastError = eusart1RxStatusBuffer[eusart1RxTail];
  6528                           
  6529                           ; BSR set to: 0
  6530  000896  5047               	movf	_eusart1RxTail,w,c	;volatile
  6531  000898  0D01               	mullw	1
  6532  00089A  0E46               	movlw	low _eusart1RxStatusBuffer
  6533  00089C  24F3               	addwf	prodl,w,c
  6534  00089E  6ED9               	movwf	fsr2l,c
  6535  0008A0  0E00               	movlw	high _eusart1RxStatusBuffer
  6536  0008A2  20F4               	addwfc	prodh,w,c
  6537  0008A4  6EDA               	movwf	fsr2h,c
  6538  0008A6  50DF               	movf	indf2,w,c
  6539  0008A8  6FA2               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6540                           
  6541                           ;eusart1.c: 188: readValue = eusart1RxBuffer[eusart1RxTail++];
  6542  0008AA  5047               	movf	_eusart1RxTail,w,c	;volatile
  6543  0008AC  0D01               	mullw	1
  6544  0008AE  0EA4               	movlw	low _eusart1RxBuffer
  6545  0008B0  24F3               	addwf	prodl,w,c
  6546  0008B2  6ED9               	movwf	fsr2l,c
  6547  0008B4  0E00               	movlw	high _eusart1RxBuffer
  6548  0008B6  20F4               	addwfc	prodh,w,c
  6549  0008B8  6EDA               	movwf	fsr2h,c
  6550  0008BA  50DF               	movf	indf2,w,c
  6551  0008BC  6E01               	movwf	EUSART1_Read@readValue,c
  6552                           
  6553                           ; BSR set to: 0
  6554  0008BE  2A47               	incf	_eusart1RxTail,f,c	;volatile
  6555                           
  6556                           ; BSR set to: 0
  6557                           ;eusart1.c: 189: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  6558  0008C0  5047               	movf	_eusart1RxTail,w,c	;volatile
  6559  0008C2  B4D8               	btfsc	status,2,c
  6560  0008C4  D002               	goto	i2l2533
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;eusart1.c: 190: {
  6564                           ;eusart1.c: 191: eusart1RxTail = 0;
  6565  0008C6  0E00               	movlw	0
  6566  0008C8  6E47               	movwf	_eusart1RxTail,c	;volatile
  6567  0008CA                     i2l2533:
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;eusart1.c: 192: }
  6571                           ;eusart1.c: 193: PIE1bits.RC1IE = 0;
  6572                           
  6573                           ; BSR set to: 0
  6574  0008CA  9A9D               	bcf	3997,5,c	;volatile
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;eusart1.c: 194: eusart1RxCount--;
  6578  0008CC  07A3               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;eusart1.c: 195: PIE1bits.RC1IE = 1;
  6582  0008CE  8A9D               	bsf	3997,5,c	;volatile
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;eusart1.c: 197: return readValue;
  6586  0008D0  5001               	movf	EUSART1_Read@readValue,w,c
  6587  0008D2  0012               	return	
  6588  0008D4                     __end_of_EUSART1_Read:
  6589                           	opt stack 0
  6590                           tosu	equ	0xFFF
  6591                           tosh	equ	0xFFE
  6592                           tosl	equ	0xFFD
  6593                           pclatu	equ	0xFFB
  6594                           pclath	equ	0xFFA
  6595                           tblptru	equ	0xFF8
  6596                           tblptrh	equ	0xFF7
  6597                           tblptrl	equ	0xFF6
  6598                           tablat	equ	0xFF5
  6599                           prodh	equ	0xFF4
  6600                           prodl	equ	0xFF3
  6601                           intcon	equ	0xFF2
  6602                           intcon2	equ	0xFF1
  6603                           intcon3	equ	0xFF0
  6604                           indf0	equ	0xFEF
  6605                           postinc0	equ	0xFEE
  6606                           fsr0h	equ	0xFEA
  6607                           fsr0l	equ	0xFE9
  6608                           wreg	equ	0xFE8
  6609                           fsr1h	equ	0xFE2
  6610                           fsr1l	equ	0xFE1
  6611                           indf2	equ	0xFDF
  6612                           postinc2	equ	0xFDE
  6613                           postdec2	equ	0xFDD
  6614                           fsr2h	equ	0xFDA
  6615                           fsr2l	equ	0xFD9
  6616                           status	equ	0xFD8
  6617                           
  6618 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  6619 ;; Defined at:
  6620 ;;		line 307 in file "mcc_generated_files/eusart1.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;		None
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;		None
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  1    wreg      void 
  6627 ;; Registers used:
  6628 ;;		None
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6638 ;;Total ram usage:        0 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; This function calls:
  6641 ;;		Nothing
  6642 ;; This function is called by:
  6643 ;;		_EUSART1_Initialize
  6644 ;;		_EUSART1_Receive_ISR
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           	psect	text55
  6649  000C5C                     __ptext55:
  6650                           	opt stack 0
  6651  000C5C                     _EUSART1_DefaultOverrunErrorHandler:
  6652                           	opt stack 24
  6653                           
  6654                           ;eusart1.c: 310: RCSTA1bits.CREN = 0;
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;incstack = 0
  6658  000C5C  98AB               	bcf	4011,4,c	;volatile
  6659                           
  6660                           ;eusart1.c: 311: RCSTA1bits.CREN = 1;
  6661  000C5E  88AB               	bsf	4011,4,c	;volatile
  6662  000C60  0012               	return		;funcret
  6663  000C62                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  6664                           	opt stack 0
  6665                           tosu	equ	0xFFF
  6666                           tosh	equ	0xFFE
  6667                           tosl	equ	0xFFD
  6668                           pclatu	equ	0xFFB
  6669                           pclath	equ	0xFFA
  6670                           tblptru	equ	0xFF8
  6671                           tblptrh	equ	0xFF7
  6672                           tblptrl	equ	0xFF6
  6673                           tablat	equ	0xFF5
  6674                           prodh	equ	0xFF4
  6675                           prodl	equ	0xFF3
  6676                           intcon	equ	0xFF2
  6677                           intcon2	equ	0xFF1
  6678                           intcon3	equ	0xFF0
  6679                           indf0	equ	0xFEF
  6680                           postinc0	equ	0xFEE
  6681                           fsr0h	equ	0xFEA
  6682                           fsr0l	equ	0xFE9
  6683                           wreg	equ	0xFE8
  6684                           fsr1h	equ	0xFE2
  6685                           fsr1l	equ	0xFE1
  6686                           indf2	equ	0xFDF
  6687                           postinc2	equ	0xFDE
  6688                           postdec2	equ	0xFDD
  6689                           fsr2h	equ	0xFDA
  6690                           fsr2l	equ	0xFD9
  6691                           status	equ	0xFD8
  6692                           
  6693 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  6694 ;; Defined at:
  6695 ;;		line 305 in file "mcc_generated_files/eusart1.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;		None
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;		None
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      void 
  6702 ;; Registers used:
  6703 ;;		None
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;Total ram usage:        0 bytes
  6714 ;; Hardware stack levels used:    1
  6715 ;; This function calls:
  6716 ;;		Nothing
  6717 ;; This function is called by:
  6718 ;;		_EUSART1_Initialize
  6719 ;;		_EUSART1_Receive_ISR
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           	psect	text56
  6724  000C7A                     __ptext56:
  6725                           	opt stack 0
  6726  000C7A                     _EUSART1_DefaultFramingErrorHandler:
  6727                           	opt stack 24
  6728                           
  6729                           ;incstack = 0
  6730  000C7A  0012               	return		;funcret
  6731  000C7C                     __end_of_EUSART1_DefaultFramingErrorHandler:
  6732                           	opt stack 0
  6733                           tosu	equ	0xFFF
  6734                           tosh	equ	0xFFE
  6735                           tosl	equ	0xFFD
  6736                           pclatu	equ	0xFFB
  6737                           pclath	equ	0xFFA
  6738                           tblptru	equ	0xFF8
  6739                           tblptrh	equ	0xFF7
  6740                           tblptrl	equ	0xFF6
  6741                           tablat	equ	0xFF5
  6742                           prodh	equ	0xFF4
  6743                           prodl	equ	0xFF3
  6744                           intcon	equ	0xFF2
  6745                           intcon2	equ	0xFF1
  6746                           intcon3	equ	0xFF0
  6747                           indf0	equ	0xFEF
  6748                           postinc0	equ	0xFEE
  6749                           fsr0h	equ	0xFEA
  6750                           fsr0l	equ	0xFE9
  6751                           wreg	equ	0xFE8
  6752                           fsr1h	equ	0xFE2
  6753                           fsr1l	equ	0xFE1
  6754                           indf2	equ	0xFDF
  6755                           postinc2	equ	0xFDE
  6756                           postdec2	equ	0xFDD
  6757                           fsr2h	equ	0xFDA
  6758                           fsr2l	equ	0xFD9
  6759                           status	equ	0xFD8
  6760                           
  6761 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  6762 ;; Defined at:
  6763 ;;		line 315 in file "mcc_generated_files/eusart1.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;		None
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;		None
  6768 ;; Return value:  Size  Location     Type
  6769 ;;                  1    wreg      void 
  6770 ;; Registers used:
  6771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6781 ;;Total ram usage:        0 bytes
  6782 ;; Hardware stack levels used:    1
  6783 ;; Hardware stack levels required when called:    1
  6784 ;; This function calls:
  6785 ;;		_EUSART1_RxDataHandler
  6786 ;; This function is called by:
  6787 ;;		_EUSART1_Initialize
  6788 ;;		_EUSART1_Receive_ISR
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792                           	psect	text57
  6793  000C62                     __ptext57:
  6794                           	opt stack 0
  6795  000C62                     _EUSART1_DefaultErrorHandler:
  6796                           	opt stack 23
  6797                           
  6798                           ;eusart1.c: 316: EUSART1_RxDataHandler();
  6799                           
  6800                           ;incstack = 0
  6801  000C62  EC19  F005         	call	_EUSART1_RxDataHandler	;wreg free
  6802  000C66  0012               	return		;funcret
  6803  000C68                     __end_of_EUSART1_DefaultErrorHandler:
  6804                           	opt stack 0
  6805                           tosu	equ	0xFFF
  6806                           tosh	equ	0xFFE
  6807                           tosl	equ	0xFFD
  6808                           pclatu	equ	0xFFB
  6809                           pclath	equ	0xFFA
  6810                           tblptru	equ	0xFF8
  6811                           tblptrh	equ	0xFF7
  6812                           tblptrl	equ	0xFF6
  6813                           tablat	equ	0xFF5
  6814                           prodh	equ	0xFF4
  6815                           prodl	equ	0xFF3
  6816                           intcon	equ	0xFF2
  6817                           intcon2	equ	0xFF1
  6818                           intcon3	equ	0xFF0
  6819                           indf0	equ	0xFEF
  6820                           postinc0	equ	0xFEE
  6821                           fsr0h	equ	0xFEA
  6822                           fsr0l	equ	0xFE9
  6823                           wreg	equ	0xFE8
  6824                           fsr1h	equ	0xFE2
  6825                           fsr1l	equ	0xFE1
  6826                           indf2	equ	0xFDF
  6827                           postinc2	equ	0xFDE
  6828                           postdec2	equ	0xFDD
  6829                           fsr2h	equ	0xFDA
  6830                           fsr2l	equ	0xFD9
  6831                           status	equ	0xFD8
  6832                           
  6833 ;; *************** function _EUSART1_RxDataHandler *****************
  6834 ;; Defined at:
  6835 ;;		line 295 in file "mcc_generated_files/eusart1.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;		None
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;		None
  6840 ;; Return value:  Size  Location     Type
  6841 ;;                  1    wreg      void 
  6842 ;; Registers used:
  6843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6853 ;;Total ram usage:        0 bytes
  6854 ;; Hardware stack levels used:    1
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_EUSART1_Receive_ISR
  6859 ;;		_EUSART1_DefaultErrorHandler
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863                           	psect	text58
  6864  000A32                     __ptext58:
  6865                           	opt stack 0
  6866  000A32                     _EUSART1_RxDataHandler:
  6867                           	opt stack 24
  6868                           
  6869                           ;eusart1.c: 297: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  6870                           
  6871                           ;incstack = 0
  6872  000A32  5048               	movf	_eusart1RxHead,w,c	;volatile
  6873  000A34  0D01               	mullw	1
  6874  000A36  0EA4               	movlw	low _eusart1RxBuffer
  6875  000A38  24F3               	addwf	prodl,w,c
  6876  000A3A  6ED9               	movwf	fsr2l,c
  6877  000A3C  0E00               	movlw	high _eusart1RxBuffer
  6878  000A3E  20F4               	addwfc	prodh,w,c
  6879  000A40  6EDA               	movwf	fsr2h,c
  6880  000A42  CFAE FFDF          	movff	4014,indf2	;volatile
  6881  000A46  2A48               	incf	_eusart1RxHead,f,c	;volatile
  6882                           
  6883                           ;eusart1.c: 298: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6884  000A48  5048               	movf	_eusart1RxHead,w,c	;volatile
  6885  000A4A  B4D8               	btfsc	status,2,c
  6886  000A4C  D002               	goto	i2l2559
  6887                           
  6888                           ;eusart1.c: 299: {
  6889                           ;eusart1.c: 300: eusart1RxHead = 0;
  6890  000A4E  0E00               	movlw	0
  6891  000A50  6E48               	movwf	_eusart1RxHead,c	;volatile
  6892  000A52                     i2l2559:
  6893                           
  6894                           ;eusart1.c: 301: }
  6895                           ;eusart1.c: 302: eusart1RxCount++;
  6896  000A52  0100               	movlb	0	; () banked
  6897  000A54  2BA3               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  6898                           
  6899                           ; BSR set to: 0
  6900  000A56  0012               	return		;funcret
  6901  000A58                     __end_of_EUSART1_RxDataHandler:
  6902                           	opt stack 0
  6903                           tosu	equ	0xFFF
  6904                           tosh	equ	0xFFE
  6905                           tosl	equ	0xFFD
  6906                           pclatu	equ	0xFFB
  6907                           pclath	equ	0xFFA
  6908                           tblptru	equ	0xFF8
  6909                           tblptrh	equ	0xFF7
  6910                           tblptrl	equ	0xFF6
  6911                           tablat	equ	0xFF5
  6912                           prodh	equ	0xFF4
  6913                           prodl	equ	0xFF3
  6914                           intcon	equ	0xFF2
  6915                           intcon2	equ	0xFF1
  6916                           intcon3	equ	0xFF0
  6917                           indf0	equ	0xFEF
  6918                           postinc0	equ	0xFEE
  6919                           fsr0h	equ	0xFEA
  6920                           fsr0l	equ	0xFE9
  6921                           wreg	equ	0xFE8
  6922                           fsr1h	equ	0xFE2
  6923                           fsr1l	equ	0xFE1
  6924                           indf2	equ	0xFDF
  6925                           postinc2	equ	0xFDE
  6926                           postdec2	equ	0xFDD
  6927                           fsr2h	equ	0xFDA
  6928                           fsr2l	equ	0xFD9
  6929                           status	equ	0xFD8
  6930                           tosu	equ	0xFFF
  6931                           tosh	equ	0xFFE
  6932                           tosl	equ	0xFFD
  6933                           pclatu	equ	0xFFB
  6934                           pclath	equ	0xFFA
  6935                           tblptru	equ	0xFF8
  6936                           tblptrh	equ	0xFF7
  6937                           tblptrl	equ	0xFF6
  6938                           tablat	equ	0xFF5
  6939                           prodh	equ	0xFF4
  6940                           prodl	equ	0xFF3
  6941                           intcon	equ	0xFF2
  6942                           intcon2	equ	0xFF1
  6943                           intcon3	equ	0xFF0
  6944                           indf0	equ	0xFEF
  6945                           postinc0	equ	0xFEE
  6946                           fsr0h	equ	0xFEA
  6947                           fsr0l	equ	0xFE9
  6948                           wreg	equ	0xFE8
  6949                           fsr1h	equ	0xFE2
  6950                           fsr1l	equ	0xFE1
  6951                           indf2	equ	0xFDF
  6952                           postinc2	equ	0xFDE
  6953                           postdec2	equ	0xFDD
  6954                           fsr2h	equ	0xFDA
  6955                           fsr2l	equ	0xFD9
  6956                           status	equ	0xFD8
  6957                           
  6958                           	psect	text59
  6959  000000                     __ptext59:
  6960                           	opt stack 0
  6961                           tosu	equ	0xFFF
  6962                           tosh	equ	0xFFE
  6963                           tosl	equ	0xFFD
  6964                           pclatu	equ	0xFFB
  6965                           pclath	equ	0xFFA
  6966                           tblptru	equ	0xFF8
  6967                           tblptrh	equ	0xFF7
  6968                           tblptrl	equ	0xFF6
  6969                           tablat	equ	0xFF5
  6970                           prodh	equ	0xFF4
  6971                           prodl	equ	0xFF3
  6972                           intcon	equ	0xFF2
  6973                           intcon2	equ	0xFF1
  6974                           intcon3	equ	0xFF0
  6975                           indf0	equ	0xFEF
  6976                           postinc0	equ	0xFEE
  6977                           fsr0h	equ	0xFEA
  6978                           fsr0l	equ	0xFE9
  6979                           wreg	equ	0xFE8
  6980                           fsr1h	equ	0xFE2
  6981                           fsr1l	equ	0xFE1
  6982                           indf2	equ	0xFDF
  6983                           postinc2	equ	0xFDE
  6984                           postdec2	equ	0xFDD
  6985                           fsr2h	equ	0xFDA
  6986                           fsr2l	equ	0xFD9
  6987                           status	equ	0xFD8
  6988                           
  6989                           	psect	rparam
  6990  0000                     tosu	equ	0xFFF
  6991                           tosh	equ	0xFFE
  6992                           tosl	equ	0xFFD
  6993                           pclatu	equ	0xFFB
  6994                           pclath	equ	0xFFA
  6995                           tblptru	equ	0xFF8
  6996                           tblptrh	equ	0xFF7
  6997                           tblptrl	equ	0xFF6
  6998                           tablat	equ	0xFF5
  6999                           prodh	equ	0xFF4
  7000                           prodl	equ	0xFF3
  7001                           intcon	equ	0xFF2
  7002                           intcon2	equ	0xFF1
  7003                           intcon3	equ	0xFF0
  7004                           indf0	equ	0xFEF
  7005                           postinc0	equ	0xFEE
  7006                           fsr0h	equ	0xFEA
  7007                           fsr0l	equ	0xFE9
  7008                           wreg	equ	0xFE8
  7009                           fsr1h	equ	0xFE2
  7010                           fsr1l	equ	0xFE1
  7011                           indf2	equ	0xFDF
  7012                           postinc2	equ	0xFDE
  7013                           postdec2	equ	0xFDD
  7014                           fsr2h	equ	0xFDA
  7015                           fsr2l	equ	0xFD9
  7016                           status	equ	0xFD8
  7017                           
  7018                           	psect	temp
  7019  00004C                     btemp:
  7020                           	opt stack 0
  7021  00004C                     	ds	12
  7022  0000                     wtemp0	set	btemp
  7023  0000                     wtemp1	set	btemp+2
  7024  0000                     wtemp2	set	btemp+4
  7025  0000                     wtemp3	set	btemp+6
  7026  0000                     wtemp4	set	btemp+8
  7027  0000                     wtemp5	set	btemp+10
  7028  0000                     wtemp6	set	btemp+1
  7029  0000                     ttemp0	set	btemp
  7030  0000                     ttemp1	set	btemp+3
  7031  0000                     ttemp2	set	btemp+6
  7032  0000                     ttemp3	set	btemp+9
  7033  0000                     ltemp0	set	btemp
  7034  0000                     ltemp1	set	btemp+4
  7035  0000                     ltemp2	set	btemp+8
  7036                           tosu	equ	0xFFF
  7037                           tosh	equ	0xFFE
  7038                           tosl	equ	0xFFD
  7039                           pclatu	equ	0xFFB
  7040                           pclath	equ	0xFFA
  7041                           tblptru	equ	0xFF8
  7042                           tblptrh	equ	0xFF7
  7043                           tblptrl	equ	0xFF6
  7044                           tablat	equ	0xFF5
  7045                           prodh	equ	0xFF4
  7046                           prodl	equ	0xFF3
  7047                           intcon	equ	0xFF2
  7048                           intcon2	equ	0xFF1
  7049                           intcon3	equ	0xFF0
  7050                           indf0	equ	0xFEF
  7051                           postinc0	equ	0xFEE
  7052                           fsr0h	equ	0xFEA
  7053                           fsr0l	equ	0xFE9
  7054                           wreg	equ	0xFE8
  7055                           fsr1h	equ	0xFE2
  7056                           fsr1l	equ	0xFE1
  7057                           indf2	equ	0xFDF
  7058                           postinc2	equ	0xFDE
  7059                           postdec2	equ	0xFDD
  7060                           fsr2h	equ	0xFDA
  7061                           fsr2l	equ	0xFD9
  7062                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    408
    Data        60
    BSS         3364
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     61      75
    BANK0           160      4     160
    BANK1           256      0     255
    BANK2           256      0     248
    BANK3           256      0     208
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S823$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), NULL(NULL[0]), 

    strncat@from	PTR const unsigned char  size(2) Largest target is 2
		 -> dataresult(BANK0[2]), 

    strncat@to	PTR unsigned char  size(2) Largest target is 1024
		 -> dataxstr(BIGRAM[1024]), 

    strncat@cp	PTR unsigned char  size(2) Largest target is 1024
		 -> dataxstr(BIGRAM[1024]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 1024
		 -> dataxstr(BIGRAM[1024]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), Absolute function(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), Absolute function(), 

    S1968$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 4
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), AutomaticReplyCallback(), UnconfirmedTransmissionCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow2Callback(), LORAWAN_ReceiveWindow1Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 4
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), AutomaticReplyCallback(), UnconfirmedTransmissionCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow2Callback(), LORAWAN_ReceiveWindow1Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    S823$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 0

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 0

    S823$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7205,)void  size(2) Largest target is 0

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7205,)void  size(2) Largest target is 0

    S283$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> Absolute function(), 

    S283$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> UpdateCfList@frequency(COMRAM[4]), ComputeMic@mic(COMRAM[4]), ExtractMic@mic(COMRAM[4]), aesBuffer(BANK2[16]), 
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@computedMic(COMRAM[4]), Channels(BANK2[224]), loRa.activationParameters.applicationEui(BANK1[8]), 
		 -> loRa.activationParameters.deviceEui(BANK1[8]), macBuffer(BIGRAM[271]), loRa.activationParameters(BANK1[105]), loRa(BANK1[245]), 
		 -> AESEncodeLoRa@useKey(COMRAM[16]), RadioConfiguration(BANK0[54]), AESCmac@x(COMRAM[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(COMRAM[1]), aesBuffer(BANK2[16]), Channels(BANK2[224]), macBuffer(BIGRAM[271]), 
		 -> loRa.activationParameters(BANK1[105]), loRa(BANK1[245]), GenerateSubkey@l(COMRAM[16]), AESCmac@x(COMRAM[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->_SwTimersInterrupt
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _EUSART1_Receive_ISR->_strncat

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2199
                                              2 BANK0      2     2      0
                      _EUSART1_Write
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2155
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     555
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          10    10      0    1751
                                             51 COMRAM    10    10      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0    1295
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_CallBack                                        0     0      0     940
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (8) _TMR_ISR_lora                                         2     2      0     940
                                             49 COMRAM     2     2      0
                  _SwTimersInterrupt
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (9) _TMR_SwapTimer                                        2     0      2     624
                                              8 COMRAM     2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     355
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _SwTimersInterrupt                                   17    13      4     316
                                             32 COMRAM    17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (10) _TMR_GetDeltaTime                                   24    20      4      69
                                              8 COMRAM    24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCB4_ISR                                            0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _IOCB4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DIO2_ISR_Lora                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT2_ISR                                             0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT2_CallBack                                        0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DIO1_ISR_Lora                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DIO0_ISR_Lora                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  3     3      0     456
                                              8 COMRAM     3     3      0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
                       _EUSART1_Read
              _EUSART1_RxDataHandler
                            _strncat
 ---------------------------------------------------------------------------------
 (7) _strncat                                              8     2      6     432
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Read                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART1_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR5_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_Read *
     _EUSART1_RxDataHandler *
     _strncat *
   _EUSART1_Transmit_ISR *
   _INT1_ISR *
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR *
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC *
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR *
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     A06      37       65.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D0      11       81.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F8       9       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      A0       5      100.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3D      4B       1       90.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3B2      12        0.0%
DATA                 0      0     DB8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 06 16:04:05 2020

                    __end_of_DIO3_ISR_Lora_Init 0C72                        _eusart1TxBufferRemaining 00EF  
                                             _c 006C                                               _n 0072  
            __size_of_IOCB4_SetInterruptHandler 000A                                    _TMR_ISR_lora 07DA  
                    ?_IOCB4_SetInterruptHandler 00FC                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                            _DIO2_ISR_Lora_Init 0B78                                 _timer1ReloadVal 00E7  
                                           _sub 03D0                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                   _INT1_CallBack 0AFA  
                           ?_DIO2_ISR_Lora_Init 0001                              __size_of_IOCB4_ISR 0020  
                                          l2540 092E                                            l2541 0952  
                                          l2542 0950                                            l2816 05C0  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          _LATE 000F8D                                            _TMR1 000FCE  
                                          _TMR5 000F4F                                            _WPUB 000F61  
                        ??_LORAWAN_PlatformInit 00FE                                   _INT2_CallBack 0ADA  
                                 _EUSART1_Write 0918                                            _loRa 0100  
                                          _main 05A2                                   ?_EUSART1_Read 0001  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          btemp 004C                                   __CFG_BORV$190 000000  
             __size_of_INT2_SetInterruptHandler 000A                       ?_INT2_SetInterruptHandler 00FC  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 00CC                                 _timer5ReloadVal 00E3  
                                 __CFG_IESO$OFF 000000                      ??_TMR1_SetInterruptHandler 00FE  
                        __size_of_TMR_SwapTimer 0044                                    ___param_bank 000000  
                          ??_DIO2_ISR_Lora_Init 00FE                        __size_of_SystemTimerInit 0006  
                              __end_of_INT1_ISR 0C44                                __end_of_INT2_ISR 0C3C  
                __size_of_OSCILLATOR_Initialize 000E                   __end_of_OSCILLATOR_Initialize 0BC4  
                                         l10632 091C                                           l12248 05C0  
                         _eusart1RxStatusBuffer 0046                                           ?_main 0001  
             __end_of_IOCB4_SetInterruptHandler 0BE4                                           _T1CON 000FCD  
                                         _LATC2 007C5A                                           _LATD3 007C63  
                                         u12740 05CE                                           _T5CON 000F4E  
                                         u12967 0610                                  __CFG_DEBUG$OFF 000000  
                                         _TMR1H 000FCF                                           _TMR1L 000FCE  
                                         _TMR5H 000F50                                           _TMR5L 000F4F  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                           _TXREG 000FAD  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 0986                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR1_ISR 0B68                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                ?_INT1_CallBack 0001                                  __CFG_EBTRB$OFF 000000  
                                         _datax 00A1                                           __rcon 0049  
                       __end_of_PIN_MANAGER_IOC 0C34                  ??_INT1_DefaultInterruptHandler 0001  
                                         _randx 00F0                              __CFG_MCLRE$EXTMCLR 000000  
                        _UpdateJoinSuccessState 000000                                  ?_INT2_CallBack 0001  
                      _INT1_SetInterruptHandler 0BEE                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 09E2                                           pclath 000FFA  
                                         tablat 000FF5                                           ltemp0 004C  
                                         ltemp1 0050                                           ltemp2 0054  
                                ??_EUSART1_Read 0001                                           ttemp0 004C  
                                         ttemp1 004F                                           ttemp2 0052  
                                         ttemp3 0055                                           status 000FD8  
                                         wtemp0 004C                                           wtemp1 004E  
                                         wtemp2 0050                                           wtemp3 0052  
                                         wtemp4 0054                                           wtemp5 0056  
                                         wtemp6 004D                                  __CFG_HFOFST$ON 000000  
                               __end_of_strncat 07DA      __end_of_EUSART1_DefaultFramingErrorHandler 0C7C  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 0C7A  
                               _TMR1_WriteTimer 0B38                                  __CFG_PBADEN$ON 000000  
               ??_IOCB4_DefaultInterruptHandler 0001                                 _TMR5_Initialize 0B1A  
                               __initialization 0660                     __size_of_DIO1_ISR_Lora_Init 0010  
                    __end_of_EUSART1_Initialize 0776                                    __end_of_main 0660  
                             ?_TMR_GetDeltaTime 0009                               __end_of_IOCB4_ISR 0ADA  
                   ?_INTERRUPT_InterruptManager 0001                              ??_TMR_GetDeltaTime 000D  
                                        ??_main 00FE                                   __activetblptr 000003  
                      __size_of_SPI2_Initialize 000E                           ?_EUSART1_Transmit_ISR 0001  
                                 _TMR_SwapTimer 08D4                  _LORAWAN_ReceiveWindow1Callback 000000  
                                        _ANSELA 000F38                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          _ANSELD 000F3B  
                                        _ANSELE 000F3C                                          _T1GCON 000FCC  
                                        _T5GCON 000F4D                         TMR1_WriteTimer@timerVal 0001  
                _LORAWAN_ReceiveWindow2Callback 000000                                          i2l2171 0834  
                                        i2l2251 0066                                          i2l2244 0040  
                                        i2l1525 0418                                          i2l1526 0492  
                                        i2l2246 004C                                          i2l1535 08E0  
                                        i2l2248 0058                                          i2l2531 088E  
                                        i2l2533 08CA                                  __CFG_WDTEN$OFF 000000  
                                        i2l1592 0588                                          i2l1593 04C6  
                                        i2l2554 0172                                          i2l2546 09B2  
                                        i2l2547 09AE                                          i2l1595 0522  
                                        i2l2627 0B4A                                          i2l1597 0586  
                                        i2l2559 0A52                                          i2l3391 07A2  
                                        i2l3392 0794                                          i2l3388 0784  
                                        i2l3389 0780                                          i2l8824 08F4  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _TRISC2 007CA2                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                      __end_of_DIO0_ISR_Lora_Init 0BA8  
                                        _STable FE67                                  __CFG_XINST$OFF 000000  
          __end_of_TMR1_DefaultInterruptHandler 0C74           __size_of_TMR1_DefaultInterruptHandler 0002  
                  _TMR1_DefaultInterruptHandler 0C72                                  __CFG_STVREN$ON 000000  
                      ?_EUSART1_SetErrorHandler 00FC                                          _length 006E  
                                        clear_0 06A8                                          clear_1 06BA  
                                        clear_2 06C6                                          clear_3 06D2  
                                        clear_4 06DE                                          clear_5 06EA  
              ??_EUSART1_SetOverrunErrorHandler 00FE                 ?_EUSART1_SetOverrunErrorHandler 00FC  
                   __size_of_DIO5_ISR_Lora_Init 0002            __end_of_INT2_DefaultInterruptHandler 0C78  
         __size_of_INT2_DefaultInterruptHandler 0002                    _INT2_DefaultInterruptHandler 0C76  
                               ??_INT1_CallBack 0001                               ??_SystemTimerInit 00FC  
                                ?_TMR_SwapTimer 0009                                    __mediumconst FE66  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                 ??_INT2_CallBack 0001  
                               ??_EUSART1_Write 00FC        TMR1_SetInterruptHandler@InterruptHandler 00FC  
     IOCB4_SetInterruptHandler@InterruptHandler 00FC        INT2_SetInterruptHandler@InterruptHandler 00FC  
      INT1_SetInterruptHandler@InterruptHandler 00FC                                ?_PIN_MANAGER_IOC 0001  
                       __end_of_TMR1_WriteTimer 0B54                                       ??_strncat 0007  
                               _eusart1RxBuffer 00A4                   __size_of_INTERRUPT_Initialize 0004  
                         __end_of_TMR1_CallBack 0A9A                                 _eusart1TxBuffer 00A5  
                              ?_TMR1_Initialize 0001                         __end_of_TMR5_Initialize 0B38  
                             _SYSTEM_Initialize 0A0C                                      __accesstop 0060  
                       __end_of__initialization 06F0                                       ?_INT1_ISR 0001  
                                     ?_INT2_ISR 0001                              ?_SYSTEM_Initialize 0001  
                                _maxPayloadSize FF77                                   ___rparam_used 000001  
                __size_of_EUSART1_RxDataHandler 0026                   __end_of_EUSART1_RxDataHandler 0A58  
                                __pcstackCOMRAM 0001                                      ___inthi_sp 0E4C  
                                  __pidataBANK0 0BC4                                    __pidataBANK3 0956  
                           ??_SYSTEM_Initialize 00FE                                _bitStatusbefore1 0094  
                              _bitStatusbefore2 0092                                _bitStatusbefore3 0090  
                              _bitStatusbefore4 008E                                _bitStatusbefore5 008C  
                              _bitStatusbefore6 008A                                _bitStatusbefore7 0088  
                    __end_of_DIO4_ISR_Lora_Init 0C70                                       ?_TMR1_ISR 0001  
                 ?_TMR1_DefaultInterruptHandler 0001                                 _spreadingFactor FF8E  
         __end_of_IOCB4_DefaultInterruptHandler 0C76          __size_of_IOCB4_DefaultInterruptHandler 0002  
                 _IOCB4_DefaultInterruptHandler 0C74                          _AutomaticReplyCallback 000000  
                   ??_IOCB4_SetInterruptHandler 00FE                            __end_of_EUSART1_Read 08D4  
                        ??_EUSART1_Transmit_ISR 0001                     __size_of_EXT_INT_Initialize 002A  
                                _datatobesolved 0042                              _DIO3_ISR_Lora_Init 0C70  
                       __size_of_TMR1_ReadTimer 0020                __end_of_INT2_SetInterruptHandler 0BEE  
                   __end_of_EUSART1_Receive_ISR 033A                   ?_INT2_DefaultInterruptHandler 0001  
                     __end_of_SYSTEM_Initialize 0A32                                   _eusart1RxHead 0048  
                                 _eusart1TxHead 00A7                               ??_SPI2_Initialize 00FC  
                           ?_DIO3_ISR_Lora_Init 0001                                   _eusart1RxTail 0047  
                                    __pbssBANK0 0060                                      __pbssBANK1 0100  
                                    __pbssBANK2 0200                                      __pbssBANK3 0300  
                                 _eusart1TxTail 00A6               _EUSART1_TxDefaultInterruptHandler 01FD  
               ??_EUSART1_SetRxInterruptHandler 00FE                                 __CFG_PLLCFG$OFF 000000  
                        __end_of_maxPayloadSize FF7F                                      ??_INT1_ISR 0001  
                                    ??_INT2_ISR 0001                              SwTimersInterrupt@i 0031  
                        __size_of_DIO0_ISR_Lora 0006                                      _dataresult 00E1  
                        __size_of_DIO1_ISR_Lora 0006                                      _bitStatus1 0084  
                                    _bitStatus2 0082                                      _bitStatus3 0080  
                                    _bitStatus4 007E                                      _bitStatus5 007C  
                                    _bitStatus6 007A                                      _bitStatus7 0078  
               __end_of_EUSART1_SetErrorHandler 0C2A                              __CFG_CCP2MX$PORTC1 000000  
                        __size_of_DIO2_ISR_Lora 0006                                      ??_TMR1_ISR 0034  
                            __CFG_CCP3MX$PORTB5 000000                            ??_DIO3_ISR_Lora_Init 00FC  
                             _TMR_ISR_Lora_Init 0B68          __end_of_EUSART1_SetFramingErrorHandler 0C20  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 0C16  
                               ??_TMR_SwapTimer 000B                              ?_TMR_ISR_Lora_Init 0001  
                    ??_INT1_SetInterruptHandler 00FE                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _OSCCON2 000FD2                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP2ADD 000F6E  
                                       _SSP2BUF 000F6F                             ??_TMR_ISR_Lora_Init 00FE  
                             __end_of_bandwidth FF8E                                ?_TMR1_WriteTimer 0001  
                         TMR_SwapTimer@timerVal 0009                                ?_TMR5_Initialize 0001  
                     _IOCB4_SetInterruptHandler 0BDA                       _AckRetransmissionCallback 000000  
                 __size_of_LORAWAN_PlatformInit 0022                                  _ticksAccounted 0064  
                       __end_of_spreadingFactor FF95                                 __CFG_PWRTEN$OFF 000000  
                                       __Hparam 0000                                         __Lparam 0000  
                     __end_of_TMR_ISR_Lora_Init 0B78                     __size_of_DIO2_ISR_Lora_Init 0010  
                                       _devAddr 00F4                                         __pcinit 0660  
                                       _appSKey 03A0                                         __ramtop 1000  
                      TMR1_ReadTimer@readValLow 0008                                _counterinterrupt 0096  
                                       __ptext0 05A2                                         __ptext1 0A0C  
                                       __ptext2 0B1A                                         __ptext3 09B6  
                                       __ptext4 0BA8                                         __ptext5 0836  
                                       __ptext6 0BB6                                         __ptext7 0A58  
                                       __ptext8 0B68                                         __ptext9 0BD0  
                                 _DIO0_ISR_Lora 0C56                  ??_TMR1_DefaultInterruptHandler 0001  
                                     _IOCB4_ISR 0ABA                       TMR1_ReadTimer@readValHigh 0007  
                                     _T1CONbits 000FCD                                         _counter 009F  
                         _OSCILLATOR_Initialize 0BB6                                         _readurt 0200  
                  __end_of_macEndDevCmdReplyLen FF9C               __size_of_TMR1_SetInterruptHandler 000A  
                                 _DIO1_ISR_Lora 0C50                              _EUSART1_Initialize 06F6  
                      ??_PIN_MANAGER_Initialize 00FE                       ?_TMR1_SetInterruptHandler 00FC  
                                       _nwkSKey 03B0                                       _T5CONbits 000F4E  
                 ??_EUSART1_DefaultErrorHandler 0001                       __size_of_TMR_GetDeltaTime 016A  
                                 _DIO2_ISR_Lora 0C4A                      __size_of_SYSTEM_Initialize 0026  
                                       _strncat 0776                            end_of_initialization 06F0  
                      _INT2_SetInterruptHandler 0BE4                             ?_EUSART1_Initialize 0001  
                         _RADIO_WatchdogTimeout 000000                  ??_INT2_DefaultInterruptHandler 0001  
                                    _modulation FF67                       _LORAWAN_LinkCheckCallback 000000  
                   _EUSART1_OverrunErrorHandler 01F7                                       i2u1020_45 020A  
                                     i2u1021_45 0228                                       i2u1022_45 02B6  
                                     i2u1014_48 0102                                       i2u1014_49 0116  
                                     i2u1023_45 02D2                                       i2u1016_48 0130  
                                     i2u1016_49 0144                                       i2u1018_48 015E  
                                     i2u1019_45 01EC                                       i2u1263_48 0070  
                                     i2u1263_49 0084                                       i2u1266_48 008E  
                                     i2u1266_49 00A2                      __end_of_DIO1_ISR_Lora_Init 0B98  
                                    _ticksAdded 0068           __end_of_EUSART1_SetRxInterruptHandler 0C0C  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 0C02  
                                       postdec2 000FDD                                 _SystemTimerInit 0C44  
                                       postinc0 000FEE                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 004A                            ??_EUSART1_Initialize 00FE  
                            _DIO0_ISR_Lora_Init 0B98                                  ?_DIO0_ISR_Lora 0001  
                         _INT1_InterruptHandler 00ED                                       _PORTBbits 000F81  
                  SwTimersInterrupt@timeElapsed 0029                                      ?_IOCB4_ISR 0001  
                                ?_DIO1_ISR_Lora 0001                                  _TMR1_ReadTimer 0A9A  
                                    _txPower433 FF9C                                      _txPower868 FFA2  
                           ?_DIO0_ISR_Lora_Init 0001                                  ?_DIO2_ISR_Lora 0001  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 00FC  
                                _localDioStatus 004B                                    _EUSART1_Read 088A  
                             __size_of_INT1_ISR 0008                               __size_of_INT2_ISR 0008  
          __size_of_EUSART1_DefaultErrorHandler 0006                            ??_DIO0_ISR_Lora_Init 00FE  
                                __end_of_STable FF67                      __size_of_TMR_ISR_Lora_Init 0010  
                  __end_of_INTERRUPT_Initialize 0C6C                      __end_of_DIO5_ISR_Lora_Init 0C6E  
                                 ?_TMR_ISR_lora 0001                               __size_of_TMR1_ISR 0014  
                        ?_OSCILLATOR_Initialize 0001                          __end_of_TMR1_ReadTimer 0ABA  
                               _SPI2_Initialize 0BA8                             start_initialization 0660  
                            _DIO4_ISR_Lora_Init 0C6E                 __size_of_PIN_MANAGER_Initialize 0054  
                         __end_of_INT1_CallBack 0B1A   EUSART1_SetRxInterruptHandler@interruptHandler 00FC  
 EUSART1_SetTxInterruptHandler@interruptHandler 00FC                           __end_of_INT2_CallBack 0AFA  
                         __end_of_EUSART1_Write 0956                             ?_DIO4_ISR_Lora_Init 0001  
                       __end_of_SystemTimerInit 0C4A                             TMR_SwapTimer@oldVal 009A  
                      __size_of_PIN_MANAGER_IOC 000A                             TMR_SwapTimer@retVal 0098  
                      __size_of_TMR1_Initialize 002C                            _macEndDevCmdReplyLen FF95  
                         _EUSART1_RxDataHandler 0A32                  ?_EUSART1_SetRxInterruptHandler 00FC  
                                ??_TMR_ISR_lora 0032                                 ??_DIO0_ISR_Lora 0001  
                                   __pdataBANK0 00F0                                     __pdataBANK3 03A0  
        SwTimersInterrupt@ticksToNextTimerEvent 002D                            ??_DIO4_ISR_Lora_Init 00FC  
                    __end_of_EXT_INT_Initialize 0A0C                              _RADIO_RxFSKTimeout 000000  
                        __size_of_TMR1_CallBack 0020                                 ??_DIO1_ISR_Lora 0001  
                        TMR_GetDeltaTime@retVal 0060                                 ?_TMR1_ReadTimer 0001  
                                _eusart1RxCount 00A3                                     ??_IOCB4_ISR 0001  
                        TMR_GetDeltaTime@tmrVal 009C                                     __pbssBIGRAM 03D0  
                               ??_DIO2_ISR_Lora 0001                                     __pbssCOMRAM 003E  
                    __end_of_DefaultChannels433 FFD2                      __end_of_DefaultChannels868 FFFC  
             _EUSART1_RxDefaultInterruptHandler 01FB                   __size_of_EUSART1_Transmit_ISR 0030  
                                 __pcstackBANK0 00FC                                _TMR_GetDeltaTime 033A  
               _UnconfirmedTransmissionCallback 000000                                       _aesBuffer 02E8  
               ??_EUSART1_SetTxInterruptHandler 00FE                ??_EUSART1_SetFramingErrorHandler 00FE  
               ?_EUSART1_SetFramingErrorHandler 00FC                    __size_of_EUSART1_Receive_ISR 0266  
                         _INT2_InterruptHandler 00EB                                       _bandwidth FF87  
                                     __pnvBANK0 00E3                                       __pnvBANK1 01F5  
                                     _character 009E                          _PIN_MANAGER_Initialize 0836  
                                     _bitStatus 0086                                       _macBuffer 0CC7  
                                     _dioStatus 00AA                               _SwTimersInterrupt 04A4  
                                     __pintcode 0008                __end_of_TMR1_SetInterruptHandler 0BDA  
                                 __pmediumconst FE66                                     _dataxsolved 00A0  
                       __end_of_SPI2_Initialize 0BB6                              ?_SwTimersInterrupt 0021  
                   __size_of_DIO3_ISR_Lora_Init 0002                    ??_INTERRUPT_InterruptManager 0034  
                              __CFG_PRICLKEN$ON 000000                    __end_of_LORAWAN_PlatformInit 0A7A  
                    ??_INT2_SetInterruptHandler 00FE                                        _BAUDCON1 000FB8  
    __end_of_EUSART1_DefaultOverrunErrorHandler 0C62     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 0C5C                             ??_SwTimersInterrupt 0025  
                             _DutyCycleCallback 000000                            _EUSART1_ErrorHandler 01F5  
                         __end_of_TMR_SwapTimer 0918                         _EUSART1_SetErrorHandler 0C20  
                                   strncat@from 0003                                     strncat@size 0005  
                                      ?_strncat 0001                            _INTERRUPT_Initialize 0C68  
                                 _TMR1_CallBack 0A7A                                        _INT1_ISR 0C3C  
                                      _INT2_ISR 0C34                                        _IOCBbits 000F62  
       EUSART1_SetErrorHandler@interruptHandler 00FC               __size_of_INT1_SetInterruptHandler 000A  
                          __end_of_rxWindowSize FF87                       ?_INT1_SetInterruptHandler 00FC  
                              ?_SystemTimerInit 0001                                       _reloadVal 0044  
                                      _PIE1bits 000F9D                       __end_of_SwTimersInterrupt 05A2  
                      __size_of_TMR1_WriteTimer 001C             __size_of_INTERRUPT_InterruptManager 00C4  
                    __end_of_DIO2_ISR_Lora_Init 0B88                                        _PIR1bits 000F9E  
                                      _PIR5bits 000F7E                                        i2u900_40 07C4  
                                      i2u903_48 0A88                          ?_EUSART1_RxDataHandler 0001  
                                      i2u891_48 0B08                        __size_of_TMR5_Initialize 001E  
                                      i2u893_48 0AE8                                        _RCONbits 000FD0  
                                      i2u895_48 0AC8                                       _rxPayload 003E  
                              __CFG_WDTPS$32768 000000                                        _SSP2CON1 000F6C  
                                      _TMR1_ISR 0B54                                        _SSP2STAT 000F6D  
                             ??_PIN_MANAGER_IOC 0001                               ??_TMR1_Initialize 00FE  
                            _DIO1_ISR_Lora_Init 0B88                                        _Channels 0208  
                           ?_DIO1_ISR_Lora_Init 0001                                     _INTCON2bits 000FF1  
                                   _INTCON3bits 000FF0                                       copy_data0 0674  
                                     copy_data1 0694                           ?_INTERRUPT_Initialize 0001  
                                ?_TMR1_CallBack 0001                            __end_of_TMR_ISR_lora 0836  
                         EUSART1_Read@readValue 0001           __end_of_EUSART1_SetTxInterruptHandler 0C02  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 0BF8  
                                      __Hrparam 0000                                        __Lrparam 0000  
                          ??_DIO1_ISR_Lora_Init 00FE                              __CFG_BOREN$SBORDIS 000000  
                         TMR1_ReadTimer@readVal 0005                       _ticksToScheduledInterrupt 00F8  
                             __CFG_P2BMX$PORTD2 000000                                ?_SPI2_Initialize 0001  
                       ??_OSCILLATOR_Initialize 00FC                     __size_of_EUSART1_Initialize 0080  
                      _TMR1_SetInterruptHandler 0BD0                          _IOCB4_InterruptHandler 00E9  
                                   _radioBuffer 0BB8                           _TMR1_InterruptHandler 00E5  
                     ??_EUSART1_SetErrorHandler 00FE             __end_of_EUSART1_DefaultErrorHandler 0C68  
                   _EUSART1_DefaultErrorHandler 0C62                                  _rxWindowOffset FF6F  
                                      _dataxstr 07B8                                 _allocatedTimers 004A  
                ?_IOCB4_DefaultInterruptHandler 0001                              _DIO5_ISR_Lora_Init 0C6C  
                                      __ptext10 0C44                                        __ptext11 0C6C  
                                      __ptext20 0BE4                                        __ptext12 0C6E  
                                      __ptext21 0BEE                                        __ptext13 0C70  
                                    _T1GCONbits 000FCC                                        __ptext30 0B54  
                                      __ptext22 06F6                                        __ptext14 0B78  
                                      __ptext31 0A7A                                        __ptext23 0BF8  
                                      __ptext15 0BDA                                        __ptext40 0ABA  
                                      __ptext32 0C72                                        __ptext24 0C02  
                                      __ptext16 0B88                                        __ptext41 0C4A  
                                      __ptext33 07DA                                        __ptext25 0C0C  
                                      __ptext17 0B98                                        __ptext50 0C78  
                                      __ptext42 0C74                                        __ptext34 08D4  
                                      __ptext26 0C16                                        __ptext18 0C68  
                                      __ptext51 0986                                        __ptext43 0C34  
                                      __ptext35 0B38                                        __ptext27 0C20  
                                      __ptext19 09E2                                        __ptext52 00D4  
                                      __ptext44 0ADA                                        __ptext36 04A4  
                                      __ptext28 0918                                        __ptext53 0776  
                                      __ptext45 0C50                                        __ptext37 033A  
                                      __ptext54 088A                                        __ptext46 0C76  
                                      __ptext38 0A9A                                        __ptext55 0C5C  
                                      __ptext47 0C3C                                        __ptext39 0C2A  
                                      __ptext56 0C7A                                        __ptext48 0AFA  
                                      __ptext57 0C62                                        __ptext49 0C56  
                                      __ptext58 0A32                                        __ptext59 0000  
                                  _SSP2CON1bits 000F6C                             GenerateSubkey@F7103 03C0  
                              __size_of_strncat 0064                                        _countera 0074  
                                      _counterx 0076                             ?_DIO5_ISR_Lora_Init 0001  
                                 __size_of_main 00BE                                      _T5GCONbits 000F4D  
                          _LORAWAN_PlatformInit 0A58                                 _FskSyncWordBuff FFFC  
                                 _timerOverflow 00A9                      __size_of_SwTimersInterrupt 00FE  
                   __size_of_DIO0_ISR_Lora_Init 0010  EUSART1_SetOverrunErrorHandler@interruptHandler 00FC  
                      __end_of_TMR_GetDeltaTime 04A4                                        _swTimers 0300  
                              ??_TMR1_ReadTimer 0003                                        _position 0070  
            __end_of_INTERRUPT_InterruptManager 00CC                      _INTERRUPT_InterruptManager 0008  
                             ??_TMR1_WriteTimer 0003                     _EUSART1_FramingErrorHandler 01F9  
                           _EUSART1_Receive_ISR 00D4                                    _SSP2STATbits 000F6D  
                          ??_DIO5_ISR_Lora_Init 00FC            __end_of_INT1_DefaultInterruptHandler 0C7A  
         __size_of_INT1_DefaultInterruptHandler 0002                    _INT1_DefaultInterruptHandler 0C78  
                        __end_of_rxWindowOffset FF77                               ??_TMR5_Initialize 00FC  
                            __end_of_modulation FF6F                                   __roundCounter 00A8  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 00FC  
                               ??_TMR1_CallBack 0034                              _EXT_INT_Initialize 09E2  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 0001  
                         ?_LORAWAN_PlatformInit 0001                         ?_PIN_MANAGER_Initialize 0001  
                            _DefaultChannels433 FFA8                              _DefaultChannels868 FFD2  
                           ?_EXT_INT_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 0C16  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 0C0C  
                                    _RCSTA1bits 000FAB                                       strncat@cp 0007  
                                     strncat@to 0001                    __end_of_EUSART1_Transmit_ISR 09B6  
                            __end_of_txPower433 FFA2                              __end_of_txPower868 FFA8  
                        __size_of_INT1_CallBack 0020  EUSART1_SetFramingErrorHandler@interruptHandler 00FC  
                ?_EUSART1_SetTxInterruptHandler 00FC                          __size_of_INT2_CallBack 0020  
                   __size_of_DIO4_ISR_Lora_Init 0002                          __size_of_EUSART1_Write 003E  
                            _eusart1RxLastError 00A2                           __end_of_DIO0_ISR_Lora 0C5C  
                          ??_EXT_INT_Initialize 00FE                                    _rxWindowSize FF7F  
                 ?_INT1_DefaultInterruptHandler 0001                           __end_of_DIO1_ISR_Lora 0C56  
              __end_of_INT1_SetInterruptHandler 0BF8                           __size_of_TMR_ISR_lora 005C  
                             __CFG_T3CMX$PORTC0 000000                           __end_of_DIO2_ISR_Lora 0C50  
                       __end_of_FskSyncWordBuff FFFF                           ??_EUSART1_Receive_ISR 0009  
                __end_of_PIN_MANAGER_Initialize 088A                               __CFG_FOSC$INTIO67 000000  
                               _PIN_MANAGER_IOC 0C2A                         ??_EUSART1_RxDataHandler 0001  
                               _TMR1_Initialize 09B6                              _RadioConfiguration 00AB  
