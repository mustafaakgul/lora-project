

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Feb 05 17:41:41 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	text96,global,reloc=2,class=CODE,delta=1
   114                           	psect	text97,global,reloc=2,class=CODE,delta=1
   115                           	psect	text98,global,reloc=2,class=CODE,delta=1
   116                           	psect	text99,global,reloc=2,class=CODE,delta=1
   117                           	psect	text100,global,reloc=2,class=CODE,delta=1
   118                           	psect	text101,global,reloc=2,class=CODE,delta=1
   119                           	psect	text102,global,reloc=2,class=CODE,delta=1
   120                           	psect	text103,global,reloc=2,class=CODE,delta=1
   121                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   122                           	psect	text105,global,reloc=2,class=CODE,delta=1
   123                           	psect	text106,global,reloc=2,class=CODE,delta=1
   124                           	psect	text107,global,reloc=2,class=CODE,delta=1
   125                           	psect	text108,global,reloc=2,class=CODE,delta=1
   126                           	psect	text109,global,reloc=2,class=CODE,delta=1
   127                           	psect	text110,global,reloc=2,class=CODE,delta=1
   128                           	psect	text111,global,reloc=2,class=CODE,delta=1
   129                           	psect	text112,global,reloc=2,class=CODE,delta=1
   130                           	psect	text113,global,reloc=2,class=CODE,delta=1
   131                           	psect	text114,global,reloc=2,class=CODE,delta=1
   132                           	psect	text115,global,reloc=2,class=CODE,delta=1
   133                           	psect	text116,global,reloc=2,class=CODE,delta=1
   134                           	psect	text117,global,reloc=2,class=CODE,delta=1
   135                           	psect	text118,global,reloc=2,class=CODE,delta=1
   136                           	psect	text119,global,reloc=2,class=CODE,delta=1
   137                           	psect	text120,global,reloc=2,class=CODE,delta=1
   138                           	psect	text121,global,reloc=2,class=CODE,delta=1
   139                           	psect	text122,global,reloc=2,class=CODE,delta=1
   140                           	psect	text123,global,reloc=2,class=CODE,delta=1
   141                           	psect	text124,global,reloc=2,class=CODE,delta=1
   142                           	psect	text125,global,reloc=2,class=CODE,delta=1
   143                           	psect	text126,global,reloc=2,class=CODE,delta=1
   144                           	psect	text127,global,reloc=2,class=CODE,delta=1
   145                           	psect	text128,global,reloc=2,class=CODE,delta=1
   146                           	psect	text129,global,reloc=2,class=CODE,delta=1
   147                           	psect	text130,global,reloc=2,class=CODE,delta=1
   148                           	psect	text131,global,reloc=2,class=CODE,delta=1
   149                           	psect	text132,global,reloc=2,class=CODE,delta=1
   150                           	psect	text133,global,reloc=2,class=CODE,delta=1
   151                           	psect	text134,global,reloc=2,class=CODE,delta=1
   152                           	psect	text135,global,reloc=2,class=CODE,delta=1
   153                           	psect	text136,global,reloc=2,class=CODE,delta=1
   154                           	psect	text137,global,reloc=2,class=CODE,delta=1
   155                           	psect	text138,global,reloc=2,class=CODE,delta=1
   156                           	psect	text139,global,reloc=2,class=CODE,delta=1
   157                           	psect	text140,global,reloc=2,class=CODE,delta=1
   158                           	psect	text141,global,reloc=2,class=CODE,delta=1
   159                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   160                           	psect	text142,global,reloc=2,class=CODE,delta=1
   161                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   162                           	dabs	1,0x400,48,_BDT
   163                           	dabs	1,0x500,64,_cdc_data_tx
   164                           	dabs	1,0x438,8,_CtrlTrfData
   165                           	dabs	1,0x430,8,_SetupPkt
   166                           	dabs	1,0x540,64,_cdc_data_rx
   167  0000                     
   168                           	psect	idataBANK0
   169  005FF8                     __pidataBANK0:
   170                           	opt stack 0
   171                           
   172                           ;initializer for _selectedFont
   173  005FF8  01                 	db	low _OledFont0
   174  005FF9  76                 	db	high _OledFont0
   175                           
   176                           ;initializer for _Contrast_level
   177  005FFA  13                 	db	19
   178                           
   179                           ;initializer for _dataRateSelection
   180  005FFB  02                 	db	2
   181                           
   182                           ;initializer for _dataRateValue
   183  005FFC  02                 	db	2
   184                           
   185                           ;initializer for _exitUSB
   186  005FFD  01                 	db	1
   187                           
   188                           ;initializer for _menuTimeout
   189  005FFE  01                 	db	1
   190                           
   191                           ;initializer for _moteState
   192  005FFF  01                 	db	1
   193                           
   194                           ;initializer for _periodicState
   195  006000  03                 	db	3
   196                           
   197                           ;initializer for _periodicTimerValue
   198  006001  03                 	db	3
   199                           
   200                           ;initializer for _periodicUpValue
   201  006002  03                 	db	3
   202                           
   203                           	psect	mediumconst
   204  0075F8                     __pmediumconst:
   205                           	opt stack 0
   206  0075F8  00                 	db	0
   207  0075F9                     _USB_SD_Ptr:
   208                           	opt stack 0
   209  0075F9  BE                 	db	low _sd000
   210  0075FA  79                 	db	high _sd000
   211  0075FB  44                 	db	low _sd001
   212  0075FC  79                 	db	high _sd001
   213  0075FD  78                 	db	low _sd002
   214  0075FE  79                 	db	high _sd002
   215  0075FF                     __end_of_USB_SD_Ptr:
   216                           	opt stack 0
   217  0075FF                     _USB_CD_Ptr:
   218                           	opt stack 0
   219  0075FF  01                 	db	low _configDescriptor1
   220  007600  79                 	db	high _configDescriptor1
   221  007601                     __end_of_USB_CD_Ptr:
   222                           	opt stack 0
   223  007601                     _OledFont0:
   224                           	opt stack 0
   225  007601  00                 	db	0
   226  007602  00                 	db	0
   227  007603  00                 	db	0
   228  007604  00                 	db	0
   229  007605  00                 	db	0
   230  007606  00                 	db	0
   231  007607  00                 	db	0
   232  007608  00                 	db	0
   233  007609  00                 	db	0
   234  00760A  00                 	db	0
   235  00760B  00                 	db	0
   236  00760C  5F                 	db	95
   237  00760D  00                 	db	0
   238  00760E  00                 	db	0
   239  00760F  00                 	db	0
   240  007610  00                 	db	0
   241  007611  00                 	db	0
   242  007612  00                 	db	0
   243  007613  03                 	db	3
   244  007614  00                 	db	0
   245  007615  03                 	db	3
   246  007616  00                 	db	0
   247  007617  00                 	db	0
   248  007618  00                 	db	0
   249  007619  64                 	db	100
   250  00761A  3C                 	db	60
   251  00761B  26                 	db	38
   252  00761C  64                 	db	100
   253  00761D  3C                 	db	60
   254  00761E  26                 	db	38
   255  00761F  24                 	db	36
   256  007620  00                 	db	0
   257  007621  26                 	db	38
   258  007622  49                 	db	73
   259  007623  49                 	db	73
   260  007624  7F                 	db	127
   261  007625  49                 	db	73
   262  007626  49                 	db	73
   263  007627  32                 	db	50
   264  007628  00                 	db	0
   265  007629  42                 	db	66
   266  00762A  25                 	db	37
   267  00762B  12                 	db	18
   268  00762C  08                 	db	8
   269  00762D  24                 	db	36
   270  00762E  52                 	db	82
   271  00762F  21                 	db	33
   272  007630  00                 	db	0
   273  007631  20                 	db	32
   274  007632  50                 	db	80
   275  007633  4E                 	db	78
   276  007634  55                 	db	85
   277  007635  22                 	db	34
   278  007636  58                 	db	88
   279  007637  28                 	db	40
   280  007638  00                 	db	0
   281  007639  00                 	db	0
   282  00763A  00                 	db	0
   283  00763B  00                 	db	0
   284  00763C  03                 	db	3
   285  00763D  00                 	db	0
   286  00763E  00                 	db	0
   287  00763F  00                 	db	0
   288  007640  00                 	db	0
   289  007641  00                 	db	0
   290  007642  00                 	db	0
   291  007643  1C                 	db	28
   292  007644  22                 	db	34
   293  007645  41                 	db	65
   294  007646  00                 	db	0
   295  007647  00                 	db	0
   296  007648  00                 	db	0
   297  007649  00                 	db	0
   298  00764A  00                 	db	0
   299  00764B  00                 	db	0
   300  00764C  41                 	db	65
   301  00764D  22                 	db	34
   302  00764E  1C                 	db	28
   303  00764F  00                 	db	0
   304  007650  00                 	db	0
   305  007651  00                 	db	0
   306  007652  15                 	db	21
   307  007653  15                 	db	21
   308  007654  0E                 	db	14
   309  007655  0E                 	db	14
   310  007656  15                 	db	21
   311  007657  15                 	db	21
   312  007658  00                 	db	0
   313  007659  00                 	db	0
   314  00765A  08                 	db	8
   315  00765B  08                 	db	8
   316  00765C  3E                 	db	62
   317  00765D  08                 	db	8
   318  00765E  08                 	db	8
   319  00765F  00                 	db	0
   320  007660  00                 	db	0
   321  007661  00                 	db	0
   322  007662  00                 	db	0
   323  007663  00                 	db	0
   324  007664  50                 	db	80
   325  007665  30                 	db	48
   326  007666  00                 	db	0
   327  007667  00                 	db	0
   328  007668  00                 	db	0
   329  007669  00                 	db	0
   330  00766A  08                 	db	8
   331  00766B  08                 	db	8
   332  00766C  08                 	db	8
   333  00766D  08                 	db	8
   334  00766E  08                 	db	8
   335  00766F  00                 	db	0
   336  007670  00                 	db	0
   337  007671  00                 	db	0
   338  007672  00                 	db	0
   339  007673  00                 	db	0
   340  007674  40                 	db	64
   341  007675  00                 	db	0
   342  007676  00                 	db	0
   343  007677  00                 	db	0
   344  007678  00                 	db	0
   345  007679  40                 	db	64
   346  00767A  20                 	db	32
   347  00767B  10                 	db	16
   348  00767C  08                 	db	8
   349  00767D  04                 	db	4
   350  00767E  02                 	db	2
   351  00767F  01                 	db	1
   352  007680  00                 	db	0
   353  007681  00                 	db	0
   354  007682  3E                 	db	62
   355  007683  41                 	db	65
   356  007684  41                 	db	65
   357  007685  41                 	db	65
   358  007686  3E                 	db	62
   359  007687  00                 	db	0
   360  007688  00                 	db	0
   361  007689  00                 	db	0
   362  00768A  00                 	db	0
   363  00768B  41                 	db	65
   364  00768C  7F                 	db	127
   365  00768D  40                 	db	64
   366  00768E  00                 	db	0
   367  00768F  00                 	db	0
   368  007690  00                 	db	0
   369  007691  00                 	db	0
   370  007692  42                 	db	66
   371  007693  61                 	db	97
   372  007694  51                 	db	81
   373  007695  49                 	db	73
   374  007696  6E                 	db	110
   375  007697  00                 	db	0
   376  007698  00                 	db	0
   377  007699  00                 	db	0
   378  00769A  22                 	db	34
   379  00769B  41                 	db	65
   380  00769C  49                 	db	73
   381  00769D  49                 	db	73
   382  00769E  36                 	db	54
   383  00769F  00                 	db	0
   384  0076A0  00                 	db	0
   385  0076A1  00                 	db	0
   386  0076A2  18                 	db	24
   387  0076A3  14                 	db	20
   388  0076A4  12                 	db	18
   389  0076A5  7F                 	db	127
   390  0076A6  10                 	db	16
   391  0076A7  00                 	db	0
   392  0076A8  00                 	db	0
   393  0076A9  00                 	db	0
   394  0076AA  27                 	db	39
   395  0076AB  49                 	db	73
   396  0076AC  49                 	db	73
   397  0076AD  49                 	db	73
   398  0076AE  71                 	db	113
   399  0076AF  00                 	db	0
   400  0076B0  00                 	db	0
   401  0076B1  00                 	db	0
   402  0076B2  3C                 	db	60
   403  0076B3  4A                 	db	74
   404  0076B4  49                 	db	73
   405  0076B5  48                 	db	72
   406  0076B6  70                 	db	112
   407  0076B7  00                 	db	0
   408  0076B8  00                 	db	0
   409  0076B9  00                 	db	0
   410  0076BA  43                 	db	67
   411  0076BB  21                 	db	33
   412  0076BC  11                 	db	17
   413  0076BD  0D                 	db	13
   414  0076BE  03                 	db	3
   415  0076BF  00                 	db	0
   416  0076C0  00                 	db	0
   417  0076C1  00                 	db	0
   418  0076C2  36                 	db	54
   419  0076C3  49                 	db	73
   420  0076C4  49                 	db	73
   421  0076C5  49                 	db	73
   422  0076C6  36                 	db	54
   423  0076C7  00                 	db	0
   424  0076C8  00                 	db	0
   425  0076C9  00                 	db	0
   426  0076CA  06                 	db	6
   427  0076CB  09                 	db	9
   428  0076CC  49                 	db	73
   429  0076CD  29                 	db	41
   430  0076CE  1E                 	db	30
   431  0076CF  00                 	db	0
   432  0076D0  00                 	db	0
   433  0076D1  00                 	db	0
   434  0076D2  00                 	db	0
   435  0076D3  00                 	db	0
   436  0076D4  12                 	db	18
   437  0076D5  00                 	db	0
   438  0076D6  00                 	db	0
   439  0076D7  00                 	db	0
   440  0076D8  00                 	db	0
   441  0076D9  00                 	db	0
   442  0076DA  00                 	db	0
   443  0076DB  00                 	db	0
   444  0076DC  52                 	db	82
   445  0076DD  30                 	db	48
   446  0076DE  00                 	db	0
   447  0076DF  00                 	db	0
   448  0076E0  00                 	db	0
   449  0076E1  00                 	db	0
   450  0076E2  00                 	db	0
   451  0076E3  08                 	db	8
   452  0076E4  14                 	db	20
   453  0076E5  14                 	db	20
   454  0076E6  22                 	db	34
   455  0076E7  00                 	db	0
   456  0076E8  00                 	db	0
   457  0076E9  00                 	db	0
   458  0076EA  14                 	db	20
   459  0076EB  14                 	db	20
   460  0076EC  14                 	db	20
   461  0076ED  14                 	db	20
   462  0076EE  14                 	db	20
   463  0076EF  14                 	db	20
   464  0076F0  00                 	db	0
   465  0076F1  00                 	db	0
   466  0076F2  00                 	db	0
   467  0076F3  22                 	db	34
   468  0076F4  14                 	db	20
   469  0076F5  14                 	db	20
   470  0076F6  08                 	db	8
   471  0076F7  00                 	db	0
   472  0076F8  00                 	db	0
   473  0076F9  00                 	db	0
   474  0076FA  02                 	db	2
   475  0076FB  01                 	db	1
   476  0076FC  59                 	db	89
   477  0076FD  05                 	db	5
   478  0076FE  02                 	db	2
   479  0076FF  00                 	db	0
   480  007700  00                 	db	0
   481  007701  3E                 	db	62
   482  007702  41                 	db	65
   483  007703  5D                 	db	93
   484  007704  55                 	db	85
   485  007705  4D                 	db	77
   486  007706  51                 	db	81
   487  007707  2E                 	db	46
   488  007708  00                 	db	0
   489  007709  40                 	db	64
   490  00770A  7C                 	db	124
   491  00770B  4A                 	db	74
   492  00770C  09                 	db	9
   493  00770D  4A                 	db	74
   494  00770E  7C                 	db	124
   495  00770F  40                 	db	64
   496  007710  00                 	db	0
   497  007711  41                 	db	65
   498  007712  7F                 	db	127
   499  007713  49                 	db	73
   500  007714  49                 	db	73
   501  007715  49                 	db	73
   502  007716  49                 	db	73
   503  007717  36                 	db	54
   504  007718  00                 	db	0
   505  007719  1C                 	db	28
   506  00771A  22                 	db	34
   507  00771B  41                 	db	65
   508  00771C  41                 	db	65
   509  00771D  41                 	db	65
   510  00771E  41                 	db	65
   511  00771F  22                 	db	34
   512  007720  00                 	db	0
   513  007721  41                 	db	65
   514  007722  7F                 	db	127
   515  007723  41                 	db	65
   516  007724  41                 	db	65
   517  007725  41                 	db	65
   518  007726  22                 	db	34
   519  007727  1C                 	db	28
   520  007728  00                 	db	0
   521  007729  41                 	db	65
   522  00772A  7F                 	db	127
   523  00772B  49                 	db	73
   524  00772C  49                 	db	73
   525  00772D  5D                 	db	93
   526  00772E  41                 	db	65
   527  00772F  63                 	db	99
   528  007730  00                 	db	0
   529  007731  41                 	db	65
   530  007732  7F                 	db	127
   531  007733  49                 	db	73
   532  007734  09                 	db	9
   533  007735  1D                 	db	29
   534  007736  01                 	db	1
   535  007737  03                 	db	3
   536  007738  00                 	db	0
   537  007739  1C                 	db	28
   538  00773A  22                 	db	34
   539  00773B  41                 	db	65
   540  00773C  49                 	db	73
   541  00773D  49                 	db	73
   542  00773E  3A                 	db	58
   543  00773F  08                 	db	8
   544  007740  00                 	db	0
   545  007741  41                 	db	65
   546  007742  7F                 	db	127
   547  007743  08                 	db	8
   548  007744  08                 	db	8
   549  007745  08                 	db	8
   550  007746  7F                 	db	127
   551  007747  41                 	db	65
   552  007748  00                 	db	0
   553  007749  00                 	db	0
   554  00774A  41                 	db	65
   555  00774B  41                 	db	65
   556  00774C  7F                 	db	127
   557  00774D  41                 	db	65
   558  00774E  41                 	db	65
   559  00774F  00                 	db	0
   560  007750  00                 	db	0
   561  007751  30                 	db	48
   562  007752  40                 	db	64
   563  007753  41                 	db	65
   564  007754  41                 	db	65
   565  007755  3F                 	db	63
   566  007756  01                 	db	1
   567  007757  01                 	db	1
   568  007758  00                 	db	0
   569  007759  41                 	db	65
   570  00775A  7F                 	db	127
   571  00775B  08                 	db	8
   572  00775C  0C                 	db	12
   573  00775D  12                 	db	18
   574  00775E  61                 	db	97
   575  00775F  41                 	db	65
   576  007760  00                 	db	0
   577  007761  41                 	db	65
   578  007762  7F                 	db	127
   579  007763  41                 	db	65
   580  007764  40                 	db	64
   581  007765  40                 	db	64
   582  007766  40                 	db	64
   583  007767  60                 	db	96
   584  007768  00                 	db	0
   585  007769  41                 	db	65
   586  00776A  7F                 	db	127
   587  00776B  42                 	db	66
   588  00776C  0C                 	db	12
   589  00776D  42                 	db	66
   590  00776E  7F                 	db	127
   591  00776F  41                 	db	65
   592  007770  00                 	db	0
   593  007771  41                 	db	65
   594  007772  7F                 	db	127
   595  007773  42                 	db	66
   596  007774  0C                 	db	12
   597  007775  11                 	db	17
   598  007776  7F                 	db	127
   599  007777  01                 	db	1
   600  007778  00                 	db	0
   601  007779  1C                 	db	28
   602  00777A  22                 	db	34
   603  00777B  41                 	db	65
   604  00777C  41                 	db	65
   605  00777D  41                 	db	65
   606  00777E  22                 	db	34
   607  00777F  1C                 	db	28
   608  007780  00                 	db	0
   609  007781  41                 	db	65
   610  007782  7F                 	db	127
   611  007783  49                 	db	73
   612  007784  09                 	db	9
   613  007785  09                 	db	9
   614  007786  09                 	db	9
   615  007787  06                 	db	6
   616  007788  00                 	db	0
   617  007789  0C                 	db	12
   618  00778A  12                 	db	18
   619  00778B  21                 	db	33
   620  00778C  21                 	db	33
   621  00778D  61                 	db	97
   622  00778E  52                 	db	82
   623  00778F  4C                 	db	76
   624  007790  00                 	db	0
   625  007791  41                 	db	65
   626  007792  7F                 	db	127
   627  007793  09                 	db	9
   628  007794  09                 	db	9
   629  007795  19                 	db	25
   630  007796  69                 	db	105
   631  007797  46                 	db	70
   632  007798  00                 	db	0
   633  007799  66                 	db	102
   634  00779A  49                 	db	73
   635  00779B  49                 	db	73
   636  00779C  49                 	db	73
   637  00779D  49                 	db	73
   638  00779E  49                 	db	73
   639  00779F  33                 	db	51
   640  0077A0  00                 	db	0
   641  0077A1  03                 	db	3
   642  0077A2  01                 	db	1
   643  0077A3  41                 	db	65
   644  0077A4  7F                 	db	127
   645  0077A5  41                 	db	65
   646  0077A6  01                 	db	1
   647  0077A7  03                 	db	3
   648  0077A8  00                 	db	0
   649  0077A9  01                 	db	1
   650  0077AA  3F                 	db	63
   651  0077AB  41                 	db	65
   652  0077AC  40                 	db	64
   653  0077AD  41                 	db	65
   654  0077AE  3F                 	db	63
   655  0077AF  01                 	db	1
   656  0077B0  00                 	db	0
   657  0077B1  01                 	db	1
   658  0077B2  0F                 	db	15
   659  0077B3  31                 	db	49
   660  0077B4  40                 	db	64
   661  0077B5  31                 	db	49
   662  0077B6  0F                 	db	15
   663  0077B7  01                 	db	1
   664  0077B8  00                 	db	0
   665  0077B9  01                 	db	1
   666  0077BA  1F                 	db	31
   667  0077BB  61                 	db	97
   668  0077BC  14                 	db	20
   669  0077BD  61                 	db	97
   670  0077BE  1F                 	db	31
   671  0077BF  01                 	db	1
   672  0077C0  00                 	db	0
   673  0077C1  41                 	db	65
   674  0077C2  41                 	db	65
   675  0077C3  36                 	db	54
   676  0077C4  08                 	db	8
   677  0077C5  36                 	db	54
   678  0077C6  41                 	db	65
   679  0077C7  41                 	db	65
   680  0077C8  00                 	db	0
   681  0077C9  01                 	db	1
   682  0077CA  03                 	db	3
   683  0077CB  44                 	db	68
   684  0077CC  78                 	db	120
   685  0077CD  44                 	db	68
   686  0077CE  03                 	db	3
   687  0077CF  01                 	db	1
   688  0077D0  00                 	db	0
   689  0077D1  43                 	db	67
   690  0077D2  61                 	db	97
   691  0077D3  51                 	db	81
   692  0077D4  49                 	db	73
   693  0077D5  45                 	db	69
   694  0077D6  43                 	db	67
   695  0077D7  61                 	db	97
   696  0077D8  00                 	db	0
   697  0077D9  00                 	db	0
   698  0077DA  00                 	db	0
   699  0077DB  7F                 	db	127
   700  0077DC  41                 	db	65
   701  0077DD  41                 	db	65
   702  0077DE  00                 	db	0
   703  0077DF  00                 	db	0
   704  0077E0  00                 	db	0
   705  0077E1  01                 	db	1
   706  0077E2  02                 	db	2
   707  0077E3  04                 	db	4
   708  0077E4  08                 	db	8
   709  0077E5  10                 	db	16
   710  0077E6  20                 	db	32
   711  0077E7  40                 	db	64
   712  0077E8  00                 	db	0
   713  0077E9  00                 	db	0
   714  0077EA  00                 	db	0
   715  0077EB  41                 	db	65
   716  0077EC  41                 	db	65
   717  0077ED  7F                 	db	127
   718  0077EE  00                 	db	0
   719  0077EF  00                 	db	0
   720  0077F0  00                 	db	0
   721  0077F1  00                 	db	0
   722  0077F2  04                 	db	4
   723  0077F3  02                 	db	2
   724  0077F4  01                 	db	1
   725  0077F5  01                 	db	1
   726  0077F6  02                 	db	2
   727  0077F7  04                 	db	4
   728  0077F8  00                 	db	0
   729  0077F9  00                 	db	0
   730  0077FA  40                 	db	64
   731  0077FB  40                 	db	64
   732  0077FC  40                 	db	64
   733  0077FD  40                 	db	64
   734  0077FE  40                 	db	64
   735  0077FF  40                 	db	64
   736  007800  00                 	db	0
   737  007801  00                 	db	0
   738  007802  01                 	db	1
   739  007803  02                 	db	2
   740  007804  00                 	db	0
   741  007805  00                 	db	0
   742  007806  00                 	db	0
   743  007807  00                 	db	0
   744  007808  00                 	db	0
   745  007809  00                 	db	0
   746  00780A  34                 	db	52
   747  00780B  4A                 	db	74
   748  00780C  4A                 	db	74
   749  00780D  4A                 	db	74
   750  00780E  3C                 	db	60
   751  00780F  40                 	db	64
   752  007810  00                 	db	0
   753  007811  00                 	db	0
   754  007812  41                 	db	65
   755  007813  3F                 	db	63
   756  007814  48                 	db	72
   757  007815  48                 	db	72
   758  007816  48                 	db	72
   759  007817  30                 	db	48
   760  007818  00                 	db	0
   761  007819  00                 	db	0
   762  00781A  3C                 	db	60
   763  00781B  42                 	db	66
   764  00781C  42                 	db	66
   765  00781D  42                 	db	66
   766  00781E  24                 	db	36
   767  00781F  00                 	db	0
   768  007820  00                 	db	0
   769  007821  00                 	db	0
   770  007822  30                 	db	48
   771  007823  48                 	db	72
   772  007824  48                 	db	72
   773  007825  49                 	db	73
   774  007826  3F                 	db	63
   775  007827  40                 	db	64
   776  007828  00                 	db	0
   777  007829  00                 	db	0
   778  00782A  3C                 	db	60
   779  00782B  4A                 	db	74
   780  00782C  4A                 	db	74
   781  00782D  4A                 	db	74
   782  00782E  2C                 	db	44
   783  00782F  00                 	db	0
   784  007830  00                 	db	0
   785  007831  00                 	db	0
   786  007832  00                 	db	0
   787  007833  48                 	db	72
   788  007834  7E                 	db	126
   789  007835  49                 	db	73
   790  007836  09                 	db	9
   791  007837  00                 	db	0
   792  007838  00                 	db	0
   793  007839  00                 	db	0
   794  00783A  26                 	db	38
   795  00783B  49                 	db	73
   796  00783C  49                 	db	73
   797  00783D  49                 	db	73
   798  00783E  3F                 	db	63
   799  00783F  01                 	db	1
   800  007840  00                 	db	0
   801  007841  41                 	db	65
   802  007842  7F                 	db	127
   803  007843  48                 	db	72
   804  007844  04                 	db	4
   805  007845  44                 	db	68
   806  007846  78                 	db	120
   807  007847  40                 	db	64
   808  007848  00                 	db	0
   809  007849  00                 	db	0
   810  00784A  00                 	db	0
   811  00784B  44                 	db	68
   812  00784C  7D                 	db	125
   813  00784D  40                 	db	64
   814  00784E  00                 	db	0
   815  00784F  00                 	db	0
   816  007850  00                 	db	0
   817  007851  00                 	db	0
   818  007852  00                 	db	0
   819  007853  40                 	db	64
   820  007854  44                 	db	68
   821  007855  3D                 	db	61
   822  007856  00                 	db	0
   823  007857  00                 	db	0
   824  007858  00                 	db	0
   825  007859  41                 	db	65
   826  00785A  7F                 	db	127
   827  00785B  10                 	db	16
   828  00785C  18                 	db	24
   829  00785D  24                 	db	36
   830  00785E  42                 	db	66
   831  00785F  42                 	db	66
   832  007860  00                 	db	0
   833  007861  00                 	db	0
   834  007862  40                 	db	64
   835  007863  41                 	db	65
   836  007864  7F                 	db	127
   837  007865  40                 	db	64
   838  007866  40                 	db	64
   839  007867  00                 	db	0
   840  007868  00                 	db	0
   841  007869  42                 	db	66
   842  00786A  7E                 	db	126
   843  00786B  02                 	db	2
   844  00786C  7C                 	db	124
   845  00786D  02                 	db	2
   846  00786E  7E                 	db	126
   847  00786F  40                 	db	64
   848  007870  00                 	db	0
   849  007871  42                 	db	66
   850  007872  7E                 	db	126
   851  007873  44                 	db	68
   852  007874  02                 	db	2
   853  007875  42                 	db	66
   854  007876  7C                 	db	124
   855  007877  40                 	db	64
   856  007878  00                 	db	0
   857  007879  00                 	db	0
   858  00787A  3C                 	db	60
   859  00787B  42                 	db	66
   860  00787C  42                 	db	66
   861  00787D  42                 	db	66
   862  00787E  3C                 	db	60
   863  00787F  00                 	db	0
   864  007880  00                 	db	0
   865  007881  00                 	db	0
   866  007882  41                 	db	65
   867  007883  7F                 	db	127
   868  007884  49                 	db	73
   869  007885  09                 	db	9
   870  007886  09                 	db	9
   871  007887  06                 	db	6
   872  007888  00                 	db	0
   873  007889  00                 	db	0
   874  00788A  06                 	db	6
   875  00788B  09                 	db	9
   876  00788C  09                 	db	9
   877  00788D  49                 	db	73
   878  00788E  7F                 	db	127
   879  00788F  41                 	db	65
   880  007890  00                 	db	0
   881  007891  00                 	db	0
   882  007892  42                 	db	66
   883  007893  7E                 	db	126
   884  007894  44                 	db	68
   885  007895  02                 	db	2
   886  007896  02                 	db	2
   887  007897  04                 	db	4
   888  007898  00                 	db	0
   889  007899  00                 	db	0
   890  00789A  64                 	db	100
   891  00789B  4A                 	db	74
   892  00789C  4A                 	db	74
   893  00789D  4A                 	db	74
   894  00789E  36                 	db	54
   895  00789F  00                 	db	0
   896  0078A0  00                 	db	0
   897  0078A1  00                 	db	0
   898  0078A2  04                 	db	4
   899  0078A3  3F                 	db	63
   900  0078A4  44                 	db	68
   901  0078A5  44                 	db	68
   902  0078A6  20                 	db	32
   903  0078A7  00                 	db	0
   904  0078A8  00                 	db	0
   905  0078A9  00                 	db	0
   906  0078AA  02                 	db	2
   907  0078AB  3E                 	db	62
   908  0078AC  40                 	db	64
   909  0078AD  40                 	db	64
   910  0078AE  22                 	db	34
   911  0078AF  7E                 	db	126
   912  0078B0  40                 	db	64
   913  0078B1  02                 	db	2
   914  0078B2  0E                 	db	14
   915  0078B3  32                 	db	50
   916  0078B4  40                 	db	64
   917  0078B5  32                 	db	50
   918  0078B6  0E                 	db	14
   919  0078B7  02                 	db	2
   920  0078B8  00                 	db	0
   921  0078B9  02                 	db	2
   922  0078BA  1E                 	db	30
   923  0078BB  62                 	db	98
   924  0078BC  18                 	db	24
   925  0078BD  62                 	db	98
   926  0078BE  1E                 	db	30
   927  0078BF  02                 	db	2
   928  0078C0  00                 	db	0
   929  0078C1  42                 	db	66
   930  0078C2  62                 	db	98
   931  0078C3  14                 	db	20
   932  0078C4  08                 	db	8
   933  0078C5  14                 	db	20
   934  0078C6  62                 	db	98
   935  0078C7  42                 	db	66
   936  0078C8  00                 	db	0
   937  0078C9  01                 	db	1
   938  0078CA  43                 	db	67
   939  0078CB  45                 	db	69
   940  0078CC  38                 	db	56
   941  0078CD  05                 	db	5
   942  0078CE  03                 	db	3
   943  0078CF  01                 	db	1
   944  0078D0  00                 	db	0
   945  0078D1  00                 	db	0
   946  0078D2  46                 	db	70
   947  0078D3  62                 	db	98
   948  0078D4  52                 	db	82
   949  0078D5  4A                 	db	74
   950  0078D6  46                 	db	70
   951  0078D7  62                 	db	98
   952  0078D8  00                 	db	0
   953  0078D9  00                 	db	0
   954  0078DA  00                 	db	0
   955  0078DB  08                 	db	8
   956  0078DC  36                 	db	54
   957  0078DD  41                 	db	65
   958  0078DE  00                 	db	0
   959  0078DF  00                 	db	0
   960  0078E0  00                 	db	0
   961  0078E1  00                 	db	0
   962  0078E2  00                 	db	0
   963  0078E3  00                 	db	0
   964  0078E4  7F                 	db	127
   965  0078E5  00                 	db	0
   966  0078E6  00                 	db	0
   967  0078E7  00                 	db	0
   968  0078E8  00                 	db	0
   969  0078E9  00                 	db	0
   970  0078EA  00                 	db	0
   971  0078EB  00                 	db	0
   972  0078EC  41                 	db	65
   973  0078ED  36                 	db	54
   974  0078EE  08                 	db	8
   975  0078EF  00                 	db	0
   976  0078F0  00                 	db	0
   977  0078F1  00                 	db	0
   978  0078F2  18                 	db	24
   979  0078F3  08                 	db	8
   980  0078F4  08                 	db	8
   981  0078F5  10                 	db	16
   982  0078F6  10                 	db	16
   983  0078F7  18                 	db	24
   984  0078F8  00                 	db	0
   985  0078F9  AA                 	db	170
   986  0078FA  55                 	db	85
   987  0078FB  AA                 	db	170
   988  0078FC  55                 	db	85
   989  0078FD  AA                 	db	170
   990  0078FE  55                 	db	85
   991  0078FF  AA                 	db	170
   992  007900  55                 	db	85
   993  007901                     __end_of_OledFont0:
   994                           	opt stack 0
   995  007901                     _configDescriptor1:
   996                           	opt stack 0
   997  007901  09                 	db	9
   998  007902  02                 	db	2
   999  007903  43                 	db	67
  1000  007904  00                 	db	0
  1001  007905  02                 	db	2
  1002  007906  01                 	db	1
  1003  007907  00                 	db	0
  1004  007908  C0                 	db	192
  1005  007909  32                 	db	50
  1006  00790A  09                 	db	9
  1007  00790B  04                 	db	4
  1008  00790C  00                 	db	0
  1009  00790D  00                 	db	0
  1010  00790E  01                 	db	1
  1011  00790F  02                 	db	2
  1012  007910  02                 	db	2
  1013  007911  01                 	db	1
  1014  007912  00                 	db	0
  1015  007913  05                 	db	5
  1016  007914  24                 	db	36
  1017  007915  00                 	db	0
  1018  007916  10                 	db	16
  1019  007917  01                 	db	1
  1020  007918  04                 	db	4
  1021  007919  24                 	db	36
  1022  00791A  02                 	db	2
  1023  00791B  02                 	db	2
  1024  00791C  05                 	db	5
  1025  00791D  24                 	db	36
  1026  00791E  06                 	db	6
  1027  00791F  00                 	db	0
  1028  007920  01                 	db	1
  1029  007921  05                 	db	5
  1030  007922  24                 	db	36
  1031  007923  01                 	db	1
  1032  007924  00                 	db	0
  1033  007925  01                 	db	1
  1034  007926  07                 	db	7
  1035  007927  05                 	db	5
  1036  007928  81                 	db	129
  1037  007929  03                 	db	3
  1038  00792A  08                 	db	8
  1039  00792B  00                 	db	0
  1040  00792C  02                 	db	2
  1041  00792D  09                 	db	9
  1042  00792E  04                 	db	4
  1043  00792F  01                 	db	1
  1044  007930  00                 	db	0
  1045  007931  02                 	db	2
  1046  007932  0A                 	db	10
  1047  007933  00                 	db	0
  1048  007934  00                 	db	0
  1049  007935  00                 	db	0
  1050  007936  07                 	db	7
  1051  007937  05                 	db	5
  1052  007938  02                 	db	2
  1053  007939  02                 	db	2
  1054  00793A  40                 	db	64
  1055  00793B  00                 	db	0
  1056  00793C  00                 	db	0
  1057  00793D  07                 	db	7
  1058  00793E  05                 	db	5
  1059  00793F  82                 	db	130
  1060  007940  02                 	db	2
  1061  007941  40                 	db	64
  1062  007942  00                 	db	0
  1063  007943  00                 	db	0
  1064  007944                     __end_of_configDescriptor1:
  1065                           	opt stack 0
  1066  007944                     _sd001:
  1067                           	opt stack 0
  1068  007944  34                 	db	52
  1069  007945  03                 	db	3
  1070  007946  004D               	dw	77
  1071  007948  0069               	dw	105
  1072  00794A  0063               	dw	99
  1073  00794C  0072               	dw	114
  1074  00794E  006F               	dw	111
  1075  007950  0063               	dw	99
  1076  007952  0068               	dw	104
  1077  007954  0069               	dw	105
  1078  007956  0070               	dw	112
  1079  007958  0020               	dw	32
  1080  00795A  0054               	dw	84
  1081  00795C  0065               	dw	101
  1082  00795E  0063               	dw	99
  1083  007960  0068               	dw	104
  1084  007962  006E               	dw	110
  1085  007964  006F               	dw	111
  1086  007966  006C               	dw	108
  1087  007968  006F               	dw	111
  1088  00796A  0067               	dw	103
  1089  00796C  0079               	dw	121
  1090  00796E  0020               	dw	32
  1091  007970  0049               	dw	73
  1092  007972  006E               	dw	110
  1093  007974  0063               	dw	99
  1094  007976  002E               	dw	46
  1095  007978                     __end_of_sd001:
  1096                           	opt stack 0
  1097  007978                     _sd002:
  1098                           	opt stack 0
  1099  007978  34                 	db	52
  1100  007979  03                 	db	3
  1101  00797A  0043               	dw	67
  1102  00797C  0044               	dw	68
  1103  00797E  0043               	dw	67
  1104  007980  0020               	dw	32
  1105  007982  0052               	dw	82
  1106  007984  0053               	dw	83
  1107  007986  002D               	dw	45
  1108  007988  0032               	dw	50
  1109  00798A  0033               	dw	51
  1110  00798C  0032               	dw	50
  1111  00798E  0020               	dw	32
  1112  007990  0045               	dw	69
  1113  007992  006D               	dw	109
  1114  007994  0075               	dw	117
  1115  007996  006C               	dw	108
  1116  007998  0061               	dw	97
  1117  00799A  0074               	dw	116
  1118  00799C  0069               	dw	105
  1119  00799E  006F               	dw	111
  1120  0079A0  006E               	dw	110
  1121  0079A2  0020               	dw	32
  1122  0079A4  0044               	dw	68
  1123  0079A6  0065               	dw	101
  1124  0079A8  006D               	dw	109
  1125  0079AA  006F               	dw	111
  1126  0079AC                     __end_of_sd002:
  1127                           	opt stack 0
  1128  0079AC                     _device_dsc:
  1129                           	opt stack 0
  1130  0079AC  12                 	db	18
  1131  0079AD  01                 	db	1
  1132  0079AE  0200               	dw	512
  1133  0079B0  02                 	db	2
  1134  0079B1  00                 	db	0
  1135  0079B2  00                 	db	0
  1136  0079B3  08                 	db	8
  1137  0079B4  04D8               	dw	1240
  1138  0079B6  000A               	dw	10
  1139  0079B8  0100               	dw	256
  1140  0079BA  01                 	db	1
  1141  0079BB  02                 	db	2
  1142  0079BC  00                 	db	0
  1143  0079BD  01                 	db	1
  1144  0079BE                     __end_of_device_dsc:
  1145                           	opt stack 0
  1146  0079BE                     _sd000:
  1147                           	opt stack 0
  1148  0079BE  04                 	db	4
  1149  0079BF  03                 	db	3
  1150  0079C0  0409               	dw	1033
  1151  0079C2                     __end_of_sd000:
  1152                           	opt stack 0
  1153  0000                     _ANSELAbits	set	3931
  1154  0000                     _ANSELCbits	set	3933
  1155  0000                     _TMR3	set	4018
  1156  0000                     _ACTCON	set	4021
  1157  0000                     _ADCON0	set	4034
  1158  0000                     _ADCON0bits	set	4034
  1159  0000                     _ADCON1	set	4033
  1160  0000                     _ADCON2	set	4032
  1161  0000                     _ADRESH	set	4036
  1162  0000                     _ADRESL	set	4035
  1163  0000                     _BAUDCON	set	4024
  1164  0000                     _CM1CON0	set	3992
  1165  0000                     _CM1CON0bits	set	3992
  1166  0000                     _CM2CON1bits	set	3994
  1167  0000                     _EEADR	set	4009
  1168  0000                     _EECON1bits	set	4006
  1169  0000                     _EECON2	set	4007
  1170  0000                     _EEDATA	set	4008
  1171  0000                     _INTCON3bits	set	4080
  1172  0000                     _INTCONbits	set	4082
  1173  0000                     _IOCCbits	set	3975
  1174  0000                     _IPR3bits	set	4005
  1175  0000                     _LATAbits	set	3977
  1176  0000                     _LATBbits	set	3978
  1177  0000                     _LATCbits	set	3979
  1178  0000                     _LATD	set	3980
  1179  0000                     _LATEbits	set	3981
  1180  0000                     _OSCCON	set	4051
  1181  0000                     _OSCCON2	set	4050
  1182  0000                     _OSCCON2bits	set	4050
  1183  0000                     _OSCTUNE	set	3995
  1184  0000                     _PIE1bits	set	3997
  1185  0000                     _PIE2bits	set	4000
  1186  0000                     _PIE3bits	set	4003
  1187  0000                     _PIR1bits	set	3998
  1188  0000                     _PIR2bits	set	4001
  1189  0000                     _PIR3bits	set	4004
  1190  0000                     _PORTAbits	set	3968
  1191  0000                     _PORTBbits	set	3969
  1192  0000                     _PORTCbits	set	3970
  1193  0000                     _PR2	set	4027
  1194  0000                     _RCONbits	set	4048
  1195  0000                     _RCREG	set	4014
  1196  0000                     _RCSTA	set	4011
  1197  0000                     _RCSTAbits	set	4011
  1198  0000                     _SPBRG	set	4015
  1199  0000                     _SPBRGH	set	4016
  1200  0000                     _SSP1ADD	set	4040
  1201  0000                     _SSP1CON1	set	4038
  1202  0000                     _SSP1CON1bits	set	4038
  1203  0000                     _SSP1STAT	set	4039
  1204  0000                     _SSP1STATbits	set	4039
  1205  0000                     _SSPBUF	set	4041
  1206  0000                     _T1CON	set	4045
  1207  0000                     _T1CONbits	set	4045
  1208  0000                     _T1GCON	set	4044
  1209  0000                     _T1GCONbits	set	4044
  1210  0000                     _T2CON	set	4026
  1211  0000                     _T2CONbits	set	4026
  1212  0000                     _T3CON	set	4017
  1213  0000                     _T3CONbits	set	4017
  1214  0000                     _T3GCON	set	4020
  1215  0000                     _T3GCONbits	set	4020
  1216  0000                     _TABLAT	set	4085
  1217  0000                     _TBLPTRH	set	4087
  1218  0000                     _TBLPTRL	set	4086
  1219  0000                     _TBLPTRU	set	4088
  1220  0000                     _TMR1H	set	4047
  1221  0000                     _TMR1L	set	4046
  1222  0000                     _TMR2	set	4028
  1223  0000                     _TMR3H	set	4019
  1224  0000                     _TMR3L	set	4018
  1225  0000                     _TRISAbits	set	3986
  1226  0000                     _TRISBbits	set	3987
  1227  0000                     _TRISCbits	set	3988
  1228  0000                     _TRISD	set	3989
  1229  0000                     _TRISEbits	set	3990
  1230  0000                     _TXREG	set	4013
  1231  0000                     _TXSTA	set	4012
  1232  0000                     _TXSTAbits	set	4012
  1233  0000                     _UADDR	set	3939
  1234  0000                     _UCFG	set	3938
  1235  0000                     _UCON	set	3936
  1236  0000                     _UCONbits	set	3936
  1237  0000                     _UEIE	set	3942
  1238  0000                     _UEIR	set	3943
  1239  0000                     _UEP0bits	set	3946
  1240  0000                     _UIE	set	3940
  1241  0000                     _UIEbits	set	3940
  1242  0000                     _UIR	set	3941
  1243  0000                     _UIRbits	set	3941
  1244  0000                     _USTAT	set	3937
  1245  0000                     _VREFCON0	set	3965
  1246  0000                     _VREFCON0bits	set	3965
  1247  0000                     _WDTCONbits	set	4049
  1248  0000                     _UEP0	set	3946
  1249  0000                     _UEP1	set	3947
  1250  0000                     _CKE	set	32318
  1251  0000                     _CKP	set	32308
  1252  0000                     _GIE	set	32663
  1253  0000                     _PEIE	set	32662
  1254  0079C2                     STR_184:
  1255  0079C2  73                 	db	115	;'s'
  1256  0079C3  79                 	db	121	;'y'
  1257  0079C4  73                 	db	115	;'s'
  1258  0079C5  20                 	db	32
  1259  0079C6  73                 	db	115	;'s'
  1260  0079C7  65                 	db	101	;'e'
  1261  0079C8  74                 	db	116	;'t'
  1262  0079C9  20                 	db	32
  1263  0079CA  70                 	db	112	;'p'
  1264  0079CB  69                 	db	105	;'i'
  1265  0079CC  6E                 	db	110	;'n'
  1266  0079CD  6D                 	db	109	;'m'
  1267  0079CE  6F                 	db	111	;'o'
  1268  0079CF  64                 	db	100	;'d'
  1269  0079D0  65                 	db	101	;'e'
  1270  0079D1  20                 	db	32
  1271  0079D2  47                 	db	71	;'G'
  1272  0079D3  50                 	db	80	;'P'
  1273  0079D4  49                 	db	73	;'I'
  1274  0079D5  4F                 	db	79	;'O'
  1275  0079D6  31                 	db	49	;'1'
  1276  0079D7  32                 	db	50	;'2'
  1277  0079D8  20                 	db	32
  1278  0079D9  61                 	db	97	;'a'
  1279  0079DA  6E                 	db	110	;'n'
  1280  0079DB  61                 	db	97	;'a'
  1281  0079DC  00                 	db	0
  1282  0079DD                     STR_183:
  1283  0079DD  73                 	db	115	;'s'
  1284  0079DE  79                 	db	121	;'y'
  1285  0079DF  73                 	db	115	;'s'
  1286  0079E0  20                 	db	32
  1287  0079E1  73                 	db	115	;'s'
  1288  0079E2  65                 	db	101	;'e'
  1289  0079E3  74                 	db	116	;'t'
  1290  0079E4  20                 	db	32
  1291  0079E5  70                 	db	112	;'p'
  1292  0079E6  69                 	db	105	;'i'
  1293  0079E7  6E                 	db	110	;'n'
  1294  0079E8  6D                 	db	109	;'m'
  1295  0079E9  6F                 	db	111	;'o'
  1296  0079EA  64                 	db	100	;'d'
  1297  0079EB  65                 	db	101	;'e'
  1298  0079EC  20                 	db	32
  1299  0079ED  47                 	db	71	;'G'
  1300  0079EE  50                 	db	80	;'P'
  1301  0079EF  49                 	db	73	;'I'
  1302  0079F0  4F                 	db	79	;'O'
  1303  0079F1  31                 	db	49	;'1'
  1304  0079F2  33                 	db	51	;'3'
  1305  0079F3  20                 	db	32
  1306  0079F4  61                 	db	97	;'a'
  1307  0079F5  6E                 	db	110	;'n'
  1308  0079F6  61                 	db	97	;'a'
  1309  0079F7  00                 	db	0
  1310  0079F8                     STR_177:
  1311  0079F8  73                 	db	115	;'s'
  1312  0079F9  79                 	db	121	;'y'
  1313  0079FA  73                 	db	115	;'s'
  1314  0079FB  20                 	db	32
  1315  0079FC  73                 	db	115	;'s'
  1316  0079FD  65                 	db	101	;'e'
  1317  0079FE  74                 	db	116	;'t'
  1318  0079FF  20                 	db	32
  1319  007A00  70                 	db	112	;'p'
  1320  007A01  69                 	db	105	;'i'
  1321  007A02  6E                 	db	110	;'n'
  1322  007A03  64                 	db	100	;'d'
  1323  007A04  69                 	db	105	;'i'
  1324  007A05  67                 	db	103	;'g'
  1325  007A06  20                 	db	32
  1326  007A07  47                 	db	71	;'G'
  1327  007A08  50                 	db	80	;'P'
  1328  007A09  49                 	db	73	;'I'
  1329  007A0A  4F                 	db	79	;'O'
  1330  007A0B  31                 	db	49	;'1'
  1331  007A0C  30                 	db	48	;'0'
  1332  007A0D  20                 	db	32
  1333  007A0E  30                 	db	48	;'0'
  1334  007A0F  0D                 	db	13
  1335  007A10  0A                 	db	10
  1336  007A11  00                 	db	0
  1337  007A12                     STR_178:
  1338  007A12  73                 	db	115	;'s'
  1339  007A13  79                 	db	121	;'y'
  1340  007A14  73                 	db	115	;'s'
  1341  007A15  20                 	db	32
  1342  007A16  73                 	db	115	;'s'
  1343  007A17  65                 	db	101	;'e'
  1344  007A18  74                 	db	116	;'t'
  1345  007A19  20                 	db	32
  1346  007A1A  70                 	db	112	;'p'
  1347  007A1B  69                 	db	105	;'i'
  1348  007A1C  6E                 	db	110	;'n'
  1349  007A1D  64                 	db	100	;'d'
  1350  007A1E  69                 	db	105	;'i'
  1351  007A1F  67                 	db	103	;'g'
  1352  007A20  20                 	db	32
  1353  007A21  47                 	db	71	;'G'
  1354  007A22  50                 	db	80	;'P'
  1355  007A23  49                 	db	73	;'I'
  1356  007A24  4F                 	db	79	;'O'
  1357  007A25  31                 	db	49	;'1'
  1358  007A26  31                 	db	49	;'1'
  1359  007A27  20                 	db	32
  1360  007A28  30                 	db	48	;'0'
  1361  007A29  0D                 	db	13
  1362  007A2A  0A                 	db	10
  1363  007A2B  00                 	db	0
  1364  007A2C                     STR_175:
  1365  007A2C  73                 	db	115	;'s'
  1366  007A2D  79                 	db	121	;'y'
  1367  007A2E  73                 	db	115	;'s'
  1368  007A2F  20                 	db	32
  1369  007A30  73                 	db	115	;'s'
  1370  007A31  65                 	db	101	;'e'
  1371  007A32  74                 	db	116	;'t'
  1372  007A33  20                 	db	32
  1373  007A34  70                 	db	112	;'p'
  1374  007A35  69                 	db	105	;'i'
  1375  007A36  6E                 	db	110	;'n'
  1376  007A37  64                 	db	100	;'d'
  1377  007A38  69                 	db	105	;'i'
  1378  007A39  67                 	db	103	;'g'
  1379  007A3A  20                 	db	32
  1380  007A3B  47                 	db	71	;'G'
  1381  007A3C  50                 	db	80	;'P'
  1382  007A3D  49                 	db	73	;'I'
  1383  007A3E  4F                 	db	79	;'O'
  1384  007A3F  31                 	db	49	;'1'
  1385  007A40  30                 	db	48	;'0'
  1386  007A41  20                 	db	32
  1387  007A42  31                 	db	49	;'1'
  1388  007A43  0D                 	db	13
  1389  007A44  0A                 	db	10
  1390  007A45  00                 	db	0
  1391  007A46                     STR_176:
  1392  007A46  73                 	db	115	;'s'
  1393  007A47  79                 	db	121	;'y'
  1394  007A48  73                 	db	115	;'s'
  1395  007A49  20                 	db	32
  1396  007A4A  73                 	db	115	;'s'
  1397  007A4B  65                 	db	101	;'e'
  1398  007A4C  74                 	db	116	;'t'
  1399  007A4D  20                 	db	32
  1400  007A4E  70                 	db	112	;'p'
  1401  007A4F  69                 	db	105	;'i'
  1402  007A50  6E                 	db	110	;'n'
  1403  007A51  64                 	db	100	;'d'
  1404  007A52  69                 	db	105	;'i'
  1405  007A53  67                 	db	103	;'g'
  1406  007A54  20                 	db	32
  1407  007A55  47                 	db	71	;'G'
  1408  007A56  50                 	db	80	;'P'
  1409  007A57  49                 	db	73	;'I'
  1410  007A58  4F                 	db	79	;'O'
  1411  007A59  31                 	db	49	;'1'
  1412  007A5A  31                 	db	49	;'1'
  1413  007A5B  20                 	db	32
  1414  007A5C  31                 	db	49	;'1'
  1415  007A5D  0D                 	db	13
  1416  007A5E  0A                 	db	10
  1417  007A5F  00                 	db	0
  1418  007A60                     STR_185:
  1419  007A60  73                 	db	115	;'s'
  1420  007A61  79                 	db	121	;'y'
  1421  007A62  73                 	db	115	;'s'
  1422  007A63  20                 	db	32
  1423  007A64  67                 	db	103	;'g'
  1424  007A65  65                 	db	101	;'e'
  1425  007A66  74                 	db	116	;'t'
  1426  007A67  20                 	db	32
  1427  007A68  70                 	db	112	;'p'
  1428  007A69  69                 	db	105	;'i'
  1429  007A6A  6E                 	db	110	;'n'
  1430  007A6B  61                 	db	97	;'a'
  1431  007A6C  6E                 	db	110	;'n'
  1432  007A6D  61                 	db	97	;'a'
  1433  007A6E  20                 	db	32
  1434  007A6F  47                 	db	71	;'G'
  1435  007A70  50                 	db	80	;'P'
  1436  007A71  49                 	db	73	;'I'
  1437  007A72  4F                 	db	79	;'O'
  1438  007A73  31                 	db	49	;'1'
  1439  007A74  32                 	db	50	;'2'
  1440  007A75  00                 	db	0
  1441  007A76                     STR_186:
  1442  007A76  73                 	db	115	;'s'
  1443  007A77  79                 	db	121	;'y'
  1444  007A78  73                 	db	115	;'s'
  1445  007A79  20                 	db	32
  1446  007A7A  67                 	db	103	;'g'
  1447  007A7B  65                 	db	101	;'e'
  1448  007A7C  74                 	db	116	;'t'
  1449  007A7D  20                 	db	32
  1450  007A7E  70                 	db	112	;'p'
  1451  007A7F  69                 	db	105	;'i'
  1452  007A80  6E                 	db	110	;'n'
  1453  007A81  61                 	db	97	;'a'
  1454  007A82  6E                 	db	110	;'n'
  1455  007A83  61                 	db	97	;'a'
  1456  007A84  20                 	db	32
  1457  007A85  47                 	db	71	;'G'
  1458  007A86  50                 	db	80	;'P'
  1459  007A87  49                 	db	73	;'I'
  1460  007A88  4F                 	db	79	;'O'
  1461  007A89  31                 	db	49	;'1'
  1462  007A8A  33                 	db	51	;'3'
  1463  007A8B  00                 	db	0
  1464  007A8C                     STR_22:
  1465  007A8C  73                 	db	115	;'s'
  1466  007A8D  79                 	db	121	;'y'
  1467  007A8E  73                 	db	115	;'s'
  1468  007A8F  20                 	db	32
  1469  007A90  73                 	db	115	;'s'
  1470  007A91  6C                 	db	108	;'l'
  1471  007A92  65                 	db	101	;'e'
  1472  007A93  65                 	db	101	;'e'
  1473  007A94  70                 	db	112	;'p'
  1474  007A95  20                 	db	32
  1475  007A96  39                 	db	57	;'9'
  1476  007A97  39                 	db	57	;'9'
  1477  007A98  39                 	db	57	;'9'
  1478  007A99  39                 	db	57	;'9'
  1479  007A9A  39                 	db	57	;'9'
  1480  007A9B  39                 	db	57	;'9'
  1481  007A9C  39                 	db	57	;'9'
  1482  007A9D  39                 	db	57	;'9'
  1483  007A9E  39                 	db	57	;'9'
  1484  007A9F  00                 	db	0
  1485  007AA0                     STR_96:
  1486  007AA0  4D                 	db	77	;'M'
  1487  007AA1  61                 	db	97	;'a'
  1488  007AA2  63                 	db	99	;'c'
  1489  007AA3  20                 	db	32
  1490  007AA4  45                 	db	69	;'E'
  1491  007AA5  72                 	db	114	;'r'
  1492  007AA6  72                 	db	114	;'r'
  1493  007AA7  6F                 	db	111	;'o'
  1494  007AA8  72                 	db	114	;'r'
  1495  007AA9  20                 	db	32
  1496  007AAA  4F                 	db	79	;'O'
  1497  007AAB  63                 	db	99	;'c'
  1498  007AAC  63                 	db	99	;'c'
  1499  007AAD  75                 	db	117	;'u'
  1500  007AAE  72                 	db	114	;'r'
  1501  007AAF  72                 	db	114	;'r'
  1502  007AB0  65                 	db	101	;'e'
  1503  007AB1  64                 	db	100	;'d'
  1504  007AB2  00                 	db	0
  1505  007AB3                     STR_83:
  1506  007AB3  28                 	db	40
  1507  007AB4  55                 	db	85	;'U'
  1508  007AB5  4E                 	db	78	;'N'
  1509  007AB6  43                 	db	67	;'C'
  1510  007AB7  4E                 	db	78	;'N'
  1511  007AB8  46                 	db	70	;'F'
  1512  007AB9  29                 	db	41
  1513  007ABA  20                 	db	32
  1514  007ABB  20                 	db	32
  1515  007ABC  20                 	db	32
  1516  007ABD  20                 	db	32
  1517  007ABE  28                 	db	40
  1518  007ABF  43                 	db	67	;'C'
  1519  007AC0  4E                 	db	78	;'N'
  1520  007AC1  46                 	db	70	;'F'
  1521  007AC2  29                 	db	41
  1522  007AC3  20                 	db	32
  1523  007AC4  00                 	db	0
  1524  007AC5                     STR_40:
  1525  007AC5  20                 	db	32
  1526  007AC6  20                 	db	32
  1527  007AC7  28                 	db	40
  1528  007AC8  53                 	db	83	;'S'
  1529  007AC9  32                 	db	50	;'2'
  1530  007ACA  29                 	db	41
  1531  007ACB  20                 	db	32
  1532  007ACC  20                 	db	32
  1533  007ACD  20                 	db	32
  1534  007ACE  20                 	db	32
  1535  007ACF  20                 	db	32
  1536  007AD0  20                 	db	32
  1537  007AD1  20                 	db	32
  1538  007AD2  20                 	db	32
  1539  007AD3  20                 	db	32
  1540  007AD4  20                 	db	32
  1541  007AD5  00                 	db	0
  1542  007AD6                     STR_92:
  1543  007AD6  20                 	db	32
  1544  007AD7  20                 	db	32
  1545  007AD8  20                 	db	32
  1546  007AD9  20                 	db	32
  1547  007ADA  52                 	db	82	;'R'
  1548  007ADB  65                 	db	101	;'e'
  1549  007ADC  63                 	db	99	;'c'
  1550  007ADD  65                 	db	101	;'e'
  1551  007ADE  69                 	db	105	;'i'
  1552  007ADF  76                 	db	118	;'v'
  1553  007AE0  65                 	db	101	;'e'
  1554  007AE1  64                 	db	100	;'d'
  1555  007AE2  20                 	db	32
  1556  007AE3  20                 	db	32
  1557  007AE4  20                 	db	32
  1558  007AE5  20                 	db	32
  1559  007AE6  00                 	db	0
  1560  007AE7                     STR_42:
  1561  007AE7  20                 	db	32
  1562  007AE8  20                 	db	32
  1563  007AE9  20                 	db	32
  1564  007AEA  20                 	db	32
  1565  007AEB  20                 	db	32
  1566  007AEC  20                 	db	32
  1567  007AED  20                 	db	32
  1568  007AEE  20                 	db	32
  1569  007AEF  20                 	db	32
  1570  007AF0  28                 	db	40
  1571  007AF1  53                 	db	83	;'S'
  1572  007AF2  33                 	db	51	;'3'
  1573  007AF3  29                 	db	41
  1574  007AF4  20                 	db	32
  1575  007AF5  20                 	db	32
  1576  007AF6  20                 	db	32
  1577  007AF7  00                 	db	0
  1578  007AF8                     STR_34:
  1579  007AF8  20                 	db	32
  1580  007AF9  20                 	db	32
  1581  007AFA  28                 	db	40
  1582  007AFB  53                 	db	83	;'S'
  1583  007AFC  32                 	db	50	;'2'
  1584  007AFD  29                 	db	41
  1585  007AFE  20                 	db	32
  1586  007AFF  20                 	db	32
  1587  007B00  20                 	db	32
  1588  007B01  28                 	db	40
  1589  007B02  53                 	db	83	;'S'
  1590  007B03  33                 	db	51	;'3'
  1591  007B04  29                 	db	41
  1592  007B05  20                 	db	32
  1593  007B06  20                 	db	32
  1594  007B07  20                 	db	32
  1595  007B08  00                 	db	0
  1596  007B09                     STR_79:
  1597  007B09  20                 	db	32
  1598  007B0A  20                 	db	32
  1599  007B0B  4C                 	db	76	;'L'
  1600  007B0C  61                 	db	97	;'a'
  1601  007B0D  73                 	db	115	;'s'
  1602  007B0E  74                 	db	116	;'t'
  1603  007B0F  20                 	db	32
  1604  007B10  4D                 	db	77	;'M'
  1605  007B11  65                 	db	101	;'e'
  1606  007B12  73                 	db	115	;'s'
  1607  007B13  73                 	db	115	;'s'
  1608  007B14  61                 	db	97	;'a'
  1609  007B15  67                 	db	103	;'g'
  1610  007B16  65                 	db	101	;'e'
  1611  007B17  20                 	db	32
  1612  007B18  20                 	db	32
  1613  007B19  00                 	db	0
  1614  007B1A                     STR_78:
  1615  007B1A  20                 	db	32
  1616  007B1B  56                 	db	86	;'V'
  1617  007B1C  69                 	db	105	;'i'
  1618  007B1D  65                 	db	101	;'e'
  1619  007B1E  77                 	db	119	;'w'
  1620  007B1F  20                 	db	32
  1621  007B20  44                 	db	68	;'D'
  1622  007B21  6F                 	db	111	;'o'
  1623  007B22  77                 	db	119	;'w'
  1624  007B23  6E                 	db	110	;'n'
  1625  007B24  6C                 	db	108	;'l'
  1626  007B25  69                 	db	105	;'i'
  1627  007B26  6E                 	db	110	;'n'
  1628  007B27  6B                 	db	107	;'k'
  1629  007B28  20                 	db	32
  1630  007B29  20                 	db	32
  1631  007B2A  00                 	db	0
  1632  007B2B                     STR_75:
  1633  007B2B  20                 	db	32
  1634  007B2C  20                 	db	32
  1635  007B2D  49                 	db	73	;'I'
  1636  007B2E  73                 	db	115	;'s'
  1637  007B2F  73                 	db	115	;'s'
  1638  007B30  75                 	db	117	;'u'
  1639  007B31  65                 	db	101	;'e'
  1640  007B32  20                 	db	32
  1641  007B33  55                 	db	85	;'U'
  1642  007B34  70                 	db	112	;'p'
  1643  007B35  6C                 	db	108	;'l'
  1644  007B36  69                 	db	105	;'i'
  1645  007B37  6E                 	db	110	;'n'
  1646  007B38  6B                 	db	107	;'k'
  1647  007B39  20                 	db	32
  1648  007B3A  20                 	db	32
  1649  007B3B  00                 	db	0
  1650  007B3C                     STR_29:
  1651  007B3C  20                 	db	32
  1652  007B3D  28                 	db	40
  1653  007B3E  53                 	db	83	;'S'
  1654  007B3F  32                 	db	50	;'2'
  1655  007B40  29                 	db	41
  1656  007B41  20                 	db	32
  1657  007B42  20                 	db	32
  1658  007B43  20                 	db	32
  1659  007B44  20                 	db	32
  1660  007B45  20                 	db	32
  1661  007B46  20                 	db	32
  1662  007B47  28                 	db	40
  1663  007B48  53                 	db	83	;'S'
  1664  007B49  33                 	db	51	;'3'
  1665  007B4A  29                 	db	41
  1666  007B4B  20                 	db	32
  1667  007B4C  00                 	db	0
  1668  007B4D                     STR_32:
  1669  007B4D  20                 	db	32
  1670  007B4E  4A                 	db	74	;'J'
  1671  007B4F  6F                 	db	111	;'o'
  1672  007B50  69                 	db	105	;'i'
  1673  007B51  6E                 	db	110	;'n'
  1674  007B52  69                 	db	105	;'i'
  1675  007B53  6E                 	db	110	;'n'
  1676  007B54  67                 	db	103	;'g'
  1677  007B55  20                 	db	32
  1678  007B56  4D                 	db	77	;'M'
  1679  007B57  65                 	db	101	;'e'
  1680  007B58  74                 	db	116	;'t'
  1681  007B59  68                 	db	104	;'h'
  1682  007B5A  6F                 	db	111	;'o'
  1683  007B5B  64                 	db	100	;'d'
  1684  007B5C  20                 	db	32
  1685  007B5D  00                 	db	0
  1686  007B5E                     STR_91:
  1687  007B5E  53                 	db	83	;'S'
  1688  007B5F  65                 	db	101	;'e'
  1689  007B60  72                 	db	114	;'r'
  1690  007B61  76                 	db	118	;'v'
  1691  007B62  65                 	db	101	;'e'
  1692  007B63  72                 	db	114	;'r'
  1693  007B64  20                 	db	32
  1694  007B65  52                 	db	82	;'R'
  1695  007B66  65                 	db	101	;'e'
  1696  007B67  73                 	db	115	;'s'
  1697  007B68  70                 	db	112	;'p'
  1698  007B69  6F                 	db	111	;'o'
  1699  007B6A  6E                 	db	110	;'n'
  1700  007B6B  73                 	db	115	;'s'
  1701  007B6C  65                 	db	101	;'e'
  1702  007B6D  20                 	db	32
  1703  007B6E  00                 	db	0
  1704  007B6F                     STR_120:
  1705  007B6F  54                 	db	84	;'T'
  1706  007B70  78                 	db	120	;'x'
  1707  007B71  20                 	db	32
  1708  007B72  45                 	db	69	;'E'
  1709  007B73  76                 	db	118	;'v'
  1710  007B74  65                 	db	101	;'e'
  1711  007B75  6E                 	db	110	;'n'
  1712  007B76  74                 	db	116	;'t'
  1713  007B77  20                 	db	32
  1714  007B78  54                 	db	84	;'T'
  1715  007B79  69                 	db	105	;'i'
  1716  007B7A  6D                 	db	109	;'m'
  1717  007B7B  69                 	db	105	;'i'
  1718  007B7C  6E                 	db	110	;'n'
  1719  007B7D  67                 	db	103	;'g'
  1720  007B7E  20                 	db	32
  1721  007B7F  00                 	db	0
  1722  007B80                     STR_119:
  1723  007B80  50                 	db	80	;'P'
  1724  007B81  65                 	db	101	;'e'
  1725  007B82  72                 	db	114	;'r'
  1726  007B83  69                 	db	105	;'i'
  1727  007B84  6F                 	db	111	;'o'
  1728  007B85  64                 	db	100	;'d'
  1729  007B86  69                 	db	105	;'i'
  1730  007B87  63                 	db	99	;'c'
  1731  007B88  20                 	db	32
  1732  007B89  55                 	db	85	;'U'
  1733  007B8A  70                 	db	112	;'p'
  1734  007B8B  6C                 	db	108	;'l'
  1735  007B8C  69                 	db	105	;'i'
  1736  007B8D  6E                 	db	110	;'n'
  1737  007B8E  6B                 	db	107	;'k'
  1738  007B8F  20                 	db	32
  1739  007B90  00                 	db	0
  1740  007B91                     STR_76:
  1741  007B91  20                 	db	32
  1742  007B92  4C                 	db	76	;'L'
  1743  007B93  6F                 	db	111	;'o'
  1744  007B94  52                 	db	82	;'R'
  1745  007B95  61                 	db	97	;'a'
  1746  007B96  57                 	db	87	;'W'
  1747  007B97  41                 	db	65	;'A'
  1748  007B98  4E                 	db	78	;'N'
  1749  007B99  20                 	db	32
  1750  007B9A  50                 	db	80	;'P'
  1751  007B9B  61                 	db	97	;'a'
  1752  007B9C  63                 	db	99	;'c'
  1753  007B9D  6B                 	db	107	;'k'
  1754  007B9E  65                 	db	101	;'e'
  1755  007B9F  74                 	db	116	;'t'
  1756  007BA0  20                 	db	32
  1757  007BA1  00                 	db	0
  1758  007BA2                     STR_33:
  1759  007BA2  3C                 	db	60	;'<'
  1760  007BA3  2D                 	db	45
  1761  007BA4  20                 	db	32
  1762  007BA5  41                 	db	65	;'A'
  1763  007BA6  42                 	db	66	;'B'
  1764  007BA7  50                 	db	80	;'P'
  1765  007BA8  20                 	db	32
  1766  007BA9  20                 	db	32
  1767  007BAA  20                 	db	32
  1768  007BAB  4F                 	db	79	;'O'
  1769  007BAC  54                 	db	84	;'T'
  1770  007BAD  41                 	db	65	;'A'
  1771  007BAE  41                 	db	65	;'A'
  1772  007BAF  20                 	db	32
  1773  007BB0  2D                 	db	45
  1774  007BB1  3E                 	db	62	;'>'
  1775  007BB2  00                 	db	0
  1776  007BB3                     STR_26:
  1777  007BB3  52                 	db	82	;'R'
  1778  007BB4  65                 	db	101	;'e'
  1779  007BB5  52                 	db	82	;'R'
  1780  007BB6  75                 	db	117	;'u'
  1781  007BB7  6E                 	db	110	;'n'
  1782  007BB8  20                 	db	32
  1783  007BB9  50                 	db	80	;'P'
  1784  007BBA  77                 	db	119	;'w'
  1785  007BBB  72                 	db	114	;'r'
  1786  007BBC  54                 	db	84	;'T'
  1787  007BBD  73                 	db	115	;'s'
  1788  007BBE  74                 	db	116	;'t'
  1789  007BBF  3C                 	db	60	;'<'
  1790  007BC0  53                 	db	83	;'S'
  1791  007BC1  32                 	db	50	;'2'
  1792  007BC2  3E                 	db	62	;'>'
  1793  007BC3  00                 	db	0
  1794  007BC4                     STR_94:
  1795  007BC4  44                 	db	68	;'D'
  1796  007BC5  61                 	db	97	;'a'
  1797  007BC6  74                 	db	116	;'t'
  1798  007BC7  61                 	db	97	;'a'
  1799  007BC8  20                 	db	32
  1800  007BC9  54                 	db	84	;'T'
  1801  007BCA  72                 	db	114	;'r'
  1802  007BCB  61                 	db	97	;'a'
  1803  007BCC  6E                 	db	110	;'n'
  1804  007BCD  73                 	db	115	;'s'
  1805  007BCE  6D                 	db	109	;'m'
  1806  007BCF  69                 	db	105	;'i'
  1807  007BD0  74                 	db	116	;'t'
  1808  007BD1  74                 	db	116	;'t'
  1809  007BD2  65                 	db	101	;'e'
  1810  007BD3  64                 	db	100	;'d'
  1811  007BD4  00                 	db	0
  1812  007BD5                     STR_151:
  1813  007BD5  45                 	db	69	;'E'
  1814  007BD6  6E                 	db	110	;'n'
  1815  007BD7  74                 	db	116	;'t'
  1816  007BD8  65                 	db	101	;'e'
  1817  007BD9  72                 	db	114	;'r'
  1818  007BDA  20                 	db	32
  1819  007BDB  53                 	db	83	;'S'
  1820  007BDC  6C                 	db	108	;'l'
  1821  007BDD  65                 	db	101	;'e'
  1822  007BDE  65                 	db	101	;'e'
  1823  007BDF  70                 	db	112	;'p'
  1824  007BE0  20                 	db	32
  1825  007BE1  4D                 	db	77	;'M'
  1826  007BE2  6F                 	db	111	;'o'
  1827  007BE3  64                 	db	100	;'d'
  1828  007BE4  65                 	db	101	;'e'
  1829  007BE5  00                 	db	0
  1830  007BE6                     STR_81:
  1831  007BE6  55                 	db	85	;'U'
  1832  007BE7  70                 	db	112	;'p'
  1833  007BE8  6C                 	db	108	;'l'
  1834  007BE9  69                 	db	105	;'i'
  1835  007BEA  6E                 	db	110	;'n'
  1836  007BEB  6B                 	db	107	;'k'
  1837  007BEC  20                 	db	32
  1838  007BED  50                 	db	80	;'P'
  1839  007BEE  63                 	db	99	;'c'
  1840  007BEF  6B                 	db	107	;'k'
  1841  007BF0  74                 	db	116	;'t'
  1842  007BF1  20                 	db	32
  1843  007BF2  54                 	db	84	;'T'
  1844  007BF3  79                 	db	121	;'y'
  1845  007BF4  70                 	db	112	;'p'
  1846  007BF5  65                 	db	101	;'e'
  1847  007BF6  00                 	db	0
  1848  007BF7                     STR_135:
  1849  007BF7  53                 	db	83	;'S'
  1850  007BF8  65                 	db	101	;'e'
  1851  007BF9  6C                 	db	108	;'l'
  1852  007BFA  65                 	db	101	;'e'
  1853  007BFB  63                 	db	99	;'c'
  1854  007BFC  74                 	db	116	;'t'
  1855  007BFD  20                 	db	32
  1856  007BFE  44                 	db	68	;'D'
  1857  007BFF  61                 	db	97	;'a'
  1858  007C00  74                 	db	116	;'t'
  1859  007C01  61                 	db	97	;'a'
  1860  007C02  20                 	db	32
  1861  007C03  52                 	db	82	;'R'
  1862  007C04  61                 	db	97	;'a'
  1863  007C05  74                 	db	116	;'t'
  1864  007C06  65                 	db	101	;'e'
  1865  007C07  00                 	db	0
  1866  007C08                     STR_27:
  1867  007C08  4D                 	db	77	;'M'
  1868  007C09  6F                 	db	111	;'o'
  1869  007C0A  62                 	db	98	;'b'
  1870  007C0B  69                 	db	105	;'i'
  1871  007C0C  6C                 	db	108	;'l'
  1872  007C0D  65                 	db	101	;'e'
  1873  007C0E  20                 	db	32
  1874  007C0F  4D                 	db	77	;'M'
  1875  007C10  6F                 	db	111	;'o'
  1876  007C11  74                 	db	116	;'t'
  1877  007C12  65                 	db	101	;'e'
  1878  007C13  20                 	db	32
  1879  007C14  2D                 	db	45
  1880  007C15  41                 	db	65	;'A'
  1881  007C16  70                 	db	112	;'p'
  1882  007C17  70                 	db	112	;'p'
  1883  007C18  00                 	db	0
  1884  007C19                     STR_28:
  1885  007C19  4E                 	db	78	;'N'
  1886  007C1A  61                 	db	97	;'a'
  1887  007C1B  76                 	db	118	;'v'
  1888  007C1C  69                 	db	105	;'i'
  1889  007C1D  67                 	db	103	;'g'
  1890  007C1E  61                 	db	97	;'a'
  1891  007C1F  74                 	db	116	;'t'
  1892  007C20  65                 	db	101	;'e'
  1893  007C21  20                 	db	32
  1894  007C22  20                 	db	32
  1895  007C23  53                 	db	83	;'S'
  1896  007C24  65                 	db	101	;'e'
  1897  007C25  6C                 	db	108	;'l'
  1898  007C26  65                 	db	101	;'e'
  1899  007C27  63                 	db	99	;'c'
  1900  007C28  74                 	db	116	;'t'
  1901  007C29  00                 	db	0
  1902  007C2A                     STR_111:
  1903  007C2A  4D                 	db	77	;'M'
  1904  007C2B  65                 	db	101	;'e'
  1905  007C2C  6E                 	db	110	;'n'
  1906  007C2D  75                 	db	117	;'u'
  1907  007C2E  20                 	db	32
  1908  007C2F  48                 	db	72	;'H'
  1909  007C30  61                 	db	97	;'a'
  1910  007C31  73                 	db	115	;'s'
  1911  007C32  20                 	db	32
  1912  007C33  54                 	db	84	;'T'
  1913  007C34  69                 	db	105	;'i'
  1914  007C35  6D                 	db	109	;'m'
  1915  007C36  65                 	db	101	;'e'
  1916  007C37  6F                 	db	111	;'o'
  1917  007C38  75                 	db	117	;'u'
  1918  007C39  74                 	db	116	;'t'
  1919  007C3A  00                 	db	0
  1920  007C3B                     STR_71:
  1921  007C3B  53                 	db	83	;'S'
  1922  007C3C  65                 	db	101	;'e'
  1923  007C3D  6E                 	db	110	;'n'
  1924  007C3E  64                 	db	100	;'d'
  1925  007C3F  20                 	db	32
  1926  007C40  50                 	db	80	;'P'
  1927  007C41  65                 	db	101	;'e'
  1928  007C42  72                 	db	114	;'r'
  1929  007C43  69                 	db	105	;'i'
  1930  007C44  6F                 	db	111	;'o'
  1931  007C45  64                 	db	100	;'d'
  1932  007C46  69                 	db	105	;'i'
  1933  007C47  63                 	db	99	;'c'
  1934  007C48  20                 	db	32
  1935  007C49  54                 	db	84	;'T'
  1936  007C4A  78                 	db	120	;'x'
  1937  007C4B  00                 	db	0
  1938  007C4C                     STR_105:
  1939  007C4C  44                 	db	68	;'D'
  1940  007C4D  6F                 	db	111	;'o'
  1941  007C4E  77                 	db	119	;'w'
  1942  007C4F  6E                 	db	110	;'n'
  1943  007C50  6C                 	db	108	;'l'
  1944  007C51  69                 	db	105	;'i'
  1945  007C52  6E                 	db	110	;'n'
  1946  007C53  6B                 	db	107	;'k'
  1947  007C54  20                 	db	32
  1948  007C55  44                 	db	68	;'D'
  1949  007C56  69                 	db	105	;'i'
  1950  007C57  73                 	db	115	;'s'
  1951  007C58  70                 	db	112	;'p'
  1952  007C59  6C                 	db	108	;'l'
  1953  007C5A  61                 	db	97	;'a'
  1954  007C5B  79                 	db	121	;'y'
  1955  007C5C  00                 	db	0
  1956  007C5D                     STR_103:
  1957  007C5D  20                 	db	32
  1958  007C5E  20                 	db	32
  1959  007C5F  20                 	db	32
  1960  007C60  20                 	db	32
  1961  007C61  44                 	db	68	;'D'
  1962  007C62  69                 	db	105	;'i'
  1963  007C63  73                 	db	115	;'s'
  1964  007C64  70                 	db	112	;'p'
  1965  007C65  6C                 	db	108	;'l'
  1966  007C66  61                 	db	97	;'a'
  1967  007C67  79                 	db	121	;'y'
  1968  007C68  20                 	db	32
  1969  007C69  20                 	db	32
  1970  007C6A  20                 	db	32
  1971  007C6B  20                 	db	32
  1972  007C6C  00                 	db	0
  1973  007C6D                     STR_102:
  1974  007C6D  20                 	db	32
  1975  007C6E  20                 	db	32
  1976  007C6F  53                 	db	83	;'S'
  1977  007C70  65                 	db	101	;'e'
  1978  007C71  6E                 	db	110	;'n'
  1979  007C72  73                 	db	115	;'s'
  1980  007C73  6F                 	db	111	;'o'
  1981  007C74  72                 	db	114	;'r'
  1982  007C75  20                 	db	32
  1983  007C76  44                 	db	68	;'D'
  1984  007C77  61                 	db	97	;'a'
  1985  007C78  74                 	db	116	;'t'
  1986  007C79  61                 	db	97	;'a'
  1987  007C7A  20                 	db	32
  1988  007C7B  20                 	db	32
  1989  007C7C  00                 	db	0
  1990  007C7D                     STR_114:
  1991  007C7D  28                 	db	40
  1992  007C7E  4E                 	db	78	;'N'
  1993  007C7F  41                 	db	65	;'A'
  1994  007C80  56                 	db	86	;'V'
  1995  007C81  29                 	db	41
  1996  007C82  20                 	db	32
  1997  007C83  20                 	db	32
  1998  007C84  20                 	db	32
  1999  007C85  20                 	db	32
  2000  007C86  28                 	db	40
  2001  007C87  43                 	db	67	;'C'
  2002  007C88  4E                 	db	78	;'N'
  2003  007C89  47                 	db	71	;'G'
  2004  007C8A  29                 	db	41
  2005  007C8B  20                 	db	32
  2006  007C8C  00                 	db	0
  2007  007C8D                     STR_77:
  2008  007C8D  28                 	db	40
  2009  007C8E  4E                 	db	78	;'N'
  2010  007C8F  41                 	db	65	;'A'
  2011  007C90  56                 	db	86	;'V'
  2012  007C91  29                 	db	41
  2013  007C92  20                 	db	32
  2014  007C93  20                 	db	32
  2015  007C94  20                 	db	32
  2016  007C95  20                 	db	32
  2017  007C96  28                 	db	40
  2018  007C97  53                 	db	83	;'S'
  2019  007C98  45                 	db	69	;'E'
  2020  007C99  4C                 	db	76	;'L'
  2021  007C9A  29                 	db	41
  2022  007C9B  20                 	db	32
  2023  007C9C  00                 	db	0
  2024  007C9D                     STR_152:
  2025  007C9D  28                 	db	40
  2026  007C9E  4E                 	db	78	;'N'
  2027  007C9F  41                 	db	65	;'A'
  2028  007CA0  56                 	db	86	;'V'
  2029  007CA1  29                 	db	41
  2030  007CA2  20                 	db	32
  2031  007CA3  20                 	db	32
  2032  007CA4  20                 	db	32
  2033  007CA5  20                 	db	32
  2034  007CA6  28                 	db	40
  2035  007CA7  53                 	db	83	;'S'
  2036  007CA8  4C                 	db	76	;'L'
  2037  007CA9  50                 	db	80	;'P'
  2038  007CAA  29                 	db	41
  2039  007CAB  20                 	db	32
  2040  007CAC  00                 	db	0
  2041  007CAD                     STR_163:
  2042  007CAD  6D                 	db	109	;'m'
  2043  007CAE  61                 	db	97	;'a'
  2044  007CAF  63                 	db	99	;'c'
  2045  007CB0  20                 	db	32
  2046  007CB1  73                 	db	115	;'s'
  2047  007CB2  65                 	db	101	;'e'
  2048  007CB3  74                 	db	116	;'t'
  2049  007CB4  20                 	db	32
  2050  007CB5  61                 	db	97	;'a'
  2051  007CB6  64                 	db	100	;'d'
  2052  007CB7  72                 	db	114	;'r'
  2053  007CB8  20                 	db	32
  2054  007CB9  6F                 	db	111	;'o'
  2055  007CBA  66                 	db	102	;'f'
  2056  007CBB  66                 	db	102	;'f'
  2057  007CBC  00                 	db	0
  2058  007CBD                     STR_98:
  2059  007CBD  4E                 	db	78	;'N'
  2060  007CBE  6F                 	db	111	;'o'
  2061  007CBF  20                 	db	32
  2062  007CC0  46                 	db	70	;'F'
  2063  007CC1  72                 	db	114	;'r'
  2064  007CC2  65                 	db	101	;'e'
  2065  007CC3  65                 	db	101	;'e'
  2066  007CC4  20                 	db	32
  2067  007CC5  43                 	db	67	;'C'
  2068  007CC6  68                 	db	104	;'h'
  2069  007CC7  61                 	db	97	;'a'
  2070  007CC8  6E                 	db	110	;'n'
  2071  007CC9  6E                 	db	110	;'n'
  2072  007CCA  65                 	db	101	;'e'
  2073  007CCB  6C                 	db	108	;'l'
  2074  007CCC  00                 	db	0
  2075  007CCD                     STR_7:
  2076  007CCD  42                 	db	66	;'B'
  2077  007CCE  75                 	db	117	;'u'
  2078  007CCF  69                 	db	105	;'i'
  2079  007CD0  6C                 	db	108	;'l'
  2080  007CD1  64                 	db	100	;'d'
  2081  007CD2  20                 	db	32
  2082  007CD3  44                 	db	68	;'D'
  2083  007CD4  61                 	db	97	;'a'
  2084  007CD5  74                 	db	116	;'t'
  2085  007CD6  65                 	db	101	;'e'
  2086  007CD7  2F                 	db	47
  2087  007CD8  54                 	db	84	;'T'
  2088  007CD9  69                 	db	105	;'i'
  2089  007CDA  6D                 	db	109	;'m'
  2090  007CDB  65                 	db	101	;'e'
  2091  007CDC  00                 	db	0
  2092  007CDD                     STR_112:
  2093  007CDD  20                 	db	32
  2094  007CDE  20                 	db	32
  2095  007CDF  20                 	db	32
  2096  007CE0  20                 	db	32
  2097  007CE1  45                 	db	69	;'E'
  2098  007CE2  6E                 	db	110	;'n'
  2099  007CE3  61                 	db	97	;'a'
  2100  007CE4  62                 	db	98	;'b'
  2101  007CE5  6C                 	db	108	;'l'
  2102  007CE6  65                 	db	101	;'e'
  2103  007CE7  64                 	db	100	;'d'
  2104  007CE8  20                 	db	32
  2105  007CE9  20                 	db	32
  2106  007CEA  20                 	db	32
  2107  007CEB  00                 	db	0
  2108  007CEC                     STR_113:
  2109  007CEC  20                 	db	32
  2110  007CED  20                 	db	32
  2111  007CEE  20                 	db	32
  2112  007CEF  20                 	db	32
  2113  007CF0  44                 	db	68	;'D'
  2114  007CF1  69                 	db	105	;'i'
  2115  007CF2  73                 	db	115	;'s'
  2116  007CF3  61                 	db	97	;'a'
  2117  007CF4  62                 	db	98	;'b'
  2118  007CF5  6C                 	db	108	;'l'
  2119  007CF6  65                 	db	101	;'e'
  2120  007CF7  64                 	db	100	;'d'
  2121  007CF8  20                 	db	32
  2122  007CF9  20                 	db	32
  2123  007CFA  00                 	db	0
  2124  007CFB                     STR_172:
  2125  007CFB  6D                 	db	109	;'m'
  2126  007CFC  61                 	db	97	;'a'
  2127  007CFD  63                 	db	99	;'c'
  2128  007CFE  20                 	db	32
  2129  007CFF  73                 	db	115	;'s'
  2130  007D00  65                 	db	101	;'e'
  2131  007D01  74                 	db	116	;'t'
  2132  007D02  20                 	db	32
  2133  007D03  61                 	db	97	;'a'
  2134  007D04  64                 	db	100	;'d'
  2135  007D05  72                 	db	114	;'r'
  2136  007D06  20                 	db	32
  2137  007D07  6F                 	db	111	;'o'
  2138  007D08  6E                 	db	110	;'n'
  2139  007D09  00                 	db	0
  2140  007D0A                     STR_2:
  2141  007D0A  20                 	db	32
  2142  007D0B  20                 	db	32
  2143  007D0C  20                 	db	32
  2144  007D0D  4C                 	db	76	;'L'
  2145  007D0E  6F                 	db	111	;'o'
  2146  007D0F  52                 	db	82	;'R'
  2147  007D10  61                 	db	97	;'a'
  2148  007D11  20                 	db	32
  2149  007D12  63                 	db	99	;'c'
  2150  007D13  6F                 	db	111	;'o'
  2151  007D14  6E                 	db	110	;'n'
  2152  007D15  79                 	db	121	;'y'
  2153  007D16  20                 	db	32
  2154  007D17  20                 	db	32
  2155  007D18  00                 	db	0
  2156  007D19                     STR_74:
  2157  007D19  6D                 	db	109	;'m'
  2158  007D1A  61                 	db	97	;'a'
  2159  007D1B  63                 	db	99	;'c'
  2160  007D1C  20                 	db	32
  2161  007D1D  74                 	db	116	;'t'
  2162  007D1E  78                 	db	120	;'x'
  2163  007D1F  20                 	db	32
  2164  007D20  75                 	db	117	;'u'
  2165  007D21  6E                 	db	110	;'n'
  2166  007D22  63                 	db	99	;'c'
  2167  007D23  6E                 	db	110	;'n'
  2168  007D24  66                 	db	102	;'f'
  2169  007D25  20                 	db	32
  2170  007D26  00                 	db	0
  2171  007D27                     STR_43:
  2172  007D27  6D                 	db	109	;'m'
  2173  007D28  61                 	db	97	;'a'
  2174  007D29  63                 	db	99	;'c'
  2175  007D2A  20                 	db	32
  2176  007D2B  6A                 	db	106	;'j'
  2177  007D2C  6F                 	db	111	;'o'
  2178  007D2D  69                 	db	105	;'i'
  2179  007D2E  6E                 	db	110	;'n'
  2180  007D2F  20                 	db	32
  2181  007D30  6F                 	db	111	;'o'
  2182  007D31  74                 	db	116	;'t'
  2183  007D32  61                 	db	97	;'a'
  2184  007D33  61                 	db	97	;'a'
  2185  007D34  00                 	db	0
  2186  007D35                     STR_57:
  2187  007D35  69                 	db	105	;'i'
  2188  007D36  6E                 	db	110	;'n'
  2189  007D37  76                 	db	118	;'v'
  2190  007D38  61                 	db	97	;'a'
  2191  007D39  6C                 	db	108	;'l'
  2192  007D3A  69                 	db	105	;'i'
  2193  007D3B  64                 	db	100	;'d'
  2194  007D3C  5F                 	db	95	;'_'
  2195  007D3D  70                 	db	112	;'p'
  2196  007D3E  61                 	db	97	;'a'
  2197  007D3F  72                 	db	114	;'r'
  2198  007D40  61                 	db	97	;'a'
  2199  007D41  6D                 	db	109	;'m'
  2200  007D42  00                 	db	0
  2201  007D43                     STR_45:
  2202  007D43  6B                 	db	107	;'k'
  2203  007D44  65                 	db	101	;'e'
  2204  007D45  79                 	db	121	;'y'
  2205  007D46  73                 	db	115	;'s'
  2206  007D47  5F                 	db	95	;'_'
  2207  007D48  6E                 	db	110	;'n'
  2208  007D49  6F                 	db	111	;'o'
  2209  007D4A  74                 	db	116	;'t'
  2210  007D4B  5F                 	db	95	;'_'
  2211  007D4C  69                 	db	105	;'i'
  2212  007D4D  6E                 	db	110	;'n'
  2213  007D4E  69                 	db	105	;'i'
  2214  007D4F  74                 	db	116	;'t'
  2215  007D50  00                 	db	0
  2216  007D51                     STR_82:
  2217  007D51  54                 	db	84	;'T'
  2218  007D52  68                 	db	104	;'h'
  2219  007D53  72                 	db	114	;'r'
  2220  007D54  6F                 	db	111	;'o'
  2221  007D55  75                 	db	117	;'u'
  2222  007D56  20                 	db	32
  2223  007D57  50                 	db	80	;'P'
  2224  007D58  6F                 	db	111	;'o'
  2225  007D59  72                 	db	114	;'r'
  2226  007D5A  74                 	db	116	;'t'
  2227  007D5B  23                 	db	35
  2228  007D5C  20                 	db	32
  2229  007D5D  00                 	db	0
  2230  007D5E                     STR_73:
  2231  007D5E  4C                 	db	76	;'L'
  2232  007D5F  3A                 	db	58	;':'
  2233  007D60  20                 	db	32
  2234  007D61  20                 	db	32
  2235  007D62  20                 	db	32
  2236  007D63  20                 	db	32
  2237  007D64  20                 	db	32
  2238  007D65  20                 	db	32
  2239  007D66  20                 	db	32
  2240  007D67  54                 	db	84	;'T'
  2241  007D68  3A                 	db	58	;':'
  2242  007D69  20                 	db	32
  2243  007D6A  00                 	db	0
  2244  007D6B                     STR_164:
  2245  007D6B  6D                 	db	109	;'m'
  2246  007D6C  61                 	db	97	;'a'
  2247  007D6D  63                 	db	99	;'c'
  2248  007D6E  20                 	db	32
  2249  007D6F  73                 	db	115	;'s'
  2250  007D70  65                 	db	101	;'e'
  2251  007D71  74                 	db	116	;'t'
  2252  007D72  20                 	db	32
  2253  007D73  64                 	db	100	;'d'
  2254  007D74  72                 	db	114	;'r'
  2255  007D75  20                 	db	32
  2256  007D76  30                 	db	48	;'0'
  2257  007D77  00                 	db	0
  2258  007D78                     STR_165:
  2259  007D78  6D                 	db	109	;'m'
  2260  007D79  61                 	db	97	;'a'
  2261  007D7A  63                 	db	99	;'c'
  2262  007D7B  20                 	db	32
  2263  007D7C  73                 	db	115	;'s'
  2264  007D7D  65                 	db	101	;'e'
  2265  007D7E  74                 	db	116	;'t'
  2266  007D7F  20                 	db	32
  2267  007D80  64                 	db	100	;'d'
  2268  007D81  72                 	db	114	;'r'
  2269  007D82  20                 	db	32
  2270  007D83  31                 	db	49	;'1'
  2271  007D84  00                 	db	0
  2272  007D85                     STR_166:
  2273  007D85  6D                 	db	109	;'m'
  2274  007D86  61                 	db	97	;'a'
  2275  007D87  63                 	db	99	;'c'
  2276  007D88  20                 	db	32
  2277  007D89  73                 	db	115	;'s'
  2278  007D8A  65                 	db	101	;'e'
  2279  007D8B  74                 	db	116	;'t'
  2280  007D8C  20                 	db	32
  2281  007D8D  64                 	db	100	;'d'
  2282  007D8E  72                 	db	114	;'r'
  2283  007D8F  20                 	db	32
  2284  007D90  32                 	db	50	;'2'
  2285  007D91  00                 	db	0
  2286  007D92                     STR_167:
  2287  007D92  6D                 	db	109	;'m'
  2288  007D93  61                 	db	97	;'a'
  2289  007D94  63                 	db	99	;'c'
  2290  007D95  20                 	db	32
  2291  007D96  73                 	db	115	;'s'
  2292  007D97  65                 	db	101	;'e'
  2293  007D98  74                 	db	116	;'t'
  2294  007D99  20                 	db	32
  2295  007D9A  64                 	db	100	;'d'
  2296  007D9B  72                 	db	114	;'r'
  2297  007D9C  20                 	db	32
  2298  007D9D  33                 	db	51	;'3'
  2299  007D9E  00                 	db	0
  2300  007D9F                     STR_168:
  2301  007D9F  6D                 	db	109	;'m'
  2302  007DA0  61                 	db	97	;'a'
  2303  007DA1  63                 	db	99	;'c'
  2304  007DA2  20                 	db	32
  2305  007DA3  73                 	db	115	;'s'
  2306  007DA4  65                 	db	101	;'e'
  2307  007DA5  74                 	db	116	;'t'
  2308  007DA6  20                 	db	32
  2309  007DA7  64                 	db	100	;'d'
  2310  007DA8  72                 	db	114	;'r'
  2311  007DA9  20                 	db	32
  2312  007DAA  34                 	db	52	;'4'
  2313  007DAB  00                 	db	0
  2314  007DAC                     STR_169:
  2315  007DAC  6D                 	db	109	;'m'
  2316  007DAD  61                 	db	97	;'a'
  2317  007DAE  63                 	db	99	;'c'
  2318  007DAF  20                 	db	32
  2319  007DB0  73                 	db	115	;'s'
  2320  007DB1  65                 	db	101	;'e'
  2321  007DB2  74                 	db	116	;'t'
  2322  007DB3  20                 	db	32
  2323  007DB4  64                 	db	100	;'d'
  2324  007DB5  72                 	db	114	;'r'
  2325  007DB6  20                 	db	32
  2326  007DB7  35                 	db	53	;'5'
  2327  007DB8  00                 	db	0
  2328  007DB9                     STR_170:
  2329  007DB9  6D                 	db	109	;'m'
  2330  007DBA  61                 	db	97	;'a'
  2331  007DBB  63                 	db	99	;'c'
  2332  007DBC  20                 	db	32
  2333  007DBD  73                 	db	115	;'s'
  2334  007DBE  65                 	db	101	;'e'
  2335  007DBF  74                 	db	116	;'t'
  2336  007DC0  20                 	db	32
  2337  007DC1  64                 	db	100	;'d'
  2338  007DC2  72                 	db	114	;'r'
  2339  007DC3  20                 	db	32
  2340  007DC4  36                 	db	54	;'6'
  2341  007DC5  00                 	db	0
  2342  007DC6                     STR_171:
  2343  007DC6  6D                 	db	109	;'m'
  2344  007DC7  61                 	db	97	;'a'
  2345  007DC8  63                 	db	99	;'c'
  2346  007DC9  20                 	db	32
  2347  007DCA  73                 	db	115	;'s'
  2348  007DCB  65                 	db	101	;'e'
  2349  007DCC  74                 	db	116	;'t'
  2350  007DCD  20                 	db	32
  2351  007DCE  64                 	db	100	;'d'
  2352  007DCF  72                 	db	114	;'r'
  2353  007DD0  20                 	db	32
  2354  007DD1  37                 	db	55	;'7'
  2355  007DD2  00                 	db	0
  2356  007DD3                     STR_41:
  2357  007DD3  6D                 	db	109	;'m'
  2358  007DD4  61                 	db	97	;'a'
  2359  007DD5  63                 	db	99	;'c'
  2360  007DD6  20                 	db	32
  2361  007DD7  6A                 	db	106	;'j'
  2362  007DD8  6F                 	db	111	;'o'
  2363  007DD9  69                 	db	105	;'i'
  2364  007DDA  6E                 	db	110	;'n'
  2365  007DDB  20                 	db	32
  2366  007DDC  61                 	db	97	;'a'
  2367  007DDD  62                 	db	98	;'b'
  2368  007DDE  70                 	db	112	;'p'
  2369  007DDF  00                 	db	0
  2370  007DE0                     STR_10:
  2371  007DE0  42                 	db	66	;'B'
  2372  007DE1  75                 	db	117	;'u'
  2373  007DE2  74                 	db	116	;'t'
  2374  007DE3  74                 	db	116	;'t'
  2375  007DE4  6F                 	db	111	;'o'
  2376  007DE5  6E                 	db	110	;'n'
  2377  007DE6  20                 	db	32
  2378  007DE7  54                 	db	84	;'T'
  2379  007DE8  65                 	db	101	;'e'
  2380  007DE9  73                 	db	115	;'s'
  2381  007DEA  74                 	db	116	;'t'
  2382  007DEB  3A                 	db	58	;':'
  2383  007DEC  00                 	db	0
  2384  007DED                     STR_13:
  2385  007DED  42                 	db	66	;'B'
  2386  007DEE  75                 	db	117	;'u'
  2387  007DEF  74                 	db	116	;'t'
  2388  007DF0  74                 	db	116	;'t'
  2389  007DF1  6F                 	db	111	;'o'
  2390  007DF2  6E                 	db	110	;'n'
  2391  007DF3  31                 	db	49	;'1'
  2392  007DF4  20                 	db	32
  2393  007DF5  50                 	db	80	;'P'
  2394  007DF6  41                 	db	65	;'A'
  2395  007DF7  53                 	db	83	;'S'
  2396  007DF8  53                 	db	83	;'S'
  2397  007DF9  00                 	db	0
  2398  007DFA                     STR_14:
  2399  007DFA  42                 	db	66	;'B'
  2400  007DFB  75                 	db	117	;'u'
  2401  007DFC  74                 	db	116	;'t'
  2402  007DFD  74                 	db	116	;'t'
  2403  007DFE  6F                 	db	111	;'o'
  2404  007DFF  6E                 	db	110	;'n'
  2405  007E00  32                 	db	50	;'2'
  2406  007E01  20                 	db	32
  2407  007E02  50                 	db	80	;'P'
  2408  007E03  41                 	db	65	;'A'
  2409  007E04  53                 	db	83	;'S'
  2410  007E05  53                 	db	83	;'S'
  2411  007E06  00                 	db	0
  2412  007E07                     STR_12:
  2413  007E07  50                 	db	80	;'P'
  2414  007E08  72                 	db	114	;'r'
  2415  007E09  65                 	db	101	;'e'
  2416  007E0A  73                 	db	115	;'s'
  2417  007E0B  73                 	db	115	;'s'
  2418  007E0C  20                 	db	32
  2419  007E0D  42                 	db	66	;'B'
  2420  007E0E  75                 	db	117	;'u'
  2421  007E0F  74                 	db	116	;'t'
  2422  007E10  74                 	db	116	;'t'
  2423  007E11  6F                 	db	111	;'o'
  2424  007E12  6E                 	db	110	;'n'
  2425  007E13  00                 	db	0
  2426  007E14                     STR_189:
  2427  007E14  55                 	db	85	;'U'
  2428  007E15  53                 	db	83	;'S'
  2429  007E16  42                 	db	66	;'B'
  2430  007E17  20                 	db	32
  2431  007E18  48                 	db	72	;'H'
  2432  007E19  61                 	db	97	;'a'
  2433  007E1A  6E                 	db	110	;'n'
  2434  007E1B  64                 	db	100	;'d'
  2435  007E1C  6C                 	db	108	;'l'
  2436  007E1D  65                 	db	101	;'e'
  2437  007E1E  72                 	db	114	;'r'
  2438  007E1F  00                 	db	0
  2439  007E20                     STR_72:
  2440  007E20  4F                 	db	79	;'O'
  2441  007E21  6E                 	db	110	;'n'
  2442  007E22  20                 	db	32
  2443  007E23  50                 	db	80	;'P'
  2444  007E24  6F                 	db	111	;'o'
  2445  007E25  72                 	db	114	;'r'
  2446  007E26  74                 	db	116	;'t'
  2447  007E27  20                 	db	32
  2448  007E28  23                 	db	35
  2449  007E29  3A                 	db	58	;':'
  2450  007E2A  20                 	db	32
  2451  007E2B  00                 	db	0
  2452  007E2C                     STR_87:
  2453  007E2C  54                 	db	84	;'T'
  2454  007E2D  78                 	db	120	;'x'
  2455  007E2E  20                 	db	32
  2456  007E2F  50                 	db	80	;'P'
  2457  007E30  6F                 	db	111	;'o'
  2458  007E31  72                 	db	114	;'r'
  2459  007E32  74                 	db	116	;'t'
  2460  007E33  20                 	db	32
  2461  007E34  23                 	db	35
  2462  007E35  3A                 	db	58	;':'
  2463  007E36  20                 	db	32
  2464  007E37  00                 	db	0
  2465  007E38                     STR_86:
  2466  007E38  53                 	db	83	;'S'
  2467  007E39  65                 	db	101	;'e'
  2468  007E3A  6E                 	db	110	;'n'
  2469  007E3B  74                 	db	116	;'t'
  2470  007E3C  20                 	db	32
  2471  007E3D  44                 	db	68	;'D'
  2472  007E3E  61                 	db	97	;'a'
  2473  007E3F  74                 	db	116	;'t'
  2474  007E40  61                 	db	97	;'a'
  2475  007E41  3A                 	db	58	;':'
  2476  007E42  20                 	db	32
  2477  007E43  00                 	db	0
  2478  007E44                     STR_136:
  2479  007E44  44                 	db	68	;'D'
  2480  007E45  61                 	db	97	;'a'
  2481  007E46  74                 	db	116	;'t'
  2482  007E47  61                 	db	97	;'a'
  2483  007E48  20                 	db	32
  2484  007E49  52                 	db	82	;'R'
  2485  007E4A  61                 	db	97	;'a'
  2486  007E4B  74                 	db	116	;'t'
  2487  007E4C  65                 	db	101	;'e'
  2488  007E4D  3A                 	db	58	;':'
  2489  007E4E  20                 	db	32
  2490  007E4F  00                 	db	0
  2491  007E50                     STR_85:
  2492  007E50  6D                 	db	109	;'m'
  2493  007E51  61                 	db	97	;'a'
  2494  007E52  63                 	db	99	;'c'
  2495  007E53  20                 	db	32
  2496  007E54  74                 	db	116	;'t'
  2497  007E55  78                 	db	120	;'x'
  2498  007E56  20                 	db	32
  2499  007E57  63                 	db	99	;'c'
  2500  007E58  6E                 	db	110	;'n'
  2501  007E59  66                 	db	102	;'f'
  2502  007E5A  20                 	db	32
  2503  007E5B  00                 	db	0
  2504  007E5C                     STR_8:
  2505  007E5C  46                 	db	70	;'F'
  2506  007E5D  65                 	db	101	;'e'
  2507  007E5E  62                 	db	98	;'b'
  2508  007E5F  20                 	db	32
  2509  007E60  30                 	db	48	;'0'
  2510  007E61  35                 	db	53	;'5'
  2511  007E62  20                 	db	32
  2512  007E63  32                 	db	50	;'2'
  2513  007E64  30                 	db	48	;'0'
  2514  007E65  32                 	db	50	;'2'
  2515  007E66  30                 	db	48	;'0'
  2516  007E67  00                 	db	0
  2517  007E68                     STR_11:
  2518  007E68  42                 	db	66	;'B'
  2519  007E69  75                 	db	117	;'u'
  2520  007E6A  74                 	db	116	;'t'
  2521  007E6B  74                 	db	116	;'t'
  2522  007E6C  6F                 	db	111	;'o'
  2523  007E6D  6E                 	db	110	;'n'
  2524  007E6E  20                 	db	32
  2525  007E6F  46                 	db	70	;'F'
  2526  007E70  41                 	db	65	;'A'
  2527  007E71  49                 	db	73	;'I'
  2528  007E72  4C                 	db	76	;'L'
  2529  007E73  00                 	db	0
  2530  007E74                     STR_61:
  2531  007E74  4F                 	db	79	;'O'
  2532  007E75  54                 	db	84	;'T'
  2533  007E76  41                 	db	65	;'A'
  2534  007E77  41                 	db	65	;'A'
  2535  007E78  20                 	db	32
  2536  007E79  4A                 	db	74	;'J'
  2537  007E7A  6F                 	db	111	;'o'
  2538  007E7B  69                 	db	105	;'i'
  2539  007E7C  6E                 	db	110	;'n'
  2540  007E7D  20                 	db	32
  2541  007E7E  00                 	db	0
  2542  007E7F                     STR_59:
  2543  007E7F  6E                 	db	110	;'n'
  2544  007E80  6F                 	db	111	;'o'
  2545  007E81  5F                 	db	95	;'_'
  2546  007E82  66                 	db	102	;'f'
  2547  007E83  72                 	db	114	;'r'
  2548  007E84  65                 	db	101	;'e'
  2549  007E85  65                 	db	101	;'e'
  2550  007E86  5F                 	db	95	;'_'
  2551  007E87  63                 	db	99	;'c'
  2552  007E88  68                 	db	104	;'h'
  2553  007E89  00                 	db	0
  2554  007E8A                     STR_51:
  2555  007E8A  53                 	db	83	;'S'
  2556  007E8B  75                 	db	117	;'u'
  2557  007E8C  63                 	db	99	;'c'
  2558  007E8D  63                 	db	99	;'c'
  2559  007E8E  65                 	db	101	;'e'
  2560  007E8F  73                 	db	115	;'s'
  2561  007E90  73                 	db	115	;'s'
  2562  007E91  66                 	db	102	;'f'
  2563  007E92  75                 	db	117	;'u'
  2564  007E93  6C                 	db	108	;'l'
  2565  007E94  00                 	db	0
  2566  007E95                     STR_68:
  2567  007E95  6D                 	db	109	;'m'
  2568  007E96  61                 	db	97	;'a'
  2569  007E97  63                 	db	99	;'c'
  2570  007E98  20                 	db	32
  2571  007E99  67                 	db	103	;'g'
  2572  007E9A  65                 	db	101	;'e'
  2573  007E9B  74                 	db	116	;'t'
  2574  007E9C  20                 	db	32
  2575  007E9D  64                 	db	100	;'d'
  2576  007E9E  72                 	db	114	;'r'
  2577  007E9F  00                 	db	0
  2578  007EA0                     STR_46:
  2579  007EA0  56                 	db	86	;'V'
  2580  007EA1  61                 	db	97	;'a'
  2581  007EA2  6C                 	db	108	;'l'
  2582  007EA3  69                 	db	105	;'i'
  2583  007EA4  64                 	db	100	;'d'
  2584  007EA5  20                 	db	32
  2585  007EA6  4B                 	db	75	;'K'
  2586  007EA7  65                 	db	101	;'e'
  2587  007EA8  79                 	db	121	;'y'
  2588  007EA9  73                 	db	115	;'s'
  2589  007EAA  00                 	db	0
  2590  007EAB                     STR_15:
  2591  007EAB  43                 	db	67	;'C'
  2592  007EAC  6F                 	db	111	;'o'
  2593  007EAD  6D                 	db	109	;'m'
  2594  007EAE  6D                 	db	109	;'m'
  2595  007EAF  20                 	db	32
  2596  007EB0  54                 	db	84	;'T'
  2597  007EB1  65                 	db	101	;'e'
  2598  007EB2  73                 	db	115	;'s'
  2599  007EB3  74                 	db	116	;'t'
  2600  007EB4  3A                 	db	58	;':'
  2601  007EB5  00                 	db	0
  2602  007EB6                     STR_3:
  2603  007EB6  20                 	db	32
  2604  007EB7  49                 	db	73	;'I'
  2605  007EB8  4F                 	db	79	;'O'
  2606  007EB9  54                 	db	84	;'T'
  2607  007EBA  20                 	db	32
  2608  007EBB  43                 	db	67	;'C'
  2609  007EBC  6F                 	db	111	;'o'
  2610  007EBD  64                 	db	100	;'d'
  2611  007EBE  65                 	db	101	;'e'
  2612  007EBF  20                 	db	32
  2613  007EC0  00                 	db	0
  2614  007EC1                     STR_106:
  2615  007EC1  52                 	db	82	;'R'
  2616  007EC2  78                 	db	120	;'x'
  2617  007EC3  20                 	db	32
  2618  007EC4  50                 	db	80	;'P'
  2619  007EC5  6F                 	db	111	;'o'
  2620  007EC6  72                 	db	114	;'r'
  2621  007EC7  74                 	db	116	;'t'
  2622  007EC8  23                 	db	35
  2623  007EC9  20                 	db	32
  2624  007ECA  00                 	db	0
  2625  007ECB                     STR_50:
  2626  007ECB  41                 	db	65	;'A'
  2627  007ECC  42                 	db	66	;'B'
  2628  007ECD  50                 	db	80	;'P'
  2629  007ECE  20                 	db	32
  2630  007ECF  4A                 	db	74	;'J'
  2631  007ED0  6F                 	db	111	;'o'
  2632  007ED1  69                 	db	105	;'i'
  2633  007ED2  6E                 	db	110	;'n'
  2634  007ED3  20                 	db	32
  2635  007ED4  00                 	db	0
  2636  007ED5                     STR_24:
  2637  007ED5  4D                 	db	77	;'M'
  2638  007ED6  4F                 	db	79	;'O'
  2639  007ED7  54                 	db	84	;'T'
  2640  007ED8  45                 	db	69	;'E'
  2641  007ED9  20                 	db	32
  2642  007EDA  4D                 	db	77	;'M'
  2643  007EDB  6F                 	db	111	;'o'
  2644  007EDC  64                 	db	100	;'d'
  2645  007EDD  65                 	db	101	;'e'
  2646  007EDE  00                 	db	0
  2647  007EDF                     STR_64:
  2648  007EDF  4F                 	db	79	;'O'
  2649  007EE0  54                 	db	84	;'T'
  2650  007EE1  41                 	db	65	;'A'
  2651  007EE2  41                 	db	65	;'A'
  2652  007EE3  20                 	db	32
  2653  007EE4  4A                 	db	74	;'J'
  2654  007EE5  6F                 	db	111	;'o'
  2655  007EE6  69                 	db	105	;'i'
  2656  007EE7  6E                 	db	110	;'n'
  2657  007EE8  00                 	db	0
  2658  007EE9                     STR_52:
  2659  007EE9  6D                 	db	109	;'m'
  2660  007EEA  61                 	db	97	;'a'
  2661  007EEB  63                 	db	99	;'c'
  2662  007EEC  20                 	db	32
  2663  007EED  72                 	db	114	;'r'
  2664  007EEE  65                 	db	101	;'e'
  2665  007EEF  73                 	db	115	;'s'
  2666  007EF0  65                 	db	101	;'e'
  2667  007EF1  74                 	db	116	;'t'
  2668  007EF2  00                 	db	0
  2669  007EF3                     STR_30:
  2670  007EF3  73                 	db	115	;'s'
  2671  007EF4  79                 	db	121	;'y'
  2672  007EF5  73                 	db	115	;'s'
  2673  007EF6  20                 	db	32
  2674  007EF7  72                 	db	114	;'r'
  2675  007EF8  65                 	db	101	;'e'
  2676  007EF9  73                 	db	115	;'s'
  2677  007EFA  65                 	db	101	;'e'
  2678  007EFB  74                 	db	116	;'t'
  2679  007EFC  00                 	db	0
  2680  007EFD                     STR_16:
  2681  007EFD  4C                 	db	76	;'L'
  2682  007EFE  45                 	db	69	;'E'
  2683  007EFF  44                 	db	68	;'D'
  2684  007F00  20                 	db	32
  2685  007F01  54                 	db	84	;'T'
  2686  007F02  65                 	db	101	;'e'
  2687  007F03  73                 	db	115	;'s'
  2688  007F04  74                 	db	116	;'t'
  2689  007F05  3A                 	db	58	;':'
  2690  007F06  00                 	db	0
  2691  007F07                     STR_1:
  2692  007F07  6B                 	db	107	;'k'
  2693  007F08  6F                 	db	111	;'o'
  2694  007F09  6E                 	db	110	;'n'
  2695  007F0A  74                 	db	116	;'t'
  2696  007F0B  6F                 	db	111	;'o'
  2697  007F0C  6C                 	db	108	;'l'
  2698  007F0D  20                 	db	32
  2699  007F0E  69                 	db	105	;'i'
  2700  007F0F  20                 	db	32
  2701  007F10  00                 	db	0
  2702  007F11                     STR_187:
  2703  007F11  43                 	db	67	;'C'
  2704  007F12  44                 	db	68	;'D'
  2705  007F13  43                 	db	67	;'C'
  2706  007F14  20                 	db	32
  2707  007F15  4D                 	db	77	;'M'
  2708  007F16  6F                 	db	111	;'o'
  2709  007F17  64                 	db	100	;'d'
  2710  007F18  65                 	db	101	;'e'
  2711  007F19  00                 	db	0
  2712  007F1A                     STR_47:
  2713  007F1A  52                 	db	82	;'R'
  2714  007F1B  65                 	db	101	;'e'
  2715  007F1C  71                 	db	113	;'q'
  2716  007F1D  75                 	db	117	;'u'
  2717  007F1E  69                 	db	105	;'i'
  2718  007F1F  72                 	db	114	;'r'
  2719  007F20  65                 	db	101	;'e'
  2720  007F21  64                 	db	100	;'d'
  2721  007F22  00                 	db	0
  2722  007F23                     STR_49:
  2723  007F23  61                 	db	97	;'a'
  2724  007F24  63                 	db	99	;'c'
  2725  007F25  63                 	db	99	;'c'
  2726  007F26  65                 	db	101	;'e'
  2727  007F27  70                 	db	112	;'p'
  2728  007F28  74                 	db	116	;'t'
  2729  007F29  65                 	db	101	;'e'
  2730  007F2A  64                 	db	100	;'d'
  2731  007F2B  00                 	db	0
  2732  007F2C                     STR_173:
  2733  007F2C  6D                 	db	109	;'m'
  2734  007F2D  61                 	db	97	;'a'
  2735  007F2E  63                 	db	99	;'c'
  2736  007F2F  20                 	db	32
  2737  007F30  73                 	db	115	;'s'
  2738  007F31  61                 	db	97	;'a'
  2739  007F32  76                 	db	118	;'v'
  2740  007F33  65                 	db	101	;'e'
  2741  007F34  00                 	db	0
  2742  007F35                     STR_25:
  2743  007F35  53                 	db	83	;'S'
  2744  007F36  74                 	db	116	;'t'
  2745  007F37  61                 	db	97	;'a'
  2746  007F38  72                 	db	114	;'r'
  2747  007F39  74                 	db	116	;'t'
  2748  007F3A  69                 	db	105	;'i'
  2749  007F3B  6E                 	db	110	;'n'
  2750  007F3C  67                 	db	103	;'g'
  2751  007F3D  00                 	db	0
  2752  007F3E                     STR_4:
  2753  007F3E  4D                 	db	77	;'M'
  2754  007F3F  6F                 	db	111	;'o'
  2755  007F40  54                 	db	84	;'T'
  2756  007F41  65                 	db	101	;'e'
  2757  007F42  20                 	db	32
  2758  007F43  76                 	db	118	;'v'
  2759  007F44  20                 	db	32
  2760  007F45  2E                 	db	46
  2761  007F46  00                 	db	0
  2762  007F47                     STR_9:
  2763  007F47  31                 	db	49	;'1'
  2764  007F48  35                 	db	53	;'5'
  2765  007F49  3A                 	db	58	;':'
  2766  007F4A  32                 	db	50	;'2'
  2767  007F4B  30                 	db	48	;'0'
  2768  007F4C  3A                 	db	58	;':'
  2769  007F4D  30                 	db	48	;'0'
  2770  007F4E  38                 	db	56	;'8'
  2771  007F4F  00                 	db	0
  2772  007F50  52                 	db	82	;'R'
  2773  007F51  46                 	db	70	;'F'
  2774  007F52  20                 	db	32
  2775  007F53  54                 	db	84	;'T'
  2776  007F54  65                 	db	101	;'e'
  2777  007F55  73                 	db	115	;'s'
  2778  007F56  74                 	db	116	;'t'
  2779  007F57  3A                 	db	58	;':'
  2780  007F58  00                 	db	0
  2781  007F59                     STR_17:
  2782  007F59  41                 	db	65	;'A'
  2783  007F5A  44                 	db	68	;'D'
  2784  007F5B  43                 	db	67	;'C'
  2785  007F5C  20                 	db	32
  2786  007F5D  54                 	db	84	;'T'
  2787  007F5E  65                 	db	101	;'e'
  2788  007F5F  73                 	db	115	;'s'
  2789  007F60  74                 	db	116	;'t'
  2790  007F61  00                 	db	0
  2791  007F62                     STR_188:
  2792  007F62  43                 	db	67	;'C'
  2793  007F63  6F                 	db	111	;'o'
  2794  007F64  6D                 	db	109	;'m'
  2795  007F65  6D                 	db	109	;'m'
  2796  007F66  61                 	db	97	;'a'
  2797  007F67  6E                 	db	110	;'n'
  2798  007F68  64                 	db	100	;'d'
  2799  007F69  00                 	db	0
  2800  007F6A                     STR_18:
  2801  007F6A  54                 	db	84	;'T'
  2802  007F6B  65                 	db	101	;'e'
  2803  007F6C  6D                 	db	109	;'m'
  2804  007F6D  70                 	db	112	;'p'
  2805  007F6E  20                 	db	32
  2806  007F6F  20                 	db	32
  2807  007F70  3D                 	db	61	;'='
  2808  007F71  00                 	db	0
  2809  007F72                     STR_19:
  2810  007F72  4C                 	db	76	;'L'
  2811  007F73  69                 	db	105	;'i'
  2812  007F74  67                 	db	103	;'g'
  2813  007F75  68                 	db	104	;'h'
  2814  007F76  74                 	db	116	;'t'
  2815  007F77  20                 	db	32
  2816  007F78  3D                 	db	61	;'='
  2817  007F79  00                 	db	0
  2818  007F7A                     STR_117:
  2819  007F7A  54                 	db	84	;'T'
  2820  007F7B  65                 	db	101	;'e'
  2821  007F7C  6D                 	db	109	;'m'
  2822  007F7D  70                 	db	112	;'p'
  2823  007F7E  20                 	db	32
  2824  007F7F  3A                 	db	58	;':'
  2825  007F80  00                 	db	0
  2826  007F81                     STR_116:
  2827  007F81  4C                 	db	76	;'L'
  2828  007F82  69                 	db	105	;'i'
  2829  007F83  67                 	db	103	;'g'
  2830  007F84  68                 	db	104	;'h'
  2831  007F85  74                 	db	116	;'t'
  2832  007F86  3A                 	db	58	;':'
  2833  007F87  00                 	db	0
  2834  007F88                     STR_121:
  2835  007F88  45                 	db	69	;'E'
  2836  007F89  76                 	db	118	;'v'
  2837  007F8A  65                 	db	101	;'e'
  2838  007F8B  72                 	db	114	;'r'
  2839  007F8C  79                 	db	121	;'y'
  2840  007F8D  3A                 	db	58	;':'
  2841  007F8E  00                 	db	0
  2842  007F8F                     STR_65:
  2843  007F8F  44                 	db	68	;'D'
  2844  007F90  65                 	db	101	;'e'
  2845  007F91  6E                 	db	110	;'n'
  2846  007F92  69                 	db	105	;'i'
  2847  007F93  65                 	db	101	;'e'
  2848  007F94  64                 	db	100	;'d'
  2849  007F95  00                 	db	0
  2850  007F96                     STR_63:
  2851  007F96  64                 	db	100	;'d'
  2852  007F97  65                 	db	101	;'e'
  2853  007F98  6E                 	db	110	;'n'
  2854  007F99  69                 	db	105	;'i'
  2855  007F9A  65                 	db	101	;'e'
  2856  007F9B  64                 	db	100	;'d'
  2857  007F9C  00                 	db	0
  2858  007F9D                     STR_97:
  2859  007F9D  6E                 	db	110	;'n'
  2860  007F9E  6F                 	db	111	;'o'
  2861  007F9F  5F                 	db	95	;'_'
  2862  007FA0  66                 	db	102	;'f'
  2863  007FA1  72                 	db	114	;'r'
  2864  007FA2  65                 	db	101	;'e'
  2865  007FA3  00                 	db	0
  2866  007FA4                     STR_95:
  2867  007FA4  6D                 	db	109	;'m'
  2868  007FA5  61                 	db	97	;'a'
  2869  007FA6  63                 	db	99	;'c'
  2870  007FA7  5F                 	db	95	;'_'
  2871  007FA8  65                 	db	101	;'e'
  2872  007FA9  72                 	db	114	;'r'
  2873  007FAA  00                 	db	0
  2874  007FAB                     STR_90:
  2875  007FAB  6D                 	db	109	;'m'
  2876  007FAC  61                 	db	97	;'a'
  2877  007FAD  63                 	db	99	;'c'
  2878  007FAE  5F                 	db	95	;'_'
  2879  007FAF  72                 	db	114	;'r'
  2880  007FB0  78                 	db	120	;'x'
  2881  007FB1  00                 	db	0
  2882  007FB2                     STR_93:
  2883  007FB2  6D                 	db	109	;'m'
  2884  007FB3  61                 	db	97	;'a'
  2885  007FB4  63                 	db	99	;'c'
  2886  007FB5  5F                 	db	95	;'_'
  2887  007FB6  74                 	db	116	;'t'
  2888  007FB7  78                 	db	120	;'x'
  2889  007FB8  00                 	db	0
  2890  007FB9                     STR_31:
  2891  007FB9  52                 	db	82	;'R'
  2892  007FBA  4E                 	db	78	;'N'
  2893  007FBB  32                 	db	50	;'2'
  2894  007FBC  34                 	db	52	;'4'
  2895  007FBD  00                 	db	0
  2896  007FBE                     STR_35:
  2897  007FBE  52                 	db	82	;'R'
  2898  007FBF  4E                 	db	78	;'N'
  2899  007FC0  32                 	db	50	;'2'
  2900  007FC1  39                 	db	57	;'9'
  2901  007FC2  00                 	db	0
  2902  007FC3                     STR_122:
  2903  007FC3  4D                 	db	77	;'M'
  2904  007FC4  69                 	db	105	;'i'
  2905  007FC5  6E                 	db	110	;'n'
  2906  007FC6  73                 	db	115	;'s'
  2907  007FC7  00                 	db	0
  2908  007FC8                     STR_138:
  2909  007FC8  20                 	db	32
  2910  007FC9  30                 	db	48	;'0'
  2911  007FCA  20                 	db	32
  2912  007FCB  00                 	db	0
  2913  007FCC                     STR_139:
  2914  007FCC  20                 	db	32
  2915  007FCD  31                 	db	49	;'1'
  2916  007FCE  20                 	db	32
  2917  007FCF  00                 	db	0
  2918  007FD0                     STR_140:
  2919  007FD0  20                 	db	32
  2920  007FD1  32                 	db	50	;'2'
  2921  007FD2  20                 	db	32
  2922  007FD3  00                 	db	0
  2923  007FD4                     STR_141:
  2924  007FD4  20                 	db	32
  2925  007FD5  33                 	db	51	;'3'
  2926  007FD6  20                 	db	32
  2927  007FD7  00                 	db	0
  2928  007FD8                     STR_142:
  2929  007FD8  20                 	db	32
  2930  007FD9  34                 	db	52	;'4'
  2931  007FDA  20                 	db	32
  2932  007FDB  00                 	db	0
  2933  007FDC                     STR_143:
  2934  007FDC  20                 	db	32
  2935  007FDD  35                 	db	53	;'5'
  2936  007FDE  20                 	db	32
  2937  007FDF  00                 	db	0
  2938  007FE0                     STR_146:
  2939  007FE0  20                 	db	32
  2940  007FE1  31                 	db	49	;'1'
  2941  007FE2  30                 	db	48	;'0'
  2942  007FE3  00                 	db	0
  2943  007FE4                     STR_148:
  2944  007FE4  20                 	db	32
  2945  007FE5  33                 	db	51	;'3'
  2946  007FE6  30                 	db	48	;'0'
  2947  007FE7  00                 	db	0
  2948  007FE8                     STR_149:
  2949  007FE8  20                 	db	32
  2950  007FE9  36                 	db	54	;'6'
  2951  007FEA  30                 	db	48	;'0'
  2952  007FEB  00                 	db	0
  2953  007FEC                     STR_147:
  2954  007FEC  20                 	db	32
  2955  007FED  31                 	db	49	;'1'
  2956  007FEE  35                 	db	53	;'5'
  2957  007FEF  00                 	db	0
  2958  007FF0                     STR_128:
  2959  007FF0  4F                 	db	79	;'O'
  2960  007FF1  46                 	db	70	;'F'
  2961  007FF2  46                 	db	70	;'F'
  2962  007FF3  00                 	db	0
  2963  007FF4                     STR_144:
  2964  007FF4  41                 	db	65	;'A'
  2965  007FF5  44                 	db	68	;'D'
  2966  007FF6  52                 	db	82	;'R'
  2967  007FF7  00                 	db	0
  2968  007FF8                     STR_44:
  2969  007FF8  6F                 	db	111	;'o'
  2970  007FF9  6B                 	db	107	;'k'
  2971  007FFA  00                 	db	0
  2972  007FFB                     STR_118:
  2973  007FFB  43                 	db	67	;'C'
  2974  007FFC  00                 	db	0
  2975  007FFD                     STR_21:
  2976  007FFD  7A                 	db	122	;'z'
  2977  007FFE  00                 	db	0
  2978  0000                     
  2979                           ; #config settings
  2980  007FFF  00                 	db	0	; dummy byte at the end
  2981  0000                     
  2982                           	psect	cinit
  2983  0055CE                     __pcinit:
  2984                           	opt stack 0
  2985  0055CE                     start_initialization:
  2986                           	opt stack 0
  2987  0055CE                     __initialization:
  2988                           	opt stack 0
  2989                           
  2990                           ; Clear objects allocated to BANK2 (160 bytes)
  2991  0055CE  EE02  F000         	lfsr	0,__pbssBANK2
  2992  0055D2  0EA0               	movlw	160
  2993  0055D4                     clear_0:
  2994  0055D4  6AEE               	clrf	postinc0,c
  2995  0055D6  06E8               	decf	wreg,f,c
  2996  0055D8  E1FD               	bnz	clear_0
  2997                           
  2998                           ; Clear objects allocated to BANK1 (251 bytes)
  2999  0055DA  EE01  F000         	lfsr	0,__pbssBANK1
  3000  0055DE  0EFB               	movlw	251
  3001  0055E0                     clear_1:
  3002  0055E0  6AEE               	clrf	postinc0,c
  3003  0055E2  06E8               	decf	wreg,f,c
  3004  0055E4  E1FD               	bnz	clear_1
  3005                           
  3006                           ; Clear objects allocated to BANK0 (79 bytes)
  3007  0055E6  EE00  F060         	lfsr	0,__pbssBANK0
  3008  0055EA  0E4F               	movlw	79
  3009  0055EC                     clear_2:
  3010  0055EC  6AEE               	clrf	postinc0,c
  3011  0055EE  06E8               	decf	wreg,f,c
  3012  0055F0  E1FD               	bnz	clear_2
  3013                           
  3014                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3015  0055F2  6A5A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3016                           
  3017                           ; Clear objects allocated to COMRAM (44 bytes)
  3018  0055F4  EE00  F02E         	lfsr	0,__pbssCOMRAM
  3019  0055F8  0E2C               	movlw	44
  3020  0055FA                     clear_3:
  3021  0055FA  6AEE               	clrf	postinc0,c
  3022  0055FC  06E8               	decf	wreg,f,c
  3023  0055FE  E1FD               	bnz	clear_3
  3024                           
  3025                           ; Initialize objects allocated to BANK0 (11 bytes)
  3026                           ; load TBLPTR registers with __pidataBANK0
  3027  005600  0EF8               	movlw	low __pidataBANK0
  3028  005602  6EF6               	movwf	tblptrl,c
  3029  005604  0E5F               	movlw	high __pidataBANK0
  3030  005606  6EF7               	movwf	tblptrh,c
  3031  005608  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3032  00560A  6EF8               	movwf	tblptru,c
  3033  00560C  EE00  F0F4         	lfsr	0,__pdataBANK0
  3034  005610  EE10 F00B          	lfsr	1,11
  3035  005614                     copy_data0:
  3036  005614  0009               	tblrd		*+
  3037  005616  CFF5 FFEE          	movff	tablat,postinc0
  3038  00561A  50E5               	movf	postdec1,w,c
  3039  00561C  50E1               	movf	fsr1l,w,c
  3040  00561E  E1FA               	bnz	copy_data0
  3041  005620                     end_of_initialization:
  3042                           	opt stack 0
  3043  005620                     __end_of__initialization:
  3044                           	opt stack 0
  3045  005620  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3046  005622  6EF8               	movwf	tblptru,c
  3047  005624  0100               	movlb	0
  3048  005626  EF3B  F016         	goto	_main	;jump to C main() function
  3049                           tblptru	equ	0xFF8
  3050                           tblptrh	equ	0xFF7
  3051                           tblptrl	equ	0xFF6
  3052                           tablat	equ	0xFF5
  3053                           postinc0	equ	0xFEE
  3054                           wreg	equ	0xFE8
  3055                           postdec1	equ	0xFE5
  3056                           fsr1l	equ	0xFE1
  3057                           
  3058                           	psect	bitbssCOMRAM
  3059  0002D0                     __pbitbssCOMRAM:
  3060                           	opt stack 0
  3061  0002D0                     _log:
  3062                           	opt stack 0
  3063  0002D0                     	ds	1
  3064                           tblptru	equ	0xFF8
  3065                           tblptrh	equ	0xFF7
  3066                           tblptrl	equ	0xFF6
  3067                           tablat	equ	0xFF5
  3068                           postinc0	equ	0xFEE
  3069                           wreg	equ	0xFE8
  3070                           postdec1	equ	0xFE5
  3071                           fsr1l	equ	0xFE1
  3072                           
  3073                           	psect	bssCOMRAM
  3074  00002E                     __pbssCOMRAM:
  3075                           	opt stack 0
  3076  00002E                     _outPipes:
  3077                           	opt stack 0
  3078  00002E                     	ds	8
  3079  000036                     _pBDTEntryIn:
  3080                           	opt stack 0
  3081  000036                     	ds	6
  3082  00003C                     USBapp_LEDUpdateStatus@ledCount:
  3083                           	opt stack 0
  3084  00003C                     	ds	2
  3085  00003E                     _pBDTEntryEP0OutCurrent:
  3086                           	opt stack 0
  3087  00003E                     	ds	2
  3088  000040                     _pBDTEntryEP0OutNext:
  3089                           	opt stack 0
  3090  000040                     	ds	2
  3091  000042                     _timer1ReloadVal:
  3092                           	opt stack 0
  3093  000042                     	ds	2
  3094  000044                     _LastRS232Out:
  3095                           	opt stack 0
  3096  000044                     	ds	1
  3097  000045                     _NextUSBOut:
  3098                           	opt stack 0
  3099  000045                     	ds	1
  3100  000046                     _RS232_Out_Data_Rdy:
  3101                           	opt stack 0
  3102  000046                     	ds	1
  3103  000047                     _RS232cp:
  3104                           	opt stack 0
  3105  000047                     	ds	1
  3106  000048                     _USBDeferStatusStagePacket:
  3107                           	opt stack 0
  3108  000048                     	ds	1
  3109  000049                     _USBStatusStageTimeoutCounter:
  3110                           	opt stack 0
  3111  000049                     	ds	1
  3112  00004A                     _cdc_trf_state:
  3113                           	opt stack 0
  3114  00004A                     	ds	1
  3115  00004B                     _controlTransferState:
  3116                           	opt stack 0
  3117  00004B                     	ds	1
  3118  00004C                     _endpoint_number:
  3119                           	opt stack 0
  3120  00004C                     	ds	1
  3121  00004D                     _eusartRxCount:
  3122                           	opt stack 0
  3123  00004D                     	ds	1
  3124  00004E                     _eusartTxBufferRemaining:
  3125                           	opt stack 0
  3126  00004E                     	ds	1
  3127  00004F                     _moduleBufferIndex:
  3128                           	opt stack 0
  3129  00004F                     	ds	1
  3130  000050                     _rxByteFlag:
  3131                           	opt stack 0
  3132  000050                     	ds	1
  3133  000051                     _shortPacketStatus:
  3134                           	opt stack 0
  3135  000051                     	ds	1
  3136  000052                     _inPipes:
  3137                           	opt stack 0
  3138  000052                     	ds	6
  3139  000058                     _USBActiveConfiguration:
  3140                           	opt stack 0
  3141  000058                     	ds	1
  3142  000059                     _USTATcopy:
  3143                           	opt stack 0
  3144  000059                     	ds	1
  3145                           tblptru	equ	0xFF8
  3146                           tblptrh	equ	0xFF7
  3147                           tblptrl	equ	0xFF6
  3148                           tablat	equ	0xFF5
  3149                           postinc0	equ	0xFEE
  3150                           wreg	equ	0xFE8
  3151                           postdec1	equ	0xFE5
  3152                           fsr1l	equ	0xFE1
  3153                           
  3154                           	psect	bssBANK0
  3155  000060                     __pbssBANK0:
  3156                           	opt stack 0
  3157  000060                     _pBDTEntryOut:
  3158                           	opt stack 0
  3159  000060                     	ds	6
  3160  000066                     _ep_data_in:
  3161                           	opt stack 0
  3162  000066                     	ds	3
  3163  000069                     _ep_data_out:
  3164                           	opt stack 0
  3165  000069                     	ds	3
  3166  00006C                     _pCDCDst:
  3167                           	opt stack 0
  3168  00006C                     	ds	3
  3169  00006F                     _pCDCSrc:
  3170                           	opt stack 0
  3171  00006F                     	ds	3
  3172  000072                     _CDCDataInHandle:
  3173                           	opt stack 0
  3174  000072                     	ds	2
  3175  000074                     _CDCDataOutHandle:
  3176                           	opt stack 0
  3177  000074                     	ds	2
  3178  000076                     _light:
  3179                           	opt stack 0
  3180  000076                     	ds	2
  3181  000078                     _m10SecTicker:
  3182                           	opt stack 0
  3183  000078                     	ds	2
  3184  00007A                     _pDst:
  3185                           	opt stack 0
  3186  00007A                     	ds	2
  3187  00007C                     _temperature:
  3188                           	opt stack 0
  3189  00007C                     	ds	2
  3190  00007E                     _timer3ReloadVal:
  3191                           	opt stack 0
  3192  00007E                     	ds	2
  3193  000080                     _timerMinTickCount:
  3194                           	opt stack 0
  3195  000080                     	ds	2
  3196  000082                     _timerMsTickCount:
  3197                           	opt stack 0
  3198  000082                     	ds	2
  3199  000084                     _BothEP0OutUOWNsSet:
  3200                           	opt stack 0
  3201  000084                     	ds	1
  3202  000085                     _RemoteWakeup:
  3203                           	opt stack 0
  3204  000085                     	ds	1
  3205  000086                     _USBBusIsSuspended:
  3206                           	opt stack 0
  3207  000086                     	ds	1
  3208  000087                     _USBDeferINDataStagePackets:
  3209                           	opt stack 0
  3210  000087                     	ds	1
  3211  000088                     _USBDeferOUTDataStagePackets:
  3212                           	opt stack 0
  3213  000088                     	ds	1
  3214  000089                     _USBDeviceState:
  3215                           	opt stack 0
  3216  000089                     	ds	1
  3217  00008A                     _USBStatusStageEnabledFlag1:
  3218                           	opt stack 0
  3219  00008A                     	ds	1
  3220  00008B                     _USBStatusStageEnabledFlag2:
  3221                           	opt stack 0
  3222  00008B                     	ds	1
  3223  00008C                     _activeState:
  3224                           	opt stack 0
  3225  00008C                     	ds	1
  3226  00008D                     _appState:
  3227                           	opt stack 0
  3228  00008D                     	ds	1
  3229  00008E                     _appTimer:
  3230                           	opt stack 0
  3231  00008E                     	ds	1
  3232  00008F                     _cdc_mem_type:
  3233                           	opt stack 0
  3234  00008F                     	ds	1
  3235  000090                     _cdc_rx_len:
  3236                           	opt stack 0
  3237  000090                     	ds	1
  3238  000091                     _cdc_tx_len:
  3239                           	opt stack 0
  3240  000091                     	ds	1
  3241  000092                     _control_signal_bitmap:
  3242                           	opt stack 0
  3243  000092                     	ds	1
  3244  000093                     	ds	1
  3245  000094                     	ds	1
  3246  000095                     	ds	1
  3247  000096                     _eusartRxHead:
  3248                           	opt stack 0
  3249  000096                     	ds	1
  3250  000097                     _eusartRxTail:
  3251                           	opt stack 0
  3252  000097                     	ds	1
  3253  000098                     _eusartTxHead:
  3254                           	opt stack 0
  3255  000098                     	ds	1
  3256  000099                     _eusartTxTail:
  3257                           	opt stack 0
  3258  000099                     	ds	1
  3259  00009A                     _lightStringSize:
  3260                           	opt stack 0
  3261  00009A                     	ds	1
  3262  00009B                     _mainState:
  3263                           	opt stack 0
  3264  00009B                     	ds	1
  3265  00009C                     	ds	1
  3266  00009D                     _minTicker:
  3267                           	opt stack 0
  3268  00009D                     	ds	1
  3269  00009E                     _moteModeState:
  3270                           	opt stack 0
  3271  00009E                     	ds	1
  3272  00009F                     _operationType:
  3273                           	opt stack 0
  3274  00009F                     	ds	1
  3275  0000A0                     _powerOnStatus:
  3276                           	opt stack 0
  3277  0000A0                     	ds	1
  3278  0000A1                     _randomPortNum:
  3279                           	opt stack 0
  3280  0000A1                     	ds	1
  3281  0000A2                     _responseReady:
  3282                           	opt stack 0
  3283  0000A2                     	ds	1
  3284  0000A3                     	ds	1
  3285  0000A4                     _rnModule:
  3286                           	opt stack 0
  3287  0000A4                     	ds	1
  3288  0000A5                     _runningState:
  3289                           	opt stack 0
  3290  0000A5                     	ds	1
  3291  0000A6                     _secTicker:
  3292                           	opt stack 0
  3293  0000A6                     	ds	1
  3294  0000A7                     _sleepTicker:
  3295                           	opt stack 0
  3296  0000A7                     	ds	1
  3297  0000A8                     _usbState:
  3298                           	opt stack 0
  3299  0000A8                     	ds	1
  3300  0000A9                     service_pushbutton@Release_Timer:
  3301                           	opt stack 0
  3302  0000A9                     	ds	1
  3303  0000AA                     _responsePortNum:
  3304                           	opt stack 0
  3305  0000AA                     	ds	3
  3306  0000AD                     _USBAlternateInterface:
  3307                           	opt stack 0
  3308  0000AD                     	ds	2
  3309                           tblptru	equ	0xFF8
  3310                           tblptrh	equ	0xFF7
  3311                           tblptrl	equ	0xFF6
  3312                           tablat	equ	0xFF5
  3313                           postinc0	equ	0xFEE
  3314                           wreg	equ	0xFE8
  3315                           postdec1	equ	0xFE5
  3316                           fsr1l	equ	0xFE1
  3317                           
  3318                           	psect	dataBANK0
  3319  0000F4                     __pdataBANK0:
  3320                           	opt stack 0
  3321  0000F4                     _selectedFont:
  3322                           	opt stack 0
  3323  0000F4                     	ds	2
  3324  0000F6                     _Contrast_level:
  3325                           	opt stack 0
  3326  0000F6                     	ds	1
  3327  0000F7                     	ds	1
  3328  0000F8                     _dataRateValue:
  3329                           	opt stack 0
  3330  0000F8                     	ds	1
  3331  0000F9                     _exitUSB:
  3332                           	opt stack 0
  3333  0000F9                     	ds	1
  3334  0000FA                     _menuTimeout:
  3335                           	opt stack 0
  3336  0000FA                     	ds	1
  3337  0000FB                     _moteState:
  3338                           	opt stack 0
  3339  0000FB                     	ds	1
  3340  0000FC                     _periodicState:
  3341                           	opt stack 0
  3342  0000FC                     	ds	1
  3343  0000FD                     _periodicTimerValue:
  3344                           	opt stack 0
  3345  0000FD                     	ds	1
  3346  0000FE                     _periodicUpValue:
  3347                           	opt stack 0
  3348  0000FE                     	ds	1
  3349                           tblptru	equ	0xFF8
  3350                           tblptrh	equ	0xFF7
  3351                           tblptrl	equ	0xFF6
  3352                           tablat	equ	0xFF5
  3353                           postinc0	equ	0xFEE
  3354                           wreg	equ	0xFE8
  3355                           postdec1	equ	0xFE5
  3356                           fsr1l	equ	0xFE1
  3357                           
  3358                           	psect	bssBANK1
  3359  000100                     __pbssBANK1:
  3360                           	opt stack 0
  3361  000100                     	ds	16
  3362  000110                     _responseId:
  3363                           	opt stack 0
  3364  000110                     	ds	16
  3365  000120                     _BaudRateGen:
  3366                           	opt stack 0
  3367  000120                     	ds	4
  3368  000124                     service_pushbutton@PB_Timer:
  3369                           	opt stack 0
  3370  000124                     	ds	4
  3371  000128                     _USB_Buffer:
  3372                           	opt stack 0
  3373  000128                     	ds	64
  3374  000168                     _moduleResonseBuffer:
  3375                           	opt stack 0
  3376  000168                     	ds	64
  3377  0001A8                     _responseData:
  3378                           	opt stack 0
  3379  0001A8                     	ds	32
  3380  0001C8                     _dataBuffer:
  3381                           	opt stack 0
  3382  0001C8                     	ds	16
  3383  0001D8                     _cdc_notice:
  3384                           	opt stack 0
  3385  0001D8                     	ds	10
  3386  0001E2                     _dummy_encapsulated_cmd_response:
  3387                           	opt stack 0
  3388  0001E2                     	ds	8
  3389  0001EA                     _line_coding:
  3390                           	opt stack 0
  3391  0001EA                     	ds	7
  3392  0001F1                     _clearLight:
  3393                           	opt stack 0
  3394  0001F1                     	ds	5
  3395  0001F6                     _storedLight:
  3396                           	opt stack 0
  3397  0001F6                     	ds	5
  3398                           tblptru	equ	0xFF8
  3399                           tblptrh	equ	0xFF7
  3400                           tblptrl	equ	0xFF6
  3401                           tablat	equ	0xFF5
  3402                           postinc0	equ	0xFEE
  3403                           wreg	equ	0xFE8
  3404                           postdec1	equ	0xFE5
  3405                           fsr1l	equ	0xFE1
  3406                           
  3407                           	psect	bssBANK2
  3408  000200                     __pbssBANK2:
  3409                           	opt stack 0
  3410  000200                     _eusartRxBuffer:
  3411                           	opt stack 0
  3412  000200                     	ds	64
  3413  000240                     _eusartTxBuffer:
  3414                           	opt stack 0
  3415  000240                     	ds	64
  3416  000280                     	ds	32
  3417                           tblptru	equ	0xFF8
  3418                           tblptrh	equ	0xFF7
  3419                           tblptrl	equ	0xFF6
  3420                           tablat	equ	0xFF5
  3421                           postinc0	equ	0xFEE
  3422                           wreg	equ	0xFE8
  3423                           postdec1	equ	0xFE5
  3424                           fsr1l	equ	0xFE1
  3425                           
  3426                           	psect	cstackBANK1
  3427  0001FB                     __pcstackBANK1:
  3428                           	opt stack 0
  3429  0001FB                     moteHandler@gotoSleep:
  3430                           	opt stack 0
  3431                           
  3432                           ; 1 bytes @ 0x0
  3433  0001FB                     	ds	1
  3434  0001FC                     moteHandler@gotoNextState:
  3435                           	opt stack 0
  3436                           
  3437                           ; 1 bytes @ 0x1
  3438  0001FC                     	ds	1
  3439  0001FD                     moteHandler@s2Button:
  3440                           	opt stack 0
  3441                           
  3442                           ; 1 bytes @ 0x2
  3443  0001FD                     	ds	1
  3444  0001FE                     moteHandler@buttonPress:
  3445                           	opt stack 0
  3446                           
  3447                           ; 1 bytes @ 0x3
  3448  0001FE                     	ds	1
  3449  0001FF                     moteHandler@readMessage:
  3450                           	opt stack 0
  3451                           
  3452                           ; 1 bytes @ 0x4
  3453  0001FF                     	ds	1
  3454                           tblptru	equ	0xFF8
  3455                           tblptrh	equ	0xFF7
  3456                           tblptrl	equ	0xFF6
  3457                           tablat	equ	0xFF5
  3458                           postinc0	equ	0xFEE
  3459                           wreg	equ	0xFE8
  3460                           postdec1	equ	0xFE5
  3461                           fsr1l	equ	0xFE1
  3462                           
  3463                           	psect	cstackBANK0
  3464  0000AF                     __pcstackBANK0:
  3465                           	opt stack 0
  3466  0000AF                     ??_TMR1_Initialize:
  3467  0000AF                     ?_strncmp:
  3468                           	opt stack 0
  3469  0000AF                     ?_strcmp:
  3470                           	opt stack 0
  3471  0000AF                     ?_moteApp_getLightString:
  3472                           	opt stack 0
  3473  0000AF                     ?_USBTransferOnePacket:
  3474                           	opt stack 0
  3475  0000AF                     ?___wmul:
  3476                           	opt stack 0
  3477  0000AF                     ?___awmod:
  3478                           	opt stack 0
  3479  0000AF                     ?___lwmod:
  3480                           	opt stack 0
  3481  0000AF                     ?___flpack:
  3482                           	opt stack 0
  3483  0000AF                     ?___almod:
  3484                           	opt stack 0
  3485  0000AF                     ?___fltol:
  3486                           	opt stack 0
  3487  0000AF                     MOTEapp_handlerState@state:
  3488                           	opt stack 0
  3489  0000AF                     MOTEapp_TimerBasedTask@timerTask:
  3490                           	opt stack 0
  3491  0000AF                     hexToStr@character:
  3492                           	opt stack 0
  3493  0000AF                     moteApp_clearBuffers@counter:
  3494                           	opt stack 0
  3495  0000AF                     USBapp_handlerState@state:
  3496                           	opt stack 0
  3497  0000AF                     USBapp_exitCDCState@usbState:
  3498                           	opt stack 0
  3499  0000AF                     service_pushbutton@bs:
  3500                           	opt stack 0
  3501  0000AF                     oled_writeCommand@command:
  3502                           	opt stack 0
  3503  0000AF                     oled_writeData@data:
  3504                           	opt stack 0
  3505  0000AF                     EUSART_Read@readValue:
  3506                           	opt stack 0
  3507  0000AF                     EUSART_Write@txData:
  3508                           	opt stack 0
  3509  0000AF                     EUSART_FlushBuffer@index:
  3510                           	opt stack 0
  3511  0000AF                     DATAEE_WriteByte@bData:
  3512                           	opt stack 0
  3513  0000AF                     DATAEE_ReadByte@bAdd:
  3514                           	opt stack 0
  3515  0000AF                     TMR2_ReadTimer@readVal:
  3516                           	opt stack 0
  3517  0000AF                     USBTransferOnePacket@dir:
  3518                           	opt stack 0
  3519  0000AF                     ___lbdiv@divisor:
  3520                           	opt stack 0
  3521  0000AF                     delayms@t:
  3522                           	opt stack 0
  3523  0000AF                     moteApp_delayms@length:
  3524                           	opt stack 0
  3525  0000AF                     oled_setFont@font:
  3526                           	opt stack 0
  3527  0000AF                     putUSBUSART@data:
  3528                           	opt stack 0
  3529  0000AF                     ___wmul@multiplier:
  3530                           	opt stack 0
  3531  0000AF                     ___awmod@dividend:
  3532                           	opt stack 0
  3533  0000AF                     ___lwmod@dividend:
  3534                           	opt stack 0
  3535  0000AF                     memcpy@d1:
  3536                           	opt stack 0
  3537  0000AF                     memset@p1:
  3538                           	opt stack 0
  3539  0000AF                     strcmp@s1:
  3540                           	opt stack 0
  3541  0000AF                     strncmp@s1:
  3542                           	opt stack 0
  3543  0000AF                     ___almod@dividend:
  3544                           	opt stack 0
  3545  0000AF                     ___flpack@arg:
  3546                           	opt stack 0
  3547  0000AF                     ___fltol@f1:
  3548                           	opt stack 0
  3549                           
  3550                           ; 4 bytes @ 0x0
  3551  0000AF                     	ds	1
  3552  0000B0                     MOTEapp_getModuleResponse@terminatorReceived:
  3553                           	opt stack 0
  3554  0000B0                     moteApp_clearBuffers@counter_1905:
  3555                           	opt stack 0
  3556  0000B0                     Set_Page_Address@address:
  3557                           	opt stack 0
  3558  0000B0                     Set_Column_Address@address:
  3559                           	opt stack 0
  3560  0000B0                     oled_setDisplay@displayType:
  3561                           	opt stack 0
  3562  0000B0                     oled_setContrastControlRegister@mod:
  3563                           	opt stack 0
  3564  0000B0                     oled_initialDispayLine@line:
  3565                           	opt stack 0
  3566  0000B0                     oled_powerControl@vol:
  3567                           	opt stack 0
  3568  0000B0                     oled_regulorResistorSelect@r:
  3569                           	opt stack 0
  3570  0000B0                     DATAEE_WriteByte@bAdd:
  3571                           	opt stack 0
  3572  0000B0                     ___lbdiv@dividend:
  3573                           	opt stack 0
  3574  0000B0                     sendCommand@string:
  3575                           	opt stack 0
  3576  0000B0                     sendDataCommand@string:
  3577                           	opt stack 0
  3578  0000B0                     USBTransferOnePacket@data:
  3579                           	opt stack 0
  3580                           
  3581                           ; 2 bytes @ 0x1
  3582  0000B0                     	ds	1
  3583  0000B1                     ??_moteApp_delayms:
  3584  0000B1                     ??_oled_devInit:
  3585  0000B1                     ??_delayms:
  3586  0000B1                     MOTEapp_getModuleResponse@bufferByte:
  3587                           	opt stack 0
  3588  0000B1                     moteApp_clearBuffers@counter_1906:
  3589                           	opt stack 0
  3590  0000B1                     oled_putChar@station_dot:
  3591                           	opt stack 0
  3592  0000B1                     DATAEE_WriteByte@GIEBitValue:
  3593                           	opt stack 0
  3594  0000B1                     putUSBUSART@length:
  3595                           	opt stack 0
  3596  0000B1                     ___lbdiv@counter:
  3597                           	opt stack 0
  3598  0000B1                     ___wmul@multiplicand:
  3599                           	opt stack 0
  3600  0000B1                     ___awmod@divisor:
  3601                           	opt stack 0
  3602  0000B1                     ___lwmod@divisor:
  3603                           	opt stack 0
  3604  0000B1                     memcpy@s1:
  3605                           	opt stack 0
  3606  0000B1                     memset@c:
  3607                           	opt stack 0
  3608  0000B1                     strcmp@s2:
  3609                           	opt stack 0
  3610  0000B1                     strncmp@s2:
  3611                           	opt stack 0
  3612                           
  3613                           ; 2 bytes @ 0x2
  3614  0000B1                     	ds	1
  3615  0000B2                     ??_moteApp_toggleLeds:
  3616  0000B2                     ??_MOTEapp_SetDataRateSetting:
  3617  0000B2                     ??_moduleSleep:
  3618  0000B2                     ?_moteApp_getTempValue:
  3619                           	opt stack 0
  3620  0000B2                     moteApp_clearBuffers@counter_1907:
  3621                           	opt stack 0
  3622  0000B2                     oled_putChar@start_page:
  3623                           	opt stack 0
  3624  0000B2                     USBTransferOnePacket@len:
  3625                           	opt stack 0
  3626  0000B2                     ___lbdiv@quotient:
  3627                           	opt stack 0
  3628  0000B2                     delayms@i:
  3629                           	opt stack 0
  3630  0000B2                     moteApp_delayms@counter:
  3631                           	opt stack 0
  3632  0000B2                     sendDataCommand@appData:
  3633                           	opt stack 0
  3634                           
  3635                           ; 2 bytes @ 0x3
  3636  0000B2                     	ds	1
  3637  0000B3                     ??_oled_putChar:
  3638  0000B3                     ??_strcmp:
  3639  0000B3                     ??___fltol:
  3640  0000B3                     MOTEapp_SetDataRateSetting@dr:
  3641                           	opt stack 0
  3642  0000B3                     moteApp_toggleLeds@state:
  3643                           	opt stack 0
  3644  0000B3                     USBTransferOnePacket@ep:
  3645                           	opt stack 0
  3646  0000B3                     ___awmod@counter:
  3647                           	opt stack 0
  3648  0000B3                     ___flpack@exp:
  3649                           	opt stack 0
  3650  0000B3                     ___lwmod@counter:
  3651                           	opt stack 0
  3652  0000B3                     ___wmul@product:
  3653                           	opt stack 0
  3654  0000B3                     memcpy@n:
  3655                           	opt stack 0
  3656  0000B3                     memset@n:
  3657                           	opt stack 0
  3658  0000B3                     strncmp@len:
  3659                           	opt stack 0
  3660  0000B3                     ___almod@divisor:
  3661                           	opt stack 0
  3662                           
  3663                           ; 4 bytes @ 0x4
  3664  0000B3                     	ds	1
  3665  0000B4                     sendDataCommand@dataLength:
  3666                           	opt stack 0
  3667  0000B4                     ___awmod@sign:
  3668                           	opt stack 0
  3669  0000B4                     ___flpack@sign:
  3670                           	opt stack 0
  3671  0000B4                     strcmp@r:
  3672                           	opt stack 0
  3673  0000B4                     moduleResync@escapeCounter:
  3674                           	opt stack 0
  3675  0000B4                     moteApp_setSensorsInput@escapeCounter:
  3676                           	opt stack 0
  3677  0000B4                     moteApp_getTempValue@escapeCounter:
  3678                           	opt stack 0
  3679  0000B4                     USBTransferOnePacket@handle:
  3680                           	opt stack 0
  3681                           
  3682                           ; 2 bytes @ 0x5
  3683  0000B4                     	ds	1
  3684  0000B5                     ??_strncmp:
  3685  0000B5                     ??_sendDataCommand:
  3686  0000B5                     ??___flpack:
  3687  0000B5                     moteApp_add8bToDataBuffer@bufferLocation:
  3688                           	opt stack 0
  3689  0000B5                     memcpy@d:
  3690                           	opt stack 0
  3691  0000B5                     memset@p:
  3692                           	opt stack 0
  3693                           
  3694                           ; 2 bytes @ 0x6
  3695  0000B5                     	ds	1
  3696  0000B6                     ??_moteApp_add8bToDataBuffer:
  3697  0000B6                     ??_CDCTxService:
  3698  0000B6                     moduleResync@escapeEvent:
  3699                           	opt stack 0
  3700  0000B6                     sendDataCommand@byteCount:
  3701                           	opt stack 0
  3702  0000B6                     getsUSBUSART@buffer:
  3703                           	opt stack 0
  3704                           
  3705                           ; 2 bytes @ 0x7
  3706  0000B6                     	ds	1
  3707  0000B7                     sendDataCommand@byteCount_1823:
  3708                           	opt stack 0
  3709  0000B7                     USBDeviceInit@i:
  3710                           	opt stack 0
  3711  0000B7                     ___almod@counter:
  3712                           	opt stack 0
  3713  0000B7                     ___fltol@sign1:
  3714                           	opt stack 0
  3715  0000B7                     _CDCTxService$6488:
  3716                           	opt stack 0
  3717  0000B7                     memcpy@s:
  3718                           	opt stack 0
  3719                           
  3720                           ; 2 bytes @ 0x8
  3721  0000B7                     	ds	1
  3722  0000B8                     moteApp_add8bToDataBuffer@number:
  3723                           	opt stack 0
  3724  0000B8                     getsUSBUSART@len:
  3725                           	opt stack 0
  3726  0000B8                     ___almod@sign:
  3727                           	opt stack 0
  3728  0000B8                     ___fltol@exp1:
  3729                           	opt stack 0
  3730                           
  3731                           ; 1 bytes @ 0x9
  3732  0000B8                     	ds	1
  3733  0000B9                     ??_getsUSBUSART:
  3734  0000B9                     ?___fladd:
  3735                           	opt stack 0
  3736  0000B9                     ?___lbtofl:
  3737                           	opt stack 0
  3738  0000B9                     oled_putChar@k:
  3739                           	opt stack 0
  3740  0000B9                     CDCTxService@i:
  3741                           	opt stack 0
  3742  0000B9                     moteApp_setLightString@lightString:
  3743                           	opt stack 0
  3744  0000B9                     ___fladd@f1:
  3745                           	opt stack 0
  3746                           
  3747                           ; 4 bytes @ 0xA
  3748  0000B9                     	ds	1
  3749  0000BA                     oled_putChar@index:
  3750                           	opt stack 0
  3751  0000BA                     CDCTxService@byte_to_send:
  3752                           	opt stack 0
  3753  0000BA                     _getsUSBUSART$6440:
  3754                           	opt stack 0
  3755                           
  3756                           ; 2 bytes @ 0xB
  3757  0000BA                     	ds	1
  3758  0000BB                     moteApp_setLightString@stingPos:
  3759                           	opt stack 0
  3760  0000BB                     oled_clearRow@page:
  3761                           	opt stack 0
  3762                           
  3763                           ; 1 bytes @ 0xC
  3764  0000BB                     	ds	1
  3765  0000BC                     ??_USBapp_DeviceCdcEmulatorHandler:
  3766  0000BC                     ?_moteApp_getLightValue:
  3767                           	opt stack 0
  3768  0000BC                     oled_clearRow@index:
  3769                           	opt stack 0
  3770                           
  3771                           ; 1 bytes @ 0xD
  3772  0000BC                     	ds	1
  3773  0000BD                     moteApp_GoToSleep@status:
  3774                           	opt stack 0
  3775  0000BD                     ___lbtofl@c:
  3776                           	opt stack 0
  3777  0000BD                     ___fladd@f2:
  3778                           	opt stack 0
  3779                           
  3780                           ; 4 bytes @ 0xE
  3781  0000BD                     	ds	1
  3782  0000BE                     moteApp_getLightValue@escapeCounter:
  3783                           	opt stack 0
  3784                           
  3785                           ; 2 bytes @ 0xF
  3786  0000BE                     	ds	2
  3787  0000C0                     ?_moteApp_convertSensorValue:
  3788                           	opt stack 0
  3789  0000C0                     moteApp_addToDataBuffer@string:
  3790                           	opt stack 0
  3791  0000C0                     moteApp_convertSensorValue@string:
  3792                           	opt stack 0
  3793  0000C0                     oled_putString@string:
  3794                           	opt stack 0
  3795                           
  3796                           ; 2 bytes @ 0x11
  3797  0000C0                     	ds	1
  3798  0000C1                     ??___fladd:
  3799                           
  3800                           ; 0 bytes @ 0x12
  3801  0000C1                     	ds	1
  3802  0000C2                     ??_moteApp_convertSensorValue:
  3803  0000C2                     moteApp_addToDataBuffer@bufferLocation:
  3804                           	opt stack 0
  3805  0000C2                     oled_putString@station_dot:
  3806                           	opt stack 0
  3807  0000C2                     ___fladd@sign:
  3808                           	opt stack 0
  3809                           
  3810                           ; 1 bytes @ 0x13
  3811  0000C2                     	ds	1
  3812  0000C3                     moteApp_addToDataBuffer@index:
  3813                           	opt stack 0
  3814  0000C3                     oled_putString@start_page:
  3815                           	opt stack 0
  3816  0000C3                     ___fladd@exp2:
  3817                           	opt stack 0
  3818                           
  3819                           ; 1 bytes @ 0x14
  3820  0000C3                     	ds	1
  3821  0000C4                     oled_putString@index:
  3822                           	opt stack 0
  3823  0000C4                     ___fladd@exp1:
  3824                           	opt stack 0
  3825                           
  3826                           ; 1 bytes @ 0x15
  3827  0000C4                     	ds	1
  3828  0000C5                     ??_test_switch:
  3829  0000C5                     ?___flmul:
  3830                           	opt stack 0
  3831  0000C5                     moteJoiningProcess@changeStates:
  3832                           	opt stack 0
  3833  0000C5                     moteApp_convertSensorValue@index:
  3834                           	opt stack 0
  3835  0000C5                     USBapp_Handler@buttonPress:
  3836                           	opt stack 0
  3837  0000C5                     oled_putUint8@station_dot:
  3838                           	opt stack 0
  3839  0000C5                     oled_putint8@station_dot:
  3840                           	opt stack 0
  3841  0000C5                     ___flmul@f1:
  3842                           	opt stack 0
  3843                           
  3844                           ; 4 bytes @ 0x16
  3845  0000C5                     	ds	1
  3846  0000C6                     moteJoiningProcess@selectButton:
  3847                           	opt stack 0
  3848  0000C6                     oled_putUint8@start_page:
  3849                           	opt stack 0
  3850  0000C6                     oled_putint8@start_page:
  3851                           	opt stack 0
  3852  0000C6                     test_switch@timeout:
  3853                           	opt stack 0
  3854  0000C6                     moteApp_convertSensorValue@convertedValue:
  3855                           	opt stack 0
  3856                           
  3857                           ; 2 bytes @ 0x17
  3858  0000C6                     	ds	1
  3859  0000C7                     ??_moteJoiningProcess:
  3860  0000C7                     oled_putUint8@number:
  3861                           	opt stack 0
  3862  0000C7                     oled_putint8@negative:
  3863                           	opt stack 0
  3864                           
  3865                           ; 1 bytes @ 0x18
  3866  0000C7                     	ds	1
  3867  0000C8                     test_switch@buttonCheck:
  3868                           	opt stack 0
  3869  0000C8                     moteJoiningProcess@readDataRate:
  3870                           	opt stack 0
  3871  0000C8                     oled_putUint8@numData:
  3872                           	opt stack 0
  3873  0000C8                     oled_putint8@numData:
  3874                           	opt stack 0
  3875                           
  3876                           ; 6 bytes @ 0x19
  3877  0000C8                     	ds	1
  3878  0000C9                     moteJoiningProcess@joiningComplete:
  3879                           	opt stack 0
  3880  0000C9                     ___flmul@f2:
  3881                           	opt stack 0
  3882                           
  3883                           ; 4 bytes @ 0x1A
  3884  0000C9                     	ds	1
  3885  0000CA                     moteJoiningProcess@messageReady:
  3886                           	opt stack 0
  3887                           
  3888                           ; 1 bytes @ 0x1B
  3889  0000CA                     	ds	3
  3890  0000CD                     ___flmul@exp:
  3891                           	opt stack 0
  3892                           
  3893                           ; 1 bytes @ 0x1E
  3894  0000CD                     	ds	1
  3895  0000CE                     oled_putint8@number:
  3896                           	opt stack 0
  3897  0000CE                     ___flmul@f3_as_product:
  3898                           	opt stack 0
  3899                           
  3900                           ; 4 bytes @ 0x1F
  3901  0000CE                     	ds	4
  3902  0000D2                     ___flmul@cntr:
  3903                           	opt stack 0
  3904                           
  3905                           ; 1 bytes @ 0x23
  3906  0000D2                     	ds	1
  3907  0000D3                     ___flmul@sign:
  3908                           	opt stack 0
  3909                           
  3910                           ; 1 bytes @ 0x24
  3911  0000D3                     	ds	1
  3912  0000D4                     ?___fldiv:
  3913                           	opt stack 0
  3914  0000D4                     ___fldiv@f1:
  3915                           	opt stack 0
  3916                           
  3917                           ; 4 bytes @ 0x25
  3918  0000D4                     	ds	4
  3919  0000D8                     ___fldiv@f2:
  3920                           	opt stack 0
  3921                           
  3922                           ; 4 bytes @ 0x29
  3923  0000D8                     	ds	4
  3924  0000DC                     ___fldiv@f3:
  3925                           	opt stack 0
  3926                           
  3927                           ; 4 bytes @ 0x2D
  3928  0000DC                     	ds	4
  3929  0000E0                     ___fldiv@cntr:
  3930                           	opt stack 0
  3931                           
  3932                           ; 1 bytes @ 0x31
  3933  0000E0                     	ds	1
  3934  0000E1                     ___fldiv@exp:
  3935                           	opt stack 0
  3936                           
  3937                           ; 1 bytes @ 0x32
  3938  0000E1                     	ds	1
  3939  0000E2                     ___fldiv@sign:
  3940                           	opt stack 0
  3941                           
  3942                           ; 1 bytes @ 0x33
  3943  0000E2                     	ds	1
  3944  0000E3                     ADC_TempConversion@tempRaw:
  3945                           	opt stack 0
  3946                           
  3947                           ; 1 bytes @ 0x34
  3948  0000E3                     	ds	1
  3949  0000E4                     ADC_TempConversion@temp:
  3950                           	opt stack 0
  3951                           
  3952                           ; 1 bytes @ 0x35
  3953  0000E4                     	ds	1
  3954  0000E5                     ADC_TempConversion@val:
  3955                           	opt stack 0
  3956                           
  3957                           ; 4 bytes @ 0x36
  3958  0000E5                     	ds	4
  3959  0000E9                     ??_moteApp_testSensors:
  3960  0000E9                     moteRunningProcess@selectButton:
  3961                           	opt stack 0
  3962                           
  3963                           ; 1 bytes @ 0x3A
  3964  0000E9                     	ds	1
  3965  0000EA                     moteRunningProcess@messageReady:
  3966                           	opt stack 0
  3967                           
  3968                           ; 1 bytes @ 0x3B
  3969  0000EA                     	ds	1
  3970  0000EB                     moteRunningProcess@sleepEvent:
  3971                           	opt stack 0
  3972                           
  3973                           ; 1 bytes @ 0x3C
  3974  0000EB                     	ds	1
  3975  0000EC                     ??_moteRunningProcess:
  3976                           
  3977                           ; 0 bytes @ 0x3D
  3978  0000EC                     	ds	1
  3979  0000ED                     moteRunningProcess@readByte:
  3980                           	opt stack 0
  3981                           
  3982                           ; 1 bytes @ 0x3E
  3983  0000ED                     	ds	1
  3984  0000EE                     moteRunningProcess@sizeOfUpdate:
  3985                           	opt stack 0
  3986                           
  3987                           ; 1 bytes @ 0x3F
  3988  0000EE                     	ds	1
  3989  0000EF                     moteRunningProcess@sizeOfUpdate_1693:
  3990                           	opt stack 0
  3991                           
  3992                           ; 1 bytes @ 0x40
  3993  0000EF                     	ds	1
  3994  0000F0                     moteRunningProcess@counter:
  3995                           	opt stack 0
  3996                           
  3997                           ; 1 bytes @ 0x41
  3998  0000F0                     	ds	1
  3999  0000F1                     moteRunningProcess@bufferReadPos:
  4000                           	opt stack 0
  4001                           
  4002                           ; 1 bytes @ 0x42
  4003  0000F1                     	ds	1
  4004  0000F2                     moteRunningProcess@changeStates:
  4005                           	opt stack 0
  4006                           
  4007                           ; 1 bytes @ 0x43
  4008  0000F2                     	ds	1
  4009  0000F3                     ??_moteHandler:
  4010                           
  4011                           ; 0 bytes @ 0x44
  4012  0000F3                     	ds	1
  4013  0000F4                     tblptru	equ	0xFF8
  4014                           tblptrh	equ	0xFF7
  4015                           tblptrl	equ	0xFF6
  4016                           tablat	equ	0xFF5
  4017                           postinc0	equ	0xFEE
  4018                           wreg	equ	0xFE8
  4019                           postdec1	equ	0xFE5
  4020                           fsr1l	equ	0xFE1
  4021                           
  4022                           ; 0 bytes @ 0x45
  4023                           
  4024                           	psect	cstackCOMRAM
  4025  000001                     __pcstackCOMRAM:
  4026                           	opt stack 0
  4027  000001                     ??_USBStdGetDscHandler:
  4028  000001                     ??_USBStdGetStatusHandler:
  4029  000001                     ?i2_USBTransferOnePacket:
  4030                           	opt stack 0
  4031  000001                     ?___lldiv:
  4032                           	opt stack 0
  4033  000001                     USBConfigureEndpoint@direction:
  4034                           	opt stack 0
  4035  000001                     USBCtrlTrfTxService@byteToSend:
  4036                           	opt stack 0
  4037  000001                     i2USBTransferOnePacket@dir:
  4038                           	opt stack 0
  4039  000001                     i2memset@p1:
  4040                           	opt stack 0
  4041  000001                     ___lldiv@dividend:
  4042                           	opt stack 0
  4043                           
  4044                           ; 4 bytes @ 0x0
  4045  000001                     	ds	1
  4046  000002                     ??_USBConfigureEndpoint:
  4047  000002                     USBStdGetStatusHandler@p:
  4048                           	opt stack 0
  4049  000002                     i2USBTransferOnePacket@data:
  4050                           	opt stack 0
  4051                           
  4052                           ; 2 bytes @ 0x1
  4053  000002                     	ds	1
  4054  000003                     i2memset@c:
  4055                           	opt stack 0
  4056                           
  4057                           ; 2 bytes @ 0x2
  4058  000003                     	ds	1
  4059  000004                     i2USBTransferOnePacket@len:
  4060                           	opt stack 0
  4061                           
  4062                           ; 1 bytes @ 0x3
  4063  000004                     	ds	1
  4064  000005                     i2USBTransferOnePacket@ep:
  4065                           	opt stack 0
  4066  000005                     i2memset@n:
  4067                           	opt stack 0
  4068  000005                     ___lldiv@divisor:
  4069                           	opt stack 0
  4070                           
  4071                           ; 4 bytes @ 0x4
  4072  000005                     	ds	1
  4073  000006                     USBConfigureEndpoint@EPNum:
  4074                           	opt stack 0
  4075  000006                     i2USBTransferOnePacket@handle:
  4076                           	opt stack 0
  4077                           
  4078                           ; 2 bytes @ 0x5
  4079  000006                     	ds	1
  4080  000007                     USBConfigureEndpoint@handle:
  4081                           	opt stack 0
  4082  000007                     i2memset@p:
  4083                           	opt stack 0
  4084                           
  4085                           ; 2 bytes @ 0x6
  4086  000007                     	ds	2
  4087  000009                     USBEnableEndpoint@options:
  4088                           	opt stack 0
  4089  000009                     i2USBDeviceInit@i:
  4090                           	opt stack 0
  4091  000009                     ___lldiv@quotient:
  4092                           	opt stack 0
  4093                           
  4094                           ; 4 bytes @ 0x8
  4095  000009                     	ds	1
  4096  00000A                     USBEnableEndpoint@p:
  4097                           	opt stack 0
  4098                           
  4099                           ; 2 bytes @ 0x9
  4100  00000A                     	ds	2
  4101  00000C                     USBEnableEndpoint@ep:
  4102                           	opt stack 0
  4103                           
  4104                           ; 1 bytes @ 0xB
  4105  00000C                     	ds	1
  4106  00000D                     USBapp_CdcEmulatorInitialize@i:
  4107                           	opt stack 0
  4108  00000D                     ___lldiv@counter:
  4109                           	opt stack 0
  4110                           
  4111                           ; 1 bytes @ 0xC
  4112  00000D                     	ds	1
  4113  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4114                           	opt stack 0
  4115  00000E                     USART_mySetLineCodingHandler@dwBaud:
  4116                           	opt stack 0
  4117                           
  4118                           ; 4 bytes @ 0xD
  4119  00000E                     	ds	2
  4120  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4121                           	opt stack 0
  4122                           
  4123                           ; 2 bytes @ 0xF
  4124  000010                     	ds	2
  4125  000012                     USBCtrlTrfRxService@i:
  4126                           	opt stack 0
  4127  000012                     USBCtrlTrfInHandler@lastDTS:
  4128                           	opt stack 0
  4129  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4130                           	opt stack 0
  4131                           
  4132                           ; 2 bytes @ 0x11
  4133  000012                     	ds	1
  4134  000013                     USBCtrlTrfRxService@byteToRead:
  4135                           	opt stack 0
  4136                           
  4137                           ; 1 bytes @ 0x12
  4138  000013                     	ds	1
  4139  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4140                           
  4141                           ; 0 bytes @ 0x13
  4142  000014                     	ds	2
  4143  000016                     ??_USBStdFeatureReqHandler:
  4144  000016                     USBStdSetCfgHandler@i:
  4145                           	opt stack 0
  4146                           
  4147                           ; 1 bytes @ 0x15
  4148  000016                     	ds	1
  4149  000017                     USBStdFeatureReqHandler@pUEP:
  4150                           	opt stack 0
  4151                           
  4152                           ; 2 bytes @ 0x16
  4153  000017                     	ds	2
  4154  000019                     USBStdFeatureReqHandler@current_ep_data:
  4155                           	opt stack 0
  4156                           
  4157                           ; 1 bytes @ 0x18
  4158  000019                     	ds	1
  4159  00001A                     USBStdFeatureReqHandler@p:
  4160                           	opt stack 0
  4161                           
  4162                           ; 2 bytes @ 0x19
  4163  00001A                     	ds	2
  4164  00001C                     ??_USBCtrlEPService:
  4165  00001C                     
  4166                           ; 0 bytes @ 0x1B
  4167  00001C                     	ds	2
  4168  00001E                     USBCtrlEPService@setup_cnt:
  4169                           	opt stack 0
  4170                           
  4171                           ; 1 bytes @ 0x1D
  4172  00001E                     	ds	1
  4173  00001F                     USBDeviceTasks@i:
  4174                           	opt stack 0
  4175                           
  4176                           ; 1 bytes @ 0x1E
  4177  00001F                     	ds	1
  4178  000020                     ??_INTERRUPT_InterruptManager:
  4179                           
  4180                           ; 0 bytes @ 0x1F
  4181  000020                     	ds	14
  4182                           tblptru	equ	0xFF8
  4183                           tblptrh	equ	0xFF7
  4184                           tblptrl	equ	0xFF6
  4185                           tablat	equ	0xFF5
  4186                           postinc0	equ	0xFEE
  4187                           wreg	equ	0xFE8
  4188                           postdec1	equ	0xFE5
  4189                           fsr1l	equ	0xFE1
  4190                           
  4191 ;;
  4192 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4193 ;;
  4194 ;; *************** function _main *****************
  4195 ;; Defined at:
  4196 ;;		line 70 in file "main.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;		None               void
  4203 ;; Registers used:
  4204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4210 ;;      Params:         0       0       0       0       0       0       0       0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4213 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4214 ;;Total ram usage:        0 bytes
  4215 ;; Hardware stack levels required when called:   20
  4216 ;; This function calls:
  4217 ;;		_DATAEE_ReadByte
  4218 ;;		_DATAEE_WriteByte
  4219 ;;		_MOTEapp_handlerState
  4220 ;;		_SYSTEM_Initialize
  4221 ;;		_USBDeviceAttach
  4222 ;;		_USBDeviceInit
  4223 ;;		_USBapp_Handler
  4224 ;;		_USBapp_handlerState
  4225 ;;		_moduleResync
  4226 ;;		_moteApp_clearCommand
  4227 ;;		_moteApp_delayms
  4228 ;;		_moteHandler
  4229 ;;		_oled_clear
  4230 ;;		_oled_init
  4231 ;;		_oled_putString
  4232 ;;		_test_powerup
  4233 ;; This function is called by:
  4234 ;;		Startup code after reset
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text0
  4239  002C76                     __ptext0:
  4240                           	opt stack 0
  4241  002C76                     _main:
  4242                           	opt stack 11
  4243                           
  4244                           ;main.c: 73: SYSTEM_Initialize();
  4245                           
  4246                           ;incstack = 0
  4247  002C76  ECFA  F02E         	call	_SYSTEM_Initialize	;wreg free
  4248                           
  4249                           ;main.c: 75: oled_init();
  4250  002C7A  EC30  F02E         	call	_oled_init	;wreg free
  4251                           
  4252                           ;main.c: 76: USBDeviceInit();
  4253  002C7E  ECA8  F013         	call	_USBDeviceInit	;wreg free
  4254                           
  4255                           ;main.c: 78: USBDeviceAttach();
  4256  002C82  ECFB  F02D         	call	_USBDeviceAttach	;wreg free
  4257                           
  4258                           ;main.c: 80: LATBbits.LATB5 = 1;
  4259  002C86  8A8A               	bsf	3978,5,c	;volatile
  4260                           
  4261                           ;main.c: 81: moteApp_delayms(50);
  4262  002C88  0E00               	movlw	0
  4263  002C8A  0100               	movlb	0	; () banked
  4264  002C8C  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4265  002C8E  0E32               	movlw	50
  4266  002C90  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4267  002C92  EC36  F02D         	call	_moteApp_delayms	;wreg free
  4268                           
  4269                           ;main.c: 82: LATBbits.LATB5 = 0;
  4270  002C96  9A8A               	bcf	3978,5,c	;volatile
  4271                           
  4272                           ;main.c: 83: moteApp_delayms(500);
  4273  002C98  0E01               	movlw	1
  4274  002C9A  0100               	movlb	0	; () banked
  4275  002C9C  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4276  002C9E  0EF4               	movlw	244
  4277  002CA0  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4278  002CA2  EC36  F02D         	call	_moteApp_delayms	;wreg free
  4279                           
  4280                           ;main.c: 85: PEIE = 1;
  4281  002CA6  8CF2               	bsf	intcon,6,c	;volatile
  4282                           
  4283                           ;main.c: 86: GIE = 1;
  4284  002CA8  8EF2               	bsf	intcon,7,c	;volatile
  4285                           
  4286                           ;main.c: 88: moduleResync();
  4287  002CAA  EC99  F026         	call	_moduleResync	;wreg free
  4288                           
  4289                           ;main.c: 89: moteApp_delayms(20);
  4290  002CAE  0E00               	movlw	0
  4291  002CB0  0100               	movlb	0	; () banked
  4292  002CB2  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4293  002CB4  0E14               	movlw	20
  4294  002CB6  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4295  002CB8  EC36  F02D         	call	_moteApp_delayms	;wreg free
  4296                           
  4297                           ;main.c: 90: moteApp_clearCommand();
  4298  002CBC  ECCF  F02F         	call	_moteApp_clearCommand	;wreg free
  4299                           
  4300                           ;main.c: 91: moteApp_delayms(20);
  4301  002CC0  0E00               	movlw	0
  4302  002CC2  0100               	movlb	0	; () banked
  4303  002CC4  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4304  002CC6  0E14               	movlw	20
  4305  002CC8  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4306  002CCA  EC36  F02D         	call	_moteApp_delayms	;wreg free
  4307                           
  4308                           ;main.c: 93: powerOnStatus = DATAEE_ReadByte(0x00);
  4309  002CCE  0E00               	movlw	0
  4310  002CD0  EC92  F02F         	call	_DATAEE_ReadByte
  4311  002CD4  0100               	movlb	0	; () banked
  4312  002CD6  6FA0               	movwf	_powerOnStatus& (0+255),b
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;main.c: 94: if ( powerOnStatus != 0x55)
  4316  002CD8  0E55               	movlw	85
  4317  002CDA  0100               	movlb	0	; () banked
  4318  002CDC  19A0               	xorwf	_powerOnStatus& (0+255),w,b
  4319  002CDE  B4D8               	btfsc	status,2,c
  4320  002CE0  D009               	goto	l13682
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;main.c: 95: {
  4324                           ;main.c: 96: test_powerup();
  4325  002CE2  ECAA  F028         	call	_test_powerup	;wreg free
  4326                           
  4327                           ;main.c: 97: DATAEE_WriteByte(0x00, 0x55);
  4328  002CE6  0E55               	movlw	85
  4329  002CE8  0100               	movlb	0	; () banked
  4330  002CEA  6FAF               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4331  002CEC  0E00               	movlw	0
  4332  002CEE  EC9E  F02C         	call	_DATAEE_WriteByte
  4333  002CF2  D000               	goto	l13682
  4334  002CF4                     l13682:
  4335                           
  4336                           ;main.c: 98: }
  4337                           ;main.c: 101: operationType = USB;
  4338  002CF4  0E00               	movlw	0
  4339  002CF6  0100               	movlb	0	; () banked
  4340  002CF8  6F9F               	movwf	_operationType& (0+255),b
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;main.c: 102: USBapp_handlerState(USB_STARTUP);
  4344  002CFA  0E00               	movlw	0
  4345  002CFC  EC07  F030         	call	_USBapp_handlerState
  4346                           
  4347                           ;main.c: 104: oled_clear();
  4348  002D00  EC3B  F02F         	call	_oled_clear	;wreg free
  4349                           
  4350                           ;main.c: 105: oled_putString("kontol i ",0,0);
  4351  002D04  0E07               	movlw	low STR_1
  4352  002D06  0100               	movlb	0	; () banked
  4353  002D08  6FC0               	movwf	oled_putString@string& (0+255),b
  4354  002D0A  0E7F               	movlw	high STR_1
  4355  002D0C  0100               	movlb	0	; () banked
  4356  002D0E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4357  002D10  0E00               	movlw	0
  4358  002D12  0100               	movlb	0	; () banked
  4359  002D14  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4360  002D16  0E00               	movlw	0
  4361  002D18  0100               	movlb	0	; () banked
  4362  002D1A  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4363  002D1C  EC6C  F028         	call	_oled_putString	;wreg free
  4364                           
  4365                           ;main.c: 106: oled_putString("   LoRa cony  ",0,1);
  4366  002D20  0E0A               	movlw	low STR_2
  4367  002D22  0100               	movlb	0	; () banked
  4368  002D24  6FC0               	movwf	oled_putString@string& (0+255),b
  4369  002D26  0E7D               	movlw	high STR_2
  4370  002D28  0100               	movlb	0	; () banked
  4371  002D2A  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4372  002D2C  0E00               	movlw	0
  4373  002D2E  0100               	movlb	0	; () banked
  4374  002D30  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4375  002D32  0E01               	movlw	1
  4376  002D34  0100               	movlb	0	; () banked
  4377  002D36  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4378  002D38  EC6C  F028         	call	_oled_putString	;wreg free
  4379                           
  4380                           ;main.c: 107: oled_putString(" IOT Code ",0,3);
  4381  002D3C  0EB6               	movlw	low STR_3
  4382  002D3E  0100               	movlb	0	; () banked
  4383  002D40  6FC0               	movwf	oled_putString@string& (0+255),b
  4384  002D42  0E7E               	movlw	high STR_3
  4385  002D44  0100               	movlb	0	; () banked
  4386  002D46  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4387  002D48  0E00               	movlw	0
  4388  002D4A  0100               	movlb	0	; () banked
  4389  002D4C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4390  002D4E  0E03               	movlw	3
  4391  002D50  0100               	movlb	0	; () banked
  4392  002D52  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4393  002D54  EC6C  F028         	call	_oled_putString	;wreg free
  4394                           
  4395                           ;main.c: 108: moteApp_delayms(10000);
  4396  002D58  0E27               	movlw	39
  4397  002D5A  0100               	movlb	0	; () banked
  4398  002D5C  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4399  002D5E  0E10               	movlw	16
  4400  002D60  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4401  002D62  EC36  F02D         	call	_moteApp_delayms	;wreg free
  4402                           
  4403                           ;main.c: 112: {
  4404                           ;main.c: 116: switch (operationType)
  4405                           
  4406                           ;main.c: 111: while(1)
  4407  002D66  D017               	goto	l13710
  4408  002D68  D7FF               	goto	l60
  4409                           
  4410                           ;main.c: 120: break;
  4411  002D6A  D015               	goto	l13710
  4412  002D6C                     l13696:
  4413                           
  4414                           ;main.c: 122: USBapp_Handler();
  4415  002D6C  EC00  F021         	call	_USBapp_Handler	;wreg free
  4416                           
  4417                           ;main.c: 124: operationType = MOTE;
  4418  002D70  0E01               	movlw	1
  4419  002D72  0100               	movlb	0	; () banked
  4420  002D74  6F9F               	movwf	_operationType& (0+255),b
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;main.c: 125: MOTEapp_handlerState(MOTE_STARTUP);
  4424  002D76  0E01               	movlw	1
  4425  002D78  EC0C  F030         	call	_MOTEapp_handlerState
  4426                           
  4427                           ;main.c: 126: break;
  4428  002D7C  D00C               	goto	l13710
  4429  002D7E                     l13702:
  4430                           
  4431                           ;main.c: 128: if (moteHandler() == MOTE_SWAP)
  4432  002D7E  EC38  F00E         	call	_moteHandler	;wreg free
  4433  002D82  0A04               	xorlw	4
  4434  002D84  A4D8               	btfss	status,2,c
  4435  002D86  D007               	goto	l13710
  4436                           
  4437                           ;main.c: 129: {
  4438                           ;main.c: 131: operationType = USB;
  4439  002D88  0E00               	movlw	0
  4440  002D8A  0100               	movlb	0	; () banked
  4441  002D8C  6F9F               	movwf	_operationType& (0+255),b
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;main.c: 132: USBapp_handlerState(USB_STARTUP);
  4445  002D8E  0E00               	movlw	0
  4446  002D90  EC07  F030         	call	_USBapp_handlerState
  4447                           
  4448                           ;main.c: 135: }
  4449                           
  4450                           ;main.c: 133: }
  4451                           ;main.c: 134: break;
  4452  002D94  D000               	goto	l13710
  4453  002D96                     l13710:
  4454  002D96  0100               	movlb	0	; () banked
  4455  002D98  519F               	movf	_operationType& (0+255),w,b
  4456                           
  4457                           ; Switch size 1, requested type "space"
  4458                           ; Number of cases is 2, Range of values is 0 to 1
  4459                           ; switch strategies available:
  4460                           ; Name         Instructions Cycles
  4461                           ; simple_byte            7     4 (average)
  4462                           ;	Chosen strategy is simple_byte
  4463  002D9A  0A00               	xorlw	0	; case 0
  4464  002D9C  B4D8               	btfsc	status,2,c
  4465  002D9E  D7E6               	goto	l13696
  4466  002DA0  0A01               	xorlw	1	; case 1
  4467  002DA2  B4D8               	btfsc	status,2,c
  4468  002DA4  D7EC               	goto	l13702
  4469  002DA6  D7E0               	goto	l60
  4470                           
  4471                           ; BSR set to: 0
  4472                           
  4473                           ; BSR set to: 0
  4474  002DA8  D7F6               	goto	l13710
  4475                           
  4476                           ; BSR set to: 0
  4477                           
  4478                           ; BSR set to: 0
  4479  002DAA  EF62  F000         	goto	start
  4480  002DAE                     __end_of_main:
  4481                           	opt stack 0
  4482                           tblptru	equ	0xFF8
  4483                           tblptrh	equ	0xFF7
  4484                           tblptrl	equ	0xFF6
  4485                           tablat	equ	0xFF5
  4486                           intcon	equ	0xFF2
  4487                           postinc0	equ	0xFEE
  4488                           wreg	equ	0xFE8
  4489                           postdec1	equ	0xFE5
  4490                           fsr1l	equ	0xFE1
  4491                           status	equ	0xFD8
  4492                           
  4493 ;; *************** function _test_powerup *****************
  4494 ;; Defined at:
  4495 ;;		line 62 in file "../Includes/Board/poweruptest.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;		None               void
  4502 ;; Registers used:
  4503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4509 ;;      Params:         0       0       0       0       0       0       0       0       0
  4510 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4512 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4513 ;;Total ram usage:        0 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:   17
  4516 ;; This function calls:
  4517 ;;		_EUSART_FlushBuffer
  4518 ;;		_moteApp_delayms
  4519 ;;		_moteApp_testSensors
  4520 ;;		_oled_clear
  4521 ;;		_test_comms
  4522 ;;		_test_leds
  4523 ;;		_test_oled
  4524 ;;		_test_switch
  4525 ;; This function is called by:
  4526 ;;		_main
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text1
  4531  005154                     __ptext1:
  4532                           	opt stack 0
  4533  005154                     _test_powerup:
  4534                           	opt stack 13
  4535                           
  4536                           ;poweruptest.c: 65: test_oled();
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;incstack = 0
  4540  005154  EC64  F024         	call	_test_oled	;wreg free
  4541                           
  4542                           ;poweruptest.c: 66: moteApp_delayms(20);
  4543  005158  0E00               	movlw	0
  4544  00515A  0100               	movlb	0	; () banked
  4545  00515C  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4546  00515E  0E14               	movlw	20
  4547  005160  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4548  005162  EC36  F02D         	call	_moteApp_delayms	;wreg free
  4549                           
  4550                           ;poweruptest.c: 68: test_switch();
  4551  005166  ECB2  F019         	call	_test_switch	;wreg free
  4552                           
  4553                           ;poweruptest.c: 70: oled_clear();
  4554  00516A  EC3B  F02F         	call	_oled_clear	;wreg free
  4555                           
  4556                           ;poweruptest.c: 71: moteApp_delayms(20);
  4557  00516E  0E00               	movlw	0
  4558  005170  0100               	movlb	0	; () banked
  4559  005172  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4560  005174  0E14               	movlw	20
  4561  005176  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4562  005178  EC36  F02D         	call	_moteApp_delayms	;wreg free
  4563                           
  4564                           ;poweruptest.c: 72: test_comms();
  4565  00517C  ECE3  F028         	call	_test_comms	;wreg free
  4566                           
  4567                           ;poweruptest.c: 73: moteApp_delayms(20);
  4568  005180  0E00               	movlw	0
  4569  005182  0100               	movlb	0	; () banked
  4570  005184  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4571  005186  0E14               	movlw	20
  4572  005188  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4573  00518A  EC36  F02D         	call	_moteApp_delayms	;wreg free
  4574                           
  4575                           ;poweruptest.c: 75: test_leds();
  4576  00518E  ECF2  F029         	call	_test_leds	;wreg free
  4577                           
  4578                           ;poweruptest.c: 78: moteApp_delayms(20);
  4579  005192  0E00               	movlw	0
  4580  005194  0100               	movlb	0	; () banked
  4581  005196  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4582  005198  0E14               	movlw	20
  4583  00519A  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4584  00519C  EC36  F02D         	call	_moteApp_delayms	;wreg free
  4585                           
  4586                           ;poweruptest.c: 79: EUSART_FlushBuffer();
  4587  0051A0  ECC3  F02B         	call	_EUSART_FlushBuffer	;wreg free
  4588                           
  4589                           ;poweruptest.c: 80: moteApp_delayms(20);
  4590  0051A4  0E00               	movlw	0
  4591  0051A6  0100               	movlb	0	; () banked
  4592  0051A8  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4593  0051AA  0E14               	movlw	20
  4594  0051AC  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4595  0051AE  EC36  F02D         	call	_moteApp_delayms	;wreg free
  4596                           
  4597                           ;poweruptest.c: 81: moteApp_testSensors();
  4598  0051B2  EC23  F01C         	call	_moteApp_testSensors	;wreg free
  4599                           
  4600                           ;poweruptest.c: 82: moteApp_delayms(3000);
  4601  0051B6  0E0B               	movlw	11
  4602  0051B8  0100               	movlb	0	; () banked
  4603  0051BA  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4604  0051BC  0EB8               	movlw	184
  4605  0051BE  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  4606  0051C0  EC36  F02D         	call	_moteApp_delayms	;wreg free
  4607  0051C4  0012               	return		;funcret
  4608  0051C6                     __end_of_test_powerup:
  4609                           	opt stack 0
  4610                           tblptru	equ	0xFF8
  4611                           tblptrh	equ	0xFF7
  4612                           tblptrl	equ	0xFF6
  4613                           tablat	equ	0xFF5
  4614                           intcon	equ	0xFF2
  4615                           postinc0	equ	0xFEE
  4616                           wreg	equ	0xFE8
  4617                           postdec1	equ	0xFE5
  4618                           fsr1l	equ	0xFE1
  4619                           status	equ	0xFD8
  4620                           
  4621 ;; *************** function _test_switch *****************
  4622 ;; Defined at:
  4623 ;;		line 99 in file "../Includes/Board/poweruptest.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;		None
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;  timeout         2   23[BANK0 ] unsigned int 
  4628 ;;  buttonCheck     1   25[BANK0 ] unsigned char 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;		None               void
  4631 ;; Registers used:
  4632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4638 ;;      Params:         0       0       0       0       0       0       0       0       0
  4639 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4640 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4641 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4642 ;;Total ram usage:        4 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; Hardware stack levels required when called:   16
  4645 ;; This function calls:
  4646 ;;		_oled_clear
  4647 ;;		_oled_putString
  4648 ;; This function is called by:
  4649 ;;		_test_powerup
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           	psect	text2
  4654  003364                     __ptext2:
  4655                           	opt stack 0
  4656  003364                     _test_switch:
  4657                           	opt stack 13
  4658                           
  4659                           ;poweruptest.c: 101: uint16_t timeout = 500;
  4660                           
  4661                           ;incstack = 0
  4662  003364  0E01               	movlw	1
  4663  003366  0100               	movlb	0	; () banked
  4664  003368  6FC7               	movwf	(test_switch@timeout+1)& (0+255),b
  4665  00336A  0EF4               	movlw	244
  4666  00336C  6FC6               	movwf	test_switch@timeout& (0+255),b
  4667                           
  4668                           ;poweruptest.c: 102: uint8_t buttonCheck = 0x00;
  4669  00336E  0E00               	movlw	0
  4670  003370  0100               	movlb	0	; () banked
  4671  003372  6FC8               	movwf	test_switch@buttonCheck& (0+255),b
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;poweruptest.c: 103: oled_clear();
  4675  003374  EC3B  F02F         	call	_oled_clear	;wreg free
  4676                           
  4677                           ;poweruptest.c: 104: oled_putString("Button Test:",0,0);
  4678  003378  0EE0               	movlw	low STR_10
  4679  00337A  0100               	movlb	0	; () banked
  4680  00337C  6FC0               	movwf	oled_putString@string& (0+255),b
  4681  00337E  0E7D               	movlw	high STR_10
  4682  003380  0100               	movlb	0	; () banked
  4683  003382  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4684  003384  0E00               	movlw	0
  4685  003386  0100               	movlb	0	; () banked
  4686  003388  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4687  00338A  0E00               	movlw	0
  4688  00338C  0100               	movlb	0	; () banked
  4689  00338E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4690  003390  EC6C  F028         	call	_oled_putString	;wreg free
  4691                           
  4692                           ;poweruptest.c: 106: if( (PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
  4693  003394  A281               	btfss	3969,1,c	;volatile
  4694  003396  D002               	goto	l12348
  4695  003398  B081               	btfsc	3969,0,c	;volatile
  4696  00339A  D00F               	goto	l12350
  4697  00339C                     l12348:
  4698                           
  4699                           ;poweruptest.c: 107: {
  4700                           ;poweruptest.c: 108: oled_putString("Button FAIL",0,3);
  4701  00339C  0E68               	movlw	low STR_11
  4702  00339E  0100               	movlb	0	; () banked
  4703  0033A0  6FC0               	movwf	oled_putString@string& (0+255),b
  4704  0033A2  0E7E               	movlw	high STR_11
  4705  0033A4  0100               	movlb	0	; () banked
  4706  0033A6  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4707  0033A8  0E00               	movlw	0
  4708  0033AA  0100               	movlb	0	; () banked
  4709  0033AC  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4710  0033AE  0E03               	movlw	3
  4711  0033B0  0100               	movlb	0	; () banked
  4712  0033B2  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4713  0033B4  EC6C  F028         	call	_oled_putString	;wreg free
  4714                           
  4715                           ;poweruptest.c: 109: }
  4716  0033B8  D04C               	goto	l12368
  4717  0033BA                     l12350:
  4718                           
  4719                           ;poweruptest.c: 110: else
  4720                           ;poweruptest.c: 111: {
  4721                           ;poweruptest.c: 112: oled_putString("Press Button",0,1);
  4722  0033BA  0E07               	movlw	low STR_12
  4723  0033BC  0100               	movlb	0	; () banked
  4724  0033BE  6FC0               	movwf	oled_putString@string& (0+255),b
  4725  0033C0  0E7E               	movlw	high STR_12
  4726  0033C2  0100               	movlb	0	; () banked
  4727  0033C4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4728  0033C6  0E00               	movlw	0
  4729  0033C8  0100               	movlb	0	; () banked
  4730  0033CA  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4731  0033CC  0E01               	movlw	1
  4732  0033CE  0100               	movlb	0	; () banked
  4733  0033D0  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4734  0033D2  EC6C  F028         	call	_oled_putString	;wreg free
  4735                           
  4736                           ;poweruptest.c: 113: }
  4737                           ;poweruptest.c: 114: while(timeout--)
  4738  0033D6  D03D               	goto	l12368
  4739  0033D8                     l126:
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;poweruptest.c: 115: {
  4743                           ;poweruptest.c: 116: if(PORTBbits.RB1 == 0)
  4744  0033D8  B281               	btfsc	3969,1,c	;volatile
  4745  0033DA  D014               	goto	l12356
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;poweruptest.c: 117: {
  4749                           ;poweruptest.c: 118: oled_putString("Button1 PASS",0,2);
  4750  0033DC  0EED               	movlw	low STR_13
  4751  0033DE  0100               	movlb	0	; () banked
  4752  0033E0  6FC0               	movwf	oled_putString@string& (0+255),b
  4753  0033E2  0E7D               	movlw	high STR_13
  4754  0033E4  0100               	movlb	0	; () banked
  4755  0033E6  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4756  0033E8  0E00               	movlw	0
  4757  0033EA  0100               	movlb	0	; () banked
  4758  0033EC  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4759  0033EE  0E02               	movlw	2
  4760  0033F0  0100               	movlb	0	; () banked
  4761  0033F2  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4762  0033F4  EC6C  F028         	call	_oled_putString	;wreg free
  4763                           
  4764                           ;poweruptest.c: 119: buttonCheck = buttonCheck + 0x08;
  4765  0033F8  0100               	movlb	0	; () banked
  4766  0033FA  51C8               	movf	test_switch@buttonCheck& (0+255),w,b
  4767  0033FC  0F08               	addlw	8
  4768  0033FE  0100               	movlb	0	; () banked
  4769  003400  6FC8               	movwf	test_switch@buttonCheck& (0+255),b
  4770  003402  D000               	goto	l12356
  4771  003404                     l12356:
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;poweruptest.c: 120: }
  4775                           ;poweruptest.c: 121: if(PORTBbits.RB0 == 0)
  4776  003404  B081               	btfsc	3969,0,c	;volatile
  4777  003406  D014               	goto	l12362
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;poweruptest.c: 122: {
  4781                           ;poweruptest.c: 123: oled_putString("Button2 PASS",0,3);
  4782  003408  0EFA               	movlw	low STR_14
  4783  00340A  0100               	movlb	0	; () banked
  4784  00340C  6FC0               	movwf	oled_putString@string& (0+255),b
  4785  00340E  0E7D               	movlw	high STR_14
  4786  003410  0100               	movlb	0	; () banked
  4787  003412  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4788  003414  0E00               	movlw	0
  4789  003416  0100               	movlb	0	; () banked
  4790  003418  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4791  00341A  0E03               	movlw	3
  4792  00341C  0100               	movlb	0	; () banked
  4793  00341E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4794  003420  EC6C  F028         	call	_oled_putString	;wreg free
  4795                           
  4796                           ;poweruptest.c: 124: buttonCheck = buttonCheck + 0x80;
  4797  003424  0100               	movlb	0	; () banked
  4798  003426  51C8               	movf	test_switch@buttonCheck& (0+255),w,b
  4799  003428  0F80               	addlw	128
  4800  00342A  0100               	movlb	0	; () banked
  4801  00342C  6FC8               	movwf	test_switch@buttonCheck& (0+255),b
  4802  00342E  D000               	goto	l12362
  4803  003430                     l12362:
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;poweruptest.c: 125: }
  4807                           ;poweruptest.c: 126: if (buttonCheck == 0x88)
  4808  003430  0E88               	movlw	136
  4809  003432  0100               	movlb	0	; () banked
  4810  003434  19C8               	xorwf	test_switch@buttonCheck& (0+255),w,b
  4811  003436  B4D8               	btfsc	status,2,c
  4812  003438  0012               	return	
  4813  00343A  D001               	goto	l12366
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;poweruptest.c: 127: {
  4817                           ;poweruptest.c: 128: break;
  4818  00343C  0012               	return	
  4819  00343E                     l12366:
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;poweruptest.c: 129: }
  4823                           ;poweruptest.c: 130: _delay((unsigned long)((10)*(48000000/4000.0)));
  4824  00343E  0E9C               	movlw	156
  4825  003440  0100               	movlb	0	; () banked
  4826  003442  6FC5               	movwf	??_test_switch& (0+255),b
  4827  003444  0ED7               	movlw	215
  4828  003446                     u12467:
  4829  003446  2EE8               	decfsz	wreg,f,c
  4830  003448  D7FE               	goto	u12467
  4831  00344A  2FC5               	decfsz	??_test_switch& (0+255),f,b
  4832  00344C  D7FC               	goto	u12467
  4833  00344E  F000               	nop	
  4834  003450  D000               	goto	l12368
  4835  003452                     l12368:
  4836  003452  0100               	movlb	0	; () banked
  4837  003454  07C6               	decf	test_switch@timeout& (0+255),f,b
  4838  003456  A0D8               	btfss	status,0,c
  4839  003458  07C7               	decf	(test_switch@timeout+1)& (0+255),f,b
  4840  00345A  0100               	movlb	0	; () banked
  4841  00345C  29C6               	incf	test_switch@timeout& (0+255),w,b
  4842  00345E  E1BC               	bnz	l126
  4843  003460  0100               	movlb	0	; () banked
  4844  003462  29C7               	incf	(test_switch@timeout+1)& (0+255),w,b
  4845  003464  A4D8               	btfss	status,2,c
  4846  003466  D7B8               	goto	l126
  4847                           
  4848                           ; BSR set to: 0
  4849                           
  4850                           ; BSR set to: 0
  4851  003468  0012               	return		;funcret
  4852  00346A                     __end_of_test_switch:
  4853                           	opt stack 0
  4854                           tblptru	equ	0xFF8
  4855                           tblptrh	equ	0xFF7
  4856                           tblptrl	equ	0xFF6
  4857                           tablat	equ	0xFF5
  4858                           intcon	equ	0xFF2
  4859                           postinc0	equ	0xFEE
  4860                           wreg	equ	0xFE8
  4861                           postdec1	equ	0xFE5
  4862                           fsr1l	equ	0xFE1
  4863                           status	equ	0xFD8
  4864                           
  4865 ;; *************** function _test_oled *****************
  4866 ;; Defined at:
  4867 ;;		line 86 in file "../Includes/Board/poweruptest.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;		None
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;		None
  4872 ;; Return value:  Size  Location     Type
  4873 ;;		None               void
  4874 ;; Registers used:
  4875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4881 ;;      Params:         0       0       0       0       0       0       0       0       0
  4882 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4883 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4884 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4885 ;;Total ram usage:        0 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:   16
  4888 ;; This function calls:
  4889 ;;		_oled_clear
  4890 ;;		_oled_putString
  4891 ;; This function is called by:
  4892 ;;		_test_powerup
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text3
  4897  0048C8                     __ptext3:
  4898                           	opt stack 0
  4899  0048C8                     _test_oled:
  4900                           	opt stack 13
  4901                           
  4902                           ;poweruptest.c: 88: oled_clear();
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;incstack = 0
  4906  0048C8  EC3B  F02F         	call	_oled_clear	;wreg free
  4907                           
  4908                           ;poweruptest.c: 90: oled_putString("MoTe v .",0,0);
  4909  0048CC  0E3E               	movlw	low STR_4
  4910  0048CE  0100               	movlb	0	; () banked
  4911  0048D0  6FC0               	movwf	oled_putString@string& (0+255),b
  4912  0048D2  0E7F               	movlw	high STR_4
  4913  0048D4  0100               	movlb	0	; () banked
  4914  0048D6  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4915  0048D8  0E00               	movlw	0
  4916  0048DA  0100               	movlb	0	; () banked
  4917  0048DC  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4918  0048DE  0E00               	movlw	0
  4919  0048E0  0100               	movlb	0	; () banked
  4920  0048E2  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4921  0048E4  EC6C  F028         	call	_oled_putString	;wreg free
  4922                           
  4923                           ;poweruptest.c: 91: oled_putString("0",0,6);
  4924  0048E8  0E76               	movlw	low (STR_164+11)
  4925  0048EA  0100               	movlb	0	; () banked
  4926  0048EC  6FC0               	movwf	oled_putString@string& (0+255),b
  4927  0048EE  0E7D               	movlw	high (STR_164+11)
  4928  0048F0  0100               	movlb	0	; () banked
  4929  0048F2  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4930  0048F4  0E00               	movlw	0
  4931  0048F6  0100               	movlb	0	; () banked
  4932  0048F8  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4933  0048FA  0E06               	movlw	6
  4934  0048FC  0100               	movlb	0	; () banked
  4935  0048FE  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4936  004900  EC6C  F028         	call	_oled_putString	;wreg free
  4937                           
  4938                           ;poweruptest.c: 92: oled_putString("1",0,8);
  4939  004904  0E83               	movlw	low (STR_165+11)
  4940  004906  0100               	movlb	0	; () banked
  4941  004908  6FC0               	movwf	oled_putString@string& (0+255),b
  4942  00490A  0E7D               	movlw	high (STR_165+11)
  4943  00490C  0100               	movlb	0	; () banked
  4944  00490E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4945  004910  0E00               	movlw	0
  4946  004912  0100               	movlb	0	; () banked
  4947  004914  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4948  004916  0E08               	movlw	8
  4949  004918  0100               	movlb	0	; () banked
  4950  00491A  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4951  00491C  EC6C  F028         	call	_oled_putString	;wreg free
  4952                           
  4953                           ;poweruptest.c: 93: oled_putString("Build Date/Time",0,1);
  4954  004920  0ECD               	movlw	low STR_7
  4955  004922  0100               	movlb	0	; () banked
  4956  004924  6FC0               	movwf	oled_putString@string& (0+255),b
  4957  004926  0E7C               	movlw	high STR_7
  4958  004928  0100               	movlb	0	; () banked
  4959  00492A  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4960  00492C  0E00               	movlw	0
  4961  00492E  0100               	movlb	0	; () banked
  4962  004930  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4963  004932  0E01               	movlw	1
  4964  004934  0100               	movlb	0	; () banked
  4965  004936  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4966  004938  EC6C  F028         	call	_oled_putString	;wreg free
  4967                           
  4968                           ;poweruptest.c: 94: oled_putString("Feb 05 2020",0,2);
  4969  00493C  0E5C               	movlw	low STR_8
  4970  00493E  0100               	movlb	0	; () banked
  4971  004940  6FC0               	movwf	oled_putString@string& (0+255),b
  4972  004942  0E7E               	movlw	high STR_8
  4973  004944  0100               	movlb	0	; () banked
  4974  004946  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4975  004948  0E00               	movlw	0
  4976  00494A  0100               	movlb	0	; () banked
  4977  00494C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4978  00494E  0E02               	movlw	2
  4979  004950  0100               	movlb	0	; () banked
  4980  004952  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4981  004954  EC6C  F028         	call	_oled_putString	;wreg free
  4982                           
  4983                           ;poweruptest.c: 95: oled_putString("15:20:08",0,3);
  4984  004958  0E47               	movlw	low STR_9
  4985  00495A  0100               	movlb	0	; () banked
  4986  00495C  6FC0               	movwf	oled_putString@string& (0+255),b
  4987  00495E  0E7F               	movlw	high STR_9
  4988  004960  0100               	movlb	0	; () banked
  4989  004962  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  4990  004964  0E00               	movlw	0
  4991  004966  0100               	movlb	0	; () banked
  4992  004968  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  4993  00496A  0E03               	movlw	3
  4994  00496C  0100               	movlb	0	; () banked
  4995  00496E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  4996  004970  EC6C  F028         	call	_oled_putString	;wreg free
  4997  004974  0012               	return		;funcret
  4998  004976                     __end_of_test_oled:
  4999                           	opt stack 0
  5000                           tblptru	equ	0xFF8
  5001                           tblptrh	equ	0xFF7
  5002                           tblptrl	equ	0xFF6
  5003                           tablat	equ	0xFF5
  5004                           intcon	equ	0xFF2
  5005                           postinc0	equ	0xFEE
  5006                           wreg	equ	0xFE8
  5007                           postdec1	equ	0xFE5
  5008                           fsr1l	equ	0xFE1
  5009                           status	equ	0xFD8
  5010                           
  5011 ;; *************** function _test_leds *****************
  5012 ;; Defined at:
  5013 ;;		line 147 in file "../Includes/Board/poweruptest.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;		None
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;		None               void
  5020 ;; Registers used:
  5021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5027 ;;      Params:         0       0       0       0       0       0       0       0       0
  5028 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5029 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5030 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5031 ;;Total ram usage:        0 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:   15
  5034 ;; This function calls:
  5035 ;;		_delayms
  5036 ;;		_oled_putString
  5037 ;; This function is called by:
  5038 ;;		_test_powerup
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text4
  5043  0053E4                     __ptext4:
  5044                           	opt stack 0
  5045  0053E4                     _test_leds:
  5046                           	opt stack 14
  5047                           
  5048                           ;poweruptest.c: 149: oled_putString("LED Test:",0,1);
  5049                           
  5050                           ;incstack = 0
  5051  0053E4  0EFD               	movlw	low STR_16
  5052  0053E6  0100               	movlb	0	; () banked
  5053  0053E8  6FC0               	movwf	oled_putString@string& (0+255),b
  5054  0053EA  0E7E               	movlw	high STR_16
  5055  0053EC  0100               	movlb	0	; () banked
  5056  0053EE  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  5057  0053F0  0E00               	movlw	0
  5058  0053F2  0100               	movlb	0	; () banked
  5059  0053F4  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5060  0053F6  0E01               	movlw	1
  5061  0053F8  0100               	movlb	0	; () banked
  5062  0053FA  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5063  0053FC  EC6C  F028         	call	_oled_putString	;wreg free
  5064                           
  5065                           ;poweruptest.c: 151: LATAbits.LATA6 = 1;
  5066  005400  8C89               	bsf	3977,6,c	;volatile
  5067                           
  5068                           ;poweruptest.c: 152: LATAbits.LATA7 = 1;
  5069  005402  8E89               	bsf	3977,7,c	;volatile
  5070                           
  5071                           ;poweruptest.c: 153: delayms(500);
  5072  005404  0E01               	movlw	1
  5073  005406  0100               	movlb	0	; () banked
  5074  005408  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5075  00540A  0EF4               	movlw	244
  5076  00540C  6FAF               	movwf	delayms@t& (0+255),b
  5077  00540E  EC19  F02D         	call	_delayms	;wreg free
  5078                           
  5079                           ;poweruptest.c: 154: LATAbits.LATA6 = 0;
  5080  005412  9C89               	bcf	3977,6,c	;volatile
  5081                           
  5082                           ;poweruptest.c: 155: LATAbits.LATA7 = 0;
  5083  005414  9E89               	bcf	3977,7,c	;volatile
  5084                           
  5085                           ;poweruptest.c: 156: delayms(500);
  5086  005416  0E01               	movlw	1
  5087  005418  0100               	movlb	0	; () banked
  5088  00541A  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5089  00541C  0EF4               	movlw	244
  5090  00541E  6FAF               	movwf	delayms@t& (0+255),b
  5091  005420  EC19  F02D         	call	_delayms	;wreg free
  5092                           
  5093                           ;poweruptest.c: 157: LATAbits.LATA6 = 1;
  5094  005424  8C89               	bsf	3977,6,c	;volatile
  5095                           
  5096                           ;poweruptest.c: 158: LATAbits.LATA7 = 1;
  5097  005426  8E89               	bsf	3977,7,c	;volatile
  5098                           
  5099                           ;poweruptest.c: 159: delayms(500);
  5100  005428  0E01               	movlw	1
  5101  00542A  0100               	movlb	0	; () banked
  5102  00542C  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5103  00542E  0EF4               	movlw	244
  5104  005430  6FAF               	movwf	delayms@t& (0+255),b
  5105  005432  EC19  F02D         	call	_delayms	;wreg free
  5106                           
  5107                           ;poweruptest.c: 160: LATAbits.LATA6 = 0;
  5108  005436  9C89               	bcf	3977,6,c	;volatile
  5109                           
  5110                           ;poweruptest.c: 161: LATAbits.LATA7 = 0;
  5111  005438  9E89               	bcf	3977,7,c	;volatile
  5112                           
  5113                           ;poweruptest.c: 162: delayms(500);
  5114  00543A  0E01               	movlw	1
  5115  00543C  0100               	movlb	0	; () banked
  5116  00543E  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5117  005440  0EF4               	movlw	244
  5118  005442  6FAF               	movwf	delayms@t& (0+255),b
  5119  005444  EC19  F02D         	call	_delayms	;wreg free
  5120  005448  0012               	return		;funcret
  5121  00544A                     __end_of_test_leds:
  5122                           	opt stack 0
  5123                           tblptru	equ	0xFF8
  5124                           tblptrh	equ	0xFF7
  5125                           tblptrl	equ	0xFF6
  5126                           tablat	equ	0xFF5
  5127                           intcon	equ	0xFF2
  5128                           postinc0	equ	0xFEE
  5129                           wreg	equ	0xFE8
  5130                           postdec1	equ	0xFE5
  5131                           fsr1l	equ	0xFE1
  5132                           status	equ	0xFD8
  5133                           
  5134 ;; *************** function _test_comms *****************
  5135 ;; Defined at:
  5136 ;;		line 134 in file "../Includes/Board/poweruptest.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;		None
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;		None
  5141 ;; Return value:  Size  Location     Type
  5142 ;;		None               void
  5143 ;; Registers used:
  5144 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5150 ;;      Params:         0       0       0       0       0       0       0       0       0
  5151 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5153 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5154 ;;Total ram usage:        0 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:   15
  5157 ;; This function calls:
  5158 ;;		_delayms
  5159 ;;		_moteApp_toggleLeds
  5160 ;;		_oled_putString
  5161 ;; This function is called by:
  5162 ;;		_test_powerup
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           	psect	text5
  5167  0051C6                     __ptext5:
  5168                           	opt stack 0
  5169  0051C6                     _test_comms:
  5170                           	opt stack 14
  5171                           
  5172                           ;poweruptest.c: 136: oled_putString("Comm Test:",0,0);
  5173                           
  5174                           ;incstack = 0
  5175  0051C6  0EAB               	movlw	low STR_15
  5176  0051C8  0100               	movlb	0	; () banked
  5177  0051CA  6FC0               	movwf	oled_putString@string& (0+255),b
  5178  0051CC  0E7E               	movlw	high STR_15
  5179  0051CE  0100               	movlb	0	; () banked
  5180  0051D0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  5181  0051D2  0E00               	movlw	0
  5182  0051D4  0100               	movlb	0	; () banked
  5183  0051D6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5184  0051D8  0E00               	movlw	0
  5185  0051DA  0100               	movlb	0	; () banked
  5186  0051DC  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5187  0051DE  EC6C  F028         	call	_oled_putString	;wreg free
  5188                           
  5189                           ;poweruptest.c: 137: moteApp_toggleLeds(1);
  5190  0051E2  0E01               	movlw	1
  5191  0051E4  ECB7  F01A         	call	_moteApp_toggleLeds
  5192                           
  5193                           ;poweruptest.c: 138: delayms(500);
  5194  0051E8  0E01               	movlw	1
  5195  0051EA  0100               	movlb	0	; () banked
  5196  0051EC  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5197  0051EE  0EF4               	movlw	244
  5198  0051F0  6FAF               	movwf	delayms@t& (0+255),b
  5199  0051F2  EC19  F02D         	call	_delayms	;wreg free
  5200                           
  5201                           ;poweruptest.c: 139: moteApp_toggleLeds(0);
  5202  0051F6  0E00               	movlw	0
  5203  0051F8  ECB7  F01A         	call	_moteApp_toggleLeds
  5204                           
  5205                           ;poweruptest.c: 140: delayms(500);
  5206  0051FC  0E01               	movlw	1
  5207  0051FE  0100               	movlb	0	; () banked
  5208  005200  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5209  005202  0EF4               	movlw	244
  5210  005204  6FAF               	movwf	delayms@t& (0+255),b
  5211  005206  EC19  F02D         	call	_delayms	;wreg free
  5212                           
  5213                           ;poweruptest.c: 141: moteApp_toggleLeds(1);
  5214  00520A  0E01               	movlw	1
  5215  00520C  ECB7  F01A         	call	_moteApp_toggleLeds
  5216                           
  5217                           ;poweruptest.c: 142: delayms(500);
  5218  005210  0E01               	movlw	1
  5219  005212  0100               	movlb	0	; () banked
  5220  005214  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5221  005216  0EF4               	movlw	244
  5222  005218  6FAF               	movwf	delayms@t& (0+255),b
  5223  00521A  EC19  F02D         	call	_delayms	;wreg free
  5224                           
  5225                           ;poweruptest.c: 143: moteApp_toggleLeds(0);
  5226  00521E  0E00               	movlw	0
  5227  005220  ECB7  F01A         	call	_moteApp_toggleLeds
  5228                           
  5229                           ;poweruptest.c: 144: delayms(500);
  5230  005224  0E01               	movlw	1
  5231  005226  0100               	movlb	0	; () banked
  5232  005228  6FB0               	movwf	(delayms@t+1)& (0+255),b
  5233  00522A  0EF4               	movlw	244
  5234  00522C  6FAF               	movwf	delayms@t& (0+255),b
  5235  00522E  EC19  F02D         	call	_delayms	;wreg free
  5236  005232  0012               	return		;funcret
  5237  005234                     __end_of_test_comms:
  5238                           	opt stack 0
  5239                           tblptru	equ	0xFF8
  5240                           tblptrh	equ	0xFF7
  5241                           tblptrl	equ	0xFF6
  5242                           tablat	equ	0xFF5
  5243                           intcon	equ	0xFF2
  5244                           postinc0	equ	0xFEE
  5245                           wreg	equ	0xFE8
  5246                           postdec1	equ	0xFE5
  5247                           fsr1l	equ	0xFE1
  5248                           status	equ	0xFD8
  5249                           
  5250 ;; *************** function _moteApp_toggleLeds *****************
  5251 ;; Defined at:
  5252 ;;		line 1262 in file "../Includes/Board/MOTEapp.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;  state           1    wreg     unsigned char 
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;  state           1    4[BANK0 ] unsigned char 
  5257 ;; Return value:  Size  Location     Type
  5258 ;;		None               void
  5259 ;; Registers used:
  5260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5266 ;;      Params:         0       0       0       0       0       0       0       0       0
  5267 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5268 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5269 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5270 ;;Total ram usage:        2 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:   14
  5273 ;; This function calls:
  5274 ;;		_sendCommand
  5275 ;; This function is called by:
  5276 ;;		_test_comms
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text6
  5281  00356E                     __ptext6:
  5282                           	opt stack 0
  5283  00356E                     _moteApp_toggleLeds:
  5284                           	opt stack 14
  5285                           
  5286                           ;incstack = 0
  5287                           ;moteApp_toggleLeds@state stored from wreg
  5288  00356E  0100               	movlb	0	; () banked
  5289  003570  6FB3               	movwf	moteApp_toggleLeds@state& (0+255),b
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;MOTEapp.c: 1264: _delay((unsigned long)((16)*(48000000/4000.0)));
  5293  003572  0EFA               	movlw	250
  5294  003574  0100               	movlb	0	; () banked
  5295  003576  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5296  003578  0E58               	movlw	88
  5297  00357A                     u12477:
  5298  00357A  2EE8               	decfsz	wreg,f,c
  5299  00357C  D7FE               	goto	u12477
  5300  00357E  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5301  003580  D7FC               	goto	u12477
  5302  003582  D000               	nop2	
  5303                           
  5304                           ;MOTEapp.c: 1265: _delay((unsigned long)((16)*(48000000/4000.0)));
  5305  003584  0EFA               	movlw	250
  5306  003586  0100               	movlb	0	; () banked
  5307  003588  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5308  00358A  0E58               	movlw	88
  5309  00358C                     u12487:
  5310  00358C  2EE8               	decfsz	wreg,f,c
  5311  00358E  D7FE               	goto	u12487
  5312  003590  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5313  003592  D7FC               	goto	u12487
  5314  003594  D000               	nop2	
  5315                           
  5316                           ;MOTEapp.c: 1266: _delay((unsigned long)((16)*(48000000/4000.0)));
  5317  003596  0EFA               	movlw	250
  5318  003598  0100               	movlb	0	; () banked
  5319  00359A  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5320  00359C  0E58               	movlw	88
  5321  00359E                     u12497:
  5322  00359E  2EE8               	decfsz	wreg,f,c
  5323  0035A0  D7FE               	goto	u12497
  5324  0035A2  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5325  0035A4  D7FC               	goto	u12497
  5326  0035A6  D000               	nop2	
  5327                           
  5328                           ;MOTEapp.c: 1267: if (state)
  5329  0035A8  0100               	movlb	0	; () banked
  5330  0035AA  51B3               	movf	moteApp_toggleLeds@state& (0+255),w,b
  5331  0035AC  0100               	movlb	0	; () banked
  5332  0035AE  B4D8               	btfsc	status,2,c
  5333  0035B0  D02C               	goto	l11742
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;MOTEapp.c: 1268: {
  5337                           ;MOTEapp.c: 1269: sendCommand("sys set pindig GPIO10 1\r\n");
  5338  0035B2  0E2C               	movlw	low STR_175
  5339  0035B4  0100               	movlb	0	; () banked
  5340  0035B6  6FB0               	movwf	sendCommand@string& (0+255),b
  5341  0035B8  0E7A               	movlw	high STR_175
  5342  0035BA  0100               	movlb	0	; () banked
  5343  0035BC  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
  5344  0035BE  EC49  F02E         	call	_sendCommand	;wreg free
  5345                           
  5346                           ;MOTEapp.c: 1270: _delay((unsigned long)((16)*(48000000/4000.0)));
  5347  0035C2  0EFA               	movlw	250
  5348  0035C4  0100               	movlb	0	; () banked
  5349  0035C6  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5350  0035C8  0E58               	movlw	88
  5351  0035CA                     u12507:
  5352  0035CA  2EE8               	decfsz	wreg,f,c
  5353  0035CC  D7FE               	goto	u12507
  5354  0035CE  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5355  0035D0  D7FC               	goto	u12507
  5356  0035D2  D000               	nop2	
  5357                           
  5358                           ;MOTEapp.c: 1271: _delay((unsigned long)((16)*(48000000/4000.0)));
  5359  0035D4  0EFA               	movlw	250
  5360  0035D6  0100               	movlb	0	; () banked
  5361  0035D8  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5362  0035DA  0E58               	movlw	88
  5363  0035DC                     u12517:
  5364  0035DC  2EE8               	decfsz	wreg,f,c
  5365  0035DE  D7FE               	goto	u12517
  5366  0035E0  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5367  0035E2  D7FC               	goto	u12517
  5368  0035E4  D000               	nop2	
  5369                           
  5370                           ;MOTEapp.c: 1272: _delay((unsigned long)((16)*(48000000/4000.0)));
  5371  0035E6  0EFA               	movlw	250
  5372  0035E8  0100               	movlb	0	; () banked
  5373  0035EA  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5374  0035EC  0E58               	movlw	88
  5375  0035EE                     u12527:
  5376  0035EE  2EE8               	decfsz	wreg,f,c
  5377  0035F0  D7FE               	goto	u12527
  5378  0035F2  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5379  0035F4  D7FC               	goto	u12527
  5380  0035F6  D000               	nop2	
  5381                           
  5382                           ;MOTEapp.c: 1273: sendCommand("sys set pindig GPIO11 1\r\n");
  5383  0035F8  0E46               	movlw	low STR_176
  5384  0035FA  0100               	movlb	0	; () banked
  5385  0035FC  6FB0               	movwf	sendCommand@string& (0+255),b
  5386  0035FE  0E7A               	movlw	high STR_176
  5387  003600  0100               	movlb	0	; () banked
  5388  003602  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
  5389  003604  EC49  F02E         	call	_sendCommand	;wreg free
  5390                           
  5391                           ;MOTEapp.c: 1274: }
  5392  003608  0012               	return	
  5393  00360A                     l11742:
  5394                           
  5395                           ;MOTEapp.c: 1275: else
  5396                           ;MOTEapp.c: 1276: {
  5397                           ;MOTEapp.c: 1277: sendCommand("sys set pindig GPIO10 0\r\n");
  5398  00360A  0EF8               	movlw	low STR_177
  5399  00360C  0100               	movlb	0	; () banked
  5400  00360E  6FB0               	movwf	sendCommand@string& (0+255),b
  5401  003610  0E79               	movlw	high STR_177
  5402  003612  0100               	movlb	0	; () banked
  5403  003614  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
  5404  003616  EC49  F02E         	call	_sendCommand	;wreg free
  5405                           
  5406                           ;MOTEapp.c: 1278: _delay((unsigned long)((16)*(48000000/4000.0)));
  5407  00361A  0EFA               	movlw	250
  5408  00361C  0100               	movlb	0	; () banked
  5409  00361E  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5410  003620  0E58               	movlw	88
  5411  003622                     u12537:
  5412  003622  2EE8               	decfsz	wreg,f,c
  5413  003624  D7FE               	goto	u12537
  5414  003626  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5415  003628  D7FC               	goto	u12537
  5416  00362A  D000               	nop2	
  5417                           
  5418                           ;MOTEapp.c: 1279: _delay((unsigned long)((16)*(48000000/4000.0)));
  5419  00362C  0EFA               	movlw	250
  5420  00362E  0100               	movlb	0	; () banked
  5421  003630  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5422  003632  0E58               	movlw	88
  5423  003634                     u12547:
  5424  003634  2EE8               	decfsz	wreg,f,c
  5425  003636  D7FE               	goto	u12547
  5426  003638  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5427  00363A  D7FC               	goto	u12547
  5428  00363C  D000               	nop2	
  5429                           
  5430                           ;MOTEapp.c: 1280: _delay((unsigned long)((16)*(48000000/4000.0)));
  5431  00363E  0EFA               	movlw	250
  5432  003640  0100               	movlb	0	; () banked
  5433  003642  6FB2               	movwf	??_moteApp_toggleLeds& (0+255),b
  5434  003644  0E58               	movlw	88
  5435  003646                     u12557:
  5436  003646  2EE8               	decfsz	wreg,f,c
  5437  003648  D7FE               	goto	u12557
  5438  00364A  2FB2               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5439  00364C  D7FC               	goto	u12557
  5440  00364E  D000               	nop2	
  5441                           
  5442                           ;MOTEapp.c: 1281: sendCommand("sys set pindig GPIO11 0\r\n");
  5443  003650  0E12               	movlw	low STR_178
  5444  003652  0100               	movlb	0	; () banked
  5445  003654  6FB0               	movwf	sendCommand@string& (0+255),b
  5446  003656  0E7A               	movlw	high STR_178
  5447  003658  0100               	movlb	0	; () banked
  5448  00365A  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
  5449  00365C  EC49  F02E         	call	_sendCommand	;wreg free
  5450  003660  0012               	return	
  5451  003662  0012               	return		;funcret
  5452  003664                     __end_of_moteApp_toggleLeds:
  5453                           	opt stack 0
  5454                           tblptru	equ	0xFF8
  5455                           tblptrh	equ	0xFF7
  5456                           tblptrl	equ	0xFF6
  5457                           tablat	equ	0xFF5
  5458                           intcon	equ	0xFF2
  5459                           postinc0	equ	0xFEE
  5460                           wreg	equ	0xFE8
  5461                           postdec1	equ	0xFE5
  5462                           fsr1l	equ	0xFE1
  5463                           status	equ	0xFD8
  5464                           
  5465 ;; *************** function _delayms *****************
  5466 ;; Defined at:
  5467 ;;		line 54 in file "../Includes/Board/poweruptest.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;  t               2    0[BANK0 ] unsigned int 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;  i               2    3[BANK0 ] unsigned int 
  5472 ;; Return value:  Size  Location     Type
  5473 ;;		None               void
  5474 ;; Registers used:
  5475 ;;		wreg, status,2, status,0
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5481 ;;      Params:         0       2       0       0       0       0       0       0       0
  5482 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5483 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5484 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5485 ;;Total ram usage:        5 bytes
  5486 ;; Hardware stack levels used:    1
  5487 ;; Hardware stack levels required when called:   11
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_test_comms
  5492 ;;		_test_leds
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           	psect	text7
  5497  005A32                     __ptext7:
  5498                           	opt stack 0
  5499  005A32                     _delayms:
  5500                           	opt stack 17
  5501                           
  5502                           ;poweruptest.c: 56: uint16_t i;
  5503                           ;poweruptest.c: 57: for(i = 0; i < t; i++)
  5504                           
  5505                           ;incstack = 0
  5506  005A32  0E00               	movlw	0
  5507  005A34  0100               	movlb	0	; () banked
  5508  005A36  6FB3               	movwf	(delayms@i+1)& (0+255),b
  5509  005A38  0E00               	movlw	0
  5510  005A3A  6FB2               	movwf	delayms@i& (0+255),b
  5511  005A3C  D00C               	goto	l109
  5512  005A3E                     l11724:
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;poweruptest.c: 58: {
  5516                           ;poweruptest.c: 59: _delay((unsigned long)((1)*(48000000/4000.0)));
  5517  005A3E  0E10               	movlw	16
  5518  005A40  0100               	movlb	0	; () banked
  5519  005A42  6FB1               	movwf	??_delayms& (0+255),b
  5520  005A44  0E94               	movlw	148
  5521  005A46                     u12567:
  5522  005A46  2EE8               	decfsz	wreg,f,c
  5523  005A48  D7FE               	goto	u12567
  5524  005A4A  2FB1               	decfsz	??_delayms& (0+255),f,b
  5525  005A4C  D7FC               	goto	u12567
  5526  005A4E  D000               	nop2	
  5527  005A50  0100               	movlb	0	; () banked
  5528  005A52  4BB2               	infsnz	delayms@i& (0+255),f,b
  5529  005A54  2BB3               	incf	(delayms@i+1)& (0+255),f,b
  5530  005A56                     l109:
  5531                           
  5532                           ; BSR set to: 0
  5533  005A56  0100               	movlb	0	; () banked
  5534  005A58  51AF               	movf	delayms@t& (0+255),w,b
  5535  005A5A  0100               	movlb	0	; () banked
  5536  005A5C  5DB2               	subwf	delayms@i& (0+255),w,b
  5537  005A5E  0100               	movlb	0	; () banked
  5538  005A60  51B0               	movf	(delayms@t+1)& (0+255),w,b
  5539  005A62  0100               	movlb	0	; () banked
  5540  005A64  59B3               	subwfb	(delayms@i+1)& (0+255),w,b
  5541  005A66  A0D8               	btfss	status,0,c
  5542  005A68  D7EA               	goto	l11724
  5543                           
  5544                           ; BSR set to: 0
  5545                           
  5546                           ; BSR set to: 0
  5547  005A6A  0012               	return		;funcret
  5548  005A6C                     __end_of_delayms:
  5549                           	opt stack 0
  5550                           tblptru	equ	0xFF8
  5551                           tblptrh	equ	0xFF7
  5552                           tblptrl	equ	0xFF6
  5553                           tablat	equ	0xFF5
  5554                           intcon	equ	0xFF2
  5555                           postinc0	equ	0xFEE
  5556                           wreg	equ	0xFE8
  5557                           postdec1	equ	0xFE5
  5558                           fsr1l	equ	0xFE1
  5559                           status	equ	0xFD8
  5560                           
  5561 ;; *************** function _moteApp_testSensors *****************
  5562 ;; Defined at:
  5563 ;;		line 1366 in file "../Includes/Board/MOTEapp.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;		None
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;  dummyValue      2    0        unsigned int 
  5568 ;; Return value:  Size  Location     Type
  5569 ;;		None               void
  5570 ;; Registers used:
  5571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5577 ;;      Params:         0       0       0       0       0       0       0       0       0
  5578 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5579 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5580 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5581 ;;Total ram usage:        1 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:   16
  5584 ;; This function calls:
  5585 ;;		_ADC_TempConversion
  5586 ;;		_moteApp_convertSensorValue
  5587 ;;		_moteApp_getLightValue
  5588 ;;		_moteApp_getTempValue
  5589 ;;		_moteApp_setSensorsInput
  5590 ;;		_oled_clear
  5591 ;;		_oled_putChar
  5592 ;;		_oled_putString
  5593 ;;		_oled_putint8
  5594 ;; This function is called by:
  5595 ;;		_test_powerup
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           	psect	text8
  5600  003846                     __ptext8:
  5601                           	opt stack 0
  5602  003846                     _moteApp_testSensors:
  5603                           	opt stack 13
  5604                           
  5605                           ;MOTEapp.c: 1369: moteApp_setSensorsInput();
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;incstack = 0
  5609  003846  EC4F  F026         	call	_moteApp_setSensorsInput	;wreg free
  5610                           
  5611                           ;MOTEapp.c: 1371: uint16_t dummyValue;
  5612                           ;MOTEapp.c: 1372: oled_clear();
  5613  00384A  EC3B  F02F         	call	_oled_clear	;wreg free
  5614                           
  5615                           ;MOTEapp.c: 1373: oled_putString("ADC Test",0,0);
  5616  00384E  0E59               	movlw	low STR_17
  5617  003850  0100               	movlb	0	; () banked
  5618  003852  6FC0               	movwf	oled_putString@string& (0+255),b
  5619  003854  0E7F               	movlw	high STR_17
  5620  003856  0100               	movlb	0	; () banked
  5621  003858  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  5622  00385A  0E00               	movlw	0
  5623  00385C  0100               	movlb	0	; () banked
  5624  00385E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5625  003860  0E00               	movlw	0
  5626  003862  0100               	movlb	0	; () banked
  5627  003864  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5628  003866  EC6C  F028         	call	_oled_putString	;wreg free
  5629                           
  5630                           ;MOTEapp.c: 1374: oled_putString("Light =",0,1);
  5631  00386A  0E72               	movlw	low STR_19
  5632  00386C  0100               	movlb	0	; () banked
  5633  00386E  6FC0               	movwf	oled_putString@string& (0+255),b
  5634  003870  0E7F               	movlw	high STR_19
  5635  003872  0100               	movlb	0	; () banked
  5636  003874  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  5637  003876  0E00               	movlw	0
  5638  003878  0100               	movlb	0	; () banked
  5639  00387A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5640  00387C  0E01               	movlw	1
  5641  00387E  0100               	movlb	0	; () banked
  5642  003880  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5643  003882  EC6C  F028         	call	_oled_putString	;wreg free
  5644                           
  5645                           ;MOTEapp.c: 1375: oled_putString("Temp  =",0,2);
  5646  003886  0E6A               	movlw	low STR_18
  5647  003888  0100               	movlb	0	; () banked
  5648  00388A  6FC0               	movwf	oled_putString@string& (0+255),b
  5649  00388C  0E7F               	movlw	high STR_18
  5650  00388E  0100               	movlb	0	; () banked
  5651  003890  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  5652  003892  0E00               	movlw	0
  5653  003894  0100               	movlb	0	; () banked
  5654  003896  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5655  003898  0E02               	movlw	2
  5656  00389A  0100               	movlb	0	; () banked
  5657  00389C  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5658  00389E  EC6C  F028         	call	_oled_putString	;wreg free
  5659                           
  5660                           ;MOTEapp.c: 1376: oled_putChar('C',14,2);
  5661  0038A2  0E0E               	movlw	14
  5662  0038A4  0100               	movlb	0	; () banked
  5663  0038A6  6FB1               	movwf	oled_putChar@station_dot& (0+255),b
  5664  0038A8  0E02               	movlw	2
  5665  0038AA  0100               	movlb	0	; () banked
  5666  0038AC  6FB2               	movwf	oled_putChar@start_page& (0+255),b
  5667  0038AE  0E43               	movlw	67
  5668  0038B0  EC0A  F024         	call	_oled_putChar
  5669                           
  5670                           ;MOTEapp.c: 1377: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  5671  0038B4  EC9A  F02B         	call	_moteApp_getTempValue	;wreg free
  5672  0038B8  C0B2  F0C0         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  5673  0038BC  C0B3  F0C1         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  5674  0038C0  EC62  F025         	call	_moteApp_convertSensorValue	;wreg free
  5675  0038C4  C0C0  F07C         	movff	?_moteApp_convertSensorValue,_temperature
  5676  0038C8  C0C1  F07D         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  5677                           
  5678                           ;MOTEapp.c: 1378: temperature = ADC_TempConversion(temperature);
  5679  0038CC  0100               	movlb	0	; () banked
  5680  0038CE  517C               	movf	_temperature& (0+255),w,b
  5681  0038D0  EC0F  F01D         	call	_ADC_TempConversion
  5682  0038D4  0100               	movlb	0	; () banked
  5683  0038D6  6FE9               	movwf	??_moteApp_testSensors& (0+255),b
  5684  0038D8  0100               	movlb	0	; () banked
  5685  0038DA  51E9               	movf	??_moteApp_testSensors& (0+255),w,b
  5686  0038DC  0100               	movlb	0	; () banked
  5687  0038DE  6F7C               	movwf	_temperature& (0+255),b
  5688  0038E0  6B7D               	clrf	(_temperature+1)& (0+255),b
  5689                           
  5690                           ; BSR set to: 0
  5691                           ;MOTEapp.c: 1379: oled_putint8(temperature, 10, 2);
  5692  0038E2  0E0A               	movlw	10
  5693  0038E4  0100               	movlb	0	; () banked
  5694  0038E6  6FC5               	movwf	oled_putint8@station_dot& (0+255),b
  5695  0038E8  0E02               	movlw	2
  5696  0038EA  0100               	movlb	0	; () banked
  5697  0038EC  6FC6               	movwf	oled_putint8@start_page& (0+255),b
  5698  0038EE  0100               	movlb	0	; () banked
  5699  0038F0  517C               	movf	_temperature& (0+255),w,b
  5700  0038F2  EC95  F020         	call	_oled_putint8
  5701                           
  5702                           ;MOTEapp.c: 1380: __nop();
  5703  0038F6  F000               	nop	
  5704                           
  5705                           ;MOTEapp.c: 1381: oled_putString("    ", 10, 1);
  5706  0038F8  0ED1               	movlw	low (STR_40+12)
  5707  0038FA  0100               	movlb	0	; () banked
  5708  0038FC  6FC0               	movwf	oled_putString@string& (0+255),b
  5709  0038FE  0E7A               	movlw	high (STR_40+12)
  5710  003900  0100               	movlb	0	; () banked
  5711  003902  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  5712  003904  0E0A               	movlw	10
  5713  003906  0100               	movlb	0	; () banked
  5714  003908  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5715  00390A  0E01               	movlw	1
  5716  00390C  0100               	movlb	0	; () banked
  5717  00390E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5718  003910  EC6C  F028         	call	_oled_putString	;wreg free
  5719                           
  5720                           ;MOTEapp.c: 1382: oled_putString(moteApp_getLightValue(), 10, 1);
  5721  003914  EC25  F02A         	call	_moteApp_getLightValue	;wreg free
  5722  003918  C0BC  F0C0         	movff	?_moteApp_getLightValue,oled_putString@string
  5723  00391C  C0BD  F0C1         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  5724  003920  0E0A               	movlw	10
  5725  003922  0100               	movlb	0	; () banked
  5726  003924  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5727  003926  0E01               	movlw	1
  5728  003928  0100               	movlb	0	; () banked
  5729  00392A  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5730  00392C  EC6C  F028         	call	_oled_putString	;wreg free
  5731  003930  0012               	return		;funcret
  5732  003932                     __end_of_moteApp_testSensors:
  5733                           	opt stack 0
  5734                           tblptru	equ	0xFF8
  5735                           tblptrh	equ	0xFF7
  5736                           tblptrl	equ	0xFF6
  5737                           tablat	equ	0xFF5
  5738                           intcon	equ	0xFF2
  5739                           postinc0	equ	0xFEE
  5740                           wreg	equ	0xFE8
  5741                           postdec1	equ	0xFE5
  5742                           fsr1l	equ	0xFE1
  5743                           status	equ	0xFD8
  5744                           
  5745 ;; *************** function _moteHandler *****************
  5746 ;; Defined at:
  5747 ;;		line 186 in file "../Includes/Board/MOTEapp.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;		None
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  readMessage     1    4[BANK1 ] unsigned char 
  5752 ;;  buttonPress     1    3[BANK1 ] enum E7586
  5753 ;;  s2Button        1    2[BANK1 ] unsigned char 
  5754 ;;  gotoNextStat    1    1[BANK1 ] unsigned char 
  5755 ;;  gotoSleep       1    0[BANK1 ] unsigned char 
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  1    wreg      enum E8549
  5758 ;; Registers used:
  5759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5765 ;;      Params:         0       0       0       0       0       0       0       0       0
  5766 ;;      Locals:         0       0       5       0       0       0       0       0       0
  5767 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5768 ;;      Totals:         0       1       5       0       0       0       0       0       0
  5769 ;;Total ram usage:        6 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; Hardware stack levels required when called:   19
  5772 ;; This function calls:
  5773 ;;		_ADC_TempConversion
  5774 ;;		_MOTEapp_TimerBasedTask
  5775 ;;		_MOTEapp_getModuleResponse
  5776 ;;		_TMRapp_ClearBitFlags
  5777 ;;		_TMRapp_Handler
  5778 ;;		_USBapp_exitCDC
  5779 ;;		_USBapp_exitCDCState
  5780 ;;		_moteApp_convertSensorValue
  5781 ;;		_moteApp_getLightValue
  5782 ;;		_moteApp_getTempValue
  5783 ;;		_moteJoiningProcess
  5784 ;;		_moteRunningProcess
  5785 ;;		_oled_clear
  5786 ;;		_oled_putString
  5787 ;;		_oled_putint8
  5788 ;;		_service_pushbutton
  5789 ;; This function is called by:
  5790 ;;		_main
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           	psect	text9
  5795  001C70                     __ptext9:
  5796                           	opt stack 0
  5797  001C70                     _moteHandler:
  5798                           	opt stack 11
  5799                           
  5800                           ;MOTEapp.c: 188: bool gotoSleep = 0;
  5801                           
  5802                           ;incstack = 0
  5803  001C70  0E00               	movlw	0
  5804  001C72  0101               	movlb	1	; () banked
  5805  001C74  6FFB               	movwf	moteHandler@gotoSleep& (0+255),b
  5806                           
  5807                           ;MOTEapp.c: 189: bool gotoNextState = 0;
  5808  001C76  0E00               	movlw	0
  5809  001C78  0101               	movlb	1	; () banked
  5810  001C7A  6FFC               	movwf	moteHandler@gotoNextState& (0+255),b
  5811                           
  5812                           ;MOTEapp.c: 190: bool s2Button = 0;
  5813  001C7C  0E00               	movlw	0
  5814  001C7E  0101               	movlb	1	; () banked
  5815  001C80  6FFD               	movwf	moteHandler@s2Button& (0+255),b
  5816                           
  5817                           ;MOTEapp.c: 191: bool readMessage = 0;
  5818  001C82  0E00               	movlw	0
  5819  001C84  0101               	movlb	1	; () banked
  5820  001C86  6FFF               	movwf	moteHandler@readMessage& (0+255),b
  5821                           
  5822                           ;MOTEapp.c: 192: buttonStates_t buttonPress = Released;
  5823  001C88  0E03               	movlw	3
  5824  001C8A  0101               	movlb	1	; () banked
  5825  001C8C  6FFE               	movwf	moteHandler@buttonPress& (0+255),b
  5826                           
  5827                           ; BSR set to: 1
  5828                           ;MOTEapp.c: 195: if (PORTAbits.RA0)
  5829  001C8E  A080               	btfss	3968,0,c	;volatile
  5830  001C90  D009               	goto	l13558
  5831                           
  5832                           ; BSR set to: 1
  5833                           ;MOTEapp.c: 196: {
  5834                           ;MOTEapp.c: 197: if (USBapp_exitCDC() == NO_USB)
  5835  001C92  EC19  F030         	call	_USBapp_exitCDC	;wreg free
  5836  001C96  0900               	iorlw	0
  5837  001C98  A4D8               	btfss	status,2,c
  5838  001C9A  D008               	goto	l13560
  5839                           
  5840                           ;MOTEapp.c: 198: moteState = MOTE_SWAP;
  5841  001C9C  0E04               	movlw	4
  5842  001C9E  0100               	movlb	0	; () banked
  5843  001CA0  6FFB               	movwf	_moteState& (0+255),b
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;MOTEapp.c: 199: } else {
  5847  001CA2  D004               	goto	l13560
  5848  001CA4                     l13558:
  5849                           
  5850                           ;MOTEapp.c: 200: USBapp_exitCDCState(NO_USB);
  5851  001CA4  0E00               	movlw	0
  5852  001CA6  EC02  F030         	call	_USBapp_exitCDCState
  5853  001CAA  D000               	goto	l13560
  5854  001CAC                     l13560:
  5855                           
  5856                           ;MOTEapp.c: 201: }
  5857                           ;MOTEapp.c: 204: if ( appTimer.mSecTick )
  5858  001CAC  0100               	movlb	0	; () banked
  5859  001CAE  A18E               	btfss	_appTimer& (0+255),0,b
  5860  001CB0  D009               	goto	l13568
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;MOTEapp.c: 205: {
  5864                           ;MOTEapp.c: 207: TMRapp_ClearBitFlags();
  5865  001CB2  EC1D  F030         	call	_TMRapp_ClearBitFlags	;wreg free
  5866                           
  5867                           ;MOTEapp.c: 209: TMRapp_Handler();
  5868  001CB6  ECFC  F014         	call	_TMRapp_Handler	;wreg free
  5869                           
  5870                           ;MOTEapp.c: 210: MOTEapp_TimerBasedTask(appTimer);
  5871  001CBA  0100               	movlb	0	; () banked
  5872  001CBC  518E               	movf	_appTimer& (0+255),w,b
  5873  001CBE  ECA8  F02E         	call	_MOTEapp_TimerBasedTask
  5874  001CC2  D000               	goto	l13568
  5875  001CC4                     l13568:
  5876                           
  5877                           ;MOTEapp.c: 211: }
  5878                           ;MOTEapp.c: 214: buttonPress = service_pushbutton();
  5879  001CC4  EC6B  F027         	call	_service_pushbutton	;wreg free
  5880  001CC8  0101               	movlb	1	; () banked
  5881  001CCA  6FFE               	movwf	moteHandler@buttonPress& (0+255),b
  5882                           
  5883                           ; BSR set to: 1
  5884                           ;MOTEapp.c: 215: if (buttonPress == ShortPress1)
  5885  001CCC  0101               	movlb	1	; () banked
  5886  001CCE  05FE               	decf	moteHandler@buttonPress& (0+255),w,b
  5887  001CD0  A4D8               	btfss	status,2,c
  5888  001CD2  D007               	goto	l13574
  5889                           
  5890                           ; BSR set to: 1
  5891                           ;MOTEapp.c: 216: {
  5892                           ;MOTEapp.c: 217: secTicker = 0;
  5893  001CD4  0E00               	movlw	0
  5894  001CD6  0100               	movlb	0	; () banked
  5895  001CD8  6FA6               	movwf	_secTicker& (0+255),b
  5896                           
  5897                           ;MOTEapp.c: 218: gotoNextState = 1;
  5898  001CDA  0E01               	movlw	1
  5899  001CDC  0101               	movlb	1	; () banked
  5900  001CDE  6FFC               	movwf	moteHandler@gotoNextState& (0+255),b
  5901                           
  5902                           ;MOTEapp.c: 219: }
  5903  001CE0  D00C               	goto	l13578
  5904  001CE2                     l13574:
  5905                           
  5906                           ; BSR set to: 1
  5907                           ;MOTEapp.c: 220: else if (buttonPress == ShortPress2)
  5908  001CE2  0E02               	movlw	2
  5909  001CE4  0101               	movlb	1	; () banked
  5910  001CE6  19FE               	xorwf	moteHandler@buttonPress& (0+255),w,b
  5911  001CE8  A4D8               	btfss	status,2,c
  5912  001CEA  D007               	goto	l13578
  5913                           
  5914                           ; BSR set to: 1
  5915                           ;MOTEapp.c: 221: {
  5916                           ;MOTEapp.c: 222: secTicker = 0;
  5917  001CEC  0E00               	movlw	0
  5918  001CEE  0100               	movlb	0	; () banked
  5919  001CF0  6FA6               	movwf	_secTicker& (0+255),b
  5920                           
  5921                           ;MOTEapp.c: 223: s2Button = 1;
  5922  001CF2  0E01               	movlw	1
  5923  001CF4  0101               	movlb	1	; () banked
  5924  001CF6  6FFD               	movwf	moteHandler@s2Button& (0+255),b
  5925                           
  5926                           ; BSR set to: 1
  5927  001CF8  D000               	goto	l13578
  5928  001CFA                     l13578:
  5929                           
  5930                           ; BSR set to: 1
  5931                           ;MOTEapp.c: 224: }
  5932                           ;MOTEapp.c: 227: if ( MOTEapp_getModuleResponse() )
  5933  001CFA  EC2E  F028         	call	_MOTEapp_getModuleResponse	;wreg free
  5934  001CFE  0900               	iorlw	0
  5935  001D00  B4D8               	btfsc	status,2,c
  5936  001D02  D002               	goto	l13582
  5937                           
  5938                           ;MOTEapp.c: 228: readMessage = 1;
  5939  001D04  0E01               	movlw	1
  5940  001D06  D001               	goto	L1
  5941  001D08                     l13582:
  5942                           
  5943                           ;MOTEapp.c: 229: else
  5944                           ;MOTEapp.c: 230: readMessage = 0;
  5945  001D08  0E00               	movlw	0
  5946  001D0A                     L1:
  5947  001D0A  0101               	movlb	1	; () banked
  5948  001D0C  6FFF               	movwf	moteHandler@readMessage& (0+255),b
  5949  001D0E  D000               	goto	l13584
  5950  001D10                     l13584:
  5951                           
  5952                           ; BSR set to: 1
  5953                           ;MOTEapp.c: 233: if (runningState == runningSensorMenu)
  5954  001D10  0E02               	movlw	2
  5955  001D12  0100               	movlb	0	; () banked
  5956  001D14  19A5               	xorwf	_runningState& (0+255),w,b
  5957  001D16  A4D8               	btfss	status,2,c
  5958  001D18  D04C               	goto	l13602
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;MOTEapp.c: 234: {
  5962                           ;MOTEapp.c: 236: if (m10SecTicker >= 100)
  5963  001D1A  0100               	movlb	0	; () banked
  5964  001D1C  5179               	movf	(_m10SecTicker+1)& (0+255),w,b
  5965  001D1E  E105               	bnz	u12350
  5966  001D20  0E64               	movlw	100
  5967  001D22  0100               	movlb	0	; () banked
  5968  001D24  5D78               	subwf	_m10SecTicker& (0+255),w,b
  5969  001D26  A0D8               	btfss	status,0,c
  5970  001D28  D044               	goto	l13602
  5971  001D2A                     u12350:
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;MOTEapp.c: 237: {
  5975                           ;MOTEapp.c: 238: __nop();
  5976  001D2A  F000               	nop	
  5977                           
  5978                           ;MOTEapp.c: 239: oled_putString("    ", 6, 1);
  5979  001D2C  0ED1               	movlw	low (STR_40+12)
  5980  001D2E  0100               	movlb	0	; () banked
  5981  001D30  6FC0               	movwf	oled_putString@string& (0+255),b
  5982  001D32  0E7A               	movlw	high (STR_40+12)
  5983  001D34  0100               	movlb	0	; () banked
  5984  001D36  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  5985  001D38  0E06               	movlw	6
  5986  001D3A  0100               	movlb	0	; () banked
  5987  001D3C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  5988  001D3E  0E01               	movlw	1
  5989  001D40  0100               	movlb	0	; () banked
  5990  001D42  6FC3               	movwf	oled_putString@start_page& (0+255),b
  5991  001D44  EC6C  F028         	call	_oled_putString	;wreg free
  5992                           
  5993                           ;MOTEapp.c: 240: oled_putString(moteApp_getLightValue(), 6, 1);
  5994  001D48  EC25  F02A         	call	_moteApp_getLightValue	;wreg free
  5995  001D4C  C0BC  F0C0         	movff	?_moteApp_getLightValue,oled_putString@string
  5996  001D50  C0BD  F0C1         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  5997  001D54  0E06               	movlw	6
  5998  001D56  0100               	movlb	0	; () banked
  5999  001D58  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6000  001D5A  0E01               	movlw	1
  6001  001D5C  0100               	movlb	0	; () banked
  6002  001D5E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6003  001D60  EC6C  F028         	call	_oled_putString	;wreg free
  6004                           
  6005                           ;MOTEapp.c: 241: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6006  001D64  EC9A  F02B         	call	_moteApp_getTempValue	;wreg free
  6007  001D68  C0B2  F0C0         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6008  001D6C  C0B3  F0C1         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6009  001D70  EC62  F025         	call	_moteApp_convertSensorValue	;wreg free
  6010  001D74  C0C0  F07C         	movff	?_moteApp_convertSensorValue,_temperature
  6011  001D78  C0C1  F07D         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6012                           
  6013                           ;MOTEapp.c: 242: temperature = ADC_TempConversion(temperature);
  6014  001D7C  0100               	movlb	0	; () banked
  6015  001D7E  517C               	movf	_temperature& (0+255),w,b
  6016  001D80  EC0F  F01D         	call	_ADC_TempConversion
  6017  001D84  0100               	movlb	0	; () banked
  6018  001D86  6FF3               	movwf	??_moteHandler& (0+255),b
  6019  001D88  0100               	movlb	0	; () banked
  6020  001D8A  51F3               	movf	??_moteHandler& (0+255),w,b
  6021  001D8C  0100               	movlb	0	; () banked
  6022  001D8E  6F7C               	movwf	_temperature& (0+255),b
  6023  001D90  6B7D               	clrf	(_temperature+1)& (0+255),b
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;MOTEapp.c: 243: oled_putint8(temperature, 6, 2);
  6027  001D92  0E06               	movlw	6
  6028  001D94  0100               	movlb	0	; () banked
  6029  001D96  6FC5               	movwf	oled_putint8@station_dot& (0+255),b
  6030  001D98  0E02               	movlw	2
  6031  001D9A  0100               	movlb	0	; () banked
  6032  001D9C  6FC6               	movwf	oled_putint8@start_page& (0+255),b
  6033  001D9E  0100               	movlb	0	; () banked
  6034  001DA0  517C               	movf	_temperature& (0+255),w,b
  6035  001DA2  EC95  F020         	call	_oled_putint8
  6036                           
  6037                           ;MOTEapp.c: 244: m10SecTicker = 0;
  6038  001DA6  0E00               	movlw	0
  6039  001DA8  0100               	movlb	0	; () banked
  6040  001DAA  6F79               	movwf	(_m10SecTicker+1)& (0+255),b
  6041  001DAC  0E00               	movlw	0
  6042  001DAE  6F78               	movwf	_m10SecTicker& (0+255),b
  6043                           
  6044                           ; BSR set to: 0
  6045  001DB0  D000               	goto	l13602
  6046  001DB2                     l13602:
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;MOTEapp.c: 245: }
  6050                           ;MOTEapp.c: 246: }
  6051                           ;MOTEapp.c: 248: if(secTicker)
  6052  001DB2  0100               	movlb	0	; () banked
  6053  001DB4  51A6               	movf	_secTicker& (0+255),w,b
  6054  001DB6  B4D8               	btfsc	status,2,c
  6055  001DB8  D08B               	goto	l13640
  6056                           
  6057                           ; BSR set to: 0
  6058                           ;MOTEapp.c: 249: {
  6059                           ;MOTEapp.c: 250: if ((secTicker >= 10) && (menuTimeout))
  6060  001DBA  0E09               	movlw	9
  6061  001DBC  0100               	movlb	0	; () banked
  6062  001DBE  65A6               	cpfsgt	_secTicker& (0+255),b
  6063  001DC0  D087               	goto	l13640
  6064                           
  6065                           ; BSR set to: 0
  6066  001DC2  0100               	movlb	0	; () banked
  6067  001DC4  51FA               	movf	_menuTimeout& (0+255),w,b
  6068  001DC6  B4D8               	btfsc	status,2,c
  6069  001DC8  D083               	goto	l13640
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;MOTEapp.c: 251: {
  6073                           ;MOTEapp.c: 252: gotoSleep = 1;
  6074  001DCA  0E01               	movlw	1
  6075  001DCC  0101               	movlb	1	; () banked
  6076  001DCE  6FFB               	movwf	moteHandler@gotoSleep& (0+255),b
  6077                           
  6078                           ;MOTEapp.c: 253: secTicker = 0;
  6079  001DD0  0E00               	movlw	0
  6080  001DD2  0100               	movlb	0	; () banked
  6081  001DD4  6FA6               	movwf	_secTicker& (0+255),b
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;MOTEapp.c: 254: }
  6085                           ;MOTEapp.c: 255: }
  6086                           ;MOTEapp.c: 257: switch(moteState)
  6087                           
  6088                           ; BSR set to: 0
  6089  001DD6  D07C               	goto	l13640
  6090  001DD8  D7FF               	goto	l377
  6091                           
  6092                           ;MOTEapp.c: 261: break;
  6093  001DDA  D088               	goto	l13642
  6094  001DDC                     l13610:
  6095                           
  6096                           ;MOTEapp.c: 263: oled_clear();
  6097  001DDC  EC3B  F02F         	call	_oled_clear	;wreg free
  6098                           
  6099                           ;MOTEapp.c: 264: oled_putString("MOTE Mode",1,0);
  6100  001DE0  0ED5               	movlw	low STR_24
  6101  001DE2  0100               	movlb	0	; () banked
  6102  001DE4  6FC0               	movwf	oled_putString@string& (0+255),b
  6103  001DE6  0E7E               	movlw	high STR_24
  6104  001DE8  0100               	movlb	0	; () banked
  6105  001DEA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6106  001DEC  0E01               	movlw	1
  6107  001DEE  0100               	movlb	0	; () banked
  6108  001DF0  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6109  001DF2  0E00               	movlw	0
  6110  001DF4  0100               	movlb	0	; () banked
  6111  001DF6  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6112  001DF8  EC6C  F028         	call	_oled_putString	;wreg free
  6113                           
  6114                           ;MOTEapp.c: 265: oled_putString("Starting",2,1);
  6115  001DFC  0E35               	movlw	low STR_25
  6116  001DFE  0100               	movlb	0	; () banked
  6117  001E00  6FC0               	movwf	oled_putString@string& (0+255),b
  6118  001E02  0E7F               	movlw	high STR_25
  6119  001E04  0100               	movlb	0	; () banked
  6120  001E06  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6121  001E08  0E02               	movlw	2
  6122  001E0A  0100               	movlb	0	; () banked
  6123  001E0C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6124  001E0E  0E01               	movlw	1
  6125  001E10  0100               	movlb	0	; () banked
  6126  001E12  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6127  001E14  EC6C  F028         	call	_oled_putString	;wreg free
  6128                           
  6129                           ;MOTEapp.c: 266: oled_putString("ReRun PwrTst<S2>",0,3);
  6130  001E18  0EB3               	movlw	low STR_26
  6131  001E1A  0100               	movlb	0	; () banked
  6132  001E1C  6FC0               	movwf	oled_putString@string& (0+255),b
  6133  001E1E  0E7B               	movlw	high STR_26
  6134  001E20  0100               	movlb	0	; () banked
  6135  001E22  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6136  001E24  0E00               	movlw	0
  6137  001E26  0100               	movlb	0	; () banked
  6138  001E28  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6139  001E2A  0E03               	movlw	3
  6140  001E2C  0100               	movlb	0	; () banked
  6141  001E2E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6142  001E30  EC6C  F028         	call	_oled_putString	;wreg free
  6143                           
  6144                           ;MOTEapp.c: 267: activeState = moteStartup;
  6145  001E34  0E00               	movlw	0
  6146  001E36  0100               	movlb	0	; () banked
  6147  001E38  6F8C               	movwf	_activeState& (0+255),b
  6148                           
  6149                           ; BSR set to: 0
  6150                           ;MOTEapp.c: 268: moteState = MOTE_JOINING;
  6151  001E3A  0E02               	movlw	2
  6152  001E3C  D03B               	goto	L2
  6153  001E3E                     l13622:
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;MOTEapp.c: 271: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  6157  001E3E  C1FC  F0C5         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  6158  001E42  C1FD  F0C6         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  6159  001E46  0101               	movlb	1	; () banked
  6160  001E48  51FF               	movf	moteHandler@readMessage& (0+255),w,b
  6161  001E4A  ECAD  F009         	call	_moteJoiningProcess
  6162  001E4E  0900               	iorlw	0
  6163  001E50  B4D8               	btfsc	status,2,c
  6164  001E52  D04C               	goto	l13642
  6165                           
  6166                           ;MOTEapp.c: 272: {
  6167                           ;MOTEapp.c: 273: oled_clear();
  6168  001E54  EC3B  F02F         	call	_oled_clear	;wreg free
  6169                           
  6170                           ;MOTEapp.c: 274: oled_putString("Mobile Mote -App",0,0);
  6171  001E58  0E08               	movlw	low STR_27
  6172  001E5A  0100               	movlb	0	; () banked
  6173  001E5C  6FC0               	movwf	oled_putString@string& (0+255),b
  6174  001E5E  0E7C               	movlw	high STR_27
  6175  001E60  0100               	movlb	0	; () banked
  6176  001E62  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6177  001E64  0E00               	movlw	0
  6178  001E66  0100               	movlb	0	; () banked
  6179  001E68  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6180  001E6A  0E00               	movlw	0
  6181  001E6C  0100               	movlb	0	; () banked
  6182  001E6E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6183  001E70  EC6C  F028         	call	_oled_putString	;wreg free
  6184                           
  6185                           ;MOTEapp.c: 275: oled_putString("Navigate  Select", 0,2);
  6186  001E74  0E19               	movlw	low STR_28
  6187  001E76  0100               	movlb	0	; () banked
  6188  001E78  6FC0               	movwf	oled_putString@string& (0+255),b
  6189  001E7A  0E7C               	movlw	high STR_28
  6190  001E7C  0100               	movlb	0	; () banked
  6191  001E7E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6192  001E80  0E00               	movlw	0
  6193  001E82  0100               	movlb	0	; () banked
  6194  001E84  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6195  001E86  0E02               	movlw	2
  6196  001E88  0100               	movlb	0	; () banked
  6197  001E8A  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6198  001E8C  EC6C  F028         	call	_oled_putString	;wreg free
  6199                           
  6200                           ;MOTEapp.c: 276: oled_putString(" (S2)      (S3) ", 0,3);
  6201  001E90  0E3C               	movlw	low STR_29
  6202  001E92  0100               	movlb	0	; () banked
  6203  001E94  6FC0               	movwf	oled_putString@string& (0+255),b
  6204  001E96  0E7B               	movlw	high STR_29
  6205  001E98  0100               	movlb	0	; () banked
  6206  001E9A  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6207  001E9C  0E00               	movlw	0
  6208  001E9E  0100               	movlb	0	; () banked
  6209  001EA0  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6210  001EA2  0E03               	movlw	3
  6211  001EA4  0100               	movlb	0	; () banked
  6212  001EA6  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6213  001EA8  EC6C  F028         	call	_oled_putString	;wreg free
  6214                           
  6215                           ;MOTEapp.c: 277: runningState = runningEnter;
  6216  001EAC  0E00               	movlw	0
  6217  001EAE  0100               	movlb	0	; () banked
  6218  001EB0  6FA5               	movwf	_runningState& (0+255),b
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;MOTEapp.c: 278: moteState = MOTE_RUNNING;
  6222  001EB2  0E03               	movlw	3
  6223  001EB4                     L2:
  6224  001EB4  0100               	movlb	0	; () banked
  6225  001EB6  6FFB               	movwf	_moteState& (0+255),b
  6226                           
  6227                           ; BSR set to: 0
  6228                           ;MOTEapp.c: 279: }
  6229                           ;MOTEapp.c: 280: break;
  6230  001EB8  D019               	goto	l13642
  6231  001EBA                     l13636:
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;MOTEapp.c: 282: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  6235  001EBA  C1FD  F0E9         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  6236  001EBE  C1FF  F0EA         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  6237  001EC2  C1FB  F0EB         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  6238  001EC6  0101               	movlb	1	; () banked
  6239  001EC8  51FC               	movf	moteHandler@gotoNextState& (0+255),w,b
  6240  001ECA  EC64  F000         	call	_moteRunningProcess
  6241                           
  6242                           ;MOTEapp.c: 287: }
  6243                           
  6244                           ;MOTEapp.c: 286: break;
  6245                           
  6246                           ;MOTEapp.c: 284: case MOTE_SWAP:
  6247                           
  6248                           ;MOTEapp.c: 283: break;
  6249  001ECE  D00E               	goto	l13642
  6250  001ED0                     l13640:
  6251  001ED0  0100               	movlb	0	; () banked
  6252  001ED2  51FB               	movf	_moteState& (0+255),w,b
  6253                           
  6254                           ; Switch size 1, requested type "space"
  6255                           ; Number of cases is 4, Range of values is 1 to 4
  6256                           ; switch strategies available:
  6257                           ; Name         Instructions Cycles
  6258                           ; simple_byte           13     7 (average)
  6259                           ;	Chosen strategy is simple_byte
  6260  001ED4  0A01               	xorlw	1	; case 1
  6261  001ED6  B4D8               	btfsc	status,2,c
  6262  001ED8  D781               	goto	l13610
  6263  001EDA  0A03               	xorlw	3	; case 2
  6264  001EDC  B4D8               	btfsc	status,2,c
  6265  001EDE  D7AF               	goto	l13622
  6266  001EE0  0A01               	xorlw	1	; case 3
  6267  001EE2  B4D8               	btfsc	status,2,c
  6268  001EE4  D7EA               	goto	l13636
  6269  001EE6  0A07               	xorlw	7	; case 4
  6270  001EE8  A4D8               	btfss	status,2,c
  6271  001EEA  D776               	goto	l377
  6272  001EEC                     l13642:
  6273                           
  6274                           ;MOTEapp.c: 288: return moteState;
  6275  001EEC  0100               	movlb	0	; () banked
  6276  001EEE  51FB               	movf	_moteState& (0+255),w,b
  6277  001EF0  0012               	return	
  6278                           
  6279                           ; BSR set to: 0
  6280                           
  6281                           ; BSR set to: 0
  6282  001EF2  0012               	return		;funcret
  6283  001EF4                     __end_of_moteHandler:
  6284                           	opt stack 0
  6285                           tblptru	equ	0xFF8
  6286                           tblptrh	equ	0xFF7
  6287                           tblptrl	equ	0xFF6
  6288                           tablat	equ	0xFF5
  6289                           intcon	equ	0xFF2
  6290                           postinc0	equ	0xFEE
  6291                           wreg	equ	0xFE8
  6292                           postdec1	equ	0xFE5
  6293                           fsr1l	equ	0xFE1
  6294                           status	equ	0xFD8
  6295                           
  6296 ;; *************** function _moteRunningProcess *****************
  6297 ;; Defined at:
  6298 ;;		line 487 in file "../Includes/Board/MOTEapp.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  changeStates    1    wreg     unsigned char 
  6301 ;;  selectButton    1   58[BANK0 ] unsigned char 
  6302 ;;  messageReady    1   59[BANK0 ] unsigned char 
  6303 ;;  sleepEvent      1   60[BANK0 ] unsigned char 
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;  changeStates    1   67[BANK0 ] unsigned char 
  6306 ;;  counter         1   65[BANK0 ] unsigned char 
  6307 ;;  bufferReadPo    1   66[BANK0 ] unsigned char 
  6308 ;;  sizeOfUpdate    1   64[BANK0 ] unsigned char 
  6309 ;;  sizeOfUpdate    1   63[BANK0 ] unsigned char 
  6310 ;;  readByte        1   62[BANK0 ] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      enum E7814
  6313 ;; Registers used:
  6314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6320 ;;      Params:         0       3       0       0       0       0       0       0       0
  6321 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6322 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6323 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6324 ;;Total ram usage:       10 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:   18
  6327 ;; This function calls:
  6328 ;;		_ADC_TempConversion
  6329 ;;		_MOTEapp_SetDataRateSetting
  6330 ;;		_TMR2_ReadTimer
  6331 ;;		_moteApp_GoToSleep
  6332 ;;		_moteApp_add8bToDataBuffer
  6333 ;;		_moteApp_addToDataBuffer
  6334 ;;		_moteApp_clearBuffers
  6335 ;;		_moteApp_convertSensorValue
  6336 ;;		_moteApp_delayms
  6337 ;;		_moteApp_getLightString
  6338 ;;		_moteApp_getLightValue
  6339 ;;		_moteApp_getTempValue
  6340 ;;		_moteApp_lightStringSize
  6341 ;;		_moteApp_setSensorsInput
  6342 ;;		_oled_clear
  6343 ;;		_oled_putString
  6344 ;;		_oled_putUint8
  6345 ;;		_oled_putint8
  6346 ;;		_sendDataCommand
  6347 ;;		_strcmp
  6348 ;;		_strncmp
  6349 ;; This function is called by:
  6350 ;;		_moteHandler
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           	psect	text10
  6355  0000C8                     __ptext10:
  6356                           	opt stack 0
  6357  0000C8                     _moteRunningProcess:
  6358                           	opt stack 11
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;incstack = 0
  6362                           ;moteRunningProcess@changeStates stored from wreg
  6363  0000C8  0100               	movlb	0	; () banked
  6364  0000CA  6FF2               	movwf	moteRunningProcess@changeStates& (0+255),b
  6365                           
  6366                           ; BSR set to: 0
  6367                           ;MOTEapp.c: 489: uint8_t readByte = 0;
  6368  0000CC  0E00               	movlw	0
  6369  0000CE  0100               	movlb	0	; () banked
  6370  0000D0  6FED               	movwf	moteRunningProcess@readByte& (0+255),b
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;MOTEapp.c: 491: if ((sleepEvent) && (periodicState))
  6374  0000D2  0100               	movlb	0	; () banked
  6375  0000D4  51EB               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  6376  0000D6  0100               	movlb	0	; () banked
  6377  0000D8  B4D8               	btfsc	status,2,c
  6378  0000DA  EF7D  F009         	goto	l13258
  6379                           
  6380                           ; BSR set to: 0
  6381  0000DE  0100               	movlb	0	; () banked
  6382  0000E0  51FC               	movf	_periodicState& (0+255),w,b
  6383  0000E2  B4D8               	btfsc	status,2,c
  6384  0000E4  EF7D  F009         	goto	l13258
  6385                           
  6386                           ; BSR set to: 0
  6387                           ;MOTEapp.c: 492: {
  6388                           ;MOTEapp.c: 493: if (sleepTicker >= periodicTimerValue)
  6389  0000E8  0100               	movlb	0	; () banked
  6390  0000EA  51FD               	movf	_periodicTimerValue& (0+255),w,b
  6391  0000EC  0100               	movlb	0	; () banked
  6392  0000EE  5DA7               	subwf	_sleepTicker& (0+255),w,b
  6393  0000F0  A0D8               	btfss	status,0,c
  6394  0000F2  D0E2               	goto	l12790
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;MOTEapp.c: 494: {
  6398                           ;MOTEapp.c: 496: moteApp_clearBuffers();
  6399  0000F4  EC99  F022         	call	_moteApp_clearBuffers	;wreg free
  6400                           
  6401                           ;MOTEapp.c: 499: light = 0;
  6402  0000F8  0E00               	movlw	0
  6403  0000FA  0100               	movlb	0	; () banked
  6404  0000FC  6F77               	movwf	(_light+1)& (0+255),b
  6405  0000FE  0E00               	movlw	0
  6406  000100  6F76               	movwf	_light& (0+255),b
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;MOTEapp.c: 500: temperature = 0;
  6410  000102  0E00               	movlw	0
  6411  000104  0100               	movlb	0	; () banked
  6412  000106  6F7D               	movwf	(_temperature+1)& (0+255),b
  6413  000108  0E00               	movlw	0
  6414  00010A  6F7C               	movwf	_temperature& (0+255),b
  6415                           
  6416                           ; BSR set to: 0
  6417                           ;MOTEapp.c: 501: __nop();
  6418  00010C  F000               	nop	
  6419                           
  6420                           ;MOTEapp.c: 503: moteApp_setSensorsInput();
  6421  00010E  EC4F  F026         	call	_moteApp_setSensorsInput	;wreg free
  6422                           
  6423                           ;MOTEapp.c: 504: uint8_t sizeOfUpdate = 0;
  6424  000112  0E00               	movlw	0
  6425  000114  0100               	movlb	0	; () banked
  6426  000116  6FEE               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6427                           
  6428                           ; BSR set to: 0
  6429                           ;MOTEapp.c: 505: light = moteApp_convertSensorValue(moteApp_getLightValue());
  6430  000118  EC25  F02A         	call	_moteApp_getLightValue	;wreg free
  6431  00011C  C0BC  F0C0         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  6432  000120  C0BD  F0C1         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  6433  000124  EC62  F025         	call	_moteApp_convertSensorValue	;wreg free
  6434  000128  C0C0  F076         	movff	?_moteApp_convertSensorValue,_light
  6435  00012C  C0C1  F077         	movff	?_moteApp_convertSensorValue+1,_light+1
  6436                           
  6437                           ;MOTEapp.c: 506: oled_putString(moteApp_getLightString(), 6, 1);
  6438  000130  ECE1  F02F         	call	_moteApp_getLightString	;wreg free
  6439  000134  C0AF  F0C0         	movff	?_moteApp_getLightString,oled_putString@string
  6440  000138  C0B0  F0C1         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6441  00013C  0E06               	movlw	6
  6442  00013E  0100               	movlb	0	; () banked
  6443  000140  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6444  000142  0E01               	movlw	1
  6445  000144  0100               	movlb	0	; () banked
  6446  000146  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6447  000148  EC6C  F028         	call	_oled_putString	;wreg free
  6448                           
  6449                           ;MOTEapp.c: 507: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightString(), 4);
  6450  00014C  ECE1  F02F         	call	_moteApp_getLightString	;wreg free
  6451  000150  C0AF  F0C0         	movff	?_moteApp_getLightString,moteApp_addToDataBuffer@string
  6452  000154  C0B0  F0C1         	movff	?_moteApp_getLightString+1,moteApp_addToDataBuffer@string+1
  6453  000158  0E04               	movlw	4
  6454  00015A  0100               	movlb	0	; () banked
  6455  00015C  6FC2               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  6456  00015E  EC1A  F029         	call	_moteApp_addToDataBuffer	;wreg free
  6457  000162  0100               	movlb	0	; () banked
  6458  000164  6FEE               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;MOTEapp.c: 509: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6462  000166  EC9A  F02B         	call	_moteApp_getTempValue	;wreg free
  6463  00016A  C0B2  F0C0         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6464  00016E  C0B3  F0C1         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6465  000172  EC62  F025         	call	_moteApp_convertSensorValue	;wreg free
  6466  000176  C0C0  F07C         	movff	?_moteApp_convertSensorValue,_temperature
  6467  00017A  C0C1  F07D         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6468                           
  6469                           ;MOTEapp.c: 510: temperature = ADC_TempConversion(temperature);
  6470  00017E  0100               	movlb	0	; () banked
  6471  000180  517C               	movf	_temperature& (0+255),w,b
  6472  000182  EC0F  F01D         	call	_ADC_TempConversion
  6473  000186  0100               	movlb	0	; () banked
  6474  000188  6FEC               	movwf	??_moteRunningProcess& (0+255),b
  6475  00018A  0100               	movlb	0	; () banked
  6476  00018C  51EC               	movf	??_moteRunningProcess& (0+255),w,b
  6477  00018E  0100               	movlb	0	; () banked
  6478  000190  6F7C               	movwf	_temperature& (0+255),b
  6479  000192  6B7D               	clrf	(_temperature+1)& (0+255),b
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;MOTEapp.c: 511: moteApp_add8bToDataBuffer(12, 4 + moteApp_lightStringSize() + 1);
  6483  000194  EC11  F030         	call	_moteApp_lightStringSize	;wreg free
  6484  000198  0F05               	addlw	5
  6485  00019A  0100               	movlb	0	; () banked
  6486  00019C  6FB5               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6487  00019E  0E0C               	movlw	12
  6488  0001A0  EC48  F01F         	call	_moteApp_add8bToDataBuffer
  6489                           
  6490                           ;MOTEapp.c: 514: sleepTicker = 0;
  6491  0001A4  0E00               	movlw	0
  6492  0001A6  0100               	movlb	0	; () banked
  6493  0001A8  6FA7               	movwf	_sleepTicker& (0+255),b
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;MOTEapp.c: 515: oled_clear();
  6497  0001AA  EC3B  F02F         	call	_oled_clear	;wreg free
  6498                           
  6499                           ;MOTEapp.c: 516: oled_putString("Send Periodic Tx",0,0);
  6500  0001AE  0E3B               	movlw	low STR_71
  6501  0001B0  0100               	movlb	0	; () banked
  6502  0001B2  6FC0               	movwf	oled_putString@string& (0+255),b
  6503  0001B4  0E7C               	movlw	high STR_71
  6504  0001B6  0100               	movlb	0	; () banked
  6505  0001B8  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6506  0001BA  0E00               	movlw	0
  6507  0001BC  0100               	movlb	0	; () banked
  6508  0001BE  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6509  0001C0  0E00               	movlw	0
  6510  0001C2  0100               	movlb	0	; () banked
  6511  0001C4  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6512  0001C6  EC6C  F028         	call	_oled_putString	;wreg free
  6513                           
  6514                           ;MOTEapp.c: 517: oled_putString("On Port #: ",0,1);
  6515  0001CA  0E20               	movlw	low STR_72
  6516  0001CC  0100               	movlb	0	; () banked
  6517  0001CE  6FC0               	movwf	oled_putString@string& (0+255),b
  6518  0001D0  0E7E               	movlw	high STR_72
  6519  0001D2  0100               	movlb	0	; () banked
  6520  0001D4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6521  0001D6  0E00               	movlw	0
  6522  0001D8  0100               	movlb	0	; () banked
  6523  0001DA  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6524  0001DC  0E01               	movlw	1
  6525  0001DE  0100               	movlb	0	; () banked
  6526  0001E0  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6527  0001E2  EC6C  F028         	call	_oled_putString	;wreg free
  6528                           
  6529                           ;MOTEapp.c: 518: oled_putString("L:       T: ",0,2);
  6530  0001E6  0E5E               	movlw	low STR_73
  6531  0001E8  0100               	movlb	0	; () banked
  6532  0001EA  6FC0               	movwf	oled_putString@string& (0+255),b
  6533  0001EC  0E7D               	movlw	high STR_73
  6534  0001EE  0100               	movlb	0	; () banked
  6535  0001F0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6536  0001F2  0E00               	movlw	0
  6537  0001F4  0100               	movlb	0	; () banked
  6538  0001F6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6539  0001F8  0E02               	movlw	2
  6540  0001FA  0100               	movlb	0	; () banked
  6541  0001FC  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6542  0001FE  EC6C  F028         	call	_oled_putString	;wreg free
  6543                           
  6544                           ;MOTEapp.c: 519: oled_putString(moteApp_getLightString(), 3, 2);
  6545  000202  ECE1  F02F         	call	_moteApp_getLightString	;wreg free
  6546  000206  C0AF  F0C0         	movff	?_moteApp_getLightString,oled_putString@string
  6547  00020A  C0B0  F0C1         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6548  00020E  0E03               	movlw	3
  6549  000210  0100               	movlb	0	; () banked
  6550  000212  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6551  000214  0E02               	movlw	2
  6552  000216  0100               	movlb	0	; () banked
  6553  000218  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6554  00021A  EC6C  F028         	call	_oled_putString	;wreg free
  6555                           
  6556                           ;MOTEapp.c: 520: oled_putint8(temperature,11,2);
  6557  00021E  0E0B               	movlw	11
  6558  000220  0100               	movlb	0	; () banked
  6559  000222  6FC5               	movwf	oled_putint8@station_dot& (0+255),b
  6560  000224  0E02               	movlw	2
  6561  000226  0100               	movlb	0	; () banked
  6562  000228  6FC6               	movwf	oled_putint8@start_page& (0+255),b
  6563  00022A  0100               	movlb	0	; () banked
  6564  00022C  517C               	movf	_temperature& (0+255),w,b
  6565  00022E  EC95  F020         	call	_oled_putint8
  6566                           
  6567                           ;MOTEapp.c: 522: randomPortNum = TMR2_ReadTimer();
  6568  000232  ECF0  F02F         	call	_TMR2_ReadTimer	;wreg free
  6569  000236  0100               	movlb	0	; () banked
  6570  000238  6FA1               	movwf	_randomPortNum& (0+255),b
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;MOTEapp.c: 524: if (!randomPortNum)
  6574  00023A  0100               	movlb	0	; () banked
  6575  00023C  51A1               	movf	_randomPortNum& (0+255),w,b
  6576  00023E  0100               	movlb	0	; () banked
  6577  000240  A4D8               	btfss	status,2,c
  6578  000242  D002               	goto	l12772
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;MOTEapp.c: 525: randomPortNum = 5;
  6582  000244  0E05               	movlw	5
  6583  000246  D007               	goto	L3
  6584  000248                     l12772:
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;MOTEapp.c: 526: else if (randomPortNum > 223)
  6588  000248  0EDF               	movlw	223
  6589  00024A  0100               	movlb	0	; () banked
  6590  00024C  65A1               	cpfsgt	_randomPortNum& (0+255),b
  6591  00024E  D006               	goto	l12776
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;MOTEapp.c: 527: randomPortNum = randomPortNum - 50;
  6595  000250  0100               	movlb	0	; () banked
  6596  000252  51A1               	movf	_randomPortNum& (0+255),w,b
  6597  000254  0FCE               	addlw	206
  6598  000256                     L3:
  6599  000256  0100               	movlb	0	; () banked
  6600  000258  6FA1               	movwf	_randomPortNum& (0+255),b
  6601                           
  6602                           ; BSR set to: 0
  6603  00025A  D000               	goto	l12776
  6604  00025C                     l12776:
  6605                           
  6606                           ; BSR set to: 0
  6607                           ;MOTEapp.c: 529: oled_putUint8(randomPortNum,10,1);
  6608  00025C  0E0A               	movlw	10
  6609  00025E  0100               	movlb	0	; () banked
  6610  000260  6FC5               	movwf	oled_putUint8@station_dot& (0+255),b
  6611  000262  0E01               	movlw	1
  6612  000264  0100               	movlb	0	; () banked
  6613  000266  6FC6               	movwf	oled_putUint8@start_page& (0+255),b
  6614  000268  0100               	movlb	0	; () banked
  6615  00026A  51A1               	movf	_randomPortNum& (0+255),w,b
  6616  00026C  ECBB  F024         	call	_oled_putUint8
  6617                           
  6618                           ;MOTEapp.c: 531: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6619  000270  0E00               	movlw	0
  6620  000272  0100               	movlb	0	; () banked
  6621  000274  6FB5               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6622  000276  0100               	movlb	0	; () banked
  6623  000278  51A1               	movf	_randomPortNum& (0+255),w,b
  6624  00027A  EC48  F01F         	call	_moteApp_add8bToDataBuffer
  6625                           
  6626                           ;MOTEapp.c: 532: dataBuffer[3] = 0x20;
  6627  00027E  0E20               	movlw	32
  6628  000280  0101               	movlb	1	; () banked
  6629  000282  6FCB               	movwf	(_dataBuffer+3)& (0+255),b
  6630                           
  6631                           ; BSR set to: 1
  6632                           ;MOTEapp.c: 533: __nop();
  6633  000284  F000               	nop	
  6634                           
  6635                           ;MOTEapp.c: 534: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6636  000286  0E19               	movlw	low STR_74
  6637  000288  0100               	movlb	0	; () banked
  6638  00028A  6FB0               	movwf	sendDataCommand@string& (0+255),b
  6639  00028C  0E7D               	movlw	high STR_74
  6640  00028E  0100               	movlb	0	; () banked
  6641  000290  6FB1               	movwf	(sendDataCommand@string+1)& (0+255),b
  6642  000292  0EC8               	movlw	low _dataBuffer
  6643  000294  0100               	movlb	0	; () banked
  6644  000296  6FB2               	movwf	sendDataCommand@appData& (0+255),b
  6645  000298  0E01               	movlw	high _dataBuffer
  6646  00029A  0100               	movlb	0	; () banked
  6647  00029C  6FB3               	movwf	(sendDataCommand@appData+1)& (0+255),b
  6648  00029E  0E0C               	movlw	12
  6649  0002A0  0100               	movlb	0	; () banked
  6650  0002A2  6FB4               	movwf	sendDataCommand@dataLength& (0+255),b
  6651  0002A4  ECD9  F01E         	call	_sendDataCommand	;wreg free
  6652                           
  6653                           ;MOTEapp.c: 535: secTicker = 10 - (10 / 3);
  6654  0002A8  0E07               	movlw	7
  6655  0002AA  0100               	movlb	0	; () banked
  6656  0002AC  6FA6               	movwf	_secTicker& (0+255),b
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;MOTEapp.c: 536: runningState = runningUplinkTransmit;
  6660  0002AE  0E08               	movlw	8
  6661  0002B0  0100               	movlb	0	; () banked
  6662  0002B2  6FA5               	movwf	_runningState& (0+255),b
  6663                           
  6664                           ;MOTEapp.c: 537: }
  6665  0002B4  EF7D  F009         	goto	l13258
  6666  0002B8                     l12790:
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;MOTEapp.c: 538: else
  6670                           ;MOTEapp.c: 539: {
  6671                           ;MOTEapp.c: 540: if (menuTimeout)
  6672  0002B8  0100               	movlb	0	; () banked
  6673  0002BA  51FA               	movf	_menuTimeout& (0+255),w,b
  6674  0002BC  B4D8               	btfsc	status,2,c
  6675  0002BE  D00A               	goto	l12798
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;MOTEapp.c: 541: {
  6679                           ;MOTEapp.c: 542: sleepTicker++;
  6680  0002C0  0100               	movlb	0	; () banked
  6681  0002C2  2BA7               	incf	_sleepTicker& (0+255),f,b
  6682                           
  6683                           ; BSR set to: 0
  6684                           ;MOTEapp.c: 543: runningState = runningSleep;
  6685  0002C4  0E0F               	movlw	15
  6686  0002C6  0100               	movlb	0	; () banked
  6687  0002C8  6FA5               	movwf	_runningState& (0+255),b
  6688                           
  6689                           ; BSR set to: 0
  6690                           ;MOTEapp.c: 544: selectButton = 1;
  6691  0002CA  0E01               	movlw	1
  6692  0002CC  0100               	movlb	0	; () banked
  6693  0002CE  6FE9               	movwf	moteRunningProcess@selectButton& (0+255),b
  6694                           
  6695                           ;MOTEapp.c: 545: } else {
  6696  0002D0  EF7D  F009         	goto	l13258
  6697  0002D4                     l12798:
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;MOTEapp.c: 546: sleepTicker = 0;
  6701  0002D4  0E00               	movlw	0
  6702  0002D6  0100               	movlb	0	; () banked
  6703  0002D8  6FA7               	movwf	_sleepTicker& (0+255),b
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;MOTEapp.c: 547: }
  6707                           ;MOTEapp.c: 548: }
  6708                           ;MOTEapp.c: 549: }
  6709                           ;MOTEapp.c: 552: switch(runningState)
  6710                           
  6711                           ; BSR set to: 0
  6712                           
  6713                           ; BSR set to: 0
  6714  0002DA  EF7D  F009         	goto	l13258
  6715  0002DE                     
  6716                           ; BSR set to: 0
  6717  0002DE  D7FF               	goto	l467
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;MOTEapp.c: 556: break;
  6721  0002E0  0012               	return	
  6722  0002E2                     l12800:
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;MOTEapp.c: 558: if ( (changeStates) || (selectButton) )
  6726  0002E2  0100               	movlb	0	; () banked
  6727  0002E4  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6728  0002E6  0100               	movlb	0	; () banked
  6729  0002E8  A4D8               	btfss	status,2,c
  6730  0002EA  D005               	goto	l12804
  6731                           
  6732                           ; BSR set to: 0
  6733  0002EC  0100               	movlb	0	; () banked
  6734  0002EE  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6735  0002F0  0100               	movlb	0	; () banked
  6736  0002F2  B4D8               	btfsc	status,2,c
  6737  0002F4  0012               	return	
  6738  0002F6                     l12804:
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;MOTEapp.c: 559: {
  6742                           ;MOTEapp.c: 560: oled_clear();
  6743  0002F6  EC3B  F02F         	call	_oled_clear	;wreg free
  6744                           
  6745                           ;MOTEapp.c: 561: oled_putString("  Issue Uplink  ",0,0);
  6746  0002FA  0E2B               	movlw	low STR_75
  6747  0002FC  0100               	movlb	0	; () banked
  6748  0002FE  6FC0               	movwf	oled_putString@string& (0+255),b
  6749  000300  0E7B               	movlw	high STR_75
  6750  000302  0100               	movlb	0	; () banked
  6751  000304  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6752  000306  0E00               	movlw	0
  6753  000308  0100               	movlb	0	; () banked
  6754  00030A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6755  00030C  0E00               	movlw	0
  6756  00030E  0100               	movlb	0	; () banked
  6757  000310  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6758  000312  EC6C  F028         	call	_oled_putString	;wreg free
  6759                           
  6760                           ;MOTEapp.c: 562: oled_putString(" LoRaWAN Packet ",0,1);
  6761  000316  0E91               	movlw	low STR_76
  6762  000318  0100               	movlb	0	; () banked
  6763  00031A  6FC0               	movwf	oled_putString@string& (0+255),b
  6764  00031C  0E7B               	movlw	high STR_76
  6765  00031E  0100               	movlb	0	; () banked
  6766  000320  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6767  000322  0E00               	movlw	0
  6768  000324  0100               	movlb	0	; () banked
  6769  000326  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6770  000328  0E01               	movlw	1
  6771  00032A  0100               	movlb	0	; () banked
  6772  00032C  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6773  00032E  EC6C  F028         	call	_oled_putString	;wreg free
  6774                           
  6775                           ;MOTEapp.c: 563: oled_putString("(NAV)    (SEL) ",0,3);
  6776  000332  0E8D               	movlw	low STR_77
  6777  000334  0100               	movlb	0	; () banked
  6778  000336  6FC0               	movwf	oled_putString@string& (0+255),b
  6779  000338  0E7C               	movlw	high STR_77
  6780  00033A  0100               	movlb	0	; () banked
  6781  00033C  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6782  00033E  0E00               	movlw	0
  6783  000340  0100               	movlb	0	; () banked
  6784  000342  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6785  000344  0E03               	movlw	3
  6786  000346  0100               	movlb	0	; () banked
  6787  000348  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6788  00034A  EC6C  F028         	call	_oled_putString	;wreg free
  6789                           
  6790                           ;MOTEapp.c: 564: runningState = runningUplink;
  6791  00034E  0E06               	movlw	6
  6792  000350  0100               	movlb	0	; () banked
  6793  000352  6FA5               	movwf	_runningState& (0+255),b
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;MOTEapp.c: 565: }
  6797                           ;MOTEapp.c: 566: break;
  6798  000354  0012               	return	
  6799  000356                     l12814:
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;MOTEapp.c: 568: if (changeStates)
  6803  000356  0100               	movlb	0	; () banked
  6804  000358  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6805  00035A  0100               	movlb	0	; () banked
  6806  00035C  B4D8               	btfsc	status,2,c
  6807  00035E  D030               	goto	l12826
  6808                           
  6809                           ; BSR set to: 0
  6810                           ;MOTEapp.c: 569: {
  6811                           ;MOTEapp.c: 570: oled_clear();
  6812  000360  EC3B  F02F         	call	_oled_clear	;wreg free
  6813                           
  6814                           ;MOTEapp.c: 571: oled_putString(" View Downlink  ",0,0);
  6815  000364  0E1A               	movlw	low STR_78
  6816  000366  0100               	movlb	0	; () banked
  6817  000368  6FC0               	movwf	oled_putString@string& (0+255),b
  6818  00036A  0E7B               	movlw	high STR_78
  6819  00036C  0100               	movlb	0	; () banked
  6820  00036E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6821  000370  0E00               	movlw	0
  6822  000372  0100               	movlb	0	; () banked
  6823  000374  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6824  000376  0E00               	movlw	0
  6825  000378  0100               	movlb	0	; () banked
  6826  00037A  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6827  00037C  EC6C  F028         	call	_oled_putString	;wreg free
  6828                           
  6829                           ;MOTEapp.c: 572: oled_putString("  Last Message  ",0,1);
  6830  000380  0E09               	movlw	low STR_79
  6831  000382  0100               	movlb	0	; () banked
  6832  000384  6FC0               	movwf	oled_putString@string& (0+255),b
  6833  000386  0E7B               	movlw	high STR_79
  6834  000388  0100               	movlb	0	; () banked
  6835  00038A  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6836  00038C  0E00               	movlw	0
  6837  00038E  0100               	movlb	0	; () banked
  6838  000390  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6839  000392  0E01               	movlw	1
  6840  000394  0100               	movlb	0	; () banked
  6841  000396  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6842  000398  EC6C  F028         	call	_oled_putString	;wreg free
  6843                           
  6844                           ;MOTEapp.c: 573: oled_putString("(NAV)    (SEL) ",0,3);
  6845  00039C  0E8D               	movlw	low STR_77
  6846  00039E  0100               	movlb	0	; () banked
  6847  0003A0  6FC0               	movwf	oled_putString@string& (0+255),b
  6848  0003A2  0E7C               	movlw	high STR_77
  6849  0003A4  0100               	movlb	0	; () banked
  6850  0003A6  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6851  0003A8  0E00               	movlw	0
  6852  0003AA  0100               	movlb	0	; () banked
  6853  0003AC  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6854  0003AE  0E03               	movlw	3
  6855  0003B0  0100               	movlb	0	; () banked
  6856  0003B2  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6857  0003B4  EC6C  F028         	call	_oled_putString	;wreg free
  6858                           
  6859                           ;MOTEapp.c: 574: runningState = runningDownlink;
  6860  0003B8  0E0A               	movlw	10
  6861  0003BA  0100               	movlb	0	; () banked
  6862  0003BC  6FA5               	movwf	_runningState& (0+255),b
  6863                           
  6864                           ;MOTEapp.c: 575: }
  6865  0003BE  0012               	return	
  6866  0003C0                     l12826:
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;MOTEapp.c: 576: else if (selectButton)
  6870  0003C0  0100               	movlb	0	; () banked
  6871  0003C2  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6872  0003C4  0100               	movlb	0	; () banked
  6873  0003C6  B4D8               	btfsc	status,2,c
  6874  0003C8  0012               	return	
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;MOTEapp.c: 577: {
  6878                           ;MOTEapp.c: 578: sleepTicker = 0;
  6879  0003CA  0E00               	movlw	0
  6880  0003CC  0100               	movlb	0	; () banked
  6881  0003CE  6FA7               	movwf	_sleepTicker& (0+255),b
  6882                           
  6883                           ; BSR set to: 0
  6884                           ;MOTEapp.c: 580: oled_clear();
  6885  0003D0  EC3B  F02F         	call	_oled_clear	;wreg free
  6886                           
  6887                           ;MOTEapp.c: 581: oled_putString("Uplink Pckt Type",0,0);
  6888  0003D4  0EE6               	movlw	low STR_81
  6889  0003D6  0100               	movlb	0	; () banked
  6890  0003D8  6FC0               	movwf	oled_putString@string& (0+255),b
  6891  0003DA  0E7B               	movlw	high STR_81
  6892  0003DC  0100               	movlb	0	; () banked
  6893  0003DE  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6894  0003E0  0E00               	movlw	0
  6895  0003E2  0100               	movlb	0	; () banked
  6896  0003E4  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6897  0003E6  0E00               	movlw	0
  6898  0003E8  0100               	movlb	0	; () banked
  6899  0003EA  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6900  0003EC  EC6C  F028         	call	_oled_putString	;wreg free
  6901                           
  6902                           ;MOTEapp.c: 582: oled_putString("Throu Port# ",0,1);
  6903  0003F0  0E51               	movlw	low STR_82
  6904  0003F2  0100               	movlb	0	; () banked
  6905  0003F4  6FC0               	movwf	oled_putString@string& (0+255),b
  6906  0003F6  0E7D               	movlw	high STR_82
  6907  0003F8  0100               	movlb	0	; () banked
  6908  0003FA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6909  0003FC  0E00               	movlw	0
  6910  0003FE  0100               	movlb	0	; () banked
  6911  000400  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6912  000402  0E01               	movlw	1
  6913  000404  0100               	movlb	0	; () banked
  6914  000406  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6915  000408  EC6C  F028         	call	_oled_putString	;wreg free
  6916                           
  6917                           ;MOTEapp.c: 584: oled_putString("(UNCNF)    (CNF) ",0,3);
  6918  00040C  0EB3               	movlw	low STR_83
  6919  00040E  0100               	movlb	0	; () banked
  6920  000410  6FC0               	movwf	oled_putString@string& (0+255),b
  6921  000412  0E7A               	movlw	high STR_83
  6922  000414  0100               	movlb	0	; () banked
  6923  000416  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  6924  000418  0E00               	movlw	0
  6925  00041A  0100               	movlb	0	; () banked
  6926  00041C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  6927  00041E  0E03               	movlw	3
  6928  000420  0100               	movlb	0	; () banked
  6929  000422  6FC3               	movwf	oled_putString@start_page& (0+255),b
  6930  000424  EC6C  F028         	call	_oled_putString	;wreg free
  6931                           
  6932                           ;MOTEapp.c: 586: moteApp_clearBuffers();
  6933  000428  EC99  F022         	call	_moteApp_clearBuffers	;wreg free
  6934                           
  6935                           ;MOTEapp.c: 587: randomPortNum = TMR2_ReadTimer();
  6936  00042C  ECF0  F02F         	call	_TMR2_ReadTimer	;wreg free
  6937  000430  0100               	movlb	0	; () banked
  6938  000432  6FA1               	movwf	_randomPortNum& (0+255),b
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;MOTEapp.c: 589: if (!randomPortNum)
  6942  000434  0100               	movlb	0	; () banked
  6943  000436  51A1               	movf	_randomPortNum& (0+255),w,b
  6944  000438  0100               	movlb	0	; () banked
  6945  00043A  A4D8               	btfss	status,2,c
  6946  00043C  D002               	goto	l12846
  6947                           
  6948                           ; BSR set to: 0
  6949                           ;MOTEapp.c: 590: randomPortNum = 5;
  6950  00043E  0E05               	movlw	5
  6951  000440  D007               	goto	L4
  6952  000442                     l12846:
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;MOTEapp.c: 591: else if (randomPortNum > 223)
  6956  000442  0EDF               	movlw	223
  6957  000444  0100               	movlb	0	; () banked
  6958  000446  65A1               	cpfsgt	_randomPortNum& (0+255),b
  6959  000448  D006               	goto	l12850
  6960                           
  6961                           ; BSR set to: 0
  6962                           ;MOTEapp.c: 592: randomPortNum = randomPortNum - 50;
  6963  00044A  0100               	movlb	0	; () banked
  6964  00044C  51A1               	movf	_randomPortNum& (0+255),w,b
  6965  00044E  0FCE               	addlw	206
  6966  000450                     L4:
  6967  000450  0100               	movlb	0	; () banked
  6968  000452  6FA1               	movwf	_randomPortNum& (0+255),b
  6969                           
  6970                           ; BSR set to: 0
  6971  000454  D000               	goto	l12850
  6972  000456                     l12850:
  6973                           
  6974                           ; BSR set to: 0
  6975                           ;MOTEapp.c: 593: oled_putUint8(randomPortNum,12,1);
  6976  000456  0E0C               	movlw	12
  6977  000458  0100               	movlb	0	; () banked
  6978  00045A  6FC5               	movwf	oled_putUint8@station_dot& (0+255),b
  6979  00045C  0E01               	movlw	1
  6980  00045E  0100               	movlb	0	; () banked
  6981  000460  6FC6               	movwf	oled_putUint8@start_page& (0+255),b
  6982  000462  0100               	movlb	0	; () banked
  6983  000464  51A1               	movf	_randomPortNum& (0+255),w,b
  6984  000466  ECBB  F024         	call	_oled_putUint8
  6985                           
  6986                           ;MOTEapp.c: 594: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6987  00046A  0E00               	movlw	0
  6988  00046C  0100               	movlb	0	; () banked
  6989  00046E  6FB5               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6990  000470  0100               	movlb	0	; () banked
  6991  000472  51A1               	movf	_randomPortNum& (0+255),w,b
  6992  000474  EC48  F01F         	call	_moteApp_add8bToDataBuffer
  6993                           
  6994                           ;MOTEapp.c: 595: dataBuffer[3] = 0x20;
  6995  000478  0E20               	movlw	32
  6996  00047A  0101               	movlb	1	; () banked
  6997  00047C  6FCB               	movwf	(_dataBuffer+3)& (0+255),b
  6998                           
  6999                           ; BSR set to: 1
  7000                           ;MOTEapp.c: 597: light = 0;
  7001  00047E  0E00               	movlw	0
  7002  000480  0100               	movlb	0	; () banked
  7003  000482  6F77               	movwf	(_light+1)& (0+255),b
  7004  000484  0E00               	movlw	0
  7005  000486  6F76               	movwf	_light& (0+255),b
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;MOTEapp.c: 598: temperature = 0;
  7009  000488  0E00               	movlw	0
  7010  00048A  0100               	movlb	0	; () banked
  7011  00048C  6F7D               	movwf	(_temperature+1)& (0+255),b
  7012  00048E  0E00               	movlw	0
  7013  000490  6F7C               	movwf	_temperature& (0+255),b
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;MOTEapp.c: 599: __nop();
  7017  000492  F000               	nop	
  7018                           
  7019                           ;MOTEapp.c: 600: moteApp_setSensorsInput();
  7020  000494  EC4F  F026         	call	_moteApp_setSensorsInput	;wreg free
  7021                           
  7022                           ;MOTEapp.c: 601: moteApp_delayms(500);
  7023  000498  0E01               	movlw	1
  7024  00049A  0100               	movlb	0	; () banked
  7025  00049C  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7026  00049E  0EF4               	movlw	244
  7027  0004A0  6FAF               	movwf	moteApp_delayms@length& (0+255),b
  7028  0004A2  EC36  F02D         	call	_moteApp_delayms	;wreg free
  7029                           
  7030                           ;MOTEapp.c: 602: uint8_t sizeOfUpdate = 0;
  7031  0004A6  0E00               	movlw	0
  7032  0004A8  0100               	movlb	0	; () banked
  7033  0004AA  6FEF               	movwf	moteRunningProcess@sizeOfUpdate_1693& (0+255),b
  7034                           
  7035                           ; BSR set to: 0
  7036                           ;MOTEapp.c: 603: light = moteApp_convertSensorValue(moteApp_getLightValue());
  7037  0004AC  EC25  F02A         	call	_moteApp_getLightValue	;wreg free
  7038  0004B0  C0BC  F0C0         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  7039  0004B4  C0BD  F0C1         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  7040  0004B8  EC62  F025         	call	_moteApp_convertSensorValue	;wreg free
  7041  0004BC  C0C0  F076         	movff	?_moteApp_convertSensorValue,_light
  7042  0004C0  C0C1  F077         	movff	?_moteApp_convertSensorValue+1,_light+1
  7043                           
  7044                           ;MOTEapp.c: 604: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightValue(), 4);
  7045  0004C4  EC25  F02A         	call	_moteApp_getLightValue	;wreg free
  7046  0004C8  C0BC  F0C0         	movff	?_moteApp_getLightValue,moteApp_addToDataBuffer@string
  7047  0004CC  C0BD  F0C1         	movff	?_moteApp_getLightValue+1,moteApp_addToDataBuffer@string+1
  7048  0004D0  0E04               	movlw	4
  7049  0004D2  0100               	movlb	0	; () banked
  7050  0004D4  6FC2               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  7051  0004D6  EC1A  F029         	call	_moteApp_addToDataBuffer	;wreg free
  7052  0004DA  0100               	movlb	0	; () banked
  7053  0004DC  6FEF               	movwf	moteRunningProcess@sizeOfUpdate_1693& (0+255),b
  7054                           
  7055                           ; BSR set to: 0
  7056                           ;MOTEapp.c: 605: __nop();
  7057  0004DE  F000               	nop	
  7058                           
  7059                           ;MOTEapp.c: 606: __nop();
  7060  0004E0  F000               	nop	
  7061                           
  7062                           ;MOTEapp.c: 607: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  7063  0004E2  EC9A  F02B         	call	_moteApp_getTempValue	;wreg free
  7064  0004E6  C0B2  F0C0         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  7065  0004EA  C0B3  F0C1         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  7066  0004EE  EC62  F025         	call	_moteApp_convertSensorValue	;wreg free
  7067  0004F2  C0C0  F07C         	movff	?_moteApp_convertSensorValue,_temperature
  7068  0004F6  C0C1  F07D         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  7069                           
  7070                           ;MOTEapp.c: 608: temperature = ADC_TempConversion(temperature);
  7071  0004FA  0100               	movlb	0	; () banked
  7072  0004FC  517C               	movf	_temperature& (0+255),w,b
  7073  0004FE  EC0F  F01D         	call	_ADC_TempConversion
  7074  000502  0100               	movlb	0	; () banked
  7075  000504  6FEC               	movwf	??_moteRunningProcess& (0+255),b
  7076  000506  0100               	movlb	0	; () banked
  7077  000508  51EC               	movf	??_moteRunningProcess& (0+255),w,b
  7078  00050A  0100               	movlb	0	; () banked
  7079  00050C  6F7C               	movwf	_temperature& (0+255),b
  7080  00050E  6B7D               	clrf	(_temperature+1)& (0+255),b
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;MOTEapp.c: 609: moteApp_add8bToDataBuffer(12, 4 + moteApp_lightStringSize() + 1);
  7084  000510  EC11  F030         	call	_moteApp_lightStringSize	;wreg free
  7085  000514  0F05               	addlw	5
  7086  000516  0100               	movlb	0	; () banked
  7087  000518  6FB5               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7088  00051A  0E0C               	movlw	12
  7089  00051C  EC48  F01F         	call	_moteApp_add8bToDataBuffer
  7090                           
  7091                           ;MOTEapp.c: 610: __nop();
  7092  000520  F000               	nop	
  7093                           
  7094                           ;MOTEapp.c: 612: runningState = runningUplinkSelect;
  7095  000522  0E07               	movlw	7
  7096  000524  0100               	movlb	0	; () banked
  7097  000526  6FA5               	movwf	_runningState& (0+255),b
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;MOTEapp.c: 613: }
  7101                           ;MOTEapp.c: 614: break;
  7102                           
  7103                           ; BSR set to: 0
  7104  000528  0012               	return	
  7105  00052A                     l12886:
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;MOTEapp.c: 616: if (changeStates)
  7109  00052A  0100               	movlb	0	; () banked
  7110  00052C  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7111  00052E  0100               	movlb	0	; () banked
  7112  000530  B4D8               	btfsc	status,2,c
  7113  000532  D012               	goto	l12890
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;MOTEapp.c: 617: {
  7117                           ;MOTEapp.c: 618: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7118  000534  0E19               	movlw	low STR_74
  7119  000536  0100               	movlb	0	; () banked
  7120  000538  6FB0               	movwf	sendDataCommand@string& (0+255),b
  7121  00053A  0E7D               	movlw	high STR_74
  7122  00053C  0100               	movlb	0	; () banked
  7123  00053E  6FB1               	movwf	(sendDataCommand@string+1)& (0+255),b
  7124  000540  0EC8               	movlw	low _dataBuffer
  7125  000542  0100               	movlb	0	; () banked
  7126  000544  6FB2               	movwf	sendDataCommand@appData& (0+255),b
  7127  000546  0E01               	movlw	high _dataBuffer
  7128  000548  0100               	movlb	0	; () banked
  7129  00054A  6FB3               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7130  00054C  0E0C               	movlw	12
  7131  00054E  0100               	movlb	0	; () banked
  7132  000550  6FB4               	movwf	sendDataCommand@dataLength& (0+255),b
  7133  000552  ECD9  F01E         	call	_sendDataCommand	;wreg free
  7134  000556  D000               	goto	l12890
  7135  000558                     l12890:
  7136                           
  7137                           ;MOTEapp.c: 620: }
  7138                           ;MOTEapp.c: 621: if (selectButton)
  7139  000558  0100               	movlb	0	; () banked
  7140  00055A  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7141  00055C  0100               	movlb	0	; () banked
  7142  00055E  B4D8               	btfsc	status,2,c
  7143  000560  D012               	goto	l12894
  7144                           
  7145                           ; BSR set to: 0
  7146                           ;MOTEapp.c: 622: {
  7147                           ;MOTEapp.c: 623: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7148  000562  0E50               	movlw	low STR_85
  7149  000564  0100               	movlb	0	; () banked
  7150  000566  6FB0               	movwf	sendDataCommand@string& (0+255),b
  7151  000568  0E7E               	movlw	high STR_85
  7152  00056A  0100               	movlb	0	; () banked
  7153  00056C  6FB1               	movwf	(sendDataCommand@string+1)& (0+255),b
  7154  00056E  0EC8               	movlw	low _dataBuffer
  7155  000570  0100               	movlb	0	; () banked
  7156  000572  6FB2               	movwf	sendDataCommand@appData& (0+255),b
  7157  000574  0E01               	movlw	high _dataBuffer
  7158  000576  0100               	movlb	0	; () banked
  7159  000578  6FB3               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7160  00057A  0E0C               	movlw	12
  7161  00057C  0100               	movlb	0	; () banked
  7162  00057E  6FB4               	movwf	sendDataCommand@dataLength& (0+255),b
  7163  000580  ECD9  F01E         	call	_sendDataCommand	;wreg free
  7164  000584  D000               	goto	l12894
  7165  000586                     l12894:
  7166                           
  7167                           ;MOTEapp.c: 624: }
  7168                           ;MOTEapp.c: 626: if ( (changeStates) || (selectButton) )
  7169  000586  0100               	movlb	0	; () banked
  7170  000588  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7171  00058A  0100               	movlb	0	; () banked
  7172  00058C  A4D8               	btfss	status,2,c
  7173  00058E  D005               	goto	l12898
  7174                           
  7175                           ; BSR set to: 0
  7176  000590  0100               	movlb	0	; () banked
  7177  000592  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7178  000594  0100               	movlb	0	; () banked
  7179  000596  B4D8               	btfsc	status,2,c
  7180  000598  0012               	return	
  7181  00059A                     l12898:
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;MOTEapp.c: 627: {
  7185                           ;MOTEapp.c: 628: oled_clear();
  7186  00059A  EC3B  F02F         	call	_oled_clear	;wreg free
  7187                           
  7188                           ;MOTEapp.c: 629: oled_putString("Sent Data: ",0,0);
  7189  00059E  0E38               	movlw	low STR_86
  7190  0005A0  0100               	movlb	0	; () banked
  7191  0005A2  6FC0               	movwf	oled_putString@string& (0+255),b
  7192  0005A4  0E7E               	movlw	high STR_86
  7193  0005A6  0100               	movlb	0	; () banked
  7194  0005A8  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7195  0005AA  0E00               	movlw	0
  7196  0005AC  0100               	movlb	0	; () banked
  7197  0005AE  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7198  0005B0  0E00               	movlw	0
  7199  0005B2  0100               	movlb	0	; () banked
  7200  0005B4  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7201  0005B6  EC6C  F028         	call	_oled_putString	;wreg free
  7202                           
  7203                           ;MOTEapp.c: 630: oled_putString("Tx Port #: ",0,1);
  7204  0005BA  0E2C               	movlw	low STR_87
  7205  0005BC  0100               	movlb	0	; () banked
  7206  0005BE  6FC0               	movwf	oled_putString@string& (0+255),b
  7207  0005C0  0E7E               	movlw	high STR_87
  7208  0005C2  0100               	movlb	0	; () banked
  7209  0005C4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7210  0005C6  0E00               	movlw	0
  7211  0005C8  0100               	movlb	0	; () banked
  7212  0005CA  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7213  0005CC  0E01               	movlw	1
  7214  0005CE  0100               	movlb	0	; () banked
  7215  0005D0  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7216  0005D2  EC6C  F028         	call	_oled_putString	;wreg free
  7217                           
  7218                           ;MOTEapp.c: 631: oled_putUint8(randomPortNum,12,1);
  7219  0005D6  0E0C               	movlw	12
  7220  0005D8  0100               	movlb	0	; () banked
  7221  0005DA  6FC5               	movwf	oled_putUint8@station_dot& (0+255),b
  7222  0005DC  0E01               	movlw	1
  7223  0005DE  0100               	movlb	0	; () banked
  7224  0005E0  6FC6               	movwf	oled_putUint8@start_page& (0+255),b
  7225  0005E2  0100               	movlb	0	; () banked
  7226  0005E4  51A1               	movf	_randomPortNum& (0+255),w,b
  7227  0005E6  ECBB  F024         	call	_oled_putUint8
  7228                           
  7229                           ;MOTEapp.c: 632: oled_putString("L:       T: ",0,2);
  7230  0005EA  0E5E               	movlw	low STR_73
  7231  0005EC  0100               	movlb	0	; () banked
  7232  0005EE  6FC0               	movwf	oled_putString@string& (0+255),b
  7233  0005F0  0E7D               	movlw	high STR_73
  7234  0005F2  0100               	movlb	0	; () banked
  7235  0005F4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7236  0005F6  0E00               	movlw	0
  7237  0005F8  0100               	movlb	0	; () banked
  7238  0005FA  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7239  0005FC  0E02               	movlw	2
  7240  0005FE  0100               	movlb	0	; () banked
  7241  000600  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7242  000602  EC6C  F028         	call	_oled_putString	;wreg free
  7243                           
  7244                           ;MOTEapp.c: 633: oled_putString(moteApp_getLightString(), 3, 2);
  7245  000606  ECE1  F02F         	call	_moteApp_getLightString	;wreg free
  7246  00060A  C0AF  F0C0         	movff	?_moteApp_getLightString,oled_putString@string
  7247  00060E  C0B0  F0C1         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  7248  000612  0E03               	movlw	3
  7249  000614  0100               	movlb	0	; () banked
  7250  000616  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7251  000618  0E02               	movlw	2
  7252  00061A  0100               	movlb	0	; () banked
  7253  00061C  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7254  00061E  EC6C  F028         	call	_oled_putString	;wreg free
  7255                           
  7256                           ;MOTEapp.c: 634: oled_putint8(temperature,11,2);
  7257  000622  0E0B               	movlw	11
  7258  000624  0100               	movlb	0	; () banked
  7259  000626  6FC5               	movwf	oled_putint8@station_dot& (0+255),b
  7260  000628  0E02               	movlw	2
  7261  00062A  0100               	movlb	0	; () banked
  7262  00062C  6FC6               	movwf	oled_putint8@start_page& (0+255),b
  7263  00062E  0100               	movlb	0	; () banked
  7264  000630  517C               	movf	_temperature& (0+255),w,b
  7265  000632  EC95  F020         	call	_oled_putint8
  7266                           
  7267                           ;MOTEapp.c: 635: LATAbits.LATA6 = 0;
  7268  000636  9C89               	bcf	3977,6,c	;volatile
  7269                           
  7270                           ;MOTEapp.c: 636: runningState = runningUplinkTransmit;
  7271  000638  0E08               	movlw	8
  7272  00063A  0100               	movlb	0	; () banked
  7273  00063C  6FA5               	movwf	_runningState& (0+255),b
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;MOTEapp.c: 637: }
  7277                           ;MOTEapp.c: 638: break;
  7278  00063E  0012               	return	
  7279  000640                     l12916:
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;MOTEapp.c: 640: if ( messageReady )
  7283  000640  0100               	movlb	0	; () banked
  7284  000642  51EA               	movf	moteRunningProcess@messageReady& (0+255),w,b
  7285  000644  0100               	movlb	0	; () banked
  7286  000646  B4D8               	btfsc	status,2,c
  7287  000648  D140               	goto	l12982
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;MOTEapp.c: 641: {
  7291                           ;MOTEapp.c: 642: if(strcmp(moduleResonseBuffer, "ok") == 0)
  7292  00064A  0E68               	movlw	low _moduleResonseBuffer
  7293  00064C  0100               	movlb	0	; () banked
  7294  00064E  6FAF               	movwf	strcmp@s1& (0+255),b
  7295  000650  0E01               	movlw	high _moduleResonseBuffer
  7296  000652  0100               	movlb	0	; () banked
  7297  000654  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
  7298  000656  0EF8               	movlw	low STR_44
  7299  000658  0100               	movlb	0	; () banked
  7300  00065A  6FB1               	movwf	strcmp@s2& (0+255),b
  7301  00065C  0E7F               	movlw	high STR_44
  7302  00065E  0100               	movlb	0	; () banked
  7303  000660  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
  7304  000662  EC87  F02A         	call	_strcmp	;wreg free
  7305  000666  0100               	movlb	0	; () banked
  7306  000668  51AF               	movf	?_strcmp& (0+255),w,b
  7307  00066A  0100               	movlb	0	; () banked
  7308  00066C  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
  7309  00066E  A4D8               	btfss	status,2,c
  7310  000670  D005               	goto	l12924
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;MOTEapp.c: 643: {
  7314                           ;MOTEapp.c: 644: LATAbits.LATA6 = 1;
  7315  000672  8C89               	bsf	3977,6,c	;volatile
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;MOTEapp.c: 645: runningState = runningUplinkTransmit;
  7319  000674  0E08               	movlw	8
  7320  000676  0100               	movlb	0	; () banked
  7321  000678  6FA5               	movwf	_runningState& (0+255),b
  7322  00067A  D000               	goto	l12924
  7323  00067C                     l12924:
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;MOTEapp.c: 646: }
  7327                           ;MOTEapp.c: 647: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  7328  00067C  0E68               	movlw	low _moduleResonseBuffer
  7329  00067E  0100               	movlb	0	; () banked
  7330  000680  6FAF               	movwf	strncmp@s1& (0+255),b
  7331  000682  0E01               	movlw	high _moduleResonseBuffer
  7332  000684  0100               	movlb	0	; () banked
  7333  000686  6FB0               	movwf	(strncmp@s1+1)& (0+255),b
  7334  000688  0EAB               	movlw	low STR_90
  7335  00068A  0100               	movlb	0	; () banked
  7336  00068C  6FB1               	movwf	strncmp@s2& (0+255),b
  7337  00068E  0E7F               	movlw	high STR_90
  7338  000690  0100               	movlb	0	; () banked
  7339  000692  6FB2               	movwf	(strncmp@s2+1)& (0+255),b
  7340  000694  0E00               	movlw	0
  7341  000696  0100               	movlb	0	; () banked
  7342  000698  6FB4               	movwf	(strncmp@len+1)& (0+255),b
  7343  00069A  0E06               	movlw	6
  7344  00069C  6FB3               	movwf	strncmp@len& (0+255),b
  7345  00069E  EC0F  F025         	call	_strncmp	;wreg free
  7346  0006A2  0100               	movlb	0	; () banked
  7347  0006A4  51AF               	movf	?_strncmp& (0+255),w,b
  7348  0006A6  0100               	movlb	0	; () banked
  7349  0006A8  11B0               	iorwf	(?_strncmp+1)& (0+255),w,b
  7350  0006AA  A4D8               	btfss	status,2,c
  7351  0006AC  D08B               	goto	l12966
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;MOTEapp.c: 648: {
  7355                           ;MOTEapp.c: 649: uint8_t bufferReadPos = 7;
  7356  0006AE  0E07               	movlw	7
  7357  0006B0  0100               	movlb	0	; () banked
  7358  0006B2  6FF1               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;MOTEapp.c: 653: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  7362  0006B4  0100               	movlb	0	; () banked
  7363  0006B6  51F1               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7364  0006B8  0D01               	mullw	1
  7365  0006BA  0E68               	movlw	low _moduleResonseBuffer
  7366  0006BC  24F3               	addwf	prodl,w,c
  7367  0006BE  6ED9               	movwf	fsr2l,c
  7368  0006C0  0E01               	movlw	high _moduleResonseBuffer
  7369  0006C2  20F4               	addwfc	prodh,w,c
  7370  0006C4  6EDA               	movwf	fsr2h,c
  7371  0006C6  50DF               	movf	indf2,w,c
  7372  0006C8  0100               	movlb	0	; () banked
  7373  0006CA  6FAA               	movwf	_responsePortNum& (0+255),b
  7374                           
  7375                           ; BSR set to: 0
  7376  0006CC  0100               	movlb	0	; () banked
  7377  0006CE  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;MOTEapp.c: 654: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  7381  0006D0  0100               	movlb	0	; () banked
  7382  0006D2  51F1               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7383  0006D4  0D01               	mullw	1
  7384  0006D6  0E68               	movlw	low _moduleResonseBuffer
  7385  0006D8  24F3               	addwf	prodl,w,c
  7386  0006DA  6ED9               	movwf	fsr2l,c
  7387  0006DC  0E01               	movlw	high _moduleResonseBuffer
  7388  0006DE  20F4               	addwfc	prodh,w,c
  7389  0006E0  6EDA               	movwf	fsr2h,c
  7390  0006E2  50DF               	movf	indf2,w,c
  7391  0006E4  0100               	movlb	0	; () banked
  7392  0006E6  6FAB               	movwf	(_responsePortNum+1)& (0+255),b
  7393                           
  7394                           ; BSR set to: 0
  7395  0006E8  0100               	movlb	0	; () banked
  7396  0006EA  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;MOTEapp.c: 655: if (responsePortNum[1] != ' ')
  7400  0006EC  0E20               	movlw	32
  7401  0006EE  0100               	movlb	0	; () banked
  7402  0006F0  19AB               	xorwf	(_responsePortNum+1)& (0+255),w,b
  7403  0006F2  B4D8               	btfsc	status,2,c
  7404  0006F4  D016               	goto	l12946
  7405                           
  7406                           ; BSR set to: 0
  7407                           ;MOTEapp.c: 656: {
  7408                           ;MOTEapp.c: 657: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  7409  0006F6  0100               	movlb	0	; () banked
  7410  0006F8  51F1               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7411  0006FA  0D01               	mullw	1
  7412  0006FC  0E68               	movlw	low _moduleResonseBuffer
  7413  0006FE  24F3               	addwf	prodl,w,c
  7414  000700  6ED9               	movwf	fsr2l,c
  7415  000702  0E01               	movlw	high _moduleResonseBuffer
  7416  000704  20F4               	addwfc	prodh,w,c
  7417  000706  6EDA               	movwf	fsr2h,c
  7418  000708  50DF               	movf	indf2,w,c
  7419  00070A  0100               	movlb	0	; () banked
  7420  00070C  6FAC               	movwf	(_responsePortNum+2)& (0+255),b
  7421                           
  7422                           ; BSR set to: 0
  7423  00070E  0100               	movlb	0	; () banked
  7424  000710  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;MOTEapp.c: 658: if (responsePortNum[2] != ' ')
  7428  000712  0E20               	movlw	32
  7429  000714  0100               	movlb	0	; () banked
  7430  000716  19AC               	xorwf	(_responsePortNum+2)& (0+255),w,b
  7431  000718  B4D8               	btfsc	status,2,c
  7432  00071A  D003               	goto	l12946
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;MOTEapp.c: 659: {
  7436                           ;MOTEapp.c: 660: bufferReadPos++;
  7437  00071C  0100               	movlb	0	; () banked
  7438  00071E  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7439                           
  7440                           ; BSR set to: 0
  7441  000720  D000               	goto	l12946
  7442  000722                     l12946:
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;MOTEapp.c: 661: }
  7446                           ;MOTEapp.c: 662: }
  7447                           ;MOTEapp.c: 664: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  7448  000722  0E00               	movlw	0
  7449  000724  0100               	movlb	0	; () banked
  7450  000726  6FF0               	movwf	moteRunningProcess@counter& (0+255),b
  7451  000728  D02A               	goto	l12962
  7452                           
  7453                           ; BSR set to: 0
  7454                           
  7455                           ; BSR set to: 0
  7456  00072A  D02D               	goto	l494
  7457  00072C                     l12952:
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;MOTEapp.c: 665: {
  7461                           ;MOTEapp.c: 666: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  7462  00072C  0100               	movlb	0	; () banked
  7463  00072E  51F1               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7464  000730  0D01               	mullw	1
  7465  000732  0E68               	movlw	low _moduleResonseBuffer
  7466  000734  24F3               	addwf	prodl,w,c
  7467  000736  6ED9               	movwf	fsr2l,c
  7468  000738  0E01               	movlw	high _moduleResonseBuffer
  7469  00073A  20F4               	addwfc	prodh,w,c
  7470  00073C  6EDA               	movwf	fsr2h,c
  7471  00073E  0100               	movlb	0	; () banked
  7472  000740  51F0               	movf	moteRunningProcess@counter& (0+255),w,b
  7473  000742  0D01               	mullw	1
  7474  000744  0EA8               	movlw	low _responseData
  7475  000746  24F3               	addwf	prodl,w,c
  7476  000748  6EE1               	movwf	fsr1l,c
  7477  00074A  0E01               	movlw	high _responseData
  7478  00074C  20F4               	addwfc	prodh,w,c
  7479  00074E  6EE2               	movwf	fsr1h,c
  7480  000750  CFDF FFE7          	movff	indf2,indf1
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;MOTEapp.c: 668: if (responseData[counter] != 0x00)
  7484  000754  0100               	movlb	0	; () banked
  7485  000756  51F0               	movf	moteRunningProcess@counter& (0+255),w,b
  7486  000758  0D01               	mullw	1
  7487  00075A  0EA8               	movlw	low _responseData
  7488  00075C  24F3               	addwf	prodl,w,c
  7489  00075E  6ED9               	movwf	fsr2l,c
  7490  000760  0E01               	movlw	high _responseData
  7491  000762  20F4               	addwfc	prodh,w,c
  7492  000764  6EDA               	movwf	fsr2h,c
  7493  000766  50DF               	movf	indf2,w,c
  7494  000768  B4D8               	btfsc	status,2,c
  7495  00076A  D003               	goto	l12958
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;MOTEapp.c: 669: {
  7499                           ;MOTEapp.c: 670: bufferReadPos++;
  7500  00076C  0100               	movlb	0	; () banked
  7501  00076E  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7502                           
  7503                           ;MOTEapp.c: 671: } else {
  7504  000770  D004               	goto	l12960
  7505  000772                     l12958:
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;MOTEapp.c: 672: counter = sizeof(moduleResonseBuffer);
  7509  000772  0E40               	movlw	64
  7510  000774  0100               	movlb	0	; () banked
  7511  000776  6FF0               	movwf	moteRunningProcess@counter& (0+255),b
  7512  000778  D000               	goto	l12960
  7513  00077A                     l12960:
  7514                           
  7515                           ; BSR set to: 0
  7516  00077A  0100               	movlb	0	; () banked
  7517  00077C  2BF0               	incf	moteRunningProcess@counter& (0+255),f,b
  7518  00077E                     l12962:
  7519                           
  7520                           ; BSR set to: 0
  7521  00077E  0E3F               	movlw	63
  7522  000780  0100               	movlb	0	; () banked
  7523  000782  65F0               	cpfsgt	moteRunningProcess@counter& (0+255),b
  7524  000784  D7D3               	goto	l12952
  7525  000786                     l494:
  7526                           
  7527                           ; BSR set to: 0
  7528                           ;MOTEapp.c: 673: }
  7529                           ;MOTEapp.c: 674: }
  7530                           ;MOTEapp.c: 676: LATAbits.LATA7 = 1;
  7531  000786  8E89               	bsf	3977,7,c	;volatile
  7532                           
  7533                           ;MOTEapp.c: 677: LATAbits.LATA6 = 0;
  7534  000788  9C89               	bcf	3977,6,c	;volatile
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;MOTEapp.c: 679: oled_putString("Server Response ",0,2);
  7538  00078A  0E5E               	movlw	low STR_91
  7539  00078C  0100               	movlb	0	; () banked
  7540  00078E  6FC0               	movwf	oled_putString@string& (0+255),b
  7541  000790  0E7B               	movlw	high STR_91
  7542  000792  0100               	movlb	0	; () banked
  7543  000794  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7544  000796  0E00               	movlw	0
  7545  000798  0100               	movlb	0	; () banked
  7546  00079A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7547  00079C  0E02               	movlw	2
  7548  00079E  0100               	movlb	0	; () banked
  7549  0007A0  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7550  0007A2  EC6C  F028         	call	_oled_putString	;wreg free
  7551                           
  7552                           ;MOTEapp.c: 680: oled_putString("    Received    ",0,3);
  7553  0007A6  0ED6               	movlw	low STR_92
  7554  0007A8  0100               	movlb	0	; () banked
  7555  0007AA  6FC0               	movwf	oled_putString@string& (0+255),b
  7556  0007AC  0E7A               	movlw	high STR_92
  7557  0007AE  0100               	movlb	0	; () banked
  7558  0007B0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7559  0007B2  0E00               	movlw	0
  7560  0007B4  0100               	movlb	0	; () banked
  7561  0007B6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7562  0007B8  0E03               	movlw	3
  7563  0007BA  0100               	movlb	0	; () banked
  7564  0007BC  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7565  0007BE  EC6C  F028         	call	_oled_putString	;wreg free
  7566                           
  7567                           ;MOTEapp.c: 681: }
  7568  0007C2  D079               	goto	l12980
  7569  0007C4                     l12966:
  7570                           
  7571                           ;MOTEapp.c: 682: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  7572  0007C4  0E68               	movlw	low _moduleResonseBuffer
  7573  0007C6  0100               	movlb	0	; () banked
  7574  0007C8  6FAF               	movwf	strncmp@s1& (0+255),b
  7575  0007CA  0E01               	movlw	high _moduleResonseBuffer
  7576  0007CC  0100               	movlb	0	; () banked
  7577  0007CE  6FB0               	movwf	(strncmp@s1+1)& (0+255),b
  7578  0007D0  0EB2               	movlw	low STR_93
  7579  0007D2  0100               	movlb	0	; () banked
  7580  0007D4  6FB1               	movwf	strncmp@s2& (0+255),b
  7581  0007D6  0E7F               	movlw	high STR_93
  7582  0007D8  0100               	movlb	0	; () banked
  7583  0007DA  6FB2               	movwf	(strncmp@s2+1)& (0+255),b
  7584  0007DC  0E00               	movlw	0
  7585  0007DE  0100               	movlb	0	; () banked
  7586  0007E0  6FB4               	movwf	(strncmp@len+1)& (0+255),b
  7587  0007E2  0E06               	movlw	6
  7588  0007E4  6FB3               	movwf	strncmp@len& (0+255),b
  7589  0007E6  EC0F  F025         	call	_strncmp	;wreg free
  7590  0007EA  0100               	movlb	0	; () banked
  7591  0007EC  51AF               	movf	?_strncmp& (0+255),w,b
  7592  0007EE  0100               	movlb	0	; () banked
  7593  0007F0  11B0               	iorwf	(?_strncmp+1)& (0+255),w,b
  7594  0007F2  A4D8               	btfss	status,2,c
  7595  0007F4  D010               	goto	l12972
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;MOTEapp.c: 683: {
  7599                           ;MOTEapp.c: 684: LATAbits.LATA6 = 0;
  7600  0007F6  9C89               	bcf	3977,6,c	;volatile
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;MOTEapp.c: 685: oled_putString("Data Transmitted",0,3);
  7604  0007F8  0EC4               	movlw	low STR_94
  7605  0007FA  0100               	movlb	0	; () banked
  7606  0007FC  6FC0               	movwf	oled_putString@string& (0+255),b
  7607  0007FE  0E7B               	movlw	high STR_94
  7608  000800  0100               	movlb	0	; () banked
  7609  000802  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7610  000804  0E00               	movlw	0
  7611  000806  0100               	movlb	0	; () banked
  7612  000808  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7613  00080A  0E03               	movlw	3
  7614  00080C  0100               	movlb	0	; () banked
  7615  00080E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7616  000810  EC6C  F028         	call	_oled_putString	;wreg free
  7617                           
  7618                           ;MOTEapp.c: 686: }
  7619  000814  D050               	goto	l12980
  7620  000816                     l12972:
  7621                           
  7622                           ;MOTEapp.c: 687: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  7623  000816  0E68               	movlw	low _moduleResonseBuffer
  7624  000818  0100               	movlb	0	; () banked
  7625  00081A  6FAF               	movwf	strncmp@s1& (0+255),b
  7626  00081C  0E01               	movlw	high _moduleResonseBuffer
  7627  00081E  0100               	movlb	0	; () banked
  7628  000820  6FB0               	movwf	(strncmp@s1+1)& (0+255),b
  7629  000822  0EA4               	movlw	low STR_95
  7630  000824  0100               	movlb	0	; () banked
  7631  000826  6FB1               	movwf	strncmp@s2& (0+255),b
  7632  000828  0E7F               	movlw	high STR_95
  7633  00082A  0100               	movlb	0	; () banked
  7634  00082C  6FB2               	movwf	(strncmp@s2+1)& (0+255),b
  7635  00082E  0E00               	movlw	0
  7636  000830  0100               	movlb	0	; () banked
  7637  000832  6FB4               	movwf	(strncmp@len+1)& (0+255),b
  7638  000834  0E06               	movlw	6
  7639  000836  6FB3               	movwf	strncmp@len& (0+255),b
  7640  000838  EC0F  F025         	call	_strncmp	;wreg free
  7641  00083C  0100               	movlb	0	; () banked
  7642  00083E  51AF               	movf	?_strncmp& (0+255),w,b
  7643  000840  0100               	movlb	0	; () banked
  7644  000842  11B0               	iorwf	(?_strncmp+1)& (0+255),w,b
  7645  000844  A4D8               	btfss	status,2,c
  7646  000846  D00F               	goto	l12976
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;MOTEapp.c: 688: {
  7650                           ;MOTEapp.c: 689: oled_putString("Mac Error Occurred",0,3);
  7651  000848  0EA0               	movlw	low STR_96
  7652  00084A  0100               	movlb	0	; () banked
  7653  00084C  6FC0               	movwf	oled_putString@string& (0+255),b
  7654  00084E  0E7A               	movlw	high STR_96
  7655  000850  0100               	movlb	0	; () banked
  7656  000852  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7657  000854  0E00               	movlw	0
  7658  000856  0100               	movlb	0	; () banked
  7659  000858  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7660  00085A  0E03               	movlw	3
  7661  00085C  0100               	movlb	0	; () banked
  7662  00085E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7663  000860  EC6C  F028         	call	_oled_putString	;wreg free
  7664                           
  7665                           ;MOTEapp.c: 690: }
  7666  000864  D028               	goto	l12980
  7667  000866                     l12976:
  7668                           
  7669                           ;MOTEapp.c: 691: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  7670  000866  0E68               	movlw	low _moduleResonseBuffer
  7671  000868  0100               	movlb	0	; () banked
  7672  00086A  6FAF               	movwf	strncmp@s1& (0+255),b
  7673  00086C  0E01               	movlw	high _moduleResonseBuffer
  7674  00086E  0100               	movlb	0	; () banked
  7675  000870  6FB0               	movwf	(strncmp@s1+1)& (0+255),b
  7676  000872  0E9D               	movlw	low STR_97
  7677  000874  0100               	movlb	0	; () banked
  7678  000876  6FB1               	movwf	strncmp@s2& (0+255),b
  7679  000878  0E7F               	movlw	high STR_97
  7680  00087A  0100               	movlb	0	; () banked
  7681  00087C  6FB2               	movwf	(strncmp@s2+1)& (0+255),b
  7682  00087E  0E00               	movlw	0
  7683  000880  0100               	movlb	0	; () banked
  7684  000882  6FB4               	movwf	(strncmp@len+1)& (0+255),b
  7685  000884  0E06               	movlw	6
  7686  000886  6FB3               	movwf	strncmp@len& (0+255),b
  7687  000888  EC0F  F025         	call	_strncmp	;wreg free
  7688  00088C  0100               	movlb	0	; () banked
  7689  00088E  51AF               	movf	?_strncmp& (0+255),w,b
  7690  000890  0100               	movlb	0	; () banked
  7691  000892  11B0               	iorwf	(?_strncmp+1)& (0+255),w,b
  7692  000894  A4D8               	btfss	status,2,c
  7693  000896  D00F               	goto	l12980
  7694                           
  7695                           ; BSR set to: 0
  7696                           ;MOTEapp.c: 692: {
  7697                           ;MOTEapp.c: 693: oled_putString("No Free Channel",0,3);
  7698  000898  0EBD               	movlw	low STR_98
  7699  00089A  0100               	movlb	0	; () banked
  7700  00089C  6FC0               	movwf	oled_putString@string& (0+255),b
  7701  00089E  0E7C               	movlw	high STR_98
  7702  0008A0  0100               	movlb	0	; () banked
  7703  0008A2  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7704  0008A4  0E00               	movlw	0
  7705  0008A6  0100               	movlb	0	; () banked
  7706  0008A8  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7707  0008AA  0E03               	movlw	3
  7708  0008AC  0100               	movlb	0	; () banked
  7709  0008AE  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7710  0008B0  EC6C  F028         	call	_oled_putString	;wreg free
  7711  0008B4  D000               	goto	l12980
  7712  0008B6                     l12980:
  7713                           
  7714                           ;MOTEapp.c: 694: }
  7715                           ;MOTEapp.c: 695: _delay((unsigned long)((16)*(48000000/4000.0)));
  7716  0008B6  0EFA               	movlw	250
  7717  0008B8  0100               	movlb	0	; () banked
  7718  0008BA  6FEC               	movwf	??_moteRunningProcess& (0+255),b
  7719  0008BC  0E58               	movlw	88
  7720  0008BE                     u12577:
  7721  0008BE  2EE8               	decfsz	wreg,f,c
  7722  0008C0  D7FE               	goto	u12577
  7723  0008C2  2FEC               	decfsz	??_moteRunningProcess& (0+255),f,b
  7724  0008C4  D7FC               	goto	u12577
  7725  0008C6  D000               	nop2	
  7726  0008C8  D000               	goto	l12982
  7727  0008CA                     l12982:
  7728                           
  7729                           ;MOTEapp.c: 696: }
  7730                           ;MOTEapp.c: 697: if ( (changeStates) || (selectButton) )
  7731  0008CA  0100               	movlb	0	; () banked
  7732  0008CC  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7733  0008CE  0100               	movlb	0	; () banked
  7734  0008D0  A4D8               	btfss	status,2,c
  7735  0008D2  D005               	goto	l12986
  7736                           
  7737                           ; BSR set to: 0
  7738  0008D4  0100               	movlb	0	; () banked
  7739  0008D6  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7740  0008D8  0100               	movlb	0	; () banked
  7741  0008DA  B4D8               	btfsc	status,2,c
  7742  0008DC  0012               	return	
  7743  0008DE                     l12986:
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;MOTEapp.c: 698: {
  7747                           ;MOTEapp.c: 699: oled_clear();
  7748  0008DE  EC3B  F02F         	call	_oled_clear	;wreg free
  7749                           
  7750                           ;MOTEapp.c: 700: oled_putString("  Issue Uplink  ",0,0);
  7751  0008E2  0E2B               	movlw	low STR_75
  7752  0008E4  0100               	movlb	0	; () banked
  7753  0008E6  6FC0               	movwf	oled_putString@string& (0+255),b
  7754  0008E8  0E7B               	movlw	high STR_75
  7755  0008EA  0100               	movlb	0	; () banked
  7756  0008EC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7757  0008EE  0E00               	movlw	0
  7758  0008F0  0100               	movlb	0	; () banked
  7759  0008F2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7760  0008F4  0E00               	movlw	0
  7761  0008F6  0100               	movlb	0	; () banked
  7762  0008F8  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7763  0008FA  EC6C  F028         	call	_oled_putString	;wreg free
  7764                           
  7765                           ;MOTEapp.c: 701: oled_putString(" LoRaWAN Packet ",0,1);
  7766  0008FE  0E91               	movlw	low STR_76
  7767  000900  0100               	movlb	0	; () banked
  7768  000902  6FC0               	movwf	oled_putString@string& (0+255),b
  7769  000904  0E7B               	movlw	high STR_76
  7770  000906  0100               	movlb	0	; () banked
  7771  000908  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7772  00090A  0E00               	movlw	0
  7773  00090C  0100               	movlb	0	; () banked
  7774  00090E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7775  000910  0E01               	movlw	1
  7776  000912  0100               	movlb	0	; () banked
  7777  000914  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7778  000916  EC6C  F028         	call	_oled_putString	;wreg free
  7779                           
  7780                           ;MOTEapp.c: 702: oled_putString("(NAV)    (SEL) ",0,3);
  7781  00091A  0E8D               	movlw	low STR_77
  7782  00091C  0100               	movlb	0	; () banked
  7783  00091E  6FC0               	movwf	oled_putString@string& (0+255),b
  7784  000920  0E7C               	movlw	high STR_77
  7785  000922  0100               	movlb	0	; () banked
  7786  000924  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7787  000926  0E00               	movlw	0
  7788  000928  0100               	movlb	0	; () banked
  7789  00092A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7790  00092C  0E03               	movlw	3
  7791  00092E  0100               	movlb	0	; () banked
  7792  000930  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7793  000932  EC6C  F028         	call	_oled_putString	;wreg free
  7794                           
  7795                           ;MOTEapp.c: 703: runningState = runningUplink;
  7796  000936  0E06               	movlw	6
  7797  000938  0100               	movlb	0	; () banked
  7798  00093A  6FA5               	movwf	_runningState& (0+255),b
  7799                           
  7800                           ; BSR set to: 0
  7801                           ;MOTEapp.c: 704: }
  7802                           ;MOTEapp.c: 705: break;
  7803  00093C  0012               	return	
  7804  00093E                     l12996:
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;MOTEapp.c: 707: if (changeStates)
  7808  00093E  0100               	movlb	0	; () banked
  7809  000940  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7810  000942  0100               	movlb	0	; () banked
  7811  000944  B4D8               	btfsc	status,2,c
  7812  000946  D030               	goto	l13008
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;MOTEapp.c: 708: {
  7816                           ;MOTEapp.c: 709: oled_clear();
  7817  000948  EC3B  F02F         	call	_oled_clear	;wreg free
  7818                           
  7819                           ;MOTEapp.c: 710: oled_putString("  Sensor Data  ",0,0);
  7820  00094C  0E6D               	movlw	low STR_102
  7821  00094E  0100               	movlb	0	; () banked
  7822  000950  6FC0               	movwf	oled_putString@string& (0+255),b
  7823  000952  0E7C               	movlw	high STR_102
  7824  000954  0100               	movlb	0	; () banked
  7825  000956  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7826  000958  0E00               	movlw	0
  7827  00095A  0100               	movlb	0	; () banked
  7828  00095C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7829  00095E  0E00               	movlw	0
  7830  000960  0100               	movlb	0	; () banked
  7831  000962  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7832  000964  EC6C  F028         	call	_oled_putString	;wreg free
  7833                           
  7834                           ;MOTEapp.c: 711: oled_putString("    Display    ",0,1);
  7835  000968  0E5D               	movlw	low STR_103
  7836  00096A  0100               	movlb	0	; () banked
  7837  00096C  6FC0               	movwf	oled_putString@string& (0+255),b
  7838  00096E  0E7C               	movlw	high STR_103
  7839  000970  0100               	movlb	0	; () banked
  7840  000972  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7841  000974  0E00               	movlw	0
  7842  000976  0100               	movlb	0	; () banked
  7843  000978  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7844  00097A  0E01               	movlw	1
  7845  00097C  0100               	movlb	0	; () banked
  7846  00097E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7847  000980  EC6C  F028         	call	_oled_putString	;wreg free
  7848                           
  7849                           ;MOTEapp.c: 712: oled_putString("(NAV)    (SEL) ",0,3);
  7850  000984  0E8D               	movlw	low STR_77
  7851  000986  0100               	movlb	0	; () banked
  7852  000988  6FC0               	movwf	oled_putString@string& (0+255),b
  7853  00098A  0E7C               	movlw	high STR_77
  7854  00098C  0100               	movlb	0	; () banked
  7855  00098E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7856  000990  0E00               	movlw	0
  7857  000992  0100               	movlb	0	; () banked
  7858  000994  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7859  000996  0E03               	movlw	3
  7860  000998  0100               	movlb	0	; () banked
  7861  00099A  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7862  00099C  EC6C  F028         	call	_oled_putString	;wreg free
  7863                           
  7864                           ;MOTEapp.c: 713: runningState = runningSensor;
  7865  0009A0  0E01               	movlw	1
  7866  0009A2  0100               	movlb	0	; () banked
  7867  0009A4  6FA5               	movwf	_runningState& (0+255),b
  7868                           
  7869                           ;MOTEapp.c: 714: }
  7870  0009A6  0012               	return	
  7871  0009A8                     l13008:
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;MOTEapp.c: 715: else if (selectButton)
  7875  0009A8  0100               	movlb	0	; () banked
  7876  0009AA  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7877  0009AC  0100               	movlb	0	; () banked
  7878  0009AE  B4D8               	btfsc	status,2,c
  7879  0009B0  0012               	return	
  7880                           
  7881                           ; BSR set to: 0
  7882                           ;MOTEapp.c: 716: {
  7883                           ;MOTEapp.c: 718: oled_clear();
  7884  0009B2  EC3B  F02F         	call	_oled_clear	;wreg free
  7885                           
  7886                           ;MOTEapp.c: 720: LATAbits.LATA7 = 0;
  7887  0009B6  9E89               	bcf	3977,7,c	;volatile
  7888                           
  7889                           ;MOTEapp.c: 722: oled_putString("Downlink Display",0,0);
  7890  0009B8  0E4C               	movlw	low STR_105
  7891  0009BA  0100               	movlb	0	; () banked
  7892  0009BC  6FC0               	movwf	oled_putString@string& (0+255),b
  7893  0009BE  0E7C               	movlw	high STR_105
  7894  0009C0  0100               	movlb	0	; () banked
  7895  0009C2  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7896  0009C4  0E00               	movlw	0
  7897  0009C6  0100               	movlb	0	; () banked
  7898  0009C8  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7899  0009CA  0E00               	movlw	0
  7900  0009CC  0100               	movlb	0	; () banked
  7901  0009CE  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7902  0009D0  EC6C  F028         	call	_oled_putString	;wreg free
  7903                           
  7904                           ;MOTEapp.c: 724: oled_putString("Rx Port# ",0,1);
  7905  0009D4  0EC1               	movlw	low STR_106
  7906  0009D6  0100               	movlb	0	; () banked
  7907  0009D8  6FC0               	movwf	oled_putString@string& (0+255),b
  7908  0009DA  0E7E               	movlw	high STR_106
  7909  0009DC  0100               	movlb	0	; () banked
  7910  0009DE  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7911  0009E0  0E00               	movlw	0
  7912  0009E2  0100               	movlb	0	; () banked
  7913  0009E4  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7914  0009E6  0E01               	movlw	1
  7915  0009E8  0100               	movlb	0	; () banked
  7916  0009EA  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7917  0009EC  EC6C  F028         	call	_oled_putString	;wreg free
  7918                           
  7919                           ;MOTEapp.c: 725: oled_putString(&responsePortNum,9,1);
  7920  0009F0  0EAA               	movlw	low _responsePortNum
  7921  0009F2  0100               	movlb	0	; () banked
  7922  0009F4  6FC0               	movwf	oled_putString@string& (0+255),b
  7923  0009F6  0E00               	movlw	high _responsePortNum
  7924  0009F8  0100               	movlb	0	; () banked
  7925  0009FA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7926  0009FC  0E09               	movlw	9
  7927  0009FE  0100               	movlb	0	; () banked
  7928  000A00  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7929  000A02  0E01               	movlw	1
  7930  000A04  0100               	movlb	0	; () banked
  7931  000A06  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7932  000A08  EC6C  F028         	call	_oled_putString	;wreg free
  7933                           
  7934                           ;MOTEapp.c: 727: oled_putString("Data: ",0,2);
  7935  000A0C  0E3D               	movlw	low (STR_86+5)
  7936  000A0E  0100               	movlb	0	; () banked
  7937  000A10  6FC0               	movwf	oled_putString@string& (0+255),b
  7938  000A12  0E7E               	movlw	high (STR_86+5)
  7939  000A14  0100               	movlb	0	; () banked
  7940  000A16  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7941  000A18  0E00               	movlw	0
  7942  000A1A  0100               	movlb	0	; () banked
  7943  000A1C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7944  000A1E  0E02               	movlw	2
  7945  000A20  0100               	movlb	0	; () banked
  7946  000A22  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7947  000A24  EC6C  F028         	call	_oled_putString	;wreg free
  7948                           
  7949                           ;MOTEapp.c: 728: oled_putString(&responseData[0],6,2);
  7950  000A28  0EA8               	movlw	low _responseData
  7951  000A2A  0100               	movlb	0	; () banked
  7952  000A2C  6FC0               	movwf	oled_putString@string& (0+255),b
  7953  000A2E  0E01               	movlw	high _responseData
  7954  000A30  0100               	movlb	0	; () banked
  7955  000A32  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7956  000A34  0E06               	movlw	6
  7957  000A36  0100               	movlb	0	; () banked
  7958  000A38  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7959  000A3A  0E02               	movlw	2
  7960  000A3C  0100               	movlb	0	; () banked
  7961  000A3E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7962  000A40  EC6C  F028         	call	_oled_putString	;wreg free
  7963                           
  7964                           ;MOTEapp.c: 730: oled_putString(&responseData[10],0,3);
  7965  000A44  0EB2               	movlw	low (_responseData+10)
  7966  000A46  0100               	movlb	0	; () banked
  7967  000A48  6FC0               	movwf	oled_putString@string& (0+255),b
  7968  000A4A  0E01               	movlw	high (_responseData+10)
  7969  000A4C  0100               	movlb	0	; () banked
  7970  000A4E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  7971  000A50  0E00               	movlw	0
  7972  000A52  0100               	movlb	0	; () banked
  7973  000A54  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  7974  000A56  0E03               	movlw	3
  7975  000A58  0100               	movlb	0	; () banked
  7976  000A5A  6FC3               	movwf	oled_putString@start_page& (0+255),b
  7977  000A5C  EC6C  F028         	call	_oled_putString	;wreg free
  7978                           
  7979                           ;MOTEapp.c: 732: runningState = runningDownlinkDisplay;
  7980  000A60  0E0B               	movlw	11
  7981  000A62  0100               	movlb	0	; () banked
  7982  000A64  6FA5               	movwf	_runningState& (0+255),b
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;MOTEapp.c: 733: }
  7986                           ;MOTEapp.c: 734: break;
  7987                           
  7988                           ; BSR set to: 0
  7989  000A66  0012               	return	
  7990  000A68                     l13028:
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;MOTEapp.c: 736: if ( (changeStates) || (selectButton) )
  7994  000A68  0100               	movlb	0	; () banked
  7995  000A6A  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7996  000A6C  0100               	movlb	0	; () banked
  7997  000A6E  A4D8               	btfss	status,2,c
  7998  000A70  D005               	goto	l13032
  7999                           
  8000                           ; BSR set to: 0
  8001  000A72  0100               	movlb	0	; () banked
  8002  000A74  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8003  000A76  0100               	movlb	0	; () banked
  8004  000A78  B4D8               	btfsc	status,2,c
  8005  000A7A  0012               	return	
  8006  000A7C                     l13032:
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;MOTEapp.c: 737: {
  8010                           ;MOTEapp.c: 738: oled_clear();
  8011  000A7C  EC3B  F02F         	call	_oled_clear	;wreg free
  8012                           
  8013                           ;MOTEapp.c: 739: oled_putString(" View Downlink  ",0,0);
  8014  000A80  0E1A               	movlw	low STR_78
  8015  000A82  0100               	movlb	0	; () banked
  8016  000A84  6FC0               	movwf	oled_putString@string& (0+255),b
  8017  000A86  0E7B               	movlw	high STR_78
  8018  000A88  0100               	movlb	0	; () banked
  8019  000A8A  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8020  000A8C  0E00               	movlw	0
  8021  000A8E  0100               	movlb	0	; () banked
  8022  000A90  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8023  000A92  0E00               	movlw	0
  8024  000A94  0100               	movlb	0	; () banked
  8025  000A96  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8026  000A98  EC6C  F028         	call	_oled_putString	;wreg free
  8027                           
  8028                           ;MOTEapp.c: 740: oled_putString("  Last Message  ",0,1);
  8029  000A9C  0E09               	movlw	low STR_79
  8030  000A9E  0100               	movlb	0	; () banked
  8031  000AA0  6FC0               	movwf	oled_putString@string& (0+255),b
  8032  000AA2  0E7B               	movlw	high STR_79
  8033  000AA4  0100               	movlb	0	; () banked
  8034  000AA6  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8035  000AA8  0E00               	movlw	0
  8036  000AAA  0100               	movlb	0	; () banked
  8037  000AAC  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8038  000AAE  0E01               	movlw	1
  8039  000AB0  0100               	movlb	0	; () banked
  8040  000AB2  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8041  000AB4  EC6C  F028         	call	_oled_putString	;wreg free
  8042                           
  8043                           ;MOTEapp.c: 741: oled_putString("(NAV)    (SEL) ",0,3);
  8044  000AB8  0E8D               	movlw	low STR_77
  8045  000ABA  0100               	movlb	0	; () banked
  8046  000ABC  6FC0               	movwf	oled_putString@string& (0+255),b
  8047  000ABE  0E7C               	movlw	high STR_77
  8048  000AC0  0100               	movlb	0	; () banked
  8049  000AC2  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8050  000AC4  0E00               	movlw	0
  8051  000AC6  0100               	movlb	0	; () banked
  8052  000AC8  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8053  000ACA  0E03               	movlw	3
  8054  000ACC  0100               	movlb	0	; () banked
  8055  000ACE  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8056  000AD0  EC6C  F028         	call	_oled_putString	;wreg free
  8057                           
  8058                           ;MOTEapp.c: 742: runningState = runningDownlink;
  8059  000AD4  0E0A               	movlw	10
  8060  000AD6  0100               	movlb	0	; () banked
  8061  000AD8  6FA5               	movwf	_runningState& (0+255),b
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;MOTEapp.c: 743: }
  8065                           ;MOTEapp.c: 744: break;
  8066  000ADA  0012               	return	
  8067  000ADC                     l13042:
  8068                           
  8069                           ; BSR set to: 0
  8070                           ;MOTEapp.c: 746: if (changeStates)
  8071  000ADC  0100               	movlb	0	; () banked
  8072  000ADE  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8073  000AE0  0100               	movlb	0	; () banked
  8074  000AE2  B4D8               	btfsc	status,2,c
  8075  000AE4  D043               	goto	l13056
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;MOTEapp.c: 747: {
  8079                           ;MOTEapp.c: 748: oled_clear();
  8080  000AE6  EC3B  F02F         	call	_oled_clear	;wreg free
  8081                           
  8082                           ;MOTEapp.c: 749: oled_putString("Menu Has Timeout",0,0);
  8083  000AEA  0E2A               	movlw	low STR_111
  8084  000AEC  0100               	movlb	0	; () banked
  8085  000AEE  6FC0               	movwf	oled_putString@string& (0+255),b
  8086  000AF0  0E7C               	movlw	high STR_111
  8087  000AF2  0100               	movlb	0	; () banked
  8088  000AF4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8089  000AF6  0E00               	movlw	0
  8090  000AF8  0100               	movlb	0	; () banked
  8091  000AFA  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8092  000AFC  0E00               	movlw	0
  8093  000AFE  0100               	movlb	0	; () banked
  8094  000B00  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8095  000B02  EC6C  F028         	call	_oled_putString	;wreg free
  8096                           
  8097                           ;MOTEapp.c: 750: if (menuTimeout)
  8098  000B06  0100               	movlb	0	; () banked
  8099  000B08  51FA               	movf	_menuTimeout& (0+255),w,b
  8100  000B0A  B4D8               	btfsc	status,2,c
  8101  000B0C  D00F               	goto	l13052
  8102                           
  8103                           ; BSR set to: 0
  8104                           ;MOTEapp.c: 751: oled_putString("    Enabled   ", 0,2);
  8105  000B0E  0EDD               	movlw	low STR_112
  8106  000B10  0100               	movlb	0	; () banked
  8107  000B12  6FC0               	movwf	oled_putString@string& (0+255),b
  8108  000B14  0E7C               	movlw	high STR_112
  8109  000B16  0100               	movlb	0	; () banked
  8110  000B18  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8111  000B1A  0E00               	movlw	0
  8112  000B1C  0100               	movlb	0	; () banked
  8113  000B1E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8114  000B20  0E02               	movlw	2
  8115  000B22  0100               	movlb	0	; () banked
  8116  000B24  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8117  000B26  EC6C  F028         	call	_oled_putString	;wreg free
  8118  000B2A  D00E               	goto	l517
  8119  000B2C                     l13052:
  8120                           
  8121                           ;MOTEapp.c: 752: else
  8122                           ;MOTEapp.c: 753: oled_putString("    Disabled  ", 0,2);
  8123  000B2C  0EEC               	movlw	low STR_113
  8124  000B2E  0100               	movlb	0	; () banked
  8125  000B30  6FC0               	movwf	oled_putString@string& (0+255),b
  8126  000B32  0E7C               	movlw	high STR_113
  8127  000B34  0100               	movlb	0	; () banked
  8128  000B36  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8129  000B38  0E00               	movlw	0
  8130  000B3A  0100               	movlb	0	; () banked
  8131  000B3C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8132  000B3E  0E02               	movlw	2
  8133  000B40  0100               	movlb	0	; () banked
  8134  000B42  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8135  000B44  EC6C  F028         	call	_oled_putString	;wreg free
  8136  000B48                     l517:
  8137                           
  8138                           ;MOTEapp.c: 754: oled_putString("(NAV)    (CNG) ",0,3);
  8139  000B48  0E7D               	movlw	low STR_114
  8140  000B4A  0100               	movlb	0	; () banked
  8141  000B4C  6FC0               	movwf	oled_putString@string& (0+255),b
  8142  000B4E  0E7C               	movlw	high STR_114
  8143  000B50  0100               	movlb	0	; () banked
  8144  000B52  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8145  000B54  0E00               	movlw	0
  8146  000B56  0100               	movlb	0	; () banked
  8147  000B58  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8148  000B5A  0E03               	movlw	3
  8149  000B5C  0100               	movlb	0	; () banked
  8150  000B5E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8151  000B60  EC6C  F028         	call	_oled_putString	;wreg free
  8152                           
  8153                           ;MOTEapp.c: 755: runningState = runningMenuTimeout;
  8154  000B64  0E0C               	movlw	12
  8155  000B66  0100               	movlb	0	; () banked
  8156  000B68  6FA5               	movwf	_runningState& (0+255),b
  8157                           
  8158                           ;MOTEapp.c: 756: }
  8159  000B6A  0012               	return	
  8160  000B6C                     l13056:
  8161                           
  8162                           ; BSR set to: 0
  8163                           ;MOTEapp.c: 757: else if (selectButton)
  8164  000B6C  0100               	movlb	0	; () banked
  8165  000B6E  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8166  000B70  0100               	movlb	0	; () banked
  8167  000B72  B4D8               	btfsc	status,2,c
  8168  000B74  0012               	return	
  8169                           
  8170                           ; BSR set to: 0
  8171                           ;MOTEapp.c: 758: {
  8172                           ;MOTEapp.c: 759: oled_clear();
  8173  000B76  EC3B  F02F         	call	_oled_clear	;wreg free
  8174                           
  8175                           ;MOTEapp.c: 760: oled_putString("  Sensor Data  ",0,0);
  8176  000B7A  0E6D               	movlw	low STR_102
  8177  000B7C  0100               	movlb	0	; () banked
  8178  000B7E  6FC0               	movwf	oled_putString@string& (0+255),b
  8179  000B80  0E7C               	movlw	high STR_102
  8180  000B82  0100               	movlb	0	; () banked
  8181  000B84  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8182  000B86  0E00               	movlw	0
  8183  000B88  0100               	movlb	0	; () banked
  8184  000B8A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8185  000B8C  0E00               	movlw	0
  8186  000B8E  0100               	movlb	0	; () banked
  8187  000B90  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8188  000B92  EC6C  F028         	call	_oled_putString	;wreg free
  8189                           
  8190                           ;MOTEapp.c: 761: oled_putString("Light:",0,1);
  8191  000B96  0E81               	movlw	low STR_116
  8192  000B98  0100               	movlb	0	; () banked
  8193  000B9A  6FC0               	movwf	oled_putString@string& (0+255),b
  8194  000B9C  0E7F               	movlw	high STR_116
  8195  000B9E  0100               	movlb	0	; () banked
  8196  000BA0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8197  000BA2  0E00               	movlw	0
  8198  000BA4  0100               	movlb	0	; () banked
  8199  000BA6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8200  000BA8  0E01               	movlw	1
  8201  000BAA  0100               	movlb	0	; () banked
  8202  000BAC  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8203  000BAE  EC6C  F028         	call	_oled_putString	;wreg free
  8204                           
  8205                           ;MOTEapp.c: 762: oled_putString("Temp :",0,2);
  8206  000BB2  0E7A               	movlw	low STR_117
  8207  000BB4  0100               	movlb	0	; () banked
  8208  000BB6  6FC0               	movwf	oled_putString@string& (0+255),b
  8209  000BB8  0E7F               	movlw	high STR_117
  8210  000BBA  0100               	movlb	0	; () banked
  8211  000BBC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8212  000BBE  0E00               	movlw	0
  8213  000BC0  0100               	movlb	0	; () banked
  8214  000BC2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8215  000BC4  0E02               	movlw	2
  8216  000BC6  0100               	movlb	0	; () banked
  8217  000BC8  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8218  000BCA  EC6C  F028         	call	_oled_putString	;wreg free
  8219                           
  8220                           ;MOTEapp.c: 763: oled_putString("C",10,2);
  8221  000BCE  0EFB               	movlw	low STR_118
  8222  000BD0  0100               	movlb	0	; () banked
  8223  000BD2  6FC0               	movwf	oled_putString@string& (0+255),b
  8224  000BD4  0E7F               	movlw	high STR_118
  8225  000BD6  0100               	movlb	0	; () banked
  8226  000BD8  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8227  000BDA  0E0A               	movlw	10
  8228  000BDC  0100               	movlb	0	; () banked
  8229  000BDE  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8230  000BE0  0E02               	movlw	2
  8231  000BE2  0100               	movlb	0	; () banked
  8232  000BE4  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8233  000BE6  EC6C  F028         	call	_oled_putString	;wreg free
  8234                           
  8235                           ;MOTEapp.c: 765: moteApp_setSensorsInput();
  8236  000BEA  EC4F  F026         	call	_moteApp_setSensorsInput	;wreg free
  8237                           
  8238                           ;MOTEapp.c: 766: runningState = runningSensorMenu;
  8239  000BEE  0E02               	movlw	2
  8240  000BF0  0100               	movlb	0	; () banked
  8241  000BF2  6FA5               	movwf	_runningState& (0+255),b
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;MOTEapp.c: 767: }
  8245                           ;MOTEapp.c: 768: break;
  8246                           
  8247                           ; BSR set to: 0
  8248  000BF4  0012               	return	
  8249  000BF6                     l13072:
  8250                           
  8251                           ; BSR set to: 0
  8252                           ;MOTEapp.c: 770: if (changeStates)
  8253  000BF6  0100               	movlb	0	; () banked
  8254  000BF8  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8255  000BFA  0100               	movlb	0	; () banked
  8256  000BFC  B4D8               	btfsc	status,2,c
  8257  000BFE  D0BD               	goto	l13104
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;MOTEapp.c: 771: {
  8261                           ;MOTEapp.c: 772: oled_clear();
  8262  000C00  EC3B  F02F         	call	_oled_clear	;wreg free
  8263                           
  8264                           ;MOTEapp.c: 773: oled_putString("Periodic Uplink ",0,0);
  8265  000C04  0E80               	movlw	low STR_119
  8266  000C06  0100               	movlb	0	; () banked
  8267  000C08  6FC0               	movwf	oled_putString@string& (0+255),b
  8268  000C0A  0E7B               	movlw	high STR_119
  8269  000C0C  0100               	movlb	0	; () banked
  8270  000C0E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8271  000C10  0E00               	movlw	0
  8272  000C12  0100               	movlb	0	; () banked
  8273  000C14  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8274  000C16  0E00               	movlw	0
  8275  000C18  0100               	movlb	0	; () banked
  8276  000C1A  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8277  000C1C  EC6C  F028         	call	_oled_putString	;wreg free
  8278                           
  8279                           ;MOTEapp.c: 774: oled_putString("Tx Event Timing ",0,1);
  8280  000C20  0E6F               	movlw	low STR_120
  8281  000C22  0100               	movlb	0	; () banked
  8282  000C24  6FC0               	movwf	oled_putString@string& (0+255),b
  8283  000C26  0E7B               	movlw	high STR_120
  8284  000C28  0100               	movlb	0	; () banked
  8285  000C2A  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8286  000C2C  0E00               	movlw	0
  8287  000C2E  0100               	movlb	0	; () banked
  8288  000C30  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8289  000C32  0E01               	movlw	1
  8290  000C34  0100               	movlb	0	; () banked
  8291  000C36  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8292  000C38  EC6C  F028         	call	_oled_putString	;wreg free
  8293                           
  8294                           ;MOTEapp.c: 775: oled_putString("Every:",0,2);
  8295  000C3C  0E88               	movlw	low STR_121
  8296  000C3E  0100               	movlb	0	; () banked
  8297  000C40  6FC0               	movwf	oled_putString@string& (0+255),b
  8298  000C42  0E7F               	movlw	high STR_121
  8299  000C44  0100               	movlb	0	; () banked
  8300  000C46  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8301  000C48  0E00               	movlw	0
  8302  000C4A  0100               	movlb	0	; () banked
  8303  000C4C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8304  000C4E  0E02               	movlw	2
  8305  000C50  0100               	movlb	0	; () banked
  8306  000C52  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8307  000C54  EC6C  F028         	call	_oled_putString	;wreg free
  8308                           
  8309                           ;MOTEapp.c: 776: oled_putString("Mins",12,2);
  8310  000C58  0EC3               	movlw	low STR_122
  8311  000C5A  0100               	movlb	0	; () banked
  8312  000C5C  6FC0               	movwf	oled_putString@string& (0+255),b
  8313  000C5E  0E7F               	movlw	high STR_122
  8314  000C60  0100               	movlb	0	; () banked
  8315  000C62  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8316  000C64  0E0C               	movlw	12
  8317  000C66  0100               	movlb	0	; () banked
  8318  000C68  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8319  000C6A  0E02               	movlw	2
  8320  000C6C  0100               	movlb	0	; () banked
  8321  000C6E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8322  000C70  EC6C  F028         	call	_oled_putString	;wreg free
  8323                           
  8324                           ;MOTEapp.c: 778: switch (periodicUpValue)
  8325  000C74  D05B               	goto	l13098
  8326                           
  8327                           ;MOTEapp.c: 779: {
  8328                           ;MOTEapp.c: 780: default:
  8329  000C76  D000               	goto	l13084
  8330  000C78                     l13084:
  8331                           
  8332                           ;MOTEapp.c: 782: oled_putString("5",7,2);
  8333  000C78  0EB7               	movlw	low (STR_169+11)
  8334  000C7A  0100               	movlb	0	; () banked
  8335  000C7C  6FC0               	movwf	oled_putString@string& (0+255),b
  8336  000C7E  0E7D               	movlw	high (STR_169+11)
  8337  000C80  0100               	movlb	0	; () banked
  8338  000C82  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8339  000C84  0E07               	movlw	7
  8340  000C86  0100               	movlb	0	; () banked
  8341  000C88  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8342  000C8A  0E02               	movlw	2
  8343  000C8C  0100               	movlb	0	; () banked
  8344  000C8E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8345  000C90  EC6C  F028         	call	_oled_putString	;wreg free
  8346                           
  8347                           ;MOTEapp.c: 783: break;
  8348  000C94  D060               	goto	l13100
  8349  000C96                     l13086:
  8350                           
  8351                           ;MOTEapp.c: 785: oled_putString("10",7,2);
  8352  000C96  0EE1               	movlw	low (STR_146+1)
  8353  000C98  0100               	movlb	0	; () banked
  8354  000C9A  6FC0               	movwf	oled_putString@string& (0+255),b
  8355  000C9C  0E7F               	movlw	high (STR_146+1)
  8356  000C9E  0100               	movlb	0	; () banked
  8357  000CA0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8358  000CA2  0E07               	movlw	7
  8359  000CA4  0100               	movlb	0	; () banked
  8360  000CA6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8361  000CA8  0E02               	movlw	2
  8362  000CAA  0100               	movlb	0	; () banked
  8363  000CAC  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8364  000CAE  EC6C  F028         	call	_oled_putString	;wreg free
  8365                           
  8366                           ;MOTEapp.c: 786: break;
  8367  000CB2  D051               	goto	l13100
  8368  000CB4                     l13088:
  8369                           
  8370                           ;MOTEapp.c: 788: oled_putString("15",7,2);
  8371  000CB4  0EED               	movlw	low (STR_147+1)
  8372  000CB6  0100               	movlb	0	; () banked
  8373  000CB8  6FC0               	movwf	oled_putString@string& (0+255),b
  8374  000CBA  0E7F               	movlw	high (STR_147+1)
  8375  000CBC  0100               	movlb	0	; () banked
  8376  000CBE  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8377  000CC0  0E07               	movlw	7
  8378  000CC2  0100               	movlb	0	; () banked
  8379  000CC4  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8380  000CC6  0E02               	movlw	2
  8381  000CC8  0100               	movlb	0	; () banked
  8382  000CCA  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8383  000CCC  EC6C  F028         	call	_oled_putString	;wreg free
  8384                           
  8385                           ;MOTEapp.c: 789: break;
  8386  000CD0  D042               	goto	l13100
  8387  000CD2                     l13090:
  8388                           
  8389                           ;MOTEapp.c: 791: oled_putString("30",7,2);
  8390  000CD2  0EE5               	movlw	low (STR_148+1)
  8391  000CD4  0100               	movlb	0	; () banked
  8392  000CD6  6FC0               	movwf	oled_putString@string& (0+255),b
  8393  000CD8  0E7F               	movlw	high (STR_148+1)
  8394  000CDA  0100               	movlb	0	; () banked
  8395  000CDC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8396  000CDE  0E07               	movlw	7
  8397  000CE0  0100               	movlb	0	; () banked
  8398  000CE2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8399  000CE4  0E02               	movlw	2
  8400  000CE6  0100               	movlb	0	; () banked
  8401  000CE8  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8402  000CEA  EC6C  F028         	call	_oled_putString	;wreg free
  8403                           
  8404                           ;MOTEapp.c: 792: break;
  8405  000CEE  D033               	goto	l13100
  8406  000CF0                     l13092:
  8407                           
  8408                           ;MOTEapp.c: 794: oled_putString("60",7,2);
  8409  000CF0  0EE9               	movlw	low (STR_149+1)
  8410  000CF2  0100               	movlb	0	; () banked
  8411  000CF4  6FC0               	movwf	oled_putString@string& (0+255),b
  8412  000CF6  0E7F               	movlw	high (STR_149+1)
  8413  000CF8  0100               	movlb	0	; () banked
  8414  000CFA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8415  000CFC  0E07               	movlw	7
  8416  000CFE  0100               	movlb	0	; () banked
  8417  000D00  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8418  000D02  0E02               	movlw	2
  8419  000D04  0100               	movlb	0	; () banked
  8420  000D06  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8421  000D08  EC6C  F028         	call	_oled_putString	;wreg free
  8422                           
  8423                           ;MOTEapp.c: 795: break;
  8424  000D0C  D024               	goto	l13100
  8425  000D0E                     l13094:
  8426                           
  8427                           ;MOTEapp.c: 797: oled_putString("OFF",7,2);
  8428  000D0E  0EF0               	movlw	low STR_128
  8429  000D10  0100               	movlb	0	; () banked
  8430  000D12  6FC0               	movwf	oled_putString@string& (0+255),b
  8431  000D14  0E7F               	movlw	high STR_128
  8432  000D16  0100               	movlb	0	; () banked
  8433  000D18  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8434  000D1A  0E07               	movlw	7
  8435  000D1C  0100               	movlb	0	; () banked
  8436  000D1E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8437  000D20  0E02               	movlw	2
  8438  000D22  0100               	movlb	0	; () banked
  8439  000D24  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8440  000D26  EC6C  F028         	call	_oled_putString	;wreg free
  8441                           
  8442                           ;MOTEapp.c: 799: }
  8443                           
  8444                           ;MOTEapp.c: 798: break;
  8445  000D2A  D015               	goto	l13100
  8446  000D2C                     l13098:
  8447  000D2C  0100               	movlb	0	; () banked
  8448  000D2E  51FE               	movf	_periodicUpValue& (0+255),w,b
  8449                           
  8450                           ; Switch size 1, requested type "space"
  8451                           ; Number of cases is 6, Range of values is 0 to 5
  8452                           ; switch strategies available:
  8453                           ; Name         Instructions Cycles
  8454                           ; simple_byte           19    10 (average)
  8455                           ;	Chosen strategy is simple_byte
  8456  000D30  0A00               	xorlw	0	; case 0
  8457  000D32  B4D8               	btfsc	status,2,c
  8458  000D34  D7A1               	goto	l13084
  8459  000D36  0A01               	xorlw	1	; case 1
  8460  000D38  B4D8               	btfsc	status,2,c
  8461  000D3A  D7AD               	goto	l13086
  8462  000D3C  0A03               	xorlw	3	; case 2
  8463  000D3E  B4D8               	btfsc	status,2,c
  8464  000D40  D7B9               	goto	l13088
  8465  000D42  0A01               	xorlw	1	; case 3
  8466  000D44  B4D8               	btfsc	status,2,c
  8467  000D46  D7C5               	goto	l13090
  8468  000D48  0A07               	xorlw	7	; case 4
  8469  000D4A  B4D8               	btfsc	status,2,c
  8470  000D4C  D7D1               	goto	l13092
  8471  000D4E  0A01               	xorlw	1	; case 5
  8472  000D50  B4D8               	btfsc	status,2,c
  8473  000D52  D7DD               	goto	l13094
  8474  000D54  D791               	goto	l13084
  8475  000D56                     l13100:
  8476                           
  8477                           ;MOTEapp.c: 800: oled_putString("(NAV)    (CNG) ",0,3);
  8478  000D56  0E7D               	movlw	low STR_114
  8479  000D58  0100               	movlb	0	; () banked
  8480  000D5A  6FC0               	movwf	oled_putString@string& (0+255),b
  8481  000D5C  0E7C               	movlw	high STR_114
  8482  000D5E  0100               	movlb	0	; () banked
  8483  000D60  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8484  000D62  0E00               	movlw	0
  8485  000D64  0100               	movlb	0	; () banked
  8486  000D66  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8487  000D68  0E03               	movlw	3
  8488  000D6A  0100               	movlb	0	; () banked
  8489  000D6C  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8490  000D6E  EC6C  F028         	call	_oled_putString	;wreg free
  8491                           
  8492                           ;MOTEapp.c: 801: runningState = runningPeriodicWakeUpLength;
  8493  000D72  0E0D               	movlw	13
  8494  000D74  0100               	movlb	0	; () banked
  8495  000D76  6FA5               	movwf	_runningState& (0+255),b
  8496                           
  8497                           ;MOTEapp.c: 802: }
  8498  000D78  0012               	return	
  8499  000D7A                     l13104:
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;MOTEapp.c: 803: else if (selectButton)
  8503  000D7A  0100               	movlb	0	; () banked
  8504  000D7C  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8505  000D7E  0100               	movlb	0	; () banked
  8506  000D80  B4D8               	btfsc	status,2,c
  8507  000D82  0012               	return	
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;MOTEapp.c: 804: {
  8511                           ;MOTEapp.c: 805: if (menuTimeout)
  8512  000D84  0100               	movlb	0	; () banked
  8513  000D86  51FA               	movf	_menuTimeout& (0+255),w,b
  8514  000D88  B4D8               	btfsc	status,2,c
  8515  000D8A  D012               	goto	l13112
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;MOTEapp.c: 806: {
  8519                           ;MOTEapp.c: 807: menuTimeout = 0;
  8520  000D8C  0E00               	movlw	0
  8521  000D8E  0100               	movlb	0	; () banked
  8522  000D90  6FFA               	movwf	_menuTimeout& (0+255),b
  8523                           
  8524                           ; BSR set to: 0
  8525                           ;MOTEapp.c: 808: oled_putString("    Disabled  ", 0,2);
  8526  000D92  0EEC               	movlw	low STR_113
  8527  000D94  0100               	movlb	0	; () banked
  8528  000D96  6FC0               	movwf	oled_putString@string& (0+255),b
  8529  000D98  0E7C               	movlw	high STR_113
  8530  000D9A  0100               	movlb	0	; () banked
  8531  000D9C  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8532  000D9E  0E00               	movlw	0
  8533  000DA0  0100               	movlb	0	; () banked
  8534  000DA2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8535  000DA4  0E02               	movlw	2
  8536  000DA6  0100               	movlb	0	; () banked
  8537  000DA8  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8538  000DAA  EC6C  F028         	call	_oled_putString	;wreg free
  8539                           
  8540                           ;MOTEapp.c: 809: }
  8541  000DAE  0012               	return	
  8542  000DB0                     l13112:
  8543                           
  8544                           ;MOTEapp.c: 810: else
  8545                           ;MOTEapp.c: 811: {
  8546                           ;MOTEapp.c: 812: menuTimeout = 1;
  8547  000DB0  0E01               	movlw	1
  8548  000DB2  0100               	movlb	0	; () banked
  8549  000DB4  6FFA               	movwf	_menuTimeout& (0+255),b
  8550                           
  8551                           ; BSR set to: 0
  8552                           ;MOTEapp.c: 813: oled_putString("    Enabled   ", 0,2);
  8553  000DB6  0EDD               	movlw	low STR_112
  8554  000DB8  0100               	movlb	0	; () banked
  8555  000DBA  6FC0               	movwf	oled_putString@string& (0+255),b
  8556  000DBC  0E7C               	movlw	high STR_112
  8557  000DBE  0100               	movlb	0	; () banked
  8558  000DC0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8559  000DC2  0E00               	movlw	0
  8560  000DC4  0100               	movlb	0	; () banked
  8561  000DC6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8562  000DC8  0E02               	movlw	2
  8563  000DCA  0100               	movlb	0	; () banked
  8564  000DCC  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8565  000DCE  EC6C  F028         	call	_oled_putString	;wreg free
  8566                           
  8567                           ;MOTEapp.c: 814: }
  8568                           ;MOTEapp.c: 815: }
  8569                           ;MOTEapp.c: 816: break;
  8570  000DD2  0012               	return	
  8571  000DD4                     l13116:
  8572                           
  8573                           ;MOTEapp.c: 819: if ( (changeStates) || (selectButton) )
  8574  000DD4  0100               	movlb	0	; () banked
  8575  000DD6  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8576  000DD8  0100               	movlb	0	; () banked
  8577  000DDA  A4D8               	btfss	status,2,c
  8578  000DDC  D005               	goto	l13120
  8579                           
  8580                           ; BSR set to: 0
  8581  000DDE  0100               	movlb	0	; () banked
  8582  000DE0  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8583  000DE2  0100               	movlb	0	; () banked
  8584  000DE4  B4D8               	btfsc	status,2,c
  8585  000DE6  0012               	return	
  8586  000DE8                     l13120:
  8587                           
  8588                           ; BSR set to: 0
  8589                           ;MOTEapp.c: 820: {
  8590                           ;MOTEapp.c: 821: oled_clear();
  8591  000DE8  EC3B  F02F         	call	_oled_clear	;wreg free
  8592                           
  8593                           ;MOTEapp.c: 822: oled_putString("  Sensor Data  ",0,0);
  8594  000DEC  0E6D               	movlw	low STR_102
  8595  000DEE  0100               	movlb	0	; () banked
  8596  000DF0  6FC0               	movwf	oled_putString@string& (0+255),b
  8597  000DF2  0E7C               	movlw	high STR_102
  8598  000DF4  0100               	movlb	0	; () banked
  8599  000DF6  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8600  000DF8  0E00               	movlw	0
  8601  000DFA  0100               	movlb	0	; () banked
  8602  000DFC  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8603  000DFE  0E00               	movlw	0
  8604  000E00  0100               	movlb	0	; () banked
  8605  000E02  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8606  000E04  EC6C  F028         	call	_oled_putString	;wreg free
  8607                           
  8608                           ;MOTEapp.c: 823: oled_putString("    Display    ",0,1);
  8609  000E08  0E5D               	movlw	low STR_103
  8610  000E0A  0100               	movlb	0	; () banked
  8611  000E0C  6FC0               	movwf	oled_putString@string& (0+255),b
  8612  000E0E  0E7C               	movlw	high STR_103
  8613  000E10  0100               	movlb	0	; () banked
  8614  000E12  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8615  000E14  0E00               	movlw	0
  8616  000E16  0100               	movlb	0	; () banked
  8617  000E18  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8618  000E1A  0E01               	movlw	1
  8619  000E1C  0100               	movlb	0	; () banked
  8620  000E1E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8621  000E20  EC6C  F028         	call	_oled_putString	;wreg free
  8622                           
  8623                           ;MOTEapp.c: 824: oled_putString("(NAV)    (SEL) ",0,3);
  8624  000E24  0E8D               	movlw	low STR_77
  8625  000E26  0100               	movlb	0	; () banked
  8626  000E28  6FC0               	movwf	oled_putString@string& (0+255),b
  8627  000E2A  0E7C               	movlw	high STR_77
  8628  000E2C  0100               	movlb	0	; () banked
  8629  000E2E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8630  000E30  0E00               	movlw	0
  8631  000E32  0100               	movlb	0	; () banked
  8632  000E34  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8633  000E36  0E03               	movlw	3
  8634  000E38  0100               	movlb	0	; () banked
  8635  000E3A  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8636  000E3C  EC6C  F028         	call	_oled_putString	;wreg free
  8637                           
  8638                           ;MOTEapp.c: 825: runningState = runningSensor;
  8639  000E40  0E01               	movlw	1
  8640  000E42  0100               	movlb	0	; () banked
  8641  000E44  6FA5               	movwf	_runningState& (0+255),b
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;MOTEapp.c: 826: }
  8645                           ;MOTEapp.c: 827: break;
  8646  000E46  0012               	return	
  8647  000E48                     l13130:
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;MOTEapp.c: 829: if (changeStates)
  8651  000E48  0100               	movlb	0	; () banked
  8652  000E4A  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8653  000E4C  0100               	movlb	0	; () banked
  8654  000E4E  B4D8               	btfsc	status,2,c
  8655  000E50  D0B3               	goto	l13160
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;MOTEapp.c: 830: {
  8659                           ;MOTEapp.c: 831: oled_clear();
  8660  000E52  EC3B  F02F         	call	_oled_clear	;wreg free
  8661                           
  8662                           ;MOTEapp.c: 832: oled_putString("Select Data Rate",0,0);
  8663  000E56  0EF7               	movlw	low STR_135
  8664  000E58  0100               	movlb	0	; () banked
  8665  000E5A  6FC0               	movwf	oled_putString@string& (0+255),b
  8666  000E5C  0E7B               	movlw	high STR_135
  8667  000E5E  0100               	movlb	0	; () banked
  8668  000E60  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8669  000E62  0E00               	movlw	0
  8670  000E64  0100               	movlb	0	; () banked
  8671  000E66  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8672  000E68  0E00               	movlw	0
  8673  000E6A  0100               	movlb	0	; () banked
  8674  000E6C  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8675  000E6E  EC6C  F028         	call	_oled_putString	;wreg free
  8676                           
  8677                           ;MOTEapp.c: 833: oled_putString("Data Rate: ",0,2);
  8678  000E72  0E44               	movlw	low STR_136
  8679  000E74  0100               	movlb	0	; () banked
  8680  000E76  6FC0               	movwf	oled_putString@string& (0+255),b
  8681  000E78  0E7E               	movlw	high STR_136
  8682  000E7A  0100               	movlb	0	; () banked
  8683  000E7C  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8684  000E7E  0E00               	movlw	0
  8685  000E80  0100               	movlb	0	; () banked
  8686  000E82  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8687  000E84  0E02               	movlw	2
  8688  000E86  0100               	movlb	0	; () banked
  8689  000E88  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8690  000E8A  EC6C  F028         	call	_oled_putString	;wreg free
  8691                           
  8692                           ;MOTEapp.c: 834: oled_putString("(NAV)    (CNG) ",0,3);
  8693  000E8E  0E7D               	movlw	low STR_114
  8694  000E90  0100               	movlb	0	; () banked
  8695  000E92  6FC0               	movwf	oled_putString@string& (0+255),b
  8696  000E94  0E7C               	movlw	high STR_114
  8697  000E96  0100               	movlb	0	; () banked
  8698  000E98  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8699  000E9A  0E00               	movlw	0
  8700  000E9C  0100               	movlb	0	; () banked
  8701  000E9E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8702  000EA0  0E03               	movlw	3
  8703  000EA2  0100               	movlb	0	; () banked
  8704  000EA4  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8705  000EA6  EC6C  F028         	call	_oled_putString	;wreg free
  8706                           
  8707                           ;MOTEapp.c: 835: runningState = runningDataRateDisplay;
  8708  000EAA  0E03               	movlw	3
  8709  000EAC  0100               	movlb	0	; () banked
  8710  000EAE  6FA5               	movwf	_runningState& (0+255),b
  8711                           
  8712                           ;MOTEapp.c: 838: switch (dataRateValue)
  8713  000EB0  D06A               	goto	l13158
  8714                           
  8715                           ; BSR set to: 0
  8716                           
  8717                           ;MOTEapp.c: 839: {
  8718                           ;MOTEapp.c: 840: default:
  8719  000EB2  D000               	goto	l13142
  8720  000EB4                     l13142:
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;MOTEapp.c: 842: oled_putString(" 0 ",10,2);
  8724  000EB4  0EC8               	movlw	low STR_138
  8725  000EB6  0100               	movlb	0	; () banked
  8726  000EB8  6FC0               	movwf	oled_putString@string& (0+255),b
  8727  000EBA  0E7F               	movlw	high STR_138
  8728  000EBC  0100               	movlb	0	; () banked
  8729  000EBE  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8730  000EC0  0E0A               	movlw	10
  8731  000EC2  0100               	movlb	0	; () banked
  8732  000EC4  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8733  000EC6  0E02               	movlw	2
  8734  000EC8  0100               	movlb	0	; () banked
  8735  000ECA  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8736  000ECC  EC6C  F028         	call	_oled_putString	;wreg free
  8737                           
  8738                           ;MOTEapp.c: 843: break;
  8739  000ED0  D073               	goto	l13160
  8740  000ED2                     l13144:
  8741                           
  8742                           ;MOTEapp.c: 845: oled_putString(" 1 ",10,2);
  8743  000ED2  0ECC               	movlw	low STR_139
  8744  000ED4  0100               	movlb	0	; () banked
  8745  000ED6  6FC0               	movwf	oled_putString@string& (0+255),b
  8746  000ED8  0E7F               	movlw	high STR_139
  8747  000EDA  0100               	movlb	0	; () banked
  8748  000EDC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8749  000EDE  0E0A               	movlw	10
  8750  000EE0  0100               	movlb	0	; () banked
  8751  000EE2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8752  000EE4  0E02               	movlw	2
  8753  000EE6  0100               	movlb	0	; () banked
  8754  000EE8  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8755  000EEA  EC6C  F028         	call	_oled_putString	;wreg free
  8756                           
  8757                           ;MOTEapp.c: 846: break;
  8758  000EEE  D064               	goto	l13160
  8759  000EF0                     l13146:
  8760                           
  8761                           ;MOTEapp.c: 848: oled_putString(" 2 ",10,2);
  8762  000EF0  0ED0               	movlw	low STR_140
  8763  000EF2  0100               	movlb	0	; () banked
  8764  000EF4  6FC0               	movwf	oled_putString@string& (0+255),b
  8765  000EF6  0E7F               	movlw	high STR_140
  8766  000EF8  0100               	movlb	0	; () banked
  8767  000EFA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8768  000EFC  0E0A               	movlw	10
  8769  000EFE  0100               	movlb	0	; () banked
  8770  000F00  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8771  000F02  0E02               	movlw	2
  8772  000F04  0100               	movlb	0	; () banked
  8773  000F06  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8774  000F08  EC6C  F028         	call	_oled_putString	;wreg free
  8775                           
  8776                           ;MOTEapp.c: 849: break;
  8777  000F0C  D055               	goto	l13160
  8778  000F0E                     l13148:
  8779                           
  8780                           ;MOTEapp.c: 851: oled_putString(" 3 ",10,2);
  8781  000F0E  0ED4               	movlw	low STR_141
  8782  000F10  0100               	movlb	0	; () banked
  8783  000F12  6FC0               	movwf	oled_putString@string& (0+255),b
  8784  000F14  0E7F               	movlw	high STR_141
  8785  000F16  0100               	movlb	0	; () banked
  8786  000F18  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8787  000F1A  0E0A               	movlw	10
  8788  000F1C  0100               	movlb	0	; () banked
  8789  000F1E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8790  000F20  0E02               	movlw	2
  8791  000F22  0100               	movlb	0	; () banked
  8792  000F24  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8793  000F26  EC6C  F028         	call	_oled_putString	;wreg free
  8794                           
  8795                           ;MOTEapp.c: 852: break;
  8796  000F2A  D046               	goto	l13160
  8797  000F2C                     l13150:
  8798                           
  8799                           ;MOTEapp.c: 854: oled_putString(" 4 ",10,2);
  8800  000F2C  0ED8               	movlw	low STR_142
  8801  000F2E  0100               	movlb	0	; () banked
  8802  000F30  6FC0               	movwf	oled_putString@string& (0+255),b
  8803  000F32  0E7F               	movlw	high STR_142
  8804  000F34  0100               	movlb	0	; () banked
  8805  000F36  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8806  000F38  0E0A               	movlw	10
  8807  000F3A  0100               	movlb	0	; () banked
  8808  000F3C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8809  000F3E  0E02               	movlw	2
  8810  000F40  0100               	movlb	0	; () banked
  8811  000F42  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8812  000F44  EC6C  F028         	call	_oled_putString	;wreg free
  8813                           
  8814                           ;MOTEapp.c: 855: break;
  8815  000F48  D037               	goto	l13160
  8816  000F4A                     l13152:
  8817                           
  8818                           ;MOTEapp.c: 857: oled_putString(" 5 ",10,2);
  8819  000F4A  0EDC               	movlw	low STR_143
  8820  000F4C  0100               	movlb	0	; () banked
  8821  000F4E  6FC0               	movwf	oled_putString@string& (0+255),b
  8822  000F50  0E7F               	movlw	high STR_143
  8823  000F52  0100               	movlb	0	; () banked
  8824  000F54  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8825  000F56  0E0A               	movlw	10
  8826  000F58  0100               	movlb	0	; () banked
  8827  000F5A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8828  000F5C  0E02               	movlw	2
  8829  000F5E  0100               	movlb	0	; () banked
  8830  000F60  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8831  000F62  EC6C  F028         	call	_oled_putString	;wreg free
  8832                           
  8833                           ;MOTEapp.c: 858: break;
  8834  000F66  D028               	goto	l13160
  8835  000F68                     l13154:
  8836                           
  8837                           ;MOTEapp.c: 860: oled_putString("ADR",10,2);
  8838  000F68  0EF4               	movlw	low STR_144
  8839  000F6A  0100               	movlb	0	; () banked
  8840  000F6C  6FC0               	movwf	oled_putString@string& (0+255),b
  8841  000F6E  0E7F               	movlw	high STR_144
  8842  000F70  0100               	movlb	0	; () banked
  8843  000F72  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8844  000F74  0E0A               	movlw	10
  8845  000F76  0100               	movlb	0	; () banked
  8846  000F78  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8847  000F7A  0E02               	movlw	2
  8848  000F7C  0100               	movlb	0	; () banked
  8849  000F7E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8850  000F80  EC6C  F028         	call	_oled_putString	;wreg free
  8851                           
  8852                           ;MOTEapp.c: 862: }
  8853                           
  8854                           ;MOTEapp.c: 861: break;
  8855  000F84  D019               	goto	l13160
  8856  000F86                     l13158:
  8857  000F86  0100               	movlb	0	; () banked
  8858  000F88  51F8               	movf	_dataRateValue& (0+255),w,b
  8859                           
  8860                           ; Switch size 1, requested type "space"
  8861                           ; Number of cases is 7, Range of values is 0 to 6
  8862                           ; switch strategies available:
  8863                           ; Name         Instructions Cycles
  8864                           ; simple_byte           22    12 (average)
  8865                           ;	Chosen strategy is simple_byte
  8866  000F8A  0A00               	xorlw	0	; case 0
  8867  000F8C  B4D8               	btfsc	status,2,c
  8868  000F8E  D792               	goto	l13142
  8869  000F90  0A01               	xorlw	1	; case 1
  8870  000F92  B4D8               	btfsc	status,2,c
  8871  000F94  D79E               	goto	l13144
  8872  000F96  0A03               	xorlw	3	; case 2
  8873  000F98  B4D8               	btfsc	status,2,c
  8874  000F9A  D7AA               	goto	l13146
  8875  000F9C  0A01               	xorlw	1	; case 3
  8876  000F9E  B4D8               	btfsc	status,2,c
  8877  000FA0  D7B6               	goto	l13148
  8878  000FA2  0A07               	xorlw	7	; case 4
  8879  000FA4  B4D8               	btfsc	status,2,c
  8880  000FA6  D7C2               	goto	l13150
  8881  000FA8  0A01               	xorlw	1	; case 5
  8882  000FAA  B4D8               	btfsc	status,2,c
  8883  000FAC  D7CE               	goto	l13152
  8884  000FAE  0A03               	xorlw	3	; case 6
  8885  000FB0  B4D8               	btfsc	status,2,c
  8886  000FB2  D7DA               	goto	l13154
  8887  000FB4  D77F               	goto	l13142
  8888                           
  8889                           ; BSR set to: 0
  8890  000FB6  D000               	goto	l13160
  8891  000FB8                     l13160:
  8892                           
  8893                           ;MOTEapp.c: 863: }
  8894                           ;MOTEapp.c: 864: if (selectButton)
  8895  000FB8  0100               	movlb	0	; () banked
  8896  000FBA  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8897  000FBC  0100               	movlb	0	; () banked
  8898  000FBE  B4D8               	btfsc	status,2,c
  8899  000FC0  0012               	return	
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;MOTEapp.c: 865: {
  8903                           ;MOTEapp.c: 866: if (periodicUpValue < 5)
  8904  000FC2  0E05               	movlw	5
  8905  000FC4  0100               	movlb	0	; () banked
  8906  000FC6  61FE               	cpfslt	_periodicUpValue& (0+255),b
  8907  000FC8  D003               	goto	l13166
  8908                           
  8909                           ; BSR set to: 0
  8910                           ;MOTEapp.c: 867: {
  8911                           ;MOTEapp.c: 868: periodicUpValue++;
  8912  000FCA  0100               	movlb	0	; () banked
  8913  000FCC  2BFE               	incf	_periodicUpValue& (0+255),f,b
  8914                           
  8915                           ;MOTEapp.c: 869: } else {
  8916  000FCE  D070               	goto	l13192
  8917  000FD0                     l13166:
  8918                           
  8919                           ; BSR set to: 0
  8920                           ;MOTEapp.c: 870: periodicUpValue = 0;
  8921  000FD0  0E00               	movlw	0
  8922  000FD2  0100               	movlb	0	; () banked
  8923  000FD4  6FFE               	movwf	_periodicUpValue& (0+255),b
  8924                           
  8925                           ; BSR set to: 0
  8926                           ;MOTEapp.c: 871: }
  8927                           ;MOTEapp.c: 873: switch (periodicUpValue)
  8928  000FD6  D06C               	goto	l13192
  8929                           
  8930                           ; BSR set to: 0
  8931                           
  8932                           ;MOTEapp.c: 874: {
  8933                           ;MOTEapp.c: 875: default:
  8934  000FD8  D000               	goto	l13168
  8935  000FDA                     l13168:
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;MOTEapp.c: 877: periodicTimerValue = 9;
  8939  000FDA  0E09               	movlw	9
  8940  000FDC  0100               	movlb	0	; () banked
  8941  000FDE  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;MOTEapp.c: 878: oled_putString(" 5 ",7,2);
  8945  000FE0  0EDC               	movlw	low STR_143
  8946  000FE2  0100               	movlb	0	; () banked
  8947  000FE4  6FC0               	movwf	oled_putString@string& (0+255),b
  8948  000FE6  0E7F               	movlw	high STR_143
  8949  000FE8  0100               	movlb	0	; () banked
  8950  000FEA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8951  000FEC  0E07               	movlw	7
  8952  000FEE  0100               	movlb	0	; () banked
  8953  000FF0  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8954  000FF2  0E02               	movlw	2
  8955  000FF4  0100               	movlb	0	; () banked
  8956  000FF6  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8957  000FF8  EC6C  F028         	call	_oled_putString	;wreg free
  8958                           
  8959                           ;MOTEapp.c: 879: break;
  8960  000FFC  0012               	return	
  8961  000FFE                     l13172:
  8962                           
  8963                           ;MOTEapp.c: 881: periodicTimerValue = 18;
  8964  000FFE  0E12               	movlw	18
  8965  001000  0100               	movlb	0	; () banked
  8966  001002  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;MOTEapp.c: 882: oled_putString(" 10",7,2);
  8970  001004  0EE0               	movlw	low STR_146
  8971  001006  0100               	movlb	0	; () banked
  8972  001008  6FC0               	movwf	oled_putString@string& (0+255),b
  8973  00100A  0E7F               	movlw	high STR_146
  8974  00100C  0100               	movlb	0	; () banked
  8975  00100E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  8976  001010  0E07               	movlw	7
  8977  001012  0100               	movlb	0	; () banked
  8978  001014  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  8979  001016  0E02               	movlw	2
  8980  001018  0100               	movlb	0	; () banked
  8981  00101A  6FC3               	movwf	oled_putString@start_page& (0+255),b
  8982  00101C  EC6C  F028         	call	_oled_putString	;wreg free
  8983                           
  8984                           ;MOTEapp.c: 883: break;
  8985  001020  0012               	return	
  8986  001022                     l13176:
  8987                           
  8988                           ;MOTEapp.c: 885: periodicTimerValue = 27;
  8989  001022  0E1B               	movlw	27
  8990  001024  0100               	movlb	0	; () banked
  8991  001026  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8992                           
  8993                           ; BSR set to: 0
  8994                           ;MOTEapp.c: 886: oled_putString(" 15",7,2);
  8995  001028  0EEC               	movlw	low STR_147
  8996  00102A  0100               	movlb	0	; () banked
  8997  00102C  6FC0               	movwf	oled_putString@string& (0+255),b
  8998  00102E  0E7F               	movlw	high STR_147
  8999  001030  0100               	movlb	0	; () banked
  9000  001032  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9001  001034  0E07               	movlw	7
  9002  001036  0100               	movlb	0	; () banked
  9003  001038  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9004  00103A  0E02               	movlw	2
  9005  00103C  0100               	movlb	0	; () banked
  9006  00103E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9007  001040  EC6C  F028         	call	_oled_putString	;wreg free
  9008                           
  9009                           ;MOTEapp.c: 887: break;
  9010  001044  0012               	return	
  9011  001046                     l13180:
  9012                           
  9013                           ;MOTEapp.c: 889: periodicTimerValue = 54;
  9014  001046  0E36               	movlw	54
  9015  001048  0100               	movlb	0	; () banked
  9016  00104A  6FFD               	movwf	_periodicTimerValue& (0+255),b
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;MOTEapp.c: 890: oled_putString(" 30",7,2);
  9020  00104C  0EE4               	movlw	low STR_148
  9021  00104E  0100               	movlb	0	; () banked
  9022  001050  6FC0               	movwf	oled_putString@string& (0+255),b
  9023  001052  0E7F               	movlw	high STR_148
  9024  001054  0100               	movlb	0	; () banked
  9025  001056  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9026  001058  0E07               	movlw	7
  9027  00105A  0100               	movlb	0	; () banked
  9028  00105C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9029  00105E  0E02               	movlw	2
  9030  001060  0100               	movlb	0	; () banked
  9031  001062  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9032  001064  EC6C  F028         	call	_oled_putString	;wreg free
  9033                           
  9034                           ;MOTEapp.c: 891: break;
  9035  001068  0012               	return	
  9036  00106A                     l13184:
  9037                           
  9038                           ;MOTEapp.c: 893: periodicTimerValue = 108;
  9039  00106A  0E6C               	movlw	108
  9040  00106C  0100               	movlb	0	; () banked
  9041  00106E  6FFD               	movwf	_periodicTimerValue& (0+255),b
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;MOTEapp.c: 894: oled_putString(" 60",7,2);
  9045  001070  0EE8               	movlw	low STR_149
  9046  001072  0100               	movlb	0	; () banked
  9047  001074  6FC0               	movwf	oled_putString@string& (0+255),b
  9048  001076  0E7F               	movlw	high STR_149
  9049  001078  0100               	movlb	0	; () banked
  9050  00107A  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9051  00107C  0E07               	movlw	7
  9052  00107E  0100               	movlb	0	; () banked
  9053  001080  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9054  001082  0E02               	movlw	2
  9055  001084  0100               	movlb	0	; () banked
  9056  001086  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9057  001088  EC6C  F028         	call	_oled_putString	;wreg free
  9058                           
  9059                           ;MOTEapp.c: 895: break;
  9060  00108C  0012               	return	
  9061  00108E                     l562:
  9062                           
  9063                           ; BSR set to: 0
  9064                           ;MOTEapp.c: 897: periodicTimerValue = 255;
  9065  00108E  0100               	movlb	0	; () banked
  9066  001090  69FD               	setf	_periodicTimerValue& (0+255),b
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;MOTEapp.c: 898: oled_putString("OFF",7,2);
  9070  001092  0EF0               	movlw	low STR_128
  9071  001094  0100               	movlb	0	; () banked
  9072  001096  6FC0               	movwf	oled_putString@string& (0+255),b
  9073  001098  0E7F               	movlw	high STR_128
  9074  00109A  0100               	movlb	0	; () banked
  9075  00109C  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9076  00109E  0E07               	movlw	7
  9077  0010A0  0100               	movlb	0	; () banked
  9078  0010A2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9079  0010A4  0E02               	movlw	2
  9080  0010A6  0100               	movlb	0	; () banked
  9081  0010A8  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9082  0010AA  EC6C  F028         	call	_oled_putString	;wreg free
  9083                           
  9084                           ;MOTEapp.c: 900: }
  9085                           
  9086                           ;MOTEapp.c: 899: break;
  9087  0010AE  0012               	return	
  9088  0010B0                     l13192:
  9089  0010B0  0100               	movlb	0	; () banked
  9090  0010B2  51FE               	movf	_periodicUpValue& (0+255),w,b
  9091                           
  9092                           ; Switch size 1, requested type "space"
  9093                           ; Number of cases is 6, Range of values is 0 to 5
  9094                           ; switch strategies available:
  9095                           ; Name         Instructions Cycles
  9096                           ; simple_byte           19    10 (average)
  9097                           ;	Chosen strategy is simple_byte
  9098  0010B4  0A00               	xorlw	0	; case 0
  9099  0010B6  B4D8               	btfsc	status,2,c
  9100  0010B8  D790               	goto	l13168
  9101  0010BA  0A01               	xorlw	1	; case 1
  9102  0010BC  B4D8               	btfsc	status,2,c
  9103  0010BE  D79F               	goto	l13172
  9104  0010C0  0A03               	xorlw	3	; case 2
  9105  0010C2  B4D8               	btfsc	status,2,c
  9106  0010C4  D7AE               	goto	l13176
  9107  0010C6  0A01               	xorlw	1	; case 3
  9108  0010C8  B4D8               	btfsc	status,2,c
  9109  0010CA  D7BD               	goto	l13180
  9110  0010CC  0A07               	xorlw	7	; case 4
  9111  0010CE  B4D8               	btfsc	status,2,c
  9112  0010D0  D7CC               	goto	l13184
  9113  0010D2  0A01               	xorlw	1	; case 5
  9114  0010D4  B4D8               	btfsc	status,2,c
  9115  0010D6  D7DB               	goto	l562
  9116  0010D8  D780               	goto	l13168
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;MOTEapp.c: 901: }
  9120                           ;MOTEapp.c: 902: break;
  9121                           
  9122                           ; BSR set to: 0
  9123  0010DA  0012               	return	
  9124  0010DC                     l13194:
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;MOTEapp.c: 904: if (changeStates)
  9128  0010DC  0100               	movlb	0	; () banked
  9129  0010DE  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9130  0010E0  0100               	movlb	0	; () banked
  9131  0010E2  B4D8               	btfsc	status,2,c
  9132  0010E4  D026               	goto	l13206
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;MOTEapp.c: 905: {
  9136                           ;MOTEapp.c: 907: MOTEapp_SetDataRateSetting(dataRateValue);
  9137  0010E6  0100               	movlb	0	; () banked
  9138  0010E8  51F8               	movf	_dataRateValue& (0+255),w,b
  9139  0010EA  EC38  F012         	call	_MOTEapp_SetDataRateSetting
  9140                           
  9141                           ;MOTEapp.c: 909: oled_clear();
  9142  0010EE  EC3B  F02F         	call	_oled_clear	;wreg free
  9143                           
  9144                           ;MOTEapp.c: 910: oled_putString("Enter Sleep Mode",0,0);
  9145  0010F2  0ED5               	movlw	low STR_151
  9146  0010F4  0100               	movlb	0	; () banked
  9147  0010F6  6FC0               	movwf	oled_putString@string& (0+255),b
  9148  0010F8  0E7B               	movlw	high STR_151
  9149  0010FA  0100               	movlb	0	; () banked
  9150  0010FC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9151  0010FE  0E00               	movlw	0
  9152  001100  0100               	movlb	0	; () banked
  9153  001102  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9154  001104  0E00               	movlw	0
  9155  001106  0100               	movlb	0	; () banked
  9156  001108  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9157  00110A  EC6C  F028         	call	_oled_putString	;wreg free
  9158                           
  9159                           ;MOTEapp.c: 911: oled_putString("(NAV)    (SLP) ",0,3);
  9160  00110E  0E9D               	movlw	low STR_152
  9161  001110  0100               	movlb	0	; () banked
  9162  001112  6FC0               	movwf	oled_putString@string& (0+255),b
  9163  001114  0E7C               	movlw	high STR_152
  9164  001116  0100               	movlb	0	; () banked
  9165  001118  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9166  00111A  0E00               	movlw	0
  9167  00111C  0100               	movlb	0	; () banked
  9168  00111E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9169  001120  0E03               	movlw	3
  9170  001122  0100               	movlb	0	; () banked
  9171  001124  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9172  001126  EC6C  F028         	call	_oled_putString	;wreg free
  9173                           
  9174                           ;MOTEapp.c: 912: runningState = runningSleep;
  9175  00112A  0E0F               	movlw	15
  9176  00112C  0100               	movlb	0	; () banked
  9177  00112E  6FA5               	movwf	_runningState& (0+255),b
  9178  001130  D000               	goto	l13206
  9179  001132                     l13206:
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;MOTEapp.c: 913: }
  9183                           ;MOTEapp.c: 914: if (selectButton)
  9184  001132  0100               	movlb	0	; () banked
  9185  001134  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9186  001136  0100               	movlb	0	; () banked
  9187  001138  B4D8               	btfsc	status,2,c
  9188  00113A  0012               	return	
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;MOTEapp.c: 915: {
  9192                           ;MOTEapp.c: 916: if (dataRateValue < 6)
  9193  00113C  0E06               	movlw	6
  9194  00113E  0100               	movlb	0	; () banked
  9195  001140  61F8               	cpfslt	_dataRateValue& (0+255),b
  9196  001142  D00D               	goto	l13218
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;MOTEapp.c: 917: {
  9200                           ;MOTEapp.c: 918: if ((rnModule == rn2903) && (dataRateValue > 3))
  9201  001144  0100               	movlb	0	; () banked
  9202  001146  05A4               	decf	_rnModule& (0+255),w,b
  9203  001148  A4D8               	btfss	status,2,c
  9204  00114A  D006               	goto	l13216
  9205                           
  9206                           ; BSR set to: 0
  9207  00114C  0E03               	movlw	3
  9208  00114E  0100               	movlb	0	; () banked
  9209  001150  65F8               	cpfsgt	_dataRateValue& (0+255),b
  9210  001152  D002               	goto	l13216
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;MOTEapp.c: 919: dataRateValue = 6;
  9214  001154  0E06               	movlw	6
  9215  001156  D004               	goto	L5
  9216  001158                     l13216:
  9217                           
  9218                           ; BSR set to: 0
  9219                           ;MOTEapp.c: 920: else
  9220                           ;MOTEapp.c: 921: dataRateValue++;
  9221  001158  0100               	movlb	0	; () banked
  9222  00115A  2BF8               	incf	_dataRateValue& (0+255),f,b
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;MOTEapp.c: 922: }
  9226  00115C  D06E               	goto	l13236
  9227  00115E                     l13218:
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;MOTEapp.c: 923: else {
  9231                           ;MOTEapp.c: 924: dataRateValue = 0;
  9232  00115E  0E00               	movlw	0
  9233  001160                     L5:
  9234  001160  0100               	movlb	0	; () banked
  9235  001162  6FF8               	movwf	_dataRateValue& (0+255),b
  9236                           
  9237                           ; BSR set to: 0
  9238                           ;MOTEapp.c: 925: }
  9239                           ;MOTEapp.c: 927: switch (dataRateValue)
  9240  001164  D06A               	goto	l13236
  9241                           
  9242                           ; BSR set to: 0
  9243                           
  9244                           ;MOTEapp.c: 928: {
  9245                           ;MOTEapp.c: 929: default:
  9246  001166  D000               	goto	l13220
  9247  001168                     l13220:
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;MOTEapp.c: 931: oled_putString(" 0 ",10,2);
  9251  001168  0EC8               	movlw	low STR_138
  9252  00116A  0100               	movlb	0	; () banked
  9253  00116C  6FC0               	movwf	oled_putString@string& (0+255),b
  9254  00116E  0E7F               	movlw	high STR_138
  9255  001170  0100               	movlb	0	; () banked
  9256  001172  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9257  001174  0E0A               	movlw	10
  9258  001176  0100               	movlb	0	; () banked
  9259  001178  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9260  00117A  0E02               	movlw	2
  9261  00117C  0100               	movlb	0	; () banked
  9262  00117E  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9263  001180  EC6C  F028         	call	_oled_putString	;wreg free
  9264                           
  9265                           ;MOTEapp.c: 932: break;
  9266  001184  0012               	return	
  9267  001186                     l13222:
  9268                           
  9269                           ;MOTEapp.c: 934: oled_putString(" 1 ",10,2);
  9270  001186  0ECC               	movlw	low STR_139
  9271  001188  0100               	movlb	0	; () banked
  9272  00118A  6FC0               	movwf	oled_putString@string& (0+255),b
  9273  00118C  0E7F               	movlw	high STR_139
  9274  00118E  0100               	movlb	0	; () banked
  9275  001190  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9276  001192  0E0A               	movlw	10
  9277  001194  0100               	movlb	0	; () banked
  9278  001196  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9279  001198  0E02               	movlw	2
  9280  00119A  0100               	movlb	0	; () banked
  9281  00119C  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9282  00119E  EC6C  F028         	call	_oled_putString	;wreg free
  9283                           
  9284                           ;MOTEapp.c: 935: break;
  9285  0011A2  0012               	return	
  9286  0011A4                     l13224:
  9287                           
  9288                           ;MOTEapp.c: 937: oled_putString(" 2 ",10,2);
  9289  0011A4  0ED0               	movlw	low STR_140
  9290  0011A6  0100               	movlb	0	; () banked
  9291  0011A8  6FC0               	movwf	oled_putString@string& (0+255),b
  9292  0011AA  0E7F               	movlw	high STR_140
  9293  0011AC  0100               	movlb	0	; () banked
  9294  0011AE  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9295  0011B0  0E0A               	movlw	10
  9296  0011B2  0100               	movlb	0	; () banked
  9297  0011B4  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9298  0011B6  0E02               	movlw	2
  9299  0011B8  0100               	movlb	0	; () banked
  9300  0011BA  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9301  0011BC  EC6C  F028         	call	_oled_putString	;wreg free
  9302                           
  9303                           ;MOTEapp.c: 938: break;
  9304  0011C0  0012               	return	
  9305  0011C2                     l13226:
  9306                           
  9307                           ;MOTEapp.c: 940: oled_putString(" 3 ",10,2);
  9308  0011C2  0ED4               	movlw	low STR_141
  9309  0011C4  0100               	movlb	0	; () banked
  9310  0011C6  6FC0               	movwf	oled_putString@string& (0+255),b
  9311  0011C8  0E7F               	movlw	high STR_141
  9312  0011CA  0100               	movlb	0	; () banked
  9313  0011CC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9314  0011CE  0E0A               	movlw	10
  9315  0011D0  0100               	movlb	0	; () banked
  9316  0011D2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9317  0011D4  0E02               	movlw	2
  9318  0011D6  0100               	movlb	0	; () banked
  9319  0011D8  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9320  0011DA  EC6C  F028         	call	_oled_putString	;wreg free
  9321                           
  9322                           ;MOTEapp.c: 941: break;
  9323  0011DE  0012               	return	
  9324  0011E0                     l13228:
  9325                           
  9326                           ;MOTEapp.c: 943: oled_putString(" 4 ",10,2);
  9327  0011E0  0ED8               	movlw	low STR_142
  9328  0011E2  0100               	movlb	0	; () banked
  9329  0011E4  6FC0               	movwf	oled_putString@string& (0+255),b
  9330  0011E6  0E7F               	movlw	high STR_142
  9331  0011E8  0100               	movlb	0	; () banked
  9332  0011EA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9333  0011EC  0E0A               	movlw	10
  9334  0011EE  0100               	movlb	0	; () banked
  9335  0011F0  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9336  0011F2  0E02               	movlw	2
  9337  0011F4  0100               	movlb	0	; () banked
  9338  0011F6  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9339  0011F8  EC6C  F028         	call	_oled_putString	;wreg free
  9340                           
  9341                           ;MOTEapp.c: 944: break;
  9342  0011FC  0012               	return	
  9343  0011FE                     l13230:
  9344                           
  9345                           ;MOTEapp.c: 946: oled_putString(" 5 ",10,2);
  9346  0011FE  0EDC               	movlw	low STR_143
  9347  001200  0100               	movlb	0	; () banked
  9348  001202  6FC0               	movwf	oled_putString@string& (0+255),b
  9349  001204  0E7F               	movlw	high STR_143
  9350  001206  0100               	movlb	0	; () banked
  9351  001208  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9352  00120A  0E0A               	movlw	10
  9353  00120C  0100               	movlb	0	; () banked
  9354  00120E  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9355  001210  0E02               	movlw	2
  9356  001212  0100               	movlb	0	; () banked
  9357  001214  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9358  001216  EC6C  F028         	call	_oled_putString	;wreg free
  9359                           
  9360                           ;MOTEapp.c: 947: break;
  9361  00121A  0012               	return	
  9362  00121C                     l13232:
  9363                           
  9364                           ;MOTEapp.c: 949: oled_putString("ADR",10,2);
  9365  00121C  0EF4               	movlw	low STR_144
  9366  00121E  0100               	movlb	0	; () banked
  9367  001220  6FC0               	movwf	oled_putString@string& (0+255),b
  9368  001222  0E7F               	movlw	high STR_144
  9369  001224  0100               	movlb	0	; () banked
  9370  001226  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9371  001228  0E0A               	movlw	10
  9372  00122A  0100               	movlb	0	; () banked
  9373  00122C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9374  00122E  0E02               	movlw	2
  9375  001230  0100               	movlb	0	; () banked
  9376  001232  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9377  001234  EC6C  F028         	call	_oled_putString	;wreg free
  9378                           
  9379                           ;MOTEapp.c: 951: }
  9380                           
  9381                           ;MOTEapp.c: 950: break;
  9382  001238  0012               	return	
  9383  00123A                     l13236:
  9384  00123A  0100               	movlb	0	; () banked
  9385  00123C  51F8               	movf	_dataRateValue& (0+255),w,b
  9386                           
  9387                           ; Switch size 1, requested type "space"
  9388                           ; Number of cases is 7, Range of values is 0 to 6
  9389                           ; switch strategies available:
  9390                           ; Name         Instructions Cycles
  9391                           ; simple_byte           22    12 (average)
  9392                           ;	Chosen strategy is simple_byte
  9393  00123E  0A00               	xorlw	0	; case 0
  9394  001240  B4D8               	btfsc	status,2,c
  9395  001242  D792               	goto	l13220
  9396  001244  0A01               	xorlw	1	; case 1
  9397  001246  B4D8               	btfsc	status,2,c
  9398  001248  D79E               	goto	l13222
  9399  00124A  0A03               	xorlw	3	; case 2
  9400  00124C  B4D8               	btfsc	status,2,c
  9401  00124E  D7AA               	goto	l13224
  9402  001250  0A01               	xorlw	1	; case 3
  9403  001252  B4D8               	btfsc	status,2,c
  9404  001254  D7B6               	goto	l13226
  9405  001256  0A07               	xorlw	7	; case 4
  9406  001258  B4D8               	btfsc	status,2,c
  9407  00125A  D7C2               	goto	l13228
  9408  00125C  0A01               	xorlw	1	; case 5
  9409  00125E  B4D8               	btfsc	status,2,c
  9410  001260  D7CE               	goto	l13230
  9411  001262  0A03               	xorlw	3	; case 6
  9412  001264  B4D8               	btfsc	status,2,c
  9413  001266  D7DA               	goto	l13232
  9414  001268  D77F               	goto	l13220
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;MOTEapp.c: 952: }
  9418                           ;MOTEapp.c: 953: break;
  9419                           
  9420                           ; BSR set to: 0
  9421  00126A  0012               	return	
  9422  00126C                     l13238:
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;MOTEapp.c: 955: if (selectButton)
  9426  00126C  0100               	movlb	0	; () banked
  9427  00126E  51E9               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9428  001270  0100               	movlb	0	; () banked
  9429  001272  B4D8               	btfsc	status,2,c
  9430  001274  D00D               	goto	l581
  9431                           
  9432                           ; BSR set to: 0
  9433                           ;MOTEapp.c: 956: {
  9434                           ;MOTEapp.c: 957: if( moteApp_GoToSleep() )
  9435  001276  ECAC  F01B         	call	_moteApp_GoToSleep	;wreg free
  9436  00127A  0900               	iorlw	0
  9437  00127C  B4D8               	btfsc	status,2,c
  9438  00127E  D004               	goto	l13244
  9439                           
  9440                           ;MOTEapp.c: 958: {
  9441                           ;MOTEapp.c: 959: changeStates = 1;
  9442  001280  0E01               	movlw	1
  9443  001282  0100               	movlb	0	; () banked
  9444  001284  6FF2               	movwf	moteRunningProcess@changeStates& (0+255),b
  9445                           
  9446                           ;MOTEapp.c: 960: }
  9447  001286  D004               	goto	l581
  9448  001288                     l13244:
  9449                           
  9450                           ;MOTEapp.c: 961: else
  9451                           ;MOTEapp.c: 962: {
  9452                           ;MOTEapp.c: 963: secTicker = 10 - 1;
  9453  001288  0E09               	movlw	9
  9454  00128A  0100               	movlb	0	; () banked
  9455  00128C  6FA6               	movwf	_secTicker& (0+255),b
  9456  00128E  D000               	goto	l581
  9457  001290                     l581:
  9458                           
  9459                           ; BSR set to: 0
  9460                           ;MOTEapp.c: 964: }
  9461                           ;MOTEapp.c: 965: }
  9462                           ;MOTEapp.c: 966: if (changeStates)
  9463  001290  0100               	movlb	0	; () banked
  9464  001292  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9465  001294  0100               	movlb	0	; () banked
  9466  001296  B4D8               	btfsc	status,2,c
  9467  001298  0012               	return	
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;MOTEapp.c: 967: {
  9471                           ;MOTEapp.c: 968: oled_clear();
  9472  00129A  EC3B  F02F         	call	_oled_clear	;wreg free
  9473                           
  9474                           ;MOTEapp.c: 969: oled_putString("  Issue Uplink  ",0,0);
  9475  00129E  0E2B               	movlw	low STR_75
  9476  0012A0  0100               	movlb	0	; () banked
  9477  0012A2  6FC0               	movwf	oled_putString@string& (0+255),b
  9478  0012A4  0E7B               	movlw	high STR_75
  9479  0012A6  0100               	movlb	0	; () banked
  9480  0012A8  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9481  0012AA  0E00               	movlw	0
  9482  0012AC  0100               	movlb	0	; () banked
  9483  0012AE  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9484  0012B0  0E00               	movlw	0
  9485  0012B2  0100               	movlb	0	; () banked
  9486  0012B4  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9487  0012B6  EC6C  F028         	call	_oled_putString	;wreg free
  9488                           
  9489                           ;MOTEapp.c: 970: oled_putString(" LoRaWAN Packet ",0,1);
  9490  0012BA  0E91               	movlw	low STR_76
  9491  0012BC  0100               	movlb	0	; () banked
  9492  0012BE  6FC0               	movwf	oled_putString@string& (0+255),b
  9493  0012C0  0E7B               	movlw	high STR_76
  9494  0012C2  0100               	movlb	0	; () banked
  9495  0012C4  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9496  0012C6  0E00               	movlw	0
  9497  0012C8  0100               	movlb	0	; () banked
  9498  0012CA  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9499  0012CC  0E01               	movlw	1
  9500  0012CE  0100               	movlb	0	; () banked
  9501  0012D0  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9502  0012D2  EC6C  F028         	call	_oled_putString	;wreg free
  9503                           
  9504                           ;MOTEapp.c: 971: oled_putString("(NAV)    (SEL) ",0,3);
  9505  0012D6  0E8D               	movlw	low STR_77
  9506  0012D8  0100               	movlb	0	; () banked
  9507  0012DA  6FC0               	movwf	oled_putString@string& (0+255),b
  9508  0012DC  0E7C               	movlw	high STR_77
  9509  0012DE  0100               	movlb	0	; () banked
  9510  0012E0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
  9511  0012E2  0E00               	movlw	0
  9512  0012E4  0100               	movlb	0	; () banked
  9513  0012E6  6FC2               	movwf	oled_putString@station_dot& (0+255),b
  9514  0012E8  0E03               	movlw	3
  9515  0012EA  0100               	movlb	0	; () banked
  9516  0012EC  6FC3               	movwf	oled_putString@start_page& (0+255),b
  9517  0012EE  EC6C  F028         	call	_oled_putString	;wreg free
  9518                           
  9519                           ;MOTEapp.c: 972: runningState = runningUplink;
  9520  0012F2  0E06               	movlw	6
  9521  0012F4  0100               	movlb	0	; () banked
  9522  0012F6  6FA5               	movwf	_runningState& (0+255),b
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;MOTEapp.c: 975: }
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;MOTEapp.c: 973: }
  9529                           ;MOTEapp.c: 974: break;
  9530  0012F8  0012               	return	
  9531  0012FA                     l13258:
  9532                           
  9533                           ; BSR set to: 0
  9534  0012FA  0100               	movlb	0	; () banked
  9535  0012FC  51A5               	movf	_runningState& (0+255),w,b
  9536                           
  9537                           ; Switch size 1, requested type "space"
  9538                           ; Number of cases is 12, Range of values is 0 to 15
  9539                           ; switch strategies available:
  9540                           ; Name         Instructions Cycles
  9541                           ; simple_byte           37    19 (average)
  9542                           ;	Chosen strategy is simple_byte
  9543  0012FE  0A00               	xorlw	0	; case 0
  9544  001300  B4D8               	btfsc	status,2,c
  9545  001302  EF71  F001         	goto	l12800
  9546  001306  0A01               	xorlw	1	; case 1
  9547  001308  B4D8               	btfsc	status,2,c
  9548  00130A  EF6E  F005         	goto	l13042
  9549  00130E  0A03               	xorlw	3	; case 2
  9550  001310  B4D8               	btfsc	status,2,c
  9551  001312  D560               	goto	l13116
  9552  001314  0A01               	xorlw	1	; case 3
  9553  001316  B4D8               	btfsc	status,2,c
  9554  001318  D6E1               	goto	l13194
  9555  00131A  0A05               	xorlw	5	; case 6
  9556  00131C  B4D8               	btfsc	status,2,c
  9557  00131E  EFAB  F001         	goto	l12814
  9558  001322  0A01               	xorlw	1	; case 7
  9559  001324  B4D8               	btfsc	status,2,c
  9560  001326  EF95  F002         	goto	l12886
  9561  00132A  0A0F               	xorlw	15	; case 8
  9562  00132C  B4D8               	btfsc	status,2,c
  9563  00132E  EF20  F003         	goto	l12916
  9564  001332  0A02               	xorlw	2	; case 10
  9565  001334  B4D8               	btfsc	status,2,c
  9566  001336  EF9F  F004         	goto	l12996
  9567  00133A  0A01               	xorlw	1	; case 11
  9568  00133C  B4D8               	btfsc	status,2,c
  9569  00133E  EF34  F005         	goto	l13028
  9570  001342  0A07               	xorlw	7	; case 12
  9571  001344  B4D8               	btfsc	status,2,c
  9572  001346  D457               	goto	l13072
  9573  001348  0A01               	xorlw	1	; case 13
  9574  00134A  B4D8               	btfsc	status,2,c
  9575  00134C  D57D               	goto	l13130
  9576  00134E  0A02               	xorlw	2	; case 15
  9577  001350  B4D8               	btfsc	status,2,c
  9578  001352  D78C               	goto	l13238
  9579  001354  EF6F  F001         	goto	l467
  9580                           
  9581                           ; BSR set to: 0
  9582                           ;MOTEapp.c: 976: return runningState;
  9583                           ;	Return value of _moteRunningProcess is never used
  9584  001358  0012               	return		;funcret
  9585  00135A                     __end_of_moteRunningProcess:
  9586                           	opt stack 0
  9587                           tblptru	equ	0xFF8
  9588                           tblptrh	equ	0xFF7
  9589                           tblptrl	equ	0xFF6
  9590                           tablat	equ	0xFF5
  9591                           prodh	equ	0xFF4
  9592                           prodl	equ	0xFF3
  9593                           intcon	equ	0xFF2
  9594                           postinc0	equ	0xFEE
  9595                           wreg	equ	0xFE8
  9596                           indf1	equ	0xFE7
  9597                           postdec1	equ	0xFE5
  9598                           fsr1h	equ	0xFE2
  9599                           fsr1l	equ	0xFE1
  9600                           indf2	equ	0xFDF
  9601                           fsr2h	equ	0xFDA
  9602                           fsr2l	equ	0xFD9
  9603                           status	equ	0xFD8
  9604                           
  9605 ;; *************** function _sendDataCommand *****************
  9606 ;; Defined at:
  9607 ;;		line 1122 in file "../Includes/Board/MOTEapp.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9610 ;;		 -> STR_85(12), STR_84(14), STR_74(14), 
  9611 ;;  appData         2    3[BANK0 ] PTR unsigned char 
  9612 ;;		 -> dataBuffer(16), 
  9613 ;;  dataLength      1    5[BANK0 ] unsigned char 
  9614 ;; Auto vars:     Size  Location     Type
  9615 ;;  byteCount       1    8[BANK0 ] unsigned char 
  9616 ;;  byteCount       1    7[BANK0 ] unsigned char 
  9617 ;; Return value:  Size  Location     Type
  9618 ;;		None               void
  9619 ;; Registers used:
  9620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9621 ;; Tracked objects:
  9622 ;;		On entry : 0/0
  9623 ;;		On exit  : 0/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9626 ;;      Params:         0       5       0       0       0       0       0       0       0
  9627 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9628 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9629 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9630 ;;Total ram usage:        8 bytes
  9631 ;; Hardware stack levels used:    1
  9632 ;; Hardware stack levels required when called:   13
  9633 ;; This function calls:
  9634 ;;		_EUSART_Write
  9635 ;;		_EndLine
  9636 ;;		_hexToStr
  9637 ;; This function is called by:
  9638 ;;		_moteRunningProcess
  9639 ;; This function uses a non-reentrant model
  9640 ;;
  9641                           
  9642                           	psect	text11
  9643  003DB2                     __ptext11:
  9644                           	opt stack 0
  9645  003DB2                     _sendDataCommand:
  9646                           	opt stack 15
  9647                           
  9648                           ;MOTEapp.c: 1125: while (*string)
  9649                           
  9650                           ;incstack = 0
  9651  003DB2  D00C               	goto	l11990
  9652  003DB4                     l11986:
  9653                           
  9654                           ;MOTEapp.c: 1126: {
  9655                           ;MOTEapp.c: 1127: EUSART_Write(*string++);
  9656  003DB4  C0B0  FFF6         	movff	sendDataCommand@string,tblptrl
  9657  003DB8  C0B1  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9658  003DBC                     	if	0	;tblptru may be non-zero
  9659  003DBC                     	endif
  9660  003DBC                     	if	0	;tblptru may be non-zero
  9661  003DBC                     	endif
  9662  003DBC  0008               	tblrd		*
  9663  003DBE  50F5               	movf	tablat,w,c
  9664  003DC0  EC37  F02C         	call	_EUSART_Write
  9665  003DC4  0100               	movlb	0	; () banked
  9666  003DC6  4BB0               	infsnz	sendDataCommand@string& (0+255),f,b
  9667  003DC8  2BB1               	incf	(sendDataCommand@string+1)& (0+255),f,b
  9668  003DCA  D000               	goto	l11990
  9669  003DCC                     l11990:
  9670  003DCC  C0B0  FFF6         	movff	sendDataCommand@string,tblptrl
  9671  003DD0  C0B1  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9672  003DD4                     	if	0	;tblptru may be non-zero
  9673  003DD4                     	endif
  9674  003DD4                     	if	0	;tblptru may be non-zero
  9675  003DD4                     	endif
  9676  003DD4  0008               	tblrd		*
  9677  003DD6  50F5               	movf	tablat,w,c
  9678  003DD8  0900               	iorlw	0
  9679  003DDA  A4D8               	btfss	status,2,c
  9680  003DDC  D7EB               	goto	l11986
  9681                           
  9682                           ;MOTEapp.c: 1128: }
  9683                           ;MOTEapp.c: 1130: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  9684  003DDE  0E00               	movlw	0
  9685  003DE0  0100               	movlb	0	; () banked
  9686  003DE2  6FB6               	movwf	sendDataCommand@byteCount& (0+255),b
  9687  003DE4                     l11994:
  9688                           
  9689                           ; BSR set to: 0
  9690  003DE4  0E02               	movlw	2
  9691  003DE6  0100               	movlb	0	; () banked
  9692  003DE8  65B6               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9693  003DEA  D001               	goto	l11998
  9694                           
  9695                           ; BSR set to: 0
  9696  003DEC  D011               	goto	l12004
  9697  003DEE                     l11998:
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;MOTEapp.c: 1131: {
  9701                           ;MOTEapp.c: 1132: EUSART_Write(appData[byteCount]);
  9702  003DEE  0100               	movlb	0	; () banked
  9703  003DF0  51B6               	movf	sendDataCommand@byteCount& (0+255),w,b
  9704  003DF2  0D01               	mullw	1
  9705  003DF4  50F3               	movf	prodl,w,c
  9706  003DF6  0100               	movlb	0	; () banked
  9707  003DF8  25B2               	addwf	sendDataCommand@appData& (0+255),w,b
  9708  003DFA  6ED9               	movwf	fsr2l,c
  9709  003DFC  50F4               	movf	prodh,w,c
  9710  003DFE  0100               	movlb	0	; () banked
  9711  003E00  21B3               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9712  003E02  6EDA               	movwf	fsr2h,c
  9713  003E04  50DF               	movf	indf2,w,c
  9714  003E06  EC37  F02C         	call	_EUSART_Write
  9715  003E0A  0100               	movlb	0	; () banked
  9716  003E0C  2BB6               	incf	sendDataCommand@byteCount& (0+255),f,b
  9717  003E0E  D7EA               	goto	l11994
  9718  003E10                     l12004:
  9719                           
  9720                           ; BSR set to: 0
  9721                           ;MOTEapp.c: 1133: }
  9722                           ;MOTEapp.c: 1135: EUSART_Write(appData[3]);
  9723  003E10  0100               	movlb	0	; () banked
  9724  003E12  EE20 F003          	lfsr	2,3
  9725  003E16  51B2               	movf	sendDataCommand@appData& (0+255),w,b
  9726  003E18  26D9               	addwf	fsr2l,f,c
  9727  003E1A  51B3               	movf	(sendDataCommand@appData+1)& (0+255),w,b
  9728  003E1C  22DA               	addwfc	fsr2h,f,c
  9729  003E1E  50DF               	movf	indf2,w,c
  9730  003E20  EC37  F02C         	call	_EUSART_Write
  9731                           
  9732                           ;MOTEapp.c: 1137: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  9733  003E24  0E04               	movlw	4
  9734  003E26  0100               	movlb	0	; () banked
  9735  003E28  6FB7               	movwf	sendDataCommand@byteCount_1823& (0+255),b
  9736  003E2A  D029               	goto	l12012
  9737  003E2C                     l12008:
  9738                           
  9739                           ; BSR set to: 0
  9740                           ;MOTEapp.c: 1138: {
  9741                           ;MOTEapp.c: 1139: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  9742  003E2C  0100               	movlb	0	; () banked
  9743  003E2E  51B7               	movf	sendDataCommand@byteCount_1823& (0+255),w,b
  9744  003E30  0D01               	mullw	1
  9745  003E32  50F3               	movf	prodl,w,c
  9746  003E34  0100               	movlb	0	; () banked
  9747  003E36  25B2               	addwf	sendDataCommand@appData& (0+255),w,b
  9748  003E38  6ED9               	movwf	fsr2l,c
  9749  003E3A  50F4               	movf	prodh,w,c
  9750  003E3C  0100               	movlb	0	; () banked
  9751  003E3E  21B3               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9752  003E40  6EDA               	movwf	fsr2h,c
  9753  003E42  50DF               	movf	indf2,w,c
  9754  003E44  0100               	movlb	0	; () banked
  9755  003E46  6FB5               	movwf	??_sendDataCommand& (0+255),b
  9756  003E48  0100               	movlb	0	; () banked
  9757  003E4A  39B5               	swapf	??_sendDataCommand& (0+255),w,b
  9758  003E4C  0B0F               	andlw	15
  9759  003E4E  ECFB  F02C         	call	_hexToStr
  9760  003E52  EC37  F02C         	call	_EUSART_Write
  9761                           
  9762                           ;MOTEapp.c: 1140: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  9763  003E56  0100               	movlb	0	; () banked
  9764  003E58  51B7               	movf	sendDataCommand@byteCount_1823& (0+255),w,b
  9765  003E5A  0D01               	mullw	1
  9766  003E5C  50F3               	movf	prodl,w,c
  9767  003E5E  0100               	movlb	0	; () banked
  9768  003E60  25B2               	addwf	sendDataCommand@appData& (0+255),w,b
  9769  003E62  6ED9               	movwf	fsr2l,c
  9770  003E64  50F4               	movf	prodh,w,c
  9771  003E66  0100               	movlb	0	; () banked
  9772  003E68  21B3               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9773  003E6A  6EDA               	movwf	fsr2h,c
  9774  003E6C  50DF               	movf	indf2,w,c
  9775  003E6E  0B0F               	andlw	15
  9776  003E70  ECFB  F02C         	call	_hexToStr
  9777  003E74  EC37  F02C         	call	_EUSART_Write
  9778  003E78  0100               	movlb	0	; () banked
  9779  003E7A  2BB7               	incf	sendDataCommand@byteCount_1823& (0+255),f,b
  9780  003E7C  D000               	goto	l12012
  9781  003E7E                     l12012:
  9782                           
  9783                           ; BSR set to: 0
  9784  003E7E  0100               	movlb	0	; () banked
  9785  003E80  51B4               	movf	sendDataCommand@dataLength& (0+255),w,b
  9786  003E82  0100               	movlb	0	; () banked
  9787  003E84  5DB7               	subwf	sendDataCommand@byteCount_1823& (0+255),w,b
  9788  003E86  A0D8               	btfss	status,0,c
  9789  003E88  D7D1               	goto	l12008
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;MOTEapp.c: 1141: }
  9793                           ;MOTEapp.c: 1142: EndLine();
  9794                           
  9795                           ; BSR set to: 0
  9796  003E8A  ECE9  F02F         	call	_EndLine	;wreg free
  9797  003E8E  0012               	return		;funcret
  9798  003E90                     __end_of_sendDataCommand:
  9799                           	opt stack 0
  9800                           tblptru	equ	0xFF8
  9801                           tblptrh	equ	0xFF7
  9802                           tblptrl	equ	0xFF6
  9803                           tablat	equ	0xFF5
  9804                           prodh	equ	0xFF4
  9805                           prodl	equ	0xFF3
  9806                           intcon	equ	0xFF2
  9807                           postinc0	equ	0xFEE
  9808                           wreg	equ	0xFE8
  9809                           indf1	equ	0xFE7
  9810                           postdec1	equ	0xFE5
  9811                           fsr1h	equ	0xFE2
  9812                           fsr1l	equ	0xFE1
  9813                           indf2	equ	0xFDF
  9814                           fsr2h	equ	0xFDA
  9815                           fsr2l	equ	0xFD9
  9816                           status	equ	0xFD8
  9817                           
  9818 ;; *************** function _hexToStr *****************
  9819 ;; Defined at:
  9820 ;;		line 1154 in file "../Includes/Board/MOTEapp.c"
  9821 ;; Parameters:    Size  Location     Type
  9822 ;;  character       1    wreg     unsigned char 
  9823 ;; Auto vars:     Size  Location     Type
  9824 ;;  character       1    0[BANK0 ] unsigned char 
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  1    wreg      unsigned char 
  9827 ;; Registers used:
  9828 ;;		wreg, status,2, status,0
  9829 ;; Tracked objects:
  9830 ;;		On entry : 0/0
  9831 ;;		On exit  : 0/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9834 ;;      Params:         0       0       0       0       0       0       0       0       0
  9835 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9836 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9837 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9838 ;;Total ram usage:        1 bytes
  9839 ;; Hardware stack levels used:    1
  9840 ;; Hardware stack levels required when called:   11
  9841 ;; This function calls:
  9842 ;;		Nothing
  9843 ;; This function is called by:
  9844 ;;		_sendDataCommand
  9845 ;; This function uses a non-reentrant model
  9846 ;;
  9847                           
  9848                           	psect	text12
  9849  0059F6                     __ptext12:
  9850                           	opt stack 0
  9851  0059F6                     _hexToStr:
  9852                           	opt stack 16
  9853                           
  9854                           ;incstack = 0
  9855                           ;hexToStr@character stored from wreg
  9856  0059F6  0100               	movlb	0	; () banked
  9857  0059F8  6FAF               	movwf	hexToStr@character& (0+255),b
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;MOTEapp.c: 1157: character = character & 0x0F;
  9861  0059FA  0100               	movlb	0	; () banked
  9862  0059FC  51AF               	movf	hexToStr@character& (0+255),w,b
  9863  0059FE  0B0F               	andlw	15
  9864  005A00  0100               	movlb	0	; () banked
  9865  005A02  6FAF               	movwf	hexToStr@character& (0+255),b
  9866                           
  9867                           ;MOTEapp.c: 1159: if (character < 0x0A)
  9868  005A04  0E0A               	movlw	10
  9869  005A06  0100               	movlb	0	; () banked
  9870  005A08  61AF               	cpfslt	hexToStr@character& (0+255),b
  9871  005A0A  D004               	goto	l11334
  9872                           
  9873                           ; BSR set to: 0
  9874                           ;MOTEapp.c: 1160: {
  9875                           ;MOTEapp.c: 1161: return character + '0';
  9876  005A0C  0100               	movlb	0	; () banked
  9877  005A0E  51AF               	movf	hexToStr@character& (0+255),w,b
  9878  005A10  0F30               	addlw	48
  9879                           
  9880                           ; BSR set to: 0
  9881                           ;MOTEapp.c: 1162: }
  9882                           
  9883                           ; BSR set to: 0
  9884  005A12  0012               	return	
  9885  005A14                     l11334:
  9886                           
  9887                           ; BSR set to: 0
  9888                           ;MOTEapp.c: 1163: else if ( (character >= 0x0A) && (character <= 0x0F) )
  9889  005A14  0E09               	movlw	9
  9890  005A16  0100               	movlb	0	; () banked
  9891  005A18  65AF               	cpfsgt	hexToStr@character& (0+255),b
  9892  005A1A  D008               	goto	l11344
  9893                           
  9894                           ; BSR set to: 0
  9895  005A1C  0E10               	movlw	16
  9896  005A1E  0100               	movlb	0	; () banked
  9897  005A20  61AF               	cpfslt	hexToStr@character& (0+255),b
  9898  005A22  D004               	goto	l11344
  9899                           
  9900                           ; BSR set to: 0
  9901                           ;MOTEapp.c: 1164: {
  9902                           ;MOTEapp.c: 1165: return character + '0' + 7;
  9903  005A24  0100               	movlb	0	; () banked
  9904  005A26  51AF               	movf	hexToStr@character& (0+255),w,b
  9905  005A28  0F37               	addlw	55
  9906                           
  9907                           ; BSR set to: 0
  9908                           ;MOTEapp.c: 1166: }
  9909                           
  9910                           ; BSR set to: 0
  9911  005A2A  0012               	return	
  9912  005A2C                     l11344:
  9913                           
  9914                           ; BSR set to: 0
  9915                           ;MOTEapp.c: 1167: else
  9916                           ;MOTEapp.c: 1168: {
  9917                           ;MOTEapp.c: 1169: return 0;
  9918  005A2C  0E00               	movlw	0
  9919                           
  9920                           ; BSR set to: 0
  9921                           
  9922                           ; BSR set to: 0
  9923  005A2E  0012               	return	
  9924                           
  9925                           ; BSR set to: 0
  9926                           
  9927                           ; BSR set to: 0
  9928  005A30  0012               	return		;funcret
  9929  005A32                     __end_of_hexToStr:
  9930                           	opt stack 0
  9931                           tblptru	equ	0xFF8
  9932                           tblptrh	equ	0xFF7
  9933                           tblptrl	equ	0xFF6
  9934                           tablat	equ	0xFF5
  9935                           prodh	equ	0xFF4
  9936                           prodl	equ	0xFF3
  9937                           intcon	equ	0xFF2
  9938                           postinc0	equ	0xFEE
  9939                           wreg	equ	0xFE8
  9940                           indf1	equ	0xFE7
  9941                           postdec1	equ	0xFE5
  9942                           fsr1h	equ	0xFE2
  9943                           fsr1l	equ	0xFE1
  9944                           indf2	equ	0xFDF
  9945                           fsr2h	equ	0xFDA
  9946                           fsr2l	equ	0xFD9
  9947                           status	equ	0xFD8
  9948                           
  9949 ;; *************** function _oled_putint8 *****************
  9950 ;; Defined at:
  9951 ;;		line 278 in file "../Includes/Drivers/SSD1306oLED.c"
  9952 ;; Parameters:    Size  Location     Type
  9953 ;;  number          1    wreg     unsigned char 
  9954 ;;  station_dot     1   22[BANK0 ] unsigned char 
  9955 ;;  start_page      1   23[BANK0 ] unsigned char 
  9956 ;; Auto vars:     Size  Location     Type
  9957 ;;  number          1   31[BANK0 ] unsigned char 
  9958 ;;  numData         6   25[BANK0 ] struct .
  9959 ;;  negative        1   24[BANK0 ] unsigned char 
  9960 ;; Return value:  Size  Location     Type
  9961 ;;		None               void
  9962 ;; Registers used:
  9963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9969 ;;      Params:         0       2       0       0       0       0       0       0       0
  9970 ;;      Locals:         0       8       0       0       0       0       0       0       0
  9971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9972 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9973 ;;Total ram usage:       10 bytes
  9974 ;; Hardware stack levels used:    1
  9975 ;; Hardware stack levels required when called:   15
  9976 ;; This function calls:
  9977 ;;		___awmod
  9978 ;;		___lbdiv
  9979 ;;		_oled_putString
  9980 ;; This function is called by:
  9981 ;;		_moteHandler
  9982 ;;		_moteRunningProcess
  9983 ;;		_moteApp_testSensors
  9984 ;; This function uses a non-reentrant model
  9985 ;;
  9986                           
  9987                           	psect	text13
  9988  00412A                     __ptext13:
  9989                           	opt stack 0
  9990  00412A                     _oled_putint8:
  9991                           	opt stack 13
  9992                           
  9993                           ; BSR set to: 0
  9994                           ;incstack = 0
  9995                           ;oled_putint8@number stored from wreg
  9996  00412A  0100               	movlb	0	; () banked
  9997  00412C  6FCE               	movwf	oled_putint8@number& (0+255),b
  9998                           
  9999                           ; BSR set to: 0
 10000                           ;SSD1306oLED.c: 280: display_data_t numData;
 10001                           ;SSD1306oLED.c: 281: bool negative = 0;
 10002  00412E  0E00               	movlw	0
 10003  004130  0100               	movlb	0	; () banked
 10004  004132  6FC7               	movwf	oled_putint8@negative& (0+255),b
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;SSD1306oLED.c: 283: if(number & 0x80)
 10008  004134  0100               	movlb	0	; () banked
 10009  004136  AFCE               	btfss	oled_putint8@number& (0+255),7,b
 10010  004138  D004               	goto	l11820
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;SSD1306oLED.c: 284: negative = 1;
 10014  00413A  0E01               	movlw	1
 10015  00413C  0100               	movlb	0	; () banked
 10016  00413E  6FC7               	movwf	oled_putint8@negative& (0+255),b
 10017  004140  D000               	goto	l11820
 10018  004142                     l11820:
 10019                           
 10020                           ; BSR set to: 0
 10021                           ;SSD1306oLED.c: 285: number = (number & 0x7F);
 10022  004142  0100               	movlb	0	; () banked
 10023  004144  51CE               	movf	oled_putint8@number& (0+255),w,b
 10024  004146  0B7F               	andlw	127
 10025  004148  0100               	movlb	0	; () banked
 10026  00414A  6FCE               	movwf	oled_putint8@number& (0+255),b
 10027                           
 10028                           ; BSR set to: 0
 10029                           ;SSD1306oLED.c: 287: numData.d2 = '0' + (number % 10);
 10030  00414C  C0CE  F0AF         	movff	oled_putint8@number,___awmod@dividend
 10031  004150  0100               	movlb	0	; () banked
 10032  004152  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
 10033  004154  0E00               	movlw	0
 10034  004156  0100               	movlb	0	; () banked
 10035  004158  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
 10036  00415A  0E0A               	movlw	10
 10037  00415C  6FB1               	movwf	___awmod@divisor& (0+255),b
 10038  00415E  ECB0  F023         	call	___awmod	;wreg free
 10039  004162  0100               	movlb	0	; () banked
 10040  004164  51AF               	movf	?___awmod& (0+255),w,b
 10041  004166  0F30               	addlw	48
 10042  004168  0100               	movlb	0	; () banked
 10043  00416A  6FCA               	movwf	(oled_putint8@numData+2)& (0+255),b
 10044                           
 10045                           ; BSR set to: 0
 10046                           ;SSD1306oLED.c: 288: number /= 10;
 10047  00416C  0E0A               	movlw	10
 10048  00416E  0100               	movlb	0	; () banked
 10049  004170  6FAF               	movwf	___lbdiv@divisor& (0+255),b
 10050  004172  0100               	movlb	0	; () banked
 10051  004174  51CE               	movf	oled_putint8@number& (0+255),w,b
 10052  004176  ECBE  F029         	call	___lbdiv
 10053  00417A  0100               	movlb	0	; () banked
 10054  00417C  6FCE               	movwf	oled_putint8@number& (0+255),b
 10055                           
 10056                           ; BSR set to: 0
 10057                           ;SSD1306oLED.c: 289: numData.d1 = '0' + (number % 10);
 10058  00417E  C0CE  F0AF         	movff	oled_putint8@number,___awmod@dividend
 10059  004182  0100               	movlb	0	; () banked
 10060  004184  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
 10061  004186  0E00               	movlw	0
 10062  004188  0100               	movlb	0	; () banked
 10063  00418A  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
 10064  00418C  0E0A               	movlw	10
 10065  00418E  6FB1               	movwf	___awmod@divisor& (0+255),b
 10066  004190  ECB0  F023         	call	___awmod	;wreg free
 10067  004194  0100               	movlb	0	; () banked
 10068  004196  51AF               	movf	?___awmod& (0+255),w,b
 10069  004198  0F30               	addlw	48
 10070  00419A  0100               	movlb	0	; () banked
 10071  00419C  6FC9               	movwf	(oled_putint8@numData+1)& (0+255),b
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;SSD1306oLED.c: 290: number /= 10;
 10075  00419E  0E0A               	movlw	10
 10076  0041A0  0100               	movlb	0	; () banked
 10077  0041A2  6FAF               	movwf	___lbdiv@divisor& (0+255),b
 10078  0041A4  0100               	movlb	0	; () banked
 10079  0041A6  51CE               	movf	oled_putint8@number& (0+255),w,b
 10080  0041A8  ECBE  F029         	call	___lbdiv
 10081  0041AC  0100               	movlb	0	; () banked
 10082  0041AE  6FCE               	movwf	oled_putint8@number& (0+255),b
 10083                           
 10084                           ; BSR set to: 0
 10085                           ;SSD1306oLED.c: 291: numData.d0 = '0' + (number % 10);
 10086  0041B0  C0CE  F0AF         	movff	oled_putint8@number,___awmod@dividend
 10087  0041B4  0100               	movlb	0	; () banked
 10088  0041B6  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
 10089  0041B8  0E00               	movlw	0
 10090  0041BA  0100               	movlb	0	; () banked
 10091  0041BC  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
 10092  0041BE  0E0A               	movlw	10
 10093  0041C0  6FB1               	movwf	___awmod@divisor& (0+255),b
 10094  0041C2  ECB0  F023         	call	___awmod	;wreg free
 10095  0041C6  0100               	movlb	0	; () banked
 10096  0041C8  51AF               	movf	?___awmod& (0+255),w,b
 10097  0041CA  0F30               	addlw	48
 10098  0041CC  0100               	movlb	0	; () banked
 10099  0041CE  6FC8               	movwf	oled_putint8@numData& (0+255),b
 10100                           
 10101                           ; BSR set to: 0
 10102                           ;SSD1306oLED.c: 292: if(negative)
 10103  0041D0  0100               	movlb	0	; () banked
 10104  0041D2  51C7               	movf	oled_putint8@negative& (0+255),w,b
 10105  0041D4  0100               	movlb	0	; () banked
 10106  0041D6  B4D8               	btfsc	status,2,c
 10107  0041D8  D003               	goto	l1028
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;SSD1306oLED.c: 293: numData.d0 = '-';
 10111  0041DA  0E2D               	movlw	45
 10112  0041DC  0100               	movlb	0	; () banked
 10113  0041DE  6FC8               	movwf	oled_putint8@numData& (0+255),b
 10114  0041E0                     l1028:
 10115                           
 10116                           ; BSR set to: 0
 10117                           ;SSD1306oLED.c: 295: numData.b[3]=0;
 10118  0041E0  0E00               	movlw	0
 10119  0041E2  0100               	movlb	0	; () banked
 10120  0041E4  6FCB               	movwf	(oled_putint8@numData+3)& (0+255),b
 10121                           
 10122                           ; BSR set to: 0
 10123                           ;SSD1306oLED.c: 297: oled_putString(numData.b,station_dot,start_page);
 10124  0041E6  0EC8               	movlw	low oled_putint8@numData
 10125  0041E8  0100               	movlb	0	; () banked
 10126  0041EA  6FC0               	movwf	oled_putString@string& (0+255),b
 10127  0041EC  0E00               	movlw	high oled_putint8@numData
 10128  0041EE  0100               	movlb	0	; () banked
 10129  0041F0  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 10130  0041F2  C0C5  F0C2         	movff	oled_putint8@station_dot,oled_putString@station_dot
 10131  0041F6  C0C6  F0C3         	movff	oled_putint8@start_page,oled_putString@start_page
 10132  0041FA  EC6C  F028         	call	_oled_putString	;wreg free
 10133  0041FE  0012               	return		;funcret
 10134  004200                     __end_of_oled_putint8:
 10135                           	opt stack 0
 10136                           tblptru	equ	0xFF8
 10137                           tblptrh	equ	0xFF7
 10138                           tblptrl	equ	0xFF6
 10139                           tablat	equ	0xFF5
 10140                           prodh	equ	0xFF4
 10141                           prodl	equ	0xFF3
 10142                           intcon	equ	0xFF2
 10143                           postinc0	equ	0xFEE
 10144                           wreg	equ	0xFE8
 10145                           indf1	equ	0xFE7
 10146                           postdec1	equ	0xFE5
 10147                           fsr1h	equ	0xFE2
 10148                           fsr1l	equ	0xFE1
 10149                           indf2	equ	0xFDF
 10150                           fsr2h	equ	0xFDA
 10151                           fsr2l	equ	0xFD9
 10152                           status	equ	0xFD8
 10153                           
 10154 ;; *************** function _oled_putUint8 *****************
 10155 ;; Defined at:
 10156 ;;		line 264 in file "../Includes/Drivers/SSD1306oLED.c"
 10157 ;; Parameters:    Size  Location     Type
 10158 ;;  number          1    wreg     unsigned char 
 10159 ;;  station_dot     1   22[BANK0 ] unsigned char 
 10160 ;;  start_page      1   23[BANK0 ] unsigned char 
 10161 ;; Auto vars:     Size  Location     Type
 10162 ;;  number          1   24[BANK0 ] unsigned char 
 10163 ;;  numData         6   25[BANK0 ] struct .
 10164 ;; Return value:  Size  Location     Type
 10165 ;;		None               void
 10166 ;; Registers used:
 10167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10168 ;; Tracked objects:
 10169 ;;		On entry : 0/0
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10173 ;;      Params:         0       2       0       0       0       0       0       0       0
 10174 ;;      Locals:         0       7       0       0       0       0       0       0       0
 10175 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10176 ;;      Totals:         0       9       0       0       0       0       0       0       0
 10177 ;;Total ram usage:        9 bytes
 10178 ;; Hardware stack levels used:    1
 10179 ;; Hardware stack levels required when called:   15
 10180 ;; This function calls:
 10181 ;;		___awmod
 10182 ;;		___lbdiv
 10183 ;;		_oled_putString
 10184 ;; This function is called by:
 10185 ;;		_moteRunningProcess
 10186 ;;		_test_adc
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           	psect	text14
 10191  004976                     __ptext14:
 10192                           	opt stack 0
 10193  004976                     _oled_putUint8:
 10194                           	opt stack 13
 10195                           
 10196                           ;incstack = 0
 10197                           ;oled_putUint8@number stored from wreg
 10198  004976  0100               	movlb	0	; () banked
 10199  004978  6FC7               	movwf	oled_putUint8@number& (0+255),b
 10200                           
 10201                           ; BSR set to: 0
 10202                           ;SSD1306oLED.c: 266: display_data_t numData;
 10203                           ;SSD1306oLED.c: 267: numData.d2 = '0' + (number % 10);
 10204  00497A  C0C7  F0AF         	movff	oled_putUint8@number,___awmod@dividend
 10205  00497E  0100               	movlb	0	; () banked
 10206  004980  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
 10207  004982  0E00               	movlw	0
 10208  004984  0100               	movlb	0	; () banked
 10209  004986  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
 10210  004988  0E0A               	movlw	10
 10211  00498A  6FB1               	movwf	___awmod@divisor& (0+255),b
 10212  00498C  ECB0  F023         	call	___awmod	;wreg free
 10213  004990  0100               	movlb	0	; () banked
 10214  004992  51AF               	movf	?___awmod& (0+255),w,b
 10215  004994  0F30               	addlw	48
 10216  004996  0100               	movlb	0	; () banked
 10217  004998  6FCA               	movwf	(oled_putUint8@numData+2)& (0+255),b
 10218                           
 10219                           ;SSD1306oLED.c: 268: number /= 10;
 10220  00499A  0E0A               	movlw	10
 10221  00499C  0100               	movlb	0	; () banked
 10222  00499E  6FAF               	movwf	___lbdiv@divisor& (0+255),b
 10223  0049A0  0100               	movlb	0	; () banked
 10224  0049A2  51C7               	movf	oled_putUint8@number& (0+255),w,b
 10225  0049A4  ECBE  F029         	call	___lbdiv
 10226  0049A8  0100               	movlb	0	; () banked
 10227  0049AA  6FC7               	movwf	oled_putUint8@number& (0+255),b
 10228                           
 10229                           ;SSD1306oLED.c: 269: numData.d1 = '0' + (number % 10);
 10230  0049AC  C0C7  F0AF         	movff	oled_putUint8@number,___awmod@dividend
 10231  0049B0  0100               	movlb	0	; () banked
 10232  0049B2  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
 10233  0049B4  0E00               	movlw	0
 10234  0049B6  0100               	movlb	0	; () banked
 10235  0049B8  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
 10236  0049BA  0E0A               	movlw	10
 10237  0049BC  6FB1               	movwf	___awmod@divisor& (0+255),b
 10238  0049BE  ECB0  F023         	call	___awmod	;wreg free
 10239  0049C2  0100               	movlb	0	; () banked
 10240  0049C4  51AF               	movf	?___awmod& (0+255),w,b
 10241  0049C6  0F30               	addlw	48
 10242  0049C8  0100               	movlb	0	; () banked
 10243  0049CA  6FC9               	movwf	(oled_putUint8@numData+1)& (0+255),b
 10244                           
 10245                           ;SSD1306oLED.c: 270: number /= 10;
 10246  0049CC  0E0A               	movlw	10
 10247  0049CE  0100               	movlb	0	; () banked
 10248  0049D0  6FAF               	movwf	___lbdiv@divisor& (0+255),b
 10249  0049D2  0100               	movlb	0	; () banked
 10250  0049D4  51C7               	movf	oled_putUint8@number& (0+255),w,b
 10251  0049D6  ECBE  F029         	call	___lbdiv
 10252  0049DA  0100               	movlb	0	; () banked
 10253  0049DC  6FC7               	movwf	oled_putUint8@number& (0+255),b
 10254                           
 10255                           ;SSD1306oLED.c: 271: numData.d0 = '0' + (number % 10);
 10256  0049DE  C0C7  F0AF         	movff	oled_putUint8@number,___awmod@dividend
 10257  0049E2  0100               	movlb	0	; () banked
 10258  0049E4  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
 10259  0049E6  0E00               	movlw	0
 10260  0049E8  0100               	movlb	0	; () banked
 10261  0049EA  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
 10262  0049EC  0E0A               	movlw	10
 10263  0049EE  6FB1               	movwf	___awmod@divisor& (0+255),b
 10264  0049F0  ECB0  F023         	call	___awmod	;wreg free
 10265  0049F4  0100               	movlb	0	; () banked
 10266  0049F6  51AF               	movf	?___awmod& (0+255),w,b
 10267  0049F8  0F30               	addlw	48
 10268  0049FA  0100               	movlb	0	; () banked
 10269  0049FC  6FC8               	movwf	oled_putUint8@numData& (0+255),b
 10270                           
 10271                           ; BSR set to: 0
 10272                           ;SSD1306oLED.c: 273: numData.b[3]=0;
 10273  0049FE  0E00               	movlw	0
 10274  004A00  0100               	movlb	0	; () banked
 10275  004A02  6FCB               	movwf	(oled_putUint8@numData+3)& (0+255),b
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;SSD1306oLED.c: 275: oled_putString(numData.b,station_dot,start_page);
 10279  004A04  0EC8               	movlw	low oled_putUint8@numData
 10280  004A06  0100               	movlb	0	; () banked
 10281  004A08  6FC0               	movwf	oled_putString@string& (0+255),b
 10282  004A0A  0E00               	movlw	high oled_putUint8@numData
 10283  004A0C  0100               	movlb	0	; () banked
 10284  004A0E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 10285  004A10  C0C5  F0C2         	movff	oled_putUint8@station_dot,oled_putString@station_dot
 10286  004A14  C0C6  F0C3         	movff	oled_putUint8@start_page,oled_putString@start_page
 10287  004A18  EC6C  F028         	call	_oled_putString	;wreg free
 10288  004A1C  0012               	return		;funcret
 10289  004A1E                     __end_of_oled_putUint8:
 10290                           	opt stack 0
 10291                           tblptru	equ	0xFF8
 10292                           tblptrh	equ	0xFF7
 10293                           tblptrl	equ	0xFF6
 10294                           tablat	equ	0xFF5
 10295                           prodh	equ	0xFF4
 10296                           prodl	equ	0xFF3
 10297                           intcon	equ	0xFF2
 10298                           postinc0	equ	0xFEE
 10299                           wreg	equ	0xFE8
 10300                           indf1	equ	0xFE7
 10301                           postdec1	equ	0xFE5
 10302                           fsr1h	equ	0xFE2
 10303                           fsr1l	equ	0xFE1
 10304                           indf2	equ	0xFDF
 10305                           fsr2h	equ	0xFDA
 10306                           fsr2l	equ	0xFD9
 10307                           status	equ	0xFD8
 10308                           
 10309 ;; *************** function _moteApp_setSensorsInput *****************
 10310 ;; Defined at:
 10311 ;;		line 1385 in file "../Includes/Board/MOTEapp.c"
 10312 ;; Parameters:    Size  Location     Type
 10313 ;;		None
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10316 ;; Return value:  Size  Location     Type
 10317 ;;		None               void
 10318 ;; Registers used:
 10319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10325 ;;      Params:         0       0       0       0       0       0       0       0       0
 10326 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10327 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10328 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10329 ;;Total ram usage:        2 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; Hardware stack levels required when called:   14
 10332 ;; This function calls:
 10333 ;;		_MOTEapp_getModuleResponse
 10334 ;;		_moteApp_delayms
 10335 ;;		_sendCommand
 10336 ;; This function is called by:
 10337 ;;		_moteRunningProcess
 10338 ;;		_moteApp_testSensors
 10339 ;; This function uses a non-reentrant model
 10340 ;;
 10341                           
 10342                           	psect	text15
 10343  004C9E                     __ptext15:
 10344                           	opt stack 0
 10345  004C9E                     _moteApp_setSensorsInput:
 10346                           	opt stack 14
 10347                           
 10348                           ;MOTEapp.c: 1387: uint16_t escapeCounter = 0;
 10349                           
 10350                           ;incstack = 0
 10351  004C9E  0E00               	movlw	0
 10352  004CA0  0100               	movlb	0	; () banked
 10353  004CA2  6FB5               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10354  004CA4  0E00               	movlw	0
 10355  004CA6  6FB4               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;MOTEapp.c: 1388: sendCommand("sys set pinmode GPIO13 ana");
 10359  004CA8  0EDD               	movlw	low STR_183
 10360  004CAA  0100               	movlb	0	; () banked
 10361  004CAC  6FB0               	movwf	sendCommand@string& (0+255),b
 10362  004CAE  0E79               	movlw	high STR_183
 10363  004CB0  0100               	movlb	0	; () banked
 10364  004CB2  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 10365  004CB4  EC49  F02E         	call	_sendCommand	;wreg free
 10366                           
 10367                           ;MOTEapp.c: 1389: while ( !MOTEapp_getModuleResponse() )
 10368  004CB8  D00E               	goto	l11924
 10369  004CBA                     l11920:
 10370                           
 10371                           ;MOTEapp.c: 1390: {
 10372                           ;MOTEapp.c: 1391: if (++escapeCounter > 50000)
 10373  004CBA  0100               	movlb	0	; () banked
 10374  004CBC  4BB4               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10375  004CBE  2BB5               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10376  004CC0  0E51               	movlw	81
 10377  004CC2  0100               	movlb	0	; () banked
 10378  004CC4  5DB4               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10379  004CC6  0EC3               	movlw	195
 10380  004CC8  0100               	movlb	0	; () banked
 10381  004CCA  59B5               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10382  004CCC  B0D8               	btfsc	status,0,c
 10383  004CCE  D008               	goto	l11926
 10384  004CD0  D002               	goto	l11924
 10385                           
 10386                           ; BSR set to: 0
 10387                           ;MOTEapp.c: 1392: break;
 10388  004CD2  D006               	goto	l11926
 10389                           
 10390                           ; BSR set to: 0
 10391  004CD4  D000               	goto	l11924
 10392  004CD6                     l11924:
 10393  004CD6  EC2E  F028         	call	_MOTEapp_getModuleResponse	;wreg free
 10394  004CDA  0900               	iorlw	0
 10395  004CDC  B4D8               	btfsc	status,2,c
 10396  004CDE  D7ED               	goto	l11920
 10397  004CE0                     l11926:
 10398                           
 10399                           ;MOTEapp.c: 1393: }
 10400                           ;MOTEapp.c: 1394: escapeCounter = 0;
 10401  004CE0  0E00               	movlw	0
 10402  004CE2  0100               	movlb	0	; () banked
 10403  004CE4  6FB5               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10404  004CE6  0E00               	movlw	0
 10405  004CE8  6FB4               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10406                           
 10407                           ; BSR set to: 0
 10408                           ;MOTEapp.c: 1395: sendCommand("sys set pinmode GPIO12 ana");
 10409  004CEA  0EC2               	movlw	low STR_184
 10410  004CEC  0100               	movlb	0	; () banked
 10411  004CEE  6FB0               	movwf	sendCommand@string& (0+255),b
 10412  004CF0  0E79               	movlw	high STR_184
 10413  004CF2  0100               	movlb	0	; () banked
 10414  004CF4  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 10415  004CF6  EC49  F02E         	call	_sendCommand	;wreg free
 10416                           
 10417                           ;MOTEapp.c: 1396: while ( !MOTEapp_getModuleResponse() )
 10418  004CFA  D00E               	goto	l11934
 10419  004CFC                     l11930:
 10420                           
 10421                           ;MOTEapp.c: 1397: {
 10422                           ;MOTEapp.c: 1398: if (++escapeCounter > 50000)
 10423  004CFC  0100               	movlb	0	; () banked
 10424  004CFE  4BB4               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10425  004D00  2BB5               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10426  004D02  0E51               	movlw	81
 10427  004D04  0100               	movlb	0	; () banked
 10428  004D06  5DB4               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10429  004D08  0EC3               	movlw	195
 10430  004D0A  0100               	movlb	0	; () banked
 10431  004D0C  59B5               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10432  004D0E  B0D8               	btfsc	status,0,c
 10433  004D10  D008               	goto	l11936
 10434  004D12  D002               	goto	l11934
 10435                           
 10436                           ; BSR set to: 0
 10437                           ;MOTEapp.c: 1399: break;
 10438  004D14  D006               	goto	l11936
 10439                           
 10440                           ; BSR set to: 0
 10441  004D16  D000               	goto	l11934
 10442  004D18                     l11934:
 10443  004D18  EC2E  F028         	call	_MOTEapp_getModuleResponse	;wreg free
 10444  004D1C  0900               	iorlw	0
 10445  004D1E  B4D8               	btfsc	status,2,c
 10446  004D20  D7ED               	goto	l11930
 10447  004D22                     l11936:
 10448                           
 10449                           ;MOTEapp.c: 1400: }
 10450                           ;MOTEapp.c: 1401: moteApp_delayms(100);
 10451  004D22  0E00               	movlw	0
 10452  004D24  0100               	movlb	0	; () banked
 10453  004D26  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10454  004D28  0E64               	movlw	100
 10455  004D2A  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 10456  004D2C  EC36  F02D         	call	_moteApp_delayms	;wreg free
 10457  004D30  0012               	return		;funcret
 10458  004D32                     __end_of_moteApp_setSensorsInput:
 10459                           	opt stack 0
 10460                           tblptru	equ	0xFF8
 10461                           tblptrh	equ	0xFF7
 10462                           tblptrl	equ	0xFF6
 10463                           tablat	equ	0xFF5
 10464                           prodh	equ	0xFF4
 10465                           prodl	equ	0xFF3
 10466                           intcon	equ	0xFF2
 10467                           postinc0	equ	0xFEE
 10468                           wreg	equ	0xFE8
 10469                           indf1	equ	0xFE7
 10470                           postdec1	equ	0xFE5
 10471                           fsr1h	equ	0xFE2
 10472                           fsr1l	equ	0xFE1
 10473                           indf2	equ	0xFDF
 10474                           fsr2h	equ	0xFDA
 10475                           fsr2l	equ	0xFD9
 10476                           status	equ	0xFD8
 10477                           
 10478 ;; *************** function _moteApp_lightStringSize *****************
 10479 ;; Defined at:
 10480 ;;		line 1450 in file "../Includes/Board/MOTEapp.c"
 10481 ;; Parameters:    Size  Location     Type
 10482 ;;		None
 10483 ;; Auto vars:     Size  Location     Type
 10484 ;;		None
 10485 ;; Return value:  Size  Location     Type
 10486 ;;                  1    wreg      unsigned char 
 10487 ;; Registers used:
 10488 ;;		wreg, status,2
 10489 ;; Tracked objects:
 10490 ;;		On entry : 0/0
 10491 ;;		On exit  : 0/0
 10492 ;;		Unchanged: 0/0
 10493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10494 ;;      Params:         0       0       0       0       0       0       0       0       0
 10495 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10496 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10497 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10498 ;;Total ram usage:        0 bytes
 10499 ;; Hardware stack levels used:    1
 10500 ;; Hardware stack levels required when called:   11
 10501 ;; This function calls:
 10502 ;;		Nothing
 10503 ;; This function is called by:
 10504 ;;		_moteRunningProcess
 10505 ;; This function uses a non-reentrant model
 10506 ;;
 10507                           
 10508                           	psect	text16
 10509  006022                     __ptext16:
 10510                           	opt stack 0
 10511  006022                     _moteApp_lightStringSize:
 10512                           	opt stack 17
 10513                           
 10514                           ;MOTEapp.c: 1452: return lightStringSize;
 10515                           
 10516                           ;incstack = 0
 10517  006022  0100               	movlb	0	; () banked
 10518  006024  519A               	movf	_lightStringSize& (0+255),w,b
 10519  006026  0012               	return	
 10520                           
 10521                           ; BSR set to: 0
 10522                           
 10523                           ; BSR set to: 0
 10524  006028  0012               	return		;funcret
 10525  00602A                     __end_of_moteApp_lightStringSize:
 10526                           	opt stack 0
 10527                           tblptru	equ	0xFF8
 10528                           tblptrh	equ	0xFF7
 10529                           tblptrl	equ	0xFF6
 10530                           tablat	equ	0xFF5
 10531                           prodh	equ	0xFF4
 10532                           prodl	equ	0xFF3
 10533                           intcon	equ	0xFF2
 10534                           postinc0	equ	0xFEE
 10535                           wreg	equ	0xFE8
 10536                           indf1	equ	0xFE7
 10537                           postdec1	equ	0xFE5
 10538                           fsr1h	equ	0xFE2
 10539                           fsr1l	equ	0xFE1
 10540                           indf2	equ	0xFDF
 10541                           fsr2h	equ	0xFDA
 10542                           fsr2l	equ	0xFD9
 10543                           status	equ	0xFD8
 10544                           
 10545 ;; *************** function _moteApp_getTempValue *****************
 10546 ;; Defined at:
 10547 ;;		line 1403 in file "../Includes/Board/MOTEapp.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;		None
 10550 ;; Auto vars:     Size  Location     Type
 10551 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10552 ;; Return value:  Size  Location     Type
 10553 ;;                  2    3[BANK0 ] PTR unsigned char 
 10554 ;; Registers used:
 10555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10556 ;; Tracked objects:
 10557 ;;		On entry : 0/0
 10558 ;;		On exit  : 0/0
 10559 ;;		Unchanged: 0/0
 10560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10561 ;;      Params:         0       2       0       0       0       0       0       0       0
 10562 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10563 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10564 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10565 ;;Total ram usage:        4 bytes
 10566 ;; Hardware stack levels used:    1
 10567 ;; Hardware stack levels required when called:   14
 10568 ;; This function calls:
 10569 ;;		_MOTEapp_getModuleResponse
 10570 ;;		_sendCommand
 10571 ;; This function is called by:
 10572 ;;		_moteHandler
 10573 ;;		_moteRunningProcess
 10574 ;;		_moteApp_testSensors
 10575 ;; This function uses a non-reentrant model
 10576 ;;
 10577                           
 10578                           	psect	text17
 10579  005734                     __ptext17:
 10580                           	opt stack 0
 10581  005734                     _moteApp_getTempValue:
 10582                           	opt stack 14
 10583                           
 10584                           ;MOTEapp.c: 1405: uint16_t escapeCounter = 0;
 10585                           
 10586                           ; BSR set to: 0
 10587                           ;incstack = 0
 10588  005734  0E00               	movlw	0
 10589  005736  0100               	movlb	0	; () banked
 10590  005738  6FB5               	movwf	(moteApp_getTempValue@escapeCounter+1)& (0+255),b
 10591  00573A  0E00               	movlw	0
 10592  00573C  6FB4               	movwf	moteApp_getTempValue@escapeCounter& (0+255),b
 10593                           
 10594                           ; BSR set to: 0
 10595                           ;MOTEapp.c: 1407: sendCommand("sys get pinana GPIO12");
 10596  00573E  0E60               	movlw	low STR_185
 10597  005740  0100               	movlb	0	; () banked
 10598  005742  6FB0               	movwf	sendCommand@string& (0+255),b
 10599  005744  0E7A               	movlw	high STR_185
 10600  005746  0100               	movlb	0	; () banked
 10601  005748  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 10602  00574A  EC49  F02E         	call	_sendCommand	;wreg free
 10603                           
 10604                           ;MOTEapp.c: 1408: while ( !MOTEapp_getModuleResponse() )
 10605  00574E  D00E               	goto	l11788
 10606  005750                     l11784:
 10607                           
 10608                           ;MOTEapp.c: 1409: {
 10609                           ;MOTEapp.c: 1410: if (++escapeCounter > 50000)
 10610  005750  0100               	movlb	0	; () banked
 10611  005752  4BB4               	infsnz	moteApp_getTempValue@escapeCounter& (0+255),f,b
 10612  005754  2BB5               	incf	(moteApp_getTempValue@escapeCounter+1)& (0+255),f,b
 10613  005756  0E51               	movlw	81
 10614  005758  0100               	movlb	0	; () banked
 10615  00575A  5DB4               	subwf	moteApp_getTempValue@escapeCounter& (0+255),w,b
 10616  00575C  0EC3               	movlw	195
 10617  00575E  0100               	movlb	0	; () banked
 10618  005760  59B5               	subwfb	(moteApp_getTempValue@escapeCounter+1)& (0+255),w,b
 10619  005762  B0D8               	btfsc	status,0,c
 10620  005764  D008               	goto	l11790
 10621  005766  D002               	goto	l11788
 10622                           
 10623                           ; BSR set to: 0
 10624                           ;MOTEapp.c: 1411: break;
 10625  005768  D006               	goto	l11790
 10626                           
 10627                           ; BSR set to: 0
 10628  00576A  D000               	goto	l11788
 10629  00576C                     l11788:
 10630  00576C  EC2E  F028         	call	_MOTEapp_getModuleResponse	;wreg free
 10631  005770  0900               	iorlw	0
 10632  005772  B4D8               	btfsc	status,2,c
 10633  005774  D7ED               	goto	l11784
 10634  005776                     l11790:
 10635                           
 10636                           ;MOTEapp.c: 1412: }
 10637                           ;MOTEapp.c: 1414: return &moduleResonseBuffer;
 10638  005776  0E68               	movlw	low _moduleResonseBuffer
 10639  005778  0100               	movlb	0	; () banked
 10640  00577A  6FB2               	movwf	?_moteApp_getTempValue& (0+255),b
 10641  00577C  0E01               	movlw	high _moduleResonseBuffer
 10642  00577E  0100               	movlb	0	; () banked
 10643  005780  6FB3               	movwf	(?_moteApp_getTempValue+1)& (0+255),b
 10644  005782  0012               	return	
 10645                           
 10646                           ; BSR set to: 0
 10647                           
 10648                           ; BSR set to: 0
 10649  005784  0012               	return		;funcret
 10650  005786                     __end_of_moteApp_getTempValue:
 10651                           	opt stack 0
 10652                           tblptru	equ	0xFF8
 10653                           tblptrh	equ	0xFF7
 10654                           tblptrl	equ	0xFF6
 10655                           tablat	equ	0xFF5
 10656                           prodh	equ	0xFF4
 10657                           prodl	equ	0xFF3
 10658                           intcon	equ	0xFF2
 10659                           postinc0	equ	0xFEE
 10660                           wreg	equ	0xFE8
 10661                           indf1	equ	0xFE7
 10662                           postdec1	equ	0xFE5
 10663                           fsr1h	equ	0xFE2
 10664                           fsr1l	equ	0xFE1
 10665                           indf2	equ	0xFDF
 10666                           fsr2h	equ	0xFDA
 10667                           fsr2l	equ	0xFD9
 10668                           status	equ	0xFD8
 10669                           
 10670 ;; *************** function _moteApp_getLightValue *****************
 10671 ;; Defined at:
 10672 ;;		line 1417 in file "../Includes/Board/MOTEapp.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;		None
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;  escapeCounte    2   15[BANK0 ] unsigned int 
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  2   13[BANK0 ] PTR unsigned char 
 10679 ;; Registers used:
 10680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/0
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10686 ;;      Params:         0       2       0       0       0       0       0       0       0
 10687 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10688 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10689 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10690 ;;Total ram usage:        4 bytes
 10691 ;; Hardware stack levels used:    1
 10692 ;; Hardware stack levels required when called:   14
 10693 ;; This function calls:
 10694 ;;		_MOTEapp_getModuleResponse
 10695 ;;		_moteApp_setLightString
 10696 ;;		_sendCommand
 10697 ;; This function is called by:
 10698 ;;		_moteHandler
 10699 ;;		_moteRunningProcess
 10700 ;;		_moteApp_testSensors
 10701 ;; This function uses a non-reentrant model
 10702 ;;
 10703                           
 10704                           	psect	text18
 10705  00544A                     __ptext18:
 10706                           	opt stack 0
 10707  00544A                     _moteApp_getLightValue:
 10708                           	opt stack 14
 10709                           
 10710                           ;MOTEapp.c: 1419: uint16_t escapeCounter = 0;
 10711                           
 10712                           ; BSR set to: 0
 10713                           ;incstack = 0
 10714  00544A  0E00               	movlw	0
 10715  00544C  0100               	movlb	0	; () banked
 10716  00544E  6FBF               	movwf	(moteApp_getLightValue@escapeCounter+1)& (0+255),b
 10717  005450  0E00               	movlw	0
 10718  005452  6FBE               	movwf	moteApp_getLightValue@escapeCounter& (0+255),b
 10719                           
 10720                           ; BSR set to: 0
 10721                           ;MOTEapp.c: 1421: sendCommand("sys get pinana GPIO13");
 10722  005454  0E76               	movlw	low STR_186
 10723  005456  0100               	movlb	0	; () banked
 10724  005458  6FB0               	movwf	sendCommand@string& (0+255),b
 10725  00545A  0E7A               	movlw	high STR_186
 10726  00545C  0100               	movlb	0	; () banked
 10727  00545E  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 10728  005460  EC49  F02E         	call	_sendCommand	;wreg free
 10729                           
 10730                           ;MOTEapp.c: 1422: while ( !MOTEapp_getModuleResponse() )
 10731  005464  D00E               	goto	l11772
 10732  005466                     l11768:
 10733                           
 10734                           ;MOTEapp.c: 1423: {
 10735                           ;MOTEapp.c: 1424: if (++escapeCounter > 50000)
 10736  005466  0100               	movlb	0	; () banked
 10737  005468  4BBE               	infsnz	moteApp_getLightValue@escapeCounter& (0+255),f,b
 10738  00546A  2BBF               	incf	(moteApp_getLightValue@escapeCounter+1)& (0+255),f,b
 10739  00546C  0E51               	movlw	81
 10740  00546E  0100               	movlb	0	; () banked
 10741  005470  5DBE               	subwf	moteApp_getLightValue@escapeCounter& (0+255),w,b
 10742  005472  0EC3               	movlw	195
 10743  005474  0100               	movlb	0	; () banked
 10744  005476  59BF               	subwfb	(moteApp_getLightValue@escapeCounter+1)& (0+255),w,b
 10745  005478  B0D8               	btfsc	status,0,c
 10746  00547A  D008               	goto	l11774
 10747  00547C  D002               	goto	l11772
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;MOTEapp.c: 1425: break;
 10751  00547E  D006               	goto	l11774
 10752                           
 10753                           ; BSR set to: 0
 10754  005480  D000               	goto	l11772
 10755  005482                     l11772:
 10756  005482  EC2E  F028         	call	_MOTEapp_getModuleResponse	;wreg free
 10757  005486  0900               	iorlw	0
 10758  005488  B4D8               	btfsc	status,2,c
 10759  00548A  D7ED               	goto	l11768
 10760  00548C                     l11774:
 10761                           
 10762                           ;MOTEapp.c: 1426: }
 10763                           ;MOTEapp.c: 1427: moteApp_setLightString(moduleResonseBuffer);
 10764  00548C  0E68               	movlw	low _moduleResonseBuffer
 10765  00548E  0100               	movlb	0	; () banked
 10766  005490  6FB9               	movwf	moteApp_setLightString@lightString& (0+255),b
 10767  005492  0E01               	movlw	high _moduleResonseBuffer
 10768  005494  0100               	movlb	0	; () banked
 10769  005496  6FBA               	movwf	(moteApp_setLightString@lightString+1)& (0+255),b
 10770  005498  ECAE  F027         	call	_moteApp_setLightString	;wreg free
 10771                           
 10772                           ;MOTEapp.c: 1428: return &moduleResonseBuffer;
 10773  00549C  0E68               	movlw	low _moduleResonseBuffer
 10774  00549E  0100               	movlb	0	; () banked
 10775  0054A0  6FBC               	movwf	?_moteApp_getLightValue& (0+255),b
 10776  0054A2  0E01               	movlw	high _moduleResonseBuffer
 10777  0054A4  0100               	movlb	0	; () banked
 10778  0054A6  6FBD               	movwf	(?_moteApp_getLightValue+1)& (0+255),b
 10779  0054A8  0012               	return	
 10780                           
 10781                           ; BSR set to: 0
 10782                           
 10783                           ; BSR set to: 0
 10784  0054AA  0012               	return		;funcret
 10785  0054AC                     __end_of_moteApp_getLightValue:
 10786                           	opt stack 0
 10787                           tblptru	equ	0xFF8
 10788                           tblptrh	equ	0xFF7
 10789                           tblptrl	equ	0xFF6
 10790                           tablat	equ	0xFF5
 10791                           prodh	equ	0xFF4
 10792                           prodl	equ	0xFF3
 10793                           intcon	equ	0xFF2
 10794                           postinc0	equ	0xFEE
 10795                           wreg	equ	0xFE8
 10796                           indf1	equ	0xFE7
 10797                           postdec1	equ	0xFE5
 10798                           fsr1h	equ	0xFE2
 10799                           fsr1l	equ	0xFE1
 10800                           indf2	equ	0xFDF
 10801                           fsr2h	equ	0xFDA
 10802                           fsr2l	equ	0xFD9
 10803                           status	equ	0xFD8
 10804                           
 10805 ;; *************** function _moteApp_setLightString *****************
 10806 ;; Defined at:
 10807 ;;		line 1435 in file "../Includes/Board/MOTEapp.c"
 10808 ;; Parameters:    Size  Location     Type
 10809 ;;  lightString     2   10[BANK0 ] PTR unsigned char 
 10810 ;;		 -> moduleResonseBuffer(64), 
 10811 ;; Auto vars:     Size  Location     Type
 10812 ;;  stingPos        1   12[BANK0 ] unsigned char 
 10813 ;; Return value:  Size  Location     Type
 10814 ;;		None               void
 10815 ;; Registers used:
 10816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10817 ;; Tracked objects:
 10818 ;;		On entry : 0/0
 10819 ;;		On exit  : 0/0
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10822 ;;      Params:         0       2       0       0       0       0       0       0       0
 10823 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10824 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10825 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10826 ;;Total ram usage:        3 bytes
 10827 ;; Hardware stack levels used:    1
 10828 ;; Hardware stack levels required when called:   12
 10829 ;; This function calls:
 10830 ;;		_memcpy
 10831 ;; This function is called by:
 10832 ;;		_moteApp_getLightValue
 10833 ;; This function uses a non-reentrant model
 10834 ;;
 10835                           
 10836                           	psect	text19
 10837  004F5C                     __ptext19:
 10838                           	opt stack 0
 10839  004F5C                     _moteApp_setLightString:
 10840                           	opt stack 15
 10841                           
 10842                           ;MOTEapp.c: 1437: memcpy(storedLight, clearLight, sizeof(storedLight));
 10843                           
 10844                           ; BSR set to: 0
 10845                           ;incstack = 0
 10846  004F5C  0EF6               	movlw	low _storedLight
 10847  004F5E  0100               	movlb	0	; () banked
 10848  004F60  6FAF               	movwf	memcpy@d1& (0+255),b
 10849  004F62  0E01               	movlw	high _storedLight
 10850  004F64  0100               	movlb	0	; () banked
 10851  004F66  6FB0               	movwf	(memcpy@d1+1)& (0+255),b
 10852  004F68  0EF1               	movlw	low _clearLight
 10853  004F6A  0100               	movlb	0	; () banked
 10854  004F6C  6FB1               	movwf	memcpy@s1& (0+255),b
 10855  004F6E  0E01               	movlw	high _clearLight
 10856  004F70  0100               	movlb	0	; () banked
 10857  004F72  6FB2               	movwf	(memcpy@s1+1)& (0+255),b
 10858  004F74  0E00               	movlw	0
 10859  004F76  0100               	movlb	0	; () banked
 10860  004F78  6FB4               	movwf	(memcpy@n+1)& (0+255),b
 10861  004F7A  0E05               	movlw	5
 10862  004F7C  6FB3               	movwf	memcpy@n& (0+255),b
 10863  004F7E  ECEB  F02B         	call	_memcpy	;wreg free
 10864                           
 10865                           ;MOTEapp.c: 1438: memcpy(storedLight, lightString, sizeof(storedLight));
 10866  004F82  0EF6               	movlw	low _storedLight
 10867  004F84  0100               	movlb	0	; () banked
 10868  004F86  6FAF               	movwf	memcpy@d1& (0+255),b
 10869  004F88  0E01               	movlw	high _storedLight
 10870  004F8A  0100               	movlb	0	; () banked
 10871  004F8C  6FB0               	movwf	(memcpy@d1+1)& (0+255),b
 10872  004F8E  C0B9  F0B1         	movff	moteApp_setLightString@lightString,memcpy@s1
 10873  004F92  C0BA  F0B2         	movff	moteApp_setLightString@lightString+1,memcpy@s1+1
 10874  004F96  0E00               	movlw	0
 10875  004F98  0100               	movlb	0	; () banked
 10876  004F9A  6FB4               	movwf	(memcpy@n+1)& (0+255),b
 10877  004F9C  0E05               	movlw	5
 10878  004F9E  6FB3               	movwf	memcpy@n& (0+255),b
 10879  004FA0  ECEB  F02B         	call	_memcpy	;wreg free
 10880                           
 10881                           ;MOTEapp.c: 1440: for (uint8_t stingPos = 0; stingPos < sizeof(storedLight); stingPos++)
 10882  004FA4  0E00               	movlw	0
 10883  004FA6  0100               	movlb	0	; () banked
 10884  004FA8  6FBB               	movwf	moteApp_setLightString@stingPos& (0+255),b
 10885  004FAA  D012               	goto	l11396
 10886                           
 10887                           ; BSR set to: 0
 10888                           
 10889                           ; BSR set to: 0
 10890  004FAC  D015               	goto	l749
 10891  004FAE                     l11390:
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;MOTEapp.c: 1441: {
 10895                           ;MOTEapp.c: 1442: if (storedLight[stingPos] == 0x00)
 10896  004FAE  0100               	movlb	0	; () banked
 10897  004FB0  51BB               	movf	moteApp_setLightString@stingPos& (0+255),w,b
 10898  004FB2  0D01               	mullw	1
 10899  004FB4  0EF6               	movlw	low _storedLight
 10900  004FB6  24F3               	addwf	prodl,w,c
 10901  004FB8  6ED9               	movwf	fsr2l,c
 10902  004FBA  0E01               	movlw	high _storedLight
 10903  004FBC  20F4               	addwfc	prodh,w,c
 10904  004FBE  6EDA               	movwf	fsr2h,c
 10905  004FC0  50DF               	movf	indf2,w,c
 10906  004FC2  A4D8               	btfss	status,2,c
 10907  004FC4  D003               	goto	l11394
 10908                           
 10909                           ; BSR set to: 0
 10910                           ;MOTEapp.c: 1443: {
 10911                           ;MOTEapp.c: 1444: lightStringSize = stingPos;
 10912  004FC6  C0BB  F09A         	movff	moteApp_setLightString@stingPos,_lightStringSize
 10913  004FCA  D000               	goto	l11394
 10914  004FCC                     l11394:
 10915                           
 10916                           ; BSR set to: 0
 10917  004FCC  0100               	movlb	0	; () banked
 10918  004FCE  2BBB               	incf	moteApp_setLightString@stingPos& (0+255),f,b
 10919  004FD0                     l11396:
 10920                           
 10921                           ; BSR set to: 0
 10922  004FD0  0E04               	movlw	4
 10923  004FD2  0100               	movlb	0	; () banked
 10924  004FD4  65BB               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 10925  004FD6  D7EB               	goto	l11390
 10926  004FD8                     l749:
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;MOTEapp.c: 1445: }
 10930                           ;MOTEapp.c: 1446: }
 10931                           ;MOTEapp.c: 1447: __nop();
 10932  004FD8  F000               	nop	
 10933  004FDA  0012               	return		;funcret
 10934  004FDC                     __end_of_moteApp_setLightString:
 10935                           	opt stack 0
 10936                           tblptru	equ	0xFF8
 10937                           tblptrh	equ	0xFF7
 10938                           tblptrl	equ	0xFF6
 10939                           tablat	equ	0xFF5
 10940                           prodh	equ	0xFF4
 10941                           prodl	equ	0xFF3
 10942                           intcon	equ	0xFF2
 10943                           postinc0	equ	0xFEE
 10944                           wreg	equ	0xFE8
 10945                           indf1	equ	0xFE7
 10946                           postdec1	equ	0xFE5
 10947                           fsr1h	equ	0xFE2
 10948                           fsr1l	equ	0xFE1
 10949                           indf2	equ	0xFDF
 10950                           fsr2h	equ	0xFDA
 10951                           fsr2l	equ	0xFD9
 10952                           status	equ	0xFD8
 10953                           
 10954 ;; *************** function _memcpy *****************
 10955 ;; Defined at:
 10956 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memcpy.c"
 10957 ;; Parameters:    Size  Location     Type
 10958 ;;  d1              2    0[BANK0 ] PTR void 
 10959 ;;		 -> storedLight(5), 
 10960 ;;  s1              2    2[BANK0 ] PTR const void 
 10961 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10962 ;;  n               2    4[BANK0 ] unsigned int 
 10963 ;; Auto vars:     Size  Location     Type
 10964 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 10965 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10966 ;;  d               2    6[BANK0 ] PTR unsigned char 
 10967 ;;		 -> storedLight(5), 
 10968 ;; Return value:  Size  Location     Type
 10969 ;;                  2    0[BANK0 ] PTR void 
 10970 ;; Registers used:
 10971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10972 ;; Tracked objects:
 10973 ;;		On entry : 0/0
 10974 ;;		On exit  : 0/0
 10975 ;;		Unchanged: 0/0
 10976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10977 ;;      Params:         0       6       0       0       0       0       0       0       0
 10978 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10979 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10980 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10981 ;;Total ram usage:       10 bytes
 10982 ;; Hardware stack levels used:    1
 10983 ;; Hardware stack levels required when called:   11
 10984 ;; This function calls:
 10985 ;;		Nothing
 10986 ;; This function is called by:
 10987 ;;		_moteApp_setLightString
 10988 ;; This function uses a non-reentrant model
 10989 ;;
 10990                           
 10991                           	psect	text20
 10992  0057D6                     __ptext20:
 10993                           	opt stack 0
 10994  0057D6                     _memcpy:
 10995                           	opt stack 15
 10996                           
 10997                           ;incstack = 0
 10998  0057D6  C0B1  F0B7         	movff	memcpy@s1,memcpy@s
 10999  0057DA  C0B2  F0B8         	movff	memcpy@s1+1,memcpy@s+1
 11000  0057DE  C0AF  F0B5         	movff	memcpy@d1,memcpy@d
 11001  0057E2  C0B0  F0B6         	movff	memcpy@d1+1,memcpy@d+1
 11002  0057E6  D011               	goto	l11176
 11003  0057E8                     l11170:
 11004  0057E8  C0B7  FFD9         	movff	memcpy@s,fsr2l
 11005  0057EC  C0B8  FFDA         	movff	memcpy@s+1,fsr2h
 11006  0057F0  C0B5  FFE1         	movff	memcpy@d,fsr1l
 11007  0057F4  C0B6  FFE2         	movff	memcpy@d+1,fsr1h
 11008  0057F8  CFDF FFE7          	movff	indf2,indf1
 11009  0057FC  0100               	movlb	0	; () banked
 11010  0057FE  4BB7               	infsnz	memcpy@s& (0+255),f,b
 11011  005800  2BB8               	incf	(memcpy@s+1)& (0+255),f,b
 11012                           
 11013                           ; BSR set to: 0
 11014  005802  0100               	movlb	0	; () banked
 11015  005804  4BB5               	infsnz	memcpy@d& (0+255),f,b
 11016  005806  2BB6               	incf	(memcpy@d+1)& (0+255),f,b
 11017  005808  D000               	goto	l11176
 11018  00580A                     l11176:
 11019  00580A  0100               	movlb	0	; () banked
 11020  00580C  07B3               	decf	memcpy@n& (0+255),f,b
 11021  00580E  A0D8               	btfss	status,0,c
 11022  005810  07B4               	decf	(memcpy@n+1)& (0+255),f,b
 11023  005812  0100               	movlb	0	; () banked
 11024  005814  29B3               	incf	memcpy@n& (0+255),w,b
 11025  005816  E1E8               	bnz	l11170
 11026  005818  0100               	movlb	0	; () banked
 11027  00581A  29B4               	incf	(memcpy@n+1)& (0+255),w,b
 11028  00581C  A4D8               	btfss	status,2,c
 11029  00581E  D7E4               	goto	l11170
 11030                           
 11031                           ; BSR set to: 0
 11032                           
 11033                           ; BSR set to: 0
 11034                           ;	Return value of _memcpy is never used
 11035  005820  0012               	return		;funcret
 11036  005822                     __end_of_memcpy:
 11037                           	opt stack 0
 11038                           tblptru	equ	0xFF8
 11039                           tblptrh	equ	0xFF7
 11040                           tblptrl	equ	0xFF6
 11041                           tablat	equ	0xFF5
 11042                           prodh	equ	0xFF4
 11043                           prodl	equ	0xFF3
 11044                           intcon	equ	0xFF2
 11045                           postinc0	equ	0xFEE
 11046                           wreg	equ	0xFE8
 11047                           indf1	equ	0xFE7
 11048                           postdec1	equ	0xFE5
 11049                           fsr1h	equ	0xFE2
 11050                           fsr1l	equ	0xFE1
 11051                           indf2	equ	0xFDF
 11052                           fsr2h	equ	0xFDA
 11053                           fsr2l	equ	0xFD9
 11054                           status	equ	0xFD8
 11055                           
 11056 ;; *************** function _moteApp_getLightString *****************
 11057 ;; Defined at:
 11058 ;;		line 1454 in file "../Includes/Board/MOTEapp.c"
 11059 ;; Parameters:    Size  Location     Type
 11060 ;;		None
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;		None
 11063 ;; Return value:  Size  Location     Type
 11064 ;;                  2    0[BANK0 ] PTR unsigned char 
 11065 ;; Registers used:
 11066 ;;		wreg, status,2, status,0
 11067 ;; Tracked objects:
 11068 ;;		On entry : 0/0
 11069 ;;		On exit  : 0/0
 11070 ;;		Unchanged: 0/0
 11071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11072 ;;      Params:         0       2       0       0       0       0       0       0       0
 11073 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11074 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11075 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11076 ;;Total ram usage:        2 bytes
 11077 ;; Hardware stack levels used:    1
 11078 ;; Hardware stack levels required when called:   11
 11079 ;; This function calls:
 11080 ;;		Nothing
 11081 ;; This function is called by:
 11082 ;;		_moteRunningProcess
 11083 ;; This function uses a non-reentrant model
 11084 ;;
 11085                           
 11086                           	psect	text21
 11087  005FC2                     __ptext21:
 11088                           	opt stack 0
 11089  005FC2                     _moteApp_getLightString:
 11090                           	opt stack 17
 11091                           
 11092                           ;MOTEapp.c: 1456: return &storedLight;
 11093                           
 11094                           ; BSR set to: 0
 11095                           ;incstack = 0
 11096  005FC2  0EF6               	movlw	low _storedLight
 11097  005FC4  0100               	movlb	0	; () banked
 11098  005FC6  6FAF               	movwf	?_moteApp_getLightString& (0+255),b
 11099  005FC8  0E01               	movlw	high _storedLight
 11100  005FCA  0100               	movlb	0	; () banked
 11101  005FCC  6FB0               	movwf	(?_moteApp_getLightString+1)& (0+255),b
 11102  005FCE  0012               	return	
 11103                           
 11104                           ; BSR set to: 0
 11105                           
 11106                           ; BSR set to: 0
 11107  005FD0  0012               	return		;funcret
 11108  005FD2                     __end_of_moteApp_getLightString:
 11109                           	opt stack 0
 11110                           tblptru	equ	0xFF8
 11111                           tblptrh	equ	0xFF7
 11112                           tblptrl	equ	0xFF6
 11113                           tablat	equ	0xFF5
 11114                           prodh	equ	0xFF4
 11115                           prodl	equ	0xFF3
 11116                           intcon	equ	0xFF2
 11117                           postinc0	equ	0xFEE
 11118                           wreg	equ	0xFE8
 11119                           indf1	equ	0xFE7
 11120                           postdec1	equ	0xFE5
 11121                           fsr1h	equ	0xFE2
 11122                           fsr1l	equ	0xFE1
 11123                           indf2	equ	0xFDF
 11124                           fsr2h	equ	0xFDA
 11125                           fsr2l	equ	0xFD9
 11126                           status	equ	0xFD8
 11127                           
 11128 ;; *************** function _moteApp_convertSensorValue *****************
 11129 ;; Defined at:
 11130 ;;		line 1345 in file "../Includes/Board/MOTEapp.c"
 11131 ;; Parameters:    Size  Location     Type
 11132 ;;  string          2   17[BANK0 ] PTR const unsigned char 
 11133 ;;		 -> moduleResonseBuffer(64), 
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;  convertedVal    2   23[BANK0 ] unsigned int 
 11136 ;;  index           1   22[BANK0 ] unsigned char 
 11137 ;; Return value:  Size  Location     Type
 11138 ;;                  2   17[BANK0 ] unsigned int 
 11139 ;; Registers used:
 11140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11141 ;; Tracked objects:
 11142 ;;		On entry : 0/0
 11143 ;;		On exit  : 0/0
 11144 ;;		Unchanged: 0/0
 11145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11146 ;;      Params:         0       2       0       0       0       0       0       0       0
 11147 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11148 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11149 ;;      Totals:         0       8       0       0       0       0       0       0       0
 11150 ;;Total ram usage:        8 bytes
 11151 ;; Hardware stack levels used:    1
 11152 ;; Hardware stack levels required when called:   12
 11153 ;; This function calls:
 11154 ;;		___wmul
 11155 ;; This function is called by:
 11156 ;;		_moteHandler
 11157 ;;		_moteRunningProcess
 11158 ;;		_moteApp_testSensors
 11159 ;; This function uses a non-reentrant model
 11160 ;;
 11161                           
 11162                           	psect	text22
 11163  004AC4                     __ptext22:
 11164                           	opt stack 0
 11165  004AC4                     _moteApp_convertSensorValue:
 11166                           	opt stack 16
 11167                           
 11168                           ;MOTEapp.c: 1347: uint8_t index;
 11169                           ;MOTEapp.c: 1348: uint16_t convertedValue = 0;
 11170                           
 11171                           ; BSR set to: 0
 11172                           ;incstack = 0
 11173  004AC4  0E00               	movlw	0
 11174  004AC6  0100               	movlb	0	; () banked
 11175  004AC8  6FC7               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11176  004ACA  0E00               	movlw	0
 11177  004ACC  6FC6               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11178                           
 11179                           ;MOTEapp.c: 1349: for(index = 0; index < 4; index++)
 11180  004ACE  0E00               	movlw	0
 11181  004AD0  0100               	movlb	0	; () banked
 11182  004AD2  6FC5               	movwf	moteApp_convertSensorValue@index& (0+255),b
 11183  004AD4  D040               	goto	l11812
 11184                           
 11185                           ; BSR set to: 0
 11186                           
 11187                           ; BSR set to: 0
 11188  004AD6  D043               	goto	l707
 11189  004AD8                     l11800:
 11190                           
 11191                           ; BSR set to: 0
 11192                           ;MOTEapp.c: 1350: {
 11193                           ;MOTEapp.c: 1351: if (*string != 0)
 11194  004AD8  C0C0  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11195  004ADC  C0C1  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11196  004AE0  50DF               	movf	indf2,w,c
 11197  004AE2  B4D8               	btfsc	status,2,c
 11198  004AE4  D03C               	goto	l707
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;MOTEapp.c: 1352: {
 11202                           ;MOTEapp.c: 1353: if (index != 0)
 11203  004AE6  0100               	movlb	0	; () banked
 11204  004AE8  51C5               	movf	moteApp_convertSensorValue@index& (0+255),w,b
 11205  004AEA  0100               	movlb	0	; () banked
 11206  004AEC  B4D8               	btfsc	status,2,c
 11207  004AEE  D010               	goto	l11806
 11208                           
 11209                           ; BSR set to: 0
 11210                           ;MOTEapp.c: 1354: convertedValue = convertedValue * 10;
 11211  004AF0  C0C6  F0AF         	movff	moteApp_convertSensorValue@convertedValue,___wmul@multiplier
 11212  004AF4  C0C7  F0B0         	movff	moteApp_convertSensorValue@convertedValue+1,___wmul@multiplier+1
 11213  004AF8  0E00               	movlw	0
 11214  004AFA  0100               	movlb	0	; () banked
 11215  004AFC  6FB2               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11216  004AFE  0E0A               	movlw	10
 11217  004B00  6FB1               	movwf	___wmul@multiplicand& (0+255),b
 11218  004B02  EC8D  F02D         	call	___wmul	;wreg free
 11219  004B06  C0AF  F0C6         	movff	?___wmul,moteApp_convertSensorValue@convertedValue
 11220  004B0A  C0B0  F0C7         	movff	?___wmul+1,moteApp_convertSensorValue@convertedValue+1
 11221  004B0E  D000               	goto	l11806
 11222  004B10                     l11806:
 11223                           
 11224                           ;MOTEapp.c: 1356: convertedValue = (*string++ - '0') + convertedValue;
 11225  004B10  C0C0  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11226  004B14  C0C1  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11227  004B18  50DF               	movf	indf2,w,c
 11228  004B1A  0100               	movlb	0	; () banked
 11229  004B1C  6FC2               	movwf	??_moteApp_convertSensorValue& (0+255),b
 11230  004B1E  0100               	movlb	0	; () banked
 11231  004B20  51C2               	movf	??_moteApp_convertSensorValue& (0+255),w,b
 11232  004B22  0100               	movlb	0	; () banked
 11233  004B24  25C6               	addwf	moteApp_convertSensorValue@convertedValue& (0+255),w,b
 11234  004B26  0100               	movlb	0	; () banked
 11235  004B28  6FC3               	movwf	(??_moteApp_convertSensorValue+1)& (0+255),b
 11236  004B2A  0E00               	movlw	0
 11237  004B2C  0100               	movlb	0	; () banked
 11238  004B2E  21C7               	addwfc	(moteApp_convertSensorValue@convertedValue+1)& (0+255),w,b
 11239  004B30  0100               	movlb	0	; () banked
 11240  004B32  6FC4               	movwf	(??_moteApp_convertSensorValue+2)& (0+255),b
 11241  004B34  0ED0               	movlw	208
 11242  004B36  0100               	movlb	0	; () banked
 11243  004B38  25C3               	addwf	(??_moteApp_convertSensorValue+1)& (0+255),w,b
 11244  004B3A  0100               	movlb	0	; () banked
 11245  004B3C  6FC6               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11246  004B3E  0EFF               	movlw	255
 11247  004B40  0100               	movlb	0	; () banked
 11248  004B42  21C4               	addwfc	(??_moteApp_convertSensorValue+2)& (0+255),w,b
 11249  004B44  0100               	movlb	0	; () banked
 11250  004B46  6FC7               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11251                           
 11252                           ; BSR set to: 0
 11253  004B48  0100               	movlb	0	; () banked
 11254  004B4A  4BC0               	infsnz	moteApp_convertSensorValue@string& (0+255),f,b
 11255  004B4C  2BC1               	incf	(moteApp_convertSensorValue@string+1)& (0+255),f,b
 11256                           
 11257                           ;MOTEapp.c: 1357: }
 11258  004B4E  D001               	goto	l11810
 11259                           
 11260                           ; BSR set to: 0
 11261                           ;MOTEapp.c: 1358: else
 11262                           ;MOTEapp.c: 1359: {
 11263                           ;MOTEapp.c: 1360: break;
 11264  004B50  D006               	goto	l707
 11265  004B52                     l11810:
 11266                           
 11267                           ; BSR set to: 0
 11268  004B52  0100               	movlb	0	; () banked
 11269  004B54  2BC5               	incf	moteApp_convertSensorValue@index& (0+255),f,b
 11270  004B56                     l11812:
 11271                           
 11272                           ; BSR set to: 0
 11273  004B56  0E03               	movlw	3
 11274  004B58  0100               	movlb	0	; () banked
 11275  004B5A  65C5               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 11276  004B5C  D7BD               	goto	l11800
 11277  004B5E                     l707:
 11278                           
 11279                           ; BSR set to: 0
 11280                           ;MOTEapp.c: 1361: }
 11281                           ;MOTEapp.c: 1362: }
 11282                           ;MOTEapp.c: 1363: return convertedValue;
 11283  004B5E  C0C6  F0C0         	movff	moteApp_convertSensorValue@convertedValue,?_moteApp_convertSensorValue
 11284  004B62  C0C7  F0C1         	movff	moteApp_convertSensorValue@convertedValue+1,?_moteApp_convertSensorValue+1
 11285                           
 11286                           ; BSR set to: 0
 11287  004B66  0012               	return		;funcret
 11288  004B68                     __end_of_moteApp_convertSensorValue:
 11289                           	opt stack 0
 11290                           tblptru	equ	0xFF8
 11291                           tblptrh	equ	0xFF7
 11292                           tblptrl	equ	0xFF6
 11293                           tablat	equ	0xFF5
 11294                           prodh	equ	0xFF4
 11295                           prodl	equ	0xFF3
 11296                           intcon	equ	0xFF2
 11297                           postinc0	equ	0xFEE
 11298                           wreg	equ	0xFE8
 11299                           indf1	equ	0xFE7
 11300                           postdec1	equ	0xFE5
 11301                           fsr1h	equ	0xFE2
 11302                           fsr1l	equ	0xFE1
 11303                           indf2	equ	0xFDF
 11304                           fsr2h	equ	0xFDA
 11305                           fsr2l	equ	0xFD9
 11306                           status	equ	0xFD8
 11307                           
 11308 ;; *************** function ___wmul *****************
 11309 ;; Defined at:
 11310 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 11311 ;; Parameters:    Size  Location     Type
 11312 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11313 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;  product         2    4[BANK0 ] unsigned int 
 11316 ;; Return value:  Size  Location     Type
 11317 ;;                  2    0[BANK0 ] unsigned int 
 11318 ;; Registers used:
 11319 ;;		wreg, status,2, status,0, prodl, prodh
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11325 ;;      Params:         0       4       0       0       0       0       0       0       0
 11326 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11327 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11328 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11329 ;;Total ram usage:        6 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; Hardware stack levels required when called:   11
 11332 ;; This function calls:
 11333 ;;		Nothing
 11334 ;; This function is called by:
 11335 ;;		_moteApp_convertSensorValue
 11336 ;; This function uses a non-reentrant model
 11337 ;;
 11338                           
 11339                           	psect	text23
 11340  005B1A                     __ptext23:
 11341                           	opt stack 0
 11342  005B1A                     ___wmul:
 11343                           	opt stack 16
 11344                           
 11345                           ; BSR set to: 0
 11346                           ;incstack = 0
 11347  005B1A  0100               	movlb	0	; () banked
 11348  005B1C  51AF               	movf	___wmul@multiplier& (0+255),w,b
 11349  005B1E  0100               	movlb	0	; () banked
 11350  005B20  03B1               	mulwf	___wmul@multiplicand& (0+255),b
 11351  005B22  CFF3 F0B3          	movff	prodl,___wmul@product
 11352  005B26  CFF4 F0B4          	movff	prodh,___wmul@product+1
 11353  005B2A  0100               	movlb	0	; () banked
 11354  005B2C  51AF               	movf	___wmul@multiplier& (0+255),w,b
 11355  005B2E  0100               	movlb	0	; () banked
 11356  005B30  03B2               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11357  005B32  50F3               	movf	prodl,w,c
 11358  005B34  0100               	movlb	0	; () banked
 11359  005B36  27B4               	addwf	(___wmul@product+1)& (0+255),f,b
 11360  005B38  0100               	movlb	0	; () banked
 11361  005B3A  51B0               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11362  005B3C  0100               	movlb	0	; () banked
 11363  005B3E  03B1               	mulwf	___wmul@multiplicand& (0+255),b
 11364  005B40  50F3               	movf	prodl,w,c
 11365  005B42  0100               	movlb	0	; () banked
 11366  005B44  27B4               	addwf	(___wmul@product+1)& (0+255),f,b
 11367                           
 11368                           ; BSR set to: 0
 11369  005B46  C0B3  F0AF         	movff	___wmul@product,?___wmul
 11370  005B4A  C0B4  F0B0         	movff	___wmul@product+1,?___wmul+1
 11371  005B4E  0012               	return	
 11372                           
 11373                           ; BSR set to: 0
 11374                           
 11375                           ; BSR set to: 0
 11376  005B50  0012               	return		;funcret
 11377  005B52                     __end_of___wmul:
 11378                           	opt stack 0
 11379                           tblptru	equ	0xFF8
 11380                           tblptrh	equ	0xFF7
 11381                           tblptrl	equ	0xFF6
 11382                           tablat	equ	0xFF5
 11383                           prodh	equ	0xFF4
 11384                           prodl	equ	0xFF3
 11385                           intcon	equ	0xFF2
 11386                           postinc0	equ	0xFEE
 11387                           wreg	equ	0xFE8
 11388                           indf1	equ	0xFE7
 11389                           postdec1	equ	0xFE5
 11390                           fsr1h	equ	0xFE2
 11391                           fsr1l	equ	0xFE1
 11392                           indf2	equ	0xFDF
 11393                           fsr2h	equ	0xFDA
 11394                           fsr2l	equ	0xFD9
 11395                           status	equ	0xFD8
 11396                           
 11397 ;; *************** function _moteApp_clearBuffers *****************
 11398 ;; Defined at:
 11399 ;;		line 1285 in file "../Includes/Board/MOTEapp.c"
 11400 ;; Parameters:    Size  Location     Type
 11401 ;;		None
 11402 ;; Auto vars:     Size  Location     Type
 11403 ;;  counter         1    3[BANK0 ] unsigned char 
 11404 ;;  counter         1    2[BANK0 ] unsigned char 
 11405 ;;  counter         1    1[BANK0 ] unsigned char 
 11406 ;;  counter         1    0[BANK0 ] unsigned char 
 11407 ;; Return value:  Size  Location     Type
 11408 ;;		None               void
 11409 ;; Registers used:
 11410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11411 ;; Tracked objects:
 11412 ;;		On entry : 0/0
 11413 ;;		On exit  : 0/0
 11414 ;;		Unchanged: 0/0
 11415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11416 ;;      Params:         0       0       0       0       0       0       0       0       0
 11417 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11418 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11419 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11420 ;;Total ram usage:        4 bytes
 11421 ;; Hardware stack levels used:    1
 11422 ;; Hardware stack levels required when called:   11
 11423 ;; This function calls:
 11424 ;;		Nothing
 11425 ;; This function is called by:
 11426 ;;		_moteRunningProcess
 11427 ;; This function uses a non-reentrant model
 11428 ;;
 11429                           
 11430                           	psect	text24
 11431  004532                     __ptext24:
 11432                           	opt stack 0
 11433  004532                     _moteApp_clearBuffers:
 11434                           	opt stack 17
 11435                           
 11436                           ;MOTEapp.c: 1287: for (uint8_t counter = 0; counter < 3; counter++)
 11437                           
 11438                           ; BSR set to: 0
 11439                           ;incstack = 0
 11440  004532  0E00               	movlw	0
 11441  004534  0100               	movlb	0	; () banked
 11442  004536  6FAF               	movwf	moteApp_clearBuffers@counter& (0+255),b
 11443  004538                     l11870:
 11444                           
 11445                           ; BSR set to: 0
 11446  004538  0E02               	movlw	2
 11447  00453A  0100               	movlb	0	; () banked
 11448  00453C  65AF               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 11449  00453E  D001               	goto	l11874
 11450                           
 11451                           ; BSR set to: 0
 11452  004540  D00E               	goto	l11880
 11453  004542                     l11874:
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;MOTEapp.c: 1288: {
 11457                           ;MOTEapp.c: 1289: responsePortNum[counter] = 0;
 11458  004542  0100               	movlb	0	; () banked
 11459  004544  51AF               	movf	moteApp_clearBuffers@counter& (0+255),w,b
 11460  004546  0D01               	mullw	1
 11461  004548  0EAA               	movlw	low _responsePortNum
 11462  00454A  24F3               	addwf	prodl,w,c
 11463  00454C  6ED9               	movwf	fsr2l,c
 11464  00454E  0E00               	movlw	high _responsePortNum
 11465  004550  20F4               	addwfc	prodh,w,c
 11466  004552  6EDA               	movwf	fsr2h,c
 11467  004554  0E00               	movlw	0
 11468  004556  6EDF               	movwf	indf2,c
 11469                           
 11470                           ; BSR set to: 0
 11471  004558  0100               	movlb	0	; () banked
 11472  00455A  2BAF               	incf	moteApp_clearBuffers@counter& (0+255),f,b
 11473  00455C  D7ED               	goto	l11870
 11474  00455E                     l11880:
 11475                           
 11476                           ; BSR set to: 0
 11477                           ;MOTEapp.c: 1290: }
 11478                           ;MOTEapp.c: 1291: for (uint8_t counter = 0; counter < 34; counter++)
 11479  00455E  0E00               	movlw	0
 11480  004560  0100               	movlb	0	; () banked
 11481  004562  6FB0               	movwf	moteApp_clearBuffers@counter_1905& (0+255),b
 11482  004564                     l11882:
 11483                           
 11484                           ; BSR set to: 0
 11485  004564  0E21               	movlw	33
 11486  004566  0100               	movlb	0	; () banked
 11487  004568  65B0               	cpfsgt	moteApp_clearBuffers@counter_1905& (0+255),b
 11488  00456A  D001               	goto	l11886
 11489                           
 11490                           ; BSR set to: 0
 11491  00456C  D00E               	goto	l11892
 11492  00456E                     l11886:
 11493                           
 11494                           ; BSR set to: 0
 11495                           ;MOTEapp.c: 1292: {
 11496                           ;MOTEapp.c: 1293: responseId[counter] = 0;
 11497  00456E  0100               	movlb	0	; () banked
 11498  004570  51B0               	movf	moteApp_clearBuffers@counter_1905& (0+255),w,b
 11499  004572  0D01               	mullw	1
 11500  004574  0E10               	movlw	low _responseId
 11501  004576  24F3               	addwf	prodl,w,c
 11502  004578  6ED9               	movwf	fsr2l,c
 11503  00457A  0E01               	movlw	high _responseId
 11504  00457C  20F4               	addwfc	prodh,w,c
 11505  00457E  6EDA               	movwf	fsr2h,c
 11506  004580  0E00               	movlw	0
 11507  004582  6EDF               	movwf	indf2,c
 11508                           
 11509                           ; BSR set to: 0
 11510  004584  0100               	movlb	0	; () banked
 11511  004586  2BB0               	incf	moteApp_clearBuffers@counter_1905& (0+255),f,b
 11512  004588  D7ED               	goto	l11882
 11513  00458A                     l11892:
 11514                           
 11515                           ; BSR set to: 0
 11516                           ;MOTEapp.c: 1294: }
 11517                           ;MOTEapp.c: 1295: for (uint8_t counter = 0; counter < 32; counter++)
 11518  00458A  0E00               	movlw	0
 11519  00458C  0100               	movlb	0	; () banked
 11520  00458E  6FB1               	movwf	moteApp_clearBuffers@counter_1906& (0+255),b
 11521  004590                     l11894:
 11522                           
 11523                           ; BSR set to: 0
 11524  004590  0E1F               	movlw	31
 11525  004592  0100               	movlb	0	; () banked
 11526  004594  65B1               	cpfsgt	moteApp_clearBuffers@counter_1906& (0+255),b
 11527  004596  D001               	goto	l11898
 11528                           
 11529                           ; BSR set to: 0
 11530  004598  D00E               	goto	l11904
 11531  00459A                     l11898:
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;MOTEapp.c: 1296: {
 11535                           ;MOTEapp.c: 1297: responseData[counter] = 0;
 11536  00459A  0100               	movlb	0	; () banked
 11537  00459C  51B1               	movf	moteApp_clearBuffers@counter_1906& (0+255),w,b
 11538  00459E  0D01               	mullw	1
 11539  0045A0  0EA8               	movlw	low _responseData
 11540  0045A2  24F3               	addwf	prodl,w,c
 11541  0045A4  6ED9               	movwf	fsr2l,c
 11542  0045A6  0E01               	movlw	high _responseData
 11543  0045A8  20F4               	addwfc	prodh,w,c
 11544  0045AA  6EDA               	movwf	fsr2h,c
 11545  0045AC  0E00               	movlw	0
 11546  0045AE  6EDF               	movwf	indf2,c
 11547                           
 11548                           ; BSR set to: 0
 11549  0045B0  0100               	movlb	0	; () banked
 11550  0045B2  2BB1               	incf	moteApp_clearBuffers@counter_1906& (0+255),f,b
 11551  0045B4  D7ED               	goto	l11894
 11552  0045B6                     l11904:
 11553                           
 11554                           ; BSR set to: 0
 11555                           ;MOTEapp.c: 1298: }
 11556                           ;MOTEapp.c: 1299: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
 11557  0045B6  0E00               	movlw	0
 11558  0045B8  0100               	movlb	0	; () banked
 11559  0045BA  6FB2               	movwf	moteApp_clearBuffers@counter_1907& (0+255),b
 11560                           
 11561                           ; BSR set to: 0
 11562  0045BC  0E0F               	movlw	15
 11563  0045BE  0100               	movlb	0	; () banked
 11564  0045C0  65B2               	cpfsgt	moteApp_clearBuffers@counter_1907& (0+255),b
 11565  0045C2  D002               	goto	l11910
 11566  0045C4  0012               	return	
 11567                           
 11568                           ; BSR set to: 0
 11569  0045C6  0012               	return	
 11570  0045C8                     l11910:
 11571                           
 11572                           ; BSR set to: 0
 11573                           ;MOTEapp.c: 1300: {
 11574                           ;MOTEapp.c: 1301: dataBuffer[counter] = 0;
 11575  0045C8  0100               	movlb	0	; () banked
 11576  0045CA  51B2               	movf	moteApp_clearBuffers@counter_1907& (0+255),w,b
 11577  0045CC  0D01               	mullw	1
 11578  0045CE  0EC8               	movlw	low _dataBuffer
 11579  0045D0  24F3               	addwf	prodl,w,c
 11580  0045D2  6ED9               	movwf	fsr2l,c
 11581  0045D4  0E01               	movlw	high _dataBuffer
 11582  0045D6  20F4               	addwfc	prodh,w,c
 11583  0045D8  6EDA               	movwf	fsr2h,c
 11584  0045DA  0E00               	movlw	0
 11585  0045DC  6EDF               	movwf	indf2,c
 11586                           
 11587                           ; BSR set to: 0
 11588  0045DE  0100               	movlb	0	; () banked
 11589  0045E0  2BB2               	incf	moteApp_clearBuffers@counter_1907& (0+255),f,b
 11590                           
 11591                           ; BSR set to: 0
 11592  0045E2  0E0F               	movlw	15
 11593  0045E4  0100               	movlb	0	; () banked
 11594  0045E6  65B2               	cpfsgt	moteApp_clearBuffers@counter_1907& (0+255),b
 11595  0045E8  D7EF               	goto	l11910
 11596  0045EA  0012               	return	
 11597                           
 11598                           ; BSR set to: 0
 11599                           
 11600                           ; BSR set to: 0
 11601  0045EC  0012               	return		;funcret
 11602  0045EE                     __end_of_moteApp_clearBuffers:
 11603                           	opt stack 0
 11604                           tblptru	equ	0xFF8
 11605                           tblptrh	equ	0xFF7
 11606                           tblptrl	equ	0xFF6
 11607                           tablat	equ	0xFF5
 11608                           prodh	equ	0xFF4
 11609                           prodl	equ	0xFF3
 11610                           intcon	equ	0xFF2
 11611                           postinc0	equ	0xFEE
 11612                           wreg	equ	0xFE8
 11613                           indf1	equ	0xFE7
 11614                           postdec1	equ	0xFE5
 11615                           fsr1h	equ	0xFE2
 11616                           fsr1l	equ	0xFE1
 11617                           indf2	equ	0xFDF
 11618                           fsr2h	equ	0xFDA
 11619                           fsr2l	equ	0xFD9
 11620                           status	equ	0xFD8
 11621                           
 11622 ;; *************** function _moteApp_addToDataBuffer *****************
 11623 ;; Defined at:
 11624 ;;		line 1327 in file "../Includes/Board/MOTEapp.c"
 11625 ;; Parameters:    Size  Location     Type
 11626 ;;  string          2   17[BANK0 ] PTR const unsigned char 
 11627 ;;		 -> storedLight(5), moduleResonseBuffer(64), 
 11628 ;;  bufferLocati    1   19[BANK0 ] unsigned char 
 11629 ;; Auto vars:     Size  Location     Type
 11630 ;;  index           1   20[BANK0 ] unsigned char 
 11631 ;; Return value:  Size  Location     Type
 11632 ;;                  1    wreg      unsigned char 
 11633 ;; Registers used:
 11634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11635 ;; Tracked objects:
 11636 ;;		On entry : 0/0
 11637 ;;		On exit  : 0/0
 11638 ;;		Unchanged: 0/0
 11639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11640 ;;      Params:         0       3       0       0       0       0       0       0       0
 11641 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11642 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11643 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11644 ;;Total ram usage:        4 bytes
 11645 ;; Hardware stack levels used:    1
 11646 ;; Hardware stack levels required when called:   11
 11647 ;; This function calls:
 11648 ;;		Nothing
 11649 ;; This function is called by:
 11650 ;;		_moteRunningProcess
 11651 ;; This function uses a non-reentrant model
 11652 ;;
 11653                           
 11654                           	psect	text25
 11655  005234                     __ptext25:
 11656                           	opt stack 0
 11657  005234                     _moteApp_addToDataBuffer:
 11658                           	opt stack 17
 11659                           
 11660                           ;MOTEapp.c: 1329: uint8_t index;
 11661                           ;MOTEapp.c: 1330: for(index = 0; index < 6; index++)
 11662                           
 11663                           ; BSR set to: 0
 11664                           ;incstack = 0
 11665  005234  0E00               	movlw	0
 11666  005236  0100               	movlb	0	; () banked
 11667  005238  6FC3               	movwf	moteApp_addToDataBuffer@index& (0+255),b
 11668  00523A                     l11944:
 11669                           
 11670                           ; BSR set to: 0
 11671  00523A  0E05               	movlw	5
 11672  00523C  0100               	movlb	0	; () banked
 11673  00523E  65C3               	cpfsgt	moteApp_addToDataBuffer@index& (0+255),b
 11674  005240  D001               	goto	l11948
 11675                           
 11676                           ; BSR set to: 0
 11677  005242  D02B               	goto	l11962
 11678  005244                     l11948:
 11679                           
 11680                           ; BSR set to: 0
 11681                           ;MOTEapp.c: 1331: {
 11682                           ;MOTEapp.c: 1332: if (*string != 0)
 11683  005244  C0C0  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 11684  005248  C0C1  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 11685  00524C  50DF               	movf	indf2,w,c
 11686  00524E  B4D8               	btfsc	status,2,c
 11687  005250  D015               	goto	l11956
 11688                           
 11689                           ; BSR set to: 0
 11690                           ;MOTEapp.c: 1333: {
 11691                           ;MOTEapp.c: 1334: dataBuffer[bufferLocation++] = *string++;
 11692  005252  C0C0  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 11693  005256  C0C1  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 11694  00525A  0100               	movlb	0	; () banked
 11695  00525C  51C2               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11696  00525E  0D01               	mullw	1
 11697  005260  0EC8               	movlw	low _dataBuffer
 11698  005262  24F3               	addwf	prodl,w,c
 11699  005264  6EE1               	movwf	fsr1l,c
 11700  005266  0E01               	movlw	high _dataBuffer
 11701  005268  20F4               	addwfc	prodh,w,c
 11702  00526A  6EE2               	movwf	fsr1h,c
 11703  00526C  CFDF FFE7          	movff	indf2,indf1
 11704                           
 11705                           ; BSR set to: 0
 11706  005270  0100               	movlb	0	; () banked
 11707  005272  4BC0               	infsnz	moteApp_addToDataBuffer@string& (0+255),f,b
 11708  005274  2BC1               	incf	(moteApp_addToDataBuffer@string+1)& (0+255),f,b
 11709                           
 11710                           ; BSR set to: 0
 11711  005276  0100               	movlb	0	; () banked
 11712  005278  2BC2               	incf	moteApp_addToDataBuffer@bufferLocation& (0+255),f,b
 11713                           
 11714                           ;MOTEapp.c: 1335: }
 11715  00527A  D00C               	goto	l11958
 11716  00527C                     l11956:
 11717                           
 11718                           ; BSR set to: 0
 11719                           ;MOTEapp.c: 1336: else
 11720                           ;MOTEapp.c: 1337: {
 11721                           ;MOTEapp.c: 1338: dataBuffer[bufferLocation] = 0x20;
 11722  00527C  0100               	movlb	0	; () banked
 11723  00527E  51C2               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11724  005280  0D01               	mullw	1
 11725  005282  0EC8               	movlw	low _dataBuffer
 11726  005284  24F3               	addwf	prodl,w,c
 11727  005286  6ED9               	movwf	fsr2l,c
 11728  005288  0E01               	movlw	high _dataBuffer
 11729  00528A  20F4               	addwfc	prodh,w,c
 11730  00528C  6EDA               	movwf	fsr2h,c
 11731  00528E  0E20               	movlw	32
 11732  005290  6EDF               	movwf	indf2,c
 11733                           
 11734                           ;MOTEapp.c: 1339: break;
 11735  005292  D003               	goto	l11962
 11736  005294                     l11958:
 11737                           
 11738                           ; BSR set to: 0
 11739  005294  0100               	movlb	0	; () banked
 11740  005296  2BC3               	incf	moteApp_addToDataBuffer@index& (0+255),f,b
 11741  005298  D7D0               	goto	l11944
 11742  00529A                     l11962:
 11743                           
 11744                           ; BSR set to: 0
 11745                           ;MOTEapp.c: 1340: }
 11746                           ;MOTEapp.c: 1341: }
 11747                           ;MOTEapp.c: 1342: return index;
 11748  00529A  0100               	movlb	0	; () banked
 11749  00529C  51C3               	movf	moteApp_addToDataBuffer@index& (0+255),w,b
 11750  00529E  0012               	return	
 11751                           
 11752                           ; BSR set to: 0
 11753                           
 11754                           ; BSR set to: 0
 11755  0052A0  0012               	return		;funcret
 11756  0052A2                     __end_of_moteApp_addToDataBuffer:
 11757                           	opt stack 0
 11758                           tblptru	equ	0xFF8
 11759                           tblptrh	equ	0xFF7
 11760                           tblptrl	equ	0xFF6
 11761                           tablat	equ	0xFF5
 11762                           prodh	equ	0xFF4
 11763                           prodl	equ	0xFF3
 11764                           intcon	equ	0xFF2
 11765                           postinc0	equ	0xFEE
 11766                           wreg	equ	0xFE8
 11767                           indf1	equ	0xFE7
 11768                           postdec1	equ	0xFE5
 11769                           fsr1h	equ	0xFE2
 11770                           fsr1l	equ	0xFE1
 11771                           indf2	equ	0xFDF
 11772                           fsr2h	equ	0xFDA
 11773                           fsr2l	equ	0xFD9
 11774                           status	equ	0xFD8
 11775                           
 11776 ;; *************** function _moteApp_add8bToDataBuffer *****************
 11777 ;; Defined at:
 11778 ;;		line 1305 in file "../Includes/Board/MOTEapp.c"
 11779 ;; Parameters:    Size  Location     Type
 11780 ;;  number          1    wreg     unsigned char 
 11781 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
 11782 ;; Auto vars:     Size  Location     Type
 11783 ;;  number          1    9[BANK0 ] unsigned char 
 11784 ;; Return value:  Size  Location     Type
 11785 ;;		None               void
 11786 ;; Registers used:
 11787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11788 ;; Tracked objects:
 11789 ;;		On entry : 0/0
 11790 ;;		On exit  : 0/0
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11793 ;;      Params:         0       1       0       0       0       0       0       0       0
 11794 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11795 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11796 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11797 ;;Total ram usage:        4 bytes
 11798 ;; Hardware stack levels used:    1
 11799 ;; Hardware stack levels required when called:   12
 11800 ;; This function calls:
 11801 ;;		___awmod
 11802 ;;		___lbdiv
 11803 ;; This function is called by:
 11804 ;;		_moteRunningProcess
 11805 ;; This function uses a non-reentrant model
 11806 ;;
 11807                           
 11808                           	psect	text26
 11809  003E90                     __ptext26:
 11810                           	opt stack 0
 11811  003E90                     _moteApp_add8bToDataBuffer:
 11812                           	opt stack 16
 11813                           
 11814                           ; BSR set to: 0
 11815                           ;incstack = 0
 11816                           ;moteApp_add8bToDataBuffer@number stored from wreg
 11817  003E90  0100               	movlb	0	; () banked
 11818  003E92  6FB8               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11819                           
 11820                           ; BSR set to: 0
 11821                           ;MOTEapp.c: 1307: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 11822  003E94  0100               	movlb	0	; () banked
 11823  003E96  51B5               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11824  003E98  0100               	movlb	0	; () banked
 11825  003E9A  6FB6               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11826  003E9C  6BB7               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11827  003E9E  0E02               	movlw	2
 11828  003EA0  0100               	movlb	0	; () banked
 11829  003EA2  27B6               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11830  003EA4  0E00               	movlw	0
 11831  003EA6  23B7               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11832  003EA8  0EC8               	movlw	low _dataBuffer
 11833  003EAA  0100               	movlb	0	; () banked
 11834  003EAC  25B6               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11835  003EAE  6ED9               	movwf	fsr2l,c
 11836  003EB0  0E01               	movlw	high _dataBuffer
 11837  003EB2  0100               	movlb	0	; () banked
 11838  003EB4  21B7               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11839  003EB6  6EDA               	movwf	fsr2h,c
 11840  003EB8  C0B8  F0AF         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11841  003EBC  0100               	movlb	0	; () banked
 11842  003EBE  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
 11843  003EC0  0E00               	movlw	0
 11844  003EC2  0100               	movlb	0	; () banked
 11845  003EC4  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
 11846  003EC6  0E0A               	movlw	10
 11847  003EC8  6FB1               	movwf	___awmod@divisor& (0+255),b
 11848  003ECA  ECB0  F023         	call	___awmod	;wreg free
 11849  003ECE  0100               	movlb	0	; () banked
 11850  003ED0  51AF               	movf	?___awmod& (0+255),w,b
 11851  003ED2  0F30               	addlw	48
 11852  003ED4  6EDF               	movwf	indf2,c
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;MOTEapp.c: 1308: number /= 10;
 11856  003ED6  0E0A               	movlw	10
 11857  003ED8  0100               	movlb	0	; () banked
 11858  003EDA  6FAF               	movwf	___lbdiv@divisor& (0+255),b
 11859  003EDC  0100               	movlb	0	; () banked
 11860  003EDE  51B8               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11861  003EE0  ECBE  F029         	call	___lbdiv
 11862  003EE4  0100               	movlb	0	; () banked
 11863  003EE6  6FB8               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;MOTEapp.c: 1309: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 11867  003EE8  0100               	movlb	0	; () banked
 11868  003EEA  51B5               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11869  003EEC  0100               	movlb	0	; () banked
 11870  003EEE  6FB6               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11871  003EF0  6BB7               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11872  003EF2  0E01               	movlw	1
 11873  003EF4  0100               	movlb	0	; () banked
 11874  003EF6  27B6               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11875  003EF8  0E00               	movlw	0
 11876  003EFA  23B7               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11877  003EFC  0EC8               	movlw	low _dataBuffer
 11878  003EFE  0100               	movlb	0	; () banked
 11879  003F00  25B6               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11880  003F02  6ED9               	movwf	fsr2l,c
 11881  003F04  0E01               	movlw	high _dataBuffer
 11882  003F06  0100               	movlb	0	; () banked
 11883  003F08  21B7               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11884  003F0A  6EDA               	movwf	fsr2h,c
 11885  003F0C  C0B8  F0AF         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11886  003F10  0100               	movlb	0	; () banked
 11887  003F12  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
 11888  003F14  0E00               	movlw	0
 11889  003F16  0100               	movlb	0	; () banked
 11890  003F18  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
 11891  003F1A  0E0A               	movlw	10
 11892  003F1C  6FB1               	movwf	___awmod@divisor& (0+255),b
 11893  003F1E  ECB0  F023         	call	___awmod	;wreg free
 11894  003F22  0100               	movlb	0	; () banked
 11895  003F24  51AF               	movf	?___awmod& (0+255),w,b
 11896  003F26  0F30               	addlw	48
 11897  003F28  6EDF               	movwf	indf2,c
 11898                           
 11899                           ;MOTEapp.c: 1310: number /= 10;
 11900  003F2A  0E0A               	movlw	10
 11901  003F2C  0100               	movlb	0	; () banked
 11902  003F2E  6FAF               	movwf	___lbdiv@divisor& (0+255),b
 11903  003F30  0100               	movlb	0	; () banked
 11904  003F32  51B8               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11905  003F34  ECBE  F029         	call	___lbdiv
 11906  003F38  0100               	movlb	0	; () banked
 11907  003F3A  6FB8               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11908                           
 11909                           ; BSR set to: 0
 11910                           ;MOTEapp.c: 1311: dataBuffer[bufferLocation] = '0' + (number % 10);
 11911  003F3C  0100               	movlb	0	; () banked
 11912  003F3E  51B5               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11913  003F40  0D01               	mullw	1
 11914  003F42  0EC8               	movlw	low _dataBuffer
 11915  003F44  24F3               	addwf	prodl,w,c
 11916  003F46  6ED9               	movwf	fsr2l,c
 11917  003F48  0E01               	movlw	high _dataBuffer
 11918  003F4A  20F4               	addwfc	prodh,w,c
 11919  003F4C  6EDA               	movwf	fsr2h,c
 11920  003F4E  C0B8  F0AF         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11921  003F52  0100               	movlb	0	; () banked
 11922  003F54  6BB0               	clrf	(___awmod@dividend+1)& (0+255),b
 11923  003F56  0E00               	movlw	0
 11924  003F58  0100               	movlb	0	; () banked
 11925  003F5A  6FB2               	movwf	(___awmod@divisor+1)& (0+255),b
 11926  003F5C  0E0A               	movlw	10
 11927  003F5E  6FB1               	movwf	___awmod@divisor& (0+255),b
 11928  003F60  ECB0  F023         	call	___awmod	;wreg free
 11929  003F64  0100               	movlb	0	; () banked
 11930  003F66  51AF               	movf	?___awmod& (0+255),w,b
 11931  003F68  0F30               	addlw	48
 11932  003F6A  6EDF               	movwf	indf2,c
 11933                           
 11934                           ; BSR set to: 0
 11935  003F6C  0012               	return		;funcret
 11936  003F6E                     __end_of_moteApp_add8bToDataBuffer:
 11937                           	opt stack 0
 11938                           tblptru	equ	0xFF8
 11939                           tblptrh	equ	0xFF7
 11940                           tblptrl	equ	0xFF6
 11941                           tablat	equ	0xFF5
 11942                           prodh	equ	0xFF4
 11943                           prodl	equ	0xFF3
 11944                           intcon	equ	0xFF2
 11945                           postinc0	equ	0xFEE
 11946                           wreg	equ	0xFE8
 11947                           indf1	equ	0xFE7
 11948                           postdec1	equ	0xFE5
 11949                           fsr1h	equ	0xFE2
 11950                           fsr1l	equ	0xFE1
 11951                           indf2	equ	0xFDF
 11952                           fsr2h	equ	0xFDA
 11953                           fsr2l	equ	0xFD9
 11954                           status	equ	0xFD8
 11955                           
 11956 ;; *************** function ___lbdiv *****************
 11957 ;; Defined at:
 11958 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbdiv.c"
 11959 ;; Parameters:    Size  Location     Type
 11960 ;;  dividend        1    wreg     unsigned char 
 11961 ;;  divisor         1    0[BANK0 ] unsigned char 
 11962 ;; Auto vars:     Size  Location     Type
 11963 ;;  dividend        1    1[BANK0 ] unsigned char 
 11964 ;;  quotient        1    3[BANK0 ] unsigned char 
 11965 ;;  counter         1    2[BANK0 ] unsigned char 
 11966 ;; Return value:  Size  Location     Type
 11967 ;;                  1    wreg      unsigned char 
 11968 ;; Registers used:
 11969 ;;		wreg, status,2, status,0
 11970 ;; Tracked objects:
 11971 ;;		On entry : 0/0
 11972 ;;		On exit  : 0/0
 11973 ;;		Unchanged: 0/0
 11974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11975 ;;      Params:         0       1       0       0       0       0       0       0       0
 11976 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11977 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11978 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11979 ;;Total ram usage:        4 bytes
 11980 ;; Hardware stack levels used:    1
 11981 ;; Hardware stack levels required when called:   11
 11982 ;; This function calls:
 11983 ;;		Nothing
 11984 ;; This function is called by:
 11985 ;;		_moteApp_add8bToDataBuffer
 11986 ;;		_oled_putUint8
 11987 ;;		_oled_putint8
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           	psect	text27
 11992  00537C                     __ptext27:
 11993                           	opt stack 0
 11994  00537C                     ___lbdiv:
 11995                           	opt stack 16
 11996                           
 11997                           ; BSR set to: 0
 11998                           ;incstack = 0
 11999                           ;___lbdiv@dividend stored from wreg
 12000  00537C  0100               	movlb	0	; () banked
 12001  00537E  6FB0               	movwf	___lbdiv@dividend& (0+255),b
 12002                           
 12003                           ; BSR set to: 0
 12004  005380  0E00               	movlw	0
 12005  005382  0100               	movlb	0	; () banked
 12006  005384  6FB2               	movwf	___lbdiv@quotient& (0+255),b
 12007                           
 12008                           ; BSR set to: 0
 12009  005386  0100               	movlb	0	; () banked
 12010  005388  51AF               	movf	___lbdiv@divisor& (0+255),w,b
 12011  00538A  0100               	movlb	0	; () banked
 12012  00538C  B4D8               	btfsc	status,2,c
 12013  00538E  D026               	goto	l11694
 12014                           
 12015                           ; BSR set to: 0
 12016  005390  0E01               	movlw	1
 12017  005392  0100               	movlb	0	; () banked
 12018  005394  6FB1               	movwf	___lbdiv@counter& (0+255),b
 12019  005396  D006               	goto	l11682
 12020  005398                     l11678:
 12021                           
 12022                           ; BSR set to: 0
 12023  005398  0100               	movlb	0	; () banked
 12024  00539A  90D8               	bcf	status,0,c
 12025  00539C  37AF               	rlcf	___lbdiv@divisor& (0+255),f,b
 12026                           
 12027                           ; BSR set to: 0
 12028  00539E  0100               	movlb	0	; () banked
 12029  0053A0  2BB1               	incf	___lbdiv@counter& (0+255),f,b
 12030  0053A2  D000               	goto	l11682
 12031  0053A4                     l11682:
 12032                           
 12033                           ; BSR set to: 0
 12034  0053A4  0100               	movlb	0	; () banked
 12035  0053A6  BFAF               	btfsc	___lbdiv@divisor& (0+255),7,b
 12036  0053A8  D002               	goto	l11684
 12037  0053AA  D7F6               	goto	l11678
 12038                           
 12039                           ; BSR set to: 0
 12040  0053AC  D000               	goto	l11684
 12041  0053AE                     l11684:
 12042                           
 12043                           ; BSR set to: 0
 12044  0053AE  0100               	movlb	0	; () banked
 12045  0053B0  90D8               	bcf	status,0,c
 12046  0053B2  37B2               	rlcf	___lbdiv@quotient& (0+255),f,b
 12047  0053B4  0100               	movlb	0	; () banked
 12048  0053B6  51AF               	movf	___lbdiv@divisor& (0+255),w,b
 12049  0053B8  0100               	movlb	0	; () banked
 12050  0053BA  5DB0               	subwf	___lbdiv@dividend& (0+255),w,b
 12051  0053BC  A0D8               	btfss	status,0,c
 12052  0053BE  D007               	goto	l11690
 12053                           
 12054                           ; BSR set to: 0
 12055  0053C0  0100               	movlb	0	; () banked
 12056  0053C2  51AF               	movf	___lbdiv@divisor& (0+255),w,b
 12057  0053C4  0100               	movlb	0	; () banked
 12058  0053C6  5FB0               	subwf	___lbdiv@dividend& (0+255),f,b
 12059                           
 12060                           ; BSR set to: 0
 12061  0053C8  0100               	movlb	0	; () banked
 12062  0053CA  81B2               	bsf	___lbdiv@quotient& (0+255),0,b
 12063  0053CC  D000               	goto	l11690
 12064  0053CE                     l11690:
 12065                           
 12066                           ; BSR set to: 0
 12067  0053CE  0100               	movlb	0	; () banked
 12068  0053D0  90D8               	bcf	status,0,c
 12069  0053D2  33AF               	rrcf	___lbdiv@divisor& (0+255),f,b
 12070                           
 12071                           ; BSR set to: 0
 12072  0053D4  0100               	movlb	0	; () banked
 12073  0053D6  2FB1               	decfsz	___lbdiv@counter& (0+255),f,b
 12074  0053D8  D7EA               	goto	l11684
 12075                           
 12076                           ; BSR set to: 0
 12077  0053DA  D000               	goto	l11694
 12078  0053DC                     l11694:
 12079                           
 12080                           ; BSR set to: 0
 12081  0053DC  0100               	movlb	0	; () banked
 12082  0053DE  51B2               	movf	___lbdiv@quotient& (0+255),w,b
 12083  0053E0  0012               	return	
 12084                           
 12085                           ; BSR set to: 0
 12086                           
 12087                           ; BSR set to: 0
 12088  0053E2  0012               	return		;funcret
 12089  0053E4                     __end_of___lbdiv:
 12090                           	opt stack 0
 12091                           tblptru	equ	0xFF8
 12092                           tblptrh	equ	0xFF7
 12093                           tblptrl	equ	0xFF6
 12094                           tablat	equ	0xFF5
 12095                           prodh	equ	0xFF4
 12096                           prodl	equ	0xFF3
 12097                           intcon	equ	0xFF2
 12098                           postinc0	equ	0xFEE
 12099                           wreg	equ	0xFE8
 12100                           indf1	equ	0xFE7
 12101                           postdec1	equ	0xFE5
 12102                           fsr1h	equ	0xFE2
 12103                           fsr1l	equ	0xFE1
 12104                           indf2	equ	0xFDF
 12105                           fsr2h	equ	0xFDA
 12106                           fsr2l	equ	0xFD9
 12107                           status	equ	0xFD8
 12108                           
 12109 ;; *************** function ___awmod *****************
 12110 ;; Defined at:
 12111 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 12112 ;; Parameters:    Size  Location     Type
 12113 ;;  dividend        2    0[BANK0 ] int 
 12114 ;;  divisor         2    2[BANK0 ] int 
 12115 ;; Auto vars:     Size  Location     Type
 12116 ;;  sign            1    5[BANK0 ] unsigned char 
 12117 ;;  counter         1    4[BANK0 ] unsigned char 
 12118 ;; Return value:  Size  Location     Type
 12119 ;;                  2    0[BANK0 ] int 
 12120 ;; Registers used:
 12121 ;;		wreg, status,2, status,0
 12122 ;; Tracked objects:
 12123 ;;		On entry : 0/0
 12124 ;;		On exit  : 0/0
 12125 ;;		Unchanged: 0/0
 12126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12127 ;;      Params:         0       4       0       0       0       0       0       0       0
 12128 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12129 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12130 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12131 ;;Total ram usage:        6 bytes
 12132 ;; Hardware stack levels used:    1
 12133 ;; Hardware stack levels required when called:   11
 12134 ;; This function calls:
 12135 ;;		Nothing
 12136 ;; This function is called by:
 12137 ;;		_moteApp_add8bToDataBuffer
 12138 ;;		_oled_putUint8
 12139 ;;		_oled_putint8
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143                           	psect	text28
 12144  004760                     __ptext28:
 12145                           	opt stack 0
 12146  004760                     ___awmod:
 12147                           	opt stack 16
 12148                           
 12149                           ; BSR set to: 0
 12150                           ;incstack = 0
 12151  004760  0E00               	movlw	0
 12152  004762  0100               	movlb	0	; () banked
 12153  004764  6FB4               	movwf	___awmod@sign& (0+255),b
 12154                           
 12155                           ; BSR set to: 0
 12156  004766  0100               	movlb	0	; () banked
 12157  004768  AFB0               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12158  00476A  D009               	goto	l11600
 12159                           
 12160                           ; BSR set to: 0
 12161  00476C  0100               	movlb	0	; () banked
 12162  00476E  6DAF               	negf	___awmod@dividend& (0+255),b
 12163  004770  1FB0               	comf	(___awmod@dividend+1)& (0+255),f,b
 12164  004772  B0D8               	btfsc	status,0,c
 12165  004774  2BB0               	incf	(___awmod@dividend+1)& (0+255),f,b
 12166                           
 12167                           ; BSR set to: 0
 12168  004776  0E01               	movlw	1
 12169  004778  0100               	movlb	0	; () banked
 12170  00477A  6FB4               	movwf	___awmod@sign& (0+255),b
 12171  00477C  D000               	goto	l11600
 12172  00477E                     l11600:
 12173                           
 12174                           ; BSR set to: 0
 12175  00477E  0100               	movlb	0	; () banked
 12176  004780  AFB2               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12177  004782  D006               	goto	l11604
 12178                           
 12179                           ; BSR set to: 0
 12180  004784  0100               	movlb	0	; () banked
 12181  004786  6DB1               	negf	___awmod@divisor& (0+255),b
 12182  004788  1FB2               	comf	(___awmod@divisor+1)& (0+255),f,b
 12183  00478A  B0D8               	btfsc	status,0,c
 12184  00478C  2BB2               	incf	(___awmod@divisor+1)& (0+255),f,b
 12185  00478E  D000               	goto	l11604
 12186  004790                     l11604:
 12187                           
 12188                           ; BSR set to: 0
 12189  004790  0100               	movlb	0	; () banked
 12190  004792  51B1               	movf	___awmod@divisor& (0+255),w,b
 12191  004794  0100               	movlb	0	; () banked
 12192  004796  11B2               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12193  004798  B4D8               	btfsc	status,2,c
 12194  00479A  D02B               	goto	l11620
 12195                           
 12196                           ; BSR set to: 0
 12197  00479C  0E01               	movlw	1
 12198  00479E  0100               	movlb	0	; () banked
 12199  0047A0  6FB3               	movwf	___awmod@counter& (0+255),b
 12200  0047A2  D007               	goto	l11610
 12201  0047A4                     l11608:
 12202                           
 12203                           ; BSR set to: 0
 12204  0047A4  0100               	movlb	0	; () banked
 12205  0047A6  90D8               	bcf	status,0,c
 12206  0047A8  37B1               	rlcf	___awmod@divisor& (0+255),f,b
 12207  0047AA  37B2               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12208  0047AC  0100               	movlb	0	; () banked
 12209  0047AE  2BB3               	incf	___awmod@counter& (0+255),f,b
 12210  0047B0  D000               	goto	l11610
 12211  0047B2                     l11610:
 12212                           
 12213                           ; BSR set to: 0
 12214  0047B2  0100               	movlb	0	; () banked
 12215  0047B4  BFB2               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 12216  0047B6  D002               	goto	l11612
 12217  0047B8  D7F5               	goto	l11608
 12218                           
 12219                           ; BSR set to: 0
 12220  0047BA  D000               	goto	l11612
 12221  0047BC                     l11612:
 12222                           
 12223                           ; BSR set to: 0
 12224  0047BC  0100               	movlb	0	; () banked
 12225  0047BE  51B1               	movf	___awmod@divisor& (0+255),w,b
 12226  0047C0  0100               	movlb	0	; () banked
 12227  0047C2  5DAF               	subwf	___awmod@dividend& (0+255),w,b
 12228  0047C4  0100               	movlb	0	; () banked
 12229  0047C6  51B2               	movf	(___awmod@divisor+1)& (0+255),w,b
 12230  0047C8  0100               	movlb	0	; () banked
 12231  0047CA  59B0               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 12232  0047CC  A0D8               	btfss	status,0,c
 12233  0047CE  D009               	goto	l11616
 12234                           
 12235                           ; BSR set to: 0
 12236  0047D0  0100               	movlb	0	; () banked
 12237  0047D2  51B1               	movf	___awmod@divisor& (0+255),w,b
 12238  0047D4  0100               	movlb	0	; () banked
 12239  0047D6  5FAF               	subwf	___awmod@dividend& (0+255),f,b
 12240  0047D8  0100               	movlb	0	; () banked
 12241  0047DA  51B2               	movf	(___awmod@divisor+1)& (0+255),w,b
 12242  0047DC  0100               	movlb	0	; () banked
 12243  0047DE  5BB0               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 12244  0047E0  D000               	goto	l11616
 12245  0047E2                     l11616:
 12246                           
 12247                           ; BSR set to: 0
 12248  0047E2  0100               	movlb	0	; () banked
 12249  0047E4  90D8               	bcf	status,0,c
 12250  0047E6  33B2               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 12251  0047E8  33B1               	rrcf	___awmod@divisor& (0+255),f,b
 12252                           
 12253                           ; BSR set to: 0
 12254  0047EA  0100               	movlb	0	; () banked
 12255  0047EC  2FB3               	decfsz	___awmod@counter& (0+255),f,b
 12256  0047EE  D7E6               	goto	l11612
 12257                           
 12258                           ; BSR set to: 0
 12259  0047F0  D000               	goto	l11620
 12260  0047F2                     l11620:
 12261                           
 12262                           ; BSR set to: 0
 12263  0047F2  0100               	movlb	0	; () banked
 12264  0047F4  51B4               	movf	___awmod@sign& (0+255),w,b
 12265  0047F6  0100               	movlb	0	; () banked
 12266  0047F8  B4D8               	btfsc	status,2,c
 12267  0047FA  D006               	goto	l11624
 12268                           
 12269                           ; BSR set to: 0
 12270  0047FC  0100               	movlb	0	; () banked
 12271  0047FE  6DAF               	negf	___awmod@dividend& (0+255),b
 12272  004800  1FB0               	comf	(___awmod@dividend+1)& (0+255),f,b
 12273  004802  B0D8               	btfsc	status,0,c
 12274  004804  2BB0               	incf	(___awmod@dividend+1)& (0+255),f,b
 12275  004806  D000               	goto	l11624
 12276  004808                     l11624:
 12277                           
 12278                           ; BSR set to: 0
 12279  004808  C0AF  F0AF         	movff	___awmod@dividend,?___awmod
 12280  00480C  C0B0  F0B0         	movff	___awmod@dividend+1,?___awmod+1
 12281  004810  0012               	return	
 12282                           
 12283                           ; BSR set to: 0
 12284                           
 12285                           ; BSR set to: 0
 12286  004812  0012               	return		;funcret
 12287  004814                     __end_of___awmod:
 12288                           	opt stack 0
 12289                           tblptru	equ	0xFF8
 12290                           tblptrh	equ	0xFF7
 12291                           tblptrl	equ	0xFF6
 12292                           tablat	equ	0xFF5
 12293                           prodh	equ	0xFF4
 12294                           prodl	equ	0xFF3
 12295                           intcon	equ	0xFF2
 12296                           postinc0	equ	0xFEE
 12297                           wreg	equ	0xFE8
 12298                           indf1	equ	0xFE7
 12299                           postdec1	equ	0xFE5
 12300                           fsr1h	equ	0xFE2
 12301                           fsr1l	equ	0xFE1
 12302                           indf2	equ	0xFDF
 12303                           fsr2h	equ	0xFDA
 12304                           fsr2l	equ	0xFD9
 12305                           status	equ	0xFD8
 12306                           
 12307 ;; *************** function _moteApp_GoToSleep *****************
 12308 ;; Defined at:
 12309 ;;		line 1173 in file "../Includes/Board/MOTEapp.c"
 12310 ;; Parameters:    Size  Location     Type
 12311 ;;		None
 12312 ;; Auto vars:     Size  Location     Type
 12313 ;;  status          1   14[BANK0 ] unsigned char 
 12314 ;; Return value:  Size  Location     Type
 12315 ;;                  1    wreg      unsigned char 
 12316 ;; Registers used:
 12317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12318 ;; Tracked objects:
 12319 ;;		On entry : 0/0
 12320 ;;		On exit  : 0/0
 12321 ;;		Unchanged: 0/0
 12322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12323 ;;      Params:         0       0       0       0       0       0       0       0       0
 12324 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12325 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12326 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12327 ;;Total ram usage:        1 bytes
 12328 ;; Hardware stack levels used:    1
 12329 ;; Hardware stack levels required when called:   17
 12330 ;; This function calls:
 12331 ;;		_EUSART_FlushBuffer
 12332 ;;		_PIN_MANAGER_Initialize
 12333 ;;		_moduleResync
 12334 ;;		_moduleSleep
 12335 ;;		_moteApp_delayms
 12336 ;;		_oled_displayOff
 12337 ;;		_oled_init
 12338 ;; This function is called by:
 12339 ;;		_moteRunningProcess
 12340 ;; This function uses a non-reentrant model
 12341 ;;
 12342                           
 12343                           	psect	text29
 12344  003758                     __ptext29:
 12345                           	opt stack 0
 12346  003758                     _moteApp_GoToSleep:
 12347                           	opt stack 11
 12348                           
 12349                           ;MOTEapp.c: 1175: uint8_t status = 0;
 12350                           
 12351                           ; BSR set to: 0
 12352                           ;incstack = 0
 12353  003758  0E00               	movlw	0
 12354  00375A  0100               	movlb	0	; () banked
 12355  00375C  6FBD               	movwf	moteApp_GoToSleep@status& (0+255),b
 12356                           
 12357                           ;MOTEapp.c: 1176: while (PORTBbits.RB0 == 0);
 12358  00375E  D000               	goto	l663
 12359  003760                     l663:
 12360  003760  A081               	btfss	3969,0,c	;volatile
 12361  003762  D7FE               	goto	l663
 12362                           
 12363                           ;MOTEapp.c: 1177: moduleSleep();
 12364  003764  ECBE  F02E         	call	_moduleSleep	;wreg free
 12365                           
 12366                           ;MOTEapp.c: 1178: oled_displayOff(1);
 12367  003768  0E01               	movlw	1
 12368  00376A  EC15  F030         	call	_oled_displayOff
 12369                           
 12370                           ;MOTEapp.c: 1179: ADCON0bits.ADON = 0;
 12371  00376E  90C2               	bcf	4034,0,c	;volatile
 12372                           
 12373                           ;MOTEapp.c: 1180: INTCONbits.GIE = 0;
 12374  003770  9EF2               	bcf	intcon,7,c	;volatile
 12375                           
 12376                           ;MOTEapp.c: 1181: GIE = 0;
 12377  003772  9EF2               	bcf	intcon,7,c	;volatile
 12378                           
 12379                           ;MOTEapp.c: 1182: PEIE = 0;
 12380  003774  9CF2               	bcf	intcon,6,c	;volatile
 12381                           
 12382                           ;MOTEapp.c: 1184: LATEbits.LATE2 = 0;
 12383  003776  948D               	bcf	3981,2,c	;volatile
 12384                           
 12385                           ;MOTEapp.c: 1185: PIE2bits.TMR3IE = 0;
 12386  003778  92A0               	bcf	4000,1,c	;volatile
 12387                           
 12388                           ;MOTEapp.c: 1187: ANSELAbits.ANSA0 = 1;
 12389  00377A  010F               	movlb	15	; () banked
 12390  00377C  815B               	bsf	91,0,b	;volatile
 12391                           
 12392                           ; BSR set to: 15
 12393                           ;MOTEapp.c: 1189: PIE2bits.C1IE = 1;
 12394  00377E  8CA0               	bsf	4000,6,c	;volatile
 12395                           
 12396                           ; BSR set to: 15
 12397                           ;MOTEapp.c: 1190: INTCON3bits.INT1IE = 1;
 12398  003780  86F0               	bsf	intcon3,3,c	;volatile
 12399                           
 12400                           ; BSR set to: 15
 12401                           ;MOTEapp.c: 1191: INTCONbits.INT0IE = 1;
 12402  003782  88F2               	bsf	intcon,4,c	;volatile
 12403                           
 12404                           ; BSR set to: 15
 12405                           ;MOTEapp.c: 1192: IOCCbits.IOCC2 = 1;
 12406  003784  8487               	bsf	3975,2,c	;volatile
 12407                           
 12408                           ; BSR set to: 15
 12409                           ;MOTEapp.c: 1193: INTCONbits.IOCIE = 1;
 12410  003786  86F2               	bsf	intcon,3,c	;volatile
 12411                           
 12412                           ; BSR set to: 15
 12413                           ;MOTEapp.c: 1195: status = PORTBbits.RB1;
 12414  003788  0E00               	movlw	0
 12415  00378A  B281               	btfsc	3969,1,c	;volatile
 12416  00378C  0E01               	movlw	1
 12417  00378E  0100               	movlb	0	; () banked
 12418  003790  6FBD               	movwf	moteApp_GoToSleep@status& (0+255),b
 12419                           
 12420                           ; BSR set to: 0
 12421                           ;MOTEapp.c: 1196: status = PORTBbits.RB0;
 12422  003792  0E00               	movlw	0
 12423  003794  B081               	btfsc	3969,0,c	;volatile
 12424  003796  0E01               	movlw	1
 12425  003798  0100               	movlb	0	; () banked
 12426  00379A  6FBD               	movwf	moteApp_GoToSleep@status& (0+255),b
 12427                           
 12428                           ; BSR set to: 0
 12429                           ;MOTEapp.c: 1197: status = PORTCbits.RC2;
 12430  00379C  0E00               	movlw	0
 12431  00379E  B482               	btfsc	3970,2,c	;volatile
 12432  0037A0  0E01               	movlw	1
 12433  0037A2  0100               	movlb	0	; () banked
 12434  0037A4  6FBD               	movwf	moteApp_GoToSleep@status& (0+255),b
 12435                           
 12436                           ; BSR set to: 0
 12437                           ;MOTEapp.c: 1199: if (periodicState)
 12438  0037A6  0100               	movlb	0	; () banked
 12439  0037A8  51FC               	movf	_periodicState& (0+255),w,b
 12440  0037AA  A4D8               	btfss	status,2,c
 12441                           
 12442                           ; BSR set to: 0
 12443                           ;MOTEapp.c: 1200: {
 12444                           ;MOTEapp.c: 1201: WDTCONbits.SWDTEN = 1;
 12445  0037AC  80D1               	bsf	4049,0,c	;volatile
 12446                           
 12447                           ; BSR set to: 0
 12448                           ;MOTEapp.c: 1202: }
 12449                           ;MOTEapp.c: 1204: INTCONbits.IOCIF = 0;
 12450  0037AE  90F2               	bcf	intcon,0,c	;volatile
 12451                           
 12452                           ;MOTEapp.c: 1205: INTCONbits.INT0IF = 0;
 12453  0037B0  92F2               	bcf	intcon,1,c	;volatile
 12454                           
 12455                           ;MOTEapp.c: 1206: INTCON3bits.INT1IF = 0;
 12456  0037B2  90F0               	bcf	intcon3,0,c	;volatile
 12457                           
 12458                           ;MOTEapp.c: 1207: PIR2bits.C1IF = 0;
 12459  0037B4  9CA1               	bcf	4001,6,c	;volatile
 12460                           
 12461                           ;MOTEapp.c: 1208: __nop();
 12462  0037B6  F000               	nop	
 12463  0037B8  0003               	sleep		;# 
 12464                           
 12465                           ;MOTEapp.c: 1210: __nop();
 12466  0037BA  F000               	nop	
 12467                           
 12468                           ;MOTEapp.c: 1212: WDTCONbits.SWDTEN = 0;
 12469  0037BC  90D1               	bcf	4049,0,c	;volatile
 12470                           
 12471                           ;MOTEapp.c: 1213: EUSART_FlushBuffer();
 12472  0037BE  ECC3  F02B         	call	_EUSART_FlushBuffer	;wreg free
 12473                           
 12474                           ;MOTEapp.c: 1215: INTCONbits.IOCIE = 0;
 12475  0037C2  96F2               	bcf	intcon,3,c	;volatile
 12476                           
 12477                           ;MOTEapp.c: 1216: INTCON3bits.INT1IE = 0;
 12478  0037C4  96F0               	bcf	intcon3,3,c	;volatile
 12479                           
 12480                           ;MOTEapp.c: 1217: INTCONbits.INT0IE = 0;
 12481  0037C6  98F2               	bcf	intcon,4,c	;volatile
 12482                           
 12483                           ;MOTEapp.c: 1218: IOCCbits.IOCC2 = 0;
 12484  0037C8  9487               	bcf	3975,2,c	;volatile
 12485                           
 12486                           ;MOTEapp.c: 1219: PIE2bits.C1IE = 0;
 12487  0037CA  9CA0               	bcf	4000,6,c	;volatile
 12488                           
 12489                           ;MOTEapp.c: 1220: GIE = 1;
 12490  0037CC  8EF2               	bsf	intcon,7,c	;volatile
 12491                           
 12492                           ;MOTEapp.c: 1222: PIN_MANAGER_Initialize();
 12493  0037CE  EC6F  F02B         	call	_PIN_MANAGER_Initialize	;wreg free
 12494                           
 12495                           ;MOTEapp.c: 1224: if ((INTCONbits.IOCIF)||(INTCONbits.INT0IF)||(INTCON3bits.INT1IF)||(PI
      +                          R2bits.C1IF))
 12496  0037D2  A0F2               	btfss	intcon,0,c	;volatile
 12497  0037D4  B2F2               	btfsc	intcon,1,c	;volatile
 12498  0037D6  D004               	goto	l669
 12499  0037D8  B0F0               	btfsc	intcon3,0,c	;volatile
 12500  0037DA  D002               	goto	l669
 12501  0037DC  ACA1               	btfss	4001,6,c	;volatile
 12502  0037DE  D012               	goto	l12130
 12503  0037E0                     l669:
 12504                           
 12505                           ;MOTEapp.c: 1225: {
 12506                           ;MOTEapp.c: 1226: INTCONbits.IOCIF = 0;
 12507  0037E0  90F2               	bcf	intcon,0,c	;volatile
 12508                           
 12509                           ;MOTEapp.c: 1227: INTCONbits.INT0IF = 0;
 12510  0037E2  92F2               	bcf	intcon,1,c	;volatile
 12511                           
 12512                           ;MOTEapp.c: 1228: INTCON3bits.INT1IF = 0;
 12513  0037E4  90F0               	bcf	intcon3,0,c	;volatile
 12514                           
 12515                           ;MOTEapp.c: 1229: status = 1;
 12516  0037E6  0E01               	movlw	1
 12517  0037E8  0100               	movlb	0	; () banked
 12518  0037EA  6FBD               	movwf	moteApp_GoToSleep@status& (0+255),b
 12519                           
 12520                           ; BSR set to: 0
 12521                           ;MOTEapp.c: 1232: oled_displayOff(0);
 12522  0037EC  0E00               	movlw	0
 12523  0037EE  EC15  F030         	call	_oled_displayOff
 12524                           
 12525                           ;MOTEapp.c: 1233: oled_init();
 12526  0037F2  EC30  F02E         	call	_oled_init	;wreg free
 12527                           
 12528                           ;MOTEapp.c: 1235: LATEbits.LATE2 = 1;
 12529  0037F6  848D               	bsf	3981,2,c	;volatile
 12530                           
 12531                           ;MOTEapp.c: 1236: TMR3H = 0xFB;
 12532  0037F8  0EFB               	movlw	251
 12533  0037FA  6EB3               	movwf	4019,c	;volatile
 12534                           
 12535                           ;MOTEapp.c: 1237: TMR3L = 0x50;
 12536  0037FC  0E50               	movlw	80
 12537  0037FE  6EB2               	movwf	4018,c	;volatile
 12538                           
 12539                           ;MOTEapp.c: 1238: PIE2bits.TMR3IE = 1;
 12540  003800  82A0               	bsf	4000,1,c	;volatile
 12541                           
 12542                           ;MOTEapp.c: 1239: }
 12543  003802  D009               	goto	l12136
 12544  003804                     l12130:
 12545                           
 12546                           ;MOTEapp.c: 1240: else
 12547                           ;MOTEapp.c: 1241: {
 12548                           ;MOTEapp.c: 1242: secTicker = 10;
 12549  003804  0E0A               	movlw	10
 12550  003806  0100               	movlb	0	; () banked
 12551  003808  6FA6               	movwf	_secTicker& (0+255),b
 12552                           
 12553                           ;MOTEapp.c: 1243: status = 0;
 12554  00380A  0E00               	movlw	0
 12555  00380C  0100               	movlb	0	; () banked
 12556  00380E  6FBD               	movwf	moteApp_GoToSleep@status& (0+255),b
 12557                           
 12558                           ; BSR set to: 0
 12559                           ;MOTEapp.c: 1245: LATEbits.LATE2 = 0;
 12560  003810  948D               	bcf	3981,2,c	;volatile
 12561                           
 12562                           ; BSR set to: 0
 12563                           ;MOTEapp.c: 1246: PIE2bits.TMR3IE = 0;
 12564  003812  92A0               	bcf	4000,1,c	;volatile
 12565  003814  D000               	goto	l12136
 12566  003816                     l12136:
 12567                           
 12568                           ;MOTEapp.c: 1247: }
 12569                           ;MOTEapp.c: 1248: ANSELAbits.ANSA0 = 0;
 12570  003816  010F               	movlb	15	; () banked
 12571  003818  915B               	bcf	91,0,b	;volatile
 12572                           
 12573                           ; BSR set to: 15
 12574                           ;MOTEapp.c: 1250: moduleResync();
 12575  00381A  EC99  F026         	call	_moduleResync	;wreg free
 12576                           
 12577                           ;MOTEapp.c: 1251: moteApp_delayms(40);
 12578  00381E  0E00               	movlw	0
 12579  003820  0100               	movlb	0	; () banked
 12580  003822  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12581  003824  0E28               	movlw	40
 12582  003826  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 12583  003828  EC36  F02D         	call	_moteApp_delayms	;wreg free
 12584                           
 12585                           ;MOTEapp.c: 1252: moduleResync();
 12586  00382C  EC99  F026         	call	_moduleResync	;wreg free
 12587                           
 12588                           ;MOTEapp.c: 1253: moteApp_delayms(40);
 12589  003830  0E00               	movlw	0
 12590  003832  0100               	movlb	0	; () banked
 12591  003834  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12592  003836  0E28               	movlw	40
 12593  003838  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 12594  00383A  EC36  F02D         	call	_moteApp_delayms	;wreg free
 12595                           
 12596                           ;MOTEapp.c: 1254: return status;
 12597  00383E  0100               	movlb	0	; () banked
 12598  003840  51BD               	movf	moteApp_GoToSleep@status& (0+255),w,b
 12599  003842  0012               	return	
 12600                           
 12601                           ; BSR set to: 0
 12602                           
 12603                           ; BSR set to: 0
 12604  003844  0012               	return		;funcret
 12605  003846                     __end_of_moteApp_GoToSleep:
 12606                           	opt stack 0
 12607                           tblptru	equ	0xFF8
 12608                           tblptrh	equ	0xFF7
 12609                           tblptrl	equ	0xFF6
 12610                           tablat	equ	0xFF5
 12611                           prodh	equ	0xFF4
 12612                           prodl	equ	0xFF3
 12613                           intcon	equ	0xFF2
 12614                           intcon3	equ	0xFF0
 12615                           postinc0	equ	0xFEE
 12616                           wreg	equ	0xFE8
 12617                           indf1	equ	0xFE7
 12618                           postdec1	equ	0xFE5
 12619                           fsr1h	equ	0xFE2
 12620                           fsr1l	equ	0xFE1
 12621                           indf2	equ	0xFDF
 12622                           fsr2h	equ	0xFDA
 12623                           fsr2l	equ	0xFD9
 12624                           status	equ	0xFD8
 12625                           
 12626 ;; *************** function _oled_init *****************
 12627 ;; Defined at:
 12628 ;;		line 366 in file "../Includes/Drivers/SSD1306oLED.c"
 12629 ;; Parameters:    Size  Location     Type
 12630 ;;		None
 12631 ;; Auto vars:     Size  Location     Type
 12632 ;;		None
 12633 ;; Return value:  Size  Location     Type
 12634 ;;		None               void
 12635 ;; Registers used:
 12636 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12637 ;; Tracked objects:
 12638 ;;		On entry : 0/0
 12639 ;;		On exit  : 0/0
 12640 ;;		Unchanged: 0/0
 12641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12642 ;;      Params:         0       0       0       0       0       0       0       0       0
 12643 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12644 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12645 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12646 ;;Total ram usage:        0 bytes
 12647 ;; Hardware stack levels used:    1
 12648 ;; Hardware stack levels required when called:   16
 12649 ;; This function calls:
 12650 ;;		_oled_clear
 12651 ;;		_oled_devInit
 12652 ;;		_oled_setDisplay
 12653 ;;		_oled_setFont
 12654 ;; This function is called by:
 12655 ;;		_main
 12656 ;;		_moteApp_GoToSleep
 12657 ;; This function uses a non-reentrant model
 12658 ;;
 12659                           
 12660                           	psect	text30
 12661  005C60                     __ptext30:
 12662                           	opt stack 0
 12663  005C60                     _oled_init:
 12664                           	opt stack 14
 12665                           
 12666                           ;SSD1306oLED.c: 369: TRISEbits.TRISE2 = 0;
 12667                           
 12668                           ; BSR set to: 0
 12669                           ;incstack = 0
 12670  005C60  9496               	bcf	3990,2,c	;volatile
 12671                           
 12672                           ;SSD1306oLED.c: 370: LATEbits.LATE2 = 1;
 12673  005C62  848D               	bsf	3981,2,c	;volatile
 12674                           
 12675                           ;SSD1306oLED.c: 371: TRISBbits.TRISB2 = 0;
 12676  005C64  9493               	bcf	3987,2,c	;volatile
 12677                           
 12678                           ;SSD1306oLED.c: 372: TRISBbits.TRISB3 = 0;
 12679  005C66  9693               	bcf	3987,3,c	;volatile
 12680                           
 12681                           ;SSD1306oLED.c: 373: TRISBbits.TRISB4 = 0;
 12682  005C68  9893               	bcf	3987,4,c	;volatile
 12683                           
 12684                           ;SSD1306oLED.c: 374: TRISCbits.TRISC0 = 0;
 12685  005C6A  9094               	bcf	3988,0,c	;volatile
 12686                           
 12687                           ;SSD1306oLED.c: 375: TRISCbits.TRISC1 = 0;
 12688  005C6C  9294               	bcf	3988,1,c	;volatile
 12689                           
 12690                           ;SSD1306oLED.c: 377: LATBbits.LATB3 = 1;
 12691  005C6E  868A               	bsf	3978,3,c	;volatile
 12692                           
 12693                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 0;
 12694  005C70  988A               	bcf	3978,4,c	;volatile
 12695                           
 12696                           ;SSD1306oLED.c: 381: oled_devInit();
 12697  005C72  ECEE  F027         	call	_oled_devInit	;wreg free
 12698                           
 12699                           ;SSD1306oLED.c: 383: oled_setDisplay(Inverse);
 12700  005C76  0E01               	movlw	1
 12701  005C78  EC92  F02E         	call	_oled_setDisplay
 12702                           
 12703                           ;SSD1306oLED.c: 384: oled_setFont(OledFont0);
 12704  005C7C  0E01               	movlw	low _OledFont0
 12705  005C7E  0100               	movlb	0	; () banked
 12706  005C80  6FAF               	movwf	oled_setFont@font& (0+255),b
 12707  005C82  0E76               	movlw	high _OledFont0
 12708  005C84  0100               	movlb	0	; () banked
 12709  005C86  6FB0               	movwf	(oled_setFont@font+1)& (0+255),b
 12710  005C88  EC62  F02F         	call	_oled_setFont	;wreg free
 12711                           
 12712                           ;SSD1306oLED.c: 385: oled_clear();
 12713  005C8C  EC3B  F02F         	call	_oled_clear	;wreg free
 12714  005C90  0012               	return		;funcret
 12715  005C92                     __end_of_oled_init:
 12716                           	opt stack 0
 12717                           tblptru	equ	0xFF8
 12718                           tblptrh	equ	0xFF7
 12719                           tblptrl	equ	0xFF6
 12720                           tablat	equ	0xFF5
 12721                           prodh	equ	0xFF4
 12722                           prodl	equ	0xFF3
 12723                           intcon	equ	0xFF2
 12724                           intcon3	equ	0xFF0
 12725                           postinc0	equ	0xFEE
 12726                           wreg	equ	0xFE8
 12727                           indf1	equ	0xFE7
 12728                           postdec1	equ	0xFE5
 12729                           fsr1h	equ	0xFE2
 12730                           fsr1l	equ	0xFE1
 12731                           indf2	equ	0xFDF
 12732                           fsr2h	equ	0xFDA
 12733                           fsr2l	equ	0xFD9
 12734                           status	equ	0xFD8
 12735                           
 12736 ;; *************** function _oled_setFont *****************
 12737 ;; Defined at:
 12738 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
 12739 ;; Parameters:    Size  Location     Type
 12740 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 12741 ;;		 -> OledFont0(768), 
 12742 ;; Auto vars:     Size  Location     Type
 12743 ;;		None
 12744 ;; Return value:  Size  Location     Type
 12745 ;;		None               void
 12746 ;; Registers used:
 12747 ;;		wreg, status,2, status,0
 12748 ;; Tracked objects:
 12749 ;;		On entry : 0/0
 12750 ;;		On exit  : 0/0
 12751 ;;		Unchanged: 0/0
 12752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12753 ;;      Params:         0       2       0       0       0       0       0       0       0
 12754 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12755 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12756 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12757 ;;Total ram usage:        2 bytes
 12758 ;; Hardware stack levels used:    1
 12759 ;; Hardware stack levels required when called:   11
 12760 ;; This function calls:
 12761 ;;		Nothing
 12762 ;; This function is called by:
 12763 ;;		_oled_init
 12764 ;; This function uses a non-reentrant model
 12765 ;;
 12766                           
 12767                           	psect	text31
 12768  005EC4                     __ptext31:
 12769                           	opt stack 0
 12770  005EC4                     _oled_setFont:
 12771                           	opt stack 18
 12772                           
 12773                           ;SSD1306oLED.c: 258: if(font!=0)
 12774                           
 12775                           ;incstack = 0
 12776  005EC4  0100               	movlb	0	; () banked
 12777  005EC6  51AF               	movf	oled_setFont@font& (0+255),w,b
 12778  005EC8  0100               	movlb	0	; () banked
 12779  005ECA  11B0               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 12780  005ECC  B4D8               	btfsc	status,2,c
 12781  005ECE  0012               	return	
 12782                           
 12783                           ; BSR set to: 0
 12784                           ;SSD1306oLED.c: 259: {
 12785                           ;SSD1306oLED.c: 260: selectedFont=font;
 12786  005ED0  C0AF  F0F4         	movff	oled_setFont@font,_selectedFont
 12787  005ED4  C0B0  F0F5         	movff	oled_setFont@font+1,_selectedFont+1
 12788  005ED8  0012               	return	
 12789                           
 12790                           ; BSR set to: 0
 12791                           
 12792                           ; BSR set to: 0
 12793  005EDA  0012               	return		;funcret
 12794  005EDC                     __end_of_oled_setFont:
 12795                           	opt stack 0
 12796                           tblptru	equ	0xFF8
 12797                           tblptrh	equ	0xFF7
 12798                           tblptrl	equ	0xFF6
 12799                           tablat	equ	0xFF5
 12800                           prodh	equ	0xFF4
 12801                           prodl	equ	0xFF3
 12802                           intcon	equ	0xFF2
 12803                           intcon3	equ	0xFF0
 12804                           postinc0	equ	0xFEE
 12805                           wreg	equ	0xFE8
 12806                           indf1	equ	0xFE7
 12807                           postdec1	equ	0xFE5
 12808                           fsr1h	equ	0xFE2
 12809                           fsr1l	equ	0xFE1
 12810                           indf2	equ	0xFDF
 12811                           fsr2h	equ	0xFDA
 12812                           fsr2l	equ	0xFD9
 12813                           status	equ	0xFD8
 12814                           
 12815 ;; *************** function _oled_setDisplay *****************
 12816 ;; Defined at:
 12817 ;;		line 411 in file "../Includes/Drivers/SSD1306oLED.c"
 12818 ;; Parameters:    Size  Location     Type
 12819 ;;  displayType     1    wreg     enum E7618
 12820 ;; Auto vars:     Size  Location     Type
 12821 ;;  displayType     1    1[BANK0 ] enum E7618
 12822 ;; Return value:  Size  Location     Type
 12823 ;;		None               void
 12824 ;; Registers used:
 12825 ;;		wreg, status,2, cstack
 12826 ;; Tracked objects:
 12827 ;;		On entry : 0/0
 12828 ;;		On exit  : 0/0
 12829 ;;		Unchanged: 0/0
 12830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12831 ;;      Params:         0       0       0       0       0       0       0       0       0
 12832 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12833 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12834 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12835 ;;Total ram usage:        1 bytes
 12836 ;; Hardware stack levels used:    1
 12837 ;; Hardware stack levels required when called:   12
 12838 ;; This function calls:
 12839 ;;		_oled_writeCommand
 12840 ;; This function is called by:
 12841 ;;		_oled_init
 12842 ;; This function uses a non-reentrant model
 12843 ;;
 12844                           
 12845                           	psect	text32
 12846  005D24                     __ptext32:
 12847                           	opt stack 0
 12848  005D24                     _oled_setDisplay:
 12849                           	opt stack 17
 12850                           
 12851                           ; BSR set to: 0
 12852                           ;incstack = 0
 12853                           ;oled_setDisplay@displayType stored from wreg
 12854  005D24  0100               	movlb	0	; () banked
 12855  005D26  6FB0               	movwf	oled_setDisplay@displayType& (0+255),b
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;SSD1306oLED.c: 413: if (displayType == Normal)
 12859  005D28  0100               	movlb	0	; () banked
 12860  005D2A  51B0               	movf	oled_setDisplay@displayType& (0+255),w,b
 12861  005D2C  0100               	movlb	0	; () banked
 12862  005D2E  A4D8               	btfss	status,2,c
 12863  005D30  D007               	goto	l11220
 12864                           
 12865                           ; BSR set to: 0
 12866                           ;SSD1306oLED.c: 414: {
 12867                           ;SSD1306oLED.c: 415: oled_writeCommand(0xa0);
 12868  005D32  0EA0               	movlw	160
 12869  005D34  EC7A  F02F         	call	_oled_writeCommand
 12870                           
 12871                           ;SSD1306oLED.c: 416: oled_writeCommand(0xc8);
 12872  005D38  0EC8               	movlw	200
 12873  005D3A  EC7A  F02F         	call	_oled_writeCommand
 12874                           
 12875                           ;SSD1306oLED.c: 417: }
 12876  005D3E  0012               	return	
 12877  005D40                     l11220:
 12878                           
 12879                           ;SSD1306oLED.c: 418: else
 12880                           ;SSD1306oLED.c: 419: {
 12881                           ;SSD1306oLED.c: 420: oled_writeCommand(0xa1);
 12882  005D40  0EA1               	movlw	161
 12883  005D42  EC7A  F02F         	call	_oled_writeCommand
 12884                           
 12885                           ;SSD1306oLED.c: 421: oled_writeCommand(0xc0);
 12886  005D46  0EC0               	movlw	192
 12887  005D48  EC7A  F02F         	call	_oled_writeCommand
 12888  005D4C  0012               	return	
 12889  005D4E  0012               	return		;funcret
 12890  005D50                     __end_of_oled_setDisplay:
 12891                           	opt stack 0
 12892                           tblptru	equ	0xFF8
 12893                           tblptrh	equ	0xFF7
 12894                           tblptrl	equ	0xFF6
 12895                           tablat	equ	0xFF5
 12896                           prodh	equ	0xFF4
 12897                           prodl	equ	0xFF3
 12898                           intcon	equ	0xFF2
 12899                           intcon3	equ	0xFF0
 12900                           postinc0	equ	0xFEE
 12901                           wreg	equ	0xFE8
 12902                           indf1	equ	0xFE7
 12903                           postdec1	equ	0xFE5
 12904                           fsr1h	equ	0xFE2
 12905                           fsr1l	equ	0xFE1
 12906                           indf2	equ	0xFDF
 12907                           fsr2h	equ	0xFDA
 12908                           fsr2l	equ	0xFD9
 12909                           status	equ	0xFD8
 12910                           
 12911 ;; *************** function _oled_devInit *****************
 12912 ;; Defined at:
 12913 ;;		line 388 in file "../Includes/Drivers/SSD1306oLED.c"
 12914 ;; Parameters:    Size  Location     Type
 12915 ;;		None
 12916 ;; Auto vars:     Size  Location     Type
 12917 ;;		None
 12918 ;; Return value:  Size  Location     Type
 12919 ;;		None               void
 12920 ;; Registers used:
 12921 ;;		wreg, status,2, status,0, cstack
 12922 ;; Tracked objects:
 12923 ;;		On entry : 0/0
 12924 ;;		On exit  : 0/0
 12925 ;;		Unchanged: 0/0
 12926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12927 ;;      Params:         0       0       0       0       0       0       0       0       0
 12928 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12929 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12930 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12931 ;;Total ram usage:        1 bytes
 12932 ;; Hardware stack levels used:    1
 12933 ;; Hardware stack levels required when called:   13
 12934 ;; This function calls:
 12935 ;;		_oled_initialDispayLine
 12936 ;;		_oled_powerControl
 12937 ;;		_oled_regulorResistorSelect
 12938 ;;		_oled_setContrastControlRegister
 12939 ;;		_oled_writeCommand
 12940 ;; This function is called by:
 12941 ;;		_oled_init
 12942 ;; This function uses a non-reentrant model
 12943 ;;
 12944                           
 12945                           	psect	text33
 12946  004FDC                     __ptext33:
 12947                           	opt stack 0
 12948  004FDC                     _oled_devInit:
 12949                           	opt stack 16
 12950                           
 12951                           ;SSD1306oLED.c: 390: oled_writeCommand(0xe2);
 12952                           
 12953                           ;incstack = 0
 12954  004FDC  0EE2               	movlw	226
 12955  004FDE  EC7A  F02F         	call	_oled_writeCommand
 12956                           
 12957                           ;SSD1306oLED.c: 391: LATBbits.LATB2=1;
 12958  004FE2  848A               	bsf	3978,2,c	;volatile
 12959                           
 12960                           ;SSD1306oLED.c: 392: _delay((unsigned long)((200)*(48000000/4000000.0)));
 12961  004FE4  0E04               	movlw	4
 12962  004FE6  0100               	movlb	0	; () banked
 12963  004FE8  6FB1               	movwf	??_oled_devInit& (0+255),b
 12964  004FEA  0E1C               	movlw	28
 12965  004FEC                     u12587:
 12966  004FEC  2EE8               	decfsz	wreg,f,c
 12967  004FEE  D7FE               	goto	u12587
 12968  004FF0  2FB1               	decfsz	??_oled_devInit& (0+255),f,b
 12969  004FF2  D7FC               	goto	u12587
 12970  004FF4  D000               	nop2	
 12971                           
 12972                           ;SSD1306oLED.c: 393: LATBbits.LATB2=0;
 12973  004FF6  948A               	bcf	3978,2,c	;volatile
 12974                           
 12975                           ;SSD1306oLED.c: 394: _delay((unsigned long)((2000)*(48000000/4000000.0)));
 12976  004FF8  0E20               	movlw	32
 12977  004FFA  0100               	movlb	0	; () banked
 12978  004FFC  6FB1               	movwf	??_oled_devInit& (0+255),b
 12979  004FFE  0E2A               	movlw	42
 12980  005000                     u12597:
 12981  005000  2EE8               	decfsz	wreg,f,c
 12982  005002  D7FE               	goto	u12597
 12983  005004  2FB1               	decfsz	??_oled_devInit& (0+255),f,b
 12984  005006  D7FC               	goto	u12597
 12985                           
 12986                           ;SSD1306oLED.c: 395: LATBbits.LATB2=1;
 12987  005008  848A               	bsf	3978,2,c	;volatile
 12988                           
 12989                           ;SSD1306oLED.c: 396: _delay((unsigned long)((1000)*(48000000/4000000.0)));
 12990  00500A  0E10               	movlw	16
 12991  00500C  0100               	movlb	0	; () banked
 12992  00500E  6FB1               	movwf	??_oled_devInit& (0+255),b
 12993  005010  0E94               	movlw	148
 12994  005012                     u12607:
 12995  005012  2EE8               	decfsz	wreg,f,c
 12996  005014  D7FE               	goto	u12607
 12997  005016  2FB1               	decfsz	??_oled_devInit& (0+255),f,b
 12998  005018  D7FC               	goto	u12607
 12999  00501A  D000               	nop2	
 13000                           
 13001                           ;SSD1306oLED.c: 398: oled_writeCommand(0xa1);
 13002  00501C  0EA1               	movlw	161
 13003  00501E  EC7A  F02F         	call	_oled_writeCommand
 13004                           
 13005                           ;SSD1306oLED.c: 399: oled_writeCommand(0xc0);
 13006  005022  0EC0               	movlw	192
 13007  005024  EC7A  F02F         	call	_oled_writeCommand
 13008                           
 13009                           ;SSD1306oLED.c: 400: oled_writeCommand(0xa3);
 13010  005028  0EA3               	movlw	163
 13011  00502A  EC7A  F02F         	call	_oled_writeCommand
 13012                           
 13013                           ;SSD1306oLED.c: 401: oled_powerControl(0x07);
 13014  00502E  0E07               	movlw	7
 13015  005030  ECC6  F02F         	call	_oled_powerControl
 13016                           
 13017                           ;SSD1306oLED.c: 402: oled_regulorResistorSelect(0x05);
 13018  005034  0E05               	movlw	5
 13019  005036  ECBD  F02F         	call	_oled_regulorResistorSelect
 13020                           
 13021                           ;SSD1306oLED.c: 403: oled_setContrastControlRegister(Contrast_level);
 13022  00503A  0100               	movlb	0	; () banked
 13023  00503C  51F6               	movf	_Contrast_level& (0+255),w,b
 13024  00503E  EC9E  F02F         	call	_oled_setContrastControlRegister
 13025                           
 13026                           ;SSD1306oLED.c: 404: oled_initialDispayLine(0x00);
 13027  005042  0E00               	movlw	0
 13028  005044  ECA9  F02F         	call	_oled_initialDispayLine
 13029                           
 13030                           ;SSD1306oLED.c: 405: oled_writeCommand(0xF8);
 13031  005048  0EF8               	movlw	248
 13032  00504A  EC7A  F02F         	call	_oled_writeCommand
 13033                           
 13034                           ;SSD1306oLED.c: 406: oled_writeCommand(0x00);
 13035  00504E  0E00               	movlw	0
 13036  005050  EC7A  F02F         	call	_oled_writeCommand
 13037                           
 13038                           ;SSD1306oLED.c: 407: oled_writeCommand(0xaf);
 13039  005054  0EAF               	movlw	175
 13040  005056  EC7A  F02F         	call	_oled_writeCommand
 13041  00505A  0012               	return		;funcret
 13042  00505C                     __end_of_oled_devInit:
 13043                           	opt stack 0
 13044                           tblptru	equ	0xFF8
 13045                           tblptrh	equ	0xFF7
 13046                           tblptrl	equ	0xFF6
 13047                           tablat	equ	0xFF5
 13048                           prodh	equ	0xFF4
 13049                           prodl	equ	0xFF3
 13050                           intcon	equ	0xFF2
 13051                           intcon3	equ	0xFF0
 13052                           postinc0	equ	0xFEE
 13053                           wreg	equ	0xFE8
 13054                           indf1	equ	0xFE7
 13055                           postdec1	equ	0xFE5
 13056                           fsr1h	equ	0xFE2
 13057                           fsr1l	equ	0xFE1
 13058                           indf2	equ	0xFDF
 13059                           fsr2h	equ	0xFDA
 13060                           fsr2l	equ	0xFD9
 13061                           status	equ	0xFD8
 13062                           
 13063 ;; *************** function _oled_setContrastControlRegister *****************
 13064 ;; Defined at:
 13065 ;;		line 454 in file "../Includes/Drivers/SSD1306oLED.c"
 13066 ;; Parameters:    Size  Location     Type
 13067 ;;  mod             1    wreg     unsigned char 
 13068 ;; Auto vars:     Size  Location     Type
 13069 ;;  mod             1    1[BANK0 ] unsigned char 
 13070 ;; Return value:  Size  Location     Type
 13071 ;;		None               void
 13072 ;; Registers used:
 13073 ;;		wreg, status,2, cstack
 13074 ;; Tracked objects:
 13075 ;;		On entry : 0/0
 13076 ;;		On exit  : 0/0
 13077 ;;		Unchanged: 0/0
 13078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13079 ;;      Params:         0       0       0       0       0       0       0       0       0
 13080 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13081 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13082 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13083 ;;Total ram usage:        1 bytes
 13084 ;; Hardware stack levels used:    1
 13085 ;; Hardware stack levels required when called:   12
 13086 ;; This function calls:
 13087 ;;		_oled_writeCommand
 13088 ;; This function is called by:
 13089 ;;		_oled_devInit
 13090 ;; This function uses a non-reentrant model
 13091 ;;
 13092                           
 13093                           	psect	text34
 13094  005F3C                     __ptext34:
 13095                           	opt stack 0
 13096  005F3C                     _oled_setContrastControlRegister:
 13097                           	opt stack 16
 13098                           
 13099                           ;incstack = 0
 13100                           ;oled_setContrastControlRegister@mod stored from wreg
 13101  005F3C  0100               	movlb	0	; () banked
 13102  005F3E  6FB0               	movwf	oled_setContrastControlRegister@mod& (0+255),b
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;SSD1306oLED.c: 456: oled_writeCommand(0x81);
 13106  005F40  0E81               	movlw	129
 13107  005F42  EC7A  F02F         	call	_oled_writeCommand
 13108                           
 13109                           ;SSD1306oLED.c: 457: oled_writeCommand(mod);
 13110  005F46  0100               	movlb	0	; () banked
 13111  005F48  51B0               	movf	oled_setContrastControlRegister@mod& (0+255),w,b
 13112  005F4A  EC7A  F02F         	call	_oled_writeCommand
 13113  005F4E  0012               	return	
 13114                           
 13115                           ;SSD1306oLED.c: 458: return;
 13116  005F50  0012               	return		;funcret
 13117  005F52                     __end_of_oled_setContrastControlRegister:
 13118                           	opt stack 0
 13119                           tblptru	equ	0xFF8
 13120                           tblptrh	equ	0xFF7
 13121                           tblptrl	equ	0xFF6
 13122                           tablat	equ	0xFF5
 13123                           prodh	equ	0xFF4
 13124                           prodl	equ	0xFF3
 13125                           intcon	equ	0xFF2
 13126                           intcon3	equ	0xFF0
 13127                           postinc0	equ	0xFEE
 13128                           wreg	equ	0xFE8
 13129                           indf1	equ	0xFE7
 13130                           postdec1	equ	0xFE5
 13131                           fsr1h	equ	0xFE2
 13132                           fsr1l	equ	0xFE1
 13133                           indf2	equ	0xFDF
 13134                           fsr2h	equ	0xFDA
 13135                           fsr2l	equ	0xFD9
 13136                           status	equ	0xFD8
 13137                           
 13138 ;; *************** function _oled_regulorResistorSelect *****************
 13139 ;; Defined at:
 13140 ;;		line 482 in file "../Includes/Drivers/SSD1306oLED.c"
 13141 ;; Parameters:    Size  Location     Type
 13142 ;;  r               1    wreg     unsigned char 
 13143 ;; Auto vars:     Size  Location     Type
 13144 ;;  r               1    1[BANK0 ] unsigned char 
 13145 ;; Return value:  Size  Location     Type
 13146 ;;		None               void
 13147 ;; Registers used:
 13148 ;;		wreg, status,2, status,0, cstack
 13149 ;; Tracked objects:
 13150 ;;		On entry : 0/0
 13151 ;;		On exit  : 0/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13154 ;;      Params:         0       0       0       0       0       0       0       0       0
 13155 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13156 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13157 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13158 ;;Total ram usage:        1 bytes
 13159 ;; Hardware stack levels used:    1
 13160 ;; Hardware stack levels required when called:   12
 13161 ;; This function calls:
 13162 ;;		_oled_writeCommand
 13163 ;; This function is called by:
 13164 ;;		_oled_devInit
 13165 ;; This function uses a non-reentrant model
 13166 ;;
 13167                           
 13168                           	psect	text35
 13169  005F7A                     __ptext35:
 13170                           	opt stack 0
 13171  005F7A                     _oled_regulorResistorSelect:
 13172                           	opt stack 16
 13173                           
 13174                           ;incstack = 0
 13175                           ;oled_regulorResistorSelect@r stored from wreg
 13176  005F7A  0100               	movlb	0	; () banked
 13177  005F7C  6FB0               	movwf	oled_regulorResistorSelect@r& (0+255),b
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;SSD1306oLED.c: 484: oled_writeCommand((0x20|r));
 13181  005F7E  0100               	movlb	0	; () banked
 13182  005F80  51B0               	movf	oled_regulorResistorSelect@r& (0+255),w,b
 13183  005F82  0920               	iorlw	32
 13184  005F84  EC7A  F02F         	call	_oled_writeCommand
 13185  005F88  0012               	return	
 13186                           
 13187                           ;SSD1306oLED.c: 485: return;
 13188  005F8A  0012               	return		;funcret
 13189  005F8C                     __end_of_oled_regulorResistorSelect:
 13190                           	opt stack 0
 13191                           tblptru	equ	0xFF8
 13192                           tblptrh	equ	0xFF7
 13193                           tblptrl	equ	0xFF6
 13194                           tablat	equ	0xFF5
 13195                           prodh	equ	0xFF4
 13196                           prodl	equ	0xFF3
 13197                           intcon	equ	0xFF2
 13198                           intcon3	equ	0xFF0
 13199                           postinc0	equ	0xFEE
 13200                           wreg	equ	0xFE8
 13201                           indf1	equ	0xFE7
 13202                           postdec1	equ	0xFE5
 13203                           fsr1h	equ	0xFE2
 13204                           fsr1l	equ	0xFE1
 13205                           indf2	equ	0xFDF
 13206                           fsr2h	equ	0xFDA
 13207                           fsr2l	equ	0xFD9
 13208                           status	equ	0xFD8
 13209                           
 13210 ;; *************** function _oled_powerControl *****************
 13211 ;; Defined at:
 13212 ;;		line 469 in file "../Includes/Drivers/SSD1306oLED.c"
 13213 ;; Parameters:    Size  Location     Type
 13214 ;;  vol             1    wreg     unsigned char 
 13215 ;; Auto vars:     Size  Location     Type
 13216 ;;  vol             1    1[BANK0 ] unsigned char 
 13217 ;; Return value:  Size  Location     Type
 13218 ;;		None               void
 13219 ;; Registers used:
 13220 ;;		wreg, status,2, status,0, cstack
 13221 ;; Tracked objects:
 13222 ;;		On entry : 0/0
 13223 ;;		On exit  : 0/0
 13224 ;;		Unchanged: 0/0
 13225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13226 ;;      Params:         0       0       0       0       0       0       0       0       0
 13227 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13228 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13229 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13230 ;;Total ram usage:        1 bytes
 13231 ;; Hardware stack levels used:    1
 13232 ;; Hardware stack levels required when called:   12
 13233 ;; This function calls:
 13234 ;;		_oled_writeCommand
 13235 ;; This function is called by:
 13236 ;;		_oled_devInit
 13237 ;; This function uses a non-reentrant model
 13238 ;;
 13239                           
 13240                           	psect	text36
 13241  005F8C                     __ptext36:
 13242                           	opt stack 0
 13243  005F8C                     _oled_powerControl:
 13244                           	opt stack 16
 13245                           
 13246                           ;incstack = 0
 13247                           ;oled_powerControl@vol stored from wreg
 13248  005F8C  0100               	movlb	0	; () banked
 13249  005F8E  6FB0               	movwf	oled_powerControl@vol& (0+255),b
 13250                           
 13251                           ; BSR set to: 0
 13252                           ;SSD1306oLED.c: 471: oled_writeCommand((0x28|vol));
 13253  005F90  0100               	movlb	0	; () banked
 13254  005F92  51B0               	movf	oled_powerControl@vol& (0+255),w,b
 13255  005F94  0928               	iorlw	40
 13256  005F96  EC7A  F02F         	call	_oled_writeCommand
 13257  005F9A  0012               	return	
 13258                           
 13259                           ;SSD1306oLED.c: 472: return;
 13260  005F9C  0012               	return		;funcret
 13261  005F9E                     __end_of_oled_powerControl:
 13262                           	opt stack 0
 13263                           tblptru	equ	0xFF8
 13264                           tblptrh	equ	0xFF7
 13265                           tblptrl	equ	0xFF6
 13266                           tablat	equ	0xFF5
 13267                           prodh	equ	0xFF4
 13268                           prodl	equ	0xFF3
 13269                           intcon	equ	0xFF2
 13270                           intcon3	equ	0xFF0
 13271                           postinc0	equ	0xFEE
 13272                           wreg	equ	0xFE8
 13273                           indf1	equ	0xFE7
 13274                           postdec1	equ	0xFE5
 13275                           fsr1h	equ	0xFE2
 13276                           fsr1l	equ	0xFE1
 13277                           indf2	equ	0xFDF
 13278                           fsr2h	equ	0xFDA
 13279                           fsr2l	equ	0xFD9
 13280                           status	equ	0xFD8
 13281                           
 13282 ;; *************** function _oled_initialDispayLine *****************
 13283 ;; Defined at:
 13284 ;;		line 462 in file "../Includes/Drivers/SSD1306oLED.c"
 13285 ;; Parameters:    Size  Location     Type
 13286 ;;  line            1    wreg     unsigned char 
 13287 ;; Auto vars:     Size  Location     Type
 13288 ;;  line            1    1[BANK0 ] unsigned char 
 13289 ;; Return value:  Size  Location     Type
 13290 ;;		None               void
 13291 ;; Registers used:
 13292 ;;		wreg, status,2, status,0, cstack
 13293 ;; Tracked objects:
 13294 ;;		On entry : 0/0
 13295 ;;		On exit  : 0/0
 13296 ;;		Unchanged: 0/0
 13297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13298 ;;      Params:         0       0       0       0       0       0       0       0       0
 13299 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13300 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13301 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13302 ;;Total ram usage:        1 bytes
 13303 ;; Hardware stack levels used:    1
 13304 ;; Hardware stack levels required when called:   12
 13305 ;; This function calls:
 13306 ;;		_oled_writeCommand
 13307 ;; This function is called by:
 13308 ;;		_oled_devInit
 13309 ;; This function uses a non-reentrant model
 13310 ;;
 13311                           
 13312                           	psect	text37
 13313  005F52                     __ptext37:
 13314                           	opt stack 0
 13315  005F52                     _oled_initialDispayLine:
 13316                           	opt stack 16
 13317                           
 13318                           ;incstack = 0
 13319                           ;oled_initialDispayLine@line stored from wreg
 13320  005F52  0100               	movlb	0	; () banked
 13321  005F54  6FB0               	movwf	oled_initialDispayLine@line& (0+255),b
 13322                           
 13323                           ; BSR set to: 0
 13324                           ;SSD1306oLED.c: 464: line|=0x40;
 13325  005F56  0100               	movlb	0	; () banked
 13326  005F58  8DB0               	bsf	oled_initialDispayLine@line& (0+255),6,b
 13327                           
 13328                           ; BSR set to: 0
 13329                           ;SSD1306oLED.c: 465: oled_writeCommand(line);
 13330  005F5A  0100               	movlb	0	; () banked
 13331  005F5C  51B0               	movf	oled_initialDispayLine@line& (0+255),w,b
 13332  005F5E  EC7A  F02F         	call	_oled_writeCommand
 13333  005F62  0012               	return	
 13334                           
 13335                           ;SSD1306oLED.c: 466: return;
 13336  005F64  0012               	return		;funcret
 13337  005F66                     __end_of_oled_initialDispayLine:
 13338                           	opt stack 0
 13339                           tblptru	equ	0xFF8
 13340                           tblptrh	equ	0xFF7
 13341                           tblptrl	equ	0xFF6
 13342                           tablat	equ	0xFF5
 13343                           prodh	equ	0xFF4
 13344                           prodl	equ	0xFF3
 13345                           intcon	equ	0xFF2
 13346                           intcon3	equ	0xFF0
 13347                           postinc0	equ	0xFEE
 13348                           wreg	equ	0xFE8
 13349                           indf1	equ	0xFE7
 13350                           postdec1	equ	0xFE5
 13351                           fsr1h	equ	0xFE2
 13352                           fsr1l	equ	0xFE1
 13353                           indf2	equ	0xFDF
 13354                           fsr2h	equ	0xFDA
 13355                           fsr2l	equ	0xFD9
 13356                           status	equ	0xFD8
 13357                           
 13358 ;; *************** function _oled_displayOff *****************
 13359 ;; Defined at:
 13360 ;;		line 425 in file "../Includes/Drivers/SSD1306oLED.c"
 13361 ;; Parameters:    Size  Location     Type
 13362 ;;  state           1    wreg     unsigned char 
 13363 ;; Auto vars:     Size  Location     Type
 13364 ;;  state           1    0[COMRAM] unsigned char 
 13365 ;; Return value:  Size  Location     Type
 13366 ;;		None               void
 13367 ;; Registers used:
 13368 ;;		wreg, cstack
 13369 ;; Tracked objects:
 13370 ;;		On entry : 0/0
 13371 ;;		On exit  : 0/0
 13372 ;;		Unchanged: 0/0
 13373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13374 ;;      Params:         0       0       0       0       0       0       0       0       0
 13375 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13376 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13377 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13378 ;;Total ram usage:        0 bytes
 13379 ;; Hardware stack levels used:    1
 13380 ;; Hardware stack levels required when called:   12
 13381 ;; This function calls:
 13382 ;;		_oled_writeCommand
 13383 ;; This function is called by:
 13384 ;;		_moteApp_GoToSleep
 13385 ;; This function uses a non-reentrant model
 13386 ;;
 13387                           
 13388                           	psect	text38
 13389  00602A                     __ptext38:
 13390                           	opt stack 0
 13391  00602A                     _oled_displayOff:
 13392                           	opt stack 15
 13393                           
 13394                           ;SSD1306oLED.c: 427: oled_writeCommand(0xae);
 13395                           
 13396                           ;incstack = 0
 13397  00602A  0EAE               	movlw	174
 13398  00602C  EC7A  F02F         	call	_oled_writeCommand
 13399  006030  0012               	return		;funcret
 13400  006032                     __end_of_oled_displayOff:
 13401                           	opt stack 0
 13402                           tblptru	equ	0xFF8
 13403                           tblptrh	equ	0xFF7
 13404                           tblptrl	equ	0xFF6
 13405                           tablat	equ	0xFF5
 13406                           prodh	equ	0xFF4
 13407                           prodl	equ	0xFF3
 13408                           intcon	equ	0xFF2
 13409                           intcon3	equ	0xFF0
 13410                           postinc0	equ	0xFEE
 13411                           wreg	equ	0xFE8
 13412                           indf1	equ	0xFE7
 13413                           postdec1	equ	0xFE5
 13414                           fsr1h	equ	0xFE2
 13415                           fsr1l	equ	0xFE1
 13416                           indf2	equ	0xFDF
 13417                           fsr2h	equ	0xFDA
 13418                           fsr2l	equ	0xFD9
 13419                           status	equ	0xFD8
 13420                           
 13421 ;; *************** function _moduleSleep *****************
 13422 ;; Defined at:
 13423 ;;		line 173 in file "../Includes/Board/MOTEapp.c"
 13424 ;; Parameters:    Size  Location     Type
 13425 ;;		None
 13426 ;; Auto vars:     Size  Location     Type
 13427 ;;		None
 13428 ;; Return value:  Size  Location     Type
 13429 ;;		None               void
 13430 ;; Registers used:
 13431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13432 ;; Tracked objects:
 13433 ;;		On entry : 0/0
 13434 ;;		On exit  : 0/0
 13435 ;;		Unchanged: 0/0
 13436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13437 ;;      Params:         0       0       0       0       0       0       0       0       0
 13438 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13439 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13440 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13441 ;;Total ram usage:        1 bytes
 13442 ;; Hardware stack levels used:    1
 13443 ;; Hardware stack levels required when called:   14
 13444 ;; This function calls:
 13445 ;;		_sendCommand
 13446 ;; This function is called by:
 13447 ;;		_moteApp_GoToSleep
 13448 ;; This function uses a non-reentrant model
 13449 ;;
 13450                           
 13451                           	psect	text39
 13452  005D7C                     __ptext39:
 13453                           	opt stack 0
 13454  005D7C                     _moduleSleep:
 13455                           	opt stack 13
 13456                           
 13457                           ;MOTEapp.c: 175: sendCommand("sys sleep 999999999");
 13458                           
 13459                           ;incstack = 0
 13460  005D7C  0E8C               	movlw	low STR_22
 13461  005D7E  0100               	movlb	0	; () banked
 13462  005D80  6FB0               	movwf	sendCommand@string& (0+255),b
 13463  005D82  0E7A               	movlw	high STR_22
 13464  005D84  0100               	movlb	0	; () banked
 13465  005D86  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 13466  005D88  EC49  F02E         	call	_sendCommand	;wreg free
 13467                           
 13468                           ;MOTEapp.c: 176: while(1 == PIE1bits.TXIE)
 13469  005D8C  D000               	goto	l352
 13470  005D8E                     l352:
 13471  005D8E  B89D               	btfsc	3997,4,c	;volatile
 13472  005D90  D7FE               	goto	l352
 13473                           
 13474                           ;MOTEapp.c: 178: _delay((unsigned long)((16)*(48000000/4000.0)));
 13475  005D92  0EFA               	movlw	250
 13476  005D94  0100               	movlb	0	; () banked
 13477  005D96  6FB2               	movwf	??_moduleSleep& (0+255),b
 13478  005D98  0E58               	movlw	88
 13479  005D9A                     u12617:
 13480  005D9A  2EE8               	decfsz	wreg,f,c
 13481  005D9C  D7FE               	goto	u12617
 13482  005D9E  2FB2               	decfsz	??_moduleSleep& (0+255),f,b
 13483  005DA0  D7FC               	goto	u12617
 13484  005DA2  D000               	nop2	
 13485  005DA4  0012               	return		;funcret
 13486  005DA6                     __end_of_moduleSleep:
 13487                           	opt stack 0
 13488                           tblptru	equ	0xFF8
 13489                           tblptrh	equ	0xFF7
 13490                           tblptrl	equ	0xFF6
 13491                           tablat	equ	0xFF5
 13492                           prodh	equ	0xFF4
 13493                           prodl	equ	0xFF3
 13494                           intcon	equ	0xFF2
 13495                           intcon3	equ	0xFF0
 13496                           postinc0	equ	0xFEE
 13497                           wreg	equ	0xFE8
 13498                           indf1	equ	0xFE7
 13499                           postdec1	equ	0xFE5
 13500                           fsr1h	equ	0xFE2
 13501                           fsr1l	equ	0xFE1
 13502                           indf2	equ	0xFDF
 13503                           fsr2h	equ	0xFDA
 13504                           fsr2l	equ	0xFD9
 13505                           status	equ	0xFD8
 13506                           
 13507 ;; *************** function _moduleResync *****************
 13508 ;; Defined at:
 13509 ;;		line 132 in file "../Includes/Board/MOTEapp.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;		None
 13512 ;; Auto vars:     Size  Location     Type
 13513 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 13514 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 13515 ;; Return value:  Size  Location     Type
 13516 ;;		None               void
 13517 ;; Registers used:
 13518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13519 ;; Tracked objects:
 13520 ;;		On entry : 0/0
 13521 ;;		On exit  : 0/0
 13522 ;;		Unchanged: 0/0
 13523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13524 ;;      Params:         0       0       0       0       0       0       0       0       0
 13525 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13526 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13527 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13528 ;;Total ram usage:        3 bytes
 13529 ;; Hardware stack levels used:    1
 13530 ;; Hardware stack levels required when called:   14
 13531 ;; This function calls:
 13532 ;;		_MOTEapp_getModuleResponse
 13533 ;;		_moteApp_delayms
 13534 ;;		_sendCommand
 13535 ;; This function is called by:
 13536 ;;		_main
 13537 ;;		_moteApp_GoToSleep
 13538 ;; This function uses a non-reentrant model
 13539 ;;
 13540                           
 13541                           	psect	text40
 13542  004D32                     __ptext40:
 13543                           	opt stack 0
 13544  004D32                     _moduleResync:
 13545                           	opt stack 13
 13546                           
 13547                           ;MOTEapp.c: 134: bool escapeEvent = 0;
 13548                           
 13549                           ;incstack = 0
 13550  004D32  0E00               	movlw	0
 13551  004D34  0100               	movlb	0	; () banked
 13552  004D36  6FB6               	movwf	moduleResync@escapeEvent& (0+255),b
 13553                           
 13554                           ;MOTEapp.c: 135: uint16_t escapeCounter = 0;
 13555  004D38  0E00               	movlw	0
 13556  004D3A  0100               	movlb	0	; () banked
 13557  004D3C  6FB5               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 13558  004D3E  0E00               	movlw	0
 13559  004D40  6FB4               	movwf	moduleResync@escapeCounter& (0+255),b
 13560                           
 13561                           ; BSR set to: 0
 13562                           ;MOTEapp.c: 143: TXSTAbits.TXEN = 0;
 13563  004D42  9AAC               	bcf	4012,5,c	;volatile
 13564                           
 13565                           ; BSR set to: 0
 13566                           ;MOTEapp.c: 144: LATCbits.LATC6 = 0;
 13567  004D44  9C8B               	bcf	3979,6,c	;volatile
 13568                           
 13569                           ; BSR set to: 0
 13570                           ;MOTEapp.c: 145: moteApp_delayms(10);
 13571  004D46  0E00               	movlw	0
 13572  004D48  0100               	movlb	0	; () banked
 13573  004D4A  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13574  004D4C  0E0A               	movlw	10
 13575  004D4E  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 13576  004D50  EC36  F02D         	call	_moteApp_delayms	;wreg free
 13577                           
 13578                           ;MOTEapp.c: 146: TXSTAbits.TXEN = 1;
 13579  004D54  8AAC               	bsf	4012,5,c	;volatile
 13580                           
 13581                           ;MOTEapp.c: 147: moteApp_delayms(5);
 13582  004D56  0E00               	movlw	0
 13583  004D58  0100               	movlb	0	; () banked
 13584  004D5A  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13585  004D5C  0E05               	movlw	5
 13586  004D5E  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 13587  004D60  EC36  F02D         	call	_moteApp_delayms	;wreg free
 13588                           
 13589                           ;MOTEapp.c: 149: TXREG = 0x55;
 13590  004D64  0E55               	movlw	85
 13591  004D66  6EAD               	movwf	4013,c	;volatile
 13592                           
 13593                           ;MOTEapp.c: 150: while (TXSTAbits.TRMT == 0)
 13594  004D68  D000               	goto	l334
 13595  004D6A                     l334:
 13596  004D6A  A2AC               	btfss	4012,1,c	;volatile
 13597  004D6C  D7FE               	goto	l334
 13598                           
 13599                           ;MOTEapp.c: 153: sendCommand("z");
 13600  004D6E  0EFD               	movlw	low STR_21
 13601  004D70  0100               	movlb	0	; () banked
 13602  004D72  6FB0               	movwf	sendCommand@string& (0+255),b
 13603  004D74  0E7F               	movlw	high STR_21
 13604  004D76  0100               	movlb	0	; () banked
 13605  004D78  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 13606  004D7A  EC49  F02E         	call	_sendCommand	;wreg free
 13607                           
 13608                           ;MOTEapp.c: 155: moteApp_delayms(40);
 13609  004D7E  0E00               	movlw	0
 13610  004D80  0100               	movlb	0	; () banked
 13611  004D82  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13612  004D84  0E28               	movlw	40
 13613  004D86  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 13614  004D88  EC36  F02D         	call	_moteApp_delayms	;wreg free
 13615                           
 13616                           ;MOTEapp.c: 156: while (escapeEvent)
 13617  004D8C  D014               	goto	l337
 13618  004D8E                     l11282:
 13619                           
 13620                           ;MOTEapp.c: 157: {
 13621                           ;MOTEapp.c: 158: if(MOTEapp_getModuleResponse())
 13622  004D8E  EC2E  F028         	call	_MOTEapp_getModuleResponse	;wreg free
 13623  004D92  0900               	iorlw	0
 13624  004D94  A4D8               	btfss	status,2,c
 13625  004D96  D00B               	goto	l11288
 13626                           
 13627                           ;MOTEapp.c: 160: else if (++escapeCounter > 5000)
 13628                           
 13629                           ; BSR set to: 0
 13630                           
 13631                           ;MOTEapp.c: 159: escapeEvent = 1;
 13632  004D98  0100               	movlb	0	; () banked
 13633  004D9A  4BB4               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 13634  004D9C  2BB5               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 13635  004D9E  0E89               	movlw	137
 13636  004DA0  0100               	movlb	0	; () banked
 13637  004DA2  5DB4               	subwf	moduleResync@escapeCounter& (0+255),w,b
 13638  004DA4  0E13               	movlw	19
 13639  004DA6  0100               	movlb	0	; () banked
 13640  004DA8  59B5               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 13641  004DAA  A0D8               	btfss	status,0,c
 13642  004DAC  D004               	goto	l337
 13643  004DAE                     l11288:
 13644                           
 13645                           ; BSR set to: 0
 13646                           ;MOTEapp.c: 161: escapeEvent = 1;
 13647  004DAE  0E01               	movlw	1
 13648  004DB0  0100               	movlb	0	; () banked
 13649  004DB2  6FB6               	movwf	moduleResync@escapeEvent& (0+255),b
 13650                           
 13651                           ; BSR set to: 0
 13652  004DB4  D000               	goto	l337
 13653  004DB6                     l337:
 13654  004DB6  0100               	movlb	0	; () banked
 13655  004DB8  51B6               	movf	moduleResync@escapeEvent& (0+255),w,b
 13656  004DBA  0100               	movlb	0	; () banked
 13657  004DBC  A4D8               	btfss	status,2,c
 13658  004DBE  D7E7               	goto	l11282
 13659                           
 13660                           ; BSR set to: 0
 13661                           
 13662                           ; BSR set to: 0
 13663  004DC0  0012               	return		;funcret
 13664  004DC2                     __end_of_moduleResync:
 13665                           	opt stack 0
 13666                           tblptru	equ	0xFF8
 13667                           tblptrh	equ	0xFF7
 13668                           tblptrl	equ	0xFF6
 13669                           tablat	equ	0xFF5
 13670                           prodh	equ	0xFF4
 13671                           prodl	equ	0xFF3
 13672                           intcon	equ	0xFF2
 13673                           intcon3	equ	0xFF0
 13674                           postinc0	equ	0xFEE
 13675                           wreg	equ	0xFE8
 13676                           indf1	equ	0xFE7
 13677                           postdec1	equ	0xFE5
 13678                           fsr1h	equ	0xFE2
 13679                           fsr1l	equ	0xFE1
 13680                           indf2	equ	0xFDF
 13681                           fsr2h	equ	0xFDA
 13682                           fsr2l	equ	0xFD9
 13683                           status	equ	0xFD8
 13684                           
 13685 ;; *************** function _MOTEapp_getModuleResponse *****************
 13686 ;; Defined at:
 13687 ;;		line 1072 in file "../Includes/Board/MOTEapp.c"
 13688 ;; Parameters:    Size  Location     Type
 13689 ;;		None
 13690 ;; Auto vars:     Size  Location     Type
 13691 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 13692 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 13693 ;; Return value:  Size  Location     Type
 13694 ;;                  1    wreg      unsigned char 
 13695 ;; Registers used:
 13696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13697 ;; Tracked objects:
 13698 ;;		On entry : 0/0
 13699 ;;		On exit  : 0/0
 13700 ;;		Unchanged: 0/0
 13701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13702 ;;      Params:         0       0       0       0       0       0       0       0       0
 13703 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13704 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13705 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13706 ;;Total ram usage:        2 bytes
 13707 ;; Hardware stack levels used:    1
 13708 ;; Hardware stack levels required when called:   12
 13709 ;; This function calls:
 13710 ;;		_EUSART_Read
 13711 ;; This function is called by:
 13712 ;;		_moduleResync
 13713 ;;		_moteHandler
 13714 ;;		_moteApp_setSensorsInput
 13715 ;;		_moteApp_getTempValue
 13716 ;;		_moteApp_getLightValue
 13717 ;; This function uses a non-reentrant model
 13718 ;;
 13719                           
 13720                           	psect	text41
 13721  00505C                     __ptext41:
 13722                           	opt stack 0
 13723  00505C                     _MOTEapp_getModuleResponse:
 13724                           	opt stack 15
 13725                           
 13726                           ;MOTEapp.c: 1074: bool terminatorReceived = 0;
 13727                           
 13728                           ; BSR set to: 0
 13729                           ;incstack = 0
 13730  00505C  0E00               	movlw	0
 13731  00505E  0100               	movlb	0	; () banked
 13732  005060  6FB0               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13733                           
 13734                           ;MOTEapp.c: 1076: if ((eusartRxCount))
 13735  005062  504D               	movf	_eusartRxCount,w,c	;volatile
 13736  005064  B4D8               	btfsc	status,2,c
 13737  005066  D034               	goto	l11164
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;MOTEapp.c: 1077: {
 13741                           ;MOTEapp.c: 1078: uint8_t bufferByte = 0;
 13742  005068  0E00               	movlw	0
 13743  00506A  0100               	movlb	0	; () banked
 13744  00506C  6FB1               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13745                           
 13746                           ; BSR set to: 0
 13747                           ;MOTEapp.c: 1079: bufferByte = EUSART_Read();
 13748  00506E  EC11  F02C         	call	_EUSART_Read	;wreg free
 13749  005072  0100               	movlb	0	; () banked
 13750  005074  6FB1               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;MOTEapp.c: 1081: if (bufferByte == 0x0D)
 13754  005076  0E0D               	movlw	13
 13755  005078  0100               	movlb	0	; () banked
 13756  00507A  19B1               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13757  00507C  A4D8               	btfss	status,2,c
 13758  00507E  D010               	goto	l11156
 13759                           
 13760                           ; BSR set to: 0
 13761                           ;MOTEapp.c: 1082: {
 13762                           ;MOTEapp.c: 1083: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 13763  005080  504F               	movf	_moduleBufferIndex,w,c
 13764  005082  0D01               	mullw	1
 13765  005084  0E68               	movlw	low _moduleResonseBuffer
 13766  005086  24F3               	addwf	prodl,w,c
 13767  005088  6ED9               	movwf	fsr2l,c
 13768  00508A  0E01               	movlw	high _moduleResonseBuffer
 13769  00508C  20F4               	addwfc	prodh,w,c
 13770  00508E  6EDA               	movwf	fsr2h,c
 13771  005090  0E00               	movlw	0
 13772  005092  6EDF               	movwf	indf2,c
 13773                           
 13774                           ; BSR set to: 0
 13775                           ;MOTEapp.c: 1084: terminatorReceived = 1;
 13776  005094  0E01               	movlw	1
 13777  005096  0100               	movlb	0	; () banked
 13778  005098  6FB0               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13779                           
 13780                           ; BSR set to: 0
 13781                           ;MOTEapp.c: 1085: moduleBufferIndex = 0;
 13782  00509A  0E00               	movlw	0
 13783  00509C  6E4F               	movwf	_moduleBufferIndex,c
 13784                           
 13785                           ;MOTEapp.c: 1086: }
 13786  00509E  D018               	goto	l11164
 13787  0050A0                     l11156:
 13788                           
 13789                           ; BSR set to: 0
 13790                           ;MOTEapp.c: 1087: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 13791  0050A0  0100               	movlb	0	; () banked
 13792  0050A2  51B1               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13793  0050A4  0100               	movlb	0	; () banked
 13794  0050A6  B4D8               	btfsc	status,2,c
 13795  0050A8  D013               	goto	l11164
 13796                           
 13797                           ; BSR set to: 0
 13798  0050AA  0E0A               	movlw	10
 13799  0050AC  0100               	movlb	0	; () banked
 13800  0050AE  19B1               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13801  0050B0  B4D8               	btfsc	status,2,c
 13802  0050B2  D00E               	goto	l11164
 13803  0050B4  D001               	goto	l11160
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;MOTEapp.c: 1088: {
 13807                           ;MOTEapp.c: 1090: }
 13808  0050B6  D00C               	goto	l11164
 13809  0050B8                     l11160:
 13810                           
 13811                           ; BSR set to: 0
 13812                           ;MOTEapp.c: 1091: else
 13813                           ;MOTEapp.c: 1092: {
 13814                           ;MOTEapp.c: 1093: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 13815  0050B8  504F               	movf	_moduleBufferIndex,w,c
 13816  0050BA  0D01               	mullw	1
 13817  0050BC  0E68               	movlw	low _moduleResonseBuffer
 13818  0050BE  24F3               	addwf	prodl,w,c
 13819  0050C0  6ED9               	movwf	fsr2l,c
 13820  0050C2  0E01               	movlw	high _moduleResonseBuffer
 13821  0050C4  20F4               	addwfc	prodh,w,c
 13822  0050C6  6EDA               	movwf	fsr2h,c
 13823  0050C8  C0B1  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 13824                           
 13825                           ; BSR set to: 0
 13826                           ;MOTEapp.c: 1095: moduleBufferIndex++;
 13827  0050CC  2A4F               	incf	_moduleBufferIndex,f,c
 13828                           
 13829                           ; BSR set to: 0
 13830                           
 13831                           ; BSR set to: 0
 13832  0050CE  D000               	goto	l11164
 13833  0050D0                     l11164:
 13834                           
 13835                           ; BSR set to: 0
 13836                           ;MOTEapp.c: 1096: }
 13837                           ;MOTEapp.c: 1097: }
 13838                           ;MOTEapp.c: 1098: return terminatorReceived;
 13839  0050D0  0100               	movlb	0	; () banked
 13840  0050D2  51B0               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 13841  0050D4  0012               	return	
 13842                           
 13843                           ; BSR set to: 0
 13844                           
 13845                           ; BSR set to: 0
 13846  0050D6  0012               	return		;funcret
 13847  0050D8                     __end_of_MOTEapp_getModuleResponse:
 13848                           	opt stack 0
 13849                           tblptru	equ	0xFF8
 13850                           tblptrh	equ	0xFF7
 13851                           tblptrl	equ	0xFF6
 13852                           tablat	equ	0xFF5
 13853                           prodh	equ	0xFF4
 13854                           prodl	equ	0xFF3
 13855                           intcon	equ	0xFF2
 13856                           intcon3	equ	0xFF0
 13857                           postinc0	equ	0xFEE
 13858                           wreg	equ	0xFE8
 13859                           indf1	equ	0xFE7
 13860                           postdec1	equ	0xFE5
 13861                           fsr1h	equ	0xFE2
 13862                           fsr1l	equ	0xFE1
 13863                           indf2	equ	0xFDF
 13864                           fsr2h	equ	0xFDA
 13865                           fsr2l	equ	0xFD9
 13866                           status	equ	0xFD8
 13867                           
 13868 ;; *************** function _EUSART_FlushBuffer *****************
 13869 ;; Defined at:
 13870 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 13871 ;; Parameters:    Size  Location     Type
 13872 ;;		None
 13873 ;; Auto vars:     Size  Location     Type
 13874 ;;  index           1    0[BANK0 ] unsigned char 
 13875 ;; Return value:  Size  Location     Type
 13876 ;;		None               void
 13877 ;; Registers used:
 13878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13879 ;; Tracked objects:
 13880 ;;		On entry : 0/0
 13881 ;;		On exit  : 0/0
 13882 ;;		Unchanged: 0/0
 13883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13884 ;;      Params:         0       0       0       0       0       0       0       0       0
 13885 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13886 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13887 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13888 ;;Total ram usage:        1 bytes
 13889 ;; Hardware stack levels used:    1
 13890 ;; Hardware stack levels required when called:   11
 13891 ;; This function calls:
 13892 ;;		Nothing
 13893 ;; This function is called by:
 13894 ;;		_test_powerup
 13895 ;;		_moteApp_GoToSleep
 13896 ;; This function uses a non-reentrant model
 13897 ;;
 13898                           
 13899                           	psect	text42
 13900  005786                     __ptext42:
 13901                           	opt stack 0
 13902  005786                     _EUSART_FlushBuffer:
 13903                           	opt stack 18
 13904                           
 13905                           ;eusart.c: 204: uint8_t index;
 13906                           ;eusart.c: 205: for (index=0; index < 64; index++)
 13907                           
 13908                           ; BSR set to: 0
 13909                           ;incstack = 0
 13910  005786  0E00               	movlw	0
 13911  005788  0100               	movlb	0	; () banked
 13912  00578A  6FAF               	movwf	EUSART_FlushBuffer@index& (0+255),b
 13913  00578C                     l11308:
 13914                           
 13915                           ; BSR set to: 0
 13916  00578C  0E3F               	movlw	63
 13917  00578E  0100               	movlb	0	; () banked
 13918  005790  65AF               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 13919  005792  D001               	goto	l11312
 13920                           
 13921                           ; BSR set to: 0
 13922  005794  D00E               	goto	l11318
 13923  005796                     l11312:
 13924                           
 13925                           ; BSR set to: 0
 13926                           ;eusart.c: 206: {
 13927                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 13928  005796  0100               	movlb	0	; () banked
 13929  005798  51AF               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 13930  00579A  0D01               	mullw	1
 13931  00579C  0E00               	movlw	low _eusartRxBuffer
 13932  00579E  24F3               	addwf	prodl,w,c
 13933  0057A0  6ED9               	movwf	fsr2l,c
 13934  0057A2  0E02               	movlw	high _eusartRxBuffer
 13935  0057A4  20F4               	addwfc	prodh,w,c
 13936  0057A6  6EDA               	movwf	fsr2h,c
 13937  0057A8  0E00               	movlw	0
 13938  0057AA  6EDF               	movwf	indf2,c
 13939                           
 13940                           ; BSR set to: 0
 13941  0057AC  0100               	movlb	0	; () banked
 13942  0057AE  2BAF               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 13943  0057B0  D7ED               	goto	l11308
 13944  0057B2                     l11318:
 13945                           
 13946                           ; BSR set to: 0
 13947                           ;eusart.c: 208: }
 13948                           ;eusart.c: 209: eusartRxHead = 0;
 13949  0057B2  0E00               	movlw	0
 13950  0057B4  0100               	movlb	0	; () banked
 13951  0057B6  6F96               	movwf	_eusartRxHead& (0+255),b
 13952                           
 13953                           ;eusart.c: 210: eusartRxTail = 0;
 13954  0057B8  0E00               	movlw	0
 13955  0057BA  0100               	movlb	0	; () banked
 13956  0057BC  6F97               	movwf	_eusartRxTail& (0+255),b
 13957                           
 13958                           ;eusart.c: 211: eusartRxCount = 0;
 13959  0057BE  0E00               	movlw	0
 13960  0057C0  6E4D               	movwf	_eusartRxCount,c	;volatile
 13961                           
 13962                           ; BSR set to: 0
 13963                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 13964  0057C2  989D               	bcf	3997,4,c	;volatile
 13965                           
 13966                           ;eusart.c: 214: eusartTxHead = 0;
 13967  0057C4  0E00               	movlw	0
 13968  0057C6  0100               	movlb	0	; () banked
 13969  0057C8  6F98               	movwf	_eusartTxHead& (0+255),b
 13970                           
 13971                           ;eusart.c: 215: eusartTxTail = 0;
 13972  0057CA  0E00               	movlw	0
 13973  0057CC  0100               	movlb	0	; () banked
 13974  0057CE  6F99               	movwf	_eusartTxTail& (0+255),b
 13975                           
 13976                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 13977  0057D0  0E40               	movlw	64
 13978  0057D2  6E4E               	movwf	_eusartTxBufferRemaining,c	;volatile
 13979                           
 13980                           ; BSR set to: 0
 13981  0057D4  0012               	return		;funcret
 13982  0057D6                     __end_of_EUSART_FlushBuffer:
 13983                           	opt stack 0
 13984                           tblptru	equ	0xFF8
 13985                           tblptrh	equ	0xFF7
 13986                           tblptrl	equ	0xFF6
 13987                           tablat	equ	0xFF5
 13988                           prodh	equ	0xFF4
 13989                           prodl	equ	0xFF3
 13990                           intcon	equ	0xFF2
 13991                           intcon3	equ	0xFF0
 13992                           postinc0	equ	0xFEE
 13993                           wreg	equ	0xFE8
 13994                           indf1	equ	0xFE7
 13995                           postdec1	equ	0xFE5
 13996                           fsr1h	equ	0xFE2
 13997                           fsr1l	equ	0xFE1
 13998                           indf2	equ	0xFDF
 13999                           fsr2h	equ	0xFDA
 14000                           fsr2l	equ	0xFD9
 14001                           status	equ	0xFD8
 14002                           
 14003 ;; *************** function _TMR2_ReadTimer *****************
 14004 ;; Defined at:
 14005 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 14006 ;; Parameters:    Size  Location     Type
 14007 ;;		None
 14008 ;; Auto vars:     Size  Location     Type
 14009 ;;  readVal         1    0[BANK0 ] unsigned char 
 14010 ;; Return value:  Size  Location     Type
 14011 ;;                  1    wreg      unsigned char 
 14012 ;; Registers used:
 14013 ;;		wreg, status,2
 14014 ;; Tracked objects:
 14015 ;;		On entry : 0/0
 14016 ;;		On exit  : 0/0
 14017 ;;		Unchanged: 0/0
 14018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14019 ;;      Params:         0       0       0       0       0       0       0       0       0
 14020 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14021 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14022 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14023 ;;Total ram usage:        1 bytes
 14024 ;; Hardware stack levels used:    1
 14025 ;; Hardware stack levels required when called:   11
 14026 ;; This function calls:
 14027 ;;		Nothing
 14028 ;; This function is called by:
 14029 ;;		_moteRunningProcess
 14030 ;; This function uses a non-reentrant model
 14031 ;;
 14032                           
 14033                           	psect	text43
 14034  005FE0                     __ptext43:
 14035                           	opt stack 0
 14036  005FE0                     _TMR2_ReadTimer:
 14037                           	opt stack 17
 14038                           
 14039                           ;tmr2.c: 88: uint8_t readVal;
 14040                           ;tmr2.c: 90: readVal = TMR2;
 14041                           
 14042                           ; BSR set to: 0
 14043                           ;incstack = 0
 14044  005FE0  CFBC F0AF          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 14045                           
 14046                           ;tmr2.c: 92: return readVal;
 14047  005FE4  0100               	movlb	0	; () banked
 14048  005FE6  51AF               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 14049  005FE8  0012               	return	
 14050                           
 14051                           ; BSR set to: 0
 14052                           
 14053                           ; BSR set to: 0
 14054  005FEA  0012               	return		;funcret
 14055  005FEC                     __end_of_TMR2_ReadTimer:
 14056                           	opt stack 0
 14057                           tblptru	equ	0xFF8
 14058                           tblptrh	equ	0xFF7
 14059                           tblptrl	equ	0xFF6
 14060                           tablat	equ	0xFF5
 14061                           prodh	equ	0xFF4
 14062                           prodl	equ	0xFF3
 14063                           intcon	equ	0xFF2
 14064                           intcon3	equ	0xFF0
 14065                           postinc0	equ	0xFEE
 14066                           wreg	equ	0xFE8
 14067                           indf1	equ	0xFE7
 14068                           postdec1	equ	0xFE5
 14069                           fsr1h	equ	0xFE2
 14070                           fsr1l	equ	0xFE1
 14071                           indf2	equ	0xFDF
 14072                           fsr2h	equ	0xFDA
 14073                           fsr2l	equ	0xFD9
 14074                           status	equ	0xFD8
 14075                           
 14076 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 14077 ;; Defined at:
 14078 ;;		line 979 in file "../Includes/Board/MOTEapp.c"
 14079 ;; Parameters:    Size  Location     Type
 14080 ;;  dr              1    wreg     unsigned char 
 14081 ;; Auto vars:     Size  Location     Type
 14082 ;;  dr              1    4[BANK0 ] unsigned char 
 14083 ;; Return value:  Size  Location     Type
 14084 ;;		None               void
 14085 ;; Registers used:
 14086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14087 ;; Tracked objects:
 14088 ;;		On entry : 0/0
 14089 ;;		On exit  : 0/0
 14090 ;;		Unchanged: 0/0
 14091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14092 ;;      Params:         0       0       0       0       0       0       0       0       0
 14093 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14094 ;;      Temps:          0       1       0       0       0       0       0       0       0
 14095 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14096 ;;Total ram usage:        2 bytes
 14097 ;; Hardware stack levels used:    1
 14098 ;; Hardware stack levels required when called:   14
 14099 ;; This function calls:
 14100 ;;		_sendCommand
 14101 ;; This function is called by:
 14102 ;;		_moteRunningProcess
 14103 ;; This function uses a non-reentrant model
 14104 ;;
 14105                           
 14106                           	psect	text44
 14107  002470                     __ptext44:
 14108                           	opt stack 0
 14109  002470                     _MOTEapp_SetDataRateSetting:
 14110                           	opt stack 14
 14111                           
 14112                           ; BSR set to: 0
 14113                           ;incstack = 0
 14114                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 14115  002470  0100               	movlb	0	; () banked
 14116  002472  6FB3               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;MOTEapp.c: 981: if (dr != 8)
 14120  002474  0E08               	movlw	8
 14121  002476  0100               	movlb	0	; () banked
 14122  002478  19B3               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 14123  00247A  B4D8               	btfsc	status,2,c
 14124  00247C  D075               	goto	l12046
 14125                           
 14126                           ; BSR set to: 0
 14127                           ;MOTEapp.c: 982: {
 14128                           ;MOTEapp.c: 983: sendCommand("mac set adr off");
 14129  00247E  0EAD               	movlw	low STR_163
 14130  002480  0100               	movlb	0	; () banked
 14131  002482  6FB0               	movwf	sendCommand@string& (0+255),b
 14132  002484  0E7C               	movlw	high STR_163
 14133  002486  0100               	movlb	0	; () banked
 14134  002488  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 14135  00248A  EC49  F02E         	call	_sendCommand	;wreg free
 14136                           
 14137                           ;MOTEapp.c: 984: _delay((unsigned long)((16)*(48000000/4000.0)));
 14138  00248E  0EFA               	movlw	250
 14139  002490  0100               	movlb	0	; () banked
 14140  002492  6FB2               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14141  002494  0E58               	movlw	88
 14142  002496                     u12627:
 14143  002496  2EE8               	decfsz	wreg,f,c
 14144  002498  D7FE               	goto	u12627
 14145  00249A  2FB2               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14146  00249C  D7FC               	goto	u12627
 14147  00249E  D000               	nop2	
 14148                           
 14149                           ;MOTEapp.c: 985: _delay((unsigned long)((16)*(48000000/4000.0)));
 14150  0024A0  0EFA               	movlw	250
 14151  0024A2  0100               	movlb	0	; () banked
 14152  0024A4  6FB2               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14153  0024A6  0E58               	movlw	88
 14154  0024A8                     u12637:
 14155  0024A8  2EE8               	decfsz	wreg,f,c
 14156  0024AA  D7FE               	goto	u12637
 14157  0024AC  2FB2               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14158  0024AE  D7FC               	goto	u12637
 14159  0024B0  D000               	nop2	
 14160                           
 14161                           ;MOTEapp.c: 986: _delay((unsigned long)((16)*(48000000/4000.0)));
 14162  0024B2  0EFA               	movlw	250
 14163  0024B4  0100               	movlb	0	; () banked
 14164  0024B6  6FB2               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14165  0024B8  0E58               	movlw	88
 14166  0024BA                     u12647:
 14167  0024BA  2EE8               	decfsz	wreg,f,c
 14168  0024BC  D7FE               	goto	u12647
 14169  0024BE  2FB2               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14170  0024C0  D7FC               	goto	u12647
 14171  0024C2  D000               	nop2	
 14172                           
 14173                           ;MOTEapp.c: 987: }
 14174                           ;MOTEapp.c: 989: switch (dr)
 14175  0024C4  D051               	goto	l12046
 14176  0024C6                     l12026:
 14177                           
 14178                           ;MOTEapp.c: 992: sendCommand("mac set dr 0");
 14179  0024C6  0E6B               	movlw	low STR_164
 14180  0024C8  0100               	movlb	0	; () banked
 14181  0024CA  6FB0               	movwf	sendCommand@string& (0+255),b
 14182  0024CC  0E7D               	movlw	high STR_164
 14183  0024CE  0100               	movlb	0	; () banked
 14184  0024D0  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 14185  0024D2  EC49  F02E         	call	_sendCommand	;wreg free
 14186                           
 14187                           ;MOTEapp.c: 993: break;
 14188  0024D6  D066               	goto	l12048
 14189  0024D8                     l12028:
 14190                           
 14191                           ;MOTEapp.c: 995: sendCommand("mac set dr 1");
 14192  0024D8  0E78               	movlw	low STR_165
 14193  0024DA  0100               	movlb	0	; () banked
 14194  0024DC  6FB0               	movwf	sendCommand@string& (0+255),b
 14195  0024DE  0E7D               	movlw	high STR_165
 14196  0024E0  0100               	movlb	0	; () banked
 14197  0024E2  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 14198  0024E4  EC49  F02E         	call	_sendCommand	;wreg free
 14199                           
 14200                           ;MOTEapp.c: 996: break;
 14201  0024E8  D05D               	goto	l12048
 14202  0024EA                     l12030:
 14203                           
 14204                           ;MOTEapp.c: 998: sendCommand("mac set dr 2");
 14205  0024EA  0E85               	movlw	low STR_166
 14206  0024EC  0100               	movlb	0	; () banked
 14207  0024EE  6FB0               	movwf	sendCommand@string& (0+255),b
 14208  0024F0  0E7D               	movlw	high STR_166
 14209  0024F2  0100               	movlb	0	; () banked
 14210  0024F4  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 14211  0024F6  EC49  F02E         	call	_sendCommand	;wreg free
 14212                           
 14213                           ;MOTEapp.c: 999: break;
 14214  0024FA  D054               	goto	l12048
 14215  0024FC                     l12032:
 14216                           
 14217                           ;MOTEapp.c: 1001: sendCommand("mac set dr 3");
 14218  0024FC  0E92               	movlw	low STR_167
 14219  0024FE  0100               	movlb	0	; () banked
 14220  002500  6FB0               	movwf	sendCommand@string& (0+255),b
 14221  002502  0E7D               	movlw	high STR_167
 14222  002504  0100               	movlb	0	; () banked
 14223  002506  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 14224  002508  EC49  F02E         	call	_sendCommand	;wreg free
 14225                           
 14226                           ;MOTEapp.c: 1002: break;
 14227  00250C  D04B               	goto	l12048
 14228  00250E                     l12034:
 14229                           
 14230                           ;MOTEapp.c: 1004: sendCommand("mac set dr 4");
 14231  00250E  0E9F               	movlw	low STR_168
 14232  002510  0100               	movlb	0	; () banked
 14233  002512  6FB0               	movwf	sendCommand@string& (0+255),b
 14234  002514  0E7D               	movlw	high STR_168
 14235  002516  0100               	movlb	0	; () banked
 14236  002518  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 14237  00251A  EC49  F02E         	call	_sendCommand	;wreg free
 14238                           
 14239                           ;MOTEapp.c: 1005: break;
 14240  00251E  D042               	goto	l12048
 14241  002520                     l12036:
 14242                           
 14243                           ;MOTEapp.c: 1007: sendCommand("mac set dr 5");
 14244  002520  0EAC               	movlw	low STR_169
 14245  002522  0100               	movlb	0	; () banked
 14246  002524  6FB0               	movwf	sendCommand@string& (0+255),b
 14247  002526  0E7D               	movlw	high STR_169
 14248  002528  0100               	movlb	0	; () banked
 14249  00252A  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 14250  00252C  EC49  F02E         	call	_sendCommand	;wreg free
 14251                           
 14252                           ;MOTEapp.c: 1008: break;
 14253  002530  D039               	goto	l12048
 14254  002532                     l12038:
 14255                           
 14256                           ;MOTEapp.c: 1010: sendCommand("mac set dr 6");
 14257  002532  0EB9               	movlw	low STR_170
 14258  002534  0100               	movlb	0	; () banked
 14259  002536  6FB0               	movwf	sendCommand@string& (0+255),b
 14260  002538  0E7D               	movlw	high STR_170
 14261  00253A  0100               	movlb	0	; () banked
 14262  00253C  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 14263  00253E  EC49  F02E         	call	_sendCommand	;wreg free
 14264                           
 14265                           ;MOTEapp.c: 1011: break;
 14266  002542  D030               	goto	l12048
 14267  002544                     l12040:
 14268                           
 14269                           ;MOTEapp.c: 1013: sendCommand("mac set dr 7");
 14270  002544  0EC6               	movlw	low STR_171
 14271  002546  0100               	movlb	0	; () banked
 14272  002548  6FB0               	movwf	sendCommand@string& (0+255),b
 14273  00254A  0E7D               	movlw	high STR_171
 14274  00254C  0100               	movlb	0	; () banked
 14275  00254E  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 14276  002550  EC49  F02E         	call	_sendCommand	;wreg free
 14277                           
 14278                           ;MOTEapp.c: 1014: break;
 14279  002554  D027               	goto	l12048
 14280  002556                     l12042:
 14281                           
 14282                           ;MOTEapp.c: 1016: sendCommand("mac set adr on");
 14283  002556  0EFB               	movlw	low STR_172
 14284  002558  0100               	movlb	0	; () banked
 14285  00255A  6FB0               	movwf	sendCommand@string& (0+255),b
 14286  00255C  0E7C               	movlw	high STR_172
 14287  00255E  0100               	movlb	0	; () banked
 14288  002560  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 14289  002562  EC49  F02E         	call	_sendCommand	;wreg free
 14290                           
 14291                           ;MOTEapp.c: 1018: }
 14292                           
 14293                           ;MOTEapp.c: 1017: break;
 14294  002566  D01E               	goto	l12048
 14295  002568                     l12046:
 14296  002568  0100               	movlb	0	; () banked
 14297  00256A  51B3               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 14298                           
 14299                           ; Switch size 1, requested type "space"
 14300                           ; Number of cases is 9, Range of values is 0 to 8
 14301                           ; switch strategies available:
 14302                           ; Name         Instructions Cycles
 14303                           ; simple_byte           28    15 (average)
 14304                           ;	Chosen strategy is simple_byte
 14305  00256C  0A00               	xorlw	0	; case 0
 14306  00256E  B4D8               	btfsc	status,2,c
 14307  002570  D7AA               	goto	l12026
 14308  002572  0A01               	xorlw	1	; case 1
 14309  002574  B4D8               	btfsc	status,2,c
 14310  002576  D7B0               	goto	l12028
 14311  002578  0A03               	xorlw	3	; case 2
 14312  00257A  B4D8               	btfsc	status,2,c
 14313  00257C  D7B6               	goto	l12030
 14314  00257E  0A01               	xorlw	1	; case 3
 14315  002580  B4D8               	btfsc	status,2,c
 14316  002582  D7BC               	goto	l12032
 14317  002584  0A07               	xorlw	7	; case 4
 14318  002586  B4D8               	btfsc	status,2,c
 14319  002588  D7C2               	goto	l12034
 14320  00258A  0A01               	xorlw	1	; case 5
 14321  00258C  B4D8               	btfsc	status,2,c
 14322  00258E  D7C8               	goto	l12036
 14323  002590  0A03               	xorlw	3	; case 6
 14324  002592  B4D8               	btfsc	status,2,c
 14325  002594  D7CE               	goto	l12038
 14326  002596  0A01               	xorlw	1	; case 7
 14327  002598  B4D8               	btfsc	status,2,c
 14328  00259A  D7D4               	goto	l12040
 14329  00259C  0A0F               	xorlw	15	; case 8
 14330  00259E  B4D8               	btfsc	status,2,c
 14331  0025A0  D7DA               	goto	l12042
 14332  0025A2  D000               	goto	l12048
 14333  0025A4                     l12048:
 14334                           
 14335                           ;MOTEapp.c: 1019: _delay((unsigned long)((16)*(48000000/4000.0)));
 14336  0025A4  0EFA               	movlw	250
 14337  0025A6  0100               	movlb	0	; () banked
 14338  0025A8  6FB2               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14339  0025AA  0E58               	movlw	88
 14340  0025AC                     u12657:
 14341  0025AC  2EE8               	decfsz	wreg,f,c
 14342  0025AE  D7FE               	goto	u12657
 14343  0025B0  2FB2               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14344  0025B2  D7FC               	goto	u12657
 14345  0025B4  D000               	nop2	
 14346                           
 14347                           ;MOTEapp.c: 1020: _delay((unsigned long)((16)*(48000000/4000.0)));
 14348  0025B6  0EFA               	movlw	250
 14349  0025B8  0100               	movlb	0	; () banked
 14350  0025BA  6FB2               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14351  0025BC  0E58               	movlw	88
 14352  0025BE                     u12667:
 14353  0025BE  2EE8               	decfsz	wreg,f,c
 14354  0025C0  D7FE               	goto	u12667
 14355  0025C2  2FB2               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14356  0025C4  D7FC               	goto	u12667
 14357  0025C6  D000               	nop2	
 14358                           
 14359                           ;MOTEapp.c: 1021: _delay((unsigned long)((16)*(48000000/4000.0)));
 14360  0025C8  0EFA               	movlw	250
 14361  0025CA  0100               	movlb	0	; () banked
 14362  0025CC  6FB2               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14363  0025CE  0E58               	movlw	88
 14364  0025D0                     u12677:
 14365  0025D0  2EE8               	decfsz	wreg,f,c
 14366  0025D2  D7FE               	goto	u12677
 14367  0025D4  2FB2               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14368  0025D6  D7FC               	goto	u12677
 14369  0025D8  D000               	nop2	
 14370                           
 14371                           ;MOTEapp.c: 1022: sendCommand("mac save");
 14372  0025DA  0E2C               	movlw	low STR_173
 14373  0025DC  0100               	movlb	0	; () banked
 14374  0025DE  6FB0               	movwf	sendCommand@string& (0+255),b
 14375  0025E0  0E7F               	movlw	high STR_173
 14376  0025E2  0100               	movlb	0	; () banked
 14377  0025E4  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 14378  0025E6  EC49  F02E         	call	_sendCommand	;wreg free
 14379  0025EA  0012               	return		;funcret
 14380  0025EC                     __end_of_MOTEapp_SetDataRateSetting:
 14381                           	opt stack 0
 14382                           tblptru	equ	0xFF8
 14383                           tblptrh	equ	0xFF7
 14384                           tblptrl	equ	0xFF6
 14385                           tablat	equ	0xFF5
 14386                           prodh	equ	0xFF4
 14387                           prodl	equ	0xFF3
 14388                           intcon	equ	0xFF2
 14389                           intcon3	equ	0xFF0
 14390                           postinc0	equ	0xFEE
 14391                           wreg	equ	0xFE8
 14392                           indf1	equ	0xFE7
 14393                           postdec1	equ	0xFE5
 14394                           fsr1h	equ	0xFE2
 14395                           fsr1l	equ	0xFE1
 14396                           indf2	equ	0xFDF
 14397                           fsr2h	equ	0xFDA
 14398                           fsr2l	equ	0xFD9
 14399                           status	equ	0xFD8
 14400                           
 14401 ;; *************** function _ADC_TempConversion *****************
 14402 ;; Defined at:
 14403 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 14404 ;; Parameters:    Size  Location     Type
 14405 ;;  tempRaw         1    wreg     enum E6650
 14406 ;; Auto vars:     Size  Location     Type
 14407 ;;  tempRaw         1   52[BANK0 ] enum E6650
 14408 ;;  val             4   54[BANK0 ] enum E6650
 14409 ;;  temp            1   53[BANK0 ] unsigned char 
 14410 ;; Return value:  Size  Location     Type
 14411 ;;                  1    wreg      unsigned char 
 14412 ;; Registers used:
 14413 ;;		wreg, status,2, status,0, cstack
 14414 ;; Tracked objects:
 14415 ;;		On entry : 0/0
 14416 ;;		On exit  : 0/0
 14417 ;;		Unchanged: 0/0
 14418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14419 ;;      Params:         0       0       0       0       0       0       0       0       0
 14420 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14421 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14422 ;;      Totals:         0       6       0       0       0       0       0       0       0
 14423 ;;Total ram usage:        6 bytes
 14424 ;; Hardware stack levels used:    1
 14425 ;; Hardware stack levels required when called:   13
 14426 ;; This function calls:
 14427 ;;		___fladd
 14428 ;;		___fldiv
 14429 ;;		___flmul
 14430 ;;		___fltol
 14431 ;;		___lbtofl
 14432 ;; This function is called by:
 14433 ;;		_moteHandler
 14434 ;;		_moteRunningProcess
 14435 ;;		_moteApp_testSensors
 14436 ;;		_test_adc
 14437 ;; This function uses a non-reentrant model
 14438 ;;
 14439                           
 14440                           	psect	text45
 14441  003A1E                     __ptext45:
 14442                           	opt stack 0
 14443  003A1E                     _ADC_TempConversion:
 14444                           	opt stack 15
 14445                           
 14446                           ;incstack = 0
 14447                           ;ADC_TempConversion@tempRaw stored from wreg
 14448  003A1E  0100               	movlb	0	; () banked
 14449  003A20  6FE3               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 14450                           
 14451                           ; BSR set to: 0
 14452                           ;adc.c: 138: uint8_t temp;
 14453                           ;adc.c: 140: double val = ((tempRaw * 3.2)/1024);
 14454  003A22  0ECD               	movlw	205
 14455  003A24  0100               	movlb	0	; () banked
 14456  003A26  6FC9               	movwf	___flmul@f2& (0+255),b
 14457  003A28  0ECC               	movlw	204
 14458  003A2A  6FCA               	movwf	(___flmul@f2+1)& (0+255),b
 14459  003A2C  0E4C               	movlw	76
 14460  003A2E  6FCB               	movwf	(___flmul@f2+2)& (0+255),b
 14461  003A30  0E40               	movlw	64
 14462  003A32  6FCC               	movwf	(___flmul@f2+3)& (0+255),b
 14463  003A34  0100               	movlb	0	; () banked
 14464  003A36  51E3               	movf	ADC_TempConversion@tempRaw& (0+255),w,b
 14465  003A38  ECC5  F02D         	call	___lbtofl
 14466  003A3C  C0B9  F0C5         	movff	?___lbtofl,___flmul@f1
 14467  003A40  C0BA  F0C6         	movff	?___lbtofl+1,___flmul@f1+1
 14468  003A44  C0BB  F0C7         	movff	?___lbtofl+2,___flmul@f1+2
 14469  003A48  C0BC  F0C8         	movff	?___lbtofl+3,___flmul@f1+3
 14470  003A4C  ECF6  F012         	call	___flmul	;wreg free
 14471  003A50  C0C5  F0D4         	movff	?___flmul,___fldiv@f1
 14472  003A54  C0C6  F0D5         	movff	?___flmul+1,___fldiv@f1+1
 14473  003A58  C0C7  F0D6         	movff	?___flmul+2,___fldiv@f1+2
 14474  003A5C  C0C8  F0D7         	movff	?___flmul+3,___fldiv@f1+3
 14475  003A60  0E00               	movlw	0
 14476  003A62  0100               	movlb	0	; () banked
 14477  003A64  6FD8               	movwf	___fldiv@f2& (0+255),b
 14478  003A66  0E00               	movlw	0
 14479  003A68  6FD9               	movwf	(___fldiv@f2+1)& (0+255),b
 14480  003A6A  0E80               	movlw	128
 14481  003A6C  6FDA               	movwf	(___fldiv@f2+2)& (0+255),b
 14482  003A6E  0E44               	movlw	68
 14483  003A70  6FDB               	movwf	(___fldiv@f2+3)& (0+255),b
 14484  003A72  EC73  F017         	call	___fldiv	;wreg free
 14485  003A76  C0D4  F0E5         	movff	?___fldiv,ADC_TempConversion@val
 14486  003A7A  C0D5  F0E6         	movff	?___fldiv+1,ADC_TempConversion@val+1
 14487  003A7E  C0D6  F0E7         	movff	?___fldiv+2,ADC_TempConversion@val+2
 14488  003A82  C0D7  F0E8         	movff	?___fldiv+3,ADC_TempConversion@val+3
 14489                           
 14490                           ;adc.c: 141: val = ((val - 0.5)*100);
 14491  003A86  0E00               	movlw	0
 14492  003A88  0100               	movlb	0	; () banked
 14493  003A8A  6FBD               	movwf	___fladd@f2& (0+255),b
 14494  003A8C  0E00               	movlw	0
 14495  003A8E  6FBE               	movwf	(___fladd@f2+1)& (0+255),b
 14496  003A90  0E00               	movlw	0
 14497  003A92  6FBF               	movwf	(___fladd@f2+2)& (0+255),b
 14498  003A94  0EBF               	movlw	191
 14499  003A96  6FC0               	movwf	(___fladd@f2+3)& (0+255),b
 14500  003A98  C0E5  F0B9         	movff	ADC_TempConversion@val,___fladd@f1
 14501  003A9C  C0E6  F0BA         	movff	ADC_TempConversion@val+1,___fladd@f1+1
 14502  003AA0  C0E7  F0BB         	movff	ADC_TempConversion@val+2,___fladd@f1+2
 14503  003AA4  C0E8  F0BC         	movff	ADC_TempConversion@val+3,___fladd@f1+3
 14504  003AA8  EC7A  F00F         	call	___fladd	;wreg free
 14505  003AAC  C0B9  F0C5         	movff	?___fladd,___flmul@f1
 14506  003AB0  C0BA  F0C6         	movff	?___fladd+1,___flmul@f1+1
 14507  003AB4  C0BB  F0C7         	movff	?___fladd+2,___flmul@f1+2
 14508  003AB8  C0BC  F0C8         	movff	?___fladd+3,___flmul@f1+3
 14509  003ABC  0E00               	movlw	0
 14510  003ABE  0100               	movlb	0	; () banked
 14511  003AC0  6FC9               	movwf	___flmul@f2& (0+255),b
 14512  003AC2  0E00               	movlw	0
 14513  003AC4  6FCA               	movwf	(___flmul@f2+1)& (0+255),b
 14514  003AC6  0EC8               	movlw	200
 14515  003AC8  6FCB               	movwf	(___flmul@f2+2)& (0+255),b
 14516  003ACA  0E42               	movlw	66
 14517  003ACC  6FCC               	movwf	(___flmul@f2+3)& (0+255),b
 14518  003ACE  ECF6  F012         	call	___flmul	;wreg free
 14519  003AD2  C0C5  F0E5         	movff	?___flmul,ADC_TempConversion@val
 14520  003AD6  C0C6  F0E6         	movff	?___flmul+1,ADC_TempConversion@val+1
 14521  003ADA  C0C7  F0E7         	movff	?___flmul+2,ADC_TempConversion@val+2
 14522  003ADE  C0C8  F0E8         	movff	?___flmul+3,ADC_TempConversion@val+3
 14523                           
 14524                           ;adc.c: 142: temp = (uint8_t) val;
 14525  003AE2  C0E5  F0AF         	movff	ADC_TempConversion@val,___fltol@f1
 14526  003AE6  C0E6  F0B0         	movff	ADC_TempConversion@val+1,___fltol@f1+1
 14527  003AEA  C0E7  F0B1         	movff	ADC_TempConversion@val+2,___fltol@f1+2
 14528  003AEE  C0E8  F0B2         	movff	ADC_TempConversion@val+3,___fltol@f1+3
 14529  003AF2  ECA0  F018         	call	___fltol	;wreg free
 14530  003AF6  0100               	movlb	0	; () banked
 14531  003AF8  51AF               	movf	?___fltol& (0+255),w,b
 14532  003AFA  0100               	movlb	0	; () banked
 14533  003AFC  6FE4               	movwf	ADC_TempConversion@temp& (0+255),b
 14534                           
 14535                           ; BSR set to: 0
 14536                           ;adc.c: 144: return temp;
 14537  003AFE  0100               	movlb	0	; () banked
 14538  003B00  51E4               	movf	ADC_TempConversion@temp& (0+255),w,b
 14539  003B02  0012               	return	
 14540                           
 14541                           ; BSR set to: 0
 14542                           
 14543                           ; BSR set to: 0
 14544  003B04  0012               	return		;funcret
 14545  003B06                     __end_of_ADC_TempConversion:
 14546                           	opt stack 0
 14547                           tblptru	equ	0xFF8
 14548                           tblptrh	equ	0xFF7
 14549                           tblptrl	equ	0xFF6
 14550                           tablat	equ	0xFF5
 14551                           prodh	equ	0xFF4
 14552                           prodl	equ	0xFF3
 14553                           intcon	equ	0xFF2
 14554                           intcon3	equ	0xFF0
 14555                           postinc0	equ	0xFEE
 14556                           wreg	equ	0xFE8
 14557                           indf1	equ	0xFE7
 14558                           postdec1	equ	0xFE5
 14559                           fsr1h	equ	0xFE2
 14560                           fsr1l	equ	0xFE1
 14561                           indf2	equ	0xFDF
 14562                           fsr2h	equ	0xFDA
 14563                           fsr2l	equ	0xFD9
 14564                           status	equ	0xFD8
 14565                           
 14566 ;; *************** function ___lbtofl *****************
 14567 ;; Defined at:
 14568 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtofl.c"
 14569 ;; Parameters:    Size  Location     Type
 14570 ;;  c               1    wreg     unsigned char 
 14571 ;; Auto vars:     Size  Location     Type
 14572 ;;  c               1   14[BANK0 ] unsigned char 
 14573 ;; Return value:  Size  Location     Type
 14574 ;;                  4   10[BANK0 ] unsigned char 
 14575 ;; Registers used:
 14576 ;;		wreg, status,2, status,0, cstack
 14577 ;; Tracked objects:
 14578 ;;		On entry : 0/0
 14579 ;;		On exit  : 0/0
 14580 ;;		Unchanged: 0/0
 14581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14582 ;;      Params:         0       4       0       0       0       0       0       0       0
 14583 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14584 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14585 ;;      Totals:         0       5       0       0       0       0       0       0       0
 14586 ;;Total ram usage:        5 bytes
 14587 ;; Hardware stack levels used:    1
 14588 ;; Hardware stack levels required when called:   12
 14589 ;; This function calls:
 14590 ;;		___flpack
 14591 ;; This function is called by:
 14592 ;;		_ADC_TempConversion
 14593 ;; This function uses a non-reentrant model
 14594 ;;
 14595                           
 14596                           	psect	text46
 14597  005B8A                     __ptext46:
 14598                           	opt stack 0
 14599  005B8A                     ___lbtofl:
 14600                           	opt stack 15
 14601                           
 14602                           ; BSR set to: 0
 14603                           ;incstack = 0
 14604                           ;___lbtofl@c stored from wreg
 14605  005B8A  0100               	movlb	0	; () banked
 14606  005B8C  6FBD               	movwf	___lbtofl@c& (0+255),b
 14607                           
 14608                           ; BSR set to: 0
 14609  005B8E  0100               	movlb	0	; () banked
 14610  005B90  51BD               	movf	___lbtofl@c& (0+255),w,b
 14611  005B92  0100               	movlb	0	; () banked
 14612  005B94  6FAF               	movwf	___flpack@arg& (0+255),b
 14613  005B96  6BB0               	clrf	(___flpack@arg+1)& (0+255),b
 14614  005B98  6BB1               	clrf	(___flpack@arg+2)& (0+255),b
 14615  005B9A  6BB2               	clrf	(___flpack@arg+3)& (0+255),b
 14616  005B9C  0E96               	movlw	150
 14617  005B9E  0100               	movlb	0	; () banked
 14618  005BA0  6FB3               	movwf	___flpack@exp& (0+255),b
 14619  005BA2  0E00               	movlw	0
 14620  005BA4  0100               	movlb	0	; () banked
 14621  005BA6  6FB4               	movwf	___flpack@sign& (0+255),b
 14622  005BA8  EC78  F011         	call	___flpack	;wreg free
 14623  005BAC  C0AF  F0B9         	movff	?___flpack,?___lbtofl
 14624  005BB0  C0B0  F0BA         	movff	?___flpack+1,?___lbtofl+1
 14625  005BB4  C0B1  F0BB         	movff	?___flpack+2,?___lbtofl+2
 14626  005BB8  C0B2  F0BC         	movff	?___flpack+3,?___lbtofl+3
 14627  005BBC  0012               	return	
 14628  005BBE  0012               	return		;funcret
 14629  005BC0                     __end_of___lbtofl:
 14630                           	opt stack 0
 14631                           tblptru	equ	0xFF8
 14632                           tblptrh	equ	0xFF7
 14633                           tblptrl	equ	0xFF6
 14634                           tablat	equ	0xFF5
 14635                           prodh	equ	0xFF4
 14636                           prodl	equ	0xFF3
 14637                           intcon	equ	0xFF2
 14638                           intcon3	equ	0xFF0
 14639                           postinc0	equ	0xFEE
 14640                           wreg	equ	0xFE8
 14641                           indf1	equ	0xFE7
 14642                           postdec1	equ	0xFE5
 14643                           fsr1h	equ	0xFE2
 14644                           fsr1l	equ	0xFE1
 14645                           indf2	equ	0xFDF
 14646                           fsr2h	equ	0xFDA
 14647                           fsr2l	equ	0xFD9
 14648                           status	equ	0xFD8
 14649                           
 14650 ;; *************** function ___fltol *****************
 14651 ;; Defined at:
 14652 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fltol.c"
 14653 ;; Parameters:    Size  Location     Type
 14654 ;;  f1              4    0[BANK0 ] unsigned char 
 14655 ;; Auto vars:     Size  Location     Type
 14656 ;;  exp1            1    9[BANK0 ] unsigned char 
 14657 ;;  sign1           1    8[BANK0 ] unsigned char 
 14658 ;; Return value:  Size  Location     Type
 14659 ;;                  4    0[BANK0 ] long 
 14660 ;; Registers used:
 14661 ;;		wreg, status,2, status,0
 14662 ;; Tracked objects:
 14663 ;;		On entry : 0/0
 14664 ;;		On exit  : 0/0
 14665 ;;		Unchanged: 0/0
 14666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14667 ;;      Params:         0       4       0       0       0       0       0       0       0
 14668 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14669 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14670 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14671 ;;Total ram usage:       10 bytes
 14672 ;; Hardware stack levels used:    1
 14673 ;; Hardware stack levels required when called:   11
 14674 ;; This function calls:
 14675 ;;		Nothing
 14676 ;; This function is called by:
 14677 ;;		_ADC_TempConversion
 14678 ;; This function uses a non-reentrant model
 14679 ;;
 14680                           
 14681                           	psect	text47
 14682  003140                     __ptext47:
 14683                           	opt stack 0
 14684  003140                     ___fltol:
 14685                           	opt stack 16
 14686                           
 14687                           ;incstack = 0
 14688  003140  0100               	movlb	0	; () banked
 14689  003142  35B1               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14690  003144  35B2               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14691  003146  0100               	movlb	0	; () banked
 14692  003148  6FB8               	movwf	___fltol@exp1& (0+255),b
 14693  00314A  0100               	movlb	0	; () banked
 14694  00314C  51B8               	movf	___fltol@exp1& (0+255),w,b
 14695  00314E  A4D8               	btfss	status,2,c
 14696  003150  D00A               	goto	l11634
 14697                           
 14698                           ; BSR set to: 0
 14699  003152  0E00               	movlw	0
 14700  003154  0100               	movlb	0	; () banked
 14701  003156  6FAF               	movwf	?___fltol& (0+255),b
 14702  003158  0E00               	movlw	0
 14703  00315A  6FB0               	movwf	(?___fltol+1)& (0+255),b
 14704  00315C  0E00               	movlw	0
 14705  00315E  6FB1               	movwf	(?___fltol+2)& (0+255),b
 14706  003160  0E00               	movlw	0
 14707  003162  6FB2               	movwf	(?___fltol+3)& (0+255),b
 14708                           
 14709                           ; BSR set to: 0
 14710  003164  0012               	return	
 14711  003166                     l11634:
 14712                           
 14713                           ; BSR set to: 0
 14714  003166  C0AF  F0B3         	movff	___fltol@f1,??___fltol
 14715  00316A  C0B0  F0B4         	movff	___fltol@f1+1,??___fltol+1
 14716  00316E  C0B1  F0B5         	movff	___fltol@f1+2,??___fltol+2
 14717  003172  C0B2  F0B6         	movff	___fltol@f1+3,??___fltol+3
 14718  003176  0E20               	movlw	32
 14719  003178  D006               	goto	u10220
 14720  00317A                     u10225:
 14721  00317A  0100               	movlb	0	; () banked
 14722  00317C  90D8               	bcf	status,0,c
 14723  00317E  33B6               	rrcf	(??___fltol+3)& (0+255),f,b
 14724  003180  33B5               	rrcf	(??___fltol+2)& (0+255),f,b
 14725  003182  33B4               	rrcf	(??___fltol+1)& (0+255),f,b
 14726  003184  33B3               	rrcf	??___fltol& (0+255),f,b
 14727  003186                     u10220:
 14728  003186  2EE8               	decfsz	wreg,f,c
 14729  003188  D7F8               	goto	u10225
 14730  00318A  0100               	movlb	0	; () banked
 14731  00318C  51B3               	movf	??___fltol& (0+255),w,b
 14732  00318E  0100               	movlb	0	; () banked
 14733  003190  6FB7               	movwf	___fltol@sign1& (0+255),b
 14734                           
 14735                           ; BSR set to: 0
 14736  003192  0100               	movlb	0	; () banked
 14737  003194  8FB1               	bsf	(___fltol@f1+2)& (0+255),7,b
 14738                           
 14739                           ; BSR set to: 0
 14740  003196  0EFF               	movlw	255
 14741  003198  0100               	movlb	0	; () banked
 14742  00319A  17AF               	andwf	___fltol@f1& (0+255),f,b
 14743  00319C  0EFF               	movlw	255
 14744  00319E  17B0               	andwf	(___fltol@f1+1)& (0+255),f,b
 14745  0031A0  0EFF               	movlw	255
 14746  0031A2  17B1               	andwf	(___fltol@f1+2)& (0+255),f,b
 14747  0031A4  0E00               	movlw	0
 14748  0031A6  17B2               	andwf	(___fltol@f1+3)& (0+255),f,b
 14749                           
 14750                           ; BSR set to: 0
 14751  0031A8  0E96               	movlw	150
 14752  0031AA  0100               	movlb	0	; () banked
 14753  0031AC  5FB8               	subwf	___fltol@exp1& (0+255),f,b
 14754                           
 14755                           ; BSR set to: 0
 14756  0031AE  0100               	movlb	0	; () banked
 14757  0031B0  AFB8               	btfss	___fltol@exp1& (0+255),7,b
 14758  0031B2  D01B               	goto	l11654
 14759                           
 14760                           ; BSR set to: 0
 14761  0031B4  0100               	movlb	0	; () banked
 14762  0031B6  51B8               	movf	___fltol@exp1& (0+255),w,b
 14763  0031B8  0A80               	xorlw	128
 14764  0031BA  0F97               	addlw	151
 14765  0031BC  B0D8               	btfsc	status,0,c
 14766  0031BE  D00B               	goto	l11650
 14767                           
 14768                           ; BSR set to: 0
 14769  0031C0  0E00               	movlw	0
 14770  0031C2  0100               	movlb	0	; () banked
 14771  0031C4  6FAF               	movwf	?___fltol& (0+255),b
 14772  0031C6  0E00               	movlw	0
 14773  0031C8  6FB0               	movwf	(?___fltol+1)& (0+255),b
 14774  0031CA  0E00               	movlw	0
 14775  0031CC  6FB1               	movwf	(?___fltol+2)& (0+255),b
 14776  0031CE  0E00               	movlw	0
 14777  0031D0  6FB2               	movwf	(?___fltol+3)& (0+255),b
 14778                           
 14779                           ; BSR set to: 0
 14780  0031D2  0012               	return	
 14781                           
 14782                           ; BSR set to: 0
 14783  0031D4  D000               	goto	l11650
 14784  0031D6                     l11650:
 14785                           
 14786                           ; BSR set to: 0
 14787  0031D6  0100               	movlb	0	; () banked
 14788  0031D8  90D8               	bcf	status,0,c
 14789  0031DA  33B2               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14790  0031DC  33B1               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14791  0031DE  33B0               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14792  0031E0  33AF               	rrcf	___fltol@f1& (0+255),f,b
 14793                           
 14794                           ; BSR set to: 0
 14795  0031E2  0100               	movlb	0	; () banked
 14796  0031E4  3FB8               	incfsz	___fltol@exp1& (0+255),f,b
 14797  0031E6  D7F7               	goto	l11650
 14798                           
 14799                           ; BSR set to: 0
 14800  0031E8  D01F               	goto	l11664
 14801  0031EA                     l11654:
 14802                           
 14803                           ; BSR set to: 0
 14804  0031EA  0E1F               	movlw	31
 14805  0031EC  0100               	movlb	0	; () banked
 14806  0031EE  65B8               	cpfsgt	___fltol@exp1& (0+255),b
 14807  0031F0  D014               	goto	l11662
 14808                           
 14809                           ; BSR set to: 0
 14810  0031F2  0E00               	movlw	0
 14811  0031F4  0100               	movlb	0	; () banked
 14812  0031F6  6FAF               	movwf	?___fltol& (0+255),b
 14813  0031F8  0E00               	movlw	0
 14814  0031FA  6FB0               	movwf	(?___fltol+1)& (0+255),b
 14815  0031FC  0E00               	movlw	0
 14816  0031FE  6FB1               	movwf	(?___fltol+2)& (0+255),b
 14817  003200  0E00               	movlw	0
 14818  003202  6FB2               	movwf	(?___fltol+3)& (0+255),b
 14819                           
 14820                           ; BSR set to: 0
 14821  003204  0012               	return	
 14822                           
 14823                           ; BSR set to: 0
 14824  003206  D009               	goto	l11662
 14825  003208                     l11660:
 14826                           
 14827                           ; BSR set to: 0
 14828  003208  0100               	movlb	0	; () banked
 14829  00320A  90D8               	bcf	status,0,c
 14830  00320C  37AF               	rlcf	___fltol@f1& (0+255),f,b
 14831  00320E  37B0               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14832  003210  37B1               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14833  003212  37B2               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14834  003214  0100               	movlb	0	; () banked
 14835  003216  07B8               	decf	___fltol@exp1& (0+255),f,b
 14836  003218  D000               	goto	l11662
 14837  00321A                     l11662:
 14838                           
 14839                           ; BSR set to: 0
 14840  00321A  0100               	movlb	0	; () banked
 14841  00321C  51B8               	movf	___fltol@exp1& (0+255),w,b
 14842  00321E  0100               	movlb	0	; () banked
 14843  003220  B4D8               	btfsc	status,2,c
 14844  003222  D002               	goto	l11664
 14845  003224  D7F1               	goto	l11660
 14846                           
 14847                           ; BSR set to: 0
 14848  003226  D000               	goto	l11664
 14849  003228                     l11664:
 14850                           
 14851                           ; BSR set to: 0
 14852  003228  0100               	movlb	0	; () banked
 14853  00322A  51B7               	movf	___fltol@sign1& (0+255),w,b
 14854  00322C  0100               	movlb	0	; () banked
 14855  00322E  B4D8               	btfsc	status,2,c
 14856  003230  D00A               	goto	l11668
 14857                           
 14858                           ; BSR set to: 0
 14859  003232  0100               	movlb	0	; () banked
 14860  003234  1FB2               	comf	(___fltol@f1+3)& (0+255),f,b
 14861  003236  1FB1               	comf	(___fltol@f1+2)& (0+255),f,b
 14862  003238  1FB0               	comf	(___fltol@f1+1)& (0+255),f,b
 14863  00323A  6DAF               	negf	___fltol@f1& (0+255),b
 14864  00323C  0E00               	movlw	0
 14865  00323E  23B0               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14866  003240  23B1               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14867  003242  23B2               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14868  003244  D000               	goto	l11668
 14869  003246                     l11668:
 14870                           
 14871                           ; BSR set to: 0
 14872  003246  C0AF  F0AF         	movff	___fltol@f1,?___fltol
 14873  00324A  C0B0  F0B0         	movff	___fltol@f1+1,?___fltol+1
 14874  00324E  C0B1  F0B1         	movff	___fltol@f1+2,?___fltol+2
 14875  003252  C0B2  F0B2         	movff	___fltol@f1+3,?___fltol+3
 14876  003256  0012               	return	
 14877                           
 14878                           ; BSR set to: 0
 14879                           
 14880                           ; BSR set to: 0
 14881  003258  0012               	return		;funcret
 14882  00325A                     __end_of___fltol:
 14883                           	opt stack 0
 14884                           tblptru	equ	0xFF8
 14885                           tblptrh	equ	0xFF7
 14886                           tblptrl	equ	0xFF6
 14887                           tablat	equ	0xFF5
 14888                           prodh	equ	0xFF4
 14889                           prodl	equ	0xFF3
 14890                           intcon	equ	0xFF2
 14891                           intcon3	equ	0xFF0
 14892                           postinc0	equ	0xFEE
 14893                           wreg	equ	0xFE8
 14894                           indf1	equ	0xFE7
 14895                           postdec1	equ	0xFE5
 14896                           fsr1h	equ	0xFE2
 14897                           fsr1l	equ	0xFE1
 14898                           indf2	equ	0xFDF
 14899                           fsr2h	equ	0xFDA
 14900                           fsr2l	equ	0xFD9
 14901                           status	equ	0xFD8
 14902                           
 14903 ;; *************** function ___flmul *****************
 14904 ;; Defined at:
 14905 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flmul.c"
 14906 ;; Parameters:    Size  Location     Type
 14907 ;;  f1              4   22[BANK0 ] long 
 14908 ;;  f2              4   26[BANK0 ] long 
 14909 ;; Auto vars:     Size  Location     Type
 14910 ;;  f3_as_produc    4   31[BANK0 ] unsigned long 
 14911 ;;  sign            1   36[BANK0 ] unsigned char 
 14912 ;;  cntr            1   35[BANK0 ] unsigned char 
 14913 ;;  exp             1   30[BANK0 ] unsigned char 
 14914 ;; Return value:  Size  Location     Type
 14915 ;;                  4   22[BANK0 ] unsigned char 
 14916 ;; Registers used:
 14917 ;;		wreg, status,2, status,0, cstack
 14918 ;; Tracked objects:
 14919 ;;		On entry : 0/0
 14920 ;;		On exit  : 0/0
 14921 ;;		Unchanged: 0/0
 14922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14923 ;;      Params:         0       8       0       0       0       0       0       0       0
 14924 ;;      Locals:         0       7       0       0       0       0       0       0       0
 14925 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14926 ;;      Totals:         0      15       0       0       0       0       0       0       0
 14927 ;;Total ram usage:       15 bytes
 14928 ;; Hardware stack levels used:    1
 14929 ;; Hardware stack levels required when called:   12
 14930 ;; This function calls:
 14931 ;;		___flpack
 14932 ;; This function is called by:
 14933 ;;		_ADC_TempConversion
 14934 ;; This function uses a non-reentrant model
 14935 ;;
 14936                           
 14937                           	psect	text48
 14938  0025EC                     __ptext48:
 14939                           	opt stack 0
 14940  0025EC                     ___flmul:
 14941                           	opt stack 15
 14942                           
 14943                           ; BSR set to: 0
 14944                           ;incstack = 0
 14945  0025EC  0100               	movlb	0	; () banked
 14946  0025EE  35C7               	rlcf	(___flmul@f1+2)& (0+255),w,b
 14947  0025F0  35C8               	rlcf	(___flmul@f1+3)& (0+255),w,b
 14948  0025F2  0100               	movlb	0	; () banked
 14949  0025F4  6FCD               	movwf	___flmul@exp& (0+255),b
 14950  0025F6  0100               	movlb	0	; () banked
 14951  0025F8  51CD               	movf	___flmul@exp& (0+255),w,b
 14952  0025FA  A4D8               	btfss	status,2,c
 14953  0025FC  D00A               	goto	l11548
 14954                           
 14955                           ; BSR set to: 0
 14956  0025FE  0E00               	movlw	0
 14957  002600  0100               	movlb	0	; () banked
 14958  002602  6FC5               	movwf	?___flmul& (0+255),b
 14959  002604  0E00               	movlw	0
 14960  002606  6FC6               	movwf	(?___flmul+1)& (0+255),b
 14961  002608  0E00               	movlw	0
 14962  00260A  6FC7               	movwf	(?___flmul+2)& (0+255),b
 14963  00260C  0E00               	movlw	0
 14964  00260E  6FC8               	movwf	(?___flmul+3)& (0+255),b
 14965                           
 14966                           ; BSR set to: 0
 14967  002610  0012               	return	
 14968  002612                     l11548:
 14969                           
 14970                           ; BSR set to: 0
 14971  002612  0100               	movlb	0	; () banked
 14972  002614  35CB               	rlcf	(___flmul@f2+2)& (0+255),w,b
 14973  002616  35CC               	rlcf	(___flmul@f2+3)& (0+255),w,b
 14974  002618  0100               	movlb	0	; () banked
 14975  00261A  6FD3               	movwf	___flmul@sign& (0+255),b
 14976  00261C  0100               	movlb	0	; () banked
 14977  00261E  51D3               	movf	___flmul@sign& (0+255),w,b
 14978  002620  A4D8               	btfss	status,2,c
 14979  002622  D00A               	goto	l11554
 14980                           
 14981                           ; BSR set to: 0
 14982  002624  0E00               	movlw	0
 14983  002626  0100               	movlb	0	; () banked
 14984  002628  6FC5               	movwf	?___flmul& (0+255),b
 14985  00262A  0E00               	movlw	0
 14986  00262C  6FC6               	movwf	(?___flmul+1)& (0+255),b
 14987  00262E  0E00               	movlw	0
 14988  002630  6FC7               	movwf	(?___flmul+2)& (0+255),b
 14989  002632  0E00               	movlw	0
 14990  002634  6FC8               	movwf	(?___flmul+3)& (0+255),b
 14991                           
 14992                           ; BSR set to: 0
 14993  002636  0012               	return	
 14994  002638                     l11554:
 14995                           
 14996                           ; BSR set to: 0
 14997  002638  0100               	movlb	0	; () banked
 14998  00263A  51D3               	movf	___flmul@sign& (0+255),w,b
 14999  00263C  0F7B               	addlw	123
 15000  00263E  0100               	movlb	0	; () banked
 15001  002640  27CD               	addwf	___flmul@exp& (0+255),f,b
 15002                           
 15003                           ; BSR set to: 0
 15004  002642  C0C8  F0D3         	movff	___flmul@f1+3,___flmul@sign
 15005  002646  0100               	movlb	0	; () banked
 15006  002648  51CC               	movf	(___flmul@f2+3)& (0+255),w,b
 15007  00264A  0100               	movlb	0	; () banked
 15008  00264C  1BD3               	xorwf	___flmul@sign& (0+255),f,b
 15009  00264E  0E80               	movlw	128
 15010  002650  0100               	movlb	0	; () banked
 15011  002652  17D3               	andwf	___flmul@sign& (0+255),f,b
 15012                           
 15013                           ; BSR set to: 0
 15014  002654  0100               	movlb	0	; () banked
 15015  002656  8FC7               	bsf	(___flmul@f1+2)& (0+255),7,b
 15016                           
 15017                           ; BSR set to: 0
 15018  002658  0100               	movlb	0	; () banked
 15019  00265A  8FCB               	bsf	(___flmul@f2+2)& (0+255),7,b
 15020  00265C  0EFF               	movlw	255
 15021  00265E  0100               	movlb	0	; () banked
 15022  002660  17C9               	andwf	___flmul@f2& (0+255),f,b
 15023  002662  0EFF               	movlw	255
 15024  002664  17CA               	andwf	(___flmul@f2+1)& (0+255),f,b
 15025  002666  0EFF               	movlw	255
 15026  002668  17CB               	andwf	(___flmul@f2+2)& (0+255),f,b
 15027  00266A  0E00               	movlw	0
 15028  00266C  17CC               	andwf	(___flmul@f2+3)& (0+255),f,b
 15029                           
 15030                           ; BSR set to: 0
 15031  00266E  0E00               	movlw	0
 15032  002670  0100               	movlb	0	; () banked
 15033  002672  6FCE               	movwf	___flmul@f3_as_product& (0+255),b
 15034  002674  0E00               	movlw	0
 15035  002676  6FCF               	movwf	(___flmul@f3_as_product+1)& (0+255),b
 15036  002678  0E00               	movlw	0
 15037  00267A  6FD0               	movwf	(___flmul@f3_as_product+2)& (0+255),b
 15038  00267C  0E00               	movlw	0
 15039  00267E  6FD1               	movwf	(___flmul@f3_as_product+3)& (0+255),b
 15040                           
 15041                           ; BSR set to: 0
 15042  002680  0E07               	movlw	7
 15043  002682  0100               	movlb	0	; () banked
 15044  002684  6FD2               	movwf	___flmul@cntr& (0+255),b
 15045  002686  D000               	goto	l11566
 15046  002688                     l11566:
 15047                           
 15048                           ; BSR set to: 0
 15049  002688  0100               	movlb	0	; () banked
 15050  00268A  A1C5               	btfss	___flmul@f1& (0+255),0,b
 15051  00268C  D011               	goto	l11570
 15052                           
 15053                           ; BSR set to: 0
 15054  00268E  0100               	movlb	0	; () banked
 15055  002690  51C9               	movf	___flmul@f2& (0+255),w,b
 15056  002692  0100               	movlb	0	; () banked
 15057  002694  27CE               	addwf	___flmul@f3_as_product& (0+255),f,b
 15058  002696  0100               	movlb	0	; () banked
 15059  002698  51CA               	movf	(___flmul@f2+1)& (0+255),w,b
 15060  00269A  0100               	movlb	0	; () banked
 15061  00269C  23CF               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 15062  00269E  0100               	movlb	0	; () banked
 15063  0026A0  51CB               	movf	(___flmul@f2+2)& (0+255),w,b
 15064  0026A2  0100               	movlb	0	; () banked
 15065  0026A4  23D0               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 15066  0026A6  0100               	movlb	0	; () banked
 15067  0026A8  51CC               	movf	(___flmul@f2+3)& (0+255),w,b
 15068  0026AA  0100               	movlb	0	; () banked
 15069  0026AC  23D1               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 15070  0026AE  D000               	goto	l11570
 15071  0026B0                     l11570:
 15072                           
 15073                           ; BSR set to: 0
 15074  0026B0  0100               	movlb	0	; () banked
 15075  0026B2  90D8               	bcf	status,0,c
 15076  0026B4  33C8               	rrcf	(___flmul@f1+3)& (0+255),f,b
 15077  0026B6  33C7               	rrcf	(___flmul@f1+2)& (0+255),f,b
 15078  0026B8  33C6               	rrcf	(___flmul@f1+1)& (0+255),f,b
 15079  0026BA  33C5               	rrcf	___flmul@f1& (0+255),f,b
 15080                           
 15081                           ; BSR set to: 0
 15082  0026BC  0100               	movlb	0	; () banked
 15083  0026BE  90D8               	bcf	status,0,c
 15084  0026C0  37C9               	rlcf	___flmul@f2& (0+255),f,b
 15085  0026C2  37CA               	rlcf	(___flmul@f2+1)& (0+255),f,b
 15086  0026C4  37CB               	rlcf	(___flmul@f2+2)& (0+255),f,b
 15087  0026C6  37CC               	rlcf	(___flmul@f2+3)& (0+255),f,b
 15088                           
 15089                           ; BSR set to: 0
 15090  0026C8  0100               	movlb	0	; () banked
 15091  0026CA  2FD2               	decfsz	___flmul@cntr& (0+255),f,b
 15092  0026CC  D7DD               	goto	l11566
 15093  0026CE  D000               	goto	l11576
 15094  0026D0                     l11576:
 15095                           
 15096                           ; BSR set to: 0
 15097  0026D0  0E11               	movlw	17
 15098  0026D2  0100               	movlb	0	; () banked
 15099  0026D4  6FD2               	movwf	___flmul@cntr& (0+255),b
 15100  0026D6  D000               	goto	l11578
 15101  0026D8                     l11578:
 15102                           
 15103                           ; BSR set to: 0
 15104  0026D8  0100               	movlb	0	; () banked
 15105  0026DA  A1C5               	btfss	___flmul@f1& (0+255),0,b
 15106  0026DC  D011               	goto	l11582
 15107                           
 15108                           ; BSR set to: 0
 15109  0026DE  0100               	movlb	0	; () banked
 15110  0026E0  51C9               	movf	___flmul@f2& (0+255),w,b
 15111  0026E2  0100               	movlb	0	; () banked
 15112  0026E4  27CE               	addwf	___flmul@f3_as_product& (0+255),f,b
 15113  0026E6  0100               	movlb	0	; () banked
 15114  0026E8  51CA               	movf	(___flmul@f2+1)& (0+255),w,b
 15115  0026EA  0100               	movlb	0	; () banked
 15116  0026EC  23CF               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 15117  0026EE  0100               	movlb	0	; () banked
 15118  0026F0  51CB               	movf	(___flmul@f2+2)& (0+255),w,b
 15119  0026F2  0100               	movlb	0	; () banked
 15120  0026F4  23D0               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 15121  0026F6  0100               	movlb	0	; () banked
 15122  0026F8  51CC               	movf	(___flmul@f2+3)& (0+255),w,b
 15123  0026FA  0100               	movlb	0	; () banked
 15124  0026FC  23D1               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 15125  0026FE  D000               	goto	l11582
 15126  002700                     l11582:
 15127                           
 15128                           ; BSR set to: 0
 15129  002700  0100               	movlb	0	; () banked
 15130  002702  90D8               	bcf	status,0,c
 15131  002704  33C8               	rrcf	(___flmul@f1+3)& (0+255),f,b
 15132  002706  33C7               	rrcf	(___flmul@f1+2)& (0+255),f,b
 15133  002708  33C6               	rrcf	(___flmul@f1+1)& (0+255),f,b
 15134  00270A  33C5               	rrcf	___flmul@f1& (0+255),f,b
 15135                           
 15136                           ; BSR set to: 0
 15137  00270C  0100               	movlb	0	; () banked
 15138  00270E  90D8               	bcf	status,0,c
 15139  002710  33D1               	rrcf	(___flmul@f3_as_product+3)& (0+255),f,b
 15140  002712  33D0               	rrcf	(___flmul@f3_as_product+2)& (0+255),f,b
 15141  002714  33CF               	rrcf	(___flmul@f3_as_product+1)& (0+255),f,b
 15142  002716  33CE               	rrcf	___flmul@f3_as_product& (0+255),f,b
 15143                           
 15144                           ; BSR set to: 0
 15145  002718  0100               	movlb	0	; () banked
 15146  00271A  2FD2               	decfsz	___flmul@cntr& (0+255),f,b
 15147  00271C  D7DD               	goto	l11578
 15148  00271E  D000               	goto	l11588
 15149  002720                     l11588:
 15150                           
 15151                           ; BSR set to: 0
 15152  002720  C0CE  F0AF         	movff	___flmul@f3_as_product,___flpack@arg
 15153  002724  C0CF  F0B0         	movff	___flmul@f3_as_product+1,___flpack@arg+1
 15154  002728  C0D0  F0B1         	movff	___flmul@f3_as_product+2,___flpack@arg+2
 15155  00272C  C0D1  F0B2         	movff	___flmul@f3_as_product+3,___flpack@arg+3
 15156  002730  C0CD  F0B3         	movff	___flmul@exp,___flpack@exp
 15157  002734  C0D3  F0B4         	movff	___flmul@sign,___flpack@sign
 15158  002738  EC78  F011         	call	___flpack	;wreg free
 15159  00273C  C0AF  F0C5         	movff	?___flpack,?___flmul
 15160  002740  C0B0  F0C6         	movff	?___flpack+1,?___flmul+1
 15161  002744  C0B1  F0C7         	movff	?___flpack+2,?___flmul+2
 15162  002748  C0B2  F0C8         	movff	?___flpack+3,?___flmul+3
 15163  00274C  0012               	return	
 15164  00274E  0012               	return		;funcret
 15165  002750                     __end_of___flmul:
 15166                           	opt stack 0
 15167                           tblptru	equ	0xFF8
 15168                           tblptrh	equ	0xFF7
 15169                           tblptrl	equ	0xFF6
 15170                           tablat	equ	0xFF5
 15171                           prodh	equ	0xFF4
 15172                           prodl	equ	0xFF3
 15173                           intcon	equ	0xFF2
 15174                           intcon3	equ	0xFF0
 15175                           postinc0	equ	0xFEE
 15176                           wreg	equ	0xFE8
 15177                           indf1	equ	0xFE7
 15178                           postdec1	equ	0xFE5
 15179                           fsr1h	equ	0xFE2
 15180                           fsr1l	equ	0xFE1
 15181                           indf2	equ	0xFDF
 15182                           fsr2h	equ	0xFDA
 15183                           fsr2l	equ	0xFD9
 15184                           status	equ	0xFD8
 15185                           
 15186 ;; *************** function ___fldiv *****************
 15187 ;; Defined at:
 15188 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldiv.c"
 15189 ;; Parameters:    Size  Location     Type
 15190 ;;  f1              4   37[BANK0 ] unsigned char 
 15191 ;;  f2              4   41[BANK0 ] unsigned char 
 15192 ;; Auto vars:     Size  Location     Type
 15193 ;;  f3              4   45[BANK0 ] unsigned char 
 15194 ;;  sign            1   51[BANK0 ] unsigned char 
 15195 ;;  exp             1   50[BANK0 ] unsigned char 
 15196 ;;  cntr            1   49[BANK0 ] unsigned char 
 15197 ;; Return value:  Size  Location     Type
 15198 ;;                  4   37[BANK0 ] unsigned char 
 15199 ;; Registers used:
 15200 ;;		wreg, status,2, status,0, cstack
 15201 ;; Tracked objects:
 15202 ;;		On entry : 0/0
 15203 ;;		On exit  : 0/0
 15204 ;;		Unchanged: 0/0
 15205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15206 ;;      Params:         0       8       0       0       0       0       0       0       0
 15207 ;;      Locals:         0       7       0       0       0       0       0       0       0
 15208 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15209 ;;      Totals:         0      15       0       0       0       0       0       0       0
 15210 ;;Total ram usage:       15 bytes
 15211 ;; Hardware stack levels used:    1
 15212 ;; Hardware stack levels required when called:   12
 15213 ;; This function calls:
 15214 ;;		___flpack
 15215 ;; This function is called by:
 15216 ;;		_ADC_TempConversion
 15217 ;; This function uses a non-reentrant model
 15218 ;;
 15219                           
 15220                           	psect	text49
 15221  002EE6                     __ptext49:
 15222                           	opt stack 0
 15223  002EE6                     ___fldiv:
 15224                           	opt stack 15
 15225                           
 15226                           ;incstack = 0
 15227  002EE6  0100               	movlb	0	; () banked
 15228  002EE8  35D6               	rlcf	(___fldiv@f1+2)& (0+255),w,b
 15229  002EEA  35D7               	rlcf	(___fldiv@f1+3)& (0+255),w,b
 15230  002EEC  0100               	movlb	0	; () banked
 15231  002EEE  6FE1               	movwf	___fldiv@exp& (0+255),b
 15232  002EF0  0100               	movlb	0	; () banked
 15233  002EF2  51E1               	movf	___fldiv@exp& (0+255),w,b
 15234  002EF4  A4D8               	btfss	status,2,c
 15235  002EF6  D00A               	goto	l11508
 15236                           
 15237                           ; BSR set to: 0
 15238  002EF8  0E00               	movlw	0
 15239  002EFA  0100               	movlb	0	; () banked
 15240  002EFC  6FD4               	movwf	?___fldiv& (0+255),b
 15241  002EFE  0E00               	movlw	0
 15242  002F00  6FD5               	movwf	(?___fldiv+1)& (0+255),b
 15243  002F02  0E00               	movlw	0
 15244  002F04  6FD6               	movwf	(?___fldiv+2)& (0+255),b
 15245  002F06  0E00               	movlw	0
 15246  002F08  6FD7               	movwf	(?___fldiv+3)& (0+255),b
 15247                           
 15248                           ; BSR set to: 0
 15249  002F0A  0012               	return	
 15250  002F0C                     l11508:
 15251                           
 15252                           ; BSR set to: 0
 15253  002F0C  0100               	movlb	0	; () banked
 15254  002F0E  35DA               	rlcf	(___fldiv@f2+2)& (0+255),w,b
 15255  002F10  35DB               	rlcf	(___fldiv@f2+3)& (0+255),w,b
 15256  002F12  0100               	movlb	0	; () banked
 15257  002F14  6FE2               	movwf	___fldiv@sign& (0+255),b
 15258  002F16  0100               	movlb	0	; () banked
 15259  002F18  51E2               	movf	___fldiv@sign& (0+255),w,b
 15260  002F1A  A4D8               	btfss	status,2,c
 15261  002F1C  D00A               	goto	l11514
 15262                           
 15263                           ; BSR set to: 0
 15264  002F1E  0E00               	movlw	0
 15265  002F20  0100               	movlb	0	; () banked
 15266  002F22  6FD4               	movwf	?___fldiv& (0+255),b
 15267  002F24  0E00               	movlw	0
 15268  002F26  6FD5               	movwf	(?___fldiv+1)& (0+255),b
 15269  002F28  0E00               	movlw	0
 15270  002F2A  6FD6               	movwf	(?___fldiv+2)& (0+255),b
 15271  002F2C  0E00               	movlw	0
 15272  002F2E  6FD7               	movwf	(?___fldiv+3)& (0+255),b
 15273                           
 15274                           ; BSR set to: 0
 15275  002F30  0012               	return	
 15276  002F32                     l11514:
 15277                           
 15278                           ; BSR set to: 0
 15279  002F32  0100               	movlb	0	; () banked
 15280  002F34  51E2               	movf	___fldiv@sign& (0+255),w,b
 15281  002F36  0F89               	addlw	137
 15282  002F38  0100               	movlb	0	; () banked
 15283  002F3A  5FE1               	subwf	___fldiv@exp& (0+255),f,b
 15284                           
 15285                           ; BSR set to: 0
 15286  002F3C  C0D7  F0E2         	movff	___fldiv@f1+3,___fldiv@sign
 15287  002F40  0100               	movlb	0	; () banked
 15288  002F42  51DB               	movf	(___fldiv@f2+3)& (0+255),w,b
 15289  002F44  0100               	movlb	0	; () banked
 15290  002F46  1BE2               	xorwf	___fldiv@sign& (0+255),f,b
 15291  002F48  0E80               	movlw	128
 15292  002F4A  0100               	movlb	0	; () banked
 15293  002F4C  17E2               	andwf	___fldiv@sign& (0+255),f,b
 15294                           
 15295                           ; BSR set to: 0
 15296  002F4E  0100               	movlb	0	; () banked
 15297  002F50  8FD6               	bsf	(___fldiv@f1+2)& (0+255),7,b
 15298                           
 15299                           ; BSR set to: 0
 15300  002F52  0EFF               	movlw	255
 15301  002F54  0100               	movlb	0	; () banked
 15302  002F56  17D4               	andwf	___fldiv@f1& (0+255),f,b
 15303  002F58  0EFF               	movlw	255
 15304  002F5A  17D5               	andwf	(___fldiv@f1+1)& (0+255),f,b
 15305  002F5C  0EFF               	movlw	255
 15306  002F5E  17D6               	andwf	(___fldiv@f1+2)& (0+255),f,b
 15307  002F60  0E00               	movlw	0
 15308  002F62  17D7               	andwf	(___fldiv@f1+3)& (0+255),f,b
 15309  002F64  0100               	movlb	0	; () banked
 15310  002F66  8FDA               	bsf	(___fldiv@f2+2)& (0+255),7,b
 15311                           
 15312                           ; BSR set to: 0
 15313  002F68  0EFF               	movlw	255
 15314  002F6A  0100               	movlb	0	; () banked
 15315  002F6C  17D8               	andwf	___fldiv@f2& (0+255),f,b
 15316  002F6E  0EFF               	movlw	255
 15317  002F70  17D9               	andwf	(___fldiv@f2+1)& (0+255),f,b
 15318  002F72  0EFF               	movlw	255
 15319  002F74  17DA               	andwf	(___fldiv@f2+2)& (0+255),f,b
 15320  002F76  0E00               	movlw	0
 15321  002F78  17DB               	andwf	(___fldiv@f2+3)& (0+255),f,b
 15322                           
 15323                           ; BSR set to: 0
 15324  002F7A  0E20               	movlw	32
 15325  002F7C  0100               	movlb	0	; () banked
 15326  002F7E  6FE0               	movwf	___fldiv@cntr& (0+255),b
 15327  002F80  D000               	goto	l11526
 15328  002F82                     l11526:
 15329                           
 15330                           ; BSR set to: 0
 15331  002F82  0100               	movlb	0	; () banked
 15332  002F84  90D8               	bcf	status,0,c
 15333  002F86  37DC               	rlcf	___fldiv@f3& (0+255),f,b
 15334  002F88  37DD               	rlcf	(___fldiv@f3+1)& (0+255),f,b
 15335  002F8A  37DE               	rlcf	(___fldiv@f3+2)& (0+255),f,b
 15336  002F8C  37DF               	rlcf	(___fldiv@f3+3)& (0+255),f,b
 15337                           
 15338                           ; BSR set to: 0
 15339  002F8E  0100               	movlb	0	; () banked
 15340  002F90  51D8               	movf	___fldiv@f2& (0+255),w,b
 15341  002F92  0100               	movlb	0	; () banked
 15342  002F94  5DD4               	subwf	___fldiv@f1& (0+255),w,b
 15343  002F96  0100               	movlb	0	; () banked
 15344  002F98  51D9               	movf	(___fldiv@f2+1)& (0+255),w,b
 15345  002F9A  0100               	movlb	0	; () banked
 15346  002F9C  59D5               	subwfb	(___fldiv@f1+1)& (0+255),w,b
 15347  002F9E  0100               	movlb	0	; () banked
 15348  002FA0  51DA               	movf	(___fldiv@f2+2)& (0+255),w,b
 15349  002FA2  0100               	movlb	0	; () banked
 15350  002FA4  59D6               	subwfb	(___fldiv@f1+2)& (0+255),w,b
 15351  002FA6  0100               	movlb	0	; () banked
 15352  002FA8  51DB               	movf	(___fldiv@f2+3)& (0+255),w,b
 15353  002FAA  0100               	movlb	0	; () banked
 15354  002FAC  59D7               	subwfb	(___fldiv@f1+3)& (0+255),w,b
 15355  002FAE  A0D8               	btfss	status,0,c
 15356  002FB0  D013               	goto	l11534
 15357                           
 15358                           ; BSR set to: 0
 15359  002FB2  0100               	movlb	0	; () banked
 15360  002FB4  51D8               	movf	___fldiv@f2& (0+255),w,b
 15361  002FB6  0100               	movlb	0	; () banked
 15362  002FB8  5FD4               	subwf	___fldiv@f1& (0+255),f,b
 15363  002FBA  0100               	movlb	0	; () banked
 15364  002FBC  51D9               	movf	(___fldiv@f2+1)& (0+255),w,b
 15365  002FBE  0100               	movlb	0	; () banked
 15366  002FC0  5BD5               	subwfb	(___fldiv@f1+1)& (0+255),f,b
 15367  002FC2  0100               	movlb	0	; () banked
 15368  002FC4  51DA               	movf	(___fldiv@f2+2)& (0+255),w,b
 15369  002FC6  0100               	movlb	0	; () banked
 15370  002FC8  5BD6               	subwfb	(___fldiv@f1+2)& (0+255),f,b
 15371  002FCA  0100               	movlb	0	; () banked
 15372  002FCC  51DB               	movf	(___fldiv@f2+3)& (0+255),w,b
 15373  002FCE  0100               	movlb	0	; () banked
 15374  002FD0  5BD7               	subwfb	(___fldiv@f1+3)& (0+255),f,b
 15375                           
 15376                           ; BSR set to: 0
 15377  002FD2  0100               	movlb	0	; () banked
 15378  002FD4  81DC               	bsf	___fldiv@f3& (0+255),0,b
 15379  002FD6  D000               	goto	l11534
 15380  002FD8                     l11534:
 15381                           
 15382                           ; BSR set to: 0
 15383  002FD8  0100               	movlb	0	; () banked
 15384  002FDA  90D8               	bcf	status,0,c
 15385  002FDC  37D4               	rlcf	___fldiv@f1& (0+255),f,b
 15386  002FDE  37D5               	rlcf	(___fldiv@f1+1)& (0+255),f,b
 15387  002FE0  37D6               	rlcf	(___fldiv@f1+2)& (0+255),f,b
 15388  002FE2  37D7               	rlcf	(___fldiv@f1+3)& (0+255),f,b
 15389                           
 15390                           ; BSR set to: 0
 15391  002FE4  0100               	movlb	0	; () banked
 15392  002FE6  2FE0               	decfsz	___fldiv@cntr& (0+255),f,b
 15393  002FE8  D7CC               	goto	l11526
 15394  002FEA  D000               	goto	l11538
 15395  002FEC                     l11538:
 15396                           
 15397                           ; BSR set to: 0
 15398  002FEC  C0DC  F0AF         	movff	___fldiv@f3,___flpack@arg
 15399  002FF0  C0DD  F0B0         	movff	___fldiv@f3+1,___flpack@arg+1
 15400  002FF4  C0DE  F0B1         	movff	___fldiv@f3+2,___flpack@arg+2
 15401  002FF8  C0DF  F0B2         	movff	___fldiv@f3+3,___flpack@arg+3
 15402  002FFC  C0E1  F0B3         	movff	___fldiv@exp,___flpack@exp
 15403  003000  C0E2  F0B4         	movff	___fldiv@sign,___flpack@sign
 15404  003004  EC78  F011         	call	___flpack	;wreg free
 15405  003008  C0AF  F0D4         	movff	?___flpack,?___fldiv
 15406  00300C  C0B0  F0D5         	movff	?___flpack+1,?___fldiv+1
 15407  003010  C0B1  F0D6         	movff	?___flpack+2,?___fldiv+2
 15408  003014  C0B2  F0D7         	movff	?___flpack+3,?___fldiv+3
 15409  003018  0012               	return	
 15410  00301A  0012               	return		;funcret
 15411  00301C                     __end_of___fldiv:
 15412                           	opt stack 0
 15413                           tblptru	equ	0xFF8
 15414                           tblptrh	equ	0xFF7
 15415                           tblptrl	equ	0xFF6
 15416                           tablat	equ	0xFF5
 15417                           prodh	equ	0xFF4
 15418                           prodl	equ	0xFF3
 15419                           intcon	equ	0xFF2
 15420                           intcon3	equ	0xFF0
 15421                           postinc0	equ	0xFEE
 15422                           wreg	equ	0xFE8
 15423                           indf1	equ	0xFE7
 15424                           postdec1	equ	0xFE5
 15425                           fsr1h	equ	0xFE2
 15426                           fsr1l	equ	0xFE1
 15427                           indf2	equ	0xFDF
 15428                           fsr2h	equ	0xFDA
 15429                           fsr2l	equ	0xFD9
 15430                           status	equ	0xFD8
 15431                           
 15432 ;; *************** function ___fladd *****************
 15433 ;; Defined at:
 15434 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fladd.c"
 15435 ;; Parameters:    Size  Location     Type
 15436 ;;  f1              4   10[BANK0 ] unsigned char 
 15437 ;;  f2              4   14[BANK0 ] unsigned char 
 15438 ;; Auto vars:     Size  Location     Type
 15439 ;;  exp1            1   21[BANK0 ] unsigned char 
 15440 ;;  exp2            1   20[BANK0 ] unsigned char 
 15441 ;;  sign            1   19[BANK0 ] unsigned char 
 15442 ;; Return value:  Size  Location     Type
 15443 ;;                  4   10[BANK0 ] unsigned char 
 15444 ;; Registers used:
 15445 ;;		wreg, status,2, status,0, cstack
 15446 ;; Tracked objects:
 15447 ;;		On entry : 0/0
 15448 ;;		On exit  : 0/0
 15449 ;;		Unchanged: 0/0
 15450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15451 ;;      Params:         0       8       0       0       0       0       0       0       0
 15452 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15453 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15454 ;;      Totals:         0      12       0       0       0       0       0       0       0
 15455 ;;Total ram usage:       12 bytes
 15456 ;; Hardware stack levels used:    1
 15457 ;; Hardware stack levels required when called:   12
 15458 ;; This function calls:
 15459 ;;		___flpack
 15460 ;; This function is called by:
 15461 ;;		_ADC_TempConversion
 15462 ;; This function uses a non-reentrant model
 15463 ;;
 15464                           
 15465                           	psect	text50
 15466  001EF4                     __ptext50:
 15467                           	opt stack 0
 15468  001EF4                     ___fladd:
 15469                           	opt stack 15
 15470                           
 15471                           ;incstack = 0
 15472  001EF4  0100               	movlb	0	; () banked
 15473  001EF6  35BB               	rlcf	(___fladd@f1+2)& (0+255),w,b
 15474  001EF8  35BC               	rlcf	(___fladd@f1+3)& (0+255),w,b
 15475  001EFA  0100               	movlb	0	; () banked
 15476  001EFC  6FC4               	movwf	___fladd@exp1& (0+255),b
 15477  001EFE  0100               	movlb	0	; () banked
 15478  001F00  35BF               	rlcf	(___fladd@f2+2)& (0+255),w,b
 15479  001F02  35C0               	rlcf	(___fladd@f2+3)& (0+255),w,b
 15480  001F04  0100               	movlb	0	; () banked
 15481  001F06  6FC3               	movwf	___fladd@exp2& (0+255),b
 15482  001F08  0100               	movlb	0	; () banked
 15483  001F0A  51C4               	movf	___fladd@exp1& (0+255),w,b
 15484  001F0C  0100               	movlb	0	; () banked
 15485  001F0E  B4D8               	btfsc	status,2,c
 15486  001F10  D011               	goto	l2344
 15487                           
 15488                           ; BSR set to: 0
 15489  001F12  0100               	movlb	0	; () banked
 15490  001F14  51C3               	movf	___fladd@exp2& (0+255),w,b
 15491  001F16  0100               	movlb	0	; () banked
 15492  001F18  5DC4               	subwf	___fladd@exp1& (0+255),w,b
 15493  001F1A  B0D8               	btfsc	status,0,c
 15494  001F1C  D014               	goto	l11440
 15495                           
 15496                           ; BSR set to: 0
 15497  001F1E  0100               	movlb	0	; () banked
 15498  001F20  51C4               	movf	___fladd@exp1& (0+255),w,b
 15499  001F22  0800               	sublw	0
 15500  001F24  0100               	movlb	0	; () banked
 15501  001F26  25C3               	addwf	___fladd@exp2& (0+255),w,b
 15502  001F28  0100               	movlb	0	; () banked
 15503  001F2A  6FC1               	movwf	??___fladd& (0+255),b
 15504  001F2C  0E20               	movlw	32
 15505  001F2E  0100               	movlb	0	; () banked
 15506  001F30  65C1               	cpfsgt	??___fladd& (0+255),b
 15507  001F32  D009               	goto	l11440
 15508  001F34                     l2344:
 15509                           
 15510                           ; BSR set to: 0
 15511  001F34  C0BD  F0B9         	movff	___fladd@f2,?___fladd
 15512  001F38  C0BE  F0BA         	movff	___fladd@f2+1,?___fladd+1
 15513  001F3C  C0BF  F0BB         	movff	___fladd@f2+2,?___fladd+2
 15514  001F40  C0C0  F0BC         	movff	___fladd@f2+3,?___fladd+3
 15515  001F44  0012               	return	
 15516  001F46                     l11440:
 15517                           
 15518                           ; BSR set to: 0
 15519  001F46  0100               	movlb	0	; () banked
 15520  001F48  51C3               	movf	___fladd@exp2& (0+255),w,b
 15521  001F4A  0100               	movlb	0	; () banked
 15522  001F4C  B4D8               	btfsc	status,2,c
 15523  001F4E  D011               	goto	l2348
 15524                           
 15525                           ; BSR set to: 0
 15526  001F50  0100               	movlb	0	; () banked
 15527  001F52  51C4               	movf	___fladd@exp1& (0+255),w,b
 15528  001F54  0100               	movlb	0	; () banked
 15529  001F56  5DC3               	subwf	___fladd@exp2& (0+255),w,b
 15530  001F58  B0D8               	btfsc	status,0,c
 15531  001F5A  D014               	goto	l11446
 15532                           
 15533                           ; BSR set to: 0
 15534  001F5C  0100               	movlb	0	; () banked
 15535  001F5E  51C3               	movf	___fladd@exp2& (0+255),w,b
 15536  001F60  0800               	sublw	0
 15537  001F62  0100               	movlb	0	; () banked
 15538  001F64  25C4               	addwf	___fladd@exp1& (0+255),w,b
 15539  001F66  0100               	movlb	0	; () banked
 15540  001F68  6FC1               	movwf	??___fladd& (0+255),b
 15541  001F6A  0E20               	movlw	32
 15542  001F6C  0100               	movlb	0	; () banked
 15543  001F6E  65C1               	cpfsgt	??___fladd& (0+255),b
 15544  001F70  D009               	goto	l11446
 15545  001F72                     l2348:
 15546                           
 15547                           ; BSR set to: 0
 15548  001F72  C0B9  F0B9         	movff	___fladd@f1,?___fladd
 15549  001F76  C0BA  F0BA         	movff	___fladd@f1+1,?___fladd+1
 15550  001F7A  C0BB  F0BB         	movff	___fladd@f1+2,?___fladd+2
 15551  001F7E  C0BC  F0BC         	movff	___fladd@f1+3,?___fladd+3
 15552  001F82  0012               	return	
 15553  001F84                     l11446:
 15554                           
 15555                           ; BSR set to: 0
 15556  001F84  0E06               	movlw	6
 15557  001F86  0100               	movlb	0	; () banked
 15558  001F88  6FC2               	movwf	___fladd@sign& (0+255),b
 15559                           
 15560                           ; BSR set to: 0
 15561  001F8A  0100               	movlb	0	; () banked
 15562  001F8C  AFBC               	btfss	(___fladd@f1+3)& (0+255),7,b
 15563  001F8E  D003               	goto	l11452
 15564                           
 15565                           ; BSR set to: 0
 15566  001F90  0100               	movlb	0	; () banked
 15567  001F92  8FC2               	bsf	___fladd@sign& (0+255),7,b
 15568  001F94  D000               	goto	l11452
 15569  001F96                     l11452:
 15570                           
 15571                           ; BSR set to: 0
 15572  001F96  0100               	movlb	0	; () banked
 15573  001F98  AFC0               	btfss	(___fladd@f2+3)& (0+255),7,b
 15574  001F9A  D002               	goto	l2350
 15575                           
 15576                           ; BSR set to: 0
 15577  001F9C  0100               	movlb	0	; () banked
 15578  001F9E  8DC2               	bsf	___fladd@sign& (0+255),6,b
 15579  001FA0                     l2350:
 15580                           
 15581                           ; BSR set to: 0
 15582  001FA0  0100               	movlb	0	; () banked
 15583  001FA2  8FBB               	bsf	(___fladd@f1+2)& (0+255),7,b
 15584                           
 15585                           ; BSR set to: 0
 15586  001FA4  0EFF               	movlw	255
 15587  001FA6  0100               	movlb	0	; () banked
 15588  001FA8  17B9               	andwf	___fladd@f1& (0+255),f,b
 15589  001FAA  0EFF               	movlw	255
 15590  001FAC  17BA               	andwf	(___fladd@f1+1)& (0+255),f,b
 15591  001FAE  0EFF               	movlw	255
 15592  001FB0  17BB               	andwf	(___fladd@f1+2)& (0+255),f,b
 15593  001FB2  0E00               	movlw	0
 15594  001FB4  17BC               	andwf	(___fladd@f1+3)& (0+255),f,b
 15595                           
 15596                           ; BSR set to: 0
 15597  001FB6  0100               	movlb	0	; () banked
 15598  001FB8  8FBF               	bsf	(___fladd@f2+2)& (0+255),7,b
 15599  001FBA  0EFF               	movlw	255
 15600  001FBC  0100               	movlb	0	; () banked
 15601  001FBE  17BD               	andwf	___fladd@f2& (0+255),f,b
 15602  001FC0  0EFF               	movlw	255
 15603  001FC2  17BE               	andwf	(___fladd@f2+1)& (0+255),f,b
 15604  001FC4  0EFF               	movlw	255
 15605  001FC6  17BF               	andwf	(___fladd@f2+2)& (0+255),f,b
 15606  001FC8  0E00               	movlw	0
 15607  001FCA  17C0               	andwf	(___fladd@f2+3)& (0+255),f,b
 15608  001FCC  0100               	movlb	0	; () banked
 15609  001FCE  51C3               	movf	___fladd@exp2& (0+255),w,b
 15610  001FD0  0100               	movlb	0	; () banked
 15611  001FD2  5DC4               	subwf	___fladd@exp1& (0+255),w,b
 15612  001FD4  B0D8               	btfsc	status,0,c
 15613  001FD6  D02A               	goto	l11470
 15614  001FD8                     l11460:
 15615                           
 15616                           ; BSR set to: 0
 15617  001FD8  0100               	movlb	0	; () banked
 15618  001FDA  90D8               	bcf	status,0,c
 15619  001FDC  37BD               	rlcf	___fladd@f2& (0+255),f,b
 15620  001FDE  37BE               	rlcf	(___fladd@f2+1)& (0+255),f,b
 15621  001FE0  37BF               	rlcf	(___fladd@f2+2)& (0+255),f,b
 15622  001FE2  37C0               	rlcf	(___fladd@f2+3)& (0+255),f,b
 15623  001FE4  0100               	movlb	0	; () banked
 15624  001FE6  07C3               	decf	___fladd@exp2& (0+255),f,b
 15625                           
 15626                           ; BSR set to: 0
 15627  001FE8  0100               	movlb	0	; () banked
 15628  001FEA  51C4               	movf	___fladd@exp1& (0+255),w,b
 15629  001FEC  0100               	movlb	0	; () banked
 15630  001FEE  19C3               	xorwf	___fladd@exp2& (0+255),w,b
 15631  001FF0  B4D8               	btfsc	status,2,c
 15632  001FF2  D014               	goto	l11468
 15633                           
 15634                           ; BSR set to: 0
 15635  001FF4  0100               	movlb	0	; () banked
 15636  001FF6  07C2               	decf	___fladd@sign& (0+255),f,b
 15637  001FF8  C0C2  F0C1         	movff	___fladd@sign,??___fladd
 15638  001FFC  0E07               	movlw	7
 15639  001FFE  0100               	movlb	0	; () banked
 15640  002000  17C1               	andwf	??___fladd& (0+255),f,b
 15641  002002  B4D8               	btfsc	status,2,c
 15642  002004  D00B               	goto	l11468
 15643  002006  D7E8               	goto	l11460
 15644                           
 15645                           ; BSR set to: 0
 15646                           
 15647                           ; BSR set to: 0
 15648  002008  D009               	goto	l11468
 15649  00200A                     l11466:
 15650                           
 15651                           ; BSR set to: 0
 15652  00200A  0100               	movlb	0	; () banked
 15653  00200C  90D8               	bcf	status,0,c
 15654  00200E  33BC               	rrcf	(___fladd@f1+3)& (0+255),f,b
 15655  002010  33BB               	rrcf	(___fladd@f1+2)& (0+255),f,b
 15656  002012  33BA               	rrcf	(___fladd@f1+1)& (0+255),f,b
 15657  002014  33B9               	rrcf	___fladd@f1& (0+255),f,b
 15658  002016  0100               	movlb	0	; () banked
 15659  002018  2BC4               	incf	___fladd@exp1& (0+255),f,b
 15660  00201A  D000               	goto	l11468
 15661  00201C                     l11468:
 15662                           
 15663                           ; BSR set to: 0
 15664  00201C  0100               	movlb	0	; () banked
 15665  00201E  51C3               	movf	___fladd@exp2& (0+255),w,b
 15666  002020  0100               	movlb	0	; () banked
 15667  002022  19C4               	xorwf	___fladd@exp1& (0+255),w,b
 15668  002024  B4D8               	btfsc	status,2,c
 15669  002026  D032               	goto	l2359
 15670  002028  D7F0               	goto	l11466
 15671                           
 15672                           ; BSR set to: 0
 15673  00202A  D030               	goto	l2359
 15674  00202C                     l11470:
 15675                           
 15676                           ; BSR set to: 0
 15677  00202C  0100               	movlb	0	; () banked
 15678  00202E  51C4               	movf	___fladd@exp1& (0+255),w,b
 15679  002030  0100               	movlb	0	; () banked
 15680  002032  5DC3               	subwf	___fladd@exp2& (0+255),w,b
 15681  002034  B0D8               	btfsc	status,0,c
 15682  002036  D02A               	goto	l2359
 15683  002038                     l11472:
 15684                           
 15685                           ; BSR set to: 0
 15686  002038  0100               	movlb	0	; () banked
 15687  00203A  90D8               	bcf	status,0,c
 15688  00203C  37B9               	rlcf	___fladd@f1& (0+255),f,b
 15689  00203E  37BA               	rlcf	(___fladd@f1+1)& (0+255),f,b
 15690  002040  37BB               	rlcf	(___fladd@f1+2)& (0+255),f,b
 15691  002042  37BC               	rlcf	(___fladd@f1+3)& (0+255),f,b
 15692  002044  0100               	movlb	0	; () banked
 15693  002046  07C4               	decf	___fladd@exp1& (0+255),f,b
 15694                           
 15695                           ; BSR set to: 0
 15696  002048  0100               	movlb	0	; () banked
 15697  00204A  51C4               	movf	___fladd@exp1& (0+255),w,b
 15698  00204C  0100               	movlb	0	; () banked
 15699  00204E  19C3               	xorwf	___fladd@exp2& (0+255),w,b
 15700  002050  B4D8               	btfsc	status,2,c
 15701  002052  D014               	goto	l11480
 15702                           
 15703                           ; BSR set to: 0
 15704  002054  0100               	movlb	0	; () banked
 15705  002056  07C2               	decf	___fladd@sign& (0+255),f,b
 15706  002058  C0C2  F0C1         	movff	___fladd@sign,??___fladd
 15707  00205C  0E07               	movlw	7
 15708  00205E  0100               	movlb	0	; () banked
 15709  002060  17C1               	andwf	??___fladd& (0+255),f,b
 15710  002062  B4D8               	btfsc	status,2,c
 15711  002064  D00B               	goto	l11480
 15712  002066  D7E8               	goto	l11472
 15713                           
 15714                           ; BSR set to: 0
 15715                           
 15716                           ; BSR set to: 0
 15717  002068  D009               	goto	l11480
 15718  00206A                     l11478:
 15719                           
 15720                           ; BSR set to: 0
 15721  00206A  0100               	movlb	0	; () banked
 15722  00206C  90D8               	bcf	status,0,c
 15723  00206E  33C0               	rrcf	(___fladd@f2+3)& (0+255),f,b
 15724  002070  33BF               	rrcf	(___fladd@f2+2)& (0+255),f,b
 15725  002072  33BE               	rrcf	(___fladd@f2+1)& (0+255),f,b
 15726  002074  33BD               	rrcf	___fladd@f2& (0+255),f,b
 15727  002076  0100               	movlb	0	; () banked
 15728  002078  2BC3               	incf	___fladd@exp2& (0+255),f,b
 15729  00207A  D000               	goto	l11480
 15730  00207C                     l11480:
 15731                           
 15732                           ; BSR set to: 0
 15733  00207C  0100               	movlb	0	; () banked
 15734  00207E  51C3               	movf	___fladd@exp2& (0+255),w,b
 15735  002080  0100               	movlb	0	; () banked
 15736  002082  19C4               	xorwf	___fladd@exp1& (0+255),w,b
 15737  002084  B4D8               	btfsc	status,2,c
 15738  002086  D002               	goto	l2359
 15739  002088  D7F0               	goto	l11478
 15740                           
 15741                           ; BSR set to: 0
 15742  00208A  D000               	goto	l2359
 15743  00208C                     l2359:
 15744                           
 15745                           ; BSR set to: 0
 15746  00208C  0100               	movlb	0	; () banked
 15747  00208E  AFC2               	btfss	___fladd@sign& (0+255),7,b
 15748  002090  D011               	goto	l11484
 15749                           
 15750                           ; BSR set to: 0
 15751  002092  0EFF               	movlw	255
 15752  002094  0100               	movlb	0	; () banked
 15753  002096  1BB9               	xorwf	___fladd@f1& (0+255),f,b
 15754  002098  0EFF               	movlw	255
 15755  00209A  1BBA               	xorwf	(___fladd@f1+1)& (0+255),f,b
 15756  00209C  0EFF               	movlw	255
 15757  00209E  1BBB               	xorwf	(___fladd@f1+2)& (0+255),f,b
 15758  0020A0  0EFF               	movlw	255
 15759  0020A2  1BBC               	xorwf	(___fladd@f1+3)& (0+255),f,b
 15760  0020A4  0E01               	movlw	1
 15761  0020A6  0100               	movlb	0	; () banked
 15762  0020A8  27B9               	addwf	___fladd@f1& (0+255),f,b
 15763  0020AA  0E00               	movlw	0
 15764  0020AC  23BA               	addwfc	(___fladd@f1+1)& (0+255),f,b
 15765  0020AE  23BB               	addwfc	(___fladd@f1+2)& (0+255),f,b
 15766  0020B0  23BC               	addwfc	(___fladd@f1+3)& (0+255),f,b
 15767  0020B2  D000               	goto	l11484
 15768  0020B4                     l11484:
 15769                           
 15770                           ; BSR set to: 0
 15771  0020B4  0100               	movlb	0	; () banked
 15772  0020B6  ADC2               	btfss	___fladd@sign& (0+255),6,b
 15773  0020B8  D011               	goto	l11488
 15774                           
 15775                           ; BSR set to: 0
 15776  0020BA  0EFF               	movlw	255
 15777  0020BC  0100               	movlb	0	; () banked
 15778  0020BE  1BBD               	xorwf	___fladd@f2& (0+255),f,b
 15779  0020C0  0EFF               	movlw	255
 15780  0020C2  1BBE               	xorwf	(___fladd@f2+1)& (0+255),f,b
 15781  0020C4  0EFF               	movlw	255
 15782  0020C6  1BBF               	xorwf	(___fladd@f2+2)& (0+255),f,b
 15783  0020C8  0EFF               	movlw	255
 15784  0020CA  1BC0               	xorwf	(___fladd@f2+3)& (0+255),f,b
 15785  0020CC  0E01               	movlw	1
 15786  0020CE  0100               	movlb	0	; () banked
 15787  0020D0  27BD               	addwf	___fladd@f2& (0+255),f,b
 15788  0020D2  0E00               	movlw	0
 15789  0020D4  23BE               	addwfc	(___fladd@f2+1)& (0+255),f,b
 15790  0020D6  23BF               	addwfc	(___fladd@f2+2)& (0+255),f,b
 15791  0020D8  23C0               	addwfc	(___fladd@f2+3)& (0+255),f,b
 15792  0020DA  D000               	goto	l11488
 15793  0020DC                     l11488:
 15794                           
 15795                           ; BSR set to: 0
 15796  0020DC  0E00               	movlw	0
 15797  0020DE  0100               	movlb	0	; () banked
 15798  0020E0  6FC2               	movwf	___fladd@sign& (0+255),b
 15799                           
 15800                           ; BSR set to: 0
 15801  0020E2  0100               	movlb	0	; () banked
 15802  0020E4  51B9               	movf	___fladd@f1& (0+255),w,b
 15803  0020E6  0100               	movlb	0	; () banked
 15804  0020E8  27BD               	addwf	___fladd@f2& (0+255),f,b
 15805  0020EA  0100               	movlb	0	; () banked
 15806  0020EC  51BA               	movf	(___fladd@f1+1)& (0+255),w,b
 15807  0020EE  0100               	movlb	0	; () banked
 15808  0020F0  23BE               	addwfc	(___fladd@f2+1)& (0+255),f,b
 15809  0020F2  0100               	movlb	0	; () banked
 15810  0020F4  51BB               	movf	(___fladd@f1+2)& (0+255),w,b
 15811  0020F6  0100               	movlb	0	; () banked
 15812  0020F8  23BF               	addwfc	(___fladd@f2+2)& (0+255),f,b
 15813  0020FA  0100               	movlb	0	; () banked
 15814  0020FC  51BC               	movf	(___fladd@f1+3)& (0+255),w,b
 15815  0020FE  0100               	movlb	0	; () banked
 15816  002100  23C0               	addwfc	(___fladd@f2+3)& (0+255),f,b
 15817                           
 15818                           ; BSR set to: 0
 15819  002102  0100               	movlb	0	; () banked
 15820  002104  AFC0               	btfss	(___fladd@f2+3)& (0+255),7,b
 15821  002106  D014               	goto	l11498
 15822                           
 15823                           ; BSR set to: 0
 15824  002108  0EFF               	movlw	255
 15825  00210A  0100               	movlb	0	; () banked
 15826  00210C  1BBD               	xorwf	___fladd@f2& (0+255),f,b
 15827  00210E  0EFF               	movlw	255
 15828  002110  1BBE               	xorwf	(___fladd@f2+1)& (0+255),f,b
 15829  002112  0EFF               	movlw	255
 15830  002114  1BBF               	xorwf	(___fladd@f2+2)& (0+255),f,b
 15831  002116  0EFF               	movlw	255
 15832  002118  1BC0               	xorwf	(___fladd@f2+3)& (0+255),f,b
 15833  00211A  0E01               	movlw	1
 15834  00211C  0100               	movlb	0	; () banked
 15835  00211E  27BD               	addwf	___fladd@f2& (0+255),f,b
 15836  002120  0E00               	movlw	0
 15837  002122  23BE               	addwfc	(___fladd@f2+1)& (0+255),f,b
 15838  002124  23BF               	addwfc	(___fladd@f2+2)& (0+255),f,b
 15839  002126  23C0               	addwfc	(___fladd@f2+3)& (0+255),f,b
 15840                           
 15841                           ; BSR set to: 0
 15842  002128  0E01               	movlw	1
 15843  00212A  0100               	movlb	0	; () banked
 15844  00212C  6FC2               	movwf	___fladd@sign& (0+255),b
 15845  00212E  D000               	goto	l11498
 15846  002130                     l11498:
 15847                           
 15848                           ; BSR set to: 0
 15849  002130  C0BD  F0AF         	movff	___fladd@f2,___flpack@arg
 15850  002134  C0BE  F0B0         	movff	___fladd@f2+1,___flpack@arg+1
 15851  002138  C0BF  F0B1         	movff	___fladd@f2+2,___flpack@arg+2
 15852  00213C  C0C0  F0B2         	movff	___fladd@f2+3,___flpack@arg+3
 15853  002140  C0C4  F0B3         	movff	___fladd@exp1,___flpack@exp
 15854  002144  C0C2  F0B4         	movff	___fladd@sign,___flpack@sign
 15855  002148  EC78  F011         	call	___flpack	;wreg free
 15856  00214C  C0AF  F0B9         	movff	?___flpack,?___fladd
 15857  002150  C0B0  F0BA         	movff	?___flpack+1,?___fladd+1
 15858  002154  C0B1  F0BB         	movff	?___flpack+2,?___fladd+2
 15859  002158  C0B2  F0BC         	movff	?___flpack+3,?___fladd+3
 15860  00215C  0012               	return	
 15861  00215E  0012               	return		;funcret
 15862  002160                     __end_of___fladd:
 15863                           	opt stack 0
 15864                           tblptru	equ	0xFF8
 15865                           tblptrh	equ	0xFF7
 15866                           tblptrl	equ	0xFF6
 15867                           tablat	equ	0xFF5
 15868                           prodh	equ	0xFF4
 15869                           prodl	equ	0xFF3
 15870                           intcon	equ	0xFF2
 15871                           intcon3	equ	0xFF0
 15872                           postinc0	equ	0xFEE
 15873                           wreg	equ	0xFE8
 15874                           indf1	equ	0xFE7
 15875                           postdec1	equ	0xFE5
 15876                           fsr1h	equ	0xFE2
 15877                           fsr1l	equ	0xFE1
 15878                           indf2	equ	0xFDF
 15879                           fsr2h	equ	0xFDA
 15880                           fsr2l	equ	0xFD9
 15881                           status	equ	0xFD8
 15882                           
 15883 ;; *************** function ___flpack *****************
 15884 ;; Defined at:
 15885 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\double.c"
 15886 ;; Parameters:    Size  Location     Type
 15887 ;;  arg             4    0[BANK0 ] unsigned long 
 15888 ;;  exp             1    4[BANK0 ] unsigned char 
 15889 ;;  sign            1    5[BANK0 ] unsigned char 
 15890 ;; Auto vars:     Size  Location     Type
 15891 ;;		None
 15892 ;; Return value:  Size  Location     Type
 15893 ;;                  4    0[BANK0 ] unsigned char 
 15894 ;; Registers used:
 15895 ;;		wreg, status,2, status,0
 15896 ;; Tracked objects:
 15897 ;;		On entry : 0/0
 15898 ;;		On exit  : 0/0
 15899 ;;		Unchanged: 0/0
 15900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15901 ;;      Params:         0       6       0       0       0       0       0       0       0
 15902 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15903 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15904 ;;      Totals:         0      10       0       0       0       0       0       0       0
 15905 ;;Total ram usage:       10 bytes
 15906 ;; Hardware stack levels used:    1
 15907 ;; Hardware stack levels required when called:   11
 15908 ;; This function calls:
 15909 ;;		Nothing
 15910 ;; This function is called by:
 15911 ;;		___fladd
 15912 ;;		___fldiv
 15913 ;;		___flmul
 15914 ;;		___lbtofl
 15915 ;; This function uses a non-reentrant model
 15916 ;;
 15917                           
 15918                           	psect	text51
 15919  0022F0                     __ptext51:
 15920                           	opt stack 0
 15921  0022F0                     ___flpack:
 15922                           	opt stack 15
 15923                           
 15924                           ;incstack = 0
 15925  0022F0  0100               	movlb	0	; () banked
 15926  0022F2  51B3               	movf	___flpack@exp& (0+255),w,b
 15927  0022F4  0100               	movlb	0	; () banked
 15928  0022F6  B4D8               	btfsc	status,2,c
 15929  0022F8  D00A               	goto	l11226
 15930                           
 15931                           ; BSR set to: 0
 15932  0022FA  0100               	movlb	0	; () banked
 15933  0022FC  51AF               	movf	___flpack@arg& (0+255),w,b
 15934  0022FE  0100               	movlb	0	; () banked
 15935  002300  11B0               	iorwf	(___flpack@arg+1)& (0+255),w,b
 15936  002302  0100               	movlb	0	; () banked
 15937  002304  11B1               	iorwf	(___flpack@arg+2)& (0+255),w,b
 15938  002306  0100               	movlb	0	; () banked
 15939  002308  11B2               	iorwf	(___flpack@arg+3)& (0+255),w,b
 15940  00230A  A4D8               	btfss	status,2,c
 15941  00230C  D014               	goto	l11232
 15942  00230E                     l11226:
 15943                           
 15944                           ; BSR set to: 0
 15945  00230E  0E00               	movlw	0
 15946  002310  0100               	movlb	0	; () banked
 15947  002312  6FAF               	movwf	?___flpack& (0+255),b
 15948  002314  0E00               	movlw	0
 15949  002316  6FB0               	movwf	(?___flpack+1)& (0+255),b
 15950  002318  0E00               	movlw	0
 15951  00231A  6FB1               	movwf	(?___flpack+2)& (0+255),b
 15952  00231C  0E00               	movlw	0
 15953  00231E  6FB2               	movwf	(?___flpack+3)& (0+255),b
 15954                           
 15955                           ; BSR set to: 0
 15956  002320  0012               	return	
 15957                           
 15958                           ; BSR set to: 0
 15959  002322  D009               	goto	l11232
 15960  002324                     l11230:
 15961                           
 15962                           ; BSR set to: 0
 15963  002324  0100               	movlb	0	; () banked
 15964  002326  2BB3               	incf	___flpack@exp& (0+255),f,b
 15965  002328  0100               	movlb	0	; () banked
 15966  00232A  90D8               	bcf	status,0,c
 15967  00232C  33B2               	rrcf	(___flpack@arg+3)& (0+255),f,b
 15968  00232E  33B1               	rrcf	(___flpack@arg+2)& (0+255),f,b
 15969  002330  33B0               	rrcf	(___flpack@arg+1)& (0+255),f,b
 15970  002332  33AF               	rrcf	___flpack@arg& (0+255),f,b
 15971  002334  D000               	goto	l11232
 15972  002336                     l11232:
 15973                           
 15974                           ; BSR set to: 0
 15975  002336  0E00               	movlw	0
 15976  002338  0100               	movlb	0	; () banked
 15977  00233A  15AF               	andwf	___flpack@arg& (0+255),w,b
 15978  00233C  0100               	movlb	0	; () banked
 15979  00233E  6FB5               	movwf	??___flpack& (0+255),b
 15980  002340  0E00               	movlw	0
 15981  002342  0100               	movlb	0	; () banked
 15982  002344  15B0               	andwf	(___flpack@arg+1)& (0+255),w,b
 15983  002346  0100               	movlb	0	; () banked
 15984  002348  6FB6               	movwf	(??___flpack+1)& (0+255),b
 15985  00234A  0E00               	movlw	0
 15986  00234C  0100               	movlb	0	; () banked
 15987  00234E  15B1               	andwf	(___flpack@arg+2)& (0+255),w,b
 15988  002350  0100               	movlb	0	; () banked
 15989  002352  6FB7               	movwf	(??___flpack+2)& (0+255),b
 15990  002354  0EFE               	movlw	254
 15991  002356  0100               	movlb	0	; () banked
 15992  002358  15B2               	andwf	(___flpack@arg+3)& (0+255),w,b
 15993  00235A  0100               	movlb	0	; () banked
 15994  00235C  6FB8               	movwf	(??___flpack+3)& (0+255),b
 15995  00235E  0100               	movlb	0	; () banked
 15996  002360  51B5               	movf	??___flpack& (0+255),w,b
 15997  002362  0100               	movlb	0	; () banked
 15998  002364  11B6               	iorwf	(??___flpack+1)& (0+255),w,b
 15999  002366  0100               	movlb	0	; () banked
 16000  002368  11B7               	iorwf	(??___flpack+2)& (0+255),w,b
 16001  00236A  0100               	movlb	0	; () banked
 16002  00236C  11B8               	iorwf	(??___flpack+3)& (0+255),w,b
 16003  00236E  B4D8               	btfsc	status,2,c
 16004  002370  D011               	goto	l2328
 16005  002372  D7D8               	goto	l11230
 16006                           
 16007                           ; BSR set to: 0
 16008  002374  D00F               	goto	l2328
 16009  002376                     l11234:
 16010                           
 16011                           ; BSR set to: 0
 16012  002376  0100               	movlb	0	; () banked
 16013  002378  2BB3               	incf	___flpack@exp& (0+255),f,b
 16014                           
 16015                           ; BSR set to: 0
 16016  00237A  0E01               	movlw	1
 16017  00237C  0100               	movlb	0	; () banked
 16018  00237E  27AF               	addwf	___flpack@arg& (0+255),f,b
 16019  002380  0E00               	movlw	0
 16020  002382  23B0               	addwfc	(___flpack@arg+1)& (0+255),f,b
 16021  002384  23B1               	addwfc	(___flpack@arg+2)& (0+255),f,b
 16022  002386  23B2               	addwfc	(___flpack@arg+3)& (0+255),f,b
 16023                           
 16024                           ; BSR set to: 0
 16025  002388  0100               	movlb	0	; () banked
 16026  00238A  90D8               	bcf	status,0,c
 16027  00238C  33B2               	rrcf	(___flpack@arg+3)& (0+255),f,b
 16028  00238E  33B1               	rrcf	(___flpack@arg+2)& (0+255),f,b
 16029  002390  33B0               	rrcf	(___flpack@arg+1)& (0+255),f,b
 16030  002392  33AF               	rrcf	___flpack@arg& (0+255),f,b
 16031  002394                     l2328:
 16032                           
 16033                           ; BSR set to: 0
 16034  002394  0E00               	movlw	0
 16035  002396  0100               	movlb	0	; () banked
 16036  002398  15AF               	andwf	___flpack@arg& (0+255),w,b
 16037  00239A  0100               	movlb	0	; () banked
 16038  00239C  6FB5               	movwf	??___flpack& (0+255),b
 16039  00239E  0E00               	movlw	0
 16040  0023A0  0100               	movlb	0	; () banked
 16041  0023A2  15B0               	andwf	(___flpack@arg+1)& (0+255),w,b
 16042  0023A4  0100               	movlb	0	; () banked
 16043  0023A6  6FB6               	movwf	(??___flpack+1)& (0+255),b
 16044  0023A8  0E00               	movlw	0
 16045  0023AA  0100               	movlb	0	; () banked
 16046  0023AC  15B1               	andwf	(___flpack@arg+2)& (0+255),w,b
 16047  0023AE  0100               	movlb	0	; () banked
 16048  0023B0  6FB7               	movwf	(??___flpack+2)& (0+255),b
 16049  0023B2  0EFF               	movlw	255
 16050  0023B4  0100               	movlb	0	; () banked
 16051  0023B6  15B2               	andwf	(___flpack@arg+3)& (0+255),w,b
 16052  0023B8  0100               	movlb	0	; () banked
 16053  0023BA  6FB8               	movwf	(??___flpack+3)& (0+255),b
 16054  0023BC  0100               	movlb	0	; () banked
 16055  0023BE  51B5               	movf	??___flpack& (0+255),w,b
 16056  0023C0  0100               	movlb	0	; () banked
 16057  0023C2  11B6               	iorwf	(??___flpack+1)& (0+255),w,b
 16058  0023C4  0100               	movlb	0	; () banked
 16059  0023C6  11B7               	iorwf	(??___flpack+2)& (0+255),w,b
 16060  0023C8  0100               	movlb	0	; () banked
 16061  0023CA  11B8               	iorwf	(??___flpack+3)& (0+255),w,b
 16062  0023CC  B4D8               	btfsc	status,2,c
 16063  0023CE  D00B               	goto	l11242
 16064  0023D0  D7D2               	goto	l11234
 16065                           
 16066                           ; BSR set to: 0
 16067  0023D2  D009               	goto	l11242
 16068  0023D4                     l11240:
 16069                           
 16070                           ; BSR set to: 0
 16071  0023D4  0100               	movlb	0	; () banked
 16072  0023D6  07B3               	decf	___flpack@exp& (0+255),f,b
 16073  0023D8  0100               	movlb	0	; () banked
 16074  0023DA  90D8               	bcf	status,0,c
 16075  0023DC  37AF               	rlcf	___flpack@arg& (0+255),f,b
 16076  0023DE  37B0               	rlcf	(___flpack@arg+1)& (0+255),f,b
 16077  0023E0  37B1               	rlcf	(___flpack@arg+2)& (0+255),f,b
 16078  0023E2  37B2               	rlcf	(___flpack@arg+3)& (0+255),f,b
 16079  0023E4  D000               	goto	l11242
 16080  0023E6                     l11242:
 16081                           
 16082                           ; BSR set to: 0
 16083  0023E6  0100               	movlb	0	; () banked
 16084  0023E8  BFB1               	btfsc	(___flpack@arg+2)& (0+255),7,b
 16085  0023EA  D005               	goto	l2335
 16086                           
 16087                           ; BSR set to: 0
 16088  0023EC  0E02               	movlw	2
 16089  0023EE  0100               	movlb	0	; () banked
 16090  0023F0  61B3               	cpfslt	___flpack@exp& (0+255),b
 16091  0023F2  D7F0               	goto	l11240
 16092  0023F4  D000               	goto	l2335
 16093  0023F6                     l2335:
 16094                           
 16095                           ; BSR set to: 0
 16096  0023F6  0100               	movlb	0	; () banked
 16097  0023F8  B1B3               	btfsc	___flpack@exp& (0+255),0,b
 16098  0023FA  D009               	goto	l2336
 16099                           
 16100                           ; BSR set to: 0
 16101  0023FC  0EFF               	movlw	255
 16102  0023FE  0100               	movlb	0	; () banked
 16103  002400  17AF               	andwf	___flpack@arg& (0+255),f,b
 16104  002402  0EFF               	movlw	255
 16105  002404  17B0               	andwf	(___flpack@arg+1)& (0+255),f,b
 16106  002406  0E7F               	movlw	127
 16107  002408  17B1               	andwf	(___flpack@arg+2)& (0+255),f,b
 16108  00240A  0EFF               	movlw	255
 16109  00240C  17B2               	andwf	(___flpack@arg+3)& (0+255),f,b
 16110  00240E                     l2336:
 16111                           
 16112                           ; BSR set to: 0
 16113  00240E  0100               	movlb	0	; () banked
 16114  002410  90D8               	bcf	status,0,c
 16115  002412  33B3               	rrcf	___flpack@exp& (0+255),f,b
 16116  002414  C0B3  F0B5         	movff	___flpack@exp,??___flpack
 16117  002418  0100               	movlb	0	; () banked
 16118  00241A  6BB6               	clrf	(??___flpack+1)& (0+255),b
 16119  00241C  6BB7               	clrf	(??___flpack+2)& (0+255),b
 16120  00241E  6BB8               	clrf	(??___flpack+3)& (0+255),b
 16121  002420  C0B5  F0B8         	movff	??___flpack,??___flpack+3
 16122  002424  0100               	movlb	0	; () banked
 16123  002426  6BB7               	clrf	(??___flpack+2)& (0+255),b
 16124  002428  6BB6               	clrf	(??___flpack+1)& (0+255),b
 16125  00242A  6BB5               	clrf	??___flpack& (0+255),b
 16126  00242C  0100               	movlb	0	; () banked
 16127  00242E  51B5               	movf	??___flpack& (0+255),w,b
 16128  002430  0100               	movlb	0	; () banked
 16129  002432  13AF               	iorwf	___flpack@arg& (0+255),f,b
 16130  002434  0100               	movlb	0	; () banked
 16131  002436  51B6               	movf	(??___flpack+1)& (0+255),w,b
 16132  002438  0100               	movlb	0	; () banked
 16133  00243A  13B0               	iorwf	(___flpack@arg+1)& (0+255),f,b
 16134  00243C  0100               	movlb	0	; () banked
 16135  00243E  51B7               	movf	(??___flpack+2)& (0+255),w,b
 16136  002440  0100               	movlb	0	; () banked
 16137  002442  13B1               	iorwf	(___flpack@arg+2)& (0+255),f,b
 16138  002444  0100               	movlb	0	; () banked
 16139  002446  51B8               	movf	(??___flpack+3)& (0+255),w,b
 16140  002448  0100               	movlb	0	; () banked
 16141  00244A  13B2               	iorwf	(___flpack@arg+3)& (0+255),f,b
 16142                           
 16143                           ; BSR set to: 0
 16144  00244C  0100               	movlb	0	; () banked
 16145  00244E  51B4               	movf	___flpack@sign& (0+255),w,b
 16146  002450  0100               	movlb	0	; () banked
 16147  002452  B4D8               	btfsc	status,2,c
 16148  002454  D003               	goto	l11252
 16149                           
 16150                           ; BSR set to: 0
 16151  002456  0100               	movlb	0	; () banked
 16152  002458  8FB2               	bsf	(___flpack@arg+3)& (0+255),7,b
 16153  00245A  D000               	goto	l11252
 16154  00245C                     l11252:
 16155                           
 16156                           ; BSR set to: 0
 16157  00245C  C0AF  F0AF         	movff	___flpack@arg,?___flpack
 16158  002460  C0B0  F0B0         	movff	___flpack@arg+1,?___flpack+1
 16159  002464  C0B1  F0B1         	movff	___flpack@arg+2,?___flpack+2
 16160  002468  C0B2  F0B2         	movff	___flpack@arg+3,?___flpack+3
 16161  00246C  0012               	return	
 16162                           
 16163                           ; BSR set to: 0
 16164                           
 16165                           ; BSR set to: 0
 16166  00246E  0012               	return		;funcret
 16167  002470                     __end_of___flpack:
 16168                           	opt stack 0
 16169                           tblptru	equ	0xFF8
 16170                           tblptrh	equ	0xFF7
 16171                           tblptrl	equ	0xFF6
 16172                           tablat	equ	0xFF5
 16173                           prodh	equ	0xFF4
 16174                           prodl	equ	0xFF3
 16175                           intcon	equ	0xFF2
 16176                           intcon3	equ	0xFF0
 16177                           postinc0	equ	0xFEE
 16178                           wreg	equ	0xFE8
 16179                           indf1	equ	0xFE7
 16180                           postdec1	equ	0xFE5
 16181                           fsr1h	equ	0xFE2
 16182                           fsr1l	equ	0xFE1
 16183                           indf2	equ	0xFDF
 16184                           fsr2h	equ	0xFDA
 16185                           fsr2l	equ	0xFD9
 16186                           status	equ	0xFD8
 16187                           
 16188 ;; *************** function _moteJoiningProcess *****************
 16189 ;; Defined at:
 16190 ;;		line 291 in file "../Includes/Board/MOTEapp.c"
 16191 ;; Parameters:    Size  Location     Type
 16192 ;;  messageReady    1    wreg     unsigned char 
 16193 ;;  changeStates    1   22[BANK0 ] unsigned char 
 16194 ;;  selectButton    1   23[BANK0 ] unsigned char 
 16195 ;; Auto vars:     Size  Location     Type
 16196 ;;  messageReady    1   27[BANK0 ] unsigned char 
 16197 ;;  readDataRate    1   25[BANK0 ] unsigned char 
 16198 ;;  joiningCompl    1   26[BANK0 ] unsigned char 
 16199 ;; Return value:  Size  Location     Type
 16200 ;;                  1    wreg      enum E7794
 16201 ;; Registers used:
 16202 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16203 ;; Tracked objects:
 16204 ;;		On entry : 0/0
 16205 ;;		On exit  : 0/0
 16206 ;;		Unchanged: 0/0
 16207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16208 ;;      Params:         0       2       0       0       0       0       0       0       0
 16209 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16210 ;;      Temps:          0       1       0       0       0       0       0       0       0
 16211 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16212 ;;Total ram usage:        6 bytes
 16213 ;; Hardware stack levels used:    1
 16214 ;; Hardware stack levels required when called:   16
 16215 ;; This function calls:
 16216 ;;		_DATAEE_WriteByte
 16217 ;;		_moteApp_delayms
 16218 ;;		_oled_clear
 16219 ;;		_oled_putString
 16220 ;;		_sendCommand
 16221 ;;		_strcmp
 16222 ;;		_strncmp
 16223 ;; This function is called by:
 16224 ;;		_moteHandler
 16225 ;; This function uses a non-reentrant model
 16226 ;;
 16227                           
 16228                           	psect	text52
 16229  00135A                     __ptext52:
 16230                           	opt stack 0
 16231  00135A                     _moteJoiningProcess:
 16232                           	opt stack 13
 16233                           
 16234                           ; BSR set to: 0
 16235                           ;incstack = 0
 16236                           ;moteJoiningProcess@messageReady stored from wreg
 16237  00135A  0100               	movlb	0	; () banked
 16238  00135C  6FCA               	movwf	moteJoiningProcess@messageReady& (0+255),b
 16239                           
 16240                           ; BSR set to: 0
 16241                           ;MOTEapp.c: 293: bool joiningComplete = 0;
 16242  00135E  0E00               	movlw	0
 16243  001360  0100               	movlb	0	; () banked
 16244  001362  6FC9               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 16245                           
 16246                           ;MOTEapp.c: 295: switch (activeState)
 16247  001364  D312               	goto	l12714
 16248  001366                     
 16249                           ; BSR set to: 0
 16250  001366  D7FF               	goto	l391
 16251                           
 16252                           ; BSR set to: 0
 16253                           ;MOTEapp.c: 299: break;
 16254  001368  D334               	goto	l12716
 16255  00136A                     l12532:
 16256                           
 16257                           ; BSR set to: 0
 16258                           ;MOTEapp.c: 301: sendCommand("sys reset");
 16259  00136A  0EF3               	movlw	low STR_30
 16260  00136C  0100               	movlb	0	; () banked
 16261  00136E  6FB0               	movwf	sendCommand@string& (0+255),b
 16262  001370  0E7E               	movlw	high STR_30
 16263  001372  0100               	movlb	0	; () banked
 16264  001374  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 16265  001376  EC49  F02E         	call	_sendCommand	;wreg free
 16266  00137A  D194               	goto	l12628
 16267  00137C                     l12536:
 16268                           
 16269                           ; BSR set to: 0
 16270                           ;MOTEapp.c: 305: if (selectButton)
 16271  00137C  0100               	movlb	0	; () banked
 16272  00137E  51C6               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 16273  001380  0100               	movlb	0	; () banked
 16274  001382  B4D8               	btfsc	status,2,c
 16275  001384  D003               	goto	l396
 16276                           
 16277                           ; BSR set to: 0
 16278                           ;MOTEapp.c: 306: {
 16279                           ;MOTEapp.c: 307: activeState = moteComFailure;
 16280  001386  0E0A               	movlw	10
 16281  001388  0100               	movlb	0	; () banked
 16282  00138A  6F8C               	movwf	_activeState& (0+255),b
 16283  00138C                     l396:
 16284                           
 16285                           ; BSR set to: 0
 16286                           ;MOTEapp.c: 308: }
 16287                           ;MOTEapp.c: 309: if ( messageReady )
 16288  00138C  0100               	movlb	0	; () banked
 16289  00138E  51CA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16290  001390  0100               	movlb	0	; () banked
 16291  001392  B4D8               	btfsc	status,2,c
 16292  001394  D31E               	goto	l12716
 16293                           
 16294                           ; BSR set to: 0
 16295                           ;MOTEapp.c: 310: {
 16296                           ;MOTEapp.c: 311: if(strncmp(moduleResonseBuffer, "RN24", 4) == 0)
 16297  001396  0E68               	movlw	low _moduleResonseBuffer
 16298  001398  0100               	movlb	0	; () banked
 16299  00139A  6FAF               	movwf	strncmp@s1& (0+255),b
 16300  00139C  0E01               	movlw	high _moduleResonseBuffer
 16301  00139E  0100               	movlb	0	; () banked
 16302  0013A0  6FB0               	movwf	(strncmp@s1+1)& (0+255),b
 16303  0013A2  0EB9               	movlw	low STR_31
 16304  0013A4  0100               	movlb	0	; () banked
 16305  0013A6  6FB1               	movwf	strncmp@s2& (0+255),b
 16306  0013A8  0E7F               	movlw	high STR_31
 16307  0013AA  0100               	movlb	0	; () banked
 16308  0013AC  6FB2               	movwf	(strncmp@s2+1)& (0+255),b
 16309  0013AE  0E00               	movlw	0
 16310  0013B0  0100               	movlb	0	; () banked
 16311  0013B2  6FB4               	movwf	(strncmp@len+1)& (0+255),b
 16312  0013B4  0E04               	movlw	4
 16313  0013B6  6FB3               	movwf	strncmp@len& (0+255),b
 16314  0013B8  EC0F  F025         	call	_strncmp	;wreg free
 16315  0013BC  0100               	movlb	0	; () banked
 16316  0013BE  51AF               	movf	?_strncmp& (0+255),w,b
 16317  0013C0  0100               	movlb	0	; () banked
 16318  0013C2  11B0               	iorwf	(?_strncmp+1)& (0+255),w,b
 16319  0013C4  A4D8               	btfss	status,2,c
 16320  0013C6  D033               	goto	l12554
 16321                           
 16322                           ; BSR set to: 0
 16323                           ;MOTEapp.c: 312: {
 16324                           ;MOTEapp.c: 313: rnModule = rn2483;
 16325  0013C8  0E00               	movlw	0
 16326  0013CA  0100               	movlb	0	; () banked
 16327  0013CC  6FA4               	movwf	_rnModule& (0+255),b
 16328                           
 16329                           ; BSR set to: 0
 16330                           ;MOTEapp.c: 314: oled_clear();
 16331  0013CE  EC3B  F02F         	call	_oled_clear	;wreg free
 16332                           
 16333                           ;MOTEapp.c: 315: oled_putString(" Joining Method ",0,0);
 16334  0013D2  0E4D               	movlw	low STR_32
 16335  0013D4  0100               	movlb	0	; () banked
 16336  0013D6  6FC0               	movwf	oled_putString@string& (0+255),b
 16337  0013D8  0E7B               	movlw	high STR_32
 16338  0013DA  0100               	movlb	0	; () banked
 16339  0013DC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16340  0013DE  0E00               	movlw	0
 16341  0013E0  0100               	movlb	0	; () banked
 16342  0013E2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16343  0013E4  0E00               	movlw	0
 16344  0013E6  0100               	movlb	0	; () banked
 16345  0013E8  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16346  0013EA  EC6C  F028         	call	_oled_putString	;wreg free
 16347                           
 16348                           ;MOTEapp.c: 316: oled_putString("<- ABP   OTAA ->", 0,2);
 16349  0013EE  0EA2               	movlw	low STR_33
 16350  0013F0  0100               	movlb	0	; () banked
 16351  0013F2  6FC0               	movwf	oled_putString@string& (0+255),b
 16352  0013F4  0E7B               	movlw	high STR_33
 16353  0013F6  0100               	movlb	0	; () banked
 16354  0013F8  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16355  0013FA  0E00               	movlw	0
 16356  0013FC  0100               	movlb	0	; () banked
 16357  0013FE  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16358  001400  0E02               	movlw	2
 16359  001402  0100               	movlb	0	; () banked
 16360  001404  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16361  001406  EC6C  F028         	call	_oled_putString	;wreg free
 16362                           
 16363                           ;MOTEapp.c: 317: oled_putString("  (S2)   (S3)   ", 0,3);
 16364  00140A  0EF8               	movlw	low STR_34
 16365  00140C  0100               	movlb	0	; () banked
 16366  00140E  6FC0               	movwf	oled_putString@string& (0+255),b
 16367  001410  0E7A               	movlw	high STR_34
 16368  001412  0100               	movlb	0	; () banked
 16369  001414  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16370  001416  0E00               	movlw	0
 16371  001418  0100               	movlb	0	; () banked
 16372  00141A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16373  00141C  0E03               	movlw	3
 16374  00141E  0100               	movlb	0	; () banked
 16375  001420  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16376  001422  EC6C  F028         	call	_oled_putString	;wreg free
 16377  001426  D04B               	goto	l12566
 16378  001428                     L6:
 16379  001428  0100               	movlb	0	; () banked
 16380  00142A  6F8C               	movwf	_activeState& (0+255),b
 16381                           
 16382                           ;MOTEapp.c: 319: }
 16383  00142C  D2D2               	goto	l12716
 16384  00142E                     l12554:
 16385                           
 16386                           ; BSR set to: 0
 16387                           ;MOTEapp.c: 320: else if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 16388  00142E  0E68               	movlw	low _moduleResonseBuffer
 16389  001430  0100               	movlb	0	; () banked
 16390  001432  6FAF               	movwf	strncmp@s1& (0+255),b
 16391  001434  0E01               	movlw	high _moduleResonseBuffer
 16392  001436  0100               	movlb	0	; () banked
 16393  001438  6FB0               	movwf	(strncmp@s1+1)& (0+255),b
 16394  00143A  0EBE               	movlw	low STR_35
 16395  00143C  0100               	movlb	0	; () banked
 16396  00143E  6FB1               	movwf	strncmp@s2& (0+255),b
 16397  001440  0E7F               	movlw	high STR_35
 16398  001442  0100               	movlb	0	; () banked
 16399  001444  6FB2               	movwf	(strncmp@s2+1)& (0+255),b
 16400  001446  0E00               	movlw	0
 16401  001448  0100               	movlb	0	; () banked
 16402  00144A  6FB4               	movwf	(strncmp@len+1)& (0+255),b
 16403  00144C  0E04               	movlw	4
 16404  00144E  6FB3               	movwf	strncmp@len& (0+255),b
 16405  001450  EC0F  F025         	call	_strncmp	;wreg free
 16406  001454  0100               	movlb	0	; () banked
 16407  001456  51AF               	movf	?_strncmp& (0+255),w,b
 16408  001458  0100               	movlb	0	; () banked
 16409  00145A  11B0               	iorwf	(?_strncmp+1)& (0+255),w,b
 16410  00145C  A4D8               	btfss	status,2,c
 16411  00145E  D031               	goto	l12568
 16412                           
 16413                           ; BSR set to: 0
 16414                           ;MOTEapp.c: 321: {
 16415                           ;MOTEapp.c: 322: rnModule = rn2903;
 16416  001460  0E01               	movlw	1
 16417  001462  0100               	movlb	0	; () banked
 16418  001464  6FA4               	movwf	_rnModule& (0+255),b
 16419                           
 16420                           ; BSR set to: 0
 16421                           ;MOTEapp.c: 323: oled_clear();
 16422  001466  EC3B  F02F         	call	_oled_clear	;wreg free
 16423                           
 16424                           ;MOTEapp.c: 324: oled_putString(" Joining Method ",0,0);
 16425  00146A  0E4D               	movlw	low STR_32
 16426  00146C  0100               	movlb	0	; () banked
 16427  00146E  6FC0               	movwf	oled_putString@string& (0+255),b
 16428  001470  0E7B               	movlw	high STR_32
 16429  001472  0100               	movlb	0	; () banked
 16430  001474  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16431  001476  0E00               	movlw	0
 16432  001478  0100               	movlb	0	; () banked
 16433  00147A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16434  00147C  0E00               	movlw	0
 16435  00147E  0100               	movlb	0	; () banked
 16436  001480  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16437  001482  EC6C  F028         	call	_oled_putString	;wreg free
 16438                           
 16439                           ;MOTEapp.c: 325: oled_putString("<- ABP   OTAA ->", 0,2);
 16440  001486  0EA2               	movlw	low STR_33
 16441  001488  0100               	movlb	0	; () banked
 16442  00148A  6FC0               	movwf	oled_putString@string& (0+255),b
 16443  00148C  0E7B               	movlw	high STR_33
 16444  00148E  0100               	movlb	0	; () banked
 16445  001490  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16446  001492  0E00               	movlw	0
 16447  001494  0100               	movlb	0	; () banked
 16448  001496  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16449  001498  0E02               	movlw	2
 16450  00149A  0100               	movlb	0	; () banked
 16451  00149C  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16452  00149E  EC6C  F028         	call	_oled_putString	;wreg free
 16453                           
 16454                           ;MOTEapp.c: 326: oled_putString("  (S2)   (S3)   ", 0,3);
 16455  0014A2  0EF8               	movlw	low STR_34
 16456  0014A4  0100               	movlb	0	; () banked
 16457  0014A6  6FC0               	movwf	oled_putString@string& (0+255),b
 16458  0014A8  0E7A               	movlw	high STR_34
 16459  0014AA  0100               	movlb	0	; () banked
 16460  0014AC  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16461  0014AE  0E00               	movlw	0
 16462  0014B0  0100               	movlb	0	; () banked
 16463  0014B2  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16464  0014B4  0E03               	movlw	3
 16465  0014B6  0100               	movlb	0	; () banked
 16466  0014B8  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16467  0014BA  EC6C  F028         	call	_oled_putString	;wreg free
 16468  0014BE                     l12566:
 16469                           
 16470                           ;MOTEapp.c: 327: activeState = moteJoinMethod;
 16471  0014BE  0E02               	movlw	2
 16472  0014C0  D7B3               	goto	L6
 16473  0014C2                     l12568:
 16474                           
 16475                           ; BSR set to: 0
 16476                           ;MOTEapp.c: 329: else
 16477                           ;MOTEapp.c: 330: {
 16478                           ;MOTEapp.c: 331: sendCommand("sys reset");
 16479  0014C2  0EF3               	movlw	low STR_30
 16480  0014C4  0100               	movlb	0	; () banked
 16481  0014C6  6FB0               	movwf	sendCommand@string& (0+255),b
 16482  0014C8  0E7E               	movlw	high STR_30
 16483  0014CA  0100               	movlb	0	; () banked
 16484  0014CC  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 16485  0014CE  EC49  F02E         	call	_sendCommand	;wreg free
 16486                           
 16487                           ;MOTEapp.c: 332: moteApp_delayms(25);
 16488  0014D2  0E00               	movlw	0
 16489  0014D4  0100               	movlb	0	; () banked
 16490  0014D6  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16491  0014D8  0E19               	movlw	25
 16492  0014DA  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 16493  0014DC  EC36  F02D         	call	_moteApp_delayms	;wreg free
 16494  0014E0  D1E9               	goto	l12682
 16495                           
 16496                           ; BSR set to: 0
 16497                           ;MOTEapp.c: 334: }
 16498                           ;MOTEapp.c: 335: }
 16499                           ;MOTEapp.c: 336: break;
 16500                           
 16501                           ; BSR set to: 0
 16502                           
 16503                           ; BSR set to: 0
 16504                           
 16505                           ;MOTEapp.c: 333: activeState = moteStartup;
 16506  0014E2  D277               	goto	l12716
 16507  0014E4                     l12574:
 16508                           
 16509                           ; BSR set to: 0
 16510                           ;MOTEapp.c: 338: if (changeStates)
 16511  0014E4  0100               	movlb	0	; () banked
 16512  0014E6  51C5               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 16513  0014E8  0100               	movlb	0	; () banked
 16514  0014EA  B4D8               	btfsc	status,2,c
 16515  0014EC  D01E               	goto	l12584
 16516                           
 16517                           ; BSR set to: 0
 16518                           ;MOTEapp.c: 339: {
 16519                           ;MOTEapp.c: 340: oled_putString("  (S2)          ", 0,3);
 16520  0014EE  0EC5               	movlw	low STR_40
 16521  0014F0  0100               	movlb	0	; () banked
 16522  0014F2  6FC0               	movwf	oled_putString@string& (0+255),b
 16523  0014F4  0E7A               	movlw	high STR_40
 16524  0014F6  0100               	movlb	0	; () banked
 16525  0014F8  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16526  0014FA  0E00               	movlw	0
 16527  0014FC  0100               	movlb	0	; () banked
 16528  0014FE  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16529  001500  0E03               	movlw	3
 16530  001502  0100               	movlb	0	; () banked
 16531  001504  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16532  001506  EC6C  F028         	call	_oled_putString	;wreg free
 16533                           
 16534                           ;MOTEapp.c: 341: moteApp_delayms(500);
 16535  00150A  0E01               	movlw	1
 16536  00150C  0100               	movlb	0	; () banked
 16537  00150E  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16538  001510  0EF4               	movlw	244
 16539  001512  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 16540  001514  EC36  F02D         	call	_moteApp_delayms	;wreg free
 16541                           
 16542                           ;MOTEapp.c: 342: sendCommand("mac join abp");
 16543  001518  0ED3               	movlw	low STR_41
 16544  00151A  0100               	movlb	0	; () banked
 16545  00151C  6FB0               	movwf	sendCommand@string& (0+255),b
 16546  00151E  0E7D               	movlw	high STR_41
 16547  001520  0100               	movlb	0	; () banked
 16548  001522  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 16549  001524  EC49  F02E         	call	_sendCommand	;wreg free
 16550  001528  D07A               	goto	l12612
 16551  00152A                     l12584:
 16552                           
 16553                           ; BSR set to: 0
 16554                           ;MOTEapp.c: 345: else if (selectButton)
 16555  00152A  0100               	movlb	0	; () banked
 16556  00152C  51C6               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 16557  00152E  0100               	movlb	0	; () banked
 16558  001530  B4D8               	btfsc	status,2,c
 16559  001532  D24F               	goto	l12716
 16560                           
 16561                           ; BSR set to: 0
 16562                           ;MOTEapp.c: 346: {
 16563                           ;MOTEapp.c: 347: oled_putString("         (S3)   ", 0,3);
 16564  001534  0EE7               	movlw	low STR_42
 16565  001536  0100               	movlb	0	; () banked
 16566  001538  6FC0               	movwf	oled_putString@string& (0+255),b
 16567  00153A  0E7A               	movlw	high STR_42
 16568  00153C  0100               	movlb	0	; () banked
 16569  00153E  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16570  001540  0E00               	movlw	0
 16571  001542  0100               	movlb	0	; () banked
 16572  001544  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16573  001546  0E03               	movlw	3
 16574  001548  0100               	movlb	0	; () banked
 16575  00154A  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16576  00154C  EC6C  F028         	call	_oled_putString	;wreg free
 16577                           
 16578                           ;MOTEapp.c: 348: moteApp_delayms(500);
 16579  001550  0E01               	movlw	1
 16580  001552  0100               	movlb	0	; () banked
 16581  001554  6FB0               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16582  001556  0EF4               	movlw	244
 16583  001558  6FAF               	movwf	moteApp_delayms@length& (0+255),b
 16584  00155A  EC36  F02D         	call	_moteApp_delayms	;wreg free
 16585                           
 16586                           ;MOTEapp.c: 349: sendCommand("mac join otaa");
 16587  00155E  0E27               	movlw	low STR_43
 16588  001560  0100               	movlb	0	; () banked
 16589  001562  6FB0               	movwf	sendCommand@string& (0+255),b
 16590  001564  0E7D               	movlw	high STR_43
 16591  001566  0100               	movlb	0	; () banked
 16592  001568  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 16593  00156A  EC49  F02E         	call	_sendCommand	;wreg free
 16594  00156E  D18C               	goto	l12678
 16595                           
 16596                           ; BSR set to: 0
 16597                           ;MOTEapp.c: 351: }
 16598                           ;MOTEapp.c: 352: break;
 16599                           
 16600                           ; BSR set to: 0
 16601                           
 16602                           ;MOTEapp.c: 350: activeState = moteCheckOtaa;
 16603  001570  D230               	goto	l12716
 16604  001572                     l12594:
 16605                           
 16606                           ; BSR set to: 0
 16607                           ;MOTEapp.c: 354: if ( messageReady )
 16608  001572  0100               	movlb	0	; () banked
 16609  001574  51CA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16610  001576  0100               	movlb	0	; () banked
 16611  001578  B4D8               	btfsc	status,2,c
 16612  00157A  D22B               	goto	l12716
 16613                           
 16614                           ; BSR set to: 0
 16615                           ;MOTEapp.c: 355: {
 16616                           ;MOTEapp.c: 356: if(strcmp(moduleResonseBuffer, "ok") == 0)
 16617  00157C  0E68               	movlw	low _moduleResonseBuffer
 16618  00157E  0100               	movlb	0	; () banked
 16619  001580  6FAF               	movwf	strcmp@s1& (0+255),b
 16620  001582  0E01               	movlw	high _moduleResonseBuffer
 16621  001584  0100               	movlb	0	; () banked
 16622  001586  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16623  001588  0EF8               	movlw	low STR_44
 16624  00158A  0100               	movlb	0	; () banked
 16625  00158C  6FB1               	movwf	strcmp@s2& (0+255),b
 16626  00158E  0E7F               	movlw	high STR_44
 16627  001590  0100               	movlb	0	; () banked
 16628  001592  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16629  001594  EC87  F02A         	call	_strcmp	;wreg free
 16630  001598  0100               	movlb	0	; () banked
 16631  00159A  51AF               	movf	?_strcmp& (0+255),w,b
 16632  00159C  0100               	movlb	0	; () banked
 16633  00159E  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16634  0015A0  A4D8               	btfss	status,2,c
 16635  0015A2  D002               	goto	l12600
 16636                           
 16637                           ; BSR set to: 0
 16638                           ;MOTEapp.c: 357: {
 16639                           ;MOTEapp.c: 358: activeState = moteWaitAbp;
 16640  0015A4  0E04               	movlw	4
 16641  0015A6  D740               	goto	L6
 16642  0015A8                     l12600:
 16643                           
 16644                           ; BSR set to: 0
 16645                           ;MOTEapp.c: 360: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 16646  0015A8  0E68               	movlw	low _moduleResonseBuffer
 16647  0015AA  0100               	movlb	0	; () banked
 16648  0015AC  6FAF               	movwf	strcmp@s1& (0+255),b
 16649  0015AE  0E01               	movlw	high _moduleResonseBuffer
 16650  0015B0  0100               	movlb	0	; () banked
 16651  0015B2  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16652  0015B4  0E43               	movlw	low STR_45
 16653  0015B6  0100               	movlb	0	; () banked
 16654  0015B8  6FB1               	movwf	strcmp@s2& (0+255),b
 16655  0015BA  0E7D               	movlw	high STR_45
 16656  0015BC  0100               	movlb	0	; () banked
 16657  0015BE  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16658  0015C0  EC87  F02A         	call	_strcmp	;wreg free
 16659  0015C4  0100               	movlb	0	; () banked
 16660  0015C6  51AF               	movf	?_strcmp& (0+255),w,b
 16661  0015C8  0100               	movlb	0	; () banked
 16662  0015CA  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16663  0015CC  A4D8               	btfss	status,2,c
 16664  0015CE  D01F               	goto	l12610
 16665                           
 16666                           ; BSR set to: 0
 16667                           ;MOTEapp.c: 361: {
 16668                           ;MOTEapp.c: 362: oled_clear();
 16669  0015D0  EC3B  F02F         	call	_oled_clear	;wreg free
 16670                           
 16671                           ;MOTEapp.c: 363: oled_putString("Valid Keys",0,0);
 16672  0015D4  0EA0               	movlw	low STR_46
 16673  0015D6  0100               	movlb	0	; () banked
 16674  0015D8  6FC0               	movwf	oled_putString@string& (0+255),b
 16675  0015DA  0E7E               	movlw	high STR_46
 16676  0015DC  0100               	movlb	0	; () banked
 16677  0015DE  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16678  0015E0  0E00               	movlw	0
 16679  0015E2  0100               	movlb	0	; () banked
 16680  0015E4  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16681  0015E6  0E00               	movlw	0
 16682  0015E8  0100               	movlb	0	; () banked
 16683  0015EA  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16684  0015EC  EC6C  F028         	call	_oled_putString	;wreg free
 16685                           
 16686                           ;MOTEapp.c: 364: oled_putString("Required",0,1);
 16687  0015F0  0E1A               	movlw	low STR_47
 16688  0015F2  0100               	movlb	0	; () banked
 16689  0015F4  6FC0               	movwf	oled_putString@string& (0+255),b
 16690  0015F6  0E7F               	movlw	high STR_47
 16691  0015F8  0100               	movlb	0	; () banked
 16692  0015FA  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16693  0015FC  0E00               	movlw	0
 16694  0015FE  0100               	movlb	0	; () banked
 16695  001600  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16696  001602  0E01               	movlw	1
 16697  001604  0100               	movlb	0	; () banked
 16698  001606  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16699  001608  EC6C  F028         	call	_oled_putString	;wreg free
 16700  00160C  D09B               	goto	l12644
 16701  00160E                     l12610:
 16702                           
 16703                           ; BSR set to: 0
 16704                           ;MOTEapp.c: 367: else
 16705                           ;MOTEapp.c: 368: {
 16706                           ;MOTEapp.c: 369: sendCommand("mac join abp");
 16707  00160E  0ED3               	movlw	low STR_41
 16708  001610  0100               	movlb	0	; () banked
 16709  001612  6FB0               	movwf	sendCommand@string& (0+255),b
 16710  001614  0E7D               	movlw	high STR_41
 16711  001616  0100               	movlb	0	; () banked
 16712  001618  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 16713  00161A  EC49  F02E         	call	_sendCommand	;wreg free
 16714  00161E                     l12612:
 16715                           
 16716                           ;MOTEapp.c: 370: activeState = moteCheckAbp;
 16717  00161E  0E03               	movlw	3
 16718  001620  D703               	goto	L6
 16719                           
 16720                           ; BSR set to: 0
 16721                           ;MOTEapp.c: 371: }
 16722                           ;MOTEapp.c: 372: }
 16723                           ;MOTEapp.c: 373: break;
 16724                           
 16725                           ; BSR set to: 0
 16726                           
 16727                           ; BSR set to: 0
 16728  001622  D1D7               	goto	l12716
 16729  001624                     l12614:
 16730                           
 16731                           ; BSR set to: 0
 16732                           ;MOTEapp.c: 375: if ( messageReady )
 16733  001624  0100               	movlb	0	; () banked
 16734  001626  51CA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16735  001628  0100               	movlb	0	; () banked
 16736  00162A  B4D8               	btfsc	status,2,c
 16737  00162C  D1D2               	goto	l12716
 16738                           
 16739                           ; BSR set to: 0
 16740                           ;MOTEapp.c: 376: {
 16741                           ;MOTEapp.c: 377: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 16742  00162E  0E68               	movlw	low _moduleResonseBuffer
 16743  001630  0100               	movlb	0	; () banked
 16744  001632  6FAF               	movwf	strcmp@s1& (0+255),b
 16745  001634  0E01               	movlw	high _moduleResonseBuffer
 16746  001636  0100               	movlb	0	; () banked
 16747  001638  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16748  00163A  0E23               	movlw	low STR_49
 16749  00163C  0100               	movlb	0	; () banked
 16750  00163E  6FB1               	movwf	strcmp@s2& (0+255),b
 16751  001640  0E7F               	movlw	high STR_49
 16752  001642  0100               	movlb	0	; () banked
 16753  001644  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16754  001646  EC87  F02A         	call	_strcmp	;wreg free
 16755  00164A  0100               	movlb	0	; () banked
 16756  00164C  51AF               	movf	?_strcmp& (0+255),w,b
 16757  00164E  0100               	movlb	0	; () banked
 16758  001650  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16759  001652  A4D8               	btfss	status,2,c
 16760  001654  D01F               	goto	l12626
 16761                           
 16762                           ; BSR set to: 0
 16763                           ;MOTEapp.c: 378: {
 16764                           ;MOTEapp.c: 379: oled_clear();
 16765  001656  EC3B  F02F         	call	_oled_clear	;wreg free
 16766                           
 16767                           ;MOTEapp.c: 380: oled_putString("ABP Join ",0,0);
 16768  00165A  0ECB               	movlw	low STR_50
 16769  00165C  0100               	movlb	0	; () banked
 16770  00165E  6FC0               	movwf	oled_putString@string& (0+255),b
 16771  001660  0E7E               	movlw	high STR_50
 16772  001662  0100               	movlb	0	; () banked
 16773  001664  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16774  001666  0E00               	movlw	0
 16775  001668  0100               	movlb	0	; () banked
 16776  00166A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16777  00166C  0E00               	movlw	0
 16778  00166E  0100               	movlb	0	; () banked
 16779  001670  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16780  001672  EC6C  F028         	call	_oled_putString	;wreg free
 16781                           
 16782                           ;MOTEapp.c: 381: oled_putString("Successful",0,1);
 16783  001676  0E8A               	movlw	low STR_51
 16784  001678  0100               	movlb	0	; () banked
 16785  00167A  6FC0               	movwf	oled_putString@string& (0+255),b
 16786  00167C  0E7E               	movlw	high STR_51
 16787  00167E  0100               	movlb	0	; () banked
 16788  001680  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16789  001682  0E00               	movlw	0
 16790  001684  0100               	movlb	0	; () banked
 16791  001686  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16792  001688  0E01               	movlw	1
 16793  00168A  0100               	movlb	0	; () banked
 16794  00168C  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16795  00168E  EC6C  F028         	call	_oled_putString	;wreg free
 16796  001692  D0BE               	goto	l12666
 16797  001694                     l12626:
 16798                           
 16799                           ; BSR set to: 0
 16800                           ;MOTEapp.c: 384: else
 16801                           ;MOTEapp.c: 385: {
 16802                           ;MOTEapp.c: 386: sendCommand("mac reset");
 16803  001694  0EE9               	movlw	low STR_52
 16804  001696  0100               	movlb	0	; () banked
 16805  001698  6FB0               	movwf	sendCommand@string& (0+255),b
 16806  00169A  0E7E               	movlw	high STR_52
 16807  00169C  0100               	movlb	0	; () banked
 16808  00169E  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 16809  0016A0  EC49  F02E         	call	_sendCommand	;wreg free
 16810  0016A4                     l12628:
 16811                           
 16812                           ;MOTEapp.c: 387: activeState = moteReset;
 16813  0016A4  0E01               	movlw	1
 16814  0016A6  D6C0               	goto	L6
 16815                           
 16816                           ; BSR set to: 0
 16817                           ;MOTEapp.c: 388: }
 16818                           ;MOTEapp.c: 389: }
 16819                           ;MOTEapp.c: 390: break;
 16820                           
 16821                           ; BSR set to: 0
 16822  0016A8  D194               	goto	l12716
 16823  0016AA                     l12630:
 16824                           
 16825                           ; BSR set to: 0
 16826                           ;MOTEapp.c: 393: if ( messageReady )
 16827  0016AA  0100               	movlb	0	; () banked
 16828  0016AC  51CA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16829  0016AE  0100               	movlb	0	; () banked
 16830  0016B0  B4D8               	btfsc	status,2,c
 16831  0016B2  D18F               	goto	l12716
 16832                           
 16833                           ; BSR set to: 0
 16834                           ;MOTEapp.c: 394: {
 16835                           ;MOTEapp.c: 395: if(strcmp(moduleResonseBuffer, "ok") == 0)
 16836  0016B4  0E68               	movlw	low _moduleResonseBuffer
 16837  0016B6  0100               	movlb	0	; () banked
 16838  0016B8  6FAF               	movwf	strcmp@s1& (0+255),b
 16839  0016BA  0E01               	movlw	high _moduleResonseBuffer
 16840  0016BC  0100               	movlb	0	; () banked
 16841  0016BE  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16842  0016C0  0EF8               	movlw	low STR_44
 16843  0016C2  0100               	movlb	0	; () banked
 16844  0016C4  6FB1               	movwf	strcmp@s2& (0+255),b
 16845  0016C6  0E7F               	movlw	high STR_44
 16846  0016C8  0100               	movlb	0	; () banked
 16847  0016CA  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16848  0016CC  EC87  F02A         	call	_strcmp	;wreg free
 16849  0016D0  0100               	movlb	0	; () banked
 16850  0016D2  51AF               	movf	?_strcmp& (0+255),w,b
 16851  0016D4  0100               	movlb	0	; () banked
 16852  0016D6  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16853  0016D8  A4D8               	btfss	status,2,c
 16854  0016DA  D002               	goto	l12636
 16855                           
 16856                           ; BSR set to: 0
 16857                           ;MOTEapp.c: 396: {
 16858                           ;MOTEapp.c: 397: activeState = moteWaitOtaa;
 16859  0016DC  0E06               	movlw	6
 16860  0016DE  D6A4               	goto	L6
 16861  0016E0                     l12636:
 16862                           
 16863                           ; BSR set to: 0
 16864                           ;MOTEapp.c: 399: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 16865  0016E0  0E68               	movlw	low _moduleResonseBuffer
 16866  0016E2  0100               	movlb	0	; () banked
 16867  0016E4  6FAF               	movwf	strcmp@s1& (0+255),b
 16868  0016E6  0E01               	movlw	high _moduleResonseBuffer
 16869  0016E8  0100               	movlb	0	; () banked
 16870  0016EA  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16871  0016EC  0E43               	movlw	low STR_45
 16872  0016EE  0100               	movlb	0	; () banked
 16873  0016F0  6FB1               	movwf	strcmp@s2& (0+255),b
 16874  0016F2  0E7D               	movlw	high STR_45
 16875  0016F4  0100               	movlb	0	; () banked
 16876  0016F6  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16877  0016F8  EC87  F02A         	call	_strcmp	;wreg free
 16878  0016FC  0100               	movlb	0	; () banked
 16879  0016FE  51AF               	movf	?_strcmp& (0+255),w,b
 16880  001700  0100               	movlb	0	; () banked
 16881  001702  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16882  001704  A4D8               	btfss	status,2,c
 16883  001706  D020               	goto	l12646
 16884                           
 16885                           ; BSR set to: 0
 16886                           ;MOTEapp.c: 400: {
 16887                           ;MOTEapp.c: 401: oled_clear();
 16888  001708  EC3B  F02F         	call	_oled_clear	;wreg free
 16889                           
 16890                           ;MOTEapp.c: 402: oled_putString("Valid Keys",0,0);
 16891  00170C  0EA0               	movlw	low STR_46
 16892  00170E  0100               	movlb	0	; () banked
 16893  001710  6FC0               	movwf	oled_putString@string& (0+255),b
 16894  001712  0E7E               	movlw	high STR_46
 16895  001714  0100               	movlb	0	; () banked
 16896  001716  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16897  001718  0E00               	movlw	0
 16898  00171A  0100               	movlb	0	; () banked
 16899  00171C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16900  00171E  0E00               	movlw	0
 16901  001720  0100               	movlb	0	; () banked
 16902  001722  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16903  001724  EC6C  F028         	call	_oled_putString	;wreg free
 16904                           
 16905                           ;MOTEapp.c: 403: oled_putString("Required",0,1);
 16906  001728  0E1A               	movlw	low STR_47
 16907  00172A  0100               	movlb	0	; () banked
 16908  00172C  6FC0               	movwf	oled_putString@string& (0+255),b
 16909  00172E  0E7F               	movlw	high STR_47
 16910  001730  0100               	movlb	0	; () banked
 16911  001732  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 16912  001734  0E00               	movlw	0
 16913  001736  0100               	movlb	0	; () banked
 16914  001738  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 16915  00173A  0E01               	movlw	1
 16916  00173C  0100               	movlb	0	; () banked
 16917  00173E  6FC3               	movwf	oled_putString@start_page& (0+255),b
 16918  001740  EC6C  F028         	call	_oled_putString	;wreg free
 16919  001744                     l12644:
 16920                           
 16921                           ;MOTEapp.c: 404: activeState = moteNeedKeys;
 16922  001744  0E09               	movlw	9
 16923  001746  D670               	goto	L6
 16924  001748                     l12646:
 16925                           
 16926                           ; BSR set to: 0
 16927                           ;MOTEapp.c: 406: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 16928  001748  0E68               	movlw	low _moduleResonseBuffer
 16929  00174A  0100               	movlb	0	; () banked
 16930  00174C  6FAF               	movwf	strcmp@s1& (0+255),b
 16931  00174E  0E01               	movlw	high _moduleResonseBuffer
 16932  001750  0100               	movlb	0	; () banked
 16933  001752  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16934  001754  0E35               	movlw	low STR_57
 16935  001756  0100               	movlb	0	; () banked
 16936  001758  6FB1               	movwf	strcmp@s2& (0+255),b
 16937  00175A  0E7D               	movlw	high STR_57
 16938  00175C  0100               	movlb	0	; () banked
 16939  00175E  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16940  001760  EC87  F02A         	call	_strcmp	;wreg free
 16941  001764  0100               	movlb	0	; () banked
 16942  001766  51AF               	movf	?_strcmp& (0+255),w,b
 16943  001768  0100               	movlb	0	; () banked
 16944  00176A  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 16945  00176C  A4D8               	btfss	status,2,c
 16946  00176E  D009               	goto	l12652
 16947                           
 16948                           ; BSR set to: 0
 16949                           ;MOTEapp.c: 407: {
 16950                           ;MOTEapp.c: 408: sendCommand("mac join otaa");
 16951  001770  0E27               	movlw	low STR_43
 16952  001772  0100               	movlb	0	; () banked
 16953  001774  6FB0               	movwf	sendCommand@string& (0+255),b
 16954  001776  0E7D               	movlw	high STR_43
 16955  001778  0100               	movlb	0	; () banked
 16956  00177A  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 16957  00177C  EC49  F02E         	call	_sendCommand	;wreg free
 16958  001780  D083               	goto	l12678
 16959  001782                     l12652:
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;MOTEapp.c: 411: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 16963  001782  0E68               	movlw	low _moduleResonseBuffer
 16964  001784  0100               	movlb	0	; () banked
 16965  001786  6FAF               	movwf	strcmp@s1& (0+255),b
 16966  001788  0E01               	movlw	high _moduleResonseBuffer
 16967  00178A  0100               	movlb	0	; () banked
 16968  00178C  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 16969  00178E  0E7F               	movlw	low STR_59
 16970  001790  0100               	movlb	0	; () banked
 16971  001792  6FB1               	movwf	strcmp@s2& (0+255),b
 16972  001794  0E7E               	movlw	high STR_59
 16973  001796  0100               	movlb	0	; () banked
 16974  001798  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 16975  00179A  EC87  F02A         	call	_strcmp	;wreg free
 16976  00179E  D084               	goto	L7
 16977                           
 16978                           ; BSR set to: 0
 16979                           ;MOTEapp.c: 414: }
 16980                           ;MOTEapp.c: 415: }
 16981                           ;MOTEapp.c: 416: break;
 16982                           
 16983                           ; BSR set to: 0
 16984                           
 16985                           ; BSR set to: 0
 16986                           
 16987                           ; BSR set to: 0
 16988                           
 16989                           ; BSR set to: 0
 16990                           
 16991                           ; BSR set to: 0
 16992                           ;MOTEapp.c: 412: {
 16993                           ;MOTEapp.c: 413: activeState = moteStartup;
 16994  0017A0  D118               	goto	l12716
 16995  0017A2                     l12656:
 16996                           
 16997                           ; BSR set to: 0
 16998                           ;MOTEapp.c: 418: if ( messageReady )
 16999  0017A2  0100               	movlb	0	; () banked
 17000  0017A4  51CA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17001  0017A6  0100               	movlb	0	; () banked
 17002  0017A8  B4D8               	btfsc	status,2,c
 17003  0017AA  D113               	goto	l12716
 17004                           
 17005                           ; BSR set to: 0
 17006                           ;MOTEapp.c: 419: {
 17007                           ;MOTEapp.c: 420: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 17008  0017AC  0E68               	movlw	low _moduleResonseBuffer
 17009  0017AE  0100               	movlb	0	; () banked
 17010  0017B0  6FAF               	movwf	strcmp@s1& (0+255),b
 17011  0017B2  0E01               	movlw	high _moduleResonseBuffer
 17012  0017B4  0100               	movlb	0	; () banked
 17013  0017B6  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 17014  0017B8  0E23               	movlw	low STR_49
 17015  0017BA  0100               	movlb	0	; () banked
 17016  0017BC  6FB1               	movwf	strcmp@s2& (0+255),b
 17017  0017BE  0E7F               	movlw	high STR_49
 17018  0017C0  0100               	movlb	0	; () banked
 17019  0017C2  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 17020  0017C4  EC87  F02A         	call	_strcmp	;wreg free
 17021  0017C8  0100               	movlb	0	; () banked
 17022  0017CA  51AF               	movf	?_strcmp& (0+255),w,b
 17023  0017CC  0100               	movlb	0	; () banked
 17024  0017CE  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 17025  0017D0  A4D8               	btfss	status,2,c
 17026  0017D2  D020               	goto	l12668
 17027                           
 17028                           ; BSR set to: 0
 17029                           ;MOTEapp.c: 421: {
 17030                           ;MOTEapp.c: 422: oled_clear();
 17031  0017D4  EC3B  F02F         	call	_oled_clear	;wreg free
 17032                           
 17033                           ;MOTEapp.c: 423: oled_putString("OTAA Join ",0,0);
 17034  0017D8  0E74               	movlw	low STR_61
 17035  0017DA  0100               	movlb	0	; () banked
 17036  0017DC  6FC0               	movwf	oled_putString@string& (0+255),b
 17037  0017DE  0E7E               	movlw	high STR_61
 17038  0017E0  0100               	movlb	0	; () banked
 17039  0017E2  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 17040  0017E4  0E00               	movlw	0
 17041  0017E6  0100               	movlb	0	; () banked
 17042  0017E8  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 17043  0017EA  0E00               	movlw	0
 17044  0017EC  0100               	movlb	0	; () banked
 17045  0017EE  6FC3               	movwf	oled_putString@start_page& (0+255),b
 17046  0017F0  EC6C  F028         	call	_oled_putString	;wreg free
 17047                           
 17048                           ;MOTEapp.c: 424: oled_putString("Successful",0,1);
 17049  0017F4  0E8A               	movlw	low STR_51
 17050  0017F6  0100               	movlb	0	; () banked
 17051  0017F8  6FC0               	movwf	oled_putString@string& (0+255),b
 17052  0017FA  0E7E               	movlw	high STR_51
 17053  0017FC  0100               	movlb	0	; () banked
 17054  0017FE  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 17055  001800  0E00               	movlw	0
 17056  001802  0100               	movlb	0	; () banked
 17057  001804  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 17058  001806  0E01               	movlw	1
 17059  001808  0100               	movlb	0	; () banked
 17060  00180A  6FC3               	movwf	oled_putString@start_page& (0+255),b
 17061  00180C  EC6C  F028         	call	_oled_putString	;wreg free
 17062  001810                     l12666:
 17063                           
 17064                           ;MOTEapp.c: 425: activeState = moteJoined;
 17065  001810  0E07               	movlw	7
 17066  001812  D60A               	goto	L6
 17067  001814                     l12668:
 17068                           
 17069                           ; BSR set to: 0
 17070                           ;MOTEapp.c: 427: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 17071  001814  0E68               	movlw	low _moduleResonseBuffer
 17072  001816  0100               	movlb	0	; () banked
 17073  001818  6FAF               	movwf	strcmp@s1& (0+255),b
 17074  00181A  0E01               	movlw	high _moduleResonseBuffer
 17075  00181C  0100               	movlb	0	; () banked
 17076  00181E  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 17077  001820  0E96               	movlw	low STR_63
 17078  001822  0100               	movlb	0	; () banked
 17079  001824  6FB1               	movwf	strcmp@s2& (0+255),b
 17080  001826  0E7F               	movlw	high STR_63
 17081  001828  0100               	movlb	0	; () banked
 17082  00182A  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 17083  00182C  EC87  F02A         	call	_strcmp	;wreg free
 17084  001830  0100               	movlb	0	; () banked
 17085  001832  51AF               	movf	?_strcmp& (0+255),w,b
 17086  001834  0100               	movlb	0	; () banked
 17087  001836  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 17088  001838  A4D8               	btfss	status,2,c
 17089  00183A  D028               	goto	l12680
 17090                           
 17091                           ; BSR set to: 0
 17092                           ;MOTEapp.c: 428: {
 17093                           ;MOTEapp.c: 429: oled_clear();
 17094  00183C  EC3B  F02F         	call	_oled_clear	;wreg free
 17095                           
 17096                           ;MOTEapp.c: 430: oled_putString("OTAA Join",1,0);
 17097  001840  0EDF               	movlw	low STR_64
 17098  001842  0100               	movlb	0	; () banked
 17099  001844  6FC0               	movwf	oled_putString@string& (0+255),b
 17100  001846  0E7E               	movlw	high STR_64
 17101  001848  0100               	movlb	0	; () banked
 17102  00184A  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 17103  00184C  0E01               	movlw	1
 17104  00184E  0100               	movlb	0	; () banked
 17105  001850  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 17106  001852  0E00               	movlw	0
 17107  001854  0100               	movlb	0	; () banked
 17108  001856  6FC3               	movwf	oled_putString@start_page& (0+255),b
 17109  001858  EC6C  F028         	call	_oled_putString	;wreg free
 17110                           
 17111                           ;MOTEapp.c: 431: oled_putString("Denied",2,1);
 17112  00185C  0E8F               	movlw	low STR_65
 17113  00185E  0100               	movlb	0	; () banked
 17114  001860  6FC0               	movwf	oled_putString@string& (0+255),b
 17115  001862  0E7F               	movlw	high STR_65
 17116  001864  0100               	movlb	0	; () banked
 17117  001866  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 17118  001868  0E02               	movlw	2
 17119  00186A  0100               	movlb	0	; () banked
 17120  00186C  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 17121  00186E  0E01               	movlw	1
 17122  001870  0100               	movlb	0	; () banked
 17123  001872  6FC3               	movwf	oled_putString@start_page& (0+255),b
 17124  001874  EC6C  F028         	call	_oled_putString	;wreg free
 17125                           
 17126                           ;MOTEapp.c: 432: sendCommand("mac join otaa");
 17127  001878  0E27               	movlw	low STR_43
 17128  00187A  0100               	movlb	0	; () banked
 17129  00187C  6FB0               	movwf	sendCommand@string& (0+255),b
 17130  00187E  0E7D               	movlw	high STR_43
 17131  001880  0100               	movlb	0	; () banked
 17132  001882  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 17133  001884  EC49  F02E         	call	_sendCommand	;wreg free
 17134  001888                     l12678:
 17135                           
 17136                           ;MOTEapp.c: 433: activeState = moteCheckOtaa;
 17137  001888  0E05               	movlw	5
 17138  00188A  D5CE               	goto	L6
 17139  00188C                     l12680:
 17140                           
 17141                           ; BSR set to: 0
 17142                           ;MOTEapp.c: 435: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 17143  00188C  0E68               	movlw	low _moduleResonseBuffer
 17144  00188E  0100               	movlb	0	; () banked
 17145  001890  6FAF               	movwf	strcmp@s1& (0+255),b
 17146  001892  0E01               	movlw	high _moduleResonseBuffer
 17147  001894  0100               	movlb	0	; () banked
 17148  001896  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 17149  001898  0E7F               	movlw	low STR_59
 17150  00189A  0100               	movlb	0	; () banked
 17151  00189C  6FB1               	movwf	strcmp@s2& (0+255),b
 17152  00189E  0E7E               	movlw	high STR_59
 17153  0018A0  0100               	movlb	0	; () banked
 17154  0018A2  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 17155  0018A4  EC87  F02A         	call	_strcmp	;wreg free
 17156  0018A8                     L7:
 17157  0018A8  0100               	movlb	0	; () banked
 17158  0018AA  51AF               	movf	?_strcmp& (0+255),w,b
 17159  0018AC  0100               	movlb	0	; () banked
 17160  0018AE  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 17161  0018B0  A4D8               	btfss	status,2,c
 17162  0018B2  D08F               	goto	l12716
 17163  0018B4                     l12682:
 17164                           
 17165                           ; BSR set to: 0
 17166                           ;MOTEapp.c: 436: {
 17167                           ;MOTEapp.c: 437: activeState = moteStartup;
 17168  0018B4  0E00               	movlw	0
 17169  0018B6  D5B8               	goto	L6
 17170                           
 17171                           ; BSR set to: 0
 17172                           ;MOTEapp.c: 438: }
 17173                           ;MOTEapp.c: 439: }
 17174                           ;MOTEapp.c: 440: break;
 17175                           
 17176                           ; BSR set to: 0
 17177                           
 17178                           ; BSR set to: 0
 17179                           
 17180                           ; BSR set to: 0
 17181  0018B8  D08C               	goto	l12716
 17182  0018BA                     l12684:
 17183                           
 17184                           ; BSR set to: 0
 17185                           ;MOTEapp.c: 442: sendCommand("mac get dr");
 17186  0018BA  0E95               	movlw	low STR_68
 17187  0018BC  0100               	movlb	0	; () banked
 17188  0018BE  6FB0               	movwf	sendCommand@string& (0+255),b
 17189  0018C0  0E7E               	movlw	high STR_68
 17190  0018C2  0100               	movlb	0	; () banked
 17191  0018C4  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 17192  0018C6  EC49  F02E         	call	_sendCommand	;wreg free
 17193  0018CA  D021               	goto	l12694
 17194  0018CC                     l12688:
 17195                           
 17196                           ; BSR set to: 0
 17197                           ;MOTEapp.c: 446: if ( messageReady )
 17198  0018CC  0100               	movlb	0	; () banked
 17199  0018CE  51CA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17200  0018D0  0100               	movlb	0	; () banked
 17201  0018D2  B4D8               	btfsc	status,2,c
 17202  0018D4  D07E               	goto	l12716
 17203                           
 17204                           ; BSR set to: 0
 17205                           ;MOTEapp.c: 447: {
 17206                           ;MOTEapp.c: 448: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 17207  0018D6  0E68               	movlw	low _moduleResonseBuffer
 17208  0018D8  0100               	movlb	0	; () banked
 17209  0018DA  6FAF               	movwf	strcmp@s1& (0+255),b
 17210  0018DC  0E01               	movlw	high _moduleResonseBuffer
 17211  0018DE  0100               	movlb	0	; () banked
 17212  0018E0  6FB0               	movwf	(strcmp@s1+1)& (0+255),b
 17213  0018E2  0E35               	movlw	low STR_57
 17214  0018E4  0100               	movlb	0	; () banked
 17215  0018E6  6FB1               	movwf	strcmp@s2& (0+255),b
 17216  0018E8  0E7D               	movlw	high STR_57
 17217  0018EA  0100               	movlb	0	; () banked
 17218  0018EC  6FB2               	movwf	(strcmp@s2+1)& (0+255),b
 17219  0018EE  EC87  F02A         	call	_strcmp	;wreg free
 17220  0018F2  0100               	movlb	0	; () banked
 17221  0018F4  51AF               	movf	?_strcmp& (0+255),w,b
 17222  0018F6  0100               	movlb	0	; () banked
 17223  0018F8  11B0               	iorwf	(?_strcmp+1)& (0+255),w,b
 17224  0018FA  A4D8               	btfss	status,2,c
 17225  0018FC  D00A               	goto	l12696
 17226                           
 17227                           ; BSR set to: 0
 17228                           ;MOTEapp.c: 449: {
 17229                           ;MOTEapp.c: 450: sendCommand("mac get dr");
 17230  0018FE  0E95               	movlw	low STR_68
 17231  001900  0100               	movlb	0	; () banked
 17232  001902  6FB0               	movwf	sendCommand@string& (0+255),b
 17233  001904  0E7E               	movlw	high STR_68
 17234  001906  0100               	movlb	0	; () banked
 17235  001908  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 17236  00190A  EC49  F02E         	call	_sendCommand	;wreg free
 17237  00190E                     l12694:
 17238                           
 17239                           ;MOTEapp.c: 451: activeState = moteGetDr;
 17240  00190E  0E08               	movlw	8
 17241  001910  D58B               	goto	L6
 17242  001912                     l12696:
 17243                           
 17244                           ; BSR set to: 0
 17245                           ;MOTEapp.c: 453: else
 17246                           ;MOTEapp.c: 454: {
 17247                           ;MOTEapp.c: 455: uint8_t readDataRate;
 17248                           ;MOTEapp.c: 456: readDataRate = moduleResonseBuffer[0] - '0';
 17249  001912  0101               	movlb	1	; () banked
 17250  001914  5168               	movf	_moduleResonseBuffer& (0+255),w,b
 17251  001916  0FD0               	addlw	208
 17252  001918  0100               	movlb	0	; () banked
 17253  00191A  6FC8               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 17254                           
 17255                           ; BSR set to: 0
 17256                           ;MOTEapp.c: 457: dataRateValue = readDataRate;
 17257  00191C  C0C8  F0F8         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 17258                           
 17259                           ; BSR set to: 0
 17260                           ;MOTEapp.c: 458: joiningComplete = 1;
 17261  001920  0E01               	movlw	1
 17262  001922  0100               	movlb	0	; () banked
 17263  001924  6FC9               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 17264                           
 17265                           ; BSR set to: 0
 17266                           ;MOTEapp.c: 459: }
 17267                           ;MOTEapp.c: 460: }
 17268                           ;MOTEapp.c: 461: break;
 17269                           
 17270                           ; BSR set to: 0
 17271  001926  D055               	goto	l12716
 17272  001928                     l12702:
 17273                           
 17274                           ; BSR set to: 0
 17275                           ;MOTEapp.c: 463: if (selectButton)
 17276  001928  0100               	movlb	0	; () banked
 17277  00192A  51C6               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 17278  00192C  0100               	movlb	0	; () banked
 17279  00192E  B4D8               	btfsc	status,2,c
 17280  001930  D050               	goto	l12716
 17281                           
 17282                           ; BSR set to: 0
 17283                           ;MOTEapp.c: 464: {
 17284                           ;MOTEapp.c: 465: activeState = moteComFailure;
 17285  001932  0E0A               	movlw	10
 17286  001934  D579               	goto	L6
 17287                           
 17288                           ; BSR set to: 0
 17289                           ;MOTEapp.c: 466: }
 17290                           ;MOTEapp.c: 468: break;
 17291  001936  D04D               	goto	l12716
 17292  001938                     l12706:
 17293                           
 17294                           ; BSR set to: 0
 17295                           ;MOTEapp.c: 470: DATAEE_WriteByte(0x00, 0x00);
 17296  001938  0E00               	movlw	0
 17297  00193A  0100               	movlb	0	; () banked
 17298  00193C  6FAF               	movwf	DATAEE_WriteByte@bData& (0+255),b
 17299  00193E  0E00               	movlw	0
 17300  001940  EC9E  F02C         	call	_DATAEE_WriteByte
 17301                           
 17302                           ;MOTEapp.c: 471: while((!PORTBbits.RB1) && (!PORTBbits.RB0));
 17303  001944  D000               	goto	l440
 17304  001946                     l440:
 17305  001946  A281               	btfss	3969,1,c	;volatile
 17306  001948  B081               	btfsc	3969,0,c	;volatile
 17307  00194A  D002               	goto	l12710
 17308  00194C  D7FC               	goto	l440
 17309  00194E  D000               	goto	l12710
 17310  001950                     l12710:
 17311                           
 17312                           ;MOTEapp.c: 472: _delay((unsigned long)((16)*(48000000/4000.0)));
 17313  001950  0EFA               	movlw	250
 17314  001952  0100               	movlb	0	; () banked
 17315  001954  6FC7               	movwf	??_moteJoiningProcess& (0+255),b
 17316  001956  0E58               	movlw	88
 17317  001958                     u12687:
 17318  001958  2EE8               	decfsz	wreg,f,c
 17319  00195A  D7FE               	goto	u12687
 17320  00195C  2FC7               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17321  00195E  D7FC               	goto	u12687
 17322  001960  D000               	nop2	
 17323                           
 17324                           ;MOTEapp.c: 473: _delay((unsigned long)((16)*(48000000/4000.0)));
 17325  001962  0EFA               	movlw	250
 17326  001964  0100               	movlb	0	; () banked
 17327  001966  6FC7               	movwf	??_moteJoiningProcess& (0+255),b
 17328  001968  0E58               	movlw	88
 17329  00196A                     u12697:
 17330  00196A  2EE8               	decfsz	wreg,f,c
 17331  00196C  D7FE               	goto	u12697
 17332  00196E  2FC7               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17333  001970  D7FC               	goto	u12697
 17334  001972  D000               	nop2	
 17335                           
 17336                           ;MOTEapp.c: 474: _delay((unsigned long)((16)*(48000000/4000.0)));
 17337  001974  0EFA               	movlw	250
 17338  001976  0100               	movlb	0	; () banked
 17339  001978  6FC7               	movwf	??_moteJoiningProcess& (0+255),b
 17340  00197A  0E58               	movlw	88
 17341  00197C                     u12707:
 17342  00197C  2EE8               	decfsz	wreg,f,c
 17343  00197E  D7FE               	goto	u12707
 17344  001980  2FC7               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17345  001982  D7FC               	goto	u12707
 17346  001984  D000               	nop2	
 17347  001986  00FF               	reset		;# 
 17348                           
 17349                           ;MOTEapp.c: 478: }
 17350                           
 17351                           ;MOTEapp.c: 477: break;
 17352  001988  D024               	goto	l12716
 17353  00198A                     l12714:
 17354  00198A  0100               	movlb	0	; () banked
 17355  00198C  518C               	movf	_activeState& (0+255),w,b
 17356                           
 17357                           ; Switch size 1, requested type "space"
 17358                           ; Number of cases is 11, Range of values is 0 to 10
 17359                           ; switch strategies available:
 17360                           ; Name         Instructions Cycles
 17361                           ; simple_byte           34    18 (average)
 17362                           ;	Chosen strategy is simple_byte
 17363  00198E  0A00               	xorlw	0	; case 0
 17364  001990  B4D8               	btfsc	status,2,c
 17365  001992  D4EB               	goto	l12532
 17366  001994  0A01               	xorlw	1	; case 1
 17367  001996  B4D8               	btfsc	status,2,c
 17368  001998  D4F1               	goto	l12536
 17369  00199A  0A03               	xorlw	3	; case 2
 17370  00199C  B4D8               	btfsc	status,2,c
 17371  00199E  D5A2               	goto	l12574
 17372  0019A0  0A01               	xorlw	1	; case 3
 17373  0019A2  B4D8               	btfsc	status,2,c
 17374  0019A4  D5E6               	goto	l12594
 17375  0019A6  0A07               	xorlw	7	; case 4
 17376  0019A8  B4D8               	btfsc	status,2,c
 17377  0019AA  D63C               	goto	l12614
 17378  0019AC  0A01               	xorlw	1	; case 5
 17379  0019AE  B4D8               	btfsc	status,2,c
 17380  0019B0  D67C               	goto	l12630
 17381  0019B2  0A03               	xorlw	3	; case 6
 17382  0019B4  B4D8               	btfsc	status,2,c
 17383  0019B6  D6F5               	goto	l12656
 17384  0019B8  0A01               	xorlw	1	; case 7
 17385  0019BA  B4D8               	btfsc	status,2,c
 17386  0019BC  D77E               	goto	l12684
 17387  0019BE  0A0F               	xorlw	15	; case 8
 17388  0019C0  B4D8               	btfsc	status,2,c
 17389  0019C2  D784               	goto	l12688
 17390  0019C4  0A01               	xorlw	1	; case 9
 17391  0019C6  B4D8               	btfsc	status,2,c
 17392  0019C8  D7AF               	goto	l12702
 17393  0019CA  0A03               	xorlw	3	; case 10
 17394  0019CC  B4D8               	btfsc	status,2,c
 17395  0019CE  D7B4               	goto	l12706
 17396  0019D0  D4CA               	goto	l391
 17397  0019D2                     l12716:
 17398                           
 17399                           ;MOTEapp.c: 479: return joiningComplete;
 17400  0019D2  0100               	movlb	0	; () banked
 17401  0019D4  51C9               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 17402  0019D6  0012               	return	
 17403                           
 17404                           ; BSR set to: 0
 17405                           
 17406                           ; BSR set to: 0
 17407  0019D8  0012               	return		;funcret
 17408  0019DA                     __end_of_moteJoiningProcess:
 17409                           	opt stack 0
 17410                           tblptru	equ	0xFF8
 17411                           tblptrh	equ	0xFF7
 17412                           tblptrl	equ	0xFF6
 17413                           tablat	equ	0xFF5
 17414                           prodh	equ	0xFF4
 17415                           prodl	equ	0xFF3
 17416                           intcon	equ	0xFF2
 17417                           intcon3	equ	0xFF0
 17418                           postinc0	equ	0xFEE
 17419                           wreg	equ	0xFE8
 17420                           indf1	equ	0xFE7
 17421                           postdec1	equ	0xFE5
 17422                           fsr1h	equ	0xFE2
 17423                           fsr1l	equ	0xFE1
 17424                           indf2	equ	0xFDF
 17425                           fsr2h	equ	0xFDA
 17426                           fsr2l	equ	0xFD9
 17427                           status	equ	0xFD8
 17428                           
 17429 ;; *************** function _strncmp *****************
 17430 ;; Defined at:
 17431 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strncmp.c"
 17432 ;; Parameters:    Size  Location     Type
 17433 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17434 ;;		 -> moduleResonseBuffer(64), 
 17435 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17436 ;;		 -> STR_97(7), STR_95(7), STR_93(7), STR_90(7), 
 17437 ;;		 -> STR_35(5), STR_31(5), 
 17438 ;;  len             2    4[BANK0 ] unsigned int 
 17439 ;; Auto vars:     Size  Location     Type
 17440 ;;		None
 17441 ;; Return value:  Size  Location     Type
 17442 ;;                  2    0[BANK0 ] int 
 17443 ;; Registers used:
 17444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17445 ;; Tracked objects:
 17446 ;;		On entry : 0/0
 17447 ;;		On exit  : 0/0
 17448 ;;		Unchanged: 0/0
 17449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17450 ;;      Params:         0       6       0       0       0       0       0       0       0
 17451 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17452 ;;      Temps:          0       3       0       0       0       0       0       0       0
 17453 ;;      Totals:         0       9       0       0       0       0       0       0       0
 17454 ;;Total ram usage:        9 bytes
 17455 ;; Hardware stack levels used:    1
 17456 ;; Hardware stack levels required when called:   11
 17457 ;; This function calls:
 17458 ;;		Nothing
 17459 ;; This function is called by:
 17460 ;;		_moteJoiningProcess
 17461 ;;		_moteRunningProcess
 17462 ;; This function uses a non-reentrant model
 17463 ;;
 17464                           
 17465                           	psect	text53
 17466  004A1E                     __ptext53:
 17467                           	opt stack 0
 17468  004A1E                     _strncmp:
 17469                           	opt stack 17
 17470                           
 17471                           ; BSR set to: 0
 17472                           ;incstack = 0
 17473  004A1E  D040               	goto	l11850
 17474  004A20                     l11840:
 17475  004A20  C0AF  FFD9         	movff	strncmp@s1,fsr2l
 17476  004A24  C0B0  FFDA         	movff	strncmp@s1+1,fsr2h
 17477  004A28  50DF               	movf	indf2,w,c
 17478  004A2A  B4D8               	btfsc	status,2,c
 17479  004A2C  D011               	goto	l11844
 17480  004A2E  C0AF  FFD9         	movff	strncmp@s1,fsr2l
 17481  004A32  C0B0  FFDA         	movff	strncmp@s1+1,fsr2h
 17482  004A36  50DF               	movf	indf2,w,c
 17483  004A38  0100               	movlb	0	; () banked
 17484  004A3A  6FB5               	movwf	??_strncmp& (0+255),b
 17485  004A3C  C0B1  FFF6         	movff	strncmp@s2,tblptrl
 17486  004A40  C0B2  FFF7         	movff	strncmp@s2+1,tblptrh
 17487  004A44                     	if	0	;tblptru may be non-zero
 17488  004A44                     	endif
 17489  004A44                     	if	0	;tblptru may be non-zero
 17490  004A44                     	endif
 17491  004A44  0008               	tblrd		*
 17492  004A46  50F5               	movf	tablat,w,c
 17493  004A48  0100               	movlb	0	; () banked
 17494  004A4A  19B5               	xorwf	??_strncmp& (0+255),w,b
 17495  004A4C  B4D8               	btfsc	status,2,c
 17496  004A4E  D021               	goto	l11848
 17497  004A50                     l11844:
 17498  004A50  C0B1  FFF6         	movff	strncmp@s2,tblptrl
 17499  004A54  C0B2  FFF7         	movff	strncmp@s2+1,tblptrh
 17500  004A58                     	if	0	;tblptru may be non-zero
 17501  004A58                     	endif
 17502  004A58                     	if	0	;tblptru may be non-zero
 17503  004A58                     	endif
 17504  004A58  0008               	tblrd		*
 17505  004A5A  50F5               	movf	tablat,w,c
 17506  004A5C  0100               	movlb	0	; () banked
 17507  004A5E  6FB5               	movwf	??_strncmp& (0+255),b
 17508  004A60  6BB6               	clrf	(??_strncmp+1)& (0+255),b
 17509  004A62  0100               	movlb	0	; () banked
 17510  004A64  1FB5               	comf	??_strncmp& (0+255),f,b
 17511  004A66  1FB6               	comf	(??_strncmp+1)& (0+255),f,b
 17512  004A68  4BB5               	infsnz	??_strncmp& (0+255),f,b
 17513  004A6A  2BB6               	incf	(??_strncmp+1)& (0+255),f,b
 17514  004A6C  C0AF  FFD9         	movff	strncmp@s1,fsr2l
 17515  004A70  C0B0  FFDA         	movff	strncmp@s1+1,fsr2h
 17516  004A74  50DF               	movf	indf2,w,c
 17517  004A76  0100               	movlb	0	; () banked
 17518  004A78  6FB7               	movwf	(??_strncmp+2)& (0+255),b
 17519  004A7A  0100               	movlb	0	; () banked
 17520  004A7C  51B7               	movf	(??_strncmp+2)& (0+255),w,b
 17521  004A7E  0100               	movlb	0	; () banked
 17522  004A80  25B5               	addwf	??_strncmp& (0+255),w,b
 17523  004A82  0100               	movlb	0	; () banked
 17524  004A84  6FAF               	movwf	?_strncmp& (0+255),b
 17525  004A86  0E00               	movlw	0
 17526  004A88  0100               	movlb	0	; () banked
 17527  004A8A  21B6               	addwfc	(??_strncmp+1)& (0+255),w,b
 17528  004A8C  0100               	movlb	0	; () banked
 17529  004A8E  6FB0               	movwf	(?_strncmp+1)& (0+255),b
 17530                           
 17531                           ; BSR set to: 0
 17532  004A90  0012               	return	
 17533  004A92                     l11848:
 17534                           
 17535                           ; BSR set to: 0
 17536  004A92  0100               	movlb	0	; () banked
 17537  004A94  4BAF               	infsnz	strncmp@s1& (0+255),f,b
 17538  004A96  2BB0               	incf	(strncmp@s1+1)& (0+255),f,b
 17539  004A98  0100               	movlb	0	; () banked
 17540  004A9A  4BB1               	infsnz	strncmp@s2& (0+255),f,b
 17541  004A9C  2BB2               	incf	(strncmp@s2+1)& (0+255),f,b
 17542  004A9E  D000               	goto	l11850
 17543  004AA0                     l11850:
 17544  004AA0  0100               	movlb	0	; () banked
 17545  004AA2  07B3               	decf	strncmp@len& (0+255),f,b
 17546  004AA4  A0D8               	btfss	status,0,c
 17547  004AA6  07B4               	decf	(strncmp@len+1)& (0+255),f,b
 17548  004AA8  0100               	movlb	0	; () banked
 17549  004AAA  29B3               	incf	strncmp@len& (0+255),w,b
 17550  004AAC  E1B9               	bnz	l11840
 17551  004AAE  0100               	movlb	0	; () banked
 17552  004AB0  29B4               	incf	(strncmp@len+1)& (0+255),w,b
 17553  004AB2  A4D8               	btfss	status,2,c
 17554  004AB4  D7B5               	goto	l11840
 17555                           
 17556                           ; BSR set to: 0
 17557                           
 17558                           ; BSR set to: 0
 17559  004AB6  0E00               	movlw	0
 17560  004AB8  0100               	movlb	0	; () banked
 17561  004ABA  6FB0               	movwf	(?_strncmp+1)& (0+255),b
 17562  004ABC  0E00               	movlw	0
 17563  004ABE  6FAF               	movwf	?_strncmp& (0+255),b
 17564  004AC0  0012               	return	
 17565                           
 17566                           ; BSR set to: 0
 17567                           
 17568                           ; BSR set to: 0
 17569  004AC2  0012               	return		;funcret
 17570  004AC4                     __end_of_strncmp:
 17571                           	opt stack 0
 17572                           tblptru	equ	0xFF8
 17573                           tblptrh	equ	0xFF7
 17574                           tblptrl	equ	0xFF6
 17575                           tablat	equ	0xFF5
 17576                           prodh	equ	0xFF4
 17577                           prodl	equ	0xFF3
 17578                           intcon	equ	0xFF2
 17579                           intcon3	equ	0xFF0
 17580                           postinc0	equ	0xFEE
 17581                           wreg	equ	0xFE8
 17582                           indf1	equ	0xFE7
 17583                           postdec1	equ	0xFE5
 17584                           fsr1h	equ	0xFE2
 17585                           fsr1l	equ	0xFE1
 17586                           indf2	equ	0xFDF
 17587                           fsr2h	equ	0xFDA
 17588                           fsr2l	equ	0xFD9
 17589                           status	equ	0xFD8
 17590                           
 17591 ;; *************** function _strcmp *****************
 17592 ;; Defined at:
 17593 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
 17594 ;; Parameters:    Size  Location     Type
 17595 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17596 ;;		 -> moduleResonseBuffer(64), 
 17597 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17598 ;;		 -> STR_89(3), STR_69(14), STR_67(11), STR_63(7), 
 17599 ;;		 -> STR_60(9), STR_59(11), STR_57(14), STR_54(14), 
 17600 ;;		 -> STR_53(3), STR_49(9), STR_45(14), STR_44(3), 
 17601 ;; Auto vars:     Size  Location     Type
 17602 ;;  r               1    5[BANK0 ] char 
 17603 ;; Return value:  Size  Location     Type
 17604 ;;                  2    0[BANK0 ] int 
 17605 ;; Registers used:
 17606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17607 ;; Tracked objects:
 17608 ;;		On entry : 0/0
 17609 ;;		On exit  : 0/0
 17610 ;;		Unchanged: 0/0
 17611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17612 ;;      Params:         0       4       0       0       0       0       0       0       0
 17613 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17614 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17615 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17616 ;;Total ram usage:        6 bytes
 17617 ;; Hardware stack levels used:    1
 17618 ;; Hardware stack levels required when called:   11
 17619 ;; This function calls:
 17620 ;;		Nothing
 17621 ;; This function is called by:
 17622 ;;		_moteJoiningProcess
 17623 ;;		_moteRunningProcess
 17624 ;; This function uses a non-reentrant model
 17625 ;;
 17626                           
 17627                           	psect	text54
 17628  00550E                     __ptext54:
 17629                           	opt stack 0
 17630  00550E                     _strcmp:
 17631                           	opt stack 17
 17632                           
 17633                           ; BSR set to: 0
 17634                           ;incstack = 0
 17635  00550E  D007               	goto	l11860
 17636  005510                     l11858:
 17637  005510  0100               	movlb	0	; () banked
 17638  005512  4BAF               	infsnz	strcmp@s1& (0+255),f,b
 17639  005514  2BB0               	incf	(strcmp@s1+1)& (0+255),f,b
 17640  005516  0100               	movlb	0	; () banked
 17641  005518  4BB1               	infsnz	strcmp@s2& (0+255),f,b
 17642  00551A  2BB2               	incf	(strcmp@s2+1)& (0+255),f,b
 17643  00551C  D000               	goto	l11860
 17644  00551E                     l11860:
 17645  00551E  C0AF  FFD9         	movff	strcmp@s1,fsr2l
 17646  005522  C0B0  FFDA         	movff	strcmp@s1+1,fsr2h
 17647  005526  50DF               	movf	indf2,w,c
 17648  005528  0100               	movlb	0	; () banked
 17649  00552A  6FB3               	movwf	??_strcmp& (0+255),b
 17650  00552C  C0B1  FFF6         	movff	strcmp@s2,tblptrl
 17651  005530  C0B2  FFF7         	movff	strcmp@s2+1,tblptrh
 17652  005534                     	if	0	;tblptru may be non-zero
 17653  005534                     	endif
 17654  005534                     	if	0	;tblptru may be non-zero
 17655  005534                     	endif
 17656  005534  0008               	tblrd		*
 17657  005536  50F5               	movf	tablat,w,c
 17658  005538  0800               	sublw	0
 17659  00553A  0100               	movlb	0	; () banked
 17660  00553C  25B3               	addwf	??_strcmp& (0+255),w,b
 17661  00553E  0100               	movlb	0	; () banked
 17662  005540  6FB4               	movwf	strcmp@r& (0+255),b
 17663  005542  0100               	movlb	0	; () banked
 17664  005544  51B4               	movf	strcmp@r& (0+255),w,b
 17665  005546  A4D8               	btfss	status,2,c
 17666  005548  D009               	goto	l11864
 17667                           
 17668                           ; BSR set to: 0
 17669  00554A  C0AF  FFD9         	movff	strcmp@s1,fsr2l
 17670  00554E  C0B0  FFDA         	movff	strcmp@s1+1,fsr2h
 17671  005552  50DF               	movf	indf2,w,c
 17672  005554  B4D8               	btfsc	status,2,c
 17673  005556  D002               	goto	l11864
 17674  005558  D7DB               	goto	l11858
 17675                           
 17676                           ; BSR set to: 0
 17677  00555A  D000               	goto	l11864
 17678  00555C                     l11864:
 17679                           
 17680                           ; BSR set to: 0
 17681  00555C  0100               	movlb	0	; () banked
 17682  00555E  51B4               	movf	strcmp@r& (0+255),w,b
 17683  005560  0100               	movlb	0	; () banked
 17684  005562  6FAF               	movwf	?_strcmp& (0+255),b
 17685  005564  6BB0               	clrf	(?_strcmp+1)& (0+255),b
 17686  005566  BFAF               	btfsc	?_strcmp& (0+255),7,b
 17687  005568  07B0               	decf	(?_strcmp+1)& (0+255),f,b
 17688  00556A  0012               	return	
 17689                           
 17690                           ; BSR set to: 0
 17691                           
 17692                           ; BSR set to: 0
 17693  00556C  0012               	return		;funcret
 17694  00556E                     __end_of_strcmp:
 17695                           	opt stack 0
 17696                           tblptru	equ	0xFF8
 17697                           tblptrh	equ	0xFF7
 17698                           tblptrl	equ	0xFF6
 17699                           tablat	equ	0xFF5
 17700                           prodh	equ	0xFF4
 17701                           prodl	equ	0xFF3
 17702                           intcon	equ	0xFF2
 17703                           intcon3	equ	0xFF0
 17704                           postinc0	equ	0xFEE
 17705                           wreg	equ	0xFE8
 17706                           indf1	equ	0xFE7
 17707                           postdec1	equ	0xFE5
 17708                           fsr1h	equ	0xFE2
 17709                           fsr1l	equ	0xFE1
 17710                           indf2	equ	0xFDF
 17711                           fsr2h	equ	0xFDA
 17712                           fsr2l	equ	0xFD9
 17713                           status	equ	0xFD8
 17714                           
 17715 ;; *************** function _moteApp_delayms *****************
 17716 ;; Defined at:
 17717 ;;		line 165 in file "../Includes/Board/MOTEapp.c"
 17718 ;; Parameters:    Size  Location     Type
 17719 ;;  length          2    0[BANK0 ] unsigned int 
 17720 ;; Auto vars:     Size  Location     Type
 17721 ;;  counter         2    3[BANK0 ] unsigned int 
 17722 ;; Return value:  Size  Location     Type
 17723 ;;		None               void
 17724 ;; Registers used:
 17725 ;;		wreg, status,2, status,0
 17726 ;; Tracked objects:
 17727 ;;		On entry : 0/0
 17728 ;;		On exit  : 0/0
 17729 ;;		Unchanged: 0/0
 17730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17731 ;;      Params:         0       2       0       0       0       0       0       0       0
 17732 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17733 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17734 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17735 ;;Total ram usage:        5 bytes
 17736 ;; Hardware stack levels used:    1
 17737 ;; Hardware stack levels required when called:   11
 17738 ;; This function calls:
 17739 ;;		Nothing
 17740 ;; This function is called by:
 17741 ;;		_main
 17742 ;;		_test_powerup
 17743 ;;		_moduleResync
 17744 ;;		_moteJoiningProcess
 17745 ;;		_moteRunningProcess
 17746 ;;		_moteApp_GoToSleep
 17747 ;;		_moteApp_setSensorsInput
 17748 ;; This function uses a non-reentrant model
 17749 ;;
 17750                           
 17751                           	psect	text55
 17752  005A6C                     __ptext55:
 17753                           	opt stack 0
 17754  005A6C                     _moteApp_delayms:
 17755                           	opt stack 16
 17756                           
 17757                           ;MOTEapp.c: 167: uint16_t counter;
 17758                           ;MOTEapp.c: 168: for(counter = 0; counter < length; counter++)
 17759                           
 17760                           ; BSR set to: 0
 17761                           ;incstack = 0
 17762  005A6C  0E00               	movlw	0
 17763  005A6E  0100               	movlb	0	; () banked
 17764  005A70  6FB3               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 17765  005A72  0E00               	movlw	0
 17766  005A74  6FB2               	movwf	moteApp_delayms@counter& (0+255),b
 17767  005A76  D00C               	goto	l346
 17768  005A78                     l11126:
 17769                           
 17770                           ; BSR set to: 0
 17771                           ;MOTEapp.c: 169: {
 17772                           ;MOTEapp.c: 170: _delay((unsigned long)((1)*(48000000/4000.0)));
 17773  005A78  0E10               	movlw	16
 17774  005A7A  0100               	movlb	0	; () banked
 17775  005A7C  6FB1               	movwf	??_moteApp_delayms& (0+255),b
 17776  005A7E  0E94               	movlw	148
 17777  005A80                     u12717:
 17778  005A80  2EE8               	decfsz	wreg,f,c
 17779  005A82  D7FE               	goto	u12717
 17780  005A84  2FB1               	decfsz	??_moteApp_delayms& (0+255),f,b
 17781  005A86  D7FC               	goto	u12717
 17782  005A88  D000               	nop2	
 17783  005A8A  0100               	movlb	0	; () banked
 17784  005A8C  4BB2               	infsnz	moteApp_delayms@counter& (0+255),f,b
 17785  005A8E  2BB3               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 17786  005A90                     l346:
 17787                           
 17788                           ; BSR set to: 0
 17789  005A90  0100               	movlb	0	; () banked
 17790  005A92  51AF               	movf	moteApp_delayms@length& (0+255),w,b
 17791  005A94  0100               	movlb	0	; () banked
 17792  005A96  5DB2               	subwf	moteApp_delayms@counter& (0+255),w,b
 17793  005A98  0100               	movlb	0	; () banked
 17794  005A9A  51B0               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 17795  005A9C  0100               	movlb	0	; () banked
 17796  005A9E  59B3               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 17797  005AA0  A0D8               	btfss	status,0,c
 17798  005AA2  D7EA               	goto	l11126
 17799                           
 17800                           ; BSR set to: 0
 17801                           
 17802                           ; BSR set to: 0
 17803  005AA4  0012               	return		;funcret
 17804  005AA6                     __end_of_moteApp_delayms:
 17805                           	opt stack 0
 17806                           tblptru	equ	0xFF8
 17807                           tblptrh	equ	0xFF7
 17808                           tblptrl	equ	0xFF6
 17809                           tablat	equ	0xFF5
 17810                           prodh	equ	0xFF4
 17811                           prodl	equ	0xFF3
 17812                           intcon	equ	0xFF2
 17813                           intcon3	equ	0xFF0
 17814                           postinc0	equ	0xFEE
 17815                           wreg	equ	0xFE8
 17816                           indf1	equ	0xFE7
 17817                           postdec1	equ	0xFE5
 17818                           fsr1h	equ	0xFE2
 17819                           fsr1l	equ	0xFE1
 17820                           indf2	equ	0xFDF
 17821                           fsr2h	equ	0xFDA
 17822                           fsr2l	equ	0xFD9
 17823                           status	equ	0xFD8
 17824                           
 17825 ;; *************** function _DATAEE_WriteByte *****************
 17826 ;; Defined at:
 17827 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 17828 ;; Parameters:    Size  Location     Type
 17829 ;;  bAdd            1    wreg     unsigned char 
 17830 ;;  bData           1    0[BANK0 ] unsigned char 
 17831 ;; Auto vars:     Size  Location     Type
 17832 ;;  bAdd            1    1[BANK0 ] unsigned char 
 17833 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 17834 ;; Return value:  Size  Location     Type
 17835 ;;		None               void
 17836 ;; Registers used:
 17837 ;;		wreg, status,2
 17838 ;; Tracked objects:
 17839 ;;		On entry : 0/0
 17840 ;;		On exit  : 0/0
 17841 ;;		Unchanged: 0/0
 17842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17843 ;;      Params:         0       1       0       0       0       0       0       0       0
 17844 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17845 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17846 ;;      Totals:         0       3       0       0       0       0       0       0       0
 17847 ;;Total ram usage:        3 bytes
 17848 ;; Hardware stack levels used:    1
 17849 ;; Hardware stack levels required when called:   11
 17850 ;; This function calls:
 17851 ;;		Nothing
 17852 ;; This function is called by:
 17853 ;;		_main
 17854 ;;		_moteJoiningProcess
 17855 ;; This function uses a non-reentrant model
 17856 ;;
 17857                           
 17858                           	psect	text56
 17859  00593C                     __ptext56:
 17860                           	opt stack 0
 17861  00593C                     _DATAEE_WriteByte:
 17862                           	opt stack 17
 17863                           
 17864                           ; BSR set to: 0
 17865                           ;incstack = 0
 17866                           ;DATAEE_WriteByte@bAdd stored from wreg
 17867  00593C  0100               	movlb	0	; () banked
 17868  00593E  6FB0               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 17869                           
 17870                           ; BSR set to: 0
 17871                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 17872  005940  0E00               	movlw	0
 17873  005942  BEF2               	btfsc	intcon,7,c	;volatile
 17874  005944  0E01               	movlw	1
 17875  005946  0100               	movlb	0	; () banked
 17876  005948  6FB1               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 17877                           
 17878                           ; BSR set to: 0
 17879                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 17880  00594A  C0B0  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 17881                           
 17882                           ; BSR set to: 0
 17883                           ;memory.c: 171: EEDATA = bData;
 17884  00594E  C0AF  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 17885                           
 17886                           ; BSR set to: 0
 17887                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 17888  005952  9EA6               	bcf	4006,7,c	;volatile
 17889                           
 17890                           ; BSR set to: 0
 17891                           ;memory.c: 173: EECON1bits.CFGS = 0;
 17892  005954  9CA6               	bcf	4006,6,c	;volatile
 17893                           
 17894                           ; BSR set to: 0
 17895                           ;memory.c: 174: EECON1bits.WREN = 1;
 17896  005956  84A6               	bsf	4006,2,c	;volatile
 17897                           
 17898                           ; BSR set to: 0
 17899                           ;memory.c: 175: INTCONbits.GIE = 0;
 17900  005958  9EF2               	bcf	intcon,7,c	;volatile
 17901                           
 17902                           ; BSR set to: 0
 17903                           ;memory.c: 176: EECON2 = 0x55;
 17904  00595A  0E55               	movlw	85
 17905  00595C  6EA7               	movwf	4007,c	;volatile
 17906                           
 17907                           ; BSR set to: 0
 17908                           ;memory.c: 177: EECON2 = 0xAA;
 17909  00595E  0EAA               	movlw	170
 17910  005960  6EA7               	movwf	4007,c	;volatile
 17911                           
 17912                           ; BSR set to: 0
 17913                           ;memory.c: 178: EECON1bits.WR = 1;
 17914  005962  82A6               	bsf	4006,1,c	;volatile
 17915                           
 17916                           ;memory.c: 180: while (EECON1bits.WR)
 17917  005964  D000               	goto	l1438
 17918  005966                     l1438:
 17919                           
 17920                           ; BSR set to: 0
 17921  005966  B2A6               	btfsc	4006,1,c	;volatile
 17922  005968  D7FE               	goto	l1438
 17923                           
 17924                           ; BSR set to: 0
 17925                           ;memory.c: 182: }
 17926                           ;memory.c: 184: EECON1bits.WREN = 0;
 17927  00596A  94A6               	bcf	4006,2,c	;volatile
 17928                           
 17929                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 17930  00596C  0100               	movlb	0	; () banked
 17931  00596E  B1B1               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 17932  005970  D002               	bra	u10325
 17933  005972  9EF2               	bcf	intcon,7,c	;volatile
 17934  005974  D001               	bra	u10326
 17935  005976                     u10325:
 17936  005976  8EF2               	bsf	intcon,7,c	;volatile
 17937  005978                     u10326:
 17938  005978  0012               	return		;funcret
 17939  00597A                     __end_of_DATAEE_WriteByte:
 17940                           	opt stack 0
 17941                           tblptru	equ	0xFF8
 17942                           tblptrh	equ	0xFF7
 17943                           tblptrl	equ	0xFF6
 17944                           tablat	equ	0xFF5
 17945                           prodh	equ	0xFF4
 17946                           prodl	equ	0xFF3
 17947                           intcon	equ	0xFF2
 17948                           intcon3	equ	0xFF0
 17949                           postinc0	equ	0xFEE
 17950                           wreg	equ	0xFE8
 17951                           indf1	equ	0xFE7
 17952                           postdec1	equ	0xFE5
 17953                           fsr1h	equ	0xFE2
 17954                           fsr1l	equ	0xFE1
 17955                           indf2	equ	0xFDF
 17956                           fsr2h	equ	0xFDA
 17957                           fsr2l	equ	0xFD9
 17958                           status	equ	0xFD8
 17959                           
 17960 ;; *************** function _USBapp_exitCDCState *****************
 17961 ;; Defined at:
 17962 ;;		line 139 in file "../Includes/Board/USBapp.c"
 17963 ;; Parameters:    Size  Location     Type
 17964 ;;  usbState        1    wreg     enum E7589
 17965 ;; Auto vars:     Size  Location     Type
 17966 ;;  usbState        1    0[BANK0 ] enum E7589
 17967 ;; Return value:  Size  Location     Type
 17968 ;;		None               void
 17969 ;; Registers used:
 17970 ;;		wreg
 17971 ;; Tracked objects:
 17972 ;;		On entry : 0/0
 17973 ;;		On exit  : 0/0
 17974 ;;		Unchanged: 0/0
 17975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17976 ;;      Params:         0       0       0       0       0       0       0       0       0
 17977 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17978 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17979 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17980 ;;Total ram usage:        1 bytes
 17981 ;; Hardware stack levels used:    1
 17982 ;; Hardware stack levels required when called:   11
 17983 ;; This function calls:
 17984 ;;		Nothing
 17985 ;; This function is called by:
 17986 ;;		_moteHandler
 17987 ;; This function uses a non-reentrant model
 17988 ;;
 17989                           
 17990                           	psect	text57
 17991  006004                     __ptext57:
 17992                           	opt stack 0
 17993  006004                     _USBapp_exitCDCState:
 17994                           	opt stack 18
 17995                           
 17996                           ;incstack = 0
 17997                           ;USBapp_exitCDCState@usbState stored from wreg
 17998  006004  0100               	movlb	0	; () banked
 17999  006006  6FAF               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 18000                           
 18001                           ; BSR set to: 0
 18002                           ;USBapp.c: 141: exitUSB = usbState;
 18003  006008  C0AF  F0F9         	movff	USBapp_exitCDCState@usbState,_exitUSB
 18004                           
 18005                           ; BSR set to: 0
 18006  00600C  0012               	return		;funcret
 18007  00600E                     __end_of_USBapp_exitCDCState:
 18008                           	opt stack 0
 18009                           tblptru	equ	0xFF8
 18010                           tblptrh	equ	0xFF7
 18011                           tblptrl	equ	0xFF6
 18012                           tablat	equ	0xFF5
 18013                           prodh	equ	0xFF4
 18014                           prodl	equ	0xFF3
 18015                           intcon	equ	0xFF2
 18016                           intcon3	equ	0xFF0
 18017                           postinc0	equ	0xFEE
 18018                           wreg	equ	0xFE8
 18019                           indf1	equ	0xFE7
 18020                           postdec1	equ	0xFE5
 18021                           fsr1h	equ	0xFE2
 18022                           fsr1l	equ	0xFE1
 18023                           indf2	equ	0xFDF
 18024                           fsr2h	equ	0xFDA
 18025                           fsr2l	equ	0xFD9
 18026                           status	equ	0xFD8
 18027                           
 18028 ;; *************** function _USBapp_exitCDC *****************
 18029 ;; Defined at:
 18030 ;;		line 134 in file "../Includes/Board/USBapp.c"
 18031 ;; Parameters:    Size  Location     Type
 18032 ;;		None
 18033 ;; Auto vars:     Size  Location     Type
 18034 ;;		None
 18035 ;; Return value:  Size  Location     Type
 18036 ;;                  1    wreg      enum E7652
 18037 ;; Registers used:
 18038 ;;		wreg, status,2
 18039 ;; Tracked objects:
 18040 ;;		On entry : 0/0
 18041 ;;		On exit  : 0/0
 18042 ;;		Unchanged: 0/0
 18043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18044 ;;      Params:         0       0       0       0       0       0       0       0       0
 18045 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18046 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18047 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18048 ;;Total ram usage:        0 bytes
 18049 ;; Hardware stack levels used:    1
 18050 ;; Hardware stack levels required when called:   11
 18051 ;; This function calls:
 18052 ;;		Nothing
 18053 ;; This function is called by:
 18054 ;;		_moteHandler
 18055 ;; This function uses a non-reentrant model
 18056 ;;
 18057                           
 18058                           	psect	text58
 18059  006032                     __ptext58:
 18060                           	opt stack 0
 18061  006032                     _USBapp_exitCDC:
 18062                           	opt stack 18
 18063                           
 18064                           ;USBapp.c: 136: return exitUSB;
 18065                           
 18066                           ; BSR set to: 0
 18067                           ;incstack = 0
 18068  006032  0100               	movlb	0	; () banked
 18069  006034  51F9               	movf	_exitUSB& (0+255),w,b
 18070  006036  0012               	return	
 18071                           
 18072                           ; BSR set to: 0
 18073                           
 18074                           ; BSR set to: 0
 18075  006038  0012               	return		;funcret
 18076  00603A                     __end_of_USBapp_exitCDC:
 18077                           	opt stack 0
 18078                           tblptru	equ	0xFF8
 18079                           tblptrh	equ	0xFF7
 18080                           tblptrl	equ	0xFF6
 18081                           tablat	equ	0xFF5
 18082                           prodh	equ	0xFF4
 18083                           prodl	equ	0xFF3
 18084                           intcon	equ	0xFF2
 18085                           intcon3	equ	0xFF0
 18086                           postinc0	equ	0xFEE
 18087                           wreg	equ	0xFE8
 18088                           indf1	equ	0xFE7
 18089                           postdec1	equ	0xFE5
 18090                           fsr1h	equ	0xFE2
 18091                           fsr1l	equ	0xFE1
 18092                           indf2	equ	0xFDF
 18093                           fsr2h	equ	0xFDA
 18094                           fsr2l	equ	0xFD9
 18095                           status	equ	0xFD8
 18096                           
 18097 ;; *************** function _TMRapp_Handler *****************
 18098 ;; Defined at:
 18099 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 18100 ;; Parameters:    Size  Location     Type
 18101 ;;		None
 18102 ;; Auto vars:     Size  Location     Type
 18103 ;;		None
 18104 ;; Return value:  Size  Location     Type
 18105 ;;		None               void
 18106 ;; Registers used:
 18107 ;;		wreg, status,2, status,0, cstack
 18108 ;; Tracked objects:
 18109 ;;		On entry : 0/0
 18110 ;;		On exit  : 0/0
 18111 ;;		Unchanged: 0/0
 18112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18113 ;;      Params:         0       0       0       0       0       0       0       0       0
 18114 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18115 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18116 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18117 ;;Total ram usage:        0 bytes
 18118 ;; Hardware stack levels used:    1
 18119 ;; Hardware stack levels required when called:   12
 18120 ;; This function calls:
 18121 ;;		___almod
 18122 ;;		___lwmod
 18123 ;; This function is called by:
 18124 ;;		_moteHandler
 18125 ;; This function uses a non-reentrant model
 18126 ;;
 18127                           
 18128                           	psect	text59
 18129  0029F8                     __ptext59:
 18130                           	opt stack 0
 18131  0029F8                     _TMRapp_Handler:
 18132                           	opt stack 17
 18133                           
 18134                           ;TMRapp.c: 60: timerMsTickCount++;
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;incstack = 0
 18138  0029F8  0100               	movlb	0	; () banked
 18139  0029FA  4B82               	infsnz	_timerMsTickCount& (0+255),f,b
 18140  0029FC  2B83               	incf	(_timerMsTickCount+1)& (0+255),f,b
 18141                           
 18142                           ; BSR set to: 0
 18143                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 18144  0029FE  C082  F0AF         	movff	_timerMsTickCount,___lwmod@dividend
 18145  002A02  C083  F0B0         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18146  002A06  0E00               	movlw	0
 18147  002A08  0100               	movlb	0	; () banked
 18148  002A0A  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
 18149  002A0C  0E0A               	movlw	10
 18150  002A0E  6FB1               	movwf	___lwmod@divisor& (0+255),b
 18151  002A10  EC88  F029         	call	___lwmod	;wreg free
 18152  002A14  0100               	movlb	0	; () banked
 18153  002A16  51AF               	movf	?___lwmod& (0+255),w,b
 18154  002A18  0100               	movlb	0	; () banked
 18155  002A1A  11B0               	iorwf	(?___lwmod+1)& (0+255),w,b
 18156  002A1C  A4D8               	btfss	status,2,c
 18157  002A1E  0012               	return	
 18158                           
 18159                           ; BSR set to: 0
 18160                           ;TMRapp.c: 63: {
 18161                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 18162  002A20  0100               	movlb	0	; () banked
 18163  002A22  838E               	bsf	_appTimer& (0+255),1,b
 18164                           
 18165                           ; BSR set to: 0
 18166                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 18167  002A24  C082  F0AF         	movff	_timerMsTickCount,___lwmod@dividend
 18168  002A28  C083  F0B0         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18169  002A2C  0E00               	movlw	0
 18170  002A2E  0100               	movlb	0	; () banked
 18171  002A30  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
 18172  002A32  0E64               	movlw	100
 18173  002A34  6FB1               	movwf	___lwmod@divisor& (0+255),b
 18174  002A36  EC88  F029         	call	___lwmod	;wreg free
 18175  002A3A  0100               	movlb	0	; () banked
 18176  002A3C  51AF               	movf	?___lwmod& (0+255),w,b
 18177  002A3E  0100               	movlb	0	; () banked
 18178  002A40  11B0               	iorwf	(?___lwmod+1)& (0+255),w,b
 18179  002A42  A4D8               	btfss	status,2,c
 18180  002A44  0012               	return	
 18181                           
 18182                           ; BSR set to: 0
 18183                           ;TMRapp.c: 66: {
 18184                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 18185  002A46  0100               	movlb	0	; () banked
 18186  002A48  858E               	bsf	_appTimer& (0+255),2,b
 18187                           
 18188                           ; BSR set to: 0
 18189                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 18190  002A4A  C082  F0AF         	movff	_timerMsTickCount,___lwmod@dividend
 18191  002A4E  C083  F0B0         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18192  002A52  0E03               	movlw	3
 18193  002A54  0100               	movlb	0	; () banked
 18194  002A56  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
 18195  002A58  0EE8               	movlw	232
 18196  002A5A  6FB1               	movwf	___lwmod@divisor& (0+255),b
 18197  002A5C  EC88  F029         	call	___lwmod	;wreg free
 18198  002A60  0100               	movlb	0	; () banked
 18199  002A62  51AF               	movf	?___lwmod& (0+255),w,b
 18200  002A64  0100               	movlb	0	; () banked
 18201  002A66  11B0               	iorwf	(?___lwmod+1)& (0+255),w,b
 18202  002A68  A4D8               	btfss	status,2,c
 18203  002A6A  0012               	return	
 18204                           
 18205                           ; BSR set to: 0
 18206                           ;TMRapp.c: 69: {
 18207                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 18208  002A6C  0100               	movlb	0	; () banked
 18209  002A6E  878E               	bsf	_appTimer& (0+255),3,b
 18210                           
 18211                           ; BSR set to: 0
 18212                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 18213  002A70  C082  F0AF         	movff	_timerMsTickCount,___almod@dividend
 18214  002A74  C083  F0B0         	movff	_timerMsTickCount+1,___almod@dividend+1
 18215  002A78  0100               	movlb	0	; () banked
 18216  002A7A  6BB1               	clrf	(___almod@dividend+2)& (0+255),b
 18217  002A7C  6BB2               	clrf	(___almod@dividend+3)& (0+255),b
 18218  002A7E  0E60               	movlw	96
 18219  002A80  0100               	movlb	0	; () banked
 18220  002A82  6FB3               	movwf	___almod@divisor& (0+255),b
 18221  002A84  0EEA               	movlw	234
 18222  002A86  6FB4               	movwf	(___almod@divisor+1)& (0+255),b
 18223  002A88  0E00               	movlw	0
 18224  002A8A  6FB5               	movwf	(___almod@divisor+2)& (0+255),b
 18225  002A8C  0E00               	movlw	0
 18226  002A8E  6FB6               	movwf	(___almod@divisor+3)& (0+255),b
 18227  002A90  EC35  F01A         	call	___almod	;wreg free
 18228  002A94  0100               	movlb	0	; () banked
 18229  002A96  51AF               	movf	?___almod& (0+255),w,b
 18230  002A98  0100               	movlb	0	; () banked
 18231  002A9A  11B0               	iorwf	(?___almod+1)& (0+255),w,b
 18232  002A9C  0100               	movlb	0	; () banked
 18233  002A9E  11B1               	iorwf	(?___almod+2)& (0+255),w,b
 18234  002AA0  0100               	movlb	0	; () banked
 18235  002AA2  11B2               	iorwf	(?___almod+3)& (0+255),w,b
 18236  002AA4  A4D8               	btfss	status,2,c
 18237  002AA6  0012               	return	
 18238                           
 18239                           ; BSR set to: 0
 18240                           ;TMRapp.c: 72: {
 18241                           ;TMRapp.c: 73: timerMinTickCount++;
 18242  002AA8  0100               	movlb	0	; () banked
 18243  002AAA  4B80               	infsnz	_timerMinTickCount& (0+255),f,b
 18244  002AAC  2B81               	incf	(_timerMinTickCount+1)& (0+255),f,b
 18245                           
 18246                           ; BSR set to: 0
 18247                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 18248  002AAE  0100               	movlb	0	; () banked
 18249  002AB0  898E               	bsf	_appTimer& (0+255),4,b
 18250                           
 18251                           ; BSR set to: 0
 18252                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 18253  002AB2  C080  F0AF         	movff	_timerMinTickCount,___lwmod@dividend
 18254  002AB6  C081  F0B0         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18255  002ABA  0E00               	movlw	0
 18256  002ABC  0100               	movlb	0	; () banked
 18257  002ABE  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
 18258  002AC0  0E3C               	movlw	60
 18259  002AC2  6FB1               	movwf	___lwmod@divisor& (0+255),b
 18260  002AC4  EC88  F029         	call	___lwmod	;wreg free
 18261  002AC8  0100               	movlb	0	; () banked
 18262  002ACA  51AF               	movf	?___lwmod& (0+255),w,b
 18263  002ACC  0100               	movlb	0	; () banked
 18264  002ACE  11B0               	iorwf	(?___lwmod+1)& (0+255),w,b
 18265  002AD0  A4D8               	btfss	status,2,c
 18266  002AD2  0012               	return	
 18267                           
 18268                           ; BSR set to: 0
 18269                           ;TMRapp.c: 76: {
 18270                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 18271  002AD4  0100               	movlb	0	; () banked
 18272  002AD6  8B8E               	bsf	_appTimer& (0+255),5,b
 18273                           
 18274                           ; BSR set to: 0
 18275                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 18276  002AD8  C080  F0AF         	movff	_timerMinTickCount,___lwmod@dividend
 18277  002ADC  C081  F0B0         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18278  002AE0  0E02               	movlw	2
 18279  002AE2  0100               	movlb	0	; () banked
 18280  002AE4  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
 18281  002AE6  0ED0               	movlw	208
 18282  002AE8  6FB1               	movwf	___lwmod@divisor& (0+255),b
 18283  002AEA  EC88  F029         	call	___lwmod	;wreg free
 18284  002AEE  0100               	movlb	0	; () banked
 18285  002AF0  51AF               	movf	?___lwmod& (0+255),w,b
 18286  002AF2  0100               	movlb	0	; () banked
 18287  002AF4  11B0               	iorwf	(?___lwmod+1)& (0+255),w,b
 18288  002AF6  A4D8               	btfss	status,2,c
 18289  002AF8  0012               	return	
 18290                           
 18291                           ; BSR set to: 0
 18292                           ;TMRapp.c: 79: {
 18293                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 18294  002AFA  0100               	movlb	0	; () banked
 18295  002AFC  8D8E               	bsf	_appTimer& (0+255),6,b
 18296                           
 18297                           ; BSR set to: 0
 18298                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 18299  002AFE  C080  F0AF         	movff	_timerMinTickCount,___lwmod@dividend
 18300  002B02  C081  F0B0         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18301  002B06  0E05               	movlw	5
 18302  002B08  0100               	movlb	0	; () banked
 18303  002B0A  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
 18304  002B0C  0EA0               	movlw	160
 18305  002B0E  6FB1               	movwf	___lwmod@divisor& (0+255),b
 18306  002B10  EC88  F029         	call	___lwmod	;wreg free
 18307  002B14  0100               	movlb	0	; () banked
 18308  002B16  51AF               	movf	?___lwmod& (0+255),w,b
 18309  002B18  0100               	movlb	0	; () banked
 18310  002B1A  11B0               	iorwf	(?___lwmod+1)& (0+255),w,b
 18311  002B1C  A4D8               	btfss	status,2,c
 18312  002B1E  0012               	return	
 18313                           
 18314                           ; BSR set to: 0
 18315                           ;TMRapp.c: 82: {
 18316                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 18317  002B20  0100               	movlb	0	; () banked
 18318  002B22  8F8E               	bsf	_appTimer& (0+255),7,b
 18319                           
 18320                           ; BSR set to: 0
 18321                           ;TMRapp.c: 85: timerMsTickCount = 0;
 18322  002B24  0E00               	movlw	0
 18323  002B26  0100               	movlb	0	; () banked
 18324  002B28  6F83               	movwf	(_timerMsTickCount+1)& (0+255),b
 18325  002B2A  0E00               	movlw	0
 18326  002B2C  6F82               	movwf	_timerMsTickCount& (0+255),b
 18327                           
 18328                           ;TMRapp.c: 86: timerMinTickCount = 0;
 18329  002B2E  0E00               	movlw	0
 18330  002B30  0100               	movlb	0	; () banked
 18331  002B32  6F81               	movwf	(_timerMinTickCount+1)& (0+255),b
 18332  002B34  0E00               	movlw	0
 18333  002B36  6F80               	movwf	_timerMinTickCount& (0+255),b
 18334                           
 18335                           ; BSR set to: 0
 18336                           
 18337                           ; BSR set to: 0
 18338                           
 18339                           ; BSR set to: 0
 18340                           
 18341                           ; BSR set to: 0
 18342                           
 18343                           ; BSR set to: 0
 18344                           
 18345                           ; BSR set to: 0
 18346  002B38  0012               	return	
 18347                           
 18348                           ; BSR set to: 0
 18349                           
 18350                           ; BSR set to: 0
 18351  002B3A  0012               	return		;funcret
 18352  002B3C                     __end_of_TMRapp_Handler:
 18353                           	opt stack 0
 18354                           tblptru	equ	0xFF8
 18355                           tblptrh	equ	0xFF7
 18356                           tblptrl	equ	0xFF6
 18357                           tablat	equ	0xFF5
 18358                           prodh	equ	0xFF4
 18359                           prodl	equ	0xFF3
 18360                           intcon	equ	0xFF2
 18361                           intcon3	equ	0xFF0
 18362                           postinc0	equ	0xFEE
 18363                           wreg	equ	0xFE8
 18364                           indf1	equ	0xFE7
 18365                           postdec1	equ	0xFE5
 18366                           fsr1h	equ	0xFE2
 18367                           fsr1l	equ	0xFE1
 18368                           indf2	equ	0xFDF
 18369                           fsr2h	equ	0xFDA
 18370                           fsr2l	equ	0xFD9
 18371                           status	equ	0xFD8
 18372                           
 18373 ;; *************** function ___lwmod *****************
 18374 ;; Defined at:
 18375 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
 18376 ;; Parameters:    Size  Location     Type
 18377 ;;  dividend        2    0[BANK0 ] unsigned int 
 18378 ;;  divisor         2    2[BANK0 ] unsigned int 
 18379 ;; Auto vars:     Size  Location     Type
 18380 ;;  counter         1    4[BANK0 ] unsigned char 
 18381 ;; Return value:  Size  Location     Type
 18382 ;;                  2    0[BANK0 ] unsigned int 
 18383 ;; Registers used:
 18384 ;;		wreg, status,2, status,0
 18385 ;; Tracked objects:
 18386 ;;		On entry : 0/0
 18387 ;;		On exit  : 0/0
 18388 ;;		Unchanged: 0/0
 18389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18390 ;;      Params:         0       4       0       0       0       0       0       0       0
 18391 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18392 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18393 ;;      Totals:         0       5       0       0       0       0       0       0       0
 18394 ;;Total ram usage:        5 bytes
 18395 ;; Hardware stack levels used:    1
 18396 ;; Hardware stack levels required when called:   11
 18397 ;; This function calls:
 18398 ;;		Nothing
 18399 ;; This function is called by:
 18400 ;;		_TMRapp_Handler
 18401 ;;		_moteApp_add16bToDataBuffer
 18402 ;;		_oled_putUint16
 18403 ;; This function uses a non-reentrant model
 18404 ;;
 18405                           
 18406                           	psect	text60
 18407  005310                     __ptext60:
 18408                           	opt stack 0
 18409  005310                     ___lwmod:
 18410                           	opt stack 17
 18411                           
 18412                           ; BSR set to: 0
 18413                           ;incstack = 0
 18414  005310  0100               	movlb	0	; () banked
 18415  005312  51B1               	movf	___lwmod@divisor& (0+255),w,b
 18416  005314  0100               	movlb	0	; () banked
 18417  005316  11B2               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18418  005318  B4D8               	btfsc	status,2,c
 18419  00531A  D02B               	goto	l2628
 18420                           
 18421                           ; BSR set to: 0
 18422  00531C  0E01               	movlw	1
 18423  00531E  0100               	movlb	0	; () banked
 18424  005320  6FB3               	movwf	___lwmod@counter& (0+255),b
 18425  005322  D007               	goto	l12314
 18426  005324                     l12312:
 18427                           
 18428                           ; BSR set to: 0
 18429  005324  0100               	movlb	0	; () banked
 18430  005326  90D8               	bcf	status,0,c
 18431  005328  37B1               	rlcf	___lwmod@divisor& (0+255),f,b
 18432  00532A  37B2               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18433  00532C  0100               	movlb	0	; () banked
 18434  00532E  2BB3               	incf	___lwmod@counter& (0+255),f,b
 18435  005330  D000               	goto	l12314
 18436  005332                     l12314:
 18437                           
 18438                           ; BSR set to: 0
 18439  005332  0100               	movlb	0	; () banked
 18440  005334  BFB2               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
 18441  005336  D002               	goto	l12316
 18442  005338  D7F5               	goto	l12312
 18443                           
 18444                           ; BSR set to: 0
 18445  00533A  D000               	goto	l12316
 18446  00533C                     l12316:
 18447                           
 18448                           ; BSR set to: 0
 18449  00533C  0100               	movlb	0	; () banked
 18450  00533E  51B1               	movf	___lwmod@divisor& (0+255),w,b
 18451  005340  0100               	movlb	0	; () banked
 18452  005342  5DAF               	subwf	___lwmod@dividend& (0+255),w,b
 18453  005344  0100               	movlb	0	; () banked
 18454  005346  51B2               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18455  005348  0100               	movlb	0	; () banked
 18456  00534A  59B0               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18457  00534C  A0D8               	btfss	status,0,c
 18458  00534E  D009               	goto	l12320
 18459                           
 18460                           ; BSR set to: 0
 18461  005350  0100               	movlb	0	; () banked
 18462  005352  51B1               	movf	___lwmod@divisor& (0+255),w,b
 18463  005354  0100               	movlb	0	; () banked
 18464  005356  5FAF               	subwf	___lwmod@dividend& (0+255),f,b
 18465  005358  0100               	movlb	0	; () banked
 18466  00535A  51B2               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18467  00535C  0100               	movlb	0	; () banked
 18468  00535E  5BB0               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18469  005360  D000               	goto	l12320
 18470  005362                     l12320:
 18471                           
 18472                           ; BSR set to: 0
 18473  005362  0100               	movlb	0	; () banked
 18474  005364  90D8               	bcf	status,0,c
 18475  005366  33B2               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18476  005368  33B1               	rrcf	___lwmod@divisor& (0+255),f,b
 18477                           
 18478                           ; BSR set to: 0
 18479  00536A  0100               	movlb	0	; () banked
 18480  00536C  2FB3               	decfsz	___lwmod@counter& (0+255),f,b
 18481  00536E  D7E6               	goto	l12316
 18482  005370  D000               	goto	l2628
 18483  005372                     l2628:
 18484                           
 18485                           ; BSR set to: 0
 18486  005372  C0AF  F0AF         	movff	___lwmod@dividend,?___lwmod
 18487  005376  C0B0  F0B0         	movff	___lwmod@dividend+1,?___lwmod+1
 18488                           
 18489                           ; BSR set to: 0
 18490  00537A  0012               	return		;funcret
 18491  00537C                     __end_of___lwmod:
 18492                           	opt stack 0
 18493                           tblptru	equ	0xFF8
 18494                           tblptrh	equ	0xFF7
 18495                           tblptrl	equ	0xFF6
 18496                           tablat	equ	0xFF5
 18497                           prodh	equ	0xFF4
 18498                           prodl	equ	0xFF3
 18499                           intcon	equ	0xFF2
 18500                           intcon3	equ	0xFF0
 18501                           postinc0	equ	0xFEE
 18502                           wreg	equ	0xFE8
 18503                           indf1	equ	0xFE7
 18504                           postdec1	equ	0xFE5
 18505                           fsr1h	equ	0xFE2
 18506                           fsr1l	equ	0xFE1
 18507                           indf2	equ	0xFDF
 18508                           fsr2h	equ	0xFDA
 18509                           fsr2l	equ	0xFD9
 18510                           status	equ	0xFD8
 18511                           
 18512 ;; *************** function ___almod *****************
 18513 ;; Defined at:
 18514 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\almod.c"
 18515 ;; Parameters:    Size  Location     Type
 18516 ;;  dividend        4    0[BANK0 ] long 
 18517 ;;  divisor         4    4[BANK0 ] long 
 18518 ;; Auto vars:     Size  Location     Type
 18519 ;;  sign            1    9[BANK0 ] unsigned char 
 18520 ;;  counter         1    8[BANK0 ] unsigned char 
 18521 ;; Return value:  Size  Location     Type
 18522 ;;                  4    0[BANK0 ] long 
 18523 ;; Registers used:
 18524 ;;		wreg, status,2, status,0
 18525 ;; Tracked objects:
 18526 ;;		On entry : 0/0
 18527 ;;		On exit  : 0/0
 18528 ;;		Unchanged: 0/0
 18529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18530 ;;      Params:         0       8       0       0       0       0       0       0       0
 18531 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18532 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18533 ;;      Totals:         0      10       0       0       0       0       0       0       0
 18534 ;;Total ram usage:       10 bytes
 18535 ;; Hardware stack levels used:    1
 18536 ;; Hardware stack levels required when called:   11
 18537 ;; This function calls:
 18538 ;;		Nothing
 18539 ;; This function is called by:
 18540 ;;		_TMRapp_Handler
 18541 ;; This function uses a non-reentrant model
 18542 ;;
 18543                           
 18544                           	psect	text61
 18545  00346A                     __ptext61:
 18546                           	opt stack 0
 18547  00346A                     ___almod:
 18548                           	opt stack 17
 18549                           
 18550                           ; BSR set to: 0
 18551                           ;incstack = 0
 18552  00346A  0E00               	movlw	0
 18553  00346C  0100               	movlb	0	; () banked
 18554  00346E  6FB8               	movwf	___almod@sign& (0+255),b
 18555                           
 18556                           ; BSR set to: 0
 18557  003470  0100               	movlb	0	; () banked
 18558  003472  AFB2               	btfss	(___almod@dividend+3)& (0+255),7,b
 18559  003474  D00D               	goto	l12280
 18560                           
 18561                           ; BSR set to: 0
 18562  003476  0100               	movlb	0	; () banked
 18563  003478  1FB2               	comf	(___almod@dividend+3)& (0+255),f,b
 18564  00347A  1FB1               	comf	(___almod@dividend+2)& (0+255),f,b
 18565  00347C  1FB0               	comf	(___almod@dividend+1)& (0+255),f,b
 18566  00347E  6DAF               	negf	___almod@dividend& (0+255),b
 18567  003480  0E00               	movlw	0
 18568  003482  23B0               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18569  003484  23B1               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18570  003486  23B2               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18571                           
 18572                           ; BSR set to: 0
 18573  003488  0E01               	movlw	1
 18574  00348A  0100               	movlb	0	; () banked
 18575  00348C  6FB8               	movwf	___almod@sign& (0+255),b
 18576  00348E  D000               	goto	l12280
 18577  003490                     l12280:
 18578                           
 18579                           ; BSR set to: 0
 18580  003490  0100               	movlb	0	; () banked
 18581  003492  AFB6               	btfss	(___almod@divisor+3)& (0+255),7,b
 18582  003494  D00A               	goto	l12284
 18583                           
 18584                           ; BSR set to: 0
 18585  003496  0100               	movlb	0	; () banked
 18586  003498  1FB6               	comf	(___almod@divisor+3)& (0+255),f,b
 18587  00349A  1FB5               	comf	(___almod@divisor+2)& (0+255),f,b
 18588  00349C  1FB4               	comf	(___almod@divisor+1)& (0+255),f,b
 18589  00349E  6DB3               	negf	___almod@divisor& (0+255),b
 18590  0034A0  0E00               	movlw	0
 18591  0034A2  23B4               	addwfc	(___almod@divisor+1)& (0+255),f,b
 18592  0034A4  23B5               	addwfc	(___almod@divisor+2)& (0+255),f,b
 18593  0034A6  23B6               	addwfc	(___almod@divisor+3)& (0+255),f,b
 18594  0034A8  D000               	goto	l12284
 18595  0034AA                     l12284:
 18596                           
 18597                           ; BSR set to: 0
 18598  0034AA  0100               	movlb	0	; () banked
 18599  0034AC  51B3               	movf	___almod@divisor& (0+255),w,b
 18600  0034AE  0100               	movlb	0	; () banked
 18601  0034B0  11B4               	iorwf	(___almod@divisor+1)& (0+255),w,b
 18602  0034B2  0100               	movlb	0	; () banked
 18603  0034B4  11B5               	iorwf	(___almod@divisor+2)& (0+255),w,b
 18604  0034B6  0100               	movlb	0	; () banked
 18605  0034B8  11B6               	iorwf	(___almod@divisor+3)& (0+255),w,b
 18606  0034BA  B4D8               	btfsc	status,2,c
 18607  0034BC  D03F               	goto	l12300
 18608                           
 18609                           ; BSR set to: 0
 18610  0034BE  0E01               	movlw	1
 18611  0034C0  0100               	movlb	0	; () banked
 18612  0034C2  6FB7               	movwf	___almod@counter& (0+255),b
 18613  0034C4  D009               	goto	l12290
 18614  0034C6                     l12288:
 18615                           
 18616                           ; BSR set to: 0
 18617  0034C6  0100               	movlb	0	; () banked
 18618  0034C8  90D8               	bcf	status,0,c
 18619  0034CA  37B3               	rlcf	___almod@divisor& (0+255),f,b
 18620  0034CC  37B4               	rlcf	(___almod@divisor+1)& (0+255),f,b
 18621  0034CE  37B5               	rlcf	(___almod@divisor+2)& (0+255),f,b
 18622  0034D0  37B6               	rlcf	(___almod@divisor+3)& (0+255),f,b
 18623  0034D2  0100               	movlb	0	; () banked
 18624  0034D4  2BB7               	incf	___almod@counter& (0+255),f,b
 18625  0034D6  D000               	goto	l12290
 18626  0034D8                     l12290:
 18627                           
 18628                           ; BSR set to: 0
 18629  0034D8  0100               	movlb	0	; () banked
 18630  0034DA  BFB6               	btfsc	(___almod@divisor+3)& (0+255),7,b
 18631  0034DC  D002               	goto	l12292
 18632  0034DE  D7F3               	goto	l12288
 18633                           
 18634                           ; BSR set to: 0
 18635  0034E0  D000               	goto	l12292
 18636  0034E2                     l12292:
 18637                           
 18638                           ; BSR set to: 0
 18639  0034E2  0100               	movlb	0	; () banked
 18640  0034E4  51B3               	movf	___almod@divisor& (0+255),w,b
 18641  0034E6  0100               	movlb	0	; () banked
 18642  0034E8  5DAF               	subwf	___almod@dividend& (0+255),w,b
 18643  0034EA  0100               	movlb	0	; () banked
 18644  0034EC  51B4               	movf	(___almod@divisor+1)& (0+255),w,b
 18645  0034EE  0100               	movlb	0	; () banked
 18646  0034F0  59B0               	subwfb	(___almod@dividend+1)& (0+255),w,b
 18647  0034F2  0100               	movlb	0	; () banked
 18648  0034F4  51B5               	movf	(___almod@divisor+2)& (0+255),w,b
 18649  0034F6  0100               	movlb	0	; () banked
 18650  0034F8  59B1               	subwfb	(___almod@dividend+2)& (0+255),w,b
 18651  0034FA  0100               	movlb	0	; () banked
 18652  0034FC  51B6               	movf	(___almod@divisor+3)& (0+255),w,b
 18653  0034FE  0100               	movlb	0	; () banked
 18654  003500  59B2               	subwfb	(___almod@dividend+3)& (0+255),w,b
 18655  003502  A0D8               	btfss	status,0,c
 18656  003504  D011               	goto	l12296
 18657                           
 18658                           ; BSR set to: 0
 18659  003506  0100               	movlb	0	; () banked
 18660  003508  51B3               	movf	___almod@divisor& (0+255),w,b
 18661  00350A  0100               	movlb	0	; () banked
 18662  00350C  5FAF               	subwf	___almod@dividend& (0+255),f,b
 18663  00350E  0100               	movlb	0	; () banked
 18664  003510  51B4               	movf	(___almod@divisor+1)& (0+255),w,b
 18665  003512  0100               	movlb	0	; () banked
 18666  003514  5BB0               	subwfb	(___almod@dividend+1)& (0+255),f,b
 18667  003516  0100               	movlb	0	; () banked
 18668  003518  51B5               	movf	(___almod@divisor+2)& (0+255),w,b
 18669  00351A  0100               	movlb	0	; () banked
 18670  00351C  5BB1               	subwfb	(___almod@dividend+2)& (0+255),f,b
 18671  00351E  0100               	movlb	0	; () banked
 18672  003520  51B6               	movf	(___almod@divisor+3)& (0+255),w,b
 18673  003522  0100               	movlb	0	; () banked
 18674  003524  5BB2               	subwfb	(___almod@dividend+3)& (0+255),f,b
 18675  003526  D000               	goto	l12296
 18676  003528                     l12296:
 18677                           
 18678                           ; BSR set to: 0
 18679  003528  0100               	movlb	0	; () banked
 18680  00352A  90D8               	bcf	status,0,c
 18681  00352C  33B6               	rrcf	(___almod@divisor+3)& (0+255),f,b
 18682  00352E  33B5               	rrcf	(___almod@divisor+2)& (0+255),f,b
 18683  003530  33B4               	rrcf	(___almod@divisor+1)& (0+255),f,b
 18684  003532  33B3               	rrcf	___almod@divisor& (0+255),f,b
 18685                           
 18686                           ; BSR set to: 0
 18687  003534  0100               	movlb	0	; () banked
 18688  003536  2FB7               	decfsz	___almod@counter& (0+255),f,b
 18689  003538  D7D4               	goto	l12292
 18690                           
 18691                           ; BSR set to: 0
 18692  00353A  D000               	goto	l12300
 18693  00353C                     l12300:
 18694                           
 18695                           ; BSR set to: 0
 18696  00353C  0100               	movlb	0	; () banked
 18697  00353E  51B8               	movf	___almod@sign& (0+255),w,b
 18698  003540  0100               	movlb	0	; () banked
 18699  003542  B4D8               	btfsc	status,2,c
 18700  003544  D00A               	goto	l12304
 18701                           
 18702                           ; BSR set to: 0
 18703  003546  0100               	movlb	0	; () banked
 18704  003548  1FB2               	comf	(___almod@dividend+3)& (0+255),f,b
 18705  00354A  1FB1               	comf	(___almod@dividend+2)& (0+255),f,b
 18706  00354C  1FB0               	comf	(___almod@dividend+1)& (0+255),f,b
 18707  00354E  6DAF               	negf	___almod@dividend& (0+255),b
 18708  003550  0E00               	movlw	0
 18709  003552  23B0               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18710  003554  23B1               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18711  003556  23B2               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18712  003558  D000               	goto	l12304
 18713  00355A                     l12304:
 18714                           
 18715                           ; BSR set to: 0
 18716  00355A  C0AF  F0AF         	movff	___almod@dividend,?___almod
 18717  00355E  C0B0  F0B0         	movff	___almod@dividend+1,?___almod+1
 18718  003562  C0B1  F0B1         	movff	___almod@dividend+2,?___almod+2
 18719  003566  C0B2  F0B2         	movff	___almod@dividend+3,?___almod+3
 18720  00356A  0012               	return	
 18721                           
 18722                           ; BSR set to: 0
 18723                           
 18724                           ; BSR set to: 0
 18725  00356C  0012               	return		;funcret
 18726  00356E                     __end_of___almod:
 18727                           	opt stack 0
 18728                           tblptru	equ	0xFF8
 18729                           tblptrh	equ	0xFF7
 18730                           tblptrl	equ	0xFF6
 18731                           tablat	equ	0xFF5
 18732                           prodh	equ	0xFF4
 18733                           prodl	equ	0xFF3
 18734                           intcon	equ	0xFF2
 18735                           intcon3	equ	0xFF0
 18736                           postinc0	equ	0xFEE
 18737                           wreg	equ	0xFE8
 18738                           indf1	equ	0xFE7
 18739                           postdec1	equ	0xFE5
 18740                           fsr1h	equ	0xFE2
 18741                           fsr1l	equ	0xFE1
 18742                           indf2	equ	0xFDF
 18743                           fsr2h	equ	0xFDA
 18744                           fsr2l	equ	0xFD9
 18745                           status	equ	0xFD8
 18746                           
 18747 ;; *************** function _TMRapp_ClearBitFlags *****************
 18748 ;; Defined at:
 18749 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 18750 ;; Parameters:    Size  Location     Type
 18751 ;;		None
 18752 ;; Auto vars:     Size  Location     Type
 18753 ;;		None
 18754 ;; Return value:  Size  Location     Type
 18755 ;;		None               void
 18756 ;; Registers used:
 18757 ;;		wreg, status,2
 18758 ;; Tracked objects:
 18759 ;;		On entry : 0/0
 18760 ;;		On exit  : 0/0
 18761 ;;		Unchanged: 0/0
 18762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18763 ;;      Params:         0       0       0       0       0       0       0       0       0
 18764 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18765 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18766 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18767 ;;Total ram usage:        0 bytes
 18768 ;; Hardware stack levels used:    1
 18769 ;; Hardware stack levels required when called:   11
 18770 ;; This function calls:
 18771 ;;		Nothing
 18772 ;; This function is called by:
 18773 ;;		_moteHandler
 18774 ;; This function uses a non-reentrant model
 18775 ;;
 18776                           
 18777                           	psect	text62
 18778  00603A                     __ptext62:
 18779                           	opt stack 0
 18780  00603A                     _TMRapp_ClearBitFlags:
 18781                           	opt stack 18
 18782                           
 18783                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 18784                           
 18785                           ; BSR set to: 0
 18786                           ;incstack = 0
 18787  00603A  0E00               	movlw	0
 18788  00603C  0100               	movlb	0	; () banked
 18789  00603E  6F8E               	movwf	_appTimer& (0+255),b
 18790                           
 18791                           ; BSR set to: 0
 18792  006040  0012               	return		;funcret
 18793  006042                     __end_of_TMRapp_ClearBitFlags:
 18794                           	opt stack 0
 18795                           tblptru	equ	0xFF8
 18796                           tblptrh	equ	0xFF7
 18797                           tblptrl	equ	0xFF6
 18798                           tablat	equ	0xFF5
 18799                           prodh	equ	0xFF4
 18800                           prodl	equ	0xFF3
 18801                           intcon	equ	0xFF2
 18802                           intcon3	equ	0xFF0
 18803                           postinc0	equ	0xFEE
 18804                           wreg	equ	0xFE8
 18805                           indf1	equ	0xFE7
 18806                           postdec1	equ	0xFE5
 18807                           fsr1h	equ	0xFE2
 18808                           fsr1l	equ	0xFE1
 18809                           indf2	equ	0xFDF
 18810                           fsr2h	equ	0xFDA
 18811                           fsr2l	equ	0xFD9
 18812                           status	equ	0xFD8
 18813                           
 18814 ;; *************** function _MOTEapp_TimerBasedTask *****************
 18815 ;; Defined at:
 18816 ;;		line 1025 in file "../Includes/Board/MOTEapp.c"
 18817 ;; Parameters:    Size  Location     Type
 18818 ;;  timerTask       1    wreg     struct .
 18819 ;; Auto vars:     Size  Location     Type
 18820 ;;  timerTask       1    0[BANK0 ] struct .
 18821 ;; Return value:  Size  Location     Type
 18822 ;;		None               void
 18823 ;; Registers used:
 18824 ;;		wreg, status,2, status,0
 18825 ;; Tracked objects:
 18826 ;;		On entry : 0/0
 18827 ;;		On exit  : 0/0
 18828 ;;		Unchanged: 0/0
 18829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18830 ;;      Params:         0       0       0       0       0       0       0       0       0
 18831 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18832 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18833 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18834 ;;Total ram usage:        1 bytes
 18835 ;; Hardware stack levels used:    1
 18836 ;; Hardware stack levels required when called:   11
 18837 ;; This function calls:
 18838 ;;		Nothing
 18839 ;; This function is called by:
 18840 ;;		_moteHandler
 18841 ;; This function uses a non-reentrant model
 18842 ;;
 18843                           
 18844                           	psect	text63
 18845  005D50                     __ptext63:
 18846                           	opt stack 0
 18847  005D50                     _MOTEapp_TimerBasedTask:
 18848                           	opt stack 18
 18849                           
 18850                           ; BSR set to: 0
 18851                           ;incstack = 0
 18852                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 18853  005D50  0100               	movlb	0	; () banked
 18854  005D52  6FAF               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 18855                           
 18856                           ; BSR set to: 0
 18857                           ;MOTEapp.c: 1030: if (timerTask.mSecTenTick)
 18858  005D54  0100               	movlb	0	; () banked
 18859  005D56  A3AF               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 18860  005D58  D004               	goto	l12486
 18861                           
 18862                           ; BSR set to: 0
 18863                           ;MOTEapp.c: 1031: {
 18864                           ;MOTEapp.c: 1033: m10SecTicker++;
 18865  005D5A  0100               	movlb	0	; () banked
 18866  005D5C  4B78               	infsnz	_m10SecTicker& (0+255),f,b
 18867  005D5E  2B79               	incf	(_m10SecTicker+1)& (0+255),f,b
 18868                           
 18869                           ; BSR set to: 0
 18870                           
 18871                           ; BSR set to: 0
 18872  005D60  D000               	goto	l12486
 18873  005D62                     l12486:
 18874                           
 18875                           ; BSR set to: 0
 18876                           ;MOTEapp.c: 1039: }
 18877                           ;MOTEapp.c: 1040: if (timerTask.SecTick)
 18878  005D62  0100               	movlb	0	; () banked
 18879  005D64  A7AF               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 18880  005D66  D003               	goto	l12490
 18881                           
 18882                           ; BSR set to: 0
 18883                           ;MOTEapp.c: 1041: {
 18884                           ;MOTEapp.c: 1043: secTicker++;
 18885  005D68  0100               	movlb	0	; () banked
 18886  005D6A  2BA6               	incf	_secTicker& (0+255),f,b
 18887  005D6C  D000               	goto	l12490
 18888  005D6E                     l12490:
 18889                           
 18890                           ; BSR set to: 0
 18891                           ;MOTEapp.c: 1044: }
 18892                           ;MOTEapp.c: 1045: if (timerTask.MinTick)
 18893  005D6E  0100               	movlb	0	; () banked
 18894  005D70  A9AF               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 18895  005D72  0012               	return	
 18896                           
 18897                           ; BSR set to: 0
 18898                           ;MOTEapp.c: 1046: {
 18899                           ;MOTEapp.c: 1048: minTicker++;
 18900  005D74  0100               	movlb	0	; () banked
 18901  005D76  2B9D               	incf	_minTicker& (0+255),f,b
 18902                           
 18903                           ; BSR set to: 0
 18904                           
 18905                           ; BSR set to: 0
 18906                           
 18907                           ;MOTEapp.c: 1055: {
 18908                           
 18909                           ; BSR set to: 0
 18910                           
 18911                           ; BSR set to: 0
 18912                           
 18913                           ;MOTEapp.c: 1051: {
 18914                           
 18915                           ; BSR set to: 0
 18916                           
 18917                           ; BSR set to: 0
 18918  005D78  0012               	return	
 18919                           
 18920                           ; BSR set to: 0
 18921                           
 18922                           ; BSR set to: 0
 18923                           
 18924                           ;MOTEapp.c: 1059: {
 18925  005D7A  0012               	return		;funcret
 18926  005D7C                     __end_of_MOTEapp_TimerBasedTask:
 18927                           	opt stack 0
 18928                           tblptru	equ	0xFF8
 18929                           tblptrh	equ	0xFF7
 18930                           tblptrl	equ	0xFF6
 18931                           tablat	equ	0xFF5
 18932                           prodh	equ	0xFF4
 18933                           prodl	equ	0xFF3
 18934                           intcon	equ	0xFF2
 18935                           intcon3	equ	0xFF0
 18936                           postinc0	equ	0xFEE
 18937                           wreg	equ	0xFE8
 18938                           indf1	equ	0xFE7
 18939                           postdec1	equ	0xFE5
 18940                           fsr1h	equ	0xFE2
 18941                           fsr1l	equ	0xFE1
 18942                           indf2	equ	0xFDF
 18943                           fsr2h	equ	0xFDA
 18944                           fsr2l	equ	0xFD9
 18945                           status	equ	0xFD8
 18946                           
 18947 ;; *************** function _moteApp_clearCommand *****************
 18948 ;; Defined at:
 18949 ;;		line 1257 in file "../Includes/Board/MOTEapp.c"
 18950 ;; Parameters:    Size  Location     Type
 18951 ;;		None
 18952 ;; Auto vars:     Size  Location     Type
 18953 ;;		None
 18954 ;; Return value:  Size  Location     Type
 18955 ;;		None               void
 18956 ;; Registers used:
 18957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18958 ;; Tracked objects:
 18959 ;;		On entry : 0/0
 18960 ;;		On exit  : 0/0
 18961 ;;		Unchanged: 0/0
 18962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18963 ;;      Params:         0       0       0       0       0       0       0       0       0
 18964 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18965 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18966 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18967 ;;Total ram usage:        0 bytes
 18968 ;; Hardware stack levels used:    1
 18969 ;; Hardware stack levels required when called:   14
 18970 ;; This function calls:
 18971 ;;		_sendCommand
 18972 ;; This function is called by:
 18973 ;;		_main
 18974 ;; This function uses a non-reentrant model
 18975 ;;
 18976                           
 18977                           	psect	text64
 18978  005F9E                     __ptext64:
 18979                           	opt stack 0
 18980  005F9E                     _moteApp_clearCommand:
 18981                           	opt stack 16
 18982                           
 18983                           ;MOTEapp.c: 1259: sendCommand("\r\n");
 18984                           
 18985                           ; BSR set to: 0
 18986                           ;incstack = 0
 18987  005F9E  0E0F               	movlw	low (STR_177+23)
 18988  005FA0  0100               	movlb	0	; () banked
 18989  005FA2  6FB0               	movwf	sendCommand@string& (0+255),b
 18990  005FA4  0E7A               	movlw	high (STR_177+23)
 18991  005FA6  0100               	movlb	0	; () banked
 18992  005FA8  6FB1               	movwf	(sendCommand@string+1)& (0+255),b
 18993  005FAA  EC49  F02E         	call	_sendCommand	;wreg free
 18994  005FAE  0012               	return		;funcret
 18995  005FB0                     __end_of_moteApp_clearCommand:
 18996                           	opt stack 0
 18997                           tblptru	equ	0xFF8
 18998                           tblptrh	equ	0xFF7
 18999                           tblptrl	equ	0xFF6
 19000                           tablat	equ	0xFF5
 19001                           prodh	equ	0xFF4
 19002                           prodl	equ	0xFF3
 19003                           intcon	equ	0xFF2
 19004                           intcon3	equ	0xFF0
 19005                           postinc0	equ	0xFEE
 19006                           wreg	equ	0xFE8
 19007                           indf1	equ	0xFE7
 19008                           postdec1	equ	0xFE5
 19009                           fsr1h	equ	0xFE2
 19010                           fsr1l	equ	0xFE1
 19011                           indf2	equ	0xFDF
 19012                           fsr2h	equ	0xFDA
 19013                           fsr2l	equ	0xFD9
 19014                           status	equ	0xFD8
 19015                           
 19016 ;; *************** function _sendCommand *****************
 19017 ;; Defined at:
 19018 ;;		line 1112 in file "../Includes/Board/MOTEapp.c"
 19019 ;; Parameters:    Size  Location     Type
 19020 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 19021 ;;		 -> STR_186(22), STR_185(22), STR_184(27), STR_183(27), 
 19022 ;;		 -> STR_178(26), STR_177(26), STR_176(26), STR_175(26), 
 19023 ;;		 -> STR_174(3), STR_173(9), STR_172(15), STR_171(13), 
 19024 ;;		 -> STR_170(13), STR_169(13), STR_168(13), STR_167(13), 
 19025 ;;		 -> STR_166(13), STR_165(13), STR_164(13), STR_163(16), 
 19026 ;;		 -> STR_70(11), STR_68(11), STR_66(14), STR_58(14), 
 19027 ;;		 -> STR_52(10), STR_48(13), STR_43(14), STR_41(13), 
 19028 ;;		 -> STR_39(10), STR_30(10), STR_22(20), STR_21(2), 
 19029 ;; Auto vars:     Size  Location     Type
 19030 ;;		None
 19031 ;; Return value:  Size  Location     Type
 19032 ;;		None               void
 19033 ;; Registers used:
 19034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19035 ;; Tracked objects:
 19036 ;;		On entry : 0/0
 19037 ;;		On exit  : 0/0
 19038 ;;		Unchanged: 0/0
 19039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19040 ;;      Params:         0       2       0       0       0       0       0       0       0
 19041 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19042 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19043 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19044 ;;Total ram usage:        2 bytes
 19045 ;; Hardware stack levels used:    1
 19046 ;; Hardware stack levels required when called:   13
 19047 ;; This function calls:
 19048 ;;		_EUSART_Write
 19049 ;;		_EndLine
 19050 ;; This function is called by:
 19051 ;;		_moduleResync
 19052 ;;		_moduleSleep
 19053 ;;		_moteJoiningProcess
 19054 ;;		_MOTEapp_SetDataRateSetting
 19055 ;;		_moteApp_clearCommand
 19056 ;;		_moteApp_toggleLeds
 19057 ;;		_moteApp_setSensorsInput
 19058 ;;		_moteApp_getTempValue
 19059 ;;		_moteApp_getLightValue
 19060 ;; This function uses a non-reentrant model
 19061 ;;
 19062                           
 19063                           	psect	text65
 19064  005C92                     __ptext65:
 19065                           	opt stack 0
 19066  005C92                     _sendCommand:
 19067                           	opt stack 14
 19068                           
 19069                           ;MOTEapp.c: 1115: while (*string)
 19070                           
 19071                           ;incstack = 0
 19072  005C92  D00C               	goto	l11138
 19073  005C94                     l11134:
 19074                           
 19075                           ;MOTEapp.c: 1116: {
 19076                           ;MOTEapp.c: 1117: EUSART_Write(*string++);
 19077  005C94  C0B0  FFF6         	movff	sendCommand@string,tblptrl
 19078  005C98  C0B1  FFF7         	movff	sendCommand@string+1,tblptrh
 19079  005C9C                     	if	0	;tblptru may be non-zero
 19080  005C9C                     	endif
 19081  005C9C                     	if	0	;tblptru may be non-zero
 19082  005C9C                     	endif
 19083  005C9C  0008               	tblrd		*
 19084  005C9E  50F5               	movf	tablat,w,c
 19085  005CA0  EC37  F02C         	call	_EUSART_Write
 19086  005CA4  0100               	movlb	0	; () banked
 19087  005CA6  4BB0               	infsnz	sendCommand@string& (0+255),f,b
 19088  005CA8  2BB1               	incf	(sendCommand@string+1)& (0+255),f,b
 19089  005CAA  D000               	goto	l11138
 19090  005CAC                     l11138:
 19091  005CAC  C0B0  FFF6         	movff	sendCommand@string,tblptrl
 19092  005CB0  C0B1  FFF7         	movff	sendCommand@string+1,tblptrh
 19093  005CB4                     	if	0	;tblptru may be non-zero
 19094  005CB4                     	endif
 19095  005CB4                     	if	0	;tblptru may be non-zero
 19096  005CB4                     	endif
 19097  005CB4  0008               	tblrd		*
 19098  005CB6  50F5               	movf	tablat,w,c
 19099  005CB8  0900               	iorlw	0
 19100  005CBA  A4D8               	btfss	status,2,c
 19101  005CBC  D7EB               	goto	l11134
 19102                           
 19103                           ;MOTEapp.c: 1118: }
 19104                           ;MOTEapp.c: 1119: EndLine();
 19105  005CBE  ECE9  F02F         	call	_EndLine	;wreg free
 19106  005CC2  0012               	return		;funcret
 19107  005CC4                     __end_of_sendCommand:
 19108                           	opt stack 0
 19109                           tblptru	equ	0xFF8
 19110                           tblptrh	equ	0xFF7
 19111                           tblptrl	equ	0xFF6
 19112                           tablat	equ	0xFF5
 19113                           prodh	equ	0xFF4
 19114                           prodl	equ	0xFF3
 19115                           intcon	equ	0xFF2
 19116                           intcon3	equ	0xFF0
 19117                           postinc0	equ	0xFEE
 19118                           wreg	equ	0xFE8
 19119                           indf1	equ	0xFE7
 19120                           postdec1	equ	0xFE5
 19121                           fsr1h	equ	0xFE2
 19122                           fsr1l	equ	0xFE1
 19123                           indf2	equ	0xFDF
 19124                           fsr2h	equ	0xFDA
 19125                           fsr2l	equ	0xFD9
 19126                           status	equ	0xFD8
 19127                           
 19128 ;; *************** function _EndLine *****************
 19129 ;; Defined at:
 19130 ;;		line 1106 in file "../Includes/Board/MOTEapp.c"
 19131 ;; Parameters:    Size  Location     Type
 19132 ;;		None
 19133 ;; Auto vars:     Size  Location     Type
 19134 ;;		None
 19135 ;; Return value:  Size  Location     Type
 19136 ;;		None               void
 19137 ;; Registers used:
 19138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19139 ;; Tracked objects:
 19140 ;;		On entry : 0/0
 19141 ;;		On exit  : 0/0
 19142 ;;		Unchanged: 0/0
 19143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19144 ;;      Params:         0       0       0       0       0       0       0       0       0
 19145 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19146 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19147 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19148 ;;Total ram usage:        0 bytes
 19149 ;; Hardware stack levels used:    1
 19150 ;; Hardware stack levels required when called:   12
 19151 ;; This function calls:
 19152 ;;		_EUSART_Write
 19153 ;; This function is called by:
 19154 ;;		_sendCommand
 19155 ;;		_sendDataCommand
 19156 ;; This function uses a non-reentrant model
 19157 ;;
 19158                           
 19159                           	psect	text66
 19160  005FD2                     __ptext66:
 19161                           	opt stack 0
 19162  005FD2                     _EndLine:
 19163                           	opt stack 14
 19164                           
 19165                           ;MOTEapp.c: 1108: EUSART_Write(0x0D);
 19166                           
 19167                           ;incstack = 0
 19168  005FD2  0E0D               	movlw	13
 19169  005FD4  EC37  F02C         	call	_EUSART_Write
 19170                           
 19171                           ;MOTEapp.c: 1109: EUSART_Write(0x0A);
 19172  005FD8  0E0A               	movlw	10
 19173  005FDA  EC37  F02C         	call	_EUSART_Write
 19174  005FDE  0012               	return		;funcret
 19175  005FE0                     __end_of_EndLine:
 19176                           	opt stack 0
 19177                           tblptru	equ	0xFF8
 19178                           tblptrh	equ	0xFF7
 19179                           tblptrl	equ	0xFF6
 19180                           tablat	equ	0xFF5
 19181                           prodh	equ	0xFF4
 19182                           prodl	equ	0xFF3
 19183                           intcon	equ	0xFF2
 19184                           intcon3	equ	0xFF0
 19185                           postinc0	equ	0xFEE
 19186                           wreg	equ	0xFE8
 19187                           indf1	equ	0xFE7
 19188                           postdec1	equ	0xFE5
 19189                           fsr1h	equ	0xFE2
 19190                           fsr1l	equ	0xFE1
 19191                           indf2	equ	0xFDF
 19192                           fsr2h	equ	0xFDA
 19193                           fsr2l	equ	0xFD9
 19194                           status	equ	0xFD8
 19195                           
 19196 ;; *************** function _USBapp_handlerState *****************
 19197 ;; Defined at:
 19198 ;;		line 78 in file "../Includes/Board/USBapp.c"
 19199 ;; Parameters:    Size  Location     Type
 19200 ;;  state           1    wreg     enum E7584
 19201 ;; Auto vars:     Size  Location     Type
 19202 ;;  state           1    0[BANK0 ] enum E7584
 19203 ;; Return value:  Size  Location     Type
 19204 ;;		None               void
 19205 ;; Registers used:
 19206 ;;		wreg
 19207 ;; Tracked objects:
 19208 ;;		On entry : 0/0
 19209 ;;		On exit  : 0/0
 19210 ;;		Unchanged: 0/0
 19211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19212 ;;      Params:         0       0       0       0       0       0       0       0       0
 19213 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19214 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19215 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19216 ;;Total ram usage:        1 bytes
 19217 ;; Hardware stack levels used:    1
 19218 ;; Hardware stack levels required when called:   11
 19219 ;; This function calls:
 19220 ;;		Nothing
 19221 ;; This function is called by:
 19222 ;;		_main
 19223 ;; This function uses a non-reentrant model
 19224 ;;
 19225                           
 19226                           	psect	text67
 19227  00600E                     __ptext67:
 19228                           	opt stack 0
 19229  00600E                     _USBapp_handlerState:
 19230                           	opt stack 19
 19231                           
 19232                           ;incstack = 0
 19233                           ;USBapp_handlerState@state stored from wreg
 19234  00600E  0100               	movlb	0	; () banked
 19235  006010  6FAF               	movwf	USBapp_handlerState@state& (0+255),b
 19236                           
 19237                           ; BSR set to: 0
 19238                           ;USBapp.c: 80: usbState = state;
 19239  006012  C0AF  F0A8         	movff	USBapp_handlerState@state,_usbState
 19240                           
 19241                           ; BSR set to: 0
 19242  006016  0012               	return		;funcret
 19243  006018                     __end_of_USBapp_handlerState:
 19244                           	opt stack 0
 19245                           tblptru	equ	0xFF8
 19246                           tblptrh	equ	0xFF7
 19247                           tblptrl	equ	0xFF6
 19248                           tablat	equ	0xFF5
 19249                           prodh	equ	0xFF4
 19250                           prodl	equ	0xFF3
 19251                           intcon	equ	0xFF2
 19252                           intcon3	equ	0xFF0
 19253                           postinc0	equ	0xFEE
 19254                           wreg	equ	0xFE8
 19255                           indf1	equ	0xFE7
 19256                           postdec1	equ	0xFE5
 19257                           fsr1h	equ	0xFE2
 19258                           fsr1l	equ	0xFE1
 19259                           indf2	equ	0xFDF
 19260                           fsr2h	equ	0xFDA
 19261                           fsr2l	equ	0xFD9
 19262                           status	equ	0xFD8
 19263                           
 19264 ;; *************** function _USBapp_Handler *****************
 19265 ;; Defined at:
 19266 ;;		line 86 in file "../Includes/Board/USBapp.c"
 19267 ;; Parameters:    Size  Location     Type
 19268 ;;		None
 19269 ;; Auto vars:     Size  Location     Type
 19270 ;;  buttonPress     1   22[BANK0 ] enum E7617
 19271 ;; Return value:  Size  Location     Type
 19272 ;;		None               void
 19273 ;; Registers used:
 19274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19275 ;; Tracked objects:
 19276 ;;		On entry : 0/0
 19277 ;;		On exit  : 0/0
 19278 ;;		Unchanged: 0/0
 19279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19280 ;;      Params:         0       0       0       0       0       0       0       0       0
 19281 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19282 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19283 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19284 ;;Total ram usage:        1 bytes
 19285 ;; Hardware stack levels used:    1
 19286 ;; Hardware stack levels required when called:   16
 19287 ;; This function calls:
 19288 ;;		_USBapp_DeviceCdcEmulatorHandler
 19289 ;;		_oled_clear
 19290 ;;		_oled_putString
 19291 ;;		_service_pushbutton
 19292 ;; This function is called by:
 19293 ;;		_main
 19294 ;; This function uses a non-reentrant model
 19295 ;;
 19296                           
 19297                           	psect	text68
 19298  004200                     __ptext68:
 19299                           	opt stack 0
 19300  004200                     _USBapp_Handler:
 19301                           	opt stack 14
 19302                           
 19303                           ;USBapp.c: 90: {
 19304                           ;USBapp.c: 91: switch(usbState)
 19305                           
 19306                           ; BSR set to: 0
 19307                           ;incstack = 0
 19308                           ;USBapp.c: 89: do
 19309  004200  D04B               	goto	l13540
 19310  004202  D7FF               	goto	l843
 19311                           
 19312                           ;USBapp.c: 95: break;
 19313  004204  D055               	goto	l849
 19314  004206                     l13512:
 19315                           
 19316                           ;USBapp.c: 98: oled_clear();
 19317  004206  EC3B  F02F         	call	_oled_clear	;wreg free
 19318                           
 19319                           ;USBapp.c: 99: oled_putString("CDC Mode",1,0);
 19320  00420A  0E11               	movlw	low STR_187
 19321  00420C  0100               	movlb	0	; () banked
 19322  00420E  6FC0               	movwf	oled_putString@string& (0+255),b
 19323  004210  0E7F               	movlw	high STR_187
 19324  004212  0100               	movlb	0	; () banked
 19325  004214  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 19326  004216  0E01               	movlw	1
 19327  004218  0100               	movlb	0	; () banked
 19328  00421A  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 19329  00421C  0E00               	movlw	0
 19330  00421E  0100               	movlb	0	; () banked
 19331  004220  6FC3               	movwf	oled_putString@start_page& (0+255),b
 19332  004222  EC6C  F028         	call	_oled_putString	;wreg free
 19333                           
 19334                           ;USBapp.c: 100: oled_putString("Command",2,1);
 19335  004226  0E62               	movlw	low STR_188
 19336  004228  0100               	movlb	0	; () banked
 19337  00422A  6FC0               	movwf	oled_putString@string& (0+255),b
 19338  00422C  0E7F               	movlw	high STR_188
 19339  00422E  0100               	movlb	0	; () banked
 19340  004230  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 19341  004232  0E02               	movlw	2
 19342  004234  0100               	movlb	0	; () banked
 19343  004236  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 19344  004238  0E01               	movlw	1
 19345  00423A  0100               	movlb	0	; () banked
 19346  00423C  6FC3               	movwf	oled_putString@start_page& (0+255),b
 19347  00423E  EC6C  F028         	call	_oled_putString	;wreg free
 19348                           
 19349                           ;USBapp.c: 101: oled_putString("USB Handler",0,2);
 19350  004242  0E14               	movlw	low STR_189
 19351  004244  0100               	movlb	0	; () banked
 19352  004246  6FC0               	movwf	oled_putString@string& (0+255),b
 19353  004248  0E7E               	movlw	high STR_189
 19354  00424A  0100               	movlb	0	; () banked
 19355  00424C  6FC1               	movwf	(oled_putString@string+1)& (0+255),b
 19356  00424E  0E00               	movlw	0
 19357  004250  0100               	movlb	0	; () banked
 19358  004252  6FC2               	movwf	oled_putString@station_dot& (0+255),b
 19359  004254  0E02               	movlw	2
 19360  004256  0100               	movlb	0	; () banked
 19361  004258  6FC3               	movwf	oled_putString@start_page& (0+255),b
 19362  00425A  EC6C  F028         	call	_oled_putString	;wreg free
 19363                           
 19364                           ;USBapp.c: 103: usbState = USB_RUNNING;
 19365  00425E  0E01               	movlw	1
 19366  004260  D006               	goto	L8
 19367  004262                     l13522:
 19368                           
 19369                           ; BSR set to: 0
 19370                           ;USBapp.c: 107: if( USBDeviceState < CONFIGURED_STATE )
 19371  004262  0E20               	movlw	32
 19372  004264  0100               	movlb	0	; () banked
 19373  004266  6189               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 19374  004268  D001               	goto	l13526
 19375                           
 19376                           ; BSR set to: 0
 19377                           ;USBapp.c: 108: {
 19378                           ;USBapp.c: 110: continue;
 19379  00426A  D022               	goto	l849
 19380  00426C                     l13526:
 19381                           
 19382                           ; BSR set to: 0
 19383                           ;USBapp.c: 111: }
 19384                           ;USBapp.c: 112: usbState = USB_CDC;
 19385  00426C  0E02               	movlw	2
 19386  00426E                     L8:
 19387  00426E  0100               	movlb	0	; () banked
 19388  004270  6FA8               	movwf	_usbState& (0+255),b
 19389                           
 19390                           ;USBapp.c: 113: break;
 19391  004272  D01E               	goto	l849
 19392  004274                     l13528:
 19393                           
 19394                           ; BSR set to: 0
 19395                           ;USBapp.c: 116: USBapp_DeviceCdcEmulatorHandler();
 19396  004274  EC99  F01C         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 19397                           
 19398                           ;USBapp.c: 120: buttonStates_t buttonPress = Released;
 19399  004278  0E03               	movlw	3
 19400  00427A  0100               	movlb	0	; () banked
 19401  00427C  6FC5               	movwf	USBapp_Handler@buttonPress& (0+255),b
 19402                           
 19403                           ; BSR set to: 0
 19404                           ;USBapp.c: 121: buttonPress = service_pushbutton();
 19405  00427E  EC6B  F027         	call	_service_pushbutton	;wreg free
 19406  004282  0100               	movlb	0	; () banked
 19407  004284  6FC5               	movwf	USBapp_Handler@buttonPress& (0+255),b
 19408                           
 19409                           ; BSR set to: 0
 19410                           ;USBapp.c: 122: if (buttonPress != Released )
 19411  004286  0E03               	movlw	3
 19412  004288  0100               	movlb	0	; () banked
 19413  00428A  19C5               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 19414  00428C  B4D8               	btfsc	status,2,c
 19415  00428E  D010               	goto	l849
 19416                           
 19417                           ; BSR set to: 0
 19418                           ;USBapp.c: 123: {
 19419                           ;USBapp.c: 124: exitUSB = USB_BAT;
 19420  004290  0E02               	movlw	2
 19421  004292  0100               	movlb	0	; () banked
 19422  004294  6FF9               	movwf	_exitUSB& (0+255),b
 19423                           
 19424                           ; BSR set to: 0
 19425                           ;USBapp.c: 127: }
 19426                           
 19427                           ; BSR set to: 0
 19428                           ;USBapp.c: 125: }
 19429                           ;USBapp.c: 126: break;
 19430  004296  D00C               	goto	l849
 19431  004298                     l13540:
 19432  004298  0100               	movlb	0	; () banked
 19433  00429A  51A8               	movf	_usbState& (0+255),w,b
 19434                           
 19435                           ; Switch size 1, requested type "space"
 19436                           ; Number of cases is 3, Range of values is 0 to 2
 19437                           ; switch strategies available:
 19438                           ; Name         Instructions Cycles
 19439                           ; simple_byte           10     6 (average)
 19440                           ;	Chosen strategy is simple_byte
 19441  00429C  0A00               	xorlw	0	; case 0
 19442  00429E  B4D8               	btfsc	status,2,c
 19443  0042A0  D7B2               	goto	l13512
 19444  0042A2  0A01               	xorlw	1	; case 1
 19445  0042A4  B4D8               	btfsc	status,2,c
 19446  0042A6  D7DD               	goto	l13522
 19447  0042A8  0A03               	xorlw	3	; case 2
 19448  0042AA  B4D8               	btfsc	status,2,c
 19449  0042AC  D7E3               	goto	l13528
 19450  0042AE  D7A9               	goto	l843
 19451  0042B0                     l849:
 19452                           
 19453                           ;USBapp.c: 128: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 19454  0042B0  A080               	btfss	3968,0,c	;volatile
 19455  0042B2  D004               	goto	l854
 19456  0042B4  0100               	movlb	0	; () banked
 19457  0042B6  51F9               	movf	_exitUSB& (0+255),w,b
 19458  0042B8  B4D8               	btfsc	status,2,c
 19459  0042BA  D7EE               	goto	l13540
 19460  0042BC                     l854:
 19461                           
 19462                           ;USBapp.c: 129: __nop();
 19463  0042BC  F000               	nop	
 19464                           
 19465                           ;USBapp.c: 130: if (exitUSB != USB_BAT)
 19466  0042BE  0E02               	movlw	2
 19467  0042C0  0100               	movlb	0	; () banked
 19468  0042C2  19F9               	xorwf	_exitUSB& (0+255),w,b
 19469  0042C4  B4D8               	btfsc	status,2,c
 19470  0042C6  0012               	return	
 19471                           
 19472                           ; BSR set to: 0
 19473                           ;USBapp.c: 131: exitUSB = NO_USB;
 19474  0042C8  0E00               	movlw	0
 19475  0042CA  0100               	movlb	0	; () banked
 19476  0042CC  6FF9               	movwf	_exitUSB& (0+255),b
 19477  0042CE  0012               	return	
 19478                           
 19479                           ; BSR set to: 0
 19480                           
 19481                           ; BSR set to: 0
 19482  0042D0  0012               	return		;funcret
 19483  0042D2                     __end_of_USBapp_Handler:
 19484                           	opt stack 0
 19485                           tblptru	equ	0xFF8
 19486                           tblptrh	equ	0xFF7
 19487                           tblptrl	equ	0xFF6
 19488                           tablat	equ	0xFF5
 19489                           prodh	equ	0xFF4
 19490                           prodl	equ	0xFF3
 19491                           intcon	equ	0xFF2
 19492                           intcon3	equ	0xFF0
 19493                           postinc0	equ	0xFEE
 19494                           wreg	equ	0xFE8
 19495                           indf1	equ	0xFE7
 19496                           postdec1	equ	0xFE5
 19497                           fsr1h	equ	0xFE2
 19498                           fsr1l	equ	0xFE1
 19499                           indf2	equ	0xFDF
 19500                           fsr2h	equ	0xFDA
 19501                           fsr2l	equ	0xFD9
 19502                           status	equ	0xFD8
 19503                           
 19504 ;; *************** function _service_pushbutton *****************
 19505 ;; Defined at:
 19506 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 19507 ;; Parameters:    Size  Location     Type
 19508 ;;		None
 19509 ;; Auto vars:     Size  Location     Type
 19510 ;;  bs              1    0[BANK0 ] enum E7500
 19511 ;; Return value:  Size  Location     Type
 19512 ;;                  1    wreg      enum E7586
 19513 ;; Registers used:
 19514 ;;		wreg, status,2, status,0
 19515 ;; Tracked objects:
 19516 ;;		On entry : 0/0
 19517 ;;		On exit  : 0/0
 19518 ;;		Unchanged: 0/0
 19519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19520 ;;      Params:         0       0       0       0       0       0       0       0       0
 19521 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19522 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19523 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19524 ;;Total ram usage:        1 bytes
 19525 ;; Hardware stack levels used:    1
 19526 ;; Hardware stack levels required when called:   11
 19527 ;; This function calls:
 19528 ;;		Nothing
 19529 ;; This function is called by:
 19530 ;;		_moteHandler
 19531 ;;		_USBapp_Handler
 19532 ;; This function uses a non-reentrant model
 19533 ;;
 19534                           
 19535                           	psect	text69
 19536  004ED6                     __ptext69:
 19537                           	opt stack 0
 19538  004ED6                     _service_pushbutton:
 19539                           	opt stack 18
 19540                           
 19541                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 19542                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 19543                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 19544                           
 19545                           ; BSR set to: 0
 19546                           ;incstack = 0
 19547  004ED6  0E00               	movlw	0
 19548  004ED8  0100               	movlb	0	; () banked
 19549  004EDA  6FAF               	movwf	service_pushbutton@bs& (0+255),b
 19550                           
 19551                           ; BSR set to: 0
 19552                           ;buttons.c: 55: if ((PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
 19553  004EDC  A281               	btfss	3969,1,c	;volatile
 19554  004EDE  D002               	goto	l12506
 19555                           
 19556                           ; BSR set to: 0
 19557  004EE0  B081               	btfsc	3969,0,c	;volatile
 19558  004EE2  D01F               	goto	l12518
 19559  004EE4                     l12506:
 19560                           
 19561                           ; BSR set to: 0
 19562                           ;buttons.c: 56: {
 19563                           ;buttons.c: 57: ++PB_Timer;
 19564  004EE4  0E01               	movlw	1
 19565  004EE6  0101               	movlb	1	; () banked
 19566  004EE8  2724               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 19567  004EEA  0E00               	movlw	0
 19568  004EEC  2325               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 19569  004EEE  2326               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 19570  004EF0  2327               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 19571                           
 19572                           ;buttons.c: 61: if (PB_Timer == 55)
 19573  004EF2  0E37               	movlw	55
 19574  004EF4  0101               	movlb	1	; () banked
 19575  004EF6  1924               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 19576  004EF8  0101               	movlb	1	; () banked
 19577  004EFA  1125               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 19578  004EFC  0101               	movlb	1	; () banked
 19579  004EFE  1126               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 19580  004F00  0101               	movlb	1	; () banked
 19581  004F02  1127               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 19582  004F04  A4D8               	btfss	status,2,c
 19583  004F06  D00A               	goto	l12516
 19584                           
 19585                           ; BSR set to: 1
 19586                           ;buttons.c: 62: {
 19587                           ;buttons.c: 63: Release_Timer = 0;
 19588  004F08  0E00               	movlw	0
 19589  004F0A  0100               	movlb	0	; () banked
 19590  004F0C  6FA9               	movwf	service_pushbutton@Release_Timer& (0+255),b
 19591                           
 19592                           ; BSR set to: 0
 19593                           ;buttons.c: 65: if (PORTBbits.RB1 == 0)
 19594  004F0E  B281               	btfsc	3969,1,c	;volatile
 19595  004F10  D002               	goto	l12514
 19596                           
 19597                           ; BSR set to: 0
 19598                           ;buttons.c: 66: {
 19599                           ;buttons.c: 67: bs = ShortPress1;
 19600  004F12  0E01               	movlw	1
 19601  004F14  D01C               	goto	L11
 19602  004F16                     l12514:
 19603                           
 19604                           ; BSR set to: 0
 19605                           ;buttons.c: 69: else
 19606                           ;buttons.c: 70: {
 19607                           ;buttons.c: 71: bs = ShortPress2;
 19608  004F16  0E02               	movlw	2
 19609  004F18  D01A               	goto	L11
 19610                           
 19611                           ; BSR set to: 0
 19612                           ;buttons.c: 72: }
 19613                           ;buttons.c: 73: }
 19614  004F1A  D01C               	goto	l12526
 19615  004F1C                     l12516:
 19616                           
 19617                           ;buttons.c: 74: else
 19618                           ;buttons.c: 75: {
 19619                           ;buttons.c: 76: bs = NoButton;
 19620  004F1C  0E00               	movlw	0
 19621  004F1E  D017               	goto	L11
 19622                           
 19623                           ; BSR set to: 0
 19624                           ;buttons.c: 77: }
 19625                           ;buttons.c: 78: }
 19626  004F20  D019               	goto	l12526
 19627  004F22                     l12518:
 19628                           
 19629                           ; BSR set to: 0
 19630                           ;buttons.c: 79: else
 19631                           ;buttons.c: 80: {
 19632                           ;buttons.c: 81: if (Release_Timer == 20)
 19633  004F22  0E14               	movlw	20
 19634  004F24  0100               	movlb	0	; () banked
 19635  004F26  19A9               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
 19636  004F28  A4D8               	btfss	status,2,c
 19637  004F2A  D00D               	goto	l12522
 19638                           
 19639                           ; BSR set to: 0
 19640                           ;buttons.c: 82: {
 19641                           ;buttons.c: 83: PB_Timer = 0;
 19642  004F2C  0E00               	movlw	0
 19643  004F2E  0101               	movlb	1	; () banked
 19644  004F30  6F24               	movwf	service_pushbutton@PB_Timer& (0+255),b
 19645  004F32  0E00               	movlw	0
 19646  004F34  6F25               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 19647  004F36  0E00               	movlw	0
 19648  004F38  6F26               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 19649  004F3A  0E00               	movlw	0
 19650  004F3C  6F27               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 19651                           
 19652                           ;buttons.c: 84: Release_Timer = 0;
 19653  004F3E  0E00               	movlw	0
 19654  004F40  0100               	movlb	0	; () banked
 19655  004F42  6FA9               	movwf	service_pushbutton@Release_Timer& (0+255),b
 19656                           
 19657                           ;buttons.c: 85: }
 19658  004F44  D003               	goto	l12524
 19659  004F46                     l12522:
 19660                           
 19661                           ; BSR set to: 0
 19662                           ;buttons.c: 86: else
 19663                           ;buttons.c: 87: {
 19664                           ;buttons.c: 88: Release_Timer++;
 19665  004F46  0100               	movlb	0	; () banked
 19666  004F48  2BA9               	incf	service_pushbutton@Release_Timer& (0+255),f,b
 19667  004F4A  D000               	goto	l12524
 19668  004F4C                     l12524:
 19669                           
 19670                           ; BSR set to: 0
 19671                           ;buttons.c: 89: }
 19672                           ;buttons.c: 90: bs = Released;
 19673  004F4C  0E03               	movlw	3
 19674  004F4E                     L11:
 19675  004F4E  0100               	movlb	0	; () banked
 19676  004F50  6FAF               	movwf	service_pushbutton@bs& (0+255),b
 19677  004F52  D000               	goto	l12526
 19678  004F54                     l12526:
 19679                           
 19680                           ; BSR set to: 0
 19681                           ;buttons.c: 91: }
 19682                           ;buttons.c: 93: return bs;
 19683  004F54  0100               	movlb	0	; () banked
 19684  004F56  51AF               	movf	service_pushbutton@bs& (0+255),w,b
 19685  004F58  0012               	return	
 19686                           
 19687                           ; BSR set to: 0
 19688                           
 19689                           ; BSR set to: 0
 19690  004F5A  0012               	return		;funcret
 19691  004F5C                     __end_of_service_pushbutton:
 19692                           	opt stack 0
 19693                           tblptru	equ	0xFF8
 19694                           tblptrh	equ	0xFF7
 19695                           tblptrl	equ	0xFF6
 19696                           tablat	equ	0xFF5
 19697                           prodh	equ	0xFF4
 19698                           prodl	equ	0xFF3
 19699                           intcon	equ	0xFF2
 19700                           intcon3	equ	0xFF0
 19701                           postinc0	equ	0xFEE
 19702                           wreg	equ	0xFE8
 19703                           indf1	equ	0xFE7
 19704                           postdec1	equ	0xFE5
 19705                           fsr1h	equ	0xFE2
 19706                           fsr1l	equ	0xFE1
 19707                           indf2	equ	0xFDF
 19708                           fsr2h	equ	0xFDA
 19709                           fsr2l	equ	0xFD9
 19710                           status	equ	0xFD8
 19711                           
 19712 ;; *************** function _oled_putString *****************
 19713 ;; Defined at:
 19714 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 19715 ;; Parameters:    Size  Location     Type
 19716 ;;  string          2   17[BANK0 ] PTR const unsigned char 
 19717 ;;		 -> oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), STR_189(12), 
 19718 ;;		 -> STR_188(8), STR_187(9), storedLight(5), STR_182(5), 
 19719 ;;		 -> STR_181(8), STR_180(8), STR_179(9), STR_162(16), 
 19720 ;;		 -> STR_161(17), STR_160(17), STR_159(4), STR_158(4), 
 19721 ;;		 -> STR_157(4), STR_156(4), STR_155(4), STR_154(4), 
 19722 ;;		 -> STR_153(4), STR_152(16), STR_151(17), STR_150(4), 
 19723 ;;		 -> STR_149(4), STR_148(4), STR_147(4), STR_146(4), 
 19724 ;;		 -> STR_145(4), STR_144(4), STR_143(4), STR_142(4), 
 19725 ;;		 -> STR_141(4), STR_140(4), STR_139(4), STR_138(4), 
 19726 ;;		 -> STR_137(16), STR_136(12), STR_135(17), STR_134(16), 
 19727 ;;		 -> STR_133(16), STR_132(16), STR_131(15), STR_130(15), 
 19728 ;;		 -> STR_129(16), STR_128(4), STR_127(3), STR_126(3), 
 19729 ;;		 -> STR_125(3), STR_124(3), STR_123(2), STR_122(5), 
 19730 ;;		 -> STR_121(7), STR_120(17), STR_119(17), STR_118(2), 
 19731 ;;		 -> STR_117(7), STR_116(7), STR_115(16), STR_114(16), 
 19732 ;;		 -> STR_113(15), STR_112(15), STR_111(17), STR_110(16), 
 19733 ;;		 -> STR_109(17), STR_108(17), STR_107(7), STR_106(10), 
 19734 ;;		 -> STR_105(17), STR_104(16), STR_103(16), STR_102(16), 
 19735 ;;		 -> STR_101(16), STR_100(17), STR_99(17), STR_98(16), 
 19736 ;;		 -> STR_96(19), STR_94(17), STR_92(17), STR_91(17), 
 19737 ;;		 -> responseData(32), responsePortNum(3), STR_88(13), STR_87(12), 
 19738 ;;		 -> STR_86(12), STR_83(18), STR_82(13), STR_81(17), 
 19739 ;;		 -> STR_80(16), STR_79(17), STR_78(17), STR_77(16), 
 19740 ;;		 -> STR_76(17), STR_75(17), STR_73(13), STR_72(12), 
 19741 ;;		 -> STR_71(17), STR_65(7), STR_64(10), STR_62(11), 
 19742 ;;		 -> STR_61(11), STR_56(9), STR_55(11), STR_51(11), 
 19743 ;;		 -> STR_50(10), STR_47(9), STR_46(11), STR_42(17), 
 19744 ;;		 -> STR_40(17), STR_38(17), STR_37(17), STR_36(17), 
 19745 ;;		 -> STR_34(17), STR_33(17), STR_32(17), moduleResonseBuffer(64), 
 19746 ;;		 -> STR_29(17), STR_28(17), STR_27(17), STR_26(17), 
 19747 ;;		 -> STR_25(9), STR_24(10), STR_23(5), STR_20(9), 
 19748 ;;		 -> STR_19(8), STR_18(8), STR_17(9), STR_16(10), 
 19749 ;;		 -> STR_15(11), STR_14(13), STR_13(13), STR_12(13), 
 19750 ;;		 -> STR_11(12), STR_10(13), STR_9(9), STR_8(12), 
 19751 ;;		 -> STR_7(16), STR_6(2), STR_5(2), STR_4(9), 
 19752 ;;		 -> STR_3(11), STR_2(15), STR_1(10), 
 19753 ;;  station_dot     1   19[BANK0 ] unsigned char 
 19754 ;;  start_page      1   20[BANK0 ] unsigned char 
 19755 ;; Auto vars:     Size  Location     Type
 19756 ;;  index           1   21[BANK0 ] unsigned char 
 19757 ;; Return value:  Size  Location     Type
 19758 ;;		None               void
 19759 ;; Registers used:
 19760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19761 ;; Tracked objects:
 19762 ;;		On entry : 0/0
 19763 ;;		On exit  : 0/0
 19764 ;;		Unchanged: 0/0
 19765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19766 ;;      Params:         0       4       0       0       0       0       0       0       0
 19767 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19768 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19769 ;;      Totals:         0       5       0       0       0       0       0       0       0
 19770 ;;Total ram usage:        5 bytes
 19771 ;; Hardware stack levels used:    1
 19772 ;; Hardware stack levels required when called:   14
 19773 ;; This function calls:
 19774 ;;		_oled_putChar
 19775 ;; This function is called by:
 19776 ;;		_main
 19777 ;;		_test_oled
 19778 ;;		_test_switch
 19779 ;;		_test_comms
 19780 ;;		_test_leds
 19781 ;;		_moteHandler
 19782 ;;		_moteJoiningProcess
 19783 ;;		_moteRunningProcess
 19784 ;;		_moteApp_testSensors
 19785 ;;		_USBapp_Handler
 19786 ;;		_oled_putUint8
 19787 ;;		_oled_putint8
 19788 ;;		_test_adc
 19789 ;;		_test_rf
 19790 ;;		_oled_putUint16
 19791 ;; This function uses a non-reentrant model
 19792 ;;
 19793                           
 19794                           	psect	text70
 19795  0050D8                     __ptext70:
 19796                           	opt stack 0
 19797  0050D8                     _oled_putString:
 19798                           	opt stack 14
 19799                           
 19800                           ;SSD1306oLED.c: 333: uint8_t index;
 19801                           ;SSD1306oLED.c: 334: for(index = station_dot; index < 16; index++)
 19802                           
 19803                           ; BSR set to: 0
 19804                           ;incstack = 0
 19805  0050D8  C0C2  F0C4         	movff	oled_putString@station_dot,oled_putString@index
 19806  0050DC  0E0F               	movlw	15
 19807  0050DE  0100               	movlb	0	; () banked
 19808  0050E0  65C4               	cpfsgt	oled_putString@index& (0+255),b
 19809  0050E2  D002               	goto	l11296
 19810  0050E4  0012               	return	
 19811                           
 19812                           ; BSR set to: 0
 19813  0050E6  0012               	return	
 19814  0050E8                     l11296:
 19815                           
 19816                           ; BSR set to: 0
 19817                           ;SSD1306oLED.c: 335: {
 19818                           ;SSD1306oLED.c: 336: if (*string != 0)
 19819  0050E8  C0C0  FFF6         	movff	oled_putString@string,tblptrl
 19820  0050EC  C0C1  FFF7         	movff	oled_putString@string+1,tblptrh
 19821  0050F0  6AF8               	clrf	tblptru,c
 19822  0050F2  0E07               	movlw	(high __ramtop+-1)
 19823  0050F4  64F7               	cpfsgt	tblptrh,c
 19824  0050F6  D003               	bra	u9737
 19825  0050F8  0008               	tblrd		*
 19826  0050FA  50F5               	movf	tablat,w,c
 19827  0050FC  D005               	bra	u9730
 19828  0050FE                     u9737:
 19829  0050FE  CFF6 FFE9          	movff	tblptrl,fsr0l
 19830  005102  CFF7 FFEA          	movff	tblptrh,fsr0h
 19831  005106  50EF               	movf	indf0,w,c
 19832  005108                     u9730:
 19833  005108  0900               	iorlw	0
 19834  00510A  B4D8               	btfsc	status,2,c
 19835  00510C  0012               	return	
 19836                           
 19837                           ;SSD1306oLED.c: 337: {
 19838                           ;SSD1306oLED.c: 338: oled_putChar(*string, index, start_page);
 19839  00510E  C0C4  F0B1         	movff	oled_putString@index,oled_putChar@station_dot
 19840  005112  C0C3  F0B2         	movff	oled_putString@start_page,oled_putChar@start_page
 19841  005116  C0C0  FFF6         	movff	oled_putString@string,tblptrl
 19842  00511A  C0C1  FFF7         	movff	oled_putString@string+1,tblptrh
 19843  00511E  6AF8               	clrf	tblptru,c
 19844  005120  0E07               	movlw	(high __ramtop+-1)
 19845  005122  64F7               	cpfsgt	tblptrh,c
 19846  005124  D003               	bra	u9757
 19847  005126  0008               	tblrd		*
 19848  005128  50F5               	movf	tablat,w,c
 19849  00512A  D005               	bra	u9750
 19850  00512C                     u9757:
 19851  00512C  CFF6 FFE9          	movff	tblptrl,fsr0l
 19852  005130  CFF7 FFEA          	movff	tblptrh,fsr0h
 19853  005134  50EF               	movf	indf0,w,c
 19854  005136                     u9750:
 19855  005136  EC0A  F024         	call	_oled_putChar
 19856                           
 19857                           ;SSD1306oLED.c: 339: *string++;
 19858  00513A  0100               	movlb	0	; () banked
 19859  00513C  4BC0               	infsnz	oled_putString@string& (0+255),f,b
 19860  00513E  2BC1               	incf	(oled_putString@string+1)& (0+255),f,b
 19861                           
 19862                           ;SSD1306oLED.c: 340: }
 19863  005140  D001               	goto	l11302
 19864                           
 19865                           ; BSR set to: 0
 19866                           ;SSD1306oLED.c: 341: else
 19867                           ;SSD1306oLED.c: 342: {
 19868                           ;SSD1306oLED.c: 343: break;
 19869  005142  0012               	return	
 19870  005144                     l11302:
 19871                           
 19872                           ; BSR set to: 0
 19873  005144  0100               	movlb	0	; () banked
 19874  005146  2BC4               	incf	oled_putString@index& (0+255),f,b
 19875                           
 19876                           ; BSR set to: 0
 19877  005148  0E0F               	movlw	15
 19878  00514A  0100               	movlb	0	; () banked
 19879  00514C  65C4               	cpfsgt	oled_putString@index& (0+255),b
 19880  00514E  D7CC               	goto	l11296
 19881  005150  0012               	return	
 19882                           
 19883                           ; BSR set to: 0
 19884  005152  0012               	return		;funcret
 19885  005154                     __end_of_oled_putString:
 19886                           	opt stack 0
 19887                           tblptru	equ	0xFF8
 19888                           tblptrh	equ	0xFF7
 19889                           tblptrl	equ	0xFF6
 19890                           tablat	equ	0xFF5
 19891                           prodh	equ	0xFF4
 19892                           prodl	equ	0xFF3
 19893                           intcon	equ	0xFF2
 19894                           intcon3	equ	0xFF0
 19895                           indf0	equ	0xFEF
 19896                           postinc0	equ	0xFEE
 19897                           fsr0h	equ	0xFEA
 19898                           fsr0l	equ	0xFE9
 19899                           wreg	equ	0xFE8
 19900                           indf1	equ	0xFE7
 19901                           postdec1	equ	0xFE5
 19902                           fsr1h	equ	0xFE2
 19903                           fsr1l	equ	0xFE1
 19904                           indf2	equ	0xFDF
 19905                           fsr2h	equ	0xFDA
 19906                           fsr2l	equ	0xFD9
 19907                           status	equ	0xFD8
 19908                           
 19909 ;; *************** function _oled_clear *****************
 19910 ;; Defined at:
 19911 ;;		line 348 in file "../Includes/Drivers/SSD1306oLED.c"
 19912 ;; Parameters:    Size  Location     Type
 19913 ;;		None
 19914 ;; Auto vars:     Size  Location     Type
 19915 ;;		None
 19916 ;; Return value:  Size  Location     Type
 19917 ;;		None               void
 19918 ;; Registers used:
 19919 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19920 ;; Tracked objects:
 19921 ;;		On entry : 0/0
 19922 ;;		On exit  : 0/0
 19923 ;;		Unchanged: 0/0
 19924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19925 ;;      Params:         0       0       0       0       0       0       0       0       0
 19926 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19927 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19928 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19929 ;;Total ram usage:        0 bytes
 19930 ;; Hardware stack levels used:    1
 19931 ;; Hardware stack levels required when called:   15
 19932 ;; This function calls:
 19933 ;;		_oled_clearRow
 19934 ;; This function is called by:
 19935 ;;		_main
 19936 ;;		_test_powerup
 19937 ;;		_test_oled
 19938 ;;		_test_switch
 19939 ;;		_moteHandler
 19940 ;;		_moteJoiningProcess
 19941 ;;		_moteRunningProcess
 19942 ;;		_moteApp_testSensors
 19943 ;;		_USBapp_Handler
 19944 ;;		_oled_init
 19945 ;;		_test_adc
 19946 ;;		_test_rf
 19947 ;; This function uses a non-reentrant model
 19948 ;;
 19949                           
 19950                           	psect	text71
 19951  005E76                     __ptext71:
 19952                           	opt stack 0
 19953  005E76                     _oled_clear:
 19954                           	opt stack 13
 19955                           
 19956                           ;SSD1306oLED.c: 350: oled_clearRow(0);
 19957                           
 19958                           ;incstack = 0
 19959  005E76  0E00               	movlw	0
 19960  005E78  EC16  F02E         	call	_oled_clearRow
 19961                           
 19962                           ;SSD1306oLED.c: 351: oled_clearRow(1);
 19963  005E7C  0E01               	movlw	1
 19964  005E7E  EC16  F02E         	call	_oled_clearRow
 19965                           
 19966                           ;SSD1306oLED.c: 352: oled_clearRow(2);
 19967  005E82  0E02               	movlw	2
 19968  005E84  EC16  F02E         	call	_oled_clearRow
 19969                           
 19970                           ;SSD1306oLED.c: 353: oled_clearRow(3);
 19971  005E88  0E03               	movlw	3
 19972  005E8A  EC16  F02E         	call	_oled_clearRow
 19973  005E8E  0012               	return		;funcret
 19974  005E90                     __end_of_oled_clear:
 19975                           	opt stack 0
 19976                           tblptru	equ	0xFF8
 19977                           tblptrh	equ	0xFF7
 19978                           tblptrl	equ	0xFF6
 19979                           tablat	equ	0xFF5
 19980                           prodh	equ	0xFF4
 19981                           prodl	equ	0xFF3
 19982                           intcon	equ	0xFF2
 19983                           intcon3	equ	0xFF0
 19984                           indf0	equ	0xFEF
 19985                           postinc0	equ	0xFEE
 19986                           fsr0h	equ	0xFEA
 19987                           fsr0l	equ	0xFE9
 19988                           wreg	equ	0xFE8
 19989                           indf1	equ	0xFE7
 19990                           postdec1	equ	0xFE5
 19991                           fsr1h	equ	0xFE2
 19992                           fsr1l	equ	0xFE1
 19993                           indf2	equ	0xFDF
 19994                           fsr2h	equ	0xFDA
 19995                           fsr2l	equ	0xFD9
 19996                           status	equ	0xFD8
 19997                           
 19998 ;; *************** function _oled_clearRow *****************
 19999 ;; Defined at:
 20000 ;;		line 356 in file "../Includes/Drivers/SSD1306oLED.c"
 20001 ;; Parameters:    Size  Location     Type
 20002 ;;  page            1    wreg     unsigned char 
 20003 ;; Auto vars:     Size  Location     Type
 20004 ;;  page            1   12[BANK0 ] unsigned char 
 20005 ;;  index           1   13[BANK0 ] unsigned char 
 20006 ;; Return value:  Size  Location     Type
 20007 ;;		None               void
 20008 ;; Registers used:
 20009 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20010 ;; Tracked objects:
 20011 ;;		On entry : 0/0
 20012 ;;		On exit  : 0/0
 20013 ;;		Unchanged: 0/0
 20014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20015 ;;      Params:         0       0       0       0       0       0       0       0       0
 20016 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20017 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20018 ;;      Totals:         0       2       0       0       0       0       0       0       0
 20019 ;;Total ram usage:        2 bytes
 20020 ;; Hardware stack levels used:    1
 20021 ;; Hardware stack levels required when called:   14
 20022 ;; This function calls:
 20023 ;;		_oled_putChar
 20024 ;; This function is called by:
 20025 ;;		_oled_clear
 20026 ;; This function uses a non-reentrant model
 20027 ;;
 20028                           
 20029                           	psect	text72
 20030  005C2C                     __ptext72:
 20031                           	opt stack 0
 20032  005C2C                     _oled_clearRow:
 20033                           	opt stack 13
 20034                           
 20035                           ;incstack = 0
 20036                           ;oled_clearRow@page stored from wreg
 20037  005C2C  0100               	movlb	0	; () banked
 20038  005C2E  6FBB               	movwf	oled_clearRow@page& (0+255),b
 20039                           
 20040                           ; BSR set to: 0
 20041                           ;SSD1306oLED.c: 358: uint8_t index;
 20042                           ;SSD1306oLED.c: 360: for(index = 0; index < 16; index++)
 20043  005C30  0E00               	movlw	0
 20044  005C32  0100               	movlb	0	; () banked
 20045  005C34  6FBC               	movwf	oled_clearRow@index& (0+255),b
 20046                           
 20047                           ; BSR set to: 0
 20048  005C36  0E0F               	movlw	15
 20049  005C38  0100               	movlb	0	; () banked
 20050  005C3A  65BC               	cpfsgt	oled_clearRow@index& (0+255),b
 20051  005C3C  D002               	goto	l11098
 20052  005C3E  0012               	return	
 20053                           
 20054                           ; BSR set to: 0
 20055  005C40  0012               	return	
 20056  005C42                     l11098:
 20057                           
 20058                           ; BSR set to: 0
 20059                           ;SSD1306oLED.c: 361: {
 20060                           ;SSD1306oLED.c: 362: oled_putChar( ' ', index, page);
 20061  005C42  C0BC  F0B1         	movff	oled_clearRow@index,oled_putChar@station_dot
 20062  005C46  C0BB  F0B2         	movff	oled_clearRow@page,oled_putChar@start_page
 20063  005C4A  0E20               	movlw	32
 20064  005C4C  EC0A  F024         	call	_oled_putChar
 20065  005C50  0100               	movlb	0	; () banked
 20066  005C52  2BBC               	incf	oled_clearRow@index& (0+255),f,b
 20067                           
 20068                           ; BSR set to: 0
 20069  005C54  0E0F               	movlw	15
 20070  005C56  0100               	movlb	0	; () banked
 20071  005C58  65BC               	cpfsgt	oled_clearRow@index& (0+255),b
 20072  005C5A  D7F3               	goto	l11098
 20073  005C5C  0012               	return	
 20074                           
 20075                           ; BSR set to: 0
 20076                           
 20077                           ; BSR set to: 0
 20078  005C5E  0012               	return		;funcret
 20079  005C60                     __end_of_oled_clearRow:
 20080                           	opt stack 0
 20081                           tblptru	equ	0xFF8
 20082                           tblptrh	equ	0xFF7
 20083                           tblptrl	equ	0xFF6
 20084                           tablat	equ	0xFF5
 20085                           prodh	equ	0xFF4
 20086                           prodl	equ	0xFF3
 20087                           intcon	equ	0xFF2
 20088                           intcon3	equ	0xFF0
 20089                           indf0	equ	0xFEF
 20090                           postinc0	equ	0xFEE
 20091                           fsr0h	equ	0xFEA
 20092                           fsr0l	equ	0xFE9
 20093                           wreg	equ	0xFE8
 20094                           indf1	equ	0xFE7
 20095                           postdec1	equ	0xFE5
 20096                           fsr1h	equ	0xFE2
 20097                           fsr1l	equ	0xFE1
 20098                           indf2	equ	0xFDF
 20099                           fsr2h	equ	0xFDA
 20100                           fsr2l	equ	0xFD9
 20101                           status	equ	0xFD8
 20102                           
 20103 ;; *************** function _oled_putChar *****************
 20104 ;; Defined at:
 20105 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 20106 ;; Parameters:    Size  Location     Type
 20107 ;;  k               1    wreg     unsigned char 
 20108 ;;  station_dot     1    2[BANK0 ] unsigned char 
 20109 ;;  start_page      1    3[BANK0 ] unsigned char 
 20110 ;; Auto vars:     Size  Location     Type
 20111 ;;  k               1   10[BANK0 ] unsigned char 
 20112 ;;  index           1   11[BANK0 ] unsigned char 
 20113 ;; Return value:  Size  Location     Type
 20114 ;;		None               void
 20115 ;; Registers used:
 20116 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20117 ;; Tracked objects:
 20118 ;;		On entry : 0/0
 20119 ;;		On exit  : 0/0
 20120 ;;		Unchanged: 0/0
 20121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20122 ;;      Params:         0       2       0       0       0       0       0       0       0
 20123 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20124 ;;      Temps:          0       6       0       0       0       0       0       0       0
 20125 ;;      Totals:         0      10       0       0       0       0       0       0       0
 20126 ;;Total ram usage:       10 bytes
 20127 ;; Hardware stack levels used:    1
 20128 ;; Hardware stack levels required when called:   13
 20129 ;; This function calls:
 20130 ;;		_Set_Column_Address
 20131 ;;		_Set_Page_Address
 20132 ;;		_oled_writeData
 20133 ;; This function is called by:
 20134 ;;		_moteApp_testSensors
 20135 ;;		_oled_putString
 20136 ;;		_oled_clearRow
 20137 ;;		_test_adc
 20138 ;; This function uses a non-reentrant model
 20139 ;;
 20140                           
 20141                           	psect	text73
 20142  004814                     __ptext73:
 20143                           	opt stack 0
 20144  004814                     _oled_putChar:
 20145                           	opt stack 14
 20146                           
 20147                           ; BSR set to: 0
 20148                           ;incstack = 0
 20149                           ;oled_putChar@k stored from wreg
 20150  004814  0100               	movlb	0	; () banked
 20151  004816  6FB9               	movwf	oled_putChar@k& (0+255),b
 20152                           
 20153                           ; BSR set to: 0
 20154                           ;SSD1306oLED.c: 320: uint8_t index;
 20155                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 20156  004818  0100               	movlb	0	; () banked
 20157  00481A  51B2               	movf	oled_putChar@start_page& (0+255),w,b
 20158  00481C  EC48  F02F         	call	_Set_Page_Address
 20159                           
 20160                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 20161  004820  0100               	movlb	0	; () banked
 20162  004822  51B1               	movf	oled_putChar@station_dot& (0+255),w,b
 20163  004824  0D08               	mullw	8
 20164  004826  50F3               	movf	prodl,w,c
 20165  004828  0F04               	addlw	4
 20166  00482A  EC2C  F02F         	call	_Set_Column_Address
 20167                           
 20168                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 20169  00482E  0E00               	movlw	0
 20170  004830  0100               	movlb	0	; () banked
 20171  004832  6FBA               	movwf	oled_putChar@index& (0+255),b
 20172                           
 20173                           ; BSR set to: 0
 20174  004834  0E07               	movlw	7
 20175  004836  0100               	movlb	0	; () banked
 20176  004838  65BA               	cpfsgt	oled_putChar@index& (0+255),b
 20177  00483A  D002               	goto	l11046
 20178  00483C  0012               	return	
 20179                           
 20180                           ; BSR set to: 0
 20181  00483E  0012               	return	
 20182  004840                     l11046:
 20183                           
 20184                           ; BSR set to: 0
 20185                           ;SSD1306oLED.c: 326: {
 20186                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 20187  004840  0100               	movlb	0	; () banked
 20188  004842  51BA               	movf	oled_putChar@index& (0+255),w,b
 20189  004844  0D01               	mullw	1
 20190  004846  0E00               	movlw	0
 20191  004848  0100               	movlb	0	; () banked
 20192  00484A  6FB3               	movwf	??_oled_putChar& (0+255),b
 20193  00484C  0EFF               	movlw	255
 20194  00484E  0100               	movlb	0	; () banked
 20195  004850  6FB4               	movwf	(??_oled_putChar+1)& (0+255),b
 20196  004852  0100               	movlb	0	; () banked
 20197  004854  51B9               	movf	oled_putChar@k& (0+255),w,b
 20198  004856  0100               	movlb	0	; () banked
 20199  004858  6FB5               	movwf	(??_oled_putChar+2)& (0+255),b
 20200  00485A  6BB6               	clrf	(??_oled_putChar+3)& (0+255),b
 20201  00485C  0100               	movlb	0	; () banked
 20202  00485E  90D8               	bcf	status,0,c
 20203  004860  37B5               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 20204  004862  37B6               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 20205  004864  0100               	movlb	0	; () banked
 20206  004866  90D8               	bcf	status,0,c
 20207  004868  37B5               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 20208  00486A  37B6               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 20209  00486C  0100               	movlb	0	; () banked
 20210  00486E  90D8               	bcf	status,0,c
 20211  004870  37B5               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 20212  004872  37B6               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 20213  004874  0100               	movlb	0	; () banked
 20214  004876  51B3               	movf	??_oled_putChar& (0+255),w,b
 20215  004878  0100               	movlb	0	; () banked
 20216  00487A  27B5               	addwf	(??_oled_putChar+2)& (0+255),f,b
 20217  00487C  0100               	movlb	0	; () banked
 20218  00487E  51B4               	movf	(??_oled_putChar+1)& (0+255),w,b
 20219  004880  0100               	movlb	0	; () banked
 20220  004882  23B6               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 20221  004884  C0F4  F0B7         	movff	_selectedFont,??_oled_putChar+4
 20222  004888  C0F5  F0B8         	movff	_selectedFont+1,??_oled_putChar+5
 20223  00488C  0100               	movlb	0	; () banked
 20224  00488E  51B5               	movf	(??_oled_putChar+2)& (0+255),w,b
 20225  004890  0100               	movlb	0	; () banked
 20226  004892  27B7               	addwf	(??_oled_putChar+4)& (0+255),f,b
 20227  004894  0100               	movlb	0	; () banked
 20228  004896  51B6               	movf	(??_oled_putChar+3)& (0+255),w,b
 20229  004898  0100               	movlb	0	; () banked
 20230  00489A  23B8               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 20231  00489C  50F3               	movf	prodl,w,c
 20232  00489E  0100               	movlb	0	; () banked
 20233  0048A0  27B7               	addwf	(??_oled_putChar+4)& (0+255),f,b
 20234  0048A2  50F4               	movf	prodh,w,c
 20235  0048A4  0100               	movlb	0	; () banked
 20236  0048A6  23B8               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 20237  0048A8  C0B7  FFF6         	movff	??_oled_putChar+4,tblptrl
 20238  0048AC  C0B8  FFF7         	movff	??_oled_putChar+5,tblptrh
 20239  0048B0                     	if	0	;tblptru may be non-zero
 20240  0048B0                     	endif
 20241  0048B0                     	if	0	;tblptru may be non-zero
 20242  0048B0                     	endif
 20243  0048B0  0008               	tblrd		*
 20244  0048B2  50F5               	movf	tablat,w,c
 20245  0048B4  EC6E  F02F         	call	_oled_writeData
 20246  0048B8  0100               	movlb	0	; () banked
 20247  0048BA  2BBA               	incf	oled_putChar@index& (0+255),f,b
 20248                           
 20249                           ; BSR set to: 0
 20250  0048BC  0E07               	movlw	7
 20251  0048BE  0100               	movlb	0	; () banked
 20252  0048C0  65BA               	cpfsgt	oled_putChar@index& (0+255),b
 20253  0048C2  D7BE               	goto	l11046
 20254  0048C4  0012               	return	
 20255                           
 20256                           ; BSR set to: 0
 20257                           
 20258                           ; BSR set to: 0
 20259  0048C6  0012               	return		;funcret
 20260  0048C8                     __end_of_oled_putChar:
 20261                           	opt stack 0
 20262                           tblptru	equ	0xFF8
 20263                           tblptrh	equ	0xFF7
 20264                           tblptrl	equ	0xFF6
 20265                           tablat	equ	0xFF5
 20266                           prodh	equ	0xFF4
 20267                           prodl	equ	0xFF3
 20268                           intcon	equ	0xFF2
 20269                           intcon3	equ	0xFF0
 20270                           indf0	equ	0xFEF
 20271                           postinc0	equ	0xFEE
 20272                           fsr0h	equ	0xFEA
 20273                           fsr0l	equ	0xFE9
 20274                           wreg	equ	0xFE8
 20275                           indf1	equ	0xFE7
 20276                           postdec1	equ	0xFE5
 20277                           fsr1h	equ	0xFE2
 20278                           fsr1l	equ	0xFE1
 20279                           indf2	equ	0xFDF
 20280                           fsr2h	equ	0xFDA
 20281                           fsr2l	equ	0xFD9
 20282                           status	equ	0xFD8
 20283                           
 20284 ;; *************** function _oled_writeData *****************
 20285 ;; Defined at:
 20286 ;;		line 442 in file "../Includes/Drivers/SSD1306oLED.c"
 20287 ;; Parameters:    Size  Location     Type
 20288 ;;  data            1    wreg     unsigned char 
 20289 ;; Auto vars:     Size  Location     Type
 20290 ;;  data            1    0[BANK0 ] unsigned char 
 20291 ;; Return value:  Size  Location     Type
 20292 ;;		None               void
 20293 ;; Registers used:
 20294 ;;		wreg
 20295 ;; Tracked objects:
 20296 ;;		On entry : 0/0
 20297 ;;		On exit  : 0/0
 20298 ;;		Unchanged: 0/0
 20299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20300 ;;      Params:         0       0       0       0       0       0       0       0       0
 20301 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20302 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20303 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20304 ;;Total ram usage:        1 bytes
 20305 ;; Hardware stack levels used:    1
 20306 ;; Hardware stack levels required when called:   11
 20307 ;; This function calls:
 20308 ;;		Nothing
 20309 ;; This function is called by:
 20310 ;;		_oled_putChar
 20311 ;; This function uses a non-reentrant model
 20312 ;;
 20313                           
 20314                           	psect	text74
 20315  005EDC                     __ptext74:
 20316                           	opt stack 0
 20317  005EDC                     _oled_writeData:
 20318                           	opt stack 15
 20319                           
 20320                           ; BSR set to: 0
 20321                           ;incstack = 0
 20322                           ;oled_writeData@data stored from wreg
 20323  005EDC  0100               	movlb	0	; () banked
 20324  005EDE  6FAF               	movwf	oled_writeData@data& (0+255),b
 20325                           
 20326                           ; BSR set to: 0
 20327                           ;SSD1306oLED.c: 444: LATBbits.LATB4=0;
 20328  005EE0  988A               	bcf	3978,4,c	;volatile
 20329                           
 20330                           ;SSD1306oLED.c: 445: LATCbits.LATC0=1;
 20331  005EE2  808B               	bsf	3979,0,c	;volatile
 20332                           
 20333                           ; BSR set to: 0
 20334                           ;SSD1306oLED.c: 446: LATD=data;
 20335  005EE4  C0AF  FF8C         	movff	oled_writeData@data,3980	;volatile
 20336                           
 20337                           ; BSR set to: 0
 20338                           ;SSD1306oLED.c: 447: LATCbits.LATC1=0;
 20339  005EE8  928B               	bcf	3979,1,c	;volatile
 20340                           
 20341                           ; BSR set to: 0
 20342                           ;SSD1306oLED.c: 448: __nop();
 20343  005EEA  F000               	nop	
 20344                           
 20345                           ;SSD1306oLED.c: 449: LATCbits.LATC1=1;
 20346  005EEC  828B               	bsf	3979,1,c	;volatile
 20347                           
 20348                           ;SSD1306oLED.c: 450: LATBbits.LATB4=1;
 20349  005EEE  888A               	bsf	3978,4,c	;volatile
 20350  005EF0  0012               	return	
 20351                           
 20352                           ;SSD1306oLED.c: 451: return;
 20353  005EF2  0012               	return		;funcret
 20354  005EF4                     __end_of_oled_writeData:
 20355                           	opt stack 0
 20356                           tblptru	equ	0xFF8
 20357                           tblptrh	equ	0xFF7
 20358                           tblptrl	equ	0xFF6
 20359                           tablat	equ	0xFF5
 20360                           prodh	equ	0xFF4
 20361                           prodl	equ	0xFF3
 20362                           intcon	equ	0xFF2
 20363                           intcon3	equ	0xFF0
 20364                           indf0	equ	0xFEF
 20365                           postinc0	equ	0xFEE
 20366                           fsr0h	equ	0xFEA
 20367                           fsr0l	equ	0xFE9
 20368                           wreg	equ	0xFE8
 20369                           indf1	equ	0xFE7
 20370                           postdec1	equ	0xFE5
 20371                           fsr1h	equ	0xFE2
 20372                           fsr1l	equ	0xFE1
 20373                           indf2	equ	0xFDF
 20374                           fsr2h	equ	0xFDA
 20375                           fsr2l	equ	0xFD9
 20376                           status	equ	0xFD8
 20377                           
 20378 ;; *************** function _Set_Page_Address *****************
 20379 ;; Defined at:
 20380 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 20381 ;; Parameters:    Size  Location     Type
 20382 ;;  address         1    wreg     unsigned char 
 20383 ;; Auto vars:     Size  Location     Type
 20384 ;;  address         1    1[BANK0 ] unsigned char 
 20385 ;; Return value:  Size  Location     Type
 20386 ;;		None               void
 20387 ;; Registers used:
 20388 ;;		wreg, status,2, status,0, cstack
 20389 ;; Tracked objects:
 20390 ;;		On entry : 0/0
 20391 ;;		On exit  : 0/0
 20392 ;;		Unchanged: 0/0
 20393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20394 ;;      Params:         0       0       0       0       0       0       0       0       0
 20395 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20396 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20397 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20398 ;;Total ram usage:        1 bytes
 20399 ;; Hardware stack levels used:    1
 20400 ;; Hardware stack levels required when called:   12
 20401 ;; This function calls:
 20402 ;;		_oled_writeCommand
 20403 ;; This function is called by:
 20404 ;;		_oled_putChar
 20405 ;; This function uses a non-reentrant model
 20406 ;;
 20407                           
 20408                           	psect	text75
 20409  005E90                     __ptext75:
 20410                           	opt stack 0
 20411  005E90                     _Set_Page_Address:
 20412                           	opt stack 14
 20413                           
 20414                           ;incstack = 0
 20415                           ;Set_Page_Address@address stored from wreg
 20416  005E90  0100               	movlb	0	; () banked
 20417  005E92  6FB0               	movwf	Set_Page_Address@address& (0+255),b
 20418                           
 20419                           ; BSR set to: 0
 20420                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 20421  005E94  0100               	movlb	0	; () banked
 20422  005E96  51B0               	movf	Set_Page_Address@address& (0+255),w,b
 20423  005E98  09B0               	iorlw	176
 20424  005E9A  0100               	movlb	0	; () banked
 20425  005E9C  6FB0               	movwf	Set_Page_Address@address& (0+255),b
 20426                           
 20427                           ; BSR set to: 0
 20428                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 20429  005E9E  0100               	movlb	0	; () banked
 20430  005EA0  51B0               	movf	Set_Page_Address@address& (0+255),w,b
 20431  005EA2  EC7A  F02F         	call	_oled_writeCommand
 20432  005EA6  0012               	return	
 20433                           
 20434                           ;SSD1306oLED.c: 245: return;
 20435  005EA8  0012               	return		;funcret
 20436  005EAA                     __end_of_Set_Page_Address:
 20437                           	opt stack 0
 20438                           tblptru	equ	0xFF8
 20439                           tblptrh	equ	0xFF7
 20440                           tblptrl	equ	0xFF6
 20441                           tablat	equ	0xFF5
 20442                           prodh	equ	0xFF4
 20443                           prodl	equ	0xFF3
 20444                           intcon	equ	0xFF2
 20445                           intcon3	equ	0xFF0
 20446                           indf0	equ	0xFEF
 20447                           postinc0	equ	0xFEE
 20448                           fsr0h	equ	0xFEA
 20449                           fsr0l	equ	0xFE9
 20450                           wreg	equ	0xFE8
 20451                           indf1	equ	0xFE7
 20452                           postdec1	equ	0xFE5
 20453                           fsr1h	equ	0xFE2
 20454                           fsr1l	equ	0xFE1
 20455                           indf2	equ	0xFDF
 20456                           fsr2h	equ	0xFDA
 20457                           fsr2l	equ	0xFD9
 20458                           status	equ	0xFD8
 20459                           
 20460 ;; *************** function _Set_Column_Address *****************
 20461 ;; Defined at:
 20462 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 20463 ;; Parameters:    Size  Location     Type
 20464 ;;  address         1    wreg     unsigned char 
 20465 ;; Auto vars:     Size  Location     Type
 20466 ;;  address         1    1[BANK0 ] unsigned char 
 20467 ;; Return value:  Size  Location     Type
 20468 ;;		None               void
 20469 ;; Registers used:
 20470 ;;		wreg, status,2, status,0, cstack
 20471 ;; Tracked objects:
 20472 ;;		On entry : 0/0
 20473 ;;		On exit  : 0/0
 20474 ;;		Unchanged: 0/0
 20475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20476 ;;      Params:         0       0       0       0       0       0       0       0       0
 20477 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20478 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20479 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20480 ;;Total ram usage:        1 bytes
 20481 ;; Hardware stack levels used:    1
 20482 ;; Hardware stack levels required when called:   12
 20483 ;; This function calls:
 20484 ;;		_oled_writeCommand
 20485 ;; This function is called by:
 20486 ;;		_oled_putChar
 20487 ;; This function uses a non-reentrant model
 20488 ;;
 20489                           
 20490                           	psect	text76
 20491  005E58                     __ptext76:
 20492                           	opt stack 0
 20493  005E58                     _Set_Column_Address:
 20494                           	opt stack 14
 20495                           
 20496                           ;incstack = 0
 20497                           ;Set_Column_Address@address stored from wreg
 20498  005E58  0100               	movlb	0	; () banked
 20499  005E5A  6FB0               	movwf	Set_Column_Address@address& (0+255),b
 20500                           
 20501                           ; BSR set to: 0
 20502                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 20503  005E5C  0100               	movlb	0	; () banked
 20504  005E5E  39B0               	swapf	Set_Column_Address@address& (0+255),w,b
 20505  005E60  0B0F               	andlw	15
 20506  005E62  0910               	iorlw	16
 20507  005E64  EC7A  F02F         	call	_oled_writeCommand
 20508                           
 20509                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 20510  005E68  0100               	movlb	0	; () banked
 20511  005E6A  51B0               	movf	Set_Column_Address@address& (0+255),w,b
 20512  005E6C  0B0F               	andlw	15
 20513  005E6E  EC7A  F02F         	call	_oled_writeCommand
 20514  005E72  0012               	return	
 20515                           
 20516                           ;SSD1306oLED.c: 253: return;
 20517  005E74  0012               	return		;funcret
 20518  005E76                     __end_of_Set_Column_Address:
 20519                           	opt stack 0
 20520                           tblptru	equ	0xFF8
 20521                           tblptrh	equ	0xFF7
 20522                           tblptrl	equ	0xFF6
 20523                           tablat	equ	0xFF5
 20524                           prodh	equ	0xFF4
 20525                           prodl	equ	0xFF3
 20526                           intcon	equ	0xFF2
 20527                           intcon3	equ	0xFF0
 20528                           indf0	equ	0xFEF
 20529                           postinc0	equ	0xFEE
 20530                           fsr0h	equ	0xFEA
 20531                           fsr0l	equ	0xFE9
 20532                           wreg	equ	0xFE8
 20533                           indf1	equ	0xFE7
 20534                           postdec1	equ	0xFE5
 20535                           fsr1h	equ	0xFE2
 20536                           fsr1l	equ	0xFE1
 20537                           indf2	equ	0xFDF
 20538                           fsr2h	equ	0xFDA
 20539                           fsr2l	equ	0xFD9
 20540                           status	equ	0xFD8
 20541                           
 20542 ;; *************** function _oled_writeCommand *****************
 20543 ;; Defined at:
 20544 ;;		line 430 in file "../Includes/Drivers/SSD1306oLED.c"
 20545 ;; Parameters:    Size  Location     Type
 20546 ;;  command         1    wreg     unsigned char 
 20547 ;; Auto vars:     Size  Location     Type
 20548 ;;  command         1    0[BANK0 ] unsigned char 
 20549 ;; Return value:  Size  Location     Type
 20550 ;;		None               void
 20551 ;; Registers used:
 20552 ;;		wreg
 20553 ;; Tracked objects:
 20554 ;;		On entry : 0/0
 20555 ;;		On exit  : 0/0
 20556 ;;		Unchanged: 0/0
 20557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20558 ;;      Params:         0       0       0       0       0       0       0       0       0
 20559 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20560 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20561 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20562 ;;Total ram usage:        1 bytes
 20563 ;; Hardware stack levels used:    1
 20564 ;; Hardware stack levels required when called:   11
 20565 ;; This function calls:
 20566 ;;		Nothing
 20567 ;; This function is called by:
 20568 ;;		_Set_Page_Address
 20569 ;;		_Set_Column_Address
 20570 ;;		_oled_devInit
 20571 ;;		_oled_setDisplay
 20572 ;;		_oled_displayOff
 20573 ;;		_oled_setContrastControlRegister
 20574 ;;		_oled_initialDispayLine
 20575 ;;		_oled_powerControl
 20576 ;;		_oled_regulorResistorSelect
 20577 ;; This function uses a non-reentrant model
 20578 ;;
 20579                           
 20580                           	psect	text77
 20581  005EF4                     __ptext77:
 20582                           	opt stack 0
 20583  005EF4                     _oled_writeCommand:
 20584                           	opt stack 14
 20585                           
 20586                           ;incstack = 0
 20587                           ;oled_writeCommand@command stored from wreg
 20588  005EF4  0100               	movlb	0	; () banked
 20589  005EF6  6FAF               	movwf	oled_writeCommand@command& (0+255),b
 20590                           
 20591                           ; BSR set to: 0
 20592                           ;SSD1306oLED.c: 432: LATBbits.LATB4=0;
 20593  005EF8  988A               	bcf	3978,4,c	;volatile
 20594                           
 20595                           ;SSD1306oLED.c: 433: LATCbits.LATC0=0;
 20596  005EFA  908B               	bcf	3979,0,c	;volatile
 20597                           
 20598                           ; BSR set to: 0
 20599                           ;SSD1306oLED.c: 434: LATD=command;
 20600  005EFC  C0AF  FF8C         	movff	oled_writeCommand@command,3980	;volatile
 20601                           
 20602                           ; BSR set to: 0
 20603                           ;SSD1306oLED.c: 435: LATCbits.LATC1=0;
 20604  005F00  928B               	bcf	3979,1,c	;volatile
 20605                           
 20606                           ; BSR set to: 0
 20607                           ;SSD1306oLED.c: 436: __nop();
 20608  005F02  F000               	nop	
 20609                           
 20610                           ;SSD1306oLED.c: 437: LATCbits.LATC1=1;
 20611  005F04  828B               	bsf	3979,1,c	;volatile
 20612                           
 20613                           ;SSD1306oLED.c: 438: LATBbits.LATB4=1;
 20614  005F06  888A               	bsf	3978,4,c	;volatile
 20615  005F08  0012               	return	
 20616                           
 20617                           ;SSD1306oLED.c: 439: return;
 20618  005F0A  0012               	return		;funcret
 20619  005F0C                     __end_of_oled_writeCommand:
 20620                           	opt stack 0
 20621                           tblptru	equ	0xFF8
 20622                           tblptrh	equ	0xFF7
 20623                           tblptrl	equ	0xFF6
 20624                           tablat	equ	0xFF5
 20625                           prodh	equ	0xFF4
 20626                           prodl	equ	0xFF3
 20627                           intcon	equ	0xFF2
 20628                           intcon3	equ	0xFF0
 20629                           indf0	equ	0xFEF
 20630                           postinc0	equ	0xFEE
 20631                           fsr0h	equ	0xFEA
 20632                           fsr0l	equ	0xFE9
 20633                           wreg	equ	0xFE8
 20634                           indf1	equ	0xFE7
 20635                           postdec1	equ	0xFE5
 20636                           fsr1h	equ	0xFE2
 20637                           fsr1l	equ	0xFE1
 20638                           indf2	equ	0xFDF
 20639                           fsr2h	equ	0xFDA
 20640                           fsr2l	equ	0xFD9
 20641                           status	equ	0xFD8
 20642                           
 20643 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 20644 ;; Defined at:
 20645 ;;		line 162 in file "../Includes/Board/USBapp.c"
 20646 ;; Parameters:    Size  Location     Type
 20647 ;;		None
 20648 ;; Auto vars:     Size  Location     Type
 20649 ;;		None
 20650 ;; Return value:  Size  Location     Type
 20651 ;;		None               void
 20652 ;; Registers used:
 20653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20654 ;; Tracked objects:
 20655 ;;		On entry : 0/0
 20656 ;;		On exit  : 0/0
 20657 ;;		Unchanged: 0/0
 20658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20659 ;;      Params:         0       0       0       0       0       0       0       0       0
 20660 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20661 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20662 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20663 ;;Total ram usage:        1 bytes
 20664 ;; Hardware stack levels used:    1
 20665 ;; Hardware stack levels required when called:   13
 20666 ;; This function calls:
 20667 ;;		_CDCTxService
 20668 ;;		_EUSART_Read
 20669 ;;		_EUSART_Write
 20670 ;;		_MOTEapp_setResponseReady
 20671 ;;		_USBapp_getrxByteFlag
 20672 ;;		_getsUSBUSART
 20673 ;;		_putUSBUSART
 20674 ;; This function is called by:
 20675 ;;		_USBapp_Handler
 20676 ;; This function uses a non-reentrant model
 20677 ;;
 20678                           
 20679                           	psect	text78
 20680  003932                     __ptext78:
 20681                           	opt stack 0
 20682  003932                     _USBapp_DeviceCdcEmulatorHandler:
 20683                           	opt stack 16
 20684                           
 20685                           ;USBapp.c: 165: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 20686                           
 20687                           ;incstack = 0
 20688  003932  0E1F               	movlw	31
 20689  003934  0100               	movlb	0	; () banked
 20690  003936  6589               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 20691  003938  0012               	return	
 20692                           
 20693                           ; BSR set to: 0
 20694  00393A  B260               	btfsc	3936,1,c	;volatile
 20695  00393C  0012               	return	
 20696  00393E  D001               	goto	l13264
 20697                           
 20698                           ; BSR set to: 0
 20699                           ;USBapp.c: 166: return;
 20700  003940  0012               	return	
 20701  003942                     l13264:
 20702                           
 20703                           ; BSR set to: 0
 20704                           ;USBapp.c: 168: if (RS232_Out_Data_Rdy == 0)
 20705  003942  5046               	movf	_RS232_Out_Data_Rdy,w,c
 20706  003944  A4D8               	btfss	status,2,c
 20707  003946  D014               	goto	l874
 20708                           
 20709                           ; BSR set to: 0
 20710                           ;USBapp.c: 169: {
 20711                           ;USBapp.c: 170: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 20712  003948  0E28               	movlw	low _USB_Buffer
 20713  00394A  0100               	movlb	0	; () banked
 20714  00394C  6FB6               	movwf	getsUSBUSART@buffer& (0+255),b
 20715  00394E  0E01               	movlw	high _USB_Buffer
 20716  003950  0100               	movlb	0	; () banked
 20717  003952  6FB7               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 20718  003954  0E40               	movlw	64
 20719  003956  0100               	movlb	0	; () banked
 20720  003958  6FB8               	movwf	getsUSBUSART@len& (0+255),b
 20721  00395A  EC32  F01B         	call	_getsUSBUSART	;wreg free
 20722  00395E  6E44               	movwf	_LastRS232Out,c
 20723                           
 20724                           ;USBapp.c: 171: if(LastRS232Out > 0)
 20725  003960  5044               	movf	_LastRS232Out,w,c
 20726  003962  B4D8               	btfsc	status,2,c
 20727  003964  D005               	goto	l874
 20728                           
 20729                           ;USBapp.c: 172: {
 20730                           ;USBapp.c: 173: RS232_Out_Data_Rdy = 1;
 20731  003966  0E01               	movlw	1
 20732  003968  6E46               	movwf	_RS232_Out_Data_Rdy,c
 20733                           
 20734                           ;USBapp.c: 174: RS232cp = 0;
 20735  00396A  0E00               	movlw	0
 20736  00396C  6E47               	movwf	_RS232cp,c
 20737  00396E  D000               	goto	l874
 20738  003970                     l874:
 20739                           
 20740                           ;USBapp.c: 175: }
 20741                           ;USBapp.c: 176: }
 20742                           ;USBapp.c: 179: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 20743  003970  5046               	movf	_RS232_Out_Data_Rdy,w,c
 20744  003972  A4D8               	btfss	status,2,c
 20745  003974  A2AC               	btfss	4012,1,c	;volatile
 20746  003976  D013               	goto	l876
 20747                           
 20748                           ;USBapp.c: 180: {
 20749                           ;USBapp.c: 182: EUSART_Write(USB_Buffer[RS232cp]);
 20750  003978  5047               	movf	_RS232cp,w,c
 20751  00397A  0D01               	mullw	1
 20752  00397C  0E28               	movlw	low _USB_Buffer
 20753  00397E  24F3               	addwf	prodl,w,c
 20754  003980  6ED9               	movwf	fsr2l,c
 20755  003982  0E01               	movlw	high _USB_Buffer
 20756  003984  20F4               	addwfc	prodh,w,c
 20757  003986  6EDA               	movwf	fsr2h,c
 20758  003988  50DF               	movf	indf2,w,c
 20759  00398A  EC37  F02C         	call	_EUSART_Write
 20760                           
 20761                           ;USBapp.c: 183: ++RS232cp;
 20762  00398E  2A47               	incf	_RS232cp,f,c
 20763                           
 20764                           ;USBapp.c: 184: if (RS232cp == LastRS232Out)
 20765  003990  5044               	movf	_LastRS232Out,w,c
 20766  003992  1847               	xorwf	_RS232cp,w,c
 20767  003994  A4D8               	btfss	status,2,c
 20768  003996  D003               	goto	l876
 20769                           
 20770                           ;USBapp.c: 185: RS232_Out_Data_Rdy = 0;
 20771  003998  0E00               	movlw	0
 20772  00399A  6E46               	movwf	_RS232_Out_Data_Rdy,c
 20773  00399C  D000               	goto	l876
 20774  00399E                     l876:
 20775                           
 20776                           ;USBapp.c: 186: }
 20777                           ;USBapp.c: 189: if ((eusartRxCount))
 20778  00399E  504D               	movf	_eusartRxCount,w,c	;volatile
 20779  0039A0  B4D8               	btfsc	status,2,c
 20780  0039A2  D025               	goto	l13296
 20781                           
 20782                           ;USBapp.c: 190: {
 20783                           ;USBapp.c: 191: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 20784  0039A4  EC25  F030         	call	_USBapp_getrxByteFlag	;wreg free
 20785  0039A8  0900               	iorlw	0
 20786  0039AA  B4D8               	btfsc	status,2,c
 20787  0039AC  D020               	goto	l13296
 20788  0039AE  0E3F               	movlw	63
 20789  0039B0  6045               	cpfslt	_NextUSBOut,c
 20790  0039B2  D01D               	goto	l13296
 20791                           
 20792                           ;USBapp.c: 192: {
 20793                           ;USBapp.c: 193: __nop();
 20794  0039B4  F000               	nop	
 20795                           
 20796                           ;USBapp.c: 194: USB_Buffer[NextUSBOut] = EUSART_Read();
 20797  0039B6  EC11  F02C         	call	_EUSART_Read	;wreg free
 20798  0039BA  0100               	movlb	0	; () banked
 20799  0039BC  6FBC               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 20800  0039BE  5045               	movf	_NextUSBOut,w,c
 20801  0039C0  0D01               	mullw	1
 20802  0039C2  0E28               	movlw	low _USB_Buffer
 20803  0039C4  24F3               	addwf	prodl,w,c
 20804  0039C6  6ED9               	movwf	fsr2l,c
 20805  0039C8  0E01               	movlw	high _USB_Buffer
 20806  0039CA  20F4               	addwfc	prodh,w,c
 20807  0039CC  6EDA               	movwf	fsr2h,c
 20808  0039CE  C0BC  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 20809                           
 20810                           ; BSR set to: 0
 20811                           ;USBapp.c: 195: ++NextUSBOut;
 20812  0039D2  2A45               	incf	_NextUSBOut,f,c
 20813                           
 20814                           ; BSR set to: 0
 20815                           ;USBapp.c: 196: USB_Buffer[NextUSBOut] = 0;
 20816  0039D4  5045               	movf	_NextUSBOut,w,c
 20817  0039D6  0D01               	mullw	1
 20818  0039D8  0E28               	movlw	low _USB_Buffer
 20819  0039DA  24F3               	addwf	prodl,w,c
 20820  0039DC  6ED9               	movwf	fsr2l,c
 20821  0039DE  0E01               	movlw	high _USB_Buffer
 20822  0039E0  20F4               	addwfc	prodh,w,c
 20823  0039E2  6EDA               	movwf	fsr2h,c
 20824  0039E4  0E00               	movlw	0
 20825  0039E6  6EDF               	movwf	indf2,c
 20826                           
 20827                           ; BSR set to: 0
 20828                           ;USBapp.c: 197: rxByteFlag = 0;
 20829  0039E8  0E00               	movlw	0
 20830  0039EA  6E50               	movwf	_rxByteFlag,c	;volatile
 20831                           
 20832                           ; BSR set to: 0
 20833  0039EC  D000               	goto	l13296
 20834  0039EE                     l13296:
 20835                           
 20836                           ;USBapp.c: 198: }
 20837                           ;USBapp.c: 199: }
 20838                           ;USBapp.c: 203: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 20839  0039EE  504A               	movf	_cdc_trf_state,w,c
 20840  0039F0  A4D8               	btfss	status,2,c
 20841  0039F2  D012               	goto	l13306
 20842  0039F4  5045               	movf	_NextUSBOut,w,c
 20843  0039F6  B4D8               	btfsc	status,2,c
 20844  0039F8  D00F               	goto	l13306
 20845                           
 20846                           ;USBapp.c: 204: {
 20847                           ;USBapp.c: 205: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 20848  0039FA  0E28               	movlw	low _USB_Buffer
 20849  0039FC  0100               	movlb	0	; () banked
 20850  0039FE  6FAF               	movwf	putUSBUSART@data& (0+255),b
 20851  003A00  0E01               	movlw	high _USB_Buffer
 20852  003A02  0100               	movlb	0	; () banked
 20853  003A04  6FB0               	movwf	(putUSBUSART@data+1)& (0+255),b
 20854  003A06  C045  F0B1         	movff	_NextUSBOut,putUSBUSART@length
 20855  003A0A  ECE8  F02E         	call	_putUSBUSART	;wreg free
 20856                           
 20857                           ;USBapp.c: 206: MOTEapp_setResponseReady();
 20858  003A0E  EC21  F030         	call	_MOTEapp_setResponseReady	;wreg free
 20859                           
 20860                           ;USBapp.c: 207: NextUSBOut = 0;
 20861  003A12  0E00               	movlw	0
 20862  003A14  6E45               	movwf	_NextUSBOut,c
 20863  003A16  D000               	goto	l13306
 20864  003A18                     l13306:
 20865                           
 20866                           ;USBapp.c: 208: }
 20867                           ;USBapp.c: 210: CDCTxService();
 20868  003A18  ECB0  F010         	call	_CDCTxService	;wreg free
 20869  003A1C  0012               	return		;funcret
 20870  003A1E                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 20871                           	opt stack 0
 20872                           tblptru	equ	0xFF8
 20873                           tblptrh	equ	0xFF7
 20874                           tblptrl	equ	0xFF6
 20875                           tablat	equ	0xFF5
 20876                           prodh	equ	0xFF4
 20877                           prodl	equ	0xFF3
 20878                           intcon	equ	0xFF2
 20879                           intcon3	equ	0xFF0
 20880                           indf0	equ	0xFEF
 20881                           postinc0	equ	0xFEE
 20882                           fsr0h	equ	0xFEA
 20883                           fsr0l	equ	0xFE9
 20884                           wreg	equ	0xFE8
 20885                           indf1	equ	0xFE7
 20886                           postdec1	equ	0xFE5
 20887                           fsr1h	equ	0xFE2
 20888                           fsr1l	equ	0xFE1
 20889                           indf2	equ	0xFDF
 20890                           fsr2h	equ	0xFDA
 20891                           fsr2l	equ	0xFD9
 20892                           status	equ	0xFD8
 20893                           
 20894 ;; *************** function _putUSBUSART *****************
 20895 ;; Defined at:
 20896 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 20897 ;; Parameters:    Size  Location     Type
 20898 ;;  data            2    0[BANK0 ] PTR unsigned char 
 20899 ;;		 -> USB_Buffer(64), 
 20900 ;;  length          1    2[BANK0 ] unsigned char 
 20901 ;; Auto vars:     Size  Location     Type
 20902 ;;		None
 20903 ;; Return value:  Size  Location     Type
 20904 ;;		None               void
 20905 ;; Registers used:
 20906 ;;		wreg, status,2, status,0
 20907 ;; Tracked objects:
 20908 ;;		On entry : 0/0
 20909 ;;		On exit  : 0/0
 20910 ;;		Unchanged: 0/0
 20911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20912 ;;      Params:         0       3       0       0       0       0       0       0       0
 20913 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20914 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20915 ;;      Totals:         0       3       0       0       0       0       0       0       0
 20916 ;;Total ram usage:        3 bytes
 20917 ;; Hardware stack levels used:    1
 20918 ;; Hardware stack levels required when called:   11
 20919 ;; This function calls:
 20920 ;;		Nothing
 20921 ;; This function is called by:
 20922 ;;		_USBapp_DeviceCdcEmulatorHandler
 20923 ;; This function uses a non-reentrant model
 20924 ;;
 20925                           
 20926                           	psect	text79
 20927  005DD0                     __ptext79:
 20928                           	opt stack 0
 20929  005DD0                     _putUSBUSART:
 20930                           	opt stack 17
 20931                           
 20932                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 20933                           
 20934                           ;incstack = 0
 20935  005DD0  94A3               	bcf	4003,2,c	;volatile
 20936                           
 20937                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 20938  005DD2  504A               	movf	_cdc_trf_state,w,c
 20939  005DD4  A4D8               	btfss	status,2,c
 20940  005DD6  D00C               	goto	l12194
 20941                           
 20942                           ;usb_device_cdc.c: 530: {
 20943                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 20944  005DD8  C0AF  F06F         	movff	putUSBUSART@data,_pCDCSrc
 20945  005DDC  C0B0  F070         	movff	putUSBUSART@data+1,_pCDCSrc+1
 20946  005DE0  C0B1  F091         	movff	putUSBUSART@length,_cdc_tx_len
 20947  005DE4  0E01               	movlw	1
 20948  005DE6  0100               	movlb	0	; () banked
 20949  005DE8  6F8F               	movwf	_cdc_mem_type& (0+255),b
 20950                           
 20951                           ; BSR set to: 0
 20952  005DEA  0E01               	movlw	1
 20953  005DEC  6E4A               	movwf	_cdc_trf_state,c
 20954  005DEE  D000               	goto	l12194
 20955  005DF0                     l12194:
 20956                           
 20957                           ;usb_device_cdc.c: 532: }
 20958                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 20959  005DF0  84A3               	bsf	4003,2,c	;volatile
 20960  005DF2  0012               	return		;funcret
 20961  005DF4                     __end_of_putUSBUSART:
 20962                           	opt stack 0
 20963                           tblptru	equ	0xFF8
 20964                           tblptrh	equ	0xFF7
 20965                           tblptrl	equ	0xFF6
 20966                           tablat	equ	0xFF5
 20967                           prodh	equ	0xFF4
 20968                           prodl	equ	0xFF3
 20969                           intcon	equ	0xFF2
 20970                           intcon3	equ	0xFF0
 20971                           indf0	equ	0xFEF
 20972                           postinc0	equ	0xFEE
 20973                           fsr0h	equ	0xFEA
 20974                           fsr0l	equ	0xFE9
 20975                           wreg	equ	0xFE8
 20976                           indf1	equ	0xFE7
 20977                           postdec1	equ	0xFE5
 20978                           fsr1h	equ	0xFE2
 20979                           fsr1l	equ	0xFE1
 20980                           indf2	equ	0xFDF
 20981                           fsr2h	equ	0xFDA
 20982                           fsr2l	equ	0xFD9
 20983                           status	equ	0xFD8
 20984                           
 20985 ;; *************** function _getsUSBUSART *****************
 20986 ;; Defined at:
 20987 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 20988 ;; Parameters:    Size  Location     Type
 20989 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 20990 ;;		 -> USB_Buffer(64), 
 20991 ;;  len             1    9[BANK0 ] unsigned char 
 20992 ;; Auto vars:     Size  Location     Type
 20993 ;;		None
 20994 ;; Return value:  Size  Location     Type
 20995 ;;                  1    wreg      unsigned char 
 20996 ;; Registers used:
 20997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20998 ;; Tracked objects:
 20999 ;;		On entry : 0/0
 21000 ;;		On exit  : 0/0
 21001 ;;		Unchanged: 0/0
 21002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21003 ;;      Params:         0       3       0       0       0       0       0       0       0
 21004 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21005 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21006 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21007 ;;Total ram usage:        6 bytes
 21008 ;; Hardware stack levels used:    1
 21009 ;; Hardware stack levels required when called:   12
 21010 ;; This function calls:
 21011 ;;		_USBTransferOnePacket
 21012 ;; This function is called by:
 21013 ;;		_USBapp_DeviceCdcEmulatorHandler
 21014 ;; This function uses a non-reentrant model
 21015 ;;
 21016                           
 21017                           	psect	text80
 21018  003664                     __ptext80:
 21019                           	opt stack 0
 21020  003664                     _getsUSBUSART:
 21021                           	opt stack 16
 21022                           
 21023                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 21024                           
 21025                           ;incstack = 0
 21026  003664  0E00               	movlw	0
 21027  003666  0100               	movlb	0	; () banked
 21028  003668  6F90               	movwf	_cdc_rx_len& (0+255),b
 21029                           
 21030                           ; BSR set to: 0
 21031                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 21032  00366A  0100               	movlb	0	; () banked
 21033  00366C  5174               	movf	_CDCDataOutHandle& (0+255),w,b
 21034  00366E  0100               	movlb	0	; () banked
 21035  003670  1175               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 21036  003672  B4D8               	btfsc	status,2,c
 21037  003674  D013               	goto	l12156
 21038                           
 21039                           ; BSR set to: 0
 21040  003676  C074  FFD9         	movff	_CDCDataOutHandle,fsr2l
 21041  00367A  C075  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 21042  00367E  0100               	movlb	0	; () banked
 21043  003680  AEDF               	btfss	indf2,7,c
 21044  003682  D004               	goto	u10770
 21045  003684  0100               	movlb	0	; () banked
 21046  003686  6BB9               	clrf	??_getsUSBUSART& (0+255),b
 21047  003688  2BB9               	incf	??_getsUSBUSART& (0+255),f,b
 21048  00368A  D002               	goto	u10778
 21049  00368C                     u10770:
 21050  00368C  0100               	movlb	0	; () banked
 21051  00368E  6BB9               	clrf	??_getsUSBUSART& (0+255),b
 21052  003690                     u10778:
 21053  003690  0100               	movlb	0	; () banked
 21054  003692  51B9               	movf	??_getsUSBUSART& (0+255),w,b
 21055  003694  0100               	movlb	0	; () banked
 21056  003696  6FBA               	movwf	_getsUSBUSART$6440& (0+255),b
 21057  003698  6BBB               	clrf	(_getsUSBUSART$6440+1)& (0+255),b
 21058  00369A  D006               	goto	l12158
 21059  00369C                     l12156:
 21060                           
 21061                           ; BSR set to: 0
 21062  00369C  0E00               	movlw	0
 21063  00369E  0100               	movlb	0	; () banked
 21064  0036A0  6FBB               	movwf	(_getsUSBUSART$6440+1)& (0+255),b
 21065  0036A2  0E00               	movlw	0
 21066  0036A4  6FBA               	movwf	_getsUSBUSART$6440& (0+255),b
 21067  0036A6  D000               	goto	l12158
 21068  0036A8                     l12158:
 21069                           
 21070                           ; BSR set to: 0
 21071  0036A8  0100               	movlb	0	; () banked
 21072  0036AA  51BA               	movf	_getsUSBUSART$6440& (0+255),w,b
 21073  0036AC  0100               	movlb	0	; () banked
 21074  0036AE  11BB               	iorwf	(_getsUSBUSART$6440+1)& (0+255),w,b
 21075  0036B0  A4D8               	btfss	status,2,c
 21076  0036B2  D04E               	goto	l12174
 21077                           
 21078                           ; BSR set to: 0
 21079                           ;usb_device_cdc.c: 437: {
 21080                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 21081  0036B4  0100               	movlb	0	; () banked
 21082  0036B6  EE20 F001          	lfsr	2,1
 21083  0036BA  5174               	movf	_CDCDataOutHandle& (0+255),w,b
 21084  0036BC  26D9               	addwf	fsr2l,f,c
 21085  0036BE  5175               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 21086  0036C0  22DA               	addwfc	fsr2h,f,c
 21087  0036C2  0100               	movlb	0	; () banked
 21088  0036C4  51B8               	movf	getsUSBUSART@len& (0+255),w,b
 21089  0036C6  5CDE               	subwf	postinc2,w,c
 21090  0036C8  B0D8               	btfsc	status,0,c
 21091  0036CA  D00B               	goto	l12164
 21092                           
 21093                           ; BSR set to: 0
 21094                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 21095  0036CC  0100               	movlb	0	; () banked
 21096  0036CE  EE20 F001          	lfsr	2,1
 21097  0036D2  5174               	movf	_CDCDataOutHandle& (0+255),w,b
 21098  0036D4  26D9               	addwf	fsr2l,f,c
 21099  0036D6  5175               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 21100  0036D8  22DA               	addwfc	fsr2h,f,c
 21101  0036DA  50DF               	movf	indf2,w,c
 21102  0036DC  0100               	movlb	0	; () banked
 21103  0036DE  6FB8               	movwf	getsUSBUSART@len& (0+255),b
 21104  0036E0  D000               	goto	l12164
 21105  0036E2                     l12164:
 21106                           
 21107                           ; BSR set to: 0
 21108                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 21109  0036E2  0E00               	movlw	0
 21110  0036E4  0100               	movlb	0	; () banked
 21111  0036E6  6F90               	movwf	_cdc_rx_len& (0+255),b
 21112  0036E8  D019               	goto	l12170
 21113  0036EA                     l12166:
 21114                           
 21115                           ; BSR set to: 0
 21116                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 21117  0036EA  0100               	movlb	0	; () banked
 21118  0036EC  5190               	movf	_cdc_rx_len& (0+255),w,b
 21119  0036EE  0D01               	mullw	1
 21120  0036F0  0E40               	movlw	64
 21121  0036F2  24F3               	addwf	prodl,w,c
 21122  0036F4  6ED9               	movwf	fsr2l,c
 21123  0036F6  0E05               	movlw	5
 21124  0036F8  20F4               	addwfc	prodh,w,c
 21125  0036FA  6EDA               	movwf	fsr2h,c
 21126  0036FC  0100               	movlb	0	; () banked
 21127  0036FE  5190               	movf	_cdc_rx_len& (0+255),w,b
 21128  003700  0D01               	mullw	1
 21129  003702  50F3               	movf	prodl,w,c
 21130  003704  0100               	movlb	0	; () banked
 21131  003706  25B6               	addwf	getsUSBUSART@buffer& (0+255),w,b
 21132  003708  6EE1               	movwf	fsr1l,c
 21133  00370A  50F4               	movf	prodh,w,c
 21134  00370C  0100               	movlb	0	; () banked
 21135  00370E  21B7               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 21136  003710  6EE2               	movwf	fsr1h,c
 21137  003712  CFDF FFE7          	movff	indf2,indf1
 21138                           
 21139                           ; BSR set to: 0
 21140  003716  0100               	movlb	0	; () banked
 21141  003718  2B90               	incf	_cdc_rx_len& (0+255),f,b
 21142  00371A  D000               	goto	l12170
 21143  00371C                     l12170:
 21144                           
 21145                           ; BSR set to: 0
 21146  00371C  0100               	movlb	0	; () banked
 21147  00371E  51B8               	movf	getsUSBUSART@len& (0+255),w,b
 21148  003720  0100               	movlb	0	; () banked
 21149  003722  5D90               	subwf	_cdc_rx_len& (0+255),w,b
 21150  003724  A0D8               	btfss	status,0,c
 21151  003726  D7E1               	goto	l12166
 21152                           
 21153                           ; BSR set to: 0
 21154                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 21155                           
 21156                           ; BSR set to: 0
 21157  003728  0E00               	movlw	0
 21158  00372A  0100               	movlb	0	; () banked
 21159  00372C  6FAF               	movwf	USBTransferOnePacket@dir& (0+255),b
 21160  00372E  0E40               	movlw	64
 21161  003730  0100               	movlb	0	; () banked
 21162  003732  6FB0               	movwf	USBTransferOnePacket@data& (0+255),b
 21163  003734  0E05               	movlw	5
 21164  003736  0100               	movlb	0	; () banked
 21165  003738  6FB1               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21166  00373A  0E40               	movlw	64
 21167  00373C  0100               	movlb	0	; () banked
 21168  00373E  6FB2               	movwf	USBTransferOnePacket@len& (0+255),b
 21169  003740  0E02               	movlw	2
 21170  003742  ECB7  F01F         	call	_USBTransferOnePacket
 21171  003746  C0AF  F074         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 21172  00374A  C0B0  F075         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 21173  00374E  D000               	goto	l12174
 21174  003750                     l12174:
 21175                           
 21176                           ;usb_device_cdc.c: 457: }
 21177                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 21178  003750  0100               	movlb	0	; () banked
 21179  003752  5190               	movf	_cdc_rx_len& (0+255),w,b
 21180  003754  0012               	return	
 21181                           
 21182                           ; BSR set to: 0
 21183                           
 21184                           ; BSR set to: 0
 21185  003756  0012               	return		;funcret
 21186  003758                     __end_of_getsUSBUSART:
 21187                           	opt stack 0
 21188                           tblptru	equ	0xFF8
 21189                           tblptrh	equ	0xFF7
 21190                           tblptrl	equ	0xFF6
 21191                           tablat	equ	0xFF5
 21192                           prodh	equ	0xFF4
 21193                           prodl	equ	0xFF3
 21194                           intcon	equ	0xFF2
 21195                           intcon3	equ	0xFF0
 21196                           indf0	equ	0xFEF
 21197                           postinc0	equ	0xFEE
 21198                           fsr0h	equ	0xFEA
 21199                           fsr0l	equ	0xFE9
 21200                           wreg	equ	0xFE8
 21201                           indf1	equ	0xFE7
 21202                           postdec1	equ	0xFE5
 21203                           fsr1h	equ	0xFE2
 21204                           fsr1l	equ	0xFE1
 21205                           indf2	equ	0xFDF
 21206                           postinc2	equ	0xFDE
 21207                           fsr2h	equ	0xFDA
 21208                           fsr2l	equ	0xFD9
 21209                           status	equ	0xFD8
 21210                           
 21211 ;; *************** function _USBapp_getrxByteFlag *****************
 21212 ;; Defined at:
 21213 ;;		line 268 in file "../Includes/Board/USBapp.c"
 21214 ;; Parameters:    Size  Location     Type
 21215 ;;		None
 21216 ;; Auto vars:     Size  Location     Type
 21217 ;;		None
 21218 ;; Return value:  Size  Location     Type
 21219 ;;                  1    wreg      unsigned char 
 21220 ;; Registers used:
 21221 ;;		wreg, status,2
 21222 ;; Tracked objects:
 21223 ;;		On entry : 0/0
 21224 ;;		On exit  : 0/0
 21225 ;;		Unchanged: 0/0
 21226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21227 ;;      Params:         0       0       0       0       0       0       0       0       0
 21228 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21229 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21230 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21231 ;;Total ram usage:        0 bytes
 21232 ;; Hardware stack levels used:    1
 21233 ;; Hardware stack levels required when called:   11
 21234 ;; This function calls:
 21235 ;;		Nothing
 21236 ;; This function is called by:
 21237 ;;		_USBapp_DeviceCdcEmulatorHandler
 21238 ;; This function uses a non-reentrant model
 21239 ;;
 21240                           
 21241                           	psect	text81
 21242  00604A                     __ptext81:
 21243                           	opt stack 0
 21244  00604A                     _USBapp_getrxByteFlag:
 21245                           	opt stack 17
 21246                           
 21247                           ;USBapp.c: 270: return rxByteFlag;
 21248                           
 21249                           ; BSR set to: 0
 21250                           ;incstack = 0
 21251  00604A  5050               	movf	_rxByteFlag,w,c	;volatile
 21252  00604C  0012               	return	
 21253  00604E  0012               	return		;funcret
 21254  006050                     __end_of_USBapp_getrxByteFlag:
 21255                           	opt stack 0
 21256                           tblptru	equ	0xFF8
 21257                           tblptrh	equ	0xFF7
 21258                           tblptrl	equ	0xFF6
 21259                           tablat	equ	0xFF5
 21260                           prodh	equ	0xFF4
 21261                           prodl	equ	0xFF3
 21262                           intcon	equ	0xFF2
 21263                           intcon3	equ	0xFF0
 21264                           indf0	equ	0xFEF
 21265                           postinc0	equ	0xFEE
 21266                           fsr0h	equ	0xFEA
 21267                           fsr0l	equ	0xFE9
 21268                           wreg	equ	0xFE8
 21269                           indf1	equ	0xFE7
 21270                           postdec1	equ	0xFE5
 21271                           fsr1h	equ	0xFE2
 21272                           fsr1l	equ	0xFE1
 21273                           indf2	equ	0xFDF
 21274                           postinc2	equ	0xFDE
 21275                           fsr2h	equ	0xFDA
 21276                           fsr2l	equ	0xFD9
 21277                           status	equ	0xFD8
 21278                           
 21279 ;; *************** function _MOTEapp_setResponseReady *****************
 21280 ;; Defined at:
 21281 ;;		line 1101 in file "../Includes/Board/MOTEapp.c"
 21282 ;; Parameters:    Size  Location     Type
 21283 ;;		None
 21284 ;; Auto vars:     Size  Location     Type
 21285 ;;		None
 21286 ;; Return value:  Size  Location     Type
 21287 ;;		None               void
 21288 ;; Registers used:
 21289 ;;		wreg, status,2
 21290 ;; Tracked objects:
 21291 ;;		On entry : 0/0
 21292 ;;		On exit  : 0/0
 21293 ;;		Unchanged: 0/0
 21294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21295 ;;      Params:         0       0       0       0       0       0       0       0       0
 21296 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21297 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21298 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21299 ;;Total ram usage:        0 bytes
 21300 ;; Hardware stack levels used:    1
 21301 ;; Hardware stack levels required when called:   11
 21302 ;; This function calls:
 21303 ;;		Nothing
 21304 ;; This function is called by:
 21305 ;;		_USBapp_DeviceCdcEmulatorHandler
 21306 ;; This function uses a non-reentrant model
 21307 ;;
 21308                           
 21309                           	psect	text82
 21310  006042                     __ptext82:
 21311                           	opt stack 0
 21312  006042                     _MOTEapp_setResponseReady:
 21313                           	opt stack 17
 21314                           
 21315                           ;MOTEapp.c: 1103: responseReady = 1;
 21316                           
 21317                           ;incstack = 0
 21318  006042  0E01               	movlw	1
 21319  006044  0100               	movlb	0	; () banked
 21320  006046  6FA2               	movwf	_responseReady& (0+255),b
 21321                           
 21322                           ; BSR set to: 0
 21323  006048  0012               	return		;funcret
 21324  00604A                     __end_of_MOTEapp_setResponseReady:
 21325                           	opt stack 0
 21326                           tblptru	equ	0xFF8
 21327                           tblptrh	equ	0xFF7
 21328                           tblptrl	equ	0xFF6
 21329                           tablat	equ	0xFF5
 21330                           prodh	equ	0xFF4
 21331                           prodl	equ	0xFF3
 21332                           intcon	equ	0xFF2
 21333                           intcon3	equ	0xFF0
 21334                           indf0	equ	0xFEF
 21335                           postinc0	equ	0xFEE
 21336                           fsr0h	equ	0xFEA
 21337                           fsr0l	equ	0xFE9
 21338                           wreg	equ	0xFE8
 21339                           indf1	equ	0xFE7
 21340                           postdec1	equ	0xFE5
 21341                           fsr1h	equ	0xFE2
 21342                           fsr1l	equ	0xFE1
 21343                           indf2	equ	0xFDF
 21344                           postinc2	equ	0xFDE
 21345                           fsr2h	equ	0xFDA
 21346                           fsr2l	equ	0xFD9
 21347                           status	equ	0xFD8
 21348                           
 21349 ;; *************** function _EUSART_Write *****************
 21350 ;; Defined at:
 21351 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 21352 ;; Parameters:    Size  Location     Type
 21353 ;;  txData          1    wreg     unsigned char 
 21354 ;; Auto vars:     Size  Location     Type
 21355 ;;  txData          1    0[BANK0 ] unsigned char 
 21356 ;; Return value:  Size  Location     Type
 21357 ;;		None               void
 21358 ;; Registers used:
 21359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21360 ;; Tracked objects:
 21361 ;;		On entry : 0/0
 21362 ;;		On exit  : 0/0
 21363 ;;		Unchanged: 0/0
 21364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21365 ;;      Params:         0       0       0       0       0       0       0       0       0
 21366 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21367 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21368 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21369 ;;Total ram usage:        1 bytes
 21370 ;; Hardware stack levels used:    1
 21371 ;; Hardware stack levels required when called:   11
 21372 ;; This function calls:
 21373 ;;		Nothing
 21374 ;; This function is called by:
 21375 ;;		_EndLine
 21376 ;;		_sendCommand
 21377 ;;		_sendDataCommand
 21378 ;;		_USBapp_DeviceCdcEmulatorHandler
 21379 ;; This function uses a non-reentrant model
 21380 ;;
 21381                           
 21382                           	psect	text83
 21383  00586E                     __ptext83:
 21384                           	opt stack 0
 21385  00586E                     _EUSART_Write:
 21386                           	opt stack 14
 21387                           
 21388                           ; BSR set to: 0
 21389                           ;incstack = 0
 21390                           ;EUSART_Write@txData stored from wreg
 21391  00586E  0100               	movlb	0	; () banked
 21392  005870  6FAF               	movwf	EUSART_Write@txData& (0+255),b
 21393                           
 21394                           ; BSR set to: 0
 21395                           
 21396                           ; BSR set to: 0
 21397                           ;eusart.c: 141: while(0 == eusartTxBufferRemaining)
 21398  005872  D000               	goto	l11054
 21399  005874                     l11054:
 21400  005874  504E               	movf	_eusartTxBufferRemaining,w,c	;volatile
 21401  005876  B4D8               	btfsc	status,2,c
 21402  005878  D7FD               	goto	l11054
 21403                           
 21404                           ;eusart.c: 143: }
 21405                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 21406  00587A  B89D               	btfsc	3997,4,c	;volatile
 21407  00587C  D003               	goto	l1136
 21408                           
 21409                           ;eusart.c: 146: {
 21410                           ;eusart.c: 147: TXREG = txData;
 21411  00587E  C0AF  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 21412                           
 21413                           ;eusart.c: 148: }
 21414  005882  D018               	goto	l11068
 21415  005884                     l1136:
 21416                           
 21417                           ;eusart.c: 149: else
 21418                           ;eusart.c: 150: {
 21419                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 21420  005884  989D               	bcf	3997,4,c	;volatile
 21421                           
 21422                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 21423  005886  0100               	movlb	0	; () banked
 21424  005888  5198               	movf	_eusartTxHead& (0+255),w,b
 21425  00588A  0D01               	mullw	1
 21426  00588C  0E40               	movlw	low _eusartTxBuffer
 21427  00588E  24F3               	addwf	prodl,w,c
 21428  005890  6ED9               	movwf	fsr2l,c
 21429  005892  0E02               	movlw	high _eusartTxBuffer
 21430  005894  20F4               	addwfc	prodh,w,c
 21431  005896  6EDA               	movwf	fsr2h,c
 21432  005898  C0AF  FFDF         	movff	EUSART_Write@txData,indf2
 21433                           
 21434                           ; BSR set to: 0
 21435  00589C  0100               	movlb	0	; () banked
 21436  00589E  2B98               	incf	_eusartTxHead& (0+255),f,b
 21437                           
 21438                           ; BSR set to: 0
 21439                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 21440  0058A0  0E3F               	movlw	63
 21441  0058A2  0100               	movlb	0	; () banked
 21442  0058A4  6598               	cpfsgt	_eusartTxHead& (0+255),b
 21443  0058A6  D004               	goto	l11066
 21444                           
 21445                           ; BSR set to: 0
 21446                           ;eusart.c: 154: {
 21447                           ;eusart.c: 155: eusartTxHead = 0;
 21448  0058A8  0E00               	movlw	0
 21449  0058AA  0100               	movlb	0	; () banked
 21450  0058AC  6F98               	movwf	_eusartTxHead& (0+255),b
 21451  0058AE  D000               	goto	l11066
 21452  0058B0                     l11066:
 21453                           
 21454                           ; BSR set to: 0
 21455                           ;eusart.c: 156: }
 21456                           ;eusart.c: 157: eusartTxBufferRemaining--;
 21457  0058B0  064E               	decf	_eusartTxBufferRemaining,f,c	;volatile
 21458  0058B2  D000               	goto	l11068
 21459  0058B4                     l11068:
 21460                           
 21461                           ;eusart.c: 158: }
 21462                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 21463  0058B4  889D               	bsf	3997,4,c	;volatile
 21464  0058B6  0012               	return		;funcret
 21465  0058B8                     __end_of_EUSART_Write:
 21466                           	opt stack 0
 21467                           tblptru	equ	0xFF8
 21468                           tblptrh	equ	0xFF7
 21469                           tblptrl	equ	0xFF6
 21470                           tablat	equ	0xFF5
 21471                           prodh	equ	0xFF4
 21472                           prodl	equ	0xFF3
 21473                           intcon	equ	0xFF2
 21474                           intcon3	equ	0xFF0
 21475                           indf0	equ	0xFEF
 21476                           postinc0	equ	0xFEE
 21477                           fsr0h	equ	0xFEA
 21478                           fsr0l	equ	0xFE9
 21479                           wreg	equ	0xFE8
 21480                           indf1	equ	0xFE7
 21481                           postdec1	equ	0xFE5
 21482                           fsr1h	equ	0xFE2
 21483                           fsr1l	equ	0xFE1
 21484                           indf2	equ	0xFDF
 21485                           postinc2	equ	0xFDE
 21486                           fsr2h	equ	0xFDA
 21487                           fsr2l	equ	0xFD9
 21488                           status	equ	0xFD8
 21489                           
 21490 ;; *************** function _EUSART_Read *****************
 21491 ;; Defined at:
 21492 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 21493 ;; Parameters:    Size  Location     Type
 21494 ;;		None
 21495 ;; Auto vars:     Size  Location     Type
 21496 ;;  readValue       1    0[BANK0 ] unsigned char 
 21497 ;; Return value:  Size  Location     Type
 21498 ;;                  1    wreg      unsigned char 
 21499 ;; Registers used:
 21500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21501 ;; Tracked objects:
 21502 ;;		On entry : 0/0
 21503 ;;		On exit  : 0/0
 21504 ;;		Unchanged: 0/0
 21505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21506 ;;      Params:         0       0       0       0       0       0       0       0       0
 21507 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21508 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21509 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21510 ;;Total ram usage:        1 bytes
 21511 ;; Hardware stack levels used:    1
 21512 ;; Hardware stack levels required when called:   11
 21513 ;; This function calls:
 21514 ;;		Nothing
 21515 ;; This function is called by:
 21516 ;;		_MOTEapp_getModuleResponse
 21517 ;;		_USBapp_DeviceCdcEmulatorHandler
 21518 ;; This function uses a non-reentrant model
 21519 ;;
 21520                           
 21521                           	psect	text84
 21522  005822                     __ptext84:
 21523                           	opt stack 0
 21524  005822                     _EUSART_Read:
 21525                           	opt stack 15
 21526                           
 21527                           ;eusart.c: 119: uint8_t readValue = 0;
 21528                           
 21529                           ;incstack = 0
 21530  005822  0E00               	movlw	0
 21531  005824  0100               	movlb	0	; () banked
 21532  005826  6FAF               	movwf	EUSART_Read@readValue& (0+255),b
 21533                           
 21534                           ;eusart.c: 121: while(0 == eusartRxCount)
 21535  005828  D002               	goto	l11072
 21536  00582A                     l1127:
 21537                           
 21538                           ;eusart.c: 122: {
 21539                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 21540  00582A  8E89               	bsf	3977,7,c	;volatile
 21541  00582C  D000               	goto	l11072
 21542  00582E                     l11072:
 21543  00582E  504D               	movf	_eusartRxCount,w,c	;volatile
 21544  005830  B4D8               	btfsc	status,2,c
 21545  005832  D7FB               	goto	l1127
 21546                           
 21547                           ;eusart.c: 124: }
 21548                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 21549  005834  9A9D               	bcf	3997,5,c	;volatile
 21550                           
 21551                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 21552  005836  0100               	movlb	0	; () banked
 21553  005838  5197               	movf	_eusartRxTail& (0+255),w,b
 21554  00583A  0D01               	mullw	1
 21555  00583C  0E00               	movlw	low _eusartRxBuffer
 21556  00583E  24F3               	addwf	prodl,w,c
 21557  005840  6ED9               	movwf	fsr2l,c
 21558  005842  0E02               	movlw	high _eusartRxBuffer
 21559  005844  20F4               	addwfc	prodh,w,c
 21560  005846  6EDA               	movwf	fsr2h,c
 21561  005848  50DF               	movf	indf2,w,c
 21562  00584A  0100               	movlb	0	; () banked
 21563  00584C  6FAF               	movwf	EUSART_Read@readValue& (0+255),b
 21564                           
 21565                           ; BSR set to: 0
 21566  00584E  0100               	movlb	0	; () banked
 21567  005850  2B97               	incf	_eusartRxTail& (0+255),f,b
 21568                           
 21569                           ; BSR set to: 0
 21570                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 21571  005852  0E3F               	movlw	63
 21572  005854  0100               	movlb	0	; () banked
 21573  005856  6597               	cpfsgt	_eusartRxTail& (0+255),b
 21574  005858  D004               	goto	l11082
 21575                           
 21576                           ; BSR set to: 0
 21577                           ;eusart.c: 130: {
 21578                           ;eusart.c: 131: eusartRxTail = 0;
 21579  00585A  0E00               	movlw	0
 21580  00585C  0100               	movlb	0	; () banked
 21581  00585E  6F97               	movwf	_eusartRxTail& (0+255),b
 21582  005860  D000               	goto	l11082
 21583  005862                     l11082:
 21584                           
 21585                           ; BSR set to: 0
 21586                           ;eusart.c: 132: }
 21587                           ;eusart.c: 133: eusartRxCount--;
 21588  005862  064D               	decf	_eusartRxCount,f,c	;volatile
 21589                           
 21590                           ; BSR set to: 0
 21591                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 21592  005864  8A9D               	bsf	3997,5,c	;volatile
 21593                           
 21594                           ; BSR set to: 0
 21595                           ;eusart.c: 136: return readValue;
 21596  005866  0100               	movlb	0	; () banked
 21597  005868  51AF               	movf	EUSART_Read@readValue& (0+255),w,b
 21598  00586A  0012               	return	
 21599                           
 21600                           ; BSR set to: 0
 21601                           
 21602                           ; BSR set to: 0
 21603  00586C  0012               	return		;funcret
 21604  00586E                     __end_of_EUSART_Read:
 21605                           	opt stack 0
 21606                           tblptru	equ	0xFF8
 21607                           tblptrh	equ	0xFF7
 21608                           tblptrl	equ	0xFF6
 21609                           tablat	equ	0xFF5
 21610                           prodh	equ	0xFF4
 21611                           prodl	equ	0xFF3
 21612                           intcon	equ	0xFF2
 21613                           intcon3	equ	0xFF0
 21614                           indf0	equ	0xFEF
 21615                           postinc0	equ	0xFEE
 21616                           fsr0h	equ	0xFEA
 21617                           fsr0l	equ	0xFE9
 21618                           wreg	equ	0xFE8
 21619                           indf1	equ	0xFE7
 21620                           postdec1	equ	0xFE5
 21621                           fsr1h	equ	0xFE2
 21622                           fsr1l	equ	0xFE1
 21623                           indf2	equ	0xFDF
 21624                           postinc2	equ	0xFDE
 21625                           fsr2h	equ	0xFDA
 21626                           fsr2l	equ	0xFD9
 21627                           status	equ	0xFD8
 21628                           
 21629 ;; *************** function _CDCTxService *****************
 21630 ;; Defined at:
 21631 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 21632 ;; Parameters:    Size  Location     Type
 21633 ;;		None
 21634 ;; Auto vars:     Size  Location     Type
 21635 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 21636 ;;  i               1   10[BANK0 ] unsigned char 
 21637 ;; Return value:  Size  Location     Type
 21638 ;;		None               void
 21639 ;; Registers used:
 21640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21641 ;; Tracked objects:
 21642 ;;		On entry : 0/0
 21643 ;;		On exit  : 0/0
 21644 ;;		Unchanged: 0/0
 21645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21646 ;;      Params:         0       0       0       0       0       0       0       0       0
 21647 ;;      Locals:         0       4       0       0       0       0       0       0       0
 21648 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21649 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21650 ;;Total ram usage:        5 bytes
 21651 ;; Hardware stack levels used:    1
 21652 ;; Hardware stack levels required when called:   12
 21653 ;; This function calls:
 21654 ;;		_USBTransferOnePacket
 21655 ;; This function is called by:
 21656 ;;		_USBapp_DeviceCdcEmulatorHandler
 21657 ;; This function uses a non-reentrant model
 21658 ;;
 21659                           
 21660                           	psect	text85
 21661  002160                     __ptext85:
 21662                           	opt stack 0
 21663  002160                     _CDCTxService:
 21664                           	opt stack 16
 21665                           
 21666                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 21667                           ;usb_device_cdc.c: 786: uint8_t i;
 21668                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 21669                           
 21670                           ; BSR set to: 0
 21671                           ;incstack = 0
 21672  002160  94A3               	bcf	4003,2,c	;volatile
 21673                           
 21674                           ;usb_device_cdc.c: 790: {};
 21675                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 21676  002162  0100               	movlb	0	; () banked
 21677  002164  5172               	movf	_CDCDataInHandle& (0+255),w,b
 21678  002166  0100               	movlb	0	; () banked
 21679  002168  1173               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 21680  00216A  B4D8               	btfsc	status,2,c
 21681  00216C  D013               	goto	l12202
 21682                           
 21683                           ; BSR set to: 0
 21684  00216E  C072  FFD9         	movff	_CDCDataInHandle,fsr2l
 21685  002172  C073  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21686  002176  0100               	movlb	0	; () banked
 21687  002178  AEDF               	btfss	indf2,7,c
 21688  00217A  D004               	goto	u10830
 21689  00217C  0100               	movlb	0	; () banked
 21690  00217E  6BB6               	clrf	??_CDCTxService& (0+255),b
 21691  002180  2BB6               	incf	??_CDCTxService& (0+255),f,b
 21692  002182  D002               	goto	u10838
 21693  002184                     u10830:
 21694  002184  0100               	movlb	0	; () banked
 21695  002186  6BB6               	clrf	??_CDCTxService& (0+255),b
 21696  002188                     u10838:
 21697  002188  0100               	movlb	0	; () banked
 21698  00218A  51B6               	movf	??_CDCTxService& (0+255),w,b
 21699  00218C  0100               	movlb	0	; () banked
 21700  00218E  6FB7               	movwf	_CDCTxService$6488& (0+255),b
 21701  002190  6BB8               	clrf	(_CDCTxService$6488+1)& (0+255),b
 21702  002192  D006               	goto	l12204
 21703  002194                     l12202:
 21704                           
 21705                           ; BSR set to: 0
 21706  002194  0E00               	movlw	0
 21707  002196  0100               	movlb	0	; () banked
 21708  002198  6FB8               	movwf	(_CDCTxService$6488+1)& (0+255),b
 21709  00219A  0E00               	movlw	0
 21710  00219C  6FB7               	movwf	_CDCTxService$6488& (0+255),b
 21711  00219E  D000               	goto	l12204
 21712  0021A0                     l12204:
 21713                           
 21714                           ; BSR set to: 0
 21715  0021A0  0100               	movlb	0	; () banked
 21716  0021A2  51B7               	movf	_CDCTxService$6488& (0+255),w,b
 21717  0021A4  0100               	movlb	0	; () banked
 21718  0021A6  11B8               	iorwf	(_CDCTxService$6488+1)& (0+255),w,b
 21719  0021A8  B4D8               	btfsc	status,2,c
 21720  0021AA  D002               	goto	l12208
 21721                           
 21722                           ; BSR set to: 0
 21723                           ;usb_device_cdc.c: 793: {
 21724                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 21725  0021AC  84A3               	bsf	4003,2,c	;volatile
 21726                           
 21727                           ;usb_device_cdc.c: 795: return;
 21728  0021AE  0012               	return	
 21729  0021B0                     l12208:
 21730                           
 21731                           ; BSR set to: 0
 21732                           ;usb_device_cdc.c: 796: }
 21733                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 21734  0021B0  0E03               	movlw	3
 21735  0021B2  184A               	xorwf	_cdc_trf_state,w,c
 21736  0021B4  A4D8               	btfss	status,2,c
 21737  0021B6  D002               	goto	l2066
 21738                           
 21739                           ; BSR set to: 0
 21740                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 21741  0021B8  0E00               	movlw	0
 21742  0021BA  6E4A               	movwf	_cdc_trf_state,c
 21743  0021BC                     l2066:
 21744                           
 21745                           ; BSR set to: 0
 21746                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 21747  0021BC  504A               	movf	_cdc_trf_state,w,c
 21748  0021BE  A4D8               	btfss	status,2,c
 21749  0021C0  D002               	goto	l12214
 21750                           
 21751                           ; BSR set to: 0
 21752                           ;usb_device_cdc.c: 810: {
 21753                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 21754  0021C2  84A3               	bsf	4003,2,c	;volatile
 21755                           
 21756                           ;usb_device_cdc.c: 812: return;
 21757  0021C4  0012               	return	
 21758  0021C6                     l12214:
 21759                           
 21760                           ; BSR set to: 0
 21761                           ;usb_device_cdc.c: 813: }
 21762                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 21763  0021C6  0E02               	movlw	2
 21764  0021C8  184A               	xorwf	_cdc_trf_state,w,c
 21765  0021CA  A4D8               	btfss	status,2,c
 21766  0021CC  D016               	goto	l12220
 21767                           
 21768                           ; BSR set to: 0
 21769                           ;usb_device_cdc.c: 819: {
 21770                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21771  0021CE  0E01               	movlw	1
 21772  0021D0  0100               	movlb	0	; () banked
 21773  0021D2  6FAF               	movwf	USBTransferOnePacket@dir& (0+255),b
 21774  0021D4  0E00               	movlw	0
 21775  0021D6  0100               	movlb	0	; () banked
 21776  0021D8  6FB0               	movwf	USBTransferOnePacket@data& (0+255),b
 21777  0021DA  0E00               	movlw	0
 21778  0021DC  0100               	movlb	0	; () banked
 21779  0021DE  6FB1               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21780  0021E0  0E00               	movlw	0
 21781  0021E2  0100               	movlb	0	; () banked
 21782  0021E4  6FB2               	movwf	USBTransferOnePacket@len& (0+255),b
 21783  0021E6  0E02               	movlw	2
 21784  0021E8  ECB7  F01F         	call	_USBTransferOnePacket
 21785  0021EC  C0AF  F072         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21786  0021F0  C0B0  F073         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21787                           
 21788                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 21789  0021F4  0E03               	movlw	3
 21790  0021F6  6E4A               	movwf	_cdc_trf_state,c
 21791                           
 21792                           ;usb_device_cdc.c: 823: }
 21793  0021F8  D079               	goto	l12264
 21794  0021FA                     l12220:
 21795                           
 21796                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 21797  0021FA  044A               	decf	_cdc_trf_state,w,c
 21798  0021FC  A4D8               	btfss	status,2,c
 21799  0021FE  D076               	goto	l12264
 21800                           
 21801                           ;usb_device_cdc.c: 825: {
 21802                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 21803  002200  0E40               	movlw	64
 21804  002202  0100               	movlb	0	; () banked
 21805  002204  6591               	cpfsgt	_cdc_tx_len& (0+255),b
 21806  002206  D004               	goto	l2071
 21807                           
 21808                           ; BSR set to: 0
 21809                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 21810  002208  0E40               	movlw	64
 21811  00220A  0100               	movlb	0	; () banked
 21812  00220C  6FBA               	movwf	CDCTxService@byte_to_send& (0+255),b
 21813  00220E  D003               	goto	l12226
 21814  002210                     l2071:
 21815                           
 21816                           ; BSR set to: 0
 21817                           ;usb_device_cdc.c: 831: else
 21818                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 21819  002210  C091  F0BA         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21820  002214  D000               	goto	l12226
 21821  002216                     l12226:
 21822                           
 21823                           ; BSR set to: 0
 21824                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 21825  002216  0100               	movlb	0	; () banked
 21826  002218  51BA               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21827  00221A  0800               	sublw	0
 21828  00221C  0100               	movlb	0	; () banked
 21829  00221E  2591               	addwf	_cdc_tx_len& (0+255),w,b
 21830  002220  0100               	movlb	0	; () banked
 21831  002222  6F91               	movwf	_cdc_tx_len& (0+255),b
 21832                           
 21833                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21834  002224  0E00               	movlw	0
 21835  002226  0100               	movlb	0	; () banked
 21836  002228  6F6C               	movwf	_pCDCDst& (0+255),b
 21837  00222A  0E05               	movlw	5
 21838  00222C  0100               	movlb	0	; () banked
 21839  00222E  6F6D               	movwf	(_pCDCDst+1)& (0+255),b
 21840                           
 21841                           ; BSR set to: 0
 21842                           ;usb_device_cdc.c: 841: i = byte_to_send;
 21843  002230  C0BA  F0B9         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21844                           
 21845                           ; BSR set to: 0
 21846                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 21847  002234  0100               	movlb	0	; () banked
 21848  002236  518F               	movf	_cdc_mem_type& (0+255),w,b
 21849  002238  B4D8               	btfsc	status,2,c
 21850  00223A  D015               	goto	l12242
 21851  00223C  D02F               	goto	l12252
 21852                           
 21853                           ; BSR set to: 0
 21854                           ;usb_device_cdc.c: 843: {
 21855                           ;usb_device_cdc.c: 844: while(i)
 21856  00223E  D013               	goto	l12242
 21857  002240                     l12234:
 21858                           
 21859                           ; BSR set to: 0
 21860                           ;usb_device_cdc.c: 845: {
 21861                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 21862  002240  C06F  FFD9         	movff	_pCDCSrc,fsr2l
 21863  002244  C070  FFDA         	movff	_pCDCSrc+1,fsr2h
 21864  002248  C06C  FFE1         	movff	_pCDCDst,fsr1l
 21865  00224C  C06D  FFE2         	movff	_pCDCDst+1,fsr1h
 21866  002250  CFDF FFE7          	movff	indf2,indf1
 21867                           
 21868                           ; BSR set to: 0
 21869                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 21870  002254  0100               	movlb	0	; () banked
 21871  002256  4B6C               	infsnz	_pCDCDst& (0+255),f,b
 21872  002258  2B6D               	incf	(_pCDCDst+1)& (0+255),f,b
 21873                           
 21874                           ; BSR set to: 0
 21875                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 21876  00225A  0100               	movlb	0	; () banked
 21877  00225C  4B6F               	infsnz	_pCDCSrc& (0+255),f,b
 21878  00225E  2B70               	incf	(_pCDCSrc+1)& (0+255),f,b
 21879                           
 21880                           ; BSR set to: 0
 21881                           ;usb_device_cdc.c: 849: i--;
 21882  002260  0100               	movlb	0	; () banked
 21883  002262  07B9               	decf	CDCTxService@i& (0+255),f,b
 21884  002264  D000               	goto	l12242
 21885  002266                     l12242:
 21886                           
 21887                           ; BSR set to: 0
 21888  002266  0100               	movlb	0	; () banked
 21889  002268  51B9               	movf	CDCTxService@i& (0+255),w,b
 21890  00226A  0100               	movlb	0	; () banked
 21891  00226C  B4D8               	btfsc	status,2,c
 21892  00226E  D01D               	goto	l12254
 21893  002270  D7E7               	goto	l12234
 21894                           
 21895                           ; BSR set to: 0
 21896                           ;usb_device_cdc.c: 850: }
 21897                           ;usb_device_cdc.c: 851: }
 21898  002272  D01B               	goto	l12254
 21899                           
 21900                           ; BSR set to: 0
 21901                           ;usb_device_cdc.c: 852: else
 21902                           ;usb_device_cdc.c: 853: {
 21903                           ;usb_device_cdc.c: 854: while(i)
 21904  002274  D013               	goto	l12252
 21905  002276                     l12244:
 21906                           
 21907                           ; BSR set to: 0
 21908                           ;usb_device_cdc.c: 855: {
 21909                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 21910  002276  C06F  FFD9         	movff	_pCDCSrc,fsr2l
 21911  00227A  C070  FFDA         	movff	_pCDCSrc+1,fsr2h
 21912  00227E  C06C  FFE1         	movff	_pCDCDst,fsr1l
 21913  002282  C06D  FFE2         	movff	_pCDCDst+1,fsr1h
 21914  002286  CFDF FFE7          	movff	indf2,indf1
 21915                           
 21916                           ; BSR set to: 0
 21917                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 21918  00228A  0100               	movlb	0	; () banked
 21919  00228C  4B6C               	infsnz	_pCDCDst& (0+255),f,b
 21920  00228E  2B6D               	incf	(_pCDCDst+1)& (0+255),f,b
 21921                           
 21922                           ; BSR set to: 0
 21923                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 21924  002290  0100               	movlb	0	; () banked
 21925  002292  4B6F               	infsnz	_pCDCSrc& (0+255),f,b
 21926  002294  2B70               	incf	(_pCDCSrc+1)& (0+255),f,b
 21927                           
 21928                           ; BSR set to: 0
 21929                           ;usb_device_cdc.c: 859: i--;
 21930  002296  0100               	movlb	0	; () banked
 21931  002298  07B9               	decf	CDCTxService@i& (0+255),f,b
 21932  00229A  D000               	goto	l12252
 21933  00229C                     l12252:
 21934                           
 21935                           ; BSR set to: 0
 21936  00229C  0100               	movlb	0	; () banked
 21937  00229E  51B9               	movf	CDCTxService@i& (0+255),w,b
 21938  0022A0  0100               	movlb	0	; () banked
 21939  0022A2  B4D8               	btfsc	status,2,c
 21940  0022A4  D002               	goto	l12254
 21941  0022A6  D7E7               	goto	l12244
 21942                           
 21943                           ; BSR set to: 0
 21944  0022A8  D000               	goto	l12254
 21945  0022AA                     l12254:
 21946                           
 21947                           ; BSR set to: 0
 21948                           ;usb_device_cdc.c: 860: }
 21949                           ;usb_device_cdc.c: 861: }
 21950                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 21951  0022AA  0100               	movlb	0	; () banked
 21952  0022AC  5191               	movf	_cdc_tx_len& (0+255),w,b
 21953  0022AE  A4D8               	btfss	status,2,c
 21954  0022B0  D00A               	goto	l12262
 21955                           
 21956                           ; BSR set to: 0
 21957                           ;usb_device_cdc.c: 868: {
 21958                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 21959  0022B2  0E40               	movlw	64
 21960  0022B4  0100               	movlb	0	; () banked
 21961  0022B6  19BA               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21962  0022B8  A4D8               	btfss	status,2,c
 21963  0022BA  D002               	goto	l12260
 21964                           
 21965                           ; BSR set to: 0
 21966                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 21967  0022BC  0E02               	movlw	2
 21968  0022BE  D001               	goto	L12
 21969  0022C0                     l12260:
 21970                           
 21971                           ; BSR set to: 0
 21972                           ;usb_device_cdc.c: 871: else
 21973                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 21974  0022C0  0E03               	movlw	3
 21975  0022C2                     L12:
 21976  0022C2  6E4A               	movwf	_cdc_trf_state,c
 21977                           
 21978                           ; BSR set to: 0
 21979  0022C4  D000               	goto	l12262
 21980  0022C6                     l12262:
 21981                           
 21982                           ; BSR set to: 0
 21983                           ;usb_device_cdc.c: 873: }
 21984                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21985  0022C6  0E01               	movlw	1
 21986  0022C8  0100               	movlb	0	; () banked
 21987  0022CA  6FAF               	movwf	USBTransferOnePacket@dir& (0+255),b
 21988  0022CC  0E00               	movlw	0
 21989  0022CE  0100               	movlb	0	; () banked
 21990  0022D0  6FB0               	movwf	USBTransferOnePacket@data& (0+255),b
 21991  0022D2  0E05               	movlw	5
 21992  0022D4  0100               	movlb	0	; () banked
 21993  0022D6  6FB1               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21994  0022D8  C0BA  F0B2         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21995  0022DC  0E02               	movlw	2
 21996  0022DE  ECB7  F01F         	call	_USBTransferOnePacket
 21997  0022E2  C0AF  F072         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21998  0022E6  C0B0  F073         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21999  0022EA  D000               	goto	l12264
 22000  0022EC                     l12264:
 22001                           
 22002                           ;usb_device_cdc.c: 876: }
 22003                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 22004  0022EC  84A3               	bsf	4003,2,c	;volatile
 22005  0022EE  0012               	return		;funcret
 22006  0022F0                     __end_of_CDCTxService:
 22007                           	opt stack 0
 22008                           tblptru	equ	0xFF8
 22009                           tblptrh	equ	0xFF7
 22010                           tblptrl	equ	0xFF6
 22011                           tablat	equ	0xFF5
 22012                           prodh	equ	0xFF4
 22013                           prodl	equ	0xFF3
 22014                           intcon	equ	0xFF2
 22015                           intcon3	equ	0xFF0
 22016                           indf0	equ	0xFEF
 22017                           postinc0	equ	0xFEE
 22018                           fsr0h	equ	0xFEA
 22019                           fsr0l	equ	0xFE9
 22020                           wreg	equ	0xFE8
 22021                           indf1	equ	0xFE7
 22022                           postdec1	equ	0xFE5
 22023                           fsr1h	equ	0xFE2
 22024                           fsr1l	equ	0xFE1
 22025                           indf2	equ	0xFDF
 22026                           postinc2	equ	0xFDE
 22027                           fsr2h	equ	0xFDA
 22028                           fsr2l	equ	0xFD9
 22029                           status	equ	0xFD8
 22030                           
 22031 ;; *************** function _USBTransferOnePacket *****************
 22032 ;; Defined at:
 22033 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 22034 ;; Parameters:    Size  Location     Type
 22035 ;;  ep              1    wreg     unsigned char 
 22036 ;;  dir             1    0[BANK0 ] unsigned char 
 22037 ;;  data            2    1[BANK0 ] PTR unsigned char 
 22038 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 22039 ;;  len             1    3[BANK0 ] unsigned char 
 22040 ;; Auto vars:     Size  Location     Type
 22041 ;;  ep              1    4[BANK0 ] unsigned char 
 22042 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 22043 ;;		 -> BDT(48), NULL(0), 
 22044 ;; Return value:  Size  Location     Type
 22045 ;;                  2    0[BANK0 ] PTR void 
 22046 ;; Registers used:
 22047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22048 ;; Tracked objects:
 22049 ;;		On entry : 0/0
 22050 ;;		On exit  : 0/0
 22051 ;;		Unchanged: 0/0
 22052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22053 ;;      Params:         0       4       0       0       0       0       0       0       0
 22054 ;;      Locals:         0       3       0       0       0       0       0       0       0
 22055 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22056 ;;      Totals:         0       7       0       0       0       0       0       0       0
 22057 ;;Total ram usage:        7 bytes
 22058 ;; Hardware stack levels used:    1
 22059 ;; Hardware stack levels required when called:   11
 22060 ;; This function calls:
 22061 ;;		Nothing
 22062 ;; This function is called by:
 22063 ;;		_getsUSBUSART
 22064 ;;		_CDCTxService
 22065 ;;		_USBCDCEventHandler
 22066 ;; This function uses a non-reentrant model
 22067 ;;
 22068                           
 22069                           	psect	text86
 22070  003F6E                     __ptext86:
 22071                           	opt stack 0
 22072  003F6E                     _USBTransferOnePacket:
 22073                           	opt stack 16
 22074                           
 22075                           ;incstack = 0
 22076                           ;USBTransferOnePacket@ep stored from wreg
 22077  003F6E  0100               	movlb	0	; () banked
 22078  003F70  6FB3               	movwf	USBTransferOnePacket@ep& (0+255),b
 22079                           
 22080                           ; BSR set to: 0
 22081                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 22082                           ;usb_device.c: 762: if(dir != 0)
 22083  003F72  0100               	movlb	0	; () banked
 22084  003F74  51AF               	movf	USBTransferOnePacket@dir& (0+255),w,b
 22085  003F76  0100               	movlb	0	; () banked
 22086  003F78  B4D8               	btfsc	status,2,c
 22087  003F7A  D008               	goto	l11402
 22088                           
 22089                           ; BSR set to: 0
 22090                           ;usb_device.c: 763: {
 22091                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 22092  003F7C  0100               	movlb	0	; () banked
 22093  003F7E  51B3               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22094  003F80  0D02               	mullw	2
 22095  003F82  0E36               	movlw	low _pBDTEntryIn
 22096  003F84  24F3               	addwf	prodl,w,c
 22097  003F86  6ED9               	movwf	fsr2l,c
 22098  003F88  0E00               	movlw	high _pBDTEntryIn
 22099  003F8A  D007               	goto	L13
 22100  003F8C                     l11402:
 22101                           
 22102                           ; BSR set to: 0
 22103                           ;usb_device.c: 767: else
 22104                           ;usb_device.c: 768: {
 22105                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 22106  003F8C  0100               	movlb	0	; () banked
 22107  003F8E  51B3               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22108  003F90  0D02               	mullw	2
 22109  003F92  0E60               	movlw	low _pBDTEntryOut
 22110  003F94  24F3               	addwf	prodl,w,c
 22111  003F96  6ED9               	movwf	fsr2l,c
 22112  003F98  0E00               	movlw	high _pBDTEntryOut
 22113  003F9A                     L13:
 22114  003F9A  20F4               	addwfc	prodh,w,c
 22115  003F9C  6EDA               	movwf	fsr2h,c
 22116  003F9E  CFDE F0B4          	movff	postinc2,USBTransferOnePacket@handle
 22117  003FA2  CFDD F0B5          	movff	postdec2,USBTransferOnePacket@handle+1
 22118  003FA6  D000               	goto	l11404
 22119  003FA8                     l11404:
 22120                           
 22121                           ; BSR set to: 0
 22122                           ;usb_device.c: 771: }
 22123                           ;usb_device.c: 775: if(handle == 0)
 22124  003FA8  0100               	movlb	0	; () banked
 22125  003FAA  51B4               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22126  003FAC  0100               	movlb	0	; () banked
 22127  003FAE  11B5               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22128  003FB0  A4D8               	btfss	status,2,c
 22129  003FB2  D007               	goto	l11410
 22130                           
 22131                           ; BSR set to: 0
 22132                           ;usb_device.c: 776: {
 22133                           ;usb_device.c: 777: return 0;
 22134  003FB4  0E00               	movlw	0
 22135  003FB6  0100               	movlb	0	; () banked
 22136  003FB8  6FAF               	movwf	?_USBTransferOnePacket& (0+255),b
 22137  003FBA  0E00               	movlw	0
 22138  003FBC  0100               	movlb	0	; () banked
 22139  003FBE  6FB0               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 22140                           
 22141                           ; BSR set to: 0
 22142  003FC0  0012               	return	
 22143  003FC2                     l11410:
 22144                           
 22145                           ; BSR set to: 0
 22146                           ;usb_device.c: 778: }
 22147                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 22148  003FC2  0100               	movlb	0	; () banked
 22149  003FC4  EE20 F002          	lfsr	2,2
 22150  003FC8  51B4               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22151  003FCA  26D9               	addwf	fsr2l,f,c
 22152  003FCC  51B5               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22153  003FCE  22DA               	addwfc	fsr2h,f,c
 22154  003FD0  C0B0  FFDE         	movff	USBTransferOnePacket@data,postinc2
 22155  003FD4  C0B1  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 22156                           
 22157                           ;usb_device.c: 781: handle->CNT = len;
 22158  003FD8  0100               	movlb	0	; () banked
 22159  003FDA  EE20 F001          	lfsr	2,1
 22160  003FDE  51B4               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22161  003FE0  26D9               	addwf	fsr2l,f,c
 22162  003FE2  51B5               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22163  003FE4  22DA               	addwfc	fsr2h,f,c
 22164  003FE6  C0B2  FFDF         	movff	USBTransferOnePacket@len,indf2
 22165                           
 22166                           ; BSR set to: 0
 22167                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 22168  003FEA  C0B4  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22169  003FEE  C0B5  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22170  003FF2  0E40               	movlw	64
 22171  003FF4  16DF               	andwf	indf2,f,c
 22172                           
 22173                           ; BSR set to: 0
 22174                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 22175  003FF6  C0B4  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22176  003FFA  C0B5  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22177  003FFE  0E00               	movlw	0
 22178  004000  86DB               	bsf	plusw2,3,c
 22179                           
 22180                           ; BSR set to: 0
 22181                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 22182  004002  C0B4  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22183  004006  C0B5  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22184  00400A  0E00               	movlw	0
 22185  00400C  8EDB               	bsf	plusw2,7,c
 22186                           
 22187                           ; BSR set to: 0
 22188                           ;usb_device.c: 787: if(dir != 0)
 22189  00400E  0100               	movlb	0	; () banked
 22190  004010  51AF               	movf	USBTransferOnePacket@dir& (0+255),w,b
 22191  004012  0100               	movlb	0	; () banked
 22192  004014  B4D8               	btfsc	status,2,c
 22193  004016  D008               	goto	l11422
 22194                           
 22195                           ; BSR set to: 0
 22196                           ;usb_device.c: 788: {
 22197                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 22198  004018  0100               	movlb	0	; () banked
 22199  00401A  51B3               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22200  00401C  0D02               	mullw	2
 22201  00401E  0E36               	movlw	low _pBDTEntryIn
 22202  004020  24F3               	addwf	prodl,w,c
 22203  004022  6ED9               	movwf	fsr2l,c
 22204  004024  0E00               	movlw	high _pBDTEntryIn
 22205  004026  D007               	goto	L14
 22206  004028                     l11422:
 22207                           
 22208                           ; BSR set to: 0
 22209                           ;usb_device.c: 792: else
 22210                           ;usb_device.c: 793: {
 22211                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 22212  004028  0100               	movlb	0	; () banked
 22213  00402A  51B3               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22214  00402C  0D02               	mullw	2
 22215  00402E  0E60               	movlw	low _pBDTEntryOut
 22216  004030  24F3               	addwf	prodl,w,c
 22217  004032  6ED9               	movwf	fsr2l,c
 22218  004034  0E00               	movlw	high _pBDTEntryOut
 22219  004036                     L14:
 22220  004036  20F4               	addwfc	prodh,w,c
 22221  004038  6EDA               	movwf	fsr2h,c
 22222  00403A  0E04               	movlw	4
 22223  00403C  1ADF               	xorwf	indf2,f,c
 22224  00403E  D000               	goto	l11424
 22225  004040                     l11424:
 22226                           
 22227                           ; BSR set to: 0
 22228                           ;usb_device.c: 796: }
 22229                           ;usb_device.c: 797: return (void*)handle;
 22230  004040  C0B4  F0AF         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 22231  004044  C0B5  F0B0         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 22232  004048  0012               	return	
 22233                           
 22234                           ; BSR set to: 0
 22235                           
 22236                           ; BSR set to: 0
 22237  00404A  0012               	return		;funcret
 22238  00404C                     __end_of_USBTransferOnePacket:
 22239                           	opt stack 0
 22240                           tblptru	equ	0xFF8
 22241                           tblptrh	equ	0xFF7
 22242                           tblptrl	equ	0xFF6
 22243                           tablat	equ	0xFF5
 22244                           prodh	equ	0xFF4
 22245                           prodl	equ	0xFF3
 22246                           intcon	equ	0xFF2
 22247                           intcon3	equ	0xFF0
 22248                           indf0	equ	0xFEF
 22249                           postinc0	equ	0xFEE
 22250                           fsr0h	equ	0xFEA
 22251                           fsr0l	equ	0xFE9
 22252                           wreg	equ	0xFE8
 22253                           indf1	equ	0xFE7
 22254                           postdec1	equ	0xFE5
 22255                           fsr1h	equ	0xFE2
 22256                           fsr1l	equ	0xFE1
 22257                           indf2	equ	0xFDF
 22258                           postinc2	equ	0xFDE
 22259                           postdec2	equ	0xFDD
 22260                           plusw2	equ	0xFDB
 22261                           fsr2h	equ	0xFDA
 22262                           fsr2l	equ	0xFD9
 22263                           status	equ	0xFD8
 22264                           
 22265 ;; *************** function _USBDeviceInit *****************
 22266 ;; Defined at:
 22267 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 22268 ;; Parameters:    Size  Location     Type
 22269 ;;		None
 22270 ;; Auto vars:     Size  Location     Type
 22271 ;;  i               1    8[BANK0 ] unsigned char 
 22272 ;; Return value:  Size  Location     Type
 22273 ;;		None               void
 22274 ;; Registers used:
 22275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22276 ;; Tracked objects:
 22277 ;;		On entry : 0/0
 22278 ;;		On exit  : 0/0
 22279 ;;		Unchanged: 0/0
 22280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22281 ;;      Params:         0       0       0       0       0       0       0       0       0
 22282 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22283 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22284 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22285 ;;Total ram usage:        1 bytes
 22286 ;; Hardware stack levels used:    1
 22287 ;; Hardware stack levels required when called:   12
 22288 ;; This function calls:
 22289 ;;		_memset
 22290 ;; This function is called by:
 22291 ;;		_main
 22292 ;; This function uses a non-reentrant model
 22293 ;;
 22294                           
 22295                           	psect	text87
 22296  002750                     __ptext87:
 22297                           	opt stack 0
 22298  002750                     _USBDeviceInit:
 22299                           	opt stack 18
 22300                           
 22301                           ;usb_device.c: 239: uint8_t i;
 22302                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 22303                           
 22304                           ; BSR set to: 0
 22305                           ;incstack = 0
 22306  002750  94A3               	bcf	4003,2,c	;volatile
 22307                           
 22308                           ;usb_device.c: 244: {UEIR = 0;};
 22309  002752  0E00               	movlw	0
 22310  002754  6E67               	movwf	3943,c	;volatile
 22311                           
 22312                           ;usb_device.c: 247: {UIR = 0;};
 22313  002756  0E00               	movlw	0
 22314  002758  6E65               	movwf	3941,c	;volatile
 22315                           
 22316                           ;usb_device.c: 250: UEP0 = 0;
 22317  00275A  0E00               	movlw	0
 22318  00275C  6E6A               	movwf	3946,c	;volatile
 22319                           
 22320                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 22321  00275E  0E6B               	movlw	107
 22322  002760  0100               	movlb	0	; () banked
 22323  002762  6FAF               	movwf	memset@p1& (0+255),b
 22324  002764  0E0F               	movlw	15
 22325  002766  0100               	movlb	0	; () banked
 22326  002768  6FB0               	movwf	(memset@p1+1)& (0+255),b
 22327  00276A  0E00               	movlw	0
 22328  00276C  0100               	movlb	0	; () banked
 22329  00276E  6FB2               	movwf	(memset@c+1)& (0+255),b
 22330  002770  0E00               	movlw	0
 22331  002772  6FB1               	movwf	memset@c& (0+255),b
 22332  002774  0E00               	movlw	0
 22333  002776  0100               	movlb	0	; () banked
 22334  002778  6FB4               	movwf	(memset@n+1)& (0+255),b
 22335  00277A  0E02               	movlw	2
 22336  00277C  6FB3               	movwf	memset@n& (0+255),b
 22337  00277E  ECE0  F02D         	call	_memset	;wreg free
 22338                           
 22339                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 22340  002782  0E16               	movlw	22
 22341  002784  6E62               	movwf	3938,c	;volatile
 22342  002786  0E9F               	movlw	159
 22343  002788  6E66               	movwf	3942,c	;volatile
 22344  00278A  0E7B               	movlw	123
 22345  00278C  6E64               	movwf	3940,c	;volatile
 22346                           
 22347                           ;usb_device.c: 257: ;
 22348                           ;usb_device.c: 260: ;
 22349                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 22350  00278E  0E00               	movlw	0
 22351  002790  0100               	movlb	0	; () banked
 22352  002792  6FB7               	movwf	USBDeviceInit@i& (0+255),b
 22353  002794  D010               	goto	l13406
 22354                           
 22355                           ; BSR set to: 0
 22356                           
 22357                           ; BSR set to: 0
 22358  002796  D013               	goto	l1706
 22359  002798                     l13402:
 22360                           
 22361                           ; BSR set to: 0
 22362                           ;usb_device.c: 264: {
 22363                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 22364  002798  0100               	movlb	0	; () banked
 22365  00279A  51B7               	movf	USBDeviceInit@i& (0+255),w,b
 22366  00279C  0D04               	mullw	4
 22367  00279E  0E00               	movlw	0
 22368  0027A0  24F3               	addwf	prodl,w,c
 22369  0027A2  6ED9               	movwf	fsr2l,c
 22370  0027A4  0E04               	movlw	4
 22371  0027A6  20F4               	addwfc	prodh,w,c
 22372  0027A8  6EDA               	movwf	fsr2h,c
 22373  0027AA  6ADE               	clrf	postinc2,c
 22374  0027AC  6ADE               	clrf	postinc2,c
 22375  0027AE  6ADE               	clrf	postinc2,c
 22376  0027B0  6ADD               	clrf	postdec2,c
 22377                           
 22378                           ; BSR set to: 0
 22379  0027B2  0100               	movlb	0	; () banked
 22380  0027B4  2BB7               	incf	USBDeviceInit@i& (0+255),f,b
 22381  0027B6                     l13406:
 22382                           
 22383                           ; BSR set to: 0
 22384  0027B6  0E0B               	movlw	11
 22385  0027B8  0100               	movlb	0	; () banked
 22386  0027BA  65B7               	cpfsgt	USBDeviceInit@i& (0+255),b
 22387  0027BC  D7ED               	goto	l13402
 22388  0027BE                     l1706:
 22389                           
 22390                           ; BSR set to: 0
 22391                           ;usb_device.c: 266: }
 22392                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 22393  0027BE  8C60               	bsf	3936,6,c	;volatile
 22394                           
 22395                           ; BSR set to: 0
 22396                           ;usb_device.c: 272: UADDR = 0x00;
 22397  0027C0  0E00               	movlw	0
 22398  0027C2  6E63               	movwf	3939,c	;volatile
 22399                           
 22400                           ; BSR set to: 0
 22401                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 22402  0027C4  9860               	bcf	3936,4,c	;volatile
 22403                           
 22404                           ; BSR set to: 0
 22405                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 22406  0027C6  9C60               	bcf	3936,6,c	;volatile
 22407                           
 22408                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 22409  0027C8  D00A               	goto	l13422
 22410  0027CA                     l13414:
 22411                           
 22412                           ;usb_device.c: 282: {
 22413                           ;usb_device.c: 283: (UIR &= 0xF7);
 22414  0027CA  9665               	bcf	3941,3,c	;volatile
 22415                           
 22416                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 22417  0027CC  0E00               	movlw	0
 22418  0027CE  6E55               	movwf	_inPipes+3,c	;volatile
 22419                           
 22420                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 22421  0027D0  0E00               	movlw	0
 22422  0027D2  6E31               	movwf	_outPipes+3,c	;volatile
 22423                           
 22424                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 22425  0027D4  0E00               	movlw	0
 22426  0027D6  6E33               	movwf	_outPipes+5,c	;volatile
 22427  0027D8  0E00               	movlw	0
 22428  0027DA  6E32               	movwf	_outPipes+4,c	;volatile
 22429  0027DC  D000               	goto	l13422
 22430  0027DE                     l13422:
 22431  0027DE  B665               	btfsc	3941,3,c	;volatile
 22432  0027E0  D7F4               	goto	l13414
 22433                           
 22434                           ;usb_device.c: 288: }
 22435                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 22436  0027E2  0E01               	movlw	1
 22437  0027E4  0100               	movlb	0	; () banked
 22438  0027E6  6F8A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 22439                           
 22440                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 22441  0027E8  0E01               	movlw	1
 22442  0027EA  0100               	movlb	0	; () banked
 22443  0027EC  6F8B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 22444                           
 22445                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 22446  0027EE  0E00               	movlw	0
 22447  0027F0  0100               	movlb	0	; () banked
 22448  0027F2  6F87               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 22449                           
 22450                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 22451  0027F4  0E00               	movlw	0
 22452  0027F6  0100               	movlb	0	; () banked
 22453  0027F8  6F88               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 22454                           
 22455                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 22456  0027FA  0E00               	movlw	0
 22457  0027FC  0100               	movlb	0	; () banked
 22458  0027FE  6F86               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22459                           
 22460                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 22461  002800  0E00               	movlw	0
 22462  002802  0100               	movlb	0	; () banked
 22463  002804  6FB7               	movwf	USBDeviceInit@i& (0+255),b
 22464  002806                     l13426:
 22465                           
 22466                           ; BSR set to: 0
 22467  002806  0E02               	movlw	2
 22468  002808  0100               	movlb	0	; () banked
 22469  00280A  65B7               	cpfsgt	USBDeviceInit@i& (0+255),b
 22470  00280C  D001               	goto	l13430
 22471                           
 22472                           ; BSR set to: 0
 22473  00280E  D033               	goto	l13436
 22474  002810                     l13430:
 22475                           
 22476                           ; BSR set to: 0
 22477                           ;usb_device.c: 302: {
 22478                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 22479  002810  0100               	movlb	0	; () banked
 22480  002812  51B7               	movf	USBDeviceInit@i& (0+255),w,b
 22481  002814  0D02               	mullw	2
 22482  002816  0E36               	movlw	low _pBDTEntryIn
 22483  002818  24F3               	addwf	prodl,w,c
 22484  00281A  6ED9               	movwf	fsr2l,c
 22485  00281C  0E00               	movlw	high _pBDTEntryIn
 22486  00281E  20F4               	addwfc	prodh,w,c
 22487  002820  6EDA               	movwf	fsr2h,c
 22488  002822  0E00               	movlw	0
 22489  002824  6EDE               	movwf	postinc2,c
 22490  002826  0E00               	movlw	0
 22491  002828  6EDD               	movwf	postdec2,c
 22492                           
 22493                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 22494  00282A  0100               	movlb	0	; () banked
 22495  00282C  51B7               	movf	USBDeviceInit@i& (0+255),w,b
 22496  00282E  0D02               	mullw	2
 22497  002830  0E60               	movlw	low _pBDTEntryOut
 22498  002832  24F3               	addwf	prodl,w,c
 22499  002834  6ED9               	movwf	fsr2l,c
 22500  002836  0E00               	movlw	high _pBDTEntryOut
 22501  002838  20F4               	addwfc	prodh,w,c
 22502  00283A  6EDA               	movwf	fsr2h,c
 22503  00283C  0E00               	movlw	0
 22504  00283E  6EDE               	movwf	postinc2,c
 22505  002840  0E00               	movlw	0
 22506  002842  6EDD               	movwf	postdec2,c
 22507                           
 22508                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 22509  002844  0100               	movlb	0	; () banked
 22510  002846  51B7               	movf	USBDeviceInit@i& (0+255),w,b
 22511  002848  0D01               	mullw	1
 22512  00284A  0E66               	movlw	low _ep_data_in
 22513  00284C  24F3               	addwf	prodl,w,c
 22514  00284E  6ED9               	movwf	fsr2l,c
 22515  002850  0E00               	movlw	high _ep_data_in
 22516  002852  20F4               	addwfc	prodh,w,c
 22517  002854  6EDA               	movwf	fsr2h,c
 22518  002856  0E00               	movlw	0
 22519  002858  6EDF               	movwf	indf2,c
 22520                           
 22521                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 22522  00285A  0100               	movlb	0	; () banked
 22523  00285C  51B7               	movf	USBDeviceInit@i& (0+255),w,b
 22524  00285E  0D01               	mullw	1
 22525  002860  0E69               	movlw	low _ep_data_out
 22526  002862  24F3               	addwf	prodl,w,c
 22527  002864  6ED9               	movwf	fsr2l,c
 22528  002866  0E00               	movlw	high _ep_data_out
 22529  002868  20F4               	addwfc	prodh,w,c
 22530  00286A  6EDA               	movwf	fsr2h,c
 22531  00286C  0E00               	movlw	0
 22532  00286E  6EDF               	movwf	indf2,c
 22533                           
 22534                           ; BSR set to: 0
 22535  002870  0100               	movlb	0	; () banked
 22536  002872  2BB7               	incf	USBDeviceInit@i& (0+255),f,b
 22537  002874  D7C8               	goto	l13426
 22538  002876                     l13436:
 22539                           
 22540                           ; BSR set to: 0
 22541                           ;usb_device.c: 307: }
 22542                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 22543  002876  0E08               	movlw	8
 22544  002878  6E36               	movwf	_pBDTEntryIn,c
 22545  00287A  0E04               	movlw	4
 22546  00287C  6E37               	movwf	_pBDTEntryIn+1,c
 22547                           
 22548                           ; BSR set to: 0
 22549                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 22550  00287E  0E16               	movlw	22
 22551  002880  6E6A               	movwf	3946,c	;volatile
 22552                           
 22553                           ; BSR set to: 0
 22554                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 22555  002882  0E04               	movlw	4
 22556  002884  0104               	movlb	4	; () banked
 22557  002886  6F03               	movwf	3,b	;volatile
 22558  002888  0E30               	movlw	48
 22559  00288A  6F02               	movwf	2,b	;volatile
 22560                           
 22561                           ; BSR set to: 4
 22562                           ;usb_device.c: 315: BDT[0].CNT = 8;
 22563  00288C  0E08               	movlw	8
 22564  00288E  0104               	movlb	4	; () banked
 22565  002890  6F01               	movwf	1,b	;volatile
 22566                           
 22567                           ; BSR set to: 4
 22568                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 22569  002892  0E04               	movlw	4
 22570  002894  0104               	movlb	4	; () banked
 22571  002896  6F00               	movwf	0,b	;volatile
 22572                           
 22573                           ; BSR set to: 4
 22574                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 22575  002898  0104               	movlb	4	; () banked
 22576  00289A  8F00               	bsf	0,7,b	;volatile
 22577                           
 22578                           ; BSR set to: 4
 22579                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 22580  00289C  0E00               	movlw	0
 22581  00289E  6E58               	movwf	_USBActiveConfiguration,c	;volatile
 22582                           
 22583                           ; BSR set to: 4
 22584                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 22585  0028A0  0E00               	movlw	0
 22586  0028A2  0100               	movlb	0	; () banked
 22587  0028A4  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 22588                           
 22589                           ; BSR set to: 0
 22590  0028A6  0012               	return		;funcret
 22591  0028A8                     __end_of_USBDeviceInit:
 22592                           	opt stack 0
 22593                           tblptru	equ	0xFF8
 22594                           tblptrh	equ	0xFF7
 22595                           tblptrl	equ	0xFF6
 22596                           tablat	equ	0xFF5
 22597                           prodh	equ	0xFF4
 22598                           prodl	equ	0xFF3
 22599                           intcon	equ	0xFF2
 22600                           intcon3	equ	0xFF0
 22601                           indf0	equ	0xFEF
 22602                           postinc0	equ	0xFEE
 22603                           fsr0h	equ	0xFEA
 22604                           fsr0l	equ	0xFE9
 22605                           wreg	equ	0xFE8
 22606                           indf1	equ	0xFE7
 22607                           postdec1	equ	0xFE5
 22608                           fsr1h	equ	0xFE2
 22609                           fsr1l	equ	0xFE1
 22610                           indf2	equ	0xFDF
 22611                           postinc2	equ	0xFDE
 22612                           postdec2	equ	0xFDD
 22613                           plusw2	equ	0xFDB
 22614                           fsr2h	equ	0xFDA
 22615                           fsr2l	equ	0xFD9
 22616                           status	equ	0xFD8
 22617                           
 22618 ;; *************** function _memset *****************
 22619 ;; Defined at:
 22620 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
 22621 ;; Parameters:    Size  Location     Type
 22622 ;;  p1              2    0[BANK0 ] PTR void 
 22623 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22624 ;;  c               2    2[BANK0 ] int 
 22625 ;;  n               2    4[BANK0 ] unsigned int 
 22626 ;; Auto vars:     Size  Location     Type
 22627 ;;  p               2    6[BANK0 ] PTR unsigned char 
 22628 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22629 ;; Return value:  Size  Location     Type
 22630 ;;                  2    0[BANK0 ] PTR void 
 22631 ;; Registers used:
 22632 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22633 ;; Tracked objects:
 22634 ;;		On entry : 0/0
 22635 ;;		On exit  : 0/0
 22636 ;;		Unchanged: 0/0
 22637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22638 ;;      Params:         0       6       0       0       0       0       0       0       0
 22639 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22640 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22641 ;;      Totals:         0       8       0       0       0       0       0       0       0
 22642 ;;Total ram usage:        8 bytes
 22643 ;; Hardware stack levels used:    1
 22644 ;; Hardware stack levels required when called:   11
 22645 ;; This function calls:
 22646 ;;		Nothing
 22647 ;; This function is called by:
 22648 ;;		_USBDeviceInit
 22649 ;; This function uses a non-reentrant model
 22650 ;;
 22651                           
 22652                           	psect	text88
 22653  005BC0                     __ptext88:
 22654                           	opt stack 0
 22655  005BC0                     _memset:
 22656                           	opt stack 18
 22657                           
 22658                           ; BSR set to: 0
 22659                           ;incstack = 0
 22660  005BC0  C0AF  F0B5         	movff	memset@p1,memset@p
 22661  005BC4  C0B0  F0B6         	movff	memset@p1+1,memset@p+1
 22662  005BC8  D00A               	goto	l13368
 22663  005BCA                     l13364:
 22664  005BCA  C0B5  FFD9         	movff	memset@p,fsr2l
 22665  005BCE  C0B6  FFDA         	movff	memset@p+1,fsr2h
 22666  005BD2  C0B1  FFDF         	movff	memset@c,indf2
 22667  005BD6  0100               	movlb	0	; () banked
 22668  005BD8  4BB5               	infsnz	memset@p& (0+255),f,b
 22669  005BDA  2BB6               	incf	(memset@p+1)& (0+255),f,b
 22670  005BDC  D000               	goto	l13368
 22671  005BDE                     l13368:
 22672  005BDE  0100               	movlb	0	; () banked
 22673  005BE0  07B3               	decf	memset@n& (0+255),f,b
 22674  005BE2  A0D8               	btfss	status,0,c
 22675  005BE4  07B4               	decf	(memset@n+1)& (0+255),f,b
 22676  005BE6  0100               	movlb	0	; () banked
 22677  005BE8  29B3               	incf	memset@n& (0+255),w,b
 22678  005BEA  E1EF               	bnz	l13364
 22679  005BEC  0100               	movlb	0	; () banked
 22680  005BEE  29B4               	incf	(memset@n+1)& (0+255),w,b
 22681  005BF0  A4D8               	btfss	status,2,c
 22682  005BF2  D7EB               	goto	l13364
 22683                           
 22684                           ; BSR set to: 0
 22685                           
 22686                           ; BSR set to: 0
 22687                           ;	Return value of _memset is never used
 22688  005BF4  0012               	return		;funcret
 22689  005BF6                     __end_of_memset:
 22690                           	opt stack 0
 22691                           tblptru	equ	0xFF8
 22692                           tblptrh	equ	0xFF7
 22693                           tblptrl	equ	0xFF6
 22694                           tablat	equ	0xFF5
 22695                           prodh	equ	0xFF4
 22696                           prodl	equ	0xFF3
 22697                           intcon	equ	0xFF2
 22698                           intcon3	equ	0xFF0
 22699                           indf0	equ	0xFEF
 22700                           postinc0	equ	0xFEE
 22701                           fsr0h	equ	0xFEA
 22702                           fsr0l	equ	0xFE9
 22703                           wreg	equ	0xFE8
 22704                           indf1	equ	0xFE7
 22705                           postdec1	equ	0xFE5
 22706                           fsr1h	equ	0xFE2
 22707                           fsr1l	equ	0xFE1
 22708                           indf2	equ	0xFDF
 22709                           postinc2	equ	0xFDE
 22710                           postdec2	equ	0xFDD
 22711                           plusw2	equ	0xFDB
 22712                           fsr2h	equ	0xFDA
 22713                           fsr2l	equ	0xFD9
 22714                           status	equ	0xFD8
 22715                           
 22716 ;; *************** function _USBDeviceAttach *****************
 22717 ;; Defined at:
 22718 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 22719 ;; Parameters:    Size  Location     Type
 22720 ;;		None
 22721 ;; Auto vars:     Size  Location     Type
 22722 ;;		None
 22723 ;; Return value:  Size  Location     Type
 22724 ;;		None               void
 22725 ;; Registers used:
 22726 ;;		wreg, status,2
 22727 ;; Tracked objects:
 22728 ;;		On entry : 0/0
 22729 ;;		On exit  : 0/0
 22730 ;;		Unchanged: 0/0
 22731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22732 ;;      Params:         0       0       0       0       0       0       0       0       0
 22733 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22734 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22735 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22736 ;;Total ram usage:        0 bytes
 22737 ;; Hardware stack levels used:    1
 22738 ;; Hardware stack levels required when called:   11
 22739 ;; This function calls:
 22740 ;;		Nothing
 22741 ;; This function is called by:
 22742 ;;		_main
 22743 ;; This function uses a non-reentrant model
 22744 ;;
 22745                           
 22746                           	psect	text89
 22747  005BF6                     __ptext89:
 22748                           	opt stack 0
 22749  005BF6                     _USBDeviceAttach:
 22750                           	opt stack 19
 22751                           
 22752                           ;usb_device.c: 1050: {
 22753                           ;usb_device.c: 1051: if(1 == 1)
 22754                           
 22755                           ; BSR set to: 0
 22756                           ;incstack = 0
 22757  005BF6  0100               	movlb	0	; () banked
 22758  005BF8  5189               	movf	_USBDeviceState& (0+255),w,b	;volatile
 22759  005BFA  A4D8               	btfss	status,2,c
 22760  005BFC  0012               	return	
 22761                           
 22762                           ; BSR set to: 0
 22763                           ;usb_device.c: 1052: {
 22764                           ;usb_device.c: 1054: UCON = 0;
 22765  005BFE  0E00               	movlw	0
 22766  005C00  6E60               	movwf	3936,c	;volatile
 22767                           
 22768                           ;usb_device.c: 1057: UIE = 0;
 22769  005C02  0E00               	movlw	0
 22770  005C04  6E64               	movwf	3940,c	;volatile
 22771                           
 22772                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 22773  005C06  0E16               	movlw	22
 22774  005C08  6E62               	movwf	3938,c	;volatile
 22775  005C0A  0E9F               	movlw	159
 22776  005C0C  6E66               	movwf	3942,c	;volatile
 22777  005C0E  0E7B               	movlw	123
 22778  005C10  6E64               	movwf	3940,c	;volatile
 22779                           
 22780                           ; BSR set to: 0
 22781                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 22782  005C12  8ED0               	bsf	4048,7,c	;volatile
 22783                           
 22784                           ; BSR set to: 0
 22785  005C14  84A5               	bsf	4005,2,c	;volatile
 22786                           
 22787                           ; BSR set to: 0
 22788  005C16  84A3               	bsf	4003,2,c	;volatile
 22789                           
 22790                           ; BSR set to: 0
 22791  005C18  8EF2               	bsf	intcon,7,c	;volatile
 22792                           
 22793                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 22794  005C1A  D001               	goto	l1767
 22795  005C1C                     l1768:
 22796  005C1C  8660               	bsf	3936,3,c	;volatile
 22797  005C1E                     l1767:
 22798  005C1E  A660               	btfss	3936,3,c	;volatile
 22799  005C20  D7FD               	goto	l1768
 22800                           
 22801                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 22802  005C22  0E01               	movlw	1
 22803  005C24  0100               	movlb	0	; () banked
 22804  005C26  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 22805                           
 22806                           ; BSR set to: 0
 22807  005C28  0012               	return	
 22808                           
 22809                           ; BSR set to: 0
 22810                           
 22811                           ; BSR set to: 0
 22812  005C2A  0012               	return		;funcret
 22813  005C2C                     __end_of_USBDeviceAttach:
 22814                           	opt stack 0
 22815                           tblptru	equ	0xFF8
 22816                           tblptrh	equ	0xFF7
 22817                           tblptrl	equ	0xFF6
 22818                           tablat	equ	0xFF5
 22819                           prodh	equ	0xFF4
 22820                           prodl	equ	0xFF3
 22821                           intcon	equ	0xFF2
 22822                           intcon3	equ	0xFF0
 22823                           indf0	equ	0xFEF
 22824                           postinc0	equ	0xFEE
 22825                           fsr0h	equ	0xFEA
 22826                           fsr0l	equ	0xFE9
 22827                           wreg	equ	0xFE8
 22828                           indf1	equ	0xFE7
 22829                           postdec1	equ	0xFE5
 22830                           fsr1h	equ	0xFE2
 22831                           fsr1l	equ	0xFE1
 22832                           indf2	equ	0xFDF
 22833                           postinc2	equ	0xFDE
 22834                           postdec2	equ	0xFDD
 22835                           plusw2	equ	0xFDB
 22836                           fsr2h	equ	0xFDA
 22837                           fsr2l	equ	0xFD9
 22838                           status	equ	0xFD8
 22839                           
 22840 ;; *************** function _SYSTEM_Initialize *****************
 22841 ;; Defined at:
 22842 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 22843 ;; Parameters:    Size  Location     Type
 22844 ;;		None
 22845 ;; Auto vars:     Size  Location     Type
 22846 ;;		None
 22847 ;; Return value:  Size  Location     Type
 22848 ;;		None               void
 22849 ;; Registers used:
 22850 ;;		wreg, status,2, status,0, cstack
 22851 ;; Tracked objects:
 22852 ;;		On entry : 0/0
 22853 ;;		On exit  : 0/0
 22854 ;;		Unchanged: 0/0
 22855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22856 ;;      Params:         0       0       0       0       0       0       0       0       0
 22857 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22858 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22859 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22860 ;;Total ram usage:        0 bytes
 22861 ;; Hardware stack levels used:    1
 22862 ;; Hardware stack levels required when called:   13
 22863 ;; This function calls:
 22864 ;;		_ADC_Initialize
 22865 ;;		_CMP1_Initialize
 22866 ;;		_EUSART_Initialize
 22867 ;;		_OSCILLATOR_Initialize
 22868 ;;		_PIN_MANAGER_Initialize
 22869 ;;		_TMR1_Initialize
 22870 ;;		_TMR2_Initialize
 22871 ;;		_TMR3_Initialize
 22872 ;; This function is called by:
 22873 ;;		_main
 22874 ;; This function uses a non-reentrant model
 22875 ;;
 22876                           
 22877                           	psect	text90
 22878  005DF4                     __ptext90:
 22879                           	opt stack 0
 22880  005DF4                     _SYSTEM_Initialize:
 22881                           	opt stack 17
 22882                           
 22883                           ;mcc.c: 95: OSCILLATOR_Initialize();
 22884                           
 22885                           ; BSR set to: 0
 22886                           ;incstack = 0
 22887  005DF4  EC86  F02F         	call	_OSCILLATOR_Initialize	;wreg free
 22888                           
 22889                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 22890  005DF8  EC6F  F02B         	call	_PIN_MANAGER_Initialize	;wreg free
 22891                           
 22892                           ;mcc.c: 98: TMR1_Initialize();
 22893  005DFC  ECA9  F02D         	call	_TMR1_Initialize	;wreg free
 22894                           
 22895                           ;mcc.c: 99: TMR2_Initialize();
 22896  005E00  ECB3  F02F         	call	_TMR2_Initialize	;wreg free
 22897                           
 22898                           ;mcc.c: 100: TMR3_Initialize();
 22899  005E04  EC0B  F02F         	call	_TMR3_Initialize	;wreg free
 22900                           
 22901                           ;mcc.c: 101: EUSART_Initialize();
 22902  005E08  ECBD  F02C         	call	_EUSART_Initialize	;wreg free
 22903                           
 22904                           ;mcc.c: 102: ADC_Initialize();
 22905  005E0C  EC55  F02F         	call	_ADC_Initialize	;wreg free
 22906                           
 22907                           ;mcc.c: 103: CMP1_Initialize();
 22908  005E10  ECD8  F02F         	call	_CMP1_Initialize	;wreg free
 22909  005E14  0012               	return		;funcret
 22910  005E16                     __end_of_SYSTEM_Initialize:
 22911                           	opt stack 0
 22912                           tblptru	equ	0xFF8
 22913                           tblptrh	equ	0xFF7
 22914                           tblptrl	equ	0xFF6
 22915                           tablat	equ	0xFF5
 22916                           prodh	equ	0xFF4
 22917                           prodl	equ	0xFF3
 22918                           intcon	equ	0xFF2
 22919                           intcon3	equ	0xFF0
 22920                           indf0	equ	0xFEF
 22921                           postinc0	equ	0xFEE
 22922                           fsr0h	equ	0xFEA
 22923                           fsr0l	equ	0xFE9
 22924                           wreg	equ	0xFE8
 22925                           indf1	equ	0xFE7
 22926                           postdec1	equ	0xFE5
 22927                           fsr1h	equ	0xFE2
 22928                           fsr1l	equ	0xFE1
 22929                           indf2	equ	0xFDF
 22930                           postinc2	equ	0xFDE
 22931                           postdec2	equ	0xFDD
 22932                           plusw2	equ	0xFDB
 22933                           fsr2h	equ	0xFDA
 22934                           fsr2l	equ	0xFD9
 22935                           status	equ	0xFD8
 22936                           
 22937 ;; *************** function _TMR3_Initialize *****************
 22938 ;; Defined at:
 22939 ;;		line 67 in file "../Includes/MccGenerated/tmr3.c"
 22940 ;; Parameters:    Size  Location     Type
 22941 ;;		None
 22942 ;; Auto vars:     Size  Location     Type
 22943 ;;		None
 22944 ;; Return value:  Size  Location     Type
 22945 ;;		None               void
 22946 ;; Registers used:
 22947 ;;		wreg, status,2, cstack
 22948 ;; Tracked objects:
 22949 ;;		On entry : 0/0
 22950 ;;		On exit  : 0/0
 22951 ;;		Unchanged: 0/0
 22952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22953 ;;      Params:         0       0       0       0       0       0       0       0       0
 22954 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22955 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22956 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22957 ;;Total ram usage:        0 bytes
 22958 ;; Hardware stack levels used:    1
 22959 ;; Hardware stack levels required when called:   12
 22960 ;; This function calls:
 22961 ;;		_TMR3_StartTimer
 22962 ;; This function is called by:
 22963 ;;		_SYSTEM_Initialize
 22964 ;; This function uses a non-reentrant model
 22965 ;;
 22966                           
 22967                           	psect	text91
 22968  005E16                     __ptext91:
 22969                           	opt stack 0
 22970  005E16                     _TMR3_Initialize:
 22971                           	opt stack 17
 22972                           
 22973                           ;tmr3.c: 72: T3CON = 0x04;
 22974                           
 22975                           ;incstack = 0
 22976  005E16  0E04               	movlw	4
 22977  005E18  6EB1               	movwf	4017,c	;volatile
 22978                           
 22979                           ;tmr3.c: 75: T3GCON = 0x00;
 22980  005E1A  0E00               	movlw	0
 22981  005E1C  6EB4               	movwf	4020,c	;volatile
 22982                           
 22983                           ;tmr3.c: 78: TMR3H = 0xD5;
 22984  005E1E  0ED5               	movlw	213
 22985  005E20  6EB3               	movwf	4019,c	;volatile
 22986                           
 22987                           ;tmr3.c: 81: TMR3L = 0xD0;
 22988  005E22  0ED0               	movlw	208
 22989  005E24  6EB2               	movwf	4018,c	;volatile
 22990                           
 22991                           ;tmr3.c: 84: timer3ReloadVal=TMR3;
 22992  005E26  CFB2 F07E          	movff	4018,_timer3ReloadVal	;volatile
 22993  005E2A  CFB3 F07F          	movff	4019,_timer3ReloadVal+1	;volatile
 22994                           
 22995                           ;tmr3.c: 87: PIR2bits.TMR3IF = 0;
 22996  005E2E  92A1               	bcf	4001,1,c	;volatile
 22997                           
 22998                           ;tmr3.c: 90: PIE2bits.TMR3IE = 1;
 22999  005E30  82A0               	bsf	4000,1,c	;volatile
 23000                           
 23001                           ;tmr3.c: 93: TMR3_StartTimer();
 23002  005E32  EC2E  F030         	call	_TMR3_StartTimer	;wreg free
 23003  005E36  0012               	return		;funcret
 23004  005E38                     __end_of_TMR3_Initialize:
 23005                           	opt stack 0
 23006                           tblptru	equ	0xFF8
 23007                           tblptrh	equ	0xFF7
 23008                           tblptrl	equ	0xFF6
 23009                           tablat	equ	0xFF5
 23010                           prodh	equ	0xFF4
 23011                           prodl	equ	0xFF3
 23012                           intcon	equ	0xFF2
 23013                           intcon3	equ	0xFF0
 23014                           indf0	equ	0xFEF
 23015                           postinc0	equ	0xFEE
 23016                           fsr0h	equ	0xFEA
 23017                           fsr0l	equ	0xFE9
 23018                           wreg	equ	0xFE8
 23019                           indf1	equ	0xFE7
 23020                           postdec1	equ	0xFE5
 23021                           fsr1h	equ	0xFE2
 23022                           fsr1l	equ	0xFE1
 23023                           indf2	equ	0xFDF
 23024                           postinc2	equ	0xFDE
 23025                           postdec2	equ	0xFDD
 23026                           plusw2	equ	0xFDB
 23027                           fsr2h	equ	0xFDA
 23028                           fsr2l	equ	0xFD9
 23029                           status	equ	0xFD8
 23030                           
 23031 ;; *************** function _TMR3_StartTimer *****************
 23032 ;; Defined at:
 23033 ;;		line 96 in file "../Includes/MccGenerated/tmr3.c"
 23034 ;; Parameters:    Size  Location     Type
 23035 ;;		None
 23036 ;; Auto vars:     Size  Location     Type
 23037 ;;		None
 23038 ;; Return value:  Size  Location     Type
 23039 ;;		None               void
 23040 ;; Registers used:
 23041 ;;		None
 23042 ;; Tracked objects:
 23043 ;;		On entry : 0/0
 23044 ;;		On exit  : 0/0
 23045 ;;		Unchanged: 0/0
 23046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23047 ;;      Params:         0       0       0       0       0       0       0       0       0
 23048 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23049 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23050 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23051 ;;Total ram usage:        0 bytes
 23052 ;; Hardware stack levels used:    1
 23053 ;; Hardware stack levels required when called:   11
 23054 ;; This function calls:
 23055 ;;		Nothing
 23056 ;; This function is called by:
 23057 ;;		_TMR3_Initialize
 23058 ;; This function uses a non-reentrant model
 23059 ;;
 23060                           
 23061                           	psect	text92
 23062  00605C                     __ptext92:
 23063                           	opt stack 0
 23064  00605C                     _TMR3_StartTimer:
 23065                           	opt stack 17
 23066                           
 23067                           ;tmr3.c: 99: T3CONbits.TMR3ON = 1;
 23068                           
 23069                           ;incstack = 0
 23070  00605C  80B1               	bsf	4017,0,c	;volatile
 23071  00605E  0012               	return		;funcret
 23072  006060                     __end_of_TMR3_StartTimer:
 23073                           	opt stack 0
 23074                           tblptru	equ	0xFF8
 23075                           tblptrh	equ	0xFF7
 23076                           tblptrl	equ	0xFF6
 23077                           tablat	equ	0xFF5
 23078                           prodh	equ	0xFF4
 23079                           prodl	equ	0xFF3
 23080                           intcon	equ	0xFF2
 23081                           intcon3	equ	0xFF0
 23082                           indf0	equ	0xFEF
 23083                           postinc0	equ	0xFEE
 23084                           fsr0h	equ	0xFEA
 23085                           fsr0l	equ	0xFE9
 23086                           wreg	equ	0xFE8
 23087                           indf1	equ	0xFE7
 23088                           postdec1	equ	0xFE5
 23089                           fsr1h	equ	0xFE2
 23090                           fsr1l	equ	0xFE1
 23091                           indf2	equ	0xFDF
 23092                           postinc2	equ	0xFDE
 23093                           postdec2	equ	0xFDD
 23094                           plusw2	equ	0xFDB
 23095                           fsr2h	equ	0xFDA
 23096                           fsr2l	equ	0xFD9
 23097                           status	equ	0xFD8
 23098                           
 23099 ;; *************** function _TMR2_Initialize *****************
 23100 ;; Defined at:
 23101 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 23102 ;; Parameters:    Size  Location     Type
 23103 ;;		None
 23104 ;; Auto vars:     Size  Location     Type
 23105 ;;		None
 23106 ;; Return value:  Size  Location     Type
 23107 ;;		None               void
 23108 ;; Registers used:
 23109 ;;		wreg, status,2, cstack
 23110 ;; Tracked objects:
 23111 ;;		On entry : 0/0
 23112 ;;		On exit  : 0/0
 23113 ;;		Unchanged: 0/0
 23114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23115 ;;      Params:         0       0       0       0       0       0       0       0       0
 23116 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23117 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23118 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23119 ;;Total ram usage:        0 bytes
 23120 ;; Hardware stack levels used:    1
 23121 ;; Hardware stack levels required when called:   12
 23122 ;; This function calls:
 23123 ;;		_TMR2_StartTimer
 23124 ;; This function is called by:
 23125 ;;		_SYSTEM_Initialize
 23126 ;; This function uses a non-reentrant model
 23127 ;;
 23128                           
 23129                           	psect	text93
 23130  005F66                     __ptext93:
 23131                           	opt stack 0
 23132  005F66                     _TMR2_Initialize:
 23133                           	opt stack 17
 23134                           
 23135                           ;tmr2.c: 62: T2CON = 0x7A;
 23136                           
 23137                           ;incstack = 0
 23138  005F66  0E7A               	movlw	122
 23139  005F68  6EBA               	movwf	4026,c	;volatile
 23140                           
 23141                           ;tmr2.c: 65: PR2 = 0x9B;
 23142  005F6A  0E9B               	movlw	155
 23143  005F6C  6EBB               	movwf	4027,c	;volatile
 23144                           
 23145                           ;tmr2.c: 68: TMR2 = 0x00;
 23146  005F6E  0E00               	movlw	0
 23147  005F70  6EBC               	movwf	4028,c	;volatile
 23148                           
 23149                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 23150  005F72  929E               	bcf	3998,1,c	;volatile
 23151                           
 23152                           ;tmr2.c: 74: TMR2_StartTimer();
 23153  005F74  EC30  F030         	call	_TMR2_StartTimer	;wreg free
 23154  005F78  0012               	return		;funcret
 23155  005F7A                     __end_of_TMR2_Initialize:
 23156                           	opt stack 0
 23157                           tblptru	equ	0xFF8
 23158                           tblptrh	equ	0xFF7
 23159                           tblptrl	equ	0xFF6
 23160                           tablat	equ	0xFF5
 23161                           prodh	equ	0xFF4
 23162                           prodl	equ	0xFF3
 23163                           intcon	equ	0xFF2
 23164                           intcon3	equ	0xFF0
 23165                           indf0	equ	0xFEF
 23166                           postinc0	equ	0xFEE
 23167                           fsr0h	equ	0xFEA
 23168                           fsr0l	equ	0xFE9
 23169                           wreg	equ	0xFE8
 23170                           indf1	equ	0xFE7
 23171                           postdec1	equ	0xFE5
 23172                           fsr1h	equ	0xFE2
 23173                           fsr1l	equ	0xFE1
 23174                           indf2	equ	0xFDF
 23175                           postinc2	equ	0xFDE
 23176                           postdec2	equ	0xFDD
 23177                           plusw2	equ	0xFDB
 23178                           fsr2h	equ	0xFDA
 23179                           fsr2l	equ	0xFD9
 23180                           status	equ	0xFD8
 23181                           
 23182 ;; *************** function _TMR2_StartTimer *****************
 23183 ;; Defined at:
 23184 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 23185 ;; Parameters:    Size  Location     Type
 23186 ;;		None
 23187 ;; Auto vars:     Size  Location     Type
 23188 ;;		None
 23189 ;; Return value:  Size  Location     Type
 23190 ;;		None               void
 23191 ;; Registers used:
 23192 ;;		None
 23193 ;; Tracked objects:
 23194 ;;		On entry : 0/0
 23195 ;;		On exit  : 0/0
 23196 ;;		Unchanged: 0/0
 23197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23198 ;;      Params:         0       0       0       0       0       0       0       0       0
 23199 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23200 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23201 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23202 ;;Total ram usage:        0 bytes
 23203 ;; Hardware stack levels used:    1
 23204 ;; Hardware stack levels required when called:   11
 23205 ;; This function calls:
 23206 ;;		Nothing
 23207 ;; This function is called by:
 23208 ;;		_TMR2_Initialize
 23209 ;; This function uses a non-reentrant model
 23210 ;;
 23211                           
 23212                           	psect	text94
 23213  006060                     __ptext94:
 23214                           	opt stack 0
 23215  006060                     _TMR2_StartTimer:
 23216                           	opt stack 17
 23217                           
 23218                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 23219                           
 23220                           ;incstack = 0
 23221  006060  84BA               	bsf	4026,2,c	;volatile
 23222  006062  0012               	return		;funcret
 23223  006064                     __end_of_TMR2_StartTimer:
 23224                           	opt stack 0
 23225                           tblptru	equ	0xFF8
 23226                           tblptrh	equ	0xFF7
 23227                           tblptrl	equ	0xFF6
 23228                           tablat	equ	0xFF5
 23229                           prodh	equ	0xFF4
 23230                           prodl	equ	0xFF3
 23231                           intcon	equ	0xFF2
 23232                           intcon3	equ	0xFF0
 23233                           indf0	equ	0xFEF
 23234                           postinc0	equ	0xFEE
 23235                           fsr0h	equ	0xFEA
 23236                           fsr0l	equ	0xFE9
 23237                           wreg	equ	0xFE8
 23238                           indf1	equ	0xFE7
 23239                           postdec1	equ	0xFE5
 23240                           fsr1h	equ	0xFE2
 23241                           fsr1l	equ	0xFE1
 23242                           indf2	equ	0xFDF
 23243                           postinc2	equ	0xFDE
 23244                           postdec2	equ	0xFDD
 23245                           plusw2	equ	0xFDB
 23246                           fsr2h	equ	0xFDA
 23247                           fsr2l	equ	0xFD9
 23248                           status	equ	0xFD8
 23249                           
 23250 ;; *************** function _TMR1_Initialize *****************
 23251 ;; Defined at:
 23252 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 23253 ;; Parameters:    Size  Location     Type
 23254 ;;		None
 23255 ;; Auto vars:     Size  Location     Type
 23256 ;;		None
 23257 ;; Return value:  Size  Location     Type
 23258 ;;		None               void
 23259 ;; Registers used:
 23260 ;;		wreg, status,2, status,0, cstack
 23261 ;; Tracked objects:
 23262 ;;		On entry : 0/0
 23263 ;;		On exit  : 0/0
 23264 ;;		Unchanged: 0/0
 23265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23266 ;;      Params:         0       0       0       0       0       0       0       0       0
 23267 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23268 ;;      Temps:          0       2       0       0       0       0       0       0       0
 23269 ;;      Totals:         0       2       0       0       0       0       0       0       0
 23270 ;;Total ram usage:        2 bytes
 23271 ;; Hardware stack levels used:    1
 23272 ;; Hardware stack levels required when called:   12
 23273 ;; This function calls:
 23274 ;;		_TMR1_StartTimer
 23275 ;; This function is called by:
 23276 ;;		_SYSTEM_Initialize
 23277 ;; This function uses a non-reentrant model
 23278 ;;
 23279                           
 23280                           	psect	text95
 23281  005B52                     __ptext95:
 23282                           	opt stack 0
 23283  005B52                     _TMR1_Initialize:
 23284                           	opt stack 17
 23285                           
 23286                           ;tmr1.c: 68: T1CON = 0x00;
 23287                           
 23288                           ;incstack = 0
 23289  005B52  0E00               	movlw	0
 23290  005B54  6ECD               	movwf	4045,c	;volatile
 23291                           
 23292                           ;tmr1.c: 71: T1GCON = 0x00;
 23293  005B56  0E00               	movlw	0
 23294  005B58  6ECC               	movwf	4044,c	;volatile
 23295                           
 23296                           ;tmr1.c: 74: TMR1H = 0xD0;
 23297  005B5A  0ED0               	movlw	208
 23298  005B5C  6ECF               	movwf	4047,c	;volatile
 23299                           
 23300                           ;tmr1.c: 77: TMR1L = 0x20;
 23301  005B5E  0E20               	movlw	32
 23302  005B60  6ECE               	movwf	4046,c	;volatile
 23303                           
 23304                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 23305  005B62  50CE               	movf	4046,w,c	;volatile
 23306  005B64  CFCF F0AF          	movff	4047,??_TMR1_Initialize	;volatile
 23307  005B68  0100               	movlb	0	; () banked
 23308  005B6A  6BB0               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 23309  005B6C  C0AF  F0B0         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 23310  005B70  0100               	movlb	0	; () banked
 23311  005B72  6BAF               	clrf	??_TMR1_Initialize& (0+255),b
 23312  005B74  0100               	movlb	0	; () banked
 23313  005B76  11AF               	iorwf	??_TMR1_Initialize& (0+255),w,b
 23314  005B78  6E42               	movwf	_timer1ReloadVal,c	;volatile
 23315  005B7A  0100               	movlb	0	; () banked
 23316  005B7C  51B0               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 23317  005B7E  6E43               	movwf	_timer1ReloadVal+1,c	;volatile
 23318                           
 23319                           ; BSR set to: 0
 23320                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 23321  005B80  909E               	bcf	3998,0,c	;volatile
 23322                           
 23323                           ; BSR set to: 0
 23324                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 23325  005B82  809D               	bsf	3997,0,c	;volatile
 23326                           
 23327                           ; BSR set to: 0
 23328                           ;tmr1.c: 89: TMR1_StartTimer();
 23329  005B84  EC32  F030         	call	_TMR1_StartTimer	;wreg free
 23330  005B88  0012               	return		;funcret
 23331  005B8A                     __end_of_TMR1_Initialize:
 23332                           	opt stack 0
 23333                           tblptru	equ	0xFF8
 23334                           tblptrh	equ	0xFF7
 23335                           tblptrl	equ	0xFF6
 23336                           tablat	equ	0xFF5
 23337                           prodh	equ	0xFF4
 23338                           prodl	equ	0xFF3
 23339                           intcon	equ	0xFF2
 23340                           intcon3	equ	0xFF0
 23341                           indf0	equ	0xFEF
 23342                           postinc0	equ	0xFEE
 23343                           fsr0h	equ	0xFEA
 23344                           fsr0l	equ	0xFE9
 23345                           wreg	equ	0xFE8
 23346                           indf1	equ	0xFE7
 23347                           postdec1	equ	0xFE5
 23348                           fsr1h	equ	0xFE2
 23349                           fsr1l	equ	0xFE1
 23350                           indf2	equ	0xFDF
 23351                           postinc2	equ	0xFDE
 23352                           postdec2	equ	0xFDD
 23353                           plusw2	equ	0xFDB
 23354                           fsr2h	equ	0xFDA
 23355                           fsr2l	equ	0xFD9
 23356                           status	equ	0xFD8
 23357                           
 23358 ;; *************** function _TMR1_StartTimer *****************
 23359 ;; Defined at:
 23360 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 23361 ;; Parameters:    Size  Location     Type
 23362 ;;		None
 23363 ;; Auto vars:     Size  Location     Type
 23364 ;;		None
 23365 ;; Return value:  Size  Location     Type
 23366 ;;		None               void
 23367 ;; Registers used:
 23368 ;;		None
 23369 ;; Tracked objects:
 23370 ;;		On entry : 0/0
 23371 ;;		On exit  : 0/0
 23372 ;;		Unchanged: 0/0
 23373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23374 ;;      Params:         0       0       0       0       0       0       0       0       0
 23375 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23376 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23377 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23378 ;;Total ram usage:        0 bytes
 23379 ;; Hardware stack levels used:    1
 23380 ;; Hardware stack levels required when called:   11
 23381 ;; This function calls:
 23382 ;;		Nothing
 23383 ;; This function is called by:
 23384 ;;		_TMR1_Initialize
 23385 ;; This function uses a non-reentrant model
 23386 ;;
 23387                           
 23388                           	psect	text96
 23389  006064                     __ptext96:
 23390                           	opt stack 0
 23391  006064                     _TMR1_StartTimer:
 23392                           	opt stack 17
 23393                           
 23394                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 23395                           
 23396                           ;incstack = 0
 23397  006064  80CD               	bsf	4045,0,c	;volatile
 23398  006066  0012               	return		;funcret
 23399  006068                     __end_of_TMR1_StartTimer:
 23400                           	opt stack 0
 23401                           tblptru	equ	0xFF8
 23402                           tblptrh	equ	0xFF7
 23403                           tblptrl	equ	0xFF6
 23404                           tablat	equ	0xFF5
 23405                           prodh	equ	0xFF4
 23406                           prodl	equ	0xFF3
 23407                           intcon	equ	0xFF2
 23408                           intcon3	equ	0xFF0
 23409                           indf0	equ	0xFEF
 23410                           postinc0	equ	0xFEE
 23411                           fsr0h	equ	0xFEA
 23412                           fsr0l	equ	0xFE9
 23413                           wreg	equ	0xFE8
 23414                           indf1	equ	0xFE7
 23415                           postdec1	equ	0xFE5
 23416                           fsr1h	equ	0xFE2
 23417                           fsr1l	equ	0xFE1
 23418                           indf2	equ	0xFDF
 23419                           postinc2	equ	0xFDE
 23420                           postdec2	equ	0xFDD
 23421                           plusw2	equ	0xFDB
 23422                           fsr2h	equ	0xFDA
 23423                           fsr2l	equ	0xFD9
 23424                           status	equ	0xFD8
 23425                           
 23426 ;; *************** function _PIN_MANAGER_Initialize *****************
 23427 ;; Defined at:
 23428 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 23429 ;; Parameters:    Size  Location     Type
 23430 ;;		None
 23431 ;; Auto vars:     Size  Location     Type
 23432 ;;		None
 23433 ;; Return value:  Size  Location     Type
 23434 ;;		None               void
 23435 ;; Registers used:
 23436 ;;		wreg, status,2
 23437 ;; Tracked objects:
 23438 ;;		On entry : 0/0
 23439 ;;		On exit  : 0/0
 23440 ;;		Unchanged: 0/0
 23441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23442 ;;      Params:         0       0       0       0       0       0       0       0       0
 23443 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23444 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23445 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23446 ;;Total ram usage:        0 bytes
 23447 ;; Hardware stack levels used:    1
 23448 ;; Hardware stack levels required when called:   11
 23449 ;; This function calls:
 23450 ;;		Nothing
 23451 ;; This function is called by:
 23452 ;;		_moteApp_GoToSleep
 23453 ;;		_SYSTEM_Initialize
 23454 ;; This function uses a non-reentrant model
 23455 ;;
 23456                           
 23457                           	psect	text97
 23458  0056DE                     __ptext97:
 23459                           	opt stack 0
 23460  0056DE                     _PIN_MANAGER_Initialize:
 23461                           	opt stack 16
 23462                           
 23463                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 23464                           
 23465                           ;incstack = 0
 23466  0056DE  8092               	bsf	3986,0,c	;volatile
 23467                           
 23468                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 23469  0056E0  8292               	bsf	3986,1,c	;volatile
 23470                           
 23471                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 23472  0056E2  8492               	bsf	3986,2,c	;volatile
 23473                           
 23474                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 23475  0056E4  8692               	bsf	3986,3,c	;volatile
 23476                           
 23477                           ;pin_manager.c: 60: LATEbits.LATE2 = 0;
 23478  0056E6  948D               	bcf	3981,2,c	;volatile
 23479                           
 23480                           ;pin_manager.c: 61: TRISEbits.TRISE2 = 0;
 23481  0056E8  9496               	bcf	3990,2,c	;volatile
 23482                           
 23483                           ;pin_manager.c: 62: TRISAbits.TRISA5 = 0;
 23484  0056EA  9A92               	bcf	3986,5,c	;volatile
 23485                           
 23486                           ;pin_manager.c: 63: TRISAbits.TRISA6 = 0;
 23487  0056EC  9C92               	bcf	3986,6,c	;volatile
 23488                           
 23489                           ;pin_manager.c: 64: TRISAbits.TRISA7 = 0;
 23490  0056EE  9E92               	bcf	3986,7,c	;volatile
 23491                           
 23492                           ;pin_manager.c: 66: TRISBbits.TRISB1 = 1;
 23493  0056F0  8293               	bsf	3987,1,c	;volatile
 23494                           
 23495                           ;pin_manager.c: 67: TRISBbits.TRISB0 = 1;
 23496  0056F2  8093               	bsf	3987,0,c	;volatile
 23497                           
 23498                           ;pin_manager.c: 68: TRISBbits.TRISB2 = 0;
 23499  0056F4  9493               	bcf	3987,2,c	;volatile
 23500                           
 23501                           ;pin_manager.c: 69: TRISBbits.TRISB3 = 0;
 23502  0056F6  9693               	bcf	3987,3,c	;volatile
 23503                           
 23504                           ;pin_manager.c: 70: TRISBbits.TRISB4 = 0;
 23505  0056F8  9893               	bcf	3987,4,c	;volatile
 23506                           
 23507                           ;pin_manager.c: 71: TRISBbits.TRISB5 = 0;
 23508  0056FA  9A93               	bcf	3987,5,c	;volatile
 23509                           
 23510                           ;pin_manager.c: 73: TRISCbits.TRISC0 = 0;
 23511  0056FC  9094               	bcf	3988,0,c	;volatile
 23512                           
 23513                           ;pin_manager.c: 74: TRISCbits.TRISC1 = 0;
 23514  0056FE  9294               	bcf	3988,1,c	;volatile
 23515                           
 23516                           ;pin_manager.c: 75: TRISCbits.TRISC2 = 1;
 23517  005700  8494               	bsf	3988,2,c	;volatile
 23518                           
 23519                           ;pin_manager.c: 76: TRISCbits.TRISC6 = 0;
 23520  005702  9C94               	bcf	3988,6,c	;volatile
 23521                           
 23522                           ;pin_manager.c: 77: TRISCbits.TRISC7 = 1;
 23523  005704  8E94               	bsf	3988,7,c	;volatile
 23524                           
 23525                           ;pin_manager.c: 79: TRISD = 0b00000000;
 23526  005706  0E00               	movlw	0
 23527  005708  6E95               	movwf	3989,c	;volatile
 23528                           
 23529                           ;pin_manager.c: 81: TRISEbits.TRISE2 = 0;
 23530  00570A  9496               	bcf	3990,2,c	;volatile
 23531                           
 23532                           ;pin_manager.c: 84: LATAbits.LATA5 = 0;
 23533  00570C  9A89               	bcf	3977,5,c	;volatile
 23534                           
 23535                           ;pin_manager.c: 85: LATAbits.LATA6 = 0;
 23536  00570E  9C89               	bcf	3977,6,c	;volatile
 23537                           
 23538                           ;pin_manager.c: 86: LATAbits.LATA7 = 0;
 23539  005710  9E89               	bcf	3977,7,c	;volatile
 23540                           
 23541                           ;pin_manager.c: 88: LATBbits.LATB2 = 0;
 23542  005712  948A               	bcf	3978,2,c	;volatile
 23543                           
 23544                           ;pin_manager.c: 90: LATCbits.LATC2 = 0;
 23545  005714  948B               	bcf	3979,2,c	;volatile
 23546                           
 23547                           ;pin_manager.c: 91: LATCbits.LATC6 = 0;
 23548  005716  9C8B               	bcf	3979,6,c	;volatile
 23549                           
 23550                           ;pin_manager.c: 93: LATEbits.LATE2 = 1;
 23551  005718  848D               	bsf	3981,2,c	;volatile
 23552                           
 23553                           ;pin_manager.c: 95: ANSELAbits.ANSA0 = 0;
 23554  00571A  010F               	movlb	15	; () banked
 23555  00571C  915B               	bcf	91,0,b	;volatile
 23556                           
 23557                           ; BSR set to: 15
 23558                           ;pin_manager.c: 96: ANSELAbits.ANSA1 = 1;
 23559  00571E  010F               	movlb	15	; () banked
 23560  005720  835B               	bsf	91,1,b	;volatile
 23561                           
 23562                           ; BSR set to: 15
 23563                           ;pin_manager.c: 97: ANSELAbits.ANSA2 = 1;
 23564  005722  010F               	movlb	15	; () banked
 23565  005724  855B               	bsf	91,2,b	;volatile
 23566                           
 23567                           ; BSR set to: 15
 23568                           ;pin_manager.c: 98: ANSELAbits.ANSA3 = 1;
 23569  005726  010F               	movlb	15	; () banked
 23570  005728  875B               	bsf	91,3,b	;volatile
 23571                           
 23572                           ; BSR set to: 15
 23573                           ;pin_manager.c: 99: ANSELCbits.ANSC7 = 0;
 23574  00572A  010F               	movlb	15	; () banked
 23575  00572C  9F5D               	bcf	93,7,b	;volatile
 23576                           
 23577                           ; BSR set to: 15
 23578                           ;pin_manager.c: 100: ANSELCbits.ANSC6 = 0;
 23579  00572E  010F               	movlb	15	; () banked
 23580  005730  9D5D               	bcf	93,6,b	;volatile
 23581                           
 23582                           ; BSR set to: 15
 23583  005732  0012               	return		;funcret
 23584  005734                     __end_of_PIN_MANAGER_Initialize:
 23585                           	opt stack 0
 23586                           tblptru	equ	0xFF8
 23587                           tblptrh	equ	0xFF7
 23588                           tblptrl	equ	0xFF6
 23589                           tablat	equ	0xFF5
 23590                           prodh	equ	0xFF4
 23591                           prodl	equ	0xFF3
 23592                           intcon	equ	0xFF2
 23593                           intcon3	equ	0xFF0
 23594                           indf0	equ	0xFEF
 23595                           postinc0	equ	0xFEE
 23596                           fsr0h	equ	0xFEA
 23597                           fsr0l	equ	0xFE9
 23598                           wreg	equ	0xFE8
 23599                           indf1	equ	0xFE7
 23600                           postdec1	equ	0xFE5
 23601                           fsr1h	equ	0xFE2
 23602                           fsr1l	equ	0xFE1
 23603                           indf2	equ	0xFDF
 23604                           postinc2	equ	0xFDE
 23605                           postdec2	equ	0xFDD
 23606                           plusw2	equ	0xFDB
 23607                           fsr2h	equ	0xFDA
 23608                           fsr2l	equ	0xFD9
 23609                           status	equ	0xFD8
 23610                           
 23611 ;; *************** function _OSCILLATOR_Initialize *****************
 23612 ;; Defined at:
 23613 ;;		line 106 in file "../Includes/MccGenerated/mcc.c"
 23614 ;; Parameters:    Size  Location     Type
 23615 ;;		None
 23616 ;; Auto vars:     Size  Location     Type
 23617 ;;		None
 23618 ;; Return value:  Size  Location     Type
 23619 ;;		None               void
 23620 ;; Registers used:
 23621 ;;		wreg, status,2
 23622 ;; Tracked objects:
 23623 ;;		On entry : 0/0
 23624 ;;		On exit  : 0/0
 23625 ;;		Unchanged: 0/0
 23626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23627 ;;      Params:         0       0       0       0       0       0       0       0       0
 23628 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23629 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23630 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23631 ;;Total ram usage:        0 bytes
 23632 ;; Hardware stack levels used:    1
 23633 ;; Hardware stack levels required when called:   11
 23634 ;; This function calls:
 23635 ;;		Nothing
 23636 ;; This function is called by:
 23637 ;;		_SYSTEM_Initialize
 23638 ;; This function uses a non-reentrant model
 23639 ;;
 23640                           
 23641                           	psect	text98
 23642  005F0C                     __ptext98:
 23643                           	opt stack 0
 23644  005F0C                     _OSCILLATOR_Initialize:
 23645                           	opt stack 18
 23646                           
 23647                           ;mcc.c: 108: OSCTUNE = 0x80;
 23648                           
 23649                           ; BSR set to: 15
 23650                           ;incstack = 0
 23651  005F0C  0E80               	movlw	128
 23652  005F0E  6E9B               	movwf	3995,c	;volatile
 23653                           
 23654                           ;mcc.c: 109: OSCCON = 0x70;
 23655  005F10  0E70               	movlw	112
 23656  005F12  6ED3               	movwf	4051,c	;volatile
 23657                           
 23658                           ;mcc.c: 110: OSCCON2 = 0x10;
 23659  005F14  0E10               	movlw	16
 23660  005F16  6ED2               	movwf	4050,c	;volatile
 23661                           
 23662                           ;mcc.c: 111: while(OSCCON2bits.PLLRDY != 1);
 23663  005F18  D000               	goto	l1226
 23664  005F1A                     l1226:
 23665  005F1A  AED2               	btfss	4050,7,c	;volatile
 23666  005F1C  D7FE               	goto	l1226
 23667                           
 23668                           ;mcc.c: 112: ACTCON = 0x90;
 23669  005F1E  0E90               	movlw	144
 23670  005F20  6EB5               	movwf	4021,c	;volatile
 23671  005F22  0012               	return		;funcret
 23672  005F24                     __end_of_OSCILLATOR_Initialize:
 23673                           	opt stack 0
 23674                           tblptru	equ	0xFF8
 23675                           tblptrh	equ	0xFF7
 23676                           tblptrl	equ	0xFF6
 23677                           tablat	equ	0xFF5
 23678                           prodh	equ	0xFF4
 23679                           prodl	equ	0xFF3
 23680                           intcon	equ	0xFF2
 23681                           intcon3	equ	0xFF0
 23682                           indf0	equ	0xFEF
 23683                           postinc0	equ	0xFEE
 23684                           fsr0h	equ	0xFEA
 23685                           fsr0l	equ	0xFE9
 23686                           wreg	equ	0xFE8
 23687                           indf1	equ	0xFE7
 23688                           postdec1	equ	0xFE5
 23689                           fsr1h	equ	0xFE2
 23690                           fsr1l	equ	0xFE1
 23691                           indf2	equ	0xFDF
 23692                           postinc2	equ	0xFDE
 23693                           postdec2	equ	0xFDD
 23694                           plusw2	equ	0xFDB
 23695                           fsr2h	equ	0xFDA
 23696                           fsr2l	equ	0xFD9
 23697                           status	equ	0xFD8
 23698                           
 23699 ;; *************** function _EUSART_Initialize *****************
 23700 ;; Defined at:
 23701 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 23702 ;; Parameters:    Size  Location     Type
 23703 ;;		None
 23704 ;; Auto vars:     Size  Location     Type
 23705 ;;		None
 23706 ;; Return value:  Size  Location     Type
 23707 ;;		None               void
 23708 ;; Registers used:
 23709 ;;		wreg, status,2
 23710 ;; Tracked objects:
 23711 ;;		On entry : 0/0
 23712 ;;		On exit  : 0/0
 23713 ;;		Unchanged: 0/0
 23714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23715 ;;      Params:         0       0       0       0       0       0       0       0       0
 23716 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23717 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23718 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23719 ;;Total ram usage:        0 bytes
 23720 ;; Hardware stack levels used:    1
 23721 ;; Hardware stack levels required when called:   11
 23722 ;; This function calls:
 23723 ;;		Nothing
 23724 ;; This function is called by:
 23725 ;;		_SYSTEM_Initialize
 23726 ;; This function uses a non-reentrant model
 23727 ;;
 23728                           
 23729                           	psect	text99
 23730  00597A                     __ptext99:
 23731                           	opt stack 0
 23732  00597A                     _EUSART_Initialize:
 23733                           	opt stack 18
 23734                           
 23735                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 23736                           
 23737                           ;incstack = 0
 23738  00597A  9A9D               	bcf	3997,5,c	;volatile
 23739                           
 23740                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 23741  00597C  989D               	bcf	3997,4,c	;volatile
 23742                           
 23743                           ;eusart.c: 85: BAUDCON = 0x48;
 23744  00597E  0E48               	movlw	72
 23745  005980  6EB8               	movwf	4024,c	;volatile
 23746                           
 23747                           ;eusart.c: 88: RCSTA = 0x90;
 23748  005982  0E90               	movlw	144
 23749  005984  6EAB               	movwf	4011,c	;volatile
 23750                           
 23751                           ;eusart.c: 91: TXSTA = 0x26;
 23752  005986  0E26               	movlw	38
 23753  005988  6EAC               	movwf	4012,c	;volatile
 23754                           
 23755                           ;eusart.c: 95: SPBRG = 0xD0;
 23756  00598A  0ED0               	movlw	208
 23757  00598C  6EAF               	movwf	4015,c	;volatile
 23758                           
 23759                           ;eusart.c: 100: SPBRGH = 0x00;
 23760  00598E  0E00               	movlw	0
 23761  005990  6EB0               	movwf	4016,c	;volatile
 23762                           
 23763                           ;eusart.c: 103: eusartTxHead = 0;
 23764  005992  0E00               	movlw	0
 23765  005994  0100               	movlb	0	; () banked
 23766  005996  6F98               	movwf	_eusartTxHead& (0+255),b
 23767                           
 23768                           ;eusart.c: 104: eusartTxTail = 0;
 23769  005998  0E00               	movlw	0
 23770  00599A  0100               	movlb	0	; () banked
 23771  00599C  6F99               	movwf	_eusartTxTail& (0+255),b
 23772                           
 23773                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 23774  00599E  0E40               	movlw	64
 23775  0059A0  6E4E               	movwf	_eusartTxBufferRemaining,c	;volatile
 23776                           
 23777                           ;eusart.c: 107: eusartRxHead = 0;
 23778  0059A2  0E00               	movlw	0
 23779  0059A4  0100               	movlb	0	; () banked
 23780  0059A6  6F96               	movwf	_eusartRxHead& (0+255),b
 23781                           
 23782                           ;eusart.c: 108: eusartRxTail = 0;
 23783  0059A8  0E00               	movlw	0
 23784  0059AA  0100               	movlb	0	; () banked
 23785  0059AC  6F97               	movwf	_eusartRxTail& (0+255),b
 23786                           
 23787                           ;eusart.c: 109: eusartRxCount = 0;
 23788  0059AE  0E00               	movlw	0
 23789  0059B0  6E4D               	movwf	_eusartRxCount,c	;volatile
 23790                           
 23791                           ; BSR set to: 0
 23792                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 23793  0059B2  8A9D               	bsf	3997,5,c	;volatile
 23794                           
 23795                           ; BSR set to: 0
 23796                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 23797  0059B4  88AB               	bsf	4011,4,c	;volatile
 23798                           
 23799                           ; BSR set to: 0
 23800  0059B6  0012               	return		;funcret
 23801  0059B8                     __end_of_EUSART_Initialize:
 23802                           	opt stack 0
 23803                           tblptru	equ	0xFF8
 23804                           tblptrh	equ	0xFF7
 23805                           tblptrl	equ	0xFF6
 23806                           tablat	equ	0xFF5
 23807                           prodh	equ	0xFF4
 23808                           prodl	equ	0xFF3
 23809                           intcon	equ	0xFF2
 23810                           intcon3	equ	0xFF0
 23811                           indf0	equ	0xFEF
 23812                           postinc0	equ	0xFEE
 23813                           fsr0h	equ	0xFEA
 23814                           fsr0l	equ	0xFE9
 23815                           wreg	equ	0xFE8
 23816                           indf1	equ	0xFE7
 23817                           postdec1	equ	0xFE5
 23818                           fsr1h	equ	0xFE2
 23819                           fsr1l	equ	0xFE1
 23820                           indf2	equ	0xFDF
 23821                           postinc2	equ	0xFDE
 23822                           postdec2	equ	0xFDD
 23823                           plusw2	equ	0xFDB
 23824                           fsr2h	equ	0xFDA
 23825                           fsr2l	equ	0xFD9
 23826                           status	equ	0xFD8
 23827                           
 23828 ;; *************** function _CMP1_Initialize *****************
 23829 ;; Defined at:
 23830 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 23831 ;; Parameters:    Size  Location     Type
 23832 ;;		None
 23833 ;; Auto vars:     Size  Location     Type
 23834 ;;		None
 23835 ;; Return value:  Size  Location     Type
 23836 ;;		None               void
 23837 ;; Registers used:
 23838 ;;		wreg, status,2
 23839 ;; Tracked objects:
 23840 ;;		On entry : 0/0
 23841 ;;		On exit  : 0/0
 23842 ;;		Unchanged: 0/0
 23843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23844 ;;      Params:         0       0       0       0       0       0       0       0       0
 23845 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23846 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23847 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23848 ;;Total ram usage:        0 bytes
 23849 ;; Hardware stack levels used:    1
 23850 ;; Hardware stack levels required when called:   11
 23851 ;; This function calls:
 23852 ;;		Nothing
 23853 ;; This function is called by:
 23854 ;;		_SYSTEM_Initialize
 23855 ;; This function uses a non-reentrant model
 23856 ;;
 23857                           
 23858                           	psect	text100
 23859  005FB0                     __ptext100:
 23860                           	opt stack 0
 23861  005FB0                     _CMP1_Initialize:
 23862                           	opt stack 18
 23863                           
 23864                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 23865                           
 23866                           ; BSR set to: 0
 23867                           ;incstack = 0
 23868  005FB0  9CA0               	bcf	4000,6,c	;volatile
 23869                           
 23870                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 23871  005FB2  0E9C               	movlw	156
 23872  005FB4  6E98               	movwf	3992,c	;volatile
 23873                           
 23874                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 23875  005FB6  8A9A               	bsf	3994,5,c	;volatile
 23876                           
 23877                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 23878  005FB8  929A               	bcf	3994,1,c	;volatile
 23879                           
 23880                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 23881  005FBA  969A               	bcf	3994,3,c	;volatile
 23882                           
 23883                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 23884  005FBC  9CA1               	bcf	4001,6,c	;volatile
 23885                           
 23886                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 23887  005FBE  9CA0               	bcf	4000,6,c	;volatile
 23888  005FC0  0012               	return		;funcret
 23889  005FC2                     __end_of_CMP1_Initialize:
 23890                           	opt stack 0
 23891                           tblptru	equ	0xFF8
 23892                           tblptrh	equ	0xFF7
 23893                           tblptrl	equ	0xFF6
 23894                           tablat	equ	0xFF5
 23895                           prodh	equ	0xFF4
 23896                           prodl	equ	0xFF3
 23897                           intcon	equ	0xFF2
 23898                           intcon3	equ	0xFF0
 23899                           indf0	equ	0xFEF
 23900                           postinc0	equ	0xFEE
 23901                           fsr0h	equ	0xFEA
 23902                           fsr0l	equ	0xFE9
 23903                           wreg	equ	0xFE8
 23904                           indf1	equ	0xFE7
 23905                           postdec1	equ	0xFE5
 23906                           fsr1h	equ	0xFE2
 23907                           fsr1l	equ	0xFE1
 23908                           indf2	equ	0xFDF
 23909                           postinc2	equ	0xFDE
 23910                           postdec2	equ	0xFDD
 23911                           plusw2	equ	0xFDB
 23912                           fsr2h	equ	0xFDA
 23913                           fsr2l	equ	0xFD9
 23914                           status	equ	0xFD8
 23915                           
 23916 ;; *************** function _ADC_Initialize *****************
 23917 ;; Defined at:
 23918 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 23919 ;; Parameters:    Size  Location     Type
 23920 ;;		None
 23921 ;; Auto vars:     Size  Location     Type
 23922 ;;		None
 23923 ;; Return value:  Size  Location     Type
 23924 ;;		None               void
 23925 ;; Registers used:
 23926 ;;		wreg, status,2
 23927 ;; Tracked objects:
 23928 ;;		On entry : 0/0
 23929 ;;		On exit  : 0/0
 23930 ;;		Unchanged: 0/0
 23931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23932 ;;      Params:         0       0       0       0       0       0       0       0       0
 23933 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23934 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23935 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23936 ;;Total ram usage:        0 bytes
 23937 ;; Hardware stack levels used:    1
 23938 ;; Hardware stack levels required when called:   11
 23939 ;; This function calls:
 23940 ;;		Nothing
 23941 ;; This function is called by:
 23942 ;;		_SYSTEM_Initialize
 23943 ;; This function uses a non-reentrant model
 23944 ;;
 23945                           
 23946                           	psect	text101
 23947  005EAA                     __ptext101:
 23948                           	opt stack 0
 23949  005EAA                     _ADC_Initialize:
 23950                           	opt stack 18
 23951                           
 23952                           ;adc.c: 68: VREFCON0 = 0b10100000;
 23953                           
 23954                           ;incstack = 0
 23955  005EAA  0EA0               	movlw	160
 23956  005EAC  6E7D               	movwf	3965,c	;volatile
 23957                           
 23958                           ;adc.c: 70: ADCON0 = 0x01;
 23959  005EAE  0E01               	movlw	1
 23960  005EB0  6EC2               	movwf	4034,c	;volatile
 23961                           
 23962                           ;adc.c: 73: ADCON1 = 0x08;
 23963  005EB2  0E08               	movlw	8
 23964  005EB4  6EC1               	movwf	4033,c	;volatile
 23965                           
 23966                           ;adc.c: 76: ADCON2 = 0b10001110;
 23967  005EB6  0E8E               	movlw	142
 23968  005EB8  6EC0               	movwf	4032,c	;volatile
 23969                           
 23970                           ;adc.c: 79: ADRESL = 0x00;
 23971  005EBA  0E00               	movlw	0
 23972  005EBC  6EC3               	movwf	4035,c	;volatile
 23973                           
 23974                           ;adc.c: 82: ADRESH = 0x00;
 23975  005EBE  0E00               	movlw	0
 23976  005EC0  6EC4               	movwf	4036,c	;volatile
 23977  005EC2  0012               	return		;funcret
 23978  005EC4                     __end_of_ADC_Initialize:
 23979                           	opt stack 0
 23980                           tblptru	equ	0xFF8
 23981                           tblptrh	equ	0xFF7
 23982                           tblptrl	equ	0xFF6
 23983                           tablat	equ	0xFF5
 23984                           prodh	equ	0xFF4
 23985                           prodl	equ	0xFF3
 23986                           intcon	equ	0xFF2
 23987                           intcon3	equ	0xFF0
 23988                           indf0	equ	0xFEF
 23989                           postinc0	equ	0xFEE
 23990                           fsr0h	equ	0xFEA
 23991                           fsr0l	equ	0xFE9
 23992                           wreg	equ	0xFE8
 23993                           indf1	equ	0xFE7
 23994                           postdec1	equ	0xFE5
 23995                           fsr1h	equ	0xFE2
 23996                           fsr1l	equ	0xFE1
 23997                           indf2	equ	0xFDF
 23998                           postinc2	equ	0xFDE
 23999                           postdec2	equ	0xFDD
 24000                           plusw2	equ	0xFDB
 24001                           fsr2h	equ	0xFDA
 24002                           fsr2l	equ	0xFD9
 24003                           status	equ	0xFD8
 24004                           
 24005 ;; *************** function _MOTEapp_handlerState *****************
 24006 ;; Defined at:
 24007 ;;		line 181 in file "../Includes/Board/MOTEapp.c"
 24008 ;; Parameters:    Size  Location     Type
 24009 ;;  state           1    wreg     enum E7614
 24010 ;; Auto vars:     Size  Location     Type
 24011 ;;  state           1    0[BANK0 ] enum E7614
 24012 ;; Return value:  Size  Location     Type
 24013 ;;		None               void
 24014 ;; Registers used:
 24015 ;;		wreg
 24016 ;; Tracked objects:
 24017 ;;		On entry : 0/0
 24018 ;;		On exit  : 0/0
 24019 ;;		Unchanged: 0/0
 24020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24021 ;;      Params:         0       0       0       0       0       0       0       0       0
 24022 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24023 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24024 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24025 ;;Total ram usage:        1 bytes
 24026 ;; Hardware stack levels used:    1
 24027 ;; Hardware stack levels required when called:   11
 24028 ;; This function calls:
 24029 ;;		Nothing
 24030 ;; This function is called by:
 24031 ;;		_main
 24032 ;; This function uses a non-reentrant model
 24033 ;;
 24034                           
 24035                           	psect	text102
 24036  006018                     __ptext102:
 24037                           	opt stack 0
 24038  006018                     _MOTEapp_handlerState:
 24039                           	opt stack 19
 24040                           
 24041                           ;incstack = 0
 24042                           ;MOTEapp_handlerState@state stored from wreg
 24043  006018  0100               	movlb	0	; () banked
 24044  00601A  6FAF               	movwf	MOTEapp_handlerState@state& (0+255),b
 24045                           
 24046                           ; BSR set to: 0
 24047                           ;MOTEapp.c: 183: moteState = state;
 24048  00601C  C0AF  F0FB         	movff	MOTEapp_handlerState@state,_moteState
 24049                           
 24050                           ; BSR set to: 0
 24051  006020  0012               	return		;funcret
 24052  006022                     __end_of_MOTEapp_handlerState:
 24053                           	opt stack 0
 24054                           tblptru	equ	0xFF8
 24055                           tblptrh	equ	0xFF7
 24056                           tblptrl	equ	0xFF6
 24057                           tablat	equ	0xFF5
 24058                           prodh	equ	0xFF4
 24059                           prodl	equ	0xFF3
 24060                           intcon	equ	0xFF2
 24061                           intcon3	equ	0xFF0
 24062                           indf0	equ	0xFEF
 24063                           postinc0	equ	0xFEE
 24064                           fsr0h	equ	0xFEA
 24065                           fsr0l	equ	0xFE9
 24066                           wreg	equ	0xFE8
 24067                           indf1	equ	0xFE7
 24068                           postdec1	equ	0xFE5
 24069                           fsr1h	equ	0xFE2
 24070                           fsr1l	equ	0xFE1
 24071                           indf2	equ	0xFDF
 24072                           postinc2	equ	0xFDE
 24073                           postdec2	equ	0xFDD
 24074                           plusw2	equ	0xFDB
 24075                           fsr2h	equ	0xFDA
 24076                           fsr2l	equ	0xFD9
 24077                           status	equ	0xFD8
 24078                           
 24079 ;; *************** function _DATAEE_ReadByte *****************
 24080 ;; Defined at:
 24081 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 24082 ;; Parameters:    Size  Location     Type
 24083 ;;  bAdd            1    wreg     unsigned char 
 24084 ;; Auto vars:     Size  Location     Type
 24085 ;;  bAdd            1    0[BANK0 ] unsigned char 
 24086 ;; Return value:  Size  Location     Type
 24087 ;;                  1    wreg      unsigned char 
 24088 ;; Registers used:
 24089 ;;		wreg, status,2
 24090 ;; Tracked objects:
 24091 ;;		On entry : 0/0
 24092 ;;		On exit  : 0/0
 24093 ;;		Unchanged: 0/0
 24094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24095 ;;      Params:         0       0       0       0       0       0       0       0       0
 24096 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24097 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24098 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24099 ;;Total ram usage:        1 bytes
 24100 ;; Hardware stack levels used:    1
 24101 ;; Hardware stack levels required when called:   11
 24102 ;; This function calls:
 24103 ;;		Nothing
 24104 ;; This function is called by:
 24105 ;;		_main
 24106 ;; This function uses a non-reentrant model
 24107 ;;
 24108                           
 24109                           	psect	text103
 24110  005F24                     __ptext103:
 24111                           	opt stack 0
 24112  005F24                     _DATAEE_ReadByte:
 24113                           	opt stack 19
 24114                           
 24115                           ; BSR set to: 0
 24116                           ;incstack = 0
 24117                           ;DATAEE_ReadByte@bAdd stored from wreg
 24118  005F24  0100               	movlb	0	; () banked
 24119  005F26  6FAF               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 24120                           
 24121                           ; BSR set to: 0
 24122                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 24123  005F28  C0AF  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 24124                           
 24125                           ; BSR set to: 0
 24126                           ;memory.c: 191: EECON1bits.CFGS = 0;
 24127  005F2C  9CA6               	bcf	4006,6,c	;volatile
 24128                           
 24129                           ; BSR set to: 0
 24130                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 24131  005F2E  9EA6               	bcf	4006,7,c	;volatile
 24132                           
 24133                           ; BSR set to: 0
 24134                           ;memory.c: 193: EECON1bits.RD = 1;
 24135  005F30  80A6               	bsf	4006,0,c	;volatile
 24136                           
 24137                           ; BSR set to: 0
 24138                           ;memory.c: 194: __nop();
 24139  005F32  F000               	nop	
 24140                           
 24141                           ;memory.c: 195: __nop();
 24142  005F34  F000               	nop	
 24143                           
 24144                           ;memory.c: 197: return (EEDATA);
 24145  005F36  50A8               	movf	4008,w,c	;volatile
 24146  005F38  0012               	return	
 24147  005F3A  0012               	return		;funcret
 24148  005F3C                     __end_of_DATAEE_ReadByte:
 24149                           	opt stack 0
 24150                           tblptru	equ	0xFF8
 24151                           tblptrh	equ	0xFF7
 24152                           tblptrl	equ	0xFF6
 24153                           tablat	equ	0xFF5
 24154                           prodh	equ	0xFF4
 24155                           prodl	equ	0xFF3
 24156                           intcon	equ	0xFF2
 24157                           intcon3	equ	0xFF0
 24158                           indf0	equ	0xFEF
 24159                           postinc0	equ	0xFEE
 24160                           fsr0h	equ	0xFEA
 24161                           fsr0l	equ	0xFE9
 24162                           wreg	equ	0xFE8
 24163                           indf1	equ	0xFE7
 24164                           postdec1	equ	0xFE5
 24165                           fsr1h	equ	0xFE2
 24166                           fsr1l	equ	0xFE1
 24167                           indf2	equ	0xFDF
 24168                           postinc2	equ	0xFDE
 24169                           postdec2	equ	0xFDD
 24170                           plusw2	equ	0xFDB
 24171                           fsr2h	equ	0xFDA
 24172                           fsr2l	equ	0xFD9
 24173                           status	equ	0xFD8
 24174                           
 24175 ;; *************** function _INTERRUPT_InterruptManager *****************
 24176 ;; Defined at:
 24177 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 24178 ;; Parameters:    Size  Location     Type
 24179 ;;		None
 24180 ;; Auto vars:     Size  Location     Type
 24181 ;;		None
 24182 ;; Return value:  Size  Location     Type
 24183 ;;		None               void
 24184 ;; Registers used:
 24185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24186 ;; Tracked objects:
 24187 ;;		On entry : 0/0
 24188 ;;		On exit  : 0/0
 24189 ;;		Unchanged: 0/0
 24190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24191 ;;      Params:         0       0       0       0       0       0       0       0       0
 24192 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24193 ;;      Temps:         14       0       0       0       0       0       0       0       0
 24194 ;;      Totals:        14       0       0       0       0       0       0       0       0
 24195 ;;Total ram usage:       14 bytes
 24196 ;; Hardware stack levels used:    1
 24197 ;; Hardware stack levels required when called:   10
 24198 ;; This function calls:
 24199 ;;		_CMP1_ISR
 24200 ;;		_EUSART_Receive_ISR
 24201 ;;		_EUSART_Transmit_ISR
 24202 ;;		_TMR1_ISR
 24203 ;;		_TMR3_ISR
 24204 ;;		_TMRapp_Tick
 24205 ;;		_USBDeviceTasks
 24206 ;;		_USBapp_setrxByteFlag
 24207 ;; This function is called by:
 24208 ;;		Interrupt level 2
 24209 ;; This function uses a non-reentrant model
 24210 ;;
 24211                           
 24212                           	psect	intcode
 24213  000008                     __pintcode:
 24214                           	opt stack 0
 24215  000008                     _INTERRUPT_InterruptManager:
 24216                           	opt stack 11
 24217                           
 24218                           ;incstack = 0
 24219  000008  CFFA F020          	movff	pclath,??_INTERRUPT_InterruptManager
 24220  00000C  CFFB F021          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 24221  000010  CFE9 F022          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 24222  000014  CFEA F023          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 24223  000018  CFE1 F024          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 24224  00001C  CFE2 F025          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 24225  000020  CFD9 F026          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 24226  000024  CFDA F027          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 24227  000028  CFF3 F028          	movff	prodl,??_INTERRUPT_InterruptManager+8
 24228  00002C  CFF4 F029          	movff	prodh,??_INTERRUPT_InterruptManager+9
 24229  000030  CFF6 F02A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 24230  000034  CFF7 F02B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 24231  000038  CFF8 F02C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 24232  00003C  CFF5 F02D          	movff	tablat,??_INTERRUPT_InterruptManager+13
 24233                           
 24234                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 24235  000040  B09D               	btfsc	3997,0,c	;volatile
 24236  000042  A09E               	btfss	3998,0,c	;volatile
 24237  000044  D005               	goto	i2l10832
 24238                           
 24239                           ;interrupt_manager.c: 59: {
 24240                           ;interrupt_manager.c: 60: TMR1_ISR();
 24241  000046  ECF6  F02F         	call	_TMR1_ISR	;wreg free
 24242                           
 24243                           ;interrupt_manager.c: 62: TMRapp_Tick();
 24244  00004A  EC2B  F030         	call	_TMRapp_Tick	;wreg free
 24245  00004E  D000               	goto	i2l10832
 24246  000050                     i2l10832:
 24247                           
 24248                           ;interrupt_manager.c: 63: }
 24249                           ;interrupt_manager.c: 64: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 24250  000050  B2A0               	btfsc	4000,1,c	;volatile
 24251  000052  A2A1               	btfss	4001,1,c	;volatile
 24252  000054  D003               	goto	i2l1186
 24253                           
 24254                           ;interrupt_manager.c: 65: {
 24255                           ;interrupt_manager.c: 66: TMR3_ISR();
 24256  000056  EC1C  F02F         	call	_TMR3_ISR	;wreg free
 24257                           
 24258                           ;interrupt_manager.c: 67: }
 24259  00005A  D017               	goto	i2l1194
 24260  00005C                     i2l1186:
 24261                           
 24262                           ;interrupt_manager.c: 68: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 24263  00005C  BA9D               	btfsc	3997,5,c	;volatile
 24264  00005E  AA9E               	btfss	3998,5,c	;volatile
 24265  000060  D005               	goto	i2l1188
 24266                           
 24267                           ;interrupt_manager.c: 69: {
 24268                           ;interrupt_manager.c: 70: USBapp_setrxByteFlag();
 24269  000062  EC28  F030         	call	_USBapp_setrxByteFlag	;wreg free
 24270                           
 24271                           ;interrupt_manager.c: 71: EUSART_Receive_ISR();
 24272  000066  EC70  F02D         	call	_EUSART_Receive_ISR	;wreg free
 24273                           
 24274                           ;interrupt_manager.c: 72: }
 24275  00006A  D00F               	goto	i2l1194
 24276  00006C                     i2l1188:
 24277                           
 24278                           ;interrupt_manager.c: 73: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 24279  00006C  B89D               	btfsc	3997,4,c	;volatile
 24280  00006E  A89E               	btfss	3998,4,c	;volatile
 24281  000070  D003               	goto	i2l1190
 24282                           
 24283                           ;interrupt_manager.c: 74: {
 24284                           ;interrupt_manager.c: 75: EUSART_Transmit_ISR();
 24285  000072  EC53  F02D         	call	_EUSART_Transmit_ISR	;wreg free
 24286                           
 24287                           ;interrupt_manager.c: 76: }
 24288  000076  D009               	goto	i2l1194
 24289  000078                     i2l1190:
 24290                           
 24291                           ;interrupt_manager.c: 77: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 24292  000078  BCA0               	btfsc	4000,6,c	;volatile
 24293  00007A  ACA1               	btfss	4001,6,c	;volatile
 24294  00007C  D003               	goto	i2l10852
 24295                           
 24296                           ;interrupt_manager.c: 78: {
 24297                           ;interrupt_manager.c: 79: CMP1_ISR();
 24298  00007E  EC34  F030         	call	_CMP1_ISR	;wreg free
 24299                           
 24300                           ;interrupt_manager.c: 80: }
 24301  000082  D003               	goto	i2l1194
 24302  000084                     i2l10852:
 24303                           
 24304                           ;interrupt_manager.c: 81: else
 24305                           ;interrupt_manager.c: 82: {
 24306                           ;interrupt_manager.c: 84: USBDeviceTasks();
 24307  000084  EC54  F014         	call	_USBDeviceTasks	;wreg free
 24308  000088  D000               	goto	i2l1194
 24309  00008A                     i2l1194:
 24310  00008A  C02D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 24311  00008E  C02C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 24312  000092  C02B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 24313  000096  C02A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 24314  00009A  C029  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 24315  00009E  C028  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 24316  0000A2  C027  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 24317  0000A6  C026  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 24318  0000AA  C025  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 24319  0000AE  C024  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 24320  0000B2  C023  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 24321  0000B6  C022  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 24322  0000BA  C021  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 24323  0000BE  C020  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 24324  0000C2  0011               	retfie		f
 24325  0000C4                     __end_of_INTERRUPT_InterruptManager:
 24326                           	opt stack 0
 24327                           pclatu	equ	0xFFB
 24328                           pclath	equ	0xFFA
 24329                           tblptru	equ	0xFF8
 24330                           tblptrh	equ	0xFF7
 24331                           tblptrl	equ	0xFF6
 24332                           tablat	equ	0xFF5
 24333                           prodh	equ	0xFF4
 24334                           prodl	equ	0xFF3
 24335                           intcon	equ	0xFF2
 24336                           intcon3	equ	0xFF0
 24337                           indf0	equ	0xFEF
 24338                           postinc0	equ	0xFEE
 24339                           fsr0h	equ	0xFEA
 24340                           fsr0l	equ	0xFE9
 24341                           wreg	equ	0xFE8
 24342                           indf1	equ	0xFE7
 24343                           postdec1	equ	0xFE5
 24344                           fsr1h	equ	0xFE2
 24345                           fsr1l	equ	0xFE1
 24346                           indf2	equ	0xFDF
 24347                           postinc2	equ	0xFDE
 24348                           postdec2	equ	0xFDD
 24349                           plusw2	equ	0xFDB
 24350                           fsr2h	equ	0xFDA
 24351                           fsr2l	equ	0xFD9
 24352                           status	equ	0xFD8
 24353                           
 24354 ;; *************** function _USBapp_setrxByteFlag *****************
 24355 ;; Defined at:
 24356 ;;		line 263 in file "../Includes/Board/USBapp.c"
 24357 ;; Parameters:    Size  Location     Type
 24358 ;;		None
 24359 ;; Auto vars:     Size  Location     Type
 24360 ;;		None
 24361 ;; Return value:  Size  Location     Type
 24362 ;;		None               void
 24363 ;; Registers used:
 24364 ;;		wreg, status,2
 24365 ;; Tracked objects:
 24366 ;;		On entry : 0/0
 24367 ;;		On exit  : 0/0
 24368 ;;		Unchanged: 0/0
 24369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24370 ;;      Params:         0       0       0       0       0       0       0       0       0
 24371 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24372 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24373 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24374 ;;Total ram usage:        0 bytes
 24375 ;; Hardware stack levels used:    1
 24376 ;; This function calls:
 24377 ;;		Nothing
 24378 ;; This function is called by:
 24379 ;;		_INTERRUPT_InterruptManager
 24380 ;; This function uses a non-reentrant model
 24381 ;;
 24382                           
 24383                           	psect	text105
 24384  006050                     __ptext105:
 24385                           	opt stack 0
 24386  006050                     _USBapp_setrxByteFlag:
 24387                           	opt stack 20
 24388                           
 24389                           ;USBapp.c: 265: rxByteFlag = 1;
 24390                           
 24391                           ;incstack = 0
 24392  006050  0E01               	movlw	1
 24393  006052  6E50               	movwf	_rxByteFlag,c	;volatile
 24394  006054  0012               	return		;funcret
 24395  006056                     __end_of_USBapp_setrxByteFlag:
 24396                           	opt stack 0
 24397                           pclatu	equ	0xFFB
 24398                           pclath	equ	0xFFA
 24399                           tblptru	equ	0xFF8
 24400                           tblptrh	equ	0xFF7
 24401                           tblptrl	equ	0xFF6
 24402                           tablat	equ	0xFF5
 24403                           prodh	equ	0xFF4
 24404                           prodl	equ	0xFF3
 24405                           intcon	equ	0xFF2
 24406                           intcon3	equ	0xFF0
 24407                           indf0	equ	0xFEF
 24408                           postinc0	equ	0xFEE
 24409                           fsr0h	equ	0xFEA
 24410                           fsr0l	equ	0xFE9
 24411                           wreg	equ	0xFE8
 24412                           indf1	equ	0xFE7
 24413                           postdec1	equ	0xFE5
 24414                           fsr1h	equ	0xFE2
 24415                           fsr1l	equ	0xFE1
 24416                           indf2	equ	0xFDF
 24417                           postinc2	equ	0xFDE
 24418                           postdec2	equ	0xFDD
 24419                           plusw2	equ	0xFDB
 24420                           fsr2h	equ	0xFDA
 24421                           fsr2l	equ	0xFD9
 24422                           status	equ	0xFD8
 24423                           
 24424 ;; *************** function _USBDeviceTasks *****************
 24425 ;; Defined at:
 24426 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 24427 ;; Parameters:    Size  Location     Type
 24428 ;;		None
 24429 ;; Auto vars:     Size  Location     Type
 24430 ;;  i               1   30[COMRAM] unsigned char 
 24431 ;; Return value:  Size  Location     Type
 24432 ;;		None               void
 24433 ;; Registers used:
 24434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24435 ;; Tracked objects:
 24436 ;;		On entry : 0/0
 24437 ;;		On exit  : 0/0
 24438 ;;		Unchanged: 0/0
 24439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24440 ;;      Params:         0       0       0       0       0       0       0       0       0
 24441 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24442 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24443 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24444 ;;Total ram usage:        1 bytes
 24445 ;; Hardware stack levels used:    1
 24446 ;; Hardware stack levels required when called:    9
 24447 ;; This function calls:
 24448 ;;		_USBCtrlEPAllowStatusStage
 24449 ;;		_USBCtrlEPService
 24450 ;;		_USBStallHandler
 24451 ;;		_USBSuspend
 24452 ;;		_USBWakeFromSuspend
 24453 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24454 ;;		i2_USBDeviceInit
 24455 ;; This function is called by:
 24456 ;;		_INTERRUPT_InterruptManager
 24457 ;; This function uses a non-reentrant model
 24458 ;;
 24459                           
 24460                           	psect	text106
 24461  0028A8                     __ptext106:
 24462                           	opt stack 0
 24463  0028A8                     _USBDeviceTasks:
 24464                           	opt stack 11
 24465                           
 24466                           ;usb_device.c: 430: uint8_t i;
 24467                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 24468                           
 24469                           ;incstack = 0
 24470  0028A8  0100               	movlb	0	; () banked
 24471  0028AA  0589               	decf	_USBDeviceState& (0+255),w,b	;volatile
 24472  0028AC  B4D8               	btfsc	status,2,c
 24473                           
 24474                           ; BSR set to: 0
 24475                           ;usb_device.c: 433: {
 24476                           ;usb_device.c: 443: if(!UCONbits.SE0)
 24477  0028AE  BA60               	btfsc	3936,5,c	;volatile
 24478  0028B0  D008               	goto	i2l10552
 24479                           
 24480                           ; BSR set to: 0
 24481                           ;usb_device.c: 444: {
 24482                           ;usb_device.c: 445: {UIR = 0;};
 24483  0028B2  0E00               	movlw	0
 24484  0028B4  6E65               	movwf	3941,c	;volatile
 24485                           
 24486                           ; BSR set to: 0
 24487                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 24488  0028B6  8064               	bsf	3940,0,c	;volatile
 24489                           
 24490                           ; BSR set to: 0
 24491                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 24492  0028B8  8864               	bsf	3940,4,c	;volatile
 24493                           
 24494                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 24495  0028BA  0E02               	movlw	2
 24496  0028BC  0100               	movlb	0	; () banked
 24497  0028BE  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 24498                           
 24499                           ; BSR set to: 0
 24500  0028C0  D000               	goto	i2l10552
 24501  0028C2                     i2l10552:
 24502                           
 24503                           ; BSR set to: 0
 24504                           ;usb_device.c: 449: }
 24505                           ;usb_device.c: 450: }
 24506                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 24507  0028C2  B465               	btfsc	3941,2,c	;volatile
 24508                           
 24509                           ; BSR set to: 0
 24510  0028C4  A464               	btfss	3940,2,c	;volatile
 24511  0028C6  D004               	goto	i2l10560
 24512                           
 24513                           ; BSR set to: 0
 24514                           ;usb_device.c: 455: {
 24515                           ;usb_device.c: 456: (UIR &= 0xFB);
 24516  0028C8  9465               	bcf	3941,2,c	;volatile
 24517                           
 24518                           ; BSR set to: 0
 24519                           ;usb_device.c: 457: USBWakeFromSuspend();
 24520  0028CA  EC62  F02E         	call	_USBWakeFromSuspend	;wreg free
 24521  0028CE  D000               	goto	i2l10560
 24522  0028D0                     i2l10560:
 24523                           
 24524                           ;usb_device.c: 458: }
 24525                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 24526  0028D0  A260               	btfss	3936,1,c	;volatile
 24527  0028D2  D002               	goto	i2l1718
 24528                           
 24529                           ;usb_device.c: 464: {
 24530                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 24531  0028D4  94A4               	bcf	4004,2,c	;volatile
 24532                           
 24533                           ;usb_device.c: 466: return;
 24534  0028D6  0012               	return	
 24535  0028D8                     i2l1718:
 24536                           
 24537                           ;usb_device.c: 467: }
 24538                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 24539  0028D8  B065               	btfsc	3941,0,c	;volatile
 24540  0028DA  A064               	btfss	3940,0,c	;volatile
 24541  0028DC  D008               	goto	i2l10574
 24542                           
 24543                           ;usb_device.c: 480: {
 24544                           ;usb_device.c: 481: USBDeviceInit();
 24545  0028DE  EC9E  F015         	call	i2_USBDeviceInit	;wreg free
 24546                           
 24547                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 24548  0028E2  84A3               	bsf	4003,2,c	;volatile
 24549                           
 24550                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 24551  0028E4  0E04               	movlw	4
 24552  0028E6  0100               	movlb	0	; () banked
 24553  0028E8  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 24554                           
 24555                           ; BSR set to: 0
 24556                           ;usb_device.c: 489: (UIR &= 0xFE);
 24557  0028EA  9065               	bcf	3941,0,c	;volatile
 24558  0028EC  D000               	goto	i2l10574
 24559  0028EE                     i2l10574:
 24560                           
 24561                           ;usb_device.c: 490: }
 24562                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 24563  0028EE  B865               	btfsc	3941,4,c	;volatile
 24564  0028F0  A864               	btfss	3940,4,c	;volatile
 24565  0028F2  D004               	goto	i2l10582
 24566                           
 24567                           ;usb_device.c: 496: {
 24568                           ;usb_device.c: 497: USBSuspend();
 24569  0028F4  ECD3  F02E         	call	_USBSuspend	;wreg free
 24570                           
 24571                           ;usb_device.c: 498: (UIR &= 0xEF);
 24572  0028F8  9865               	bcf	3941,4,c	;volatile
 24573  0028FA  D000               	goto	i2l10582
 24574  0028FC                     i2l10582:
 24575                           
 24576                           ;usb_device.c: 499: }
 24577                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 24578  0028FC  AC65               	btfss	3941,6,c	;volatile
 24579  0028FE  D01D               	goto	i2l10598
 24580                           
 24581                           ;usb_device.c: 502: {
 24582                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 24583  002900  AC64               	btfss	3940,6,c	;volatile
 24584  002902  D00F               	goto	i2l10588
 24585                           
 24586                           ;usb_device.c: 504: {
 24587                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 24588  002904  0E00               	movlw	0
 24589  002906  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24590  002908  0E73               	movlw	115
 24591  00290A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24592  00290C  0E00               	movlw	0
 24593  00290E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24594  002910  0E00               	movlw	0
 24595  002912  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24596  002914  0E00               	movlw	0
 24597  002916  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24598  002918  0E01               	movlw	1
 24599  00291A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24600  00291C  ECB7  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24601  002920  D000               	goto	i2l10588
 24602  002922                     i2l10588:
 24603                           
 24604                           ;usb_device.c: 506: }
 24605                           ;usb_device.c: 507: (UIR &= 0xBF);
 24606  002922  9C65               	bcf	3941,6,c	;volatile
 24607                           
 24608                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 24609  002924  5049               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24610  002926  B4D8               	btfsc	status,2,c
 24611  002928  D002               	goto	i2l10594
 24612                           
 24613                           ;usb_device.c: 513: {
 24614                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 24615  00292A  0649               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 24616  00292C  D000               	goto	i2l10594
 24617  00292E                     i2l10594:
 24618                           
 24619                           ;usb_device.c: 515: }
 24620                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 24621  00292E  5049               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24622  002930  A4D8               	btfss	status,2,c
 24623  002932  D003               	goto	i2l10598
 24624                           
 24625                           ;usb_device.c: 522: {
 24626                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 24627  002934  ECD1  F021         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24628  002938  D000               	goto	i2l10598
 24629  00293A                     i2l10598:
 24630                           
 24631                           ;usb_device.c: 524: }
 24632                           ;usb_device.c: 525: }
 24633                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24634  00293A  BA65               	btfsc	3941,5,c	;volatile
 24635  00293C  AA64               	btfss	3940,5,c	;volatile
 24636  00293E  D003               	goto	i2l10604
 24637                           
 24638                           ;usb_device.c: 528: {
 24639                           ;usb_device.c: 529: USBStallHandler();
 24640  002940  EC5C  F02C         	call	_USBStallHandler	;wreg free
 24641  002944  D000               	goto	i2l10604
 24642  002946                     i2l10604:
 24643                           
 24644                           ;usb_device.c: 530: }
 24645                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24646  002946  B265               	btfsc	3941,1,c	;volatile
 24647  002948  A264               	btfss	3940,1,c	;volatile
 24648  00294A  D010               	goto	i2l10612
 24649                           
 24650                           ;usb_device.c: 533: {
 24651                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24652  00294C  0E7F               	movlw	127
 24653  00294E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24654  002950  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24655  002952  0E00               	movlw	0
 24656  002954  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24657  002956  0E00               	movlw	0
 24658  002958  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24659  00295A  0E00               	movlw	0
 24660  00295C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24661  00295E  0E01               	movlw	1
 24662  002960  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24663  002962  ECB7  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24664                           
 24665                           ;usb_device.c: 535: {UEIR = 0;};
 24666  002966  0E00               	movlw	0
 24667  002968  6E67               	movwf	3943,c	;volatile
 24668  00296A  D000               	goto	i2l10612
 24669  00296C                     i2l10612:
 24670                           
 24671                           ;usb_device.c: 536: }
 24672                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 24673  00296C  0E04               	movlw	4
 24674  00296E  0100               	movlb	0	; () banked
 24675  002970  6189               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 24676  002972  D002               	goto	i2l1728
 24677                           
 24678                           ; BSR set to: 0
 24679                           ;usb_device.c: 544: {
 24680                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 24681  002974  94A4               	bcf	4004,2,c	;volatile
 24682                           
 24683                           ;usb_device.c: 546: return;
 24684  002976  0012               	return	
 24685  002978                     i2l1728:
 24686                           
 24687                           ; BSR set to: 0
 24688                           ;usb_device.c: 547: }
 24689                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 24690  002978  A664               	btfss	3940,3,c	;volatile
 24691  00297A  D03C               	goto	i2l1729
 24692                           
 24693                           ; BSR set to: 0
 24694                           ;usb_device.c: 553: {
 24695                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 24696  00297C  0E00               	movlw	0
 24697  00297E  6E1F               	movwf	USBDeviceTasks@i,c
 24698  002980                     i2l10618:
 24699                           
 24700                           ; BSR set to: 0
 24701  002980  0E03               	movlw	3
 24702  002982  641F               	cpfsgt	USBDeviceTasks@i,c
 24703  002984  D001               	goto	i2l1730
 24704                           
 24705                           ; BSR set to: 0
 24706  002986  D036               	goto	i2l1729
 24707  002988                     i2l1730:
 24708                           
 24709                           ;usb_device.c: 555: {
 24710                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 24711  002988  A665               	btfss	3941,3,c	;volatile
 24712  00298A  D034               	goto	i2l1729
 24713                           
 24714                           ;usb_device.c: 557: {
 24715                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 24716  00298C  CF61 F059          	movff	3937,_USTATcopy	;volatile
 24717                           
 24718                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 24719  002990  3059               	rrcf	_USTATcopy,w,c	;volatile
 24720  002992  32E8               	rrcf	wreg,f,c
 24721  002994  32E8               	rrcf	wreg,f,c
 24722  002996  0B0F               	andlw	15
 24723  002998  6E4C               	movwf	_endpoint_number,c	;volatile
 24724                           
 24725                           ;usb_device.c: 562: (UIR &= 0xF7);
 24726  00299A  9665               	bcf	3941,3,c	;volatile
 24727                           
 24728                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 24729  00299C  B459               	btfsc	_USTATcopy,2,c	;volatile
 24730  00299E  D007               	goto	i2l10632
 24731                           
 24732                           ;usb_device.c: 567: {
 24733                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24734  0029A0  504C               	movf	_endpoint_number,w,c	;volatile
 24735  0029A2  0D01               	mullw	1
 24736  0029A4  0E69               	movlw	low _ep_data_out
 24737  0029A6  24F3               	addwf	prodl,w,c
 24738  0029A8  6ED9               	movwf	fsr2l,c
 24739  0029AA  0E00               	movlw	high _ep_data_out
 24740  0029AC  D006               	goto	L15
 24741  0029AE                     i2l10632:
 24742                           
 24743                           ;usb_device.c: 570: else
 24744                           ;usb_device.c: 571: {
 24745                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24746  0029AE  504C               	movf	_endpoint_number,w,c	;volatile
 24747  0029B0  0D01               	mullw	1
 24748  0029B2  0E66               	movlw	low _ep_data_in
 24749  0029B4  24F3               	addwf	prodl,w,c
 24750  0029B6  6ED9               	movwf	fsr2l,c
 24751  0029B8  0E00               	movlw	high _ep_data_in
 24752  0029BA                     L15:
 24753  0029BA  20F4               	addwfc	prodh,w,c
 24754  0029BC  6EDA               	movwf	fsr2h,c
 24755  0029BE  0100               	movlb	0	; () banked
 24756  0029C0  70DF               	btg	indf2,0,c
 24757  0029C2  D000               	goto	i2l10634
 24758  0029C4                     i2l10634:
 24759                           
 24760                           ; BSR set to: 0
 24761                           ;usb_device.c: 573: }
 24762                           ;usb_device.c: 577: if(endpoint_number == 0)
 24763  0029C4  504C               	movf	_endpoint_number,w,c	;volatile
 24764  0029C6  A4D8               	btfss	status,2,c
 24765  0029C8  D003               	goto	i2l10638
 24766                           
 24767                           ; BSR set to: 0
 24768                           ;usb_device.c: 578: {
 24769                           ;usb_device.c: 579: USBCtrlEPService();
 24770  0029CA  EC69  F021         	call	_USBCtrlEPService	;wreg free
 24771                           
 24772                           ;usb_device.c: 580: }
 24773  0029CE  D010               	goto	i2l10640
 24774  0029D0                     i2l10638:
 24775                           
 24776                           ;usb_device.c: 581: else
 24777                           ;usb_device.c: 582: {
 24778                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24779  0029D0  0E00               	movlw	0
 24780  0029D2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24781  0029D4  0E72               	movlw	114
 24782  0029D6  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24783  0029D8  0E59               	movlw	low _USTATcopy
 24784  0029DA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24785  0029DC  0E00               	movlw	high _USTATcopy
 24786  0029DE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24787  0029E0  0E00               	movlw	0
 24788  0029E2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24789  0029E4  0E00               	movlw	0
 24790  0029E6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24791  0029E8  ECB7  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24792                           
 24793                           ;usb_device.c: 584: }
 24794                           ;usb_device.c: 585: }
 24795  0029EC  D001               	goto	i2l10640
 24796                           
 24797                           ;usb_device.c: 586: else
 24798                           ;usb_device.c: 587: {
 24799                           ;usb_device.c: 588: break;
 24800  0029EE  D002               	goto	i2l1729
 24801  0029F0                     i2l10640:
 24802  0029F0  2A1F               	incf	USBDeviceTasks@i,f,c
 24803  0029F2  D7C6               	goto	i2l10618
 24804  0029F4                     i2l1729:
 24805                           
 24806                           ;usb_device.c: 589: }
 24807                           ;usb_device.c: 590: }
 24808                           ;usb_device.c: 591: }
 24809                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 24810  0029F4  94A4               	bcf	4004,2,c	;volatile
 24811  0029F6  0012               	return		;funcret
 24812  0029F8                     __end_of_USBDeviceTasks:
 24813                           	opt stack 0
 24814                           pclatu	equ	0xFFB
 24815                           pclath	equ	0xFFA
 24816                           tblptru	equ	0xFF8
 24817                           tblptrh	equ	0xFF7
 24818                           tblptrl	equ	0xFF6
 24819                           tablat	equ	0xFF5
 24820                           prodh	equ	0xFF4
 24821                           prodl	equ	0xFF3
 24822                           intcon	equ	0xFF2
 24823                           intcon3	equ	0xFF0
 24824                           indf0	equ	0xFEF
 24825                           postinc0	equ	0xFEE
 24826                           fsr0h	equ	0xFEA
 24827                           fsr0l	equ	0xFE9
 24828                           wreg	equ	0xFE8
 24829                           indf1	equ	0xFE7
 24830                           postdec1	equ	0xFE5
 24831                           fsr1h	equ	0xFE2
 24832                           fsr1l	equ	0xFE1
 24833                           indf2	equ	0xFDF
 24834                           postinc2	equ	0xFDE
 24835                           postdec2	equ	0xFDD
 24836                           plusw2	equ	0xFDB
 24837                           fsr2h	equ	0xFDA
 24838                           fsr2l	equ	0xFD9
 24839                           status	equ	0xFD8
 24840                           
 24841 ;; *************** function i2_USBDeviceInit *****************
 24842 ;; Defined at:
 24843 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 24844 ;; Parameters:    Size  Location     Type
 24845 ;;		None
 24846 ;; Auto vars:     Size  Location     Type
 24847 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24848 ;; Return value:  Size  Location     Type
 24849 ;;		None               void
 24850 ;; Registers used:
 24851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24852 ;; Tracked objects:
 24853 ;;		On entry : 0/0
 24854 ;;		On exit  : 0/0
 24855 ;;		Unchanged: 0/0
 24856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24857 ;;      Params:         0       0       0       0       0       0       0       0       0
 24858 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24859 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24860 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24861 ;;Total ram usage:        1 bytes
 24862 ;; Hardware stack levels used:    1
 24863 ;; Hardware stack levels required when called:    1
 24864 ;; This function calls:
 24865 ;;		i2_memset
 24866 ;; This function is called by:
 24867 ;;		_USBDeviceTasks
 24868 ;; This function uses a non-reentrant model
 24869 ;;
 24870                           
 24871                           	psect	text107
 24872  002B3C                     __ptext107:
 24873                           	opt stack 0
 24874  002B3C                     i2_USBDeviceInit:
 24875                           	opt stack 18
 24876                           
 24877                           ;usb_device.c: 239: uint8_t i;
 24878                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 24879                           
 24880                           ;incstack = 0
 24881  002B3C  94A3               	bcf	4003,2,c	;volatile
 24882                           
 24883                           ;usb_device.c: 244: {UEIR = 0;};
 24884  002B3E  0E00               	movlw	0
 24885  002B40  6E67               	movwf	3943,c	;volatile
 24886                           
 24887                           ;usb_device.c: 247: {UIR = 0;};
 24888  002B42  0E00               	movlw	0
 24889  002B44  6E65               	movwf	3941,c	;volatile
 24890                           
 24891                           ;usb_device.c: 250: UEP0 = 0;
 24892  002B46  0E00               	movlw	0
 24893  002B48  6E6A               	movwf	3946,c	;volatile
 24894                           
 24895                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 24896  002B4A  0E6B               	movlw	107
 24897  002B4C  6E01               	movwf	i2memset@p1,c
 24898  002B4E  0E0F               	movlw	15
 24899  002B50  6E02               	movwf	i2memset@p1+1,c
 24900  002B52  0E00               	movlw	0
 24901  002B54  6E04               	movwf	i2memset@c+1,c
 24902  002B56  0E00               	movlw	0
 24903  002B58  6E03               	movwf	i2memset@c,c
 24904  002B5A  0E00               	movlw	0
 24905  002B5C  6E06               	movwf	i2memset@n+1,c
 24906  002B5E  0E02               	movlw	2
 24907  002B60  6E05               	movwf	i2memset@n,c
 24908  002B62  EC7B  F02E         	call	i2_memset	;wreg free
 24909                           
 24910                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24911  002B66  0E16               	movlw	22
 24912  002B68  6E62               	movwf	3938,c	;volatile
 24913  002B6A  0E9F               	movlw	159
 24914  002B6C  6E66               	movwf	3942,c	;volatile
 24915  002B6E  0E7B               	movlw	123
 24916  002B70  6E64               	movwf	3940,c	;volatile
 24917                           
 24918                           ;usb_device.c: 257: ;
 24919                           ;usb_device.c: 260: ;
 24920                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24921  002B72  0E00               	movlw	0
 24922  002B74  6E09               	movwf	i2USBDeviceInit@i,c
 24923  002B76  D00E               	goto	i2l10192
 24924  002B78  D010               	goto	i2l1706
 24925  002B7A                     i2l10188:
 24926                           
 24927                           ;usb_device.c: 264: {
 24928                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 24929  002B7A  5009               	movf	i2USBDeviceInit@i,w,c
 24930  002B7C  0D04               	mullw	4
 24931  002B7E  0E00               	movlw	0
 24932  002B80  24F3               	addwf	prodl,w,c
 24933  002B82  6ED9               	movwf	fsr2l,c
 24934  002B84  0E04               	movlw	4
 24935  002B86  20F4               	addwfc	prodh,w,c
 24936  002B88  6EDA               	movwf	fsr2h,c
 24937  002B8A  6ADE               	clrf	postinc2,c
 24938  002B8C  6ADE               	clrf	postinc2,c
 24939  002B8E  6ADE               	clrf	postinc2,c
 24940  002B90  6ADD               	clrf	postdec2,c
 24941  002B92  2A09               	incf	i2USBDeviceInit@i,f,c
 24942  002B94                     i2l10192:
 24943  002B94  0E0B               	movlw	11
 24944  002B96  6409               	cpfsgt	i2USBDeviceInit@i,c
 24945  002B98  D7F0               	goto	i2l10188
 24946  002B9A                     i2l1706:
 24947                           
 24948                           ;usb_device.c: 266: }
 24949                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 24950  002B9A  8C60               	bsf	3936,6,c	;volatile
 24951                           
 24952                           ;usb_device.c: 272: UADDR = 0x00;
 24953  002B9C  0E00               	movlw	0
 24954  002B9E  6E63               	movwf	3939,c	;volatile
 24955                           
 24956                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 24957  002BA0  9860               	bcf	3936,4,c	;volatile
 24958                           
 24959                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 24960  002BA2  9C60               	bcf	3936,6,c	;volatile
 24961                           
 24962                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 24963  002BA4  D00A               	goto	i2l10208
 24964  002BA6                     i2l10200:
 24965                           
 24966                           ;usb_device.c: 282: {
 24967                           ;usb_device.c: 283: (UIR &= 0xF7);
 24968  002BA6  9665               	bcf	3941,3,c	;volatile
 24969                           
 24970                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 24971  002BA8  0E00               	movlw	0
 24972  002BAA  6E55               	movwf	_inPipes+3,c	;volatile
 24973                           
 24974                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 24975  002BAC  0E00               	movlw	0
 24976  002BAE  6E31               	movwf	_outPipes+3,c	;volatile
 24977                           
 24978                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 24979  002BB0  0E00               	movlw	0
 24980  002BB2  6E33               	movwf	_outPipes+5,c	;volatile
 24981  002BB4  0E00               	movlw	0
 24982  002BB6  6E32               	movwf	_outPipes+4,c	;volatile
 24983  002BB8  D000               	goto	i2l10208
 24984  002BBA                     i2l10208:
 24985  002BBA  B665               	btfsc	3941,3,c	;volatile
 24986  002BBC  D7F4               	goto	i2l10200
 24987                           
 24988                           ;usb_device.c: 288: }
 24989                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 24990  002BBE  0E01               	movlw	1
 24991  002BC0  0100               	movlb	0	; () banked
 24992  002BC2  6F8A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 24993                           
 24994                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 24995  002BC4  0E01               	movlw	1
 24996  002BC6  0100               	movlb	0	; () banked
 24997  002BC8  6F8B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 24998                           
 24999                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 25000  002BCA  0E00               	movlw	0
 25001  002BCC  0100               	movlb	0	; () banked
 25002  002BCE  6F87               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 25003                           
 25004                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 25005  002BD0  0E00               	movlw	0
 25006  002BD2  0100               	movlb	0	; () banked
 25007  002BD4  6F88               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 25008                           
 25009                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 25010  002BD6  0E00               	movlw	0
 25011  002BD8  0100               	movlb	0	; () banked
 25012  002BDA  6F86               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25013                           
 25014                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 25015  002BDC  0E00               	movlw	0
 25016  002BDE  6E09               	movwf	i2USBDeviceInit@i,c
 25017  002BE0                     i2l10212:
 25018                           
 25019                           ; BSR set to: 0
 25020  002BE0  0E02               	movlw	2
 25021  002BE2  6409               	cpfsgt	i2USBDeviceInit@i,c
 25022  002BE4  D001               	goto	i2l10216
 25023                           
 25024                           ; BSR set to: 0
 25025  002BE6  D02E               	goto	i2l10222
 25026  002BE8                     i2l10216:
 25027                           
 25028                           ;usb_device.c: 302: {
 25029                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 25030  002BE8  5009               	movf	i2USBDeviceInit@i,w,c
 25031  002BEA  0D02               	mullw	2
 25032  002BEC  0E36               	movlw	low _pBDTEntryIn
 25033  002BEE  24F3               	addwf	prodl,w,c
 25034  002BF0  6ED9               	movwf	fsr2l,c
 25035  002BF2  0E00               	movlw	high _pBDTEntryIn
 25036  002BF4  20F4               	addwfc	prodh,w,c
 25037  002BF6  6EDA               	movwf	fsr2h,c
 25038  002BF8  0E00               	movlw	0
 25039  002BFA  6EDE               	movwf	postinc2,c
 25040  002BFC  0E00               	movlw	0
 25041  002BFE  6EDD               	movwf	postdec2,c
 25042                           
 25043                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 25044  002C00  5009               	movf	i2USBDeviceInit@i,w,c
 25045  002C02  0D02               	mullw	2
 25046  002C04  0E60               	movlw	low _pBDTEntryOut
 25047  002C06  24F3               	addwf	prodl,w,c
 25048  002C08  6ED9               	movwf	fsr2l,c
 25049  002C0A  0E00               	movlw	high _pBDTEntryOut
 25050  002C0C  20F4               	addwfc	prodh,w,c
 25051  002C0E  6EDA               	movwf	fsr2h,c
 25052  002C10  0E00               	movlw	0
 25053  002C12  6EDE               	movwf	postinc2,c
 25054  002C14  0E00               	movlw	0
 25055  002C16  6EDD               	movwf	postdec2,c
 25056                           
 25057                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 25058  002C18  5009               	movf	i2USBDeviceInit@i,w,c
 25059  002C1A  0D01               	mullw	1
 25060  002C1C  0E66               	movlw	low _ep_data_in
 25061  002C1E  24F3               	addwf	prodl,w,c
 25062  002C20  6ED9               	movwf	fsr2l,c
 25063  002C22  0E00               	movlw	high _ep_data_in
 25064  002C24  20F4               	addwfc	prodh,w,c
 25065  002C26  6EDA               	movwf	fsr2h,c
 25066  002C28  0E00               	movlw	0
 25067  002C2A  6EDF               	movwf	indf2,c
 25068                           
 25069                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 25070  002C2C  5009               	movf	i2USBDeviceInit@i,w,c
 25071  002C2E  0D01               	mullw	1
 25072  002C30  0E69               	movlw	low _ep_data_out
 25073  002C32  24F3               	addwf	prodl,w,c
 25074  002C34  6ED9               	movwf	fsr2l,c
 25075  002C36  0E00               	movlw	high _ep_data_out
 25076  002C38  20F4               	addwfc	prodh,w,c
 25077  002C3A  6EDA               	movwf	fsr2h,c
 25078  002C3C  0E00               	movlw	0
 25079  002C3E  6EDF               	movwf	indf2,c
 25080  002C40  2A09               	incf	i2USBDeviceInit@i,f,c
 25081  002C42  D7CE               	goto	i2l10212
 25082  002C44                     i2l10222:
 25083                           
 25084                           ;usb_device.c: 307: }
 25085                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25086  002C44  0E08               	movlw	8
 25087  002C46  6E36               	movwf	_pBDTEntryIn,c
 25088  002C48  0E04               	movlw	4
 25089  002C4A  6E37               	movwf	_pBDTEntryIn+1,c
 25090                           
 25091                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 25092  002C4C  0E16               	movlw	22
 25093  002C4E  6E6A               	movwf	3946,c	;volatile
 25094                           
 25095                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25096  002C50  0E04               	movlw	4
 25097  002C52  0104               	movlb	4	; () banked
 25098  002C54  6F03               	movwf	3,b	;volatile
 25099  002C56  0E30               	movlw	48
 25100  002C58  6F02               	movwf	2,b	;volatile
 25101                           
 25102                           ; BSR set to: 4
 25103                           ;usb_device.c: 315: BDT[0].CNT = 8;
 25104  002C5A  0E08               	movlw	8
 25105  002C5C  0104               	movlb	4	; () banked
 25106  002C5E  6F01               	movwf	1,b	;volatile
 25107                           
 25108                           ; BSR set to: 4
 25109                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 25110  002C60  0E04               	movlw	4
 25111  002C62  0104               	movlb	4	; () banked
 25112  002C64  6F00               	movwf	0,b	;volatile
 25113                           
 25114                           ; BSR set to: 4
 25115                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 25116  002C66  0104               	movlb	4	; () banked
 25117  002C68  8F00               	bsf	0,7,b	;volatile
 25118                           
 25119                           ; BSR set to: 4
 25120                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 25121  002C6A  0E00               	movlw	0
 25122  002C6C  6E58               	movwf	_USBActiveConfiguration,c	;volatile
 25123                           
 25124                           ; BSR set to: 4
 25125                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 25126  002C6E  0E00               	movlw	0
 25127  002C70  0100               	movlb	0	; () banked
 25128  002C72  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 25129                           
 25130                           ; BSR set to: 0
 25131  002C74  0012               	return		;funcret
 25132  002C76                     __end_ofi2_USBDeviceInit:
 25133                           	opt stack 0
 25134                           pclatu	equ	0xFFB
 25135                           pclath	equ	0xFFA
 25136                           tblptru	equ	0xFF8
 25137                           tblptrh	equ	0xFF7
 25138                           tblptrl	equ	0xFF6
 25139                           tablat	equ	0xFF5
 25140                           prodh	equ	0xFF4
 25141                           prodl	equ	0xFF3
 25142                           intcon	equ	0xFF2
 25143                           intcon3	equ	0xFF0
 25144                           indf0	equ	0xFEF
 25145                           postinc0	equ	0xFEE
 25146                           fsr0h	equ	0xFEA
 25147                           fsr0l	equ	0xFE9
 25148                           wreg	equ	0xFE8
 25149                           indf1	equ	0xFE7
 25150                           postdec1	equ	0xFE5
 25151                           fsr1h	equ	0xFE2
 25152                           fsr1l	equ	0xFE1
 25153                           indf2	equ	0xFDF
 25154                           postinc2	equ	0xFDE
 25155                           postdec2	equ	0xFDD
 25156                           plusw2	equ	0xFDB
 25157                           fsr2h	equ	0xFDA
 25158                           fsr2l	equ	0xFD9
 25159                           status	equ	0xFD8
 25160                           
 25161 ;; *************** function _USBWakeFromSuspend *****************
 25162 ;; Defined at:
 25163 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 25164 ;; Parameters:    Size  Location     Type
 25165 ;;		None
 25166 ;; Auto vars:     Size  Location     Type
 25167 ;;		None
 25168 ;; Return value:  Size  Location     Type
 25169 ;;		None               void
 25170 ;; Registers used:
 25171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25172 ;; Tracked objects:
 25173 ;;		On entry : 0/0
 25174 ;;		On exit  : 0/0
 25175 ;;		Unchanged: 0/0
 25176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25177 ;;      Params:         0       0       0       0       0       0       0       0       0
 25178 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25179 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25180 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25181 ;;Total ram usage:        0 bytes
 25182 ;; Hardware stack levels used:    1
 25183 ;; Hardware stack levels required when called:    5
 25184 ;; This function calls:
 25185 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25186 ;; This function is called by:
 25187 ;;		_USBDeviceTasks
 25188 ;; This function uses a non-reentrant model
 25189 ;;
 25190                           
 25191                           	psect	text108
 25192  005CC4                     __ptext108:
 25193                           	opt stack 0
 25194  005CC4                     _USBWakeFromSuspend:
 25195                           	opt stack 14
 25196                           
 25197                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 25198                           
 25199                           ; BSR set to: 0
 25200                           ;incstack = 0
 25201  005CC4  0E00               	movlw	0
 25202  005CC6  0100               	movlb	0	; () banked
 25203  005CC8  6F86               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25204                           
 25205                           ; BSR set to: 0
 25206                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 25207  005CCA  0E00               	movlw	0
 25208  005CCC  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25209  005CCE  0E74               	movlw	116
 25210  005CD0  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25211  005CD2  0E00               	movlw	0
 25212  005CD4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25213  005CD6  0E00               	movlw	0
 25214  005CD8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25215  005CDA  0E00               	movlw	0
 25216  005CDC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25217  005CDE  0E00               	movlw	0
 25218  005CE0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25219  005CE2  ECB7  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25220                           
 25221                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 25222  005CE6  9260               	bcf	3936,1,c	;volatile
 25223                           
 25224                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 25225  005CE8  9464               	bcf	3940,2,c	;volatile
 25226                           
 25227                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 25228  005CEA  D002               	goto	i2l10110
 25229  005CEC                     i2l10108:
 25230                           
 25231                           ;usb_device.c: 1977: {
 25232                           ;usb_device.c: 1978: (UIR &= 0xFB);
 25233  005CEC  9465               	bcf	3941,2,c	;volatile
 25234  005CEE  D000               	goto	i2l10110
 25235  005CF0                     i2l10110:
 25236  005CF0  B465               	btfsc	3941,2,c	;volatile
 25237  005CF2  D7FC               	goto	i2l10108
 25238  005CF4  0012               	return		;funcret
 25239  005CF6                     __end_of_USBWakeFromSuspend:
 25240                           	opt stack 0
 25241                           pclatu	equ	0xFFB
 25242                           pclath	equ	0xFFA
 25243                           tblptru	equ	0xFF8
 25244                           tblptrh	equ	0xFF7
 25245                           tblptrl	equ	0xFF6
 25246                           tablat	equ	0xFF5
 25247                           prodh	equ	0xFF4
 25248                           prodl	equ	0xFF3
 25249                           intcon	equ	0xFF2
 25250                           intcon3	equ	0xFF0
 25251                           indf0	equ	0xFEF
 25252                           postinc0	equ	0xFEE
 25253                           fsr0h	equ	0xFEA
 25254                           fsr0l	equ	0xFE9
 25255                           wreg	equ	0xFE8
 25256                           indf1	equ	0xFE7
 25257                           postdec1	equ	0xFE5
 25258                           fsr1h	equ	0xFE2
 25259                           fsr1l	equ	0xFE1
 25260                           indf2	equ	0xFDF
 25261                           postinc2	equ	0xFDE
 25262                           postdec2	equ	0xFDD
 25263                           plusw2	equ	0xFDB
 25264                           fsr2h	equ	0xFDA
 25265                           fsr2l	equ	0xFD9
 25266                           status	equ	0xFD8
 25267                           
 25268 ;; *************** function _USBSuspend *****************
 25269 ;; Defined at:
 25270 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 25271 ;; Parameters:    Size  Location     Type
 25272 ;;		None
 25273 ;; Auto vars:     Size  Location     Type
 25274 ;;		None
 25275 ;; Return value:  Size  Location     Type
 25276 ;;		None               void
 25277 ;; Registers used:
 25278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25279 ;; Tracked objects:
 25280 ;;		On entry : 0/0
 25281 ;;		On exit  : 0/0
 25282 ;;		Unchanged: 0/0
 25283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25284 ;;      Params:         0       0       0       0       0       0       0       0       0
 25285 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25286 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25287 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25288 ;;Total ram usage:        0 bytes
 25289 ;; Hardware stack levels used:    1
 25290 ;; Hardware stack levels required when called:    5
 25291 ;; This function calls:
 25292 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25293 ;; This function is called by:
 25294 ;;		_USBDeviceTasks
 25295 ;; This function uses a non-reentrant model
 25296 ;;
 25297                           
 25298                           	psect	text109
 25299  005DA6                     __ptext109:
 25300                           	opt stack 0
 25301  005DA6                     _USBSuspend:
 25302                           	opt stack 14
 25303                           
 25304                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 25305                           
 25306                           ;incstack = 0
 25307  005DA6  8464               	bsf	3940,2,c	;volatile
 25308                           
 25309                           ;usb_device.c: 1915: (UIR &= 0xEF);
 25310  005DA8  9865               	bcf	3941,4,c	;volatile
 25311                           
 25312                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 25313  005DAA  8260               	bsf	3936,1,c	;volatile
 25314                           
 25315                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 25316  005DAC  0E01               	movlw	1
 25317  005DAE  0100               	movlb	0	; () banked
 25318  005DB0  6F86               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25319                           
 25320                           ; BSR set to: 0
 25321                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 25322  005DB2  0E00               	movlw	0
 25323  005DB4  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25324  005DB6  0E75               	movlw	117
 25325  005DB8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25326  005DBA  0E00               	movlw	0
 25327  005DBC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25328  005DBE  0E00               	movlw	0
 25329  005DC0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25330  005DC2  0E00               	movlw	0
 25331  005DC4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25332  005DC6  0E00               	movlw	0
 25333  005DC8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25334  005DCA  ECB7  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25335  005DCE  0012               	return		;funcret
 25336  005DD0                     __end_of_USBSuspend:
 25337                           	opt stack 0
 25338                           pclatu	equ	0xFFB
 25339                           pclath	equ	0xFFA
 25340                           tblptru	equ	0xFF8
 25341                           tblptrh	equ	0xFF7
 25342                           tblptrl	equ	0xFF6
 25343                           tablat	equ	0xFF5
 25344                           prodh	equ	0xFF4
 25345                           prodl	equ	0xFF3
 25346                           intcon	equ	0xFF2
 25347                           intcon3	equ	0xFF0
 25348                           indf0	equ	0xFEF
 25349                           postinc0	equ	0xFEE
 25350                           fsr0h	equ	0xFEA
 25351                           fsr0l	equ	0xFE9
 25352                           wreg	equ	0xFE8
 25353                           indf1	equ	0xFE7
 25354                           postdec1	equ	0xFE5
 25355                           fsr1h	equ	0xFE2
 25356                           fsr1l	equ	0xFE1
 25357                           indf2	equ	0xFDF
 25358                           postinc2	equ	0xFDE
 25359                           postdec2	equ	0xFDD
 25360                           plusw2	equ	0xFDB
 25361                           fsr2h	equ	0xFDA
 25362                           fsr2l	equ	0xFD9
 25363                           status	equ	0xFD8
 25364                           
 25365 ;; *************** function _USBStallHandler *****************
 25366 ;; Defined at:
 25367 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 25368 ;; Parameters:    Size  Location     Type
 25369 ;;		None
 25370 ;; Auto vars:     Size  Location     Type
 25371 ;;		None
 25372 ;; Return value:  Size  Location     Type
 25373 ;;		None               void
 25374 ;; Registers used:
 25375 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25376 ;; Tracked objects:
 25377 ;;		On entry : 0/0
 25378 ;;		On exit  : 0/0
 25379 ;;		Unchanged: 0/0
 25380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25381 ;;      Params:         0       0       0       0       0       0       0       0       0
 25382 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25383 ;;      Temps:          1       0       0       0       0       0       0       0       0
 25384 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25385 ;;Total ram usage:        1 bytes
 25386 ;; Hardware stack levels used:    1
 25387 ;; This function calls:
 25388 ;;		Nothing
 25389 ;; This function is called by:
 25390 ;;		_USBDeviceTasks
 25391 ;; This function uses a non-reentrant model
 25392 ;;
 25393                           
 25394                           	psect	text110
 25395  0058B8                     __ptext110:
 25396                           	opt stack 0
 25397  0058B8                     _USBStallHandler:
 25398                           	opt stack 19
 25399                           
 25400                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 25401                           
 25402                           ;incstack = 0
 25403  0058B8  A06A               	btfss	3946,0,c	;volatile
 25404  0058BA  D01E               	goto	i2l1868
 25405                           
 25406                           ;usb_device.c: 1859: {
 25407                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 25408  0058BC  C03E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25409  0058C0  C03F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25410  0058C4  0E80               	movlw	128
 25411  0058C6  18DE               	xorwf	postinc2,w,c
 25412  0058C8  A4D8               	btfss	status,2,c
 25413  0058CA  D015               	goto	i2l10132
 25414  0058CC  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 25415  0058D0  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25416  0058D4  0E84               	movlw	132
 25417  0058D6  18DE               	xorwf	postinc2,w,c
 25418  0058D8  A4D8               	btfss	status,2,c
 25419  0058DA  D00D               	goto	i2l10132
 25420                           
 25421                           ;usb_device.c: 1862: {
 25422                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25423  0058DC  C03E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25424  0058E0  C03F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25425  0058E4  0E0C               	movlw	12
 25426  0058E6  6EDF               	movwf	indf2,c
 25427                           
 25428                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25429  0058E8  C03E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25430  0058EC  C03F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25431  0058F0  0E00               	movlw	0
 25432  0058F2  8EDB               	bsf	plusw2,7,c
 25433  0058F4  D000               	goto	i2l10132
 25434  0058F6                     i2l10132:
 25435                           
 25436                           ;usb_device.c: 1866: }
 25437                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 25438  0058F6  906A               	bcf	3946,0,c	;volatile
 25439  0058F8                     i2l1868:
 25440                           
 25441                           ;usb_device.c: 1868: }
 25442                           ;usb_device.c: 1870: (UIR &= 0xDF);
 25443  0058F8  9A65               	bcf	3941,5,c	;volatile
 25444  0058FA  0012               	return		;funcret
 25445  0058FC                     __end_of_USBStallHandler:
 25446                           	opt stack 0
 25447                           pclatu	equ	0xFFB
 25448                           pclath	equ	0xFFA
 25449                           tblptru	equ	0xFF8
 25450                           tblptrh	equ	0xFF7
 25451                           tblptrl	equ	0xFF6
 25452                           tablat	equ	0xFF5
 25453                           prodh	equ	0xFF4
 25454                           prodl	equ	0xFF3
 25455                           intcon	equ	0xFF2
 25456                           intcon3	equ	0xFF0
 25457                           indf0	equ	0xFEF
 25458                           postinc0	equ	0xFEE
 25459                           fsr0h	equ	0xFEA
 25460                           fsr0l	equ	0xFE9
 25461                           wreg	equ	0xFE8
 25462                           indf1	equ	0xFE7
 25463                           postdec1	equ	0xFE5
 25464                           fsr1h	equ	0xFE2
 25465                           fsr1l	equ	0xFE1
 25466                           indf2	equ	0xFDF
 25467                           postinc2	equ	0xFDE
 25468                           postdec2	equ	0xFDD
 25469                           plusw2	equ	0xFDB
 25470                           fsr2h	equ	0xFDA
 25471                           fsr2l	equ	0xFD9
 25472                           status	equ	0xFD8
 25473                           
 25474 ;; *************** function _USBCtrlEPService *****************
 25475 ;; Defined at:
 25476 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 25477 ;; Parameters:    Size  Location     Type
 25478 ;;		None
 25479 ;; Auto vars:     Size  Location     Type
 25480 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 25481 ;; Return value:  Size  Location     Type
 25482 ;;		None               void
 25483 ;; Registers used:
 25484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25485 ;; Tracked objects:
 25486 ;;		On entry : 0/0
 25487 ;;		On exit  : 0/0
 25488 ;;		Unchanged: 0/0
 25489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25490 ;;      Params:         0       0       0       0       0       0       0       0       0
 25491 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25492 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25493 ;;      Totals:         3       0       0       0       0       0       0       0       0
 25494 ;;Total ram usage:        3 bytes
 25495 ;; Hardware stack levels used:    1
 25496 ;; Hardware stack levels required when called:    8
 25497 ;; This function calls:
 25498 ;;		_USBCtrlTrfInHandler
 25499 ;;		_USBCtrlTrfOutHandler
 25500 ;;		_USBCtrlTrfSetupHandler
 25501 ;; This function is called by:
 25502 ;;		_USBDeviceTasks
 25503 ;; This function uses a non-reentrant model
 25504 ;;
 25505                           
 25506                           	psect	text111
 25507  0042D2                     __ptext111:
 25508                           	opt stack 0
 25509  0042D2                     _USBCtrlEPService:
 25510                           	opt stack 11
 25511                           
 25512                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 25513                           
 25514                           ;incstack = 0
 25515  0042D2  0E2D               	movlw	45
 25516  0042D4  6E49               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 25517                           
 25518                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 25519  0042D6  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25520  0042DA  0EFD               	movlw	253
 25521  0042DC  161C               	andwf	??_USBCtrlEPService,f,c
 25522  0042DE  A4D8               	btfss	status,2,c
 25523  0042E0  D057               	goto	i2l10166
 25524                           
 25525                           ;usb_device.c: 2013: {
 25526                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 25527  0042E2  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25528  0042E6  90D8               	bcf	status,0,c
 25529  0042E8  321C               	rrcf	??_USBCtrlEPService,f,c
 25530  0042EA  0E3F               	movlw	63
 25531  0042EC  161C               	andwf	??_USBCtrlEPService,f,c
 25532  0042EE  501C               	movf	??_USBCtrlEPService,w,c
 25533  0042F0  0D04               	mullw	4
 25534  0042F2  0E00               	movlw	0
 25535  0042F4  24F3               	addwf	prodl,w,c
 25536  0042F6  6E3E               	movwf	_pBDTEntryEP0OutCurrent,c
 25537  0042F8  0E04               	movlw	4
 25538  0042FA  20F4               	addwfc	prodh,w,c
 25539  0042FC  6E3F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 25540                           
 25541                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25542  0042FE  C03E  F040         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25543  004302  C03F  F041         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25544                           
 25545                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 25546  004306  0E04               	movlw	4
 25547  004308  1A40               	xorwf	_pBDTEntryEP0OutNext,f,c
 25548                           
 25549                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 25550  00430A  C03E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25551  00430E  C03F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25552  004312  30DF               	rrcf	indf2,w,c
 25553  004314  32E8               	rrcf	wreg,f,c
 25554  004316  0B0F               	andlw	15
 25555  004318  0A0D               	xorlw	13
 25556  00431A  A4D8               	btfss	status,2,c
 25557  00431C  D036               	goto	i2l10164
 25558                           
 25559                           ;usb_device.c: 2025: {
 25560                           ;usb_device.c: 2026: unsigned char setup_cnt;
 25561                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 25562  00431E  0E00               	movlw	0
 25563  004320  6E1E               	movwf	USBCtrlEPService@setup_cnt,c
 25564  004322                     i2l10148:
 25565  004322  0E07               	movlw	7
 25566  004324  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 25567  004326  D001               	goto	i2l10152
 25568  004328  D023               	goto	i2l10160
 25569  00432A                     i2l10152:
 25570                           
 25571                           ;usb_device.c: 2033: {
 25572                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 25573  00432A  EE20 F002          	lfsr	2,2
 25574  00432E  503E               	movf	_pBDTEntryEP0OutCurrent,w,c
 25575  004330  26D9               	addwf	fsr2l,f,c
 25576  004332  503F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25577  004334  22DA               	addwfc	fsr2h,f,c
 25578  004336  CFDE F01C          	movff	postinc2,??_USBCtrlEPService
 25579  00433A  CFDD F01D          	movff	postdec2,??_USBCtrlEPService+1
 25580  00433E  C01C  FFD9         	movff	??_USBCtrlEPService,fsr2l
 25581  004342  C01D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 25582  004346  501E               	movf	USBCtrlEPService@setup_cnt,w,c
 25583  004348  0D01               	mullw	1
 25584  00434A  0E30               	movlw	48
 25585  00434C  24F3               	addwf	prodl,w,c
 25586  00434E  6EE1               	movwf	fsr1l,c
 25587  004350  0E04               	movlw	4
 25588  004352  20F4               	addwfc	prodh,w,c
 25589  004354  6EE2               	movwf	fsr1h,c
 25590  004356  CFDF FFE7          	movff	indf2,indf1
 25591                           
 25592                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 25593  00435A  EE20 F002          	lfsr	2,2
 25594  00435E  503E               	movf	_pBDTEntryEP0OutCurrent,w,c
 25595  004360  26D9               	addwf	fsr2l,f,c
 25596  004362  503F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25597  004364  22DA               	addwfc	fsr2h,f,c
 25598  004366  2ADE               	incf	postinc2,f,c
 25599  004368  0E00               	movlw	0
 25600  00436A  22DD               	addwfc	postdec2,f,c
 25601  00436C  2A1E               	incf	USBCtrlEPService@setup_cnt,f,c
 25602  00436E  D7D9               	goto	i2l10148
 25603  004370                     i2l10160:
 25604                           
 25605                           ;usb_device.c: 2036: }
 25606                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25607  004370  EE20 F002          	lfsr	2,2
 25608  004374  503E               	movf	_pBDTEntryEP0OutCurrent,w,c
 25609  004376  26D9               	addwf	fsr2l,f,c
 25610  004378  503F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25611  00437A  22DA               	addwfc	fsr2h,f,c
 25612  00437C  0E30               	movlw	48
 25613  00437E  6EDE               	movwf	postinc2,c
 25614  004380  0E04               	movlw	4
 25615  004382  6EDD               	movwf	postdec2,c
 25616                           
 25617                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 25618  004384  EC27  F027         	call	_USBCtrlTrfSetupHandler	;wreg free
 25619                           
 25620                           ;usb_device.c: 2041: }
 25621  004388  0012               	return	
 25622  00438A                     i2l10164:
 25623                           
 25624                           ;usb_device.c: 2042: else
 25625                           ;usb_device.c: 2043: {
 25626                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 25627  00438A  EC56  F02A         	call	_USBCtrlTrfOutHandler	;wreg free
 25628                           
 25629                           ;usb_device.c: 2046: }
 25630                           ;usb_device.c: 2047: }
 25631  00438E  0012               	return	
 25632  004390                     i2l10166:
 25633                           
 25634                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 25635  004390  5059               	movf	_USTATcopy,w,c	;volatile
 25636  004392  0BFD               	andlw	253
 25637  004394  0A04               	xorlw	4
 25638  004396  A4D8               	btfss	status,2,c
 25639  004398  0012               	return	
 25640                           
 25641                           ;usb_device.c: 2049: {
 25642                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 25643  00439A  EC83  F01D         	call	_USBCtrlTrfInHandler	;wreg free
 25644  00439E  0012               	return	
 25645  0043A0  0012               	return		;funcret
 25646  0043A2                     __end_of_USBCtrlEPService:
 25647                           	opt stack 0
 25648                           pclatu	equ	0xFFB
 25649                           pclath	equ	0xFFA
 25650                           tblptru	equ	0xFF8
 25651                           tblptrh	equ	0xFF7
 25652                           tblptrl	equ	0xFF6
 25653                           tablat	equ	0xFF5
 25654                           prodh	equ	0xFF4
 25655                           prodl	equ	0xFF3
 25656                           intcon	equ	0xFF2
 25657                           intcon3	equ	0xFF0
 25658                           indf0	equ	0xFEF
 25659                           postinc0	equ	0xFEE
 25660                           fsr0h	equ	0xFEA
 25661                           fsr0l	equ	0xFE9
 25662                           wreg	equ	0xFE8
 25663                           indf1	equ	0xFE7
 25664                           postdec1	equ	0xFE5
 25665                           fsr1h	equ	0xFE2
 25666                           fsr1l	equ	0xFE1
 25667                           indf2	equ	0xFDF
 25668                           postinc2	equ	0xFDE
 25669                           postdec2	equ	0xFDD
 25670                           plusw2	equ	0xFDB
 25671                           fsr2h	equ	0xFDA
 25672                           fsr2l	equ	0xFD9
 25673                           status	equ	0xFD8
 25674                           
 25675 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25676 ;; Defined at:
 25677 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 25678 ;; Parameters:    Size  Location     Type
 25679 ;;		None
 25680 ;; Auto vars:     Size  Location     Type
 25681 ;;		None
 25682 ;; Return value:  Size  Location     Type
 25683 ;;		None               void
 25684 ;; Registers used:
 25685 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25686 ;; Tracked objects:
 25687 ;;		On entry : 0/0
 25688 ;;		On exit  : 0/0
 25689 ;;		Unchanged: 0/0
 25690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25691 ;;      Params:         0       0       0       0       0       0       0       0       0
 25692 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25693 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25694 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25695 ;;Total ram usage:        0 bytes
 25696 ;; Hardware stack levels used:    1
 25697 ;; Hardware stack levels required when called:    7
 25698 ;; This function calls:
 25699 ;;		_USBCheckStdRequest
 25700 ;;		_USBCtrlEPServiceComplete
 25701 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25702 ;; This function is called by:
 25703 ;;		_USBCtrlEPService
 25704 ;; This function uses a non-reentrant model
 25705 ;;
 25706                           
 25707                           	psect	text112
 25708  004E4E                     __ptext112:
 25709                           	opt stack 0
 25710  004E4E                     _USBCtrlTrfSetupHandler:
 25711                           	opt stack 11
 25712                           
 25713                           ;usb_device.c: 2102: shortPacketStatus = 0;
 25714                           
 25715                           ;incstack = 0
 25716  004E4E  0E00               	movlw	0
 25717  004E50  6E51               	movwf	_shortPacketStatus,c	;volatile
 25718                           
 25719                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 25720  004E52  0E00               	movlw	0
 25721  004E54  6E48               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25722                           
 25723                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 25724  004E56  0E00               	movlw	0
 25725  004E58  0100               	movlb	0	; () banked
 25726  004E5A  6F87               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 25727                           
 25728                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 25729  004E5C  0E00               	movlw	0
 25730  004E5E  0100               	movlb	0	; () banked
 25731  004E60  6F88               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 25732                           
 25733                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 25734  004E62  0E00               	movlw	0
 25735  004E64  0100               	movlb	0	; () banked
 25736  004E66  6F84               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 25737                           
 25738                           ;usb_device.c: 2107: controlTransferState = 0;
 25739  004E68  0E00               	movlw	0
 25740  004E6A  6E4B               	movwf	_controlTransferState,c	;volatile
 25741                           
 25742                           ; BSR set to: 0
 25743                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25744  004E6C  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 25745  004E70  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25746  004E74  0E7F               	movlw	127
 25747  004E76  16DF               	andwf	indf2,f,c
 25748                           
 25749                           ; BSR set to: 0
 25750                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25751  004E78  0E04               	movlw	4
 25752  004E7A  1A36               	xorwf	_pBDTEntryIn,f,c
 25753                           
 25754                           ; BSR set to: 0
 25755                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25756  004E7C  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 25757  004E80  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25758  004E84  0E7F               	movlw	127
 25759  004E86  16DF               	andwf	indf2,f,c
 25760                           
 25761                           ; BSR set to: 0
 25762                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25763  004E88  0E04               	movlw	4
 25764  004E8A  1A36               	xorwf	_pBDTEntryIn,f,c
 25765                           
 25766                           ; BSR set to: 0
 25767                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25768  004E8C  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25769  004E90  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25770  004E94  0E7F               	movlw	127
 25771  004E96  16DF               	andwf	indf2,f,c
 25772                           
 25773                           ; BSR set to: 0
 25774                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 25775  004E98  0E00               	movlw	0
 25776  004E9A  6E55               	movwf	_inPipes+3,c	;volatile
 25777                           
 25778                           ; BSR set to: 0
 25779                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 25780  004E9C  0E00               	movlw	0
 25781  004E9E  6E57               	movwf	_inPipes+5,c	;volatile
 25782  004EA0  0E00               	movlw	0
 25783  004EA2  6E56               	movwf	_inPipes+4,c	;volatile
 25784                           
 25785                           ; BSR set to: 0
 25786                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 25787  004EA4  0E00               	movlw	0
 25788  004EA6  6E31               	movwf	_outPipes+3,c	;volatile
 25789                           
 25790                           ; BSR set to: 0
 25791                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 25792  004EA8  0E00               	movlw	0
 25793  004EAA  6E33               	movwf	_outPipes+5,c	;volatile
 25794  004EAC  0E00               	movlw	0
 25795  004EAE  6E32               	movwf	_outPipes+4,c	;volatile
 25796                           
 25797                           ; BSR set to: 0
 25798                           ;usb_device.c: 2131: USBCheckStdRequest();
 25799  004EB0  ECF6  F01D         	call	_USBCheckStdRequest	;wreg free
 25800                           
 25801                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25802  004EB4  0E00               	movlw	0
 25803  004EB6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25804  004EB8  0E03               	movlw	3
 25805  004EBA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25806  004EBC  0E00               	movlw	0
 25807  004EBE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25808  004EC0  0E00               	movlw	0
 25809  004EC2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25810  004EC4  0E00               	movlw	0
 25811  004EC6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25812  004EC8  0E00               	movlw	0
 25813  004ECA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25814  004ECC  ECB7  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25815                           
 25816                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 25817  004ED0  EC2D  F019         	call	_USBCtrlEPServiceComplete	;wreg free
 25818  004ED4  0012               	return		;funcret
 25819  004ED6                     __end_of_USBCtrlTrfSetupHandler:
 25820                           	opt stack 0
 25821                           pclatu	equ	0xFFB
 25822                           pclath	equ	0xFFA
 25823                           tblptru	equ	0xFF8
 25824                           tblptrh	equ	0xFF7
 25825                           tblptrl	equ	0xFF6
 25826                           tablat	equ	0xFF5
 25827                           prodh	equ	0xFF4
 25828                           prodl	equ	0xFF3
 25829                           intcon	equ	0xFF2
 25830                           intcon3	equ	0xFF0
 25831                           indf0	equ	0xFEF
 25832                           postinc0	equ	0xFEE
 25833                           fsr0h	equ	0xFEA
 25834                           fsr0l	equ	0xFE9
 25835                           wreg	equ	0xFE8
 25836                           indf1	equ	0xFE7
 25837                           postdec1	equ	0xFE5
 25838                           fsr1h	equ	0xFE2
 25839                           fsr1l	equ	0xFE1
 25840                           indf2	equ	0xFDF
 25841                           postinc2	equ	0xFDE
 25842                           postdec2	equ	0xFDD
 25843                           plusw2	equ	0xFDB
 25844                           fsr2h	equ	0xFDA
 25845                           fsr2l	equ	0xFD9
 25846                           status	equ	0xFD8
 25847                           
 25848 ;; *************** function _USBCtrlEPServiceComplete *****************
 25849 ;; Defined at:
 25850 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 25851 ;; Parameters:    Size  Location     Type
 25852 ;;		None
 25853 ;; Auto vars:     Size  Location     Type
 25854 ;;		None
 25855 ;; Return value:  Size  Location     Type
 25856 ;;		None               void
 25857 ;; Registers used:
 25858 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25859 ;; Tracked objects:
 25860 ;;		On entry : 0/0
 25861 ;;		On exit  : 0/0
 25862 ;;		Unchanged: 0/0
 25863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25864 ;;      Params:         0       0       0       0       0       0       0       0       0
 25865 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25866 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25867 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25868 ;;Total ram usage:        0 bytes
 25869 ;; Hardware stack levels used:    1
 25870 ;; Hardware stack levels required when called:    2
 25871 ;; This function calls:
 25872 ;;		_USBCtrlEPAllowDataStage
 25873 ;;		_USBCtrlEPAllowStatusStage
 25874 ;; This function is called by:
 25875 ;;		_USBCtrlTrfSetupHandler
 25876 ;; This function uses a non-reentrant model
 25877 ;;
 25878                           
 25879                           	psect	text113
 25880  00325A                     __ptext113:
 25881                           	opt stack 0
 25882  00325A                     _USBCtrlEPServiceComplete:
 25883                           	opt stack 15
 25884                           
 25885                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 25886                           
 25887                           ;incstack = 0
 25888  00325A  9860               	bcf	3936,4,c	;volatile
 25889                           
 25890                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 25891  00325C  BE55               	btfsc	_inPipes+3,7,c	;volatile
 25892  00325E  D03D               	goto	i2l1792
 25893                           
 25894                           ;usb_device.c: 1295: {
 25895                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 25896  003260  AE31               	btfss	_outPipes+3,7,c	;volatile
 25897  003262  D010               	goto	i2l7950
 25898                           
 25899                           ;usb_device.c: 1297: {
 25900                           ;usb_device.c: 1298: controlTransferState = 2;
 25901  003264  0E02               	movlw	2
 25902  003266  6E4B               	movwf	_controlTransferState,c	;volatile
 25903                           
 25904                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 25905  003268  0100               	movlb	0	; () banked
 25906  00326A  5188               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 25907  00326C  A4D8               	btfss	status,2,c
 25908  00326E  D003               	goto	i2l7946
 25909                           
 25910                           ; BSR set to: 0
 25911                           ;usb_device.c: 1310: {
 25912                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 25913  003270  ECB4  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
 25914  003274  D000               	goto	i2l7946
 25915  003276                     i2l7946:
 25916                           
 25917                           ;usb_device.c: 1312: }
 25918                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 25919  003276  0E00               	movlw	0
 25920  003278  0100               	movlb	0	; () banked
 25921  00327A  6F8B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25922                           
 25923                           ; BSR set to: 0
 25924                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 25925  00327C  0E00               	movlw	0
 25926  00327E  0100               	movlb	0	; () banked
 25927  003280  6F8A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25928                           
 25929                           ;usb_device.c: 1318: }
 25930  003282  0012               	return	
 25931  003284                     i2l7950:
 25932                           
 25933                           ;usb_device.c: 1319: else
 25934                           ;usb_device.c: 1320: {
 25935                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 25936  003284  EE20 F001          	lfsr	2,1
 25937  003288  5040               	movf	_pBDTEntryEP0OutNext,w,c
 25938  00328A  26D9               	addwf	fsr2l,f,c
 25939  00328C  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 25940  00328E  22DA               	addwfc	fsr2h,f,c
 25941  003290  0E08               	movlw	8
 25942  003292  6EDF               	movwf	indf2,c
 25943                           
 25944                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25945  003294  EE20 F002          	lfsr	2,2
 25946  003298  5040               	movf	_pBDTEntryEP0OutNext,w,c
 25947  00329A  26D9               	addwf	fsr2l,f,c
 25948  00329C  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 25949  00329E  22DA               	addwfc	fsr2h,f,c
 25950  0032A0  0E30               	movlw	48
 25951  0032A2  6EDE               	movwf	postinc2,c
 25952  0032A4  0E04               	movlw	4
 25953  0032A6  6EDD               	movwf	postdec2,c
 25954                           
 25955                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25956  0032A8  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25957  0032AC  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25958  0032B0  0E0C               	movlw	12
 25959  0032B2  6EDF               	movwf	indf2,c
 25960                           
 25961                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25962  0032B4  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25963  0032B8  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25964  0032BC  0E00               	movlw	0
 25965  0032BE  8EDB               	bsf	plusw2,7,c
 25966                           
 25967                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 25968  0032C0  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 25969  0032C4  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25970  0032C8  0E04               	movlw	4
 25971  0032CA  6EDF               	movwf	indf2,c
 25972                           
 25973                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25974  0032CC  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 25975  0032D0  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25976  0032D4  0E00               	movlw	0
 25977  0032D6  8EDB               	bsf	plusw2,7,c
 25978                           
 25979                           ;usb_device.c: 1331: }
 25980                           ;usb_device.c: 1332: }
 25981  0032D8  0012               	return	
 25982  0032DA                     i2l1792:
 25983                           
 25984                           ;usb_device.c: 1333: else
 25985                           ;usb_device.c: 1334: {
 25986                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 25987  0032DA  0104               	movlb	4	; () banked
 25988  0032DC  AF30               	btfss	48,7,b	;volatile
 25989  0032DE  D015               	goto	i2l7970
 25990                           
 25991                           ; BSR set to: 4
 25992                           ;usb_device.c: 1336: {
 25993                           ;usb_device.c: 1337: controlTransferState = 1;
 25994  0032E0  0E01               	movlw	1
 25995  0032E2  6E4B               	movwf	_controlTransferState,c	;volatile
 25996                           
 25997                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 25998  0032E4  0100               	movlb	0	; () banked
 25999  0032E6  5187               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 26000  0032E8  A4D8               	btfss	status,2,c
 26001  0032EA  D003               	goto	i2l7962
 26002                           
 26003                           ; BSR set to: 0
 26004                           ;usb_device.c: 1352: {
 26005                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 26006  0032EC  ECB4  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
 26007  0032F0  D000               	goto	i2l7962
 26008  0032F2                     i2l7962:
 26009                           
 26010                           ;usb_device.c: 1354: }
 26011                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 26012  0032F2  0E00               	movlw	0
 26013  0032F4  0100               	movlb	0	; () banked
 26014  0032F6  6F8B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 26015                           
 26016                           ; BSR set to: 0
 26017                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 26018  0032F8  0E00               	movlw	0
 26019  0032FA  0100               	movlb	0	; () banked
 26020  0032FC  6F8A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 26021                           
 26022                           ; BSR set to: 0
 26023                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 26024  0032FE  5048               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26025  003300  A4D8               	btfss	status,2,c
 26026  003302  0012               	return	
 26027                           
 26028                           ; BSR set to: 0
 26029                           ;usb_device.c: 1379: {
 26030                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 26031  003304  ECD1  F021         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26032                           
 26033                           ;usb_device.c: 1381: }
 26034                           ;usb_device.c: 1382: }
 26035  003308  0012               	return	
 26036  00330A                     i2l7970:
 26037                           
 26038                           ;usb_device.c: 1383: else
 26039                           ;usb_device.c: 1384: {
 26040                           ;usb_device.c: 1395: controlTransferState = 2;
 26041  00330A  0E02               	movlw	2
 26042  00330C  6E4B               	movwf	_controlTransferState,c	;volatile
 26043                           
 26044                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 26045  00330E  EE20 F001          	lfsr	2,1
 26046  003312  5040               	movf	_pBDTEntryEP0OutNext,w,c
 26047  003314  26D9               	addwf	fsr2l,f,c
 26048  003316  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 26049  003318  22DA               	addwfc	fsr2h,f,c
 26050  00331A  0E08               	movlw	8
 26051  00331C  6EDF               	movwf	indf2,c
 26052                           
 26053                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26054  00331E  EE20 F002          	lfsr	2,2
 26055  003322  5040               	movf	_pBDTEntryEP0OutNext,w,c
 26056  003324  26D9               	addwf	fsr2l,f,c
 26057  003326  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 26058  003328  22DA               	addwfc	fsr2h,f,c
 26059  00332A  0E30               	movlw	48
 26060  00332C  6EDE               	movwf	postinc2,c
 26061  00332E  0E04               	movlw	4
 26062  003330  6EDD               	movwf	postdec2,c
 26063                           
 26064                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 26065  003332  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26066  003336  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26067  00333A  0E04               	movlw	4
 26068  00333C  6EDF               	movwf	indf2,c
 26069                           
 26070                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26071  00333E  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26072  003342  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26073  003346  0E00               	movlw	0
 26074  003348  8EDB               	bsf	plusw2,7,c
 26075                           
 26076                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 26077  00334A  0E00               	movlw	0
 26078  00334C  0100               	movlb	0	; () banked
 26079  00334E  6F8B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 26080                           
 26081                           ; BSR set to: 0
 26082                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 26083  003350  0E00               	movlw	0
 26084  003352  0100               	movlb	0	; () banked
 26085  003354  6F8A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 26086                           
 26087                           ; BSR set to: 0
 26088                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 26089  003356  5048               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26090  003358  A4D8               	btfss	status,2,c
 26091  00335A  0012               	return	
 26092                           
 26093                           ; BSR set to: 0
 26094                           ;usb_device.c: 1407: {
 26095                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 26096  00335C  ECD1  F021         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26097  003360  0012               	return	
 26098  003362  0012               	return		;funcret
 26099  003364                     __end_of_USBCtrlEPServiceComplete:
 26100                           	opt stack 0
 26101                           pclatu	equ	0xFFB
 26102                           pclath	equ	0xFFA
 26103                           tblptru	equ	0xFF8
 26104                           tblptrh	equ	0xFF7
 26105                           tblptrl	equ	0xFF6
 26106                           tablat	equ	0xFF5
 26107                           prodh	equ	0xFF4
 26108                           prodl	equ	0xFF3
 26109                           intcon	equ	0xFF2
 26110                           intcon3	equ	0xFF0
 26111                           indf0	equ	0xFEF
 26112                           postinc0	equ	0xFEE
 26113                           fsr0h	equ	0xFEA
 26114                           fsr0l	equ	0xFE9
 26115                           wreg	equ	0xFE8
 26116                           indf1	equ	0xFE7
 26117                           postdec1	equ	0xFE5
 26118                           fsr1h	equ	0xFE2
 26119                           fsr1l	equ	0xFE1
 26120                           indf2	equ	0xFDF
 26121                           postinc2	equ	0xFDE
 26122                           postdec2	equ	0xFDD
 26123                           plusw2	equ	0xFDB
 26124                           fsr2h	equ	0xFDA
 26125                           fsr2l	equ	0xFD9
 26126                           status	equ	0xFD8
 26127                           
 26128 ;; *************** function _USBCtrlEPAllowDataStage *****************
 26129 ;; Defined at:
 26130 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 26131 ;; Parameters:    Size  Location     Type
 26132 ;;		None
 26133 ;; Auto vars:     Size  Location     Type
 26134 ;;		None
 26135 ;; Return value:  Size  Location     Type
 26136 ;;		None               void
 26137 ;; Registers used:
 26138 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26139 ;; Tracked objects:
 26140 ;;		On entry : 0/0
 26141 ;;		On exit  : 0/0
 26142 ;;		Unchanged: 0/0
 26143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26144 ;;      Params:         0       0       0       0       0       0       0       0       0
 26145 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26146 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26147 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26148 ;;Total ram usage:        0 bytes
 26149 ;; Hardware stack levels used:    1
 26150 ;; Hardware stack levels required when called:    1
 26151 ;; This function calls:
 26152 ;;		_USBCtrlTrfTxService
 26153 ;; This function is called by:
 26154 ;;		_USBCtrlEPServiceComplete
 26155 ;; This function uses a non-reentrant model
 26156 ;;
 26157                           
 26158                           	psect	text114
 26159  004B68                     __ptext114:
 26160                           	opt stack 0
 26161  004B68                     _USBCtrlEPAllowDataStage:
 26162                           	opt stack 15
 26163                           
 26164                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 26165                           
 26166                           ;incstack = 0
 26167  004B68  0E00               	movlw	0
 26168  004B6A  0100               	movlb	0	; () banked
 26169  004B6C  6F87               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 26170                           
 26171                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 26172  004B6E  0E00               	movlw	0
 26173  004B70  0100               	movlb	0	; () banked
 26174  004B72  6F88               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 26175                           
 26176                           ; BSR set to: 0
 26177                           ;usb_device.c: 1178: if(controlTransferState == 2)
 26178  004B74  0E02               	movlw	2
 26179  004B76  184B               	xorwf	_controlTransferState,w,c	;volatile
 26180  004B78  A4D8               	btfss	status,2,c
 26181  004B7A  D01F               	goto	i2l7538
 26182                           
 26183                           ; BSR set to: 0
 26184                           ;usb_device.c: 1179: {
 26185                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 26186  004B7C  EE20 F001          	lfsr	2,1
 26187  004B80  5040               	movf	_pBDTEntryEP0OutNext,w,c
 26188  004B82  26D9               	addwf	fsr2l,f,c
 26189  004B84  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 26190  004B86  22DA               	addwfc	fsr2h,f,c
 26191  004B88  0E08               	movlw	8
 26192  004B8A  6EDF               	movwf	indf2,c
 26193                           
 26194                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26195  004B8C  EE20 F002          	lfsr	2,2
 26196  004B90  5040               	movf	_pBDTEntryEP0OutNext,w,c
 26197  004B92  26D9               	addwf	fsr2l,f,c
 26198  004B94  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 26199  004B96  22DA               	addwfc	fsr2h,f,c
 26200  004B98  0E38               	movlw	56
 26201  004B9A  6EDE               	movwf	postinc2,c
 26202  004B9C  0E04               	movlw	4
 26203  004B9E  6EDD               	movwf	postdec2,c
 26204                           
 26205                           ; BSR set to: 0
 26206                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 26207  004BA0  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26208  004BA4  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26209  004BA8  0E48               	movlw	72
 26210  004BAA  6EDF               	movwf	indf2,c
 26211                           
 26212                           ; BSR set to: 0
 26213                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26214  004BAC  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26215  004BB0  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26216  004BB4  0E00               	movlw	0
 26217  004BB6  8EDB               	bsf	plusw2,7,c
 26218                           
 26219                           ;usb_device.c: 1185: }
 26220  004BB8  0012               	return	
 26221  004BBA                     i2l7538:
 26222                           
 26223                           ; BSR set to: 0
 26224                           ;usb_device.c: 1186: else
 26225                           ;usb_device.c: 1187: {
 26226                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 26227  004BBA  5056               	movf	_inPipes+4,w,c	;volatile
 26228  004BBC  0104               	movlb	4	; () banked
 26229  004BBE  5D36               	subwf	54,w,b	;volatile
 26230  004BC0  5057               	movf	_inPipes+5,w,c	;volatile
 26231  004BC2  0104               	movlb	4	; () banked
 26232  004BC4  5937               	subwfb	55,w,b	;volatile
 26233  004BC6  B0D8               	btfsc	status,0,c
 26234  004BC8  D005               	goto	i2l7542
 26235                           
 26236                           ; BSR set to: 4
 26237                           ;usb_device.c: 1191: {
 26238                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 26239  004BCA  C436 F056          	movff	1078,_inPipes+4	;volatile
 26240  004BCE  C437 F057          	movff	1079,_inPipes+5	;volatile
 26241  004BD2  D000               	goto	i2l7542
 26242  004BD4                     i2l7542:
 26243                           
 26244                           ; BSR set to: 4
 26245                           ;usb_device.c: 1193: }
 26246                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 26247  004BD4  EC26  F020         	call	_USBCtrlTrfTxService	;wreg free
 26248                           
 26249                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 26250  004BD8  EE20 F002          	lfsr	2,2
 26251  004BDC  5036               	movf	_pBDTEntryIn,w,c
 26252  004BDE  26D9               	addwf	fsr2l,f,c
 26253  004BE0  5037               	movf	_pBDTEntryIn+1,w,c
 26254  004BE2  22DA               	addwfc	fsr2h,f,c
 26255  004BE4  0E38               	movlw	56
 26256  004BE6  6EDE               	movwf	postinc2,c
 26257  004BE8  0E04               	movlw	4
 26258  004BEA  6EDD               	movwf	postdec2,c
 26259                           
 26260                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26261  004BEC  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 26262  004BF0  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26263  004BF4  0E48               	movlw	72
 26264  004BF6  6EDF               	movwf	indf2,c
 26265                           
 26266                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26267  004BF8  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 26268  004BFC  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26269  004C00  0E00               	movlw	0
 26270  004C02  8EDB               	bsf	plusw2,7,c
 26271  004C04  0012               	return	
 26272  004C06  0012               	return		;funcret
 26273  004C08                     __end_of_USBCtrlEPAllowDataStage:
 26274                           	opt stack 0
 26275                           pclatu	equ	0xFFB
 26276                           pclath	equ	0xFFA
 26277                           tblptru	equ	0xFF8
 26278                           tblptrh	equ	0xFF7
 26279                           tblptrl	equ	0xFF6
 26280                           tablat	equ	0xFF5
 26281                           prodh	equ	0xFF4
 26282                           prodl	equ	0xFF3
 26283                           intcon	equ	0xFF2
 26284                           intcon3	equ	0xFF0
 26285                           indf0	equ	0xFEF
 26286                           postinc0	equ	0xFEE
 26287                           fsr0h	equ	0xFEA
 26288                           fsr0l	equ	0xFE9
 26289                           wreg	equ	0xFE8
 26290                           indf1	equ	0xFE7
 26291                           postdec1	equ	0xFE5
 26292                           fsr1h	equ	0xFE2
 26293                           fsr1l	equ	0xFE1
 26294                           indf2	equ	0xFDF
 26295                           postinc2	equ	0xFDE
 26296                           postdec2	equ	0xFDD
 26297                           plusw2	equ	0xFDB
 26298                           fsr2h	equ	0xFDA
 26299                           fsr2l	equ	0xFD9
 26300                           status	equ	0xFD8
 26301                           
 26302 ;; *************** function _USBCheckStdRequest *****************
 26303 ;; Defined at:
 26304 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 26305 ;; Parameters:    Size  Location     Type
 26306 ;;		None
 26307 ;; Auto vars:     Size  Location     Type
 26308 ;;		None
 26309 ;; Return value:  Size  Location     Type
 26310 ;;		None               void
 26311 ;; Registers used:
 26312 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26313 ;; Tracked objects:
 26314 ;;		On entry : 0/0
 26315 ;;		On exit  : 0/0
 26316 ;;		Unchanged: 0/0
 26317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26318 ;;      Params:         0       0       0       0       0       0       0       0       0
 26319 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26320 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26321 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26322 ;;Total ram usage:        0 bytes
 26323 ;; Hardware stack levels used:    1
 26324 ;; Hardware stack levels required when called:    6
 26325 ;; This function calls:
 26326 ;;		_USBStdFeatureReqHandler
 26327 ;;		_USBStdGetDscHandler
 26328 ;;		_USBStdGetStatusHandler
 26329 ;;		_USBStdSetCfgHandler
 26330 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26331 ;; This function is called by:
 26332 ;;		_USBCtrlTrfSetupHandler
 26333 ;; This function uses a non-reentrant model
 26334 ;;
 26335                           
 26336                           	psect	text115
 26337  003BEC                     __ptext115:
 26338                           	opt stack 0
 26339  003BEC                     _USBCheckStdRequest:
 26340                           	opt stack 11
 26341                           
 26342                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 26343                           
 26344                           ;incstack = 0
 26345  003BEC  0104               	movlb	4	; () banked
 26346  003BEE  3930               	swapf	48,w,b	;volatile
 26347  003BF0  32E8               	rrcf	wreg,f,c
 26348  003BF2  0B03               	andlw	3
 26349  003BF4  0900               	iorlw	0
 26350  003BF6  A4D8               	btfss	status,2,c
 26351  003BF8  0012               	return	
 26352  003BFA  D047               	goto	i2l8072
 26353                           
 26354                           ; BSR set to: 4
 26355  003BFC  0012               	return	
 26356                           
 26357                           ; BSR set to: 4
 26358                           ;usb_device.c: 2321: switch(SetupPkt.bRequest)
 26359  003BFE  D045               	goto	i2l8072
 26360  003C00                     i2l1919:
 26361                           
 26362                           ; BSR set to: 4
 26363                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 26364  003C00  8E55               	bsf	_inPipes+3,7,c	;volatile
 26365                           
 26366                           ; BSR set to: 4
 26367                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 26368  003C02  0E08               	movlw	8
 26369  003C04  0100               	movlb	0	; () banked
 26370  003C06  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 26371                           
 26372                           ;usb_device.c: 2327: break;
 26373  003C08  0012               	return	
 26374  003C0A                     i2l8042:
 26375                           
 26376                           ;usb_device.c: 2329: USBStdGetDscHandler();
 26377  003C0A  EC0E  F018         	call	_USBStdGetDscHandler	;wreg free
 26378                           
 26379                           ;usb_device.c: 2330: break;
 26380  003C0E  0012               	return	
 26381  003C10                     i2l8044:
 26382                           
 26383                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 26384  003C10  EC68  F01E         	call	_USBStdSetCfgHandler	;wreg free
 26385                           
 26386                           ;usb_device.c: 2333: break;
 26387  003C14  0012               	return	
 26388  003C16                     i2l8046:
 26389                           
 26390                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 26391  003C16  0E58               	movlw	low _USBActiveConfiguration
 26392  003C18  6E52               	movwf	_inPipes,c	;volatile
 26393  003C1A  0E00               	movlw	high _USBActiveConfiguration
 26394  003C1C  6E53               	movwf	_inPipes+1,c	;volatile
 26395                           
 26396                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26397  003C1E  8055               	bsf	_inPipes+3,0,c	;volatile
 26398                           
 26399                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 26400  003C20  0E01               	movlw	1
 26401  003C22  6E56               	movwf	_inPipes+4,c	;volatile
 26402                           
 26403                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 26404  003C24  8E55               	bsf	_inPipes+3,7,c	;volatile
 26405                           
 26406                           ;usb_device.c: 2339: break;
 26407  003C26  0012               	return	
 26408  003C28                     i2l8054:
 26409                           
 26410                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 26411  003C28  EC54  F023         	call	_USBStdGetStatusHandler	;wreg free
 26412                           
 26413                           ;usb_device.c: 2342: break;
 26414  003C2C  0012               	return	
 26415                           
 26416                           ;usb_device.c: 2343: case 1:
 26417  003C2E  D000               	goto	i2l8056
 26418  003C30                     i2l8056:
 26419                           
 26420                           ;usb_device.c: 2344: case 3:
 26421                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 26422  003C30  ECED  F00C         	call	_USBStdFeatureReqHandler	;wreg free
 26423                           
 26424                           ;usb_device.c: 2346: break;
 26425  003C34  0012               	return	
 26426  003C36                     i2l8058:
 26427                           
 26428                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 26429  003C36  0104               	movlb	4	; () banked
 26430  003C38  5134               	movf	52,w,b	;volatile
 26431  003C3A  0D01               	mullw	1
 26432  003C3C  0EAD               	movlw	low _USBAlternateInterface
 26433  003C3E  24F3               	addwf	prodl,w,c
 26434  003C40  6E52               	movwf	_inPipes,c	;volatile
 26435  003C42  0E00               	movlw	high _USBAlternateInterface
 26436  003C44  20F4               	addwfc	prodh,w,c
 26437  003C46  6E53               	movwf	_inPipes+1,c	;volatile
 26438                           
 26439                           ; BSR set to: 4
 26440                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26441  003C48  8055               	bsf	_inPipes+3,0,c	;volatile
 26442                           
 26443                           ; BSR set to: 4
 26444                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 26445  003C4A  0E01               	movlw	1
 26446  003C4C  6E56               	movwf	_inPipes+4,c	;volatile
 26447                           
 26448                           ; BSR set to: 4
 26449                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 26450  003C4E  8E55               	bsf	_inPipes+3,7,c	;volatile
 26451                           
 26452                           ;usb_device.c: 2352: break;
 26453  003C50  0012               	return	
 26454  003C52                     i2l1928:
 26455                           
 26456                           ; BSR set to: 4
 26457                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 26458  003C52  8E55               	bsf	_inPipes+3,7,c	;volatile
 26459                           
 26460                           ; BSR set to: 4
 26461                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 26462  003C54  0104               	movlb	4	; () banked
 26463  003C56  5134               	movf	52,w,b	;volatile
 26464  003C58  0D01               	mullw	1
 26465  003C5A  0EAD               	movlw	low _USBAlternateInterface
 26466  003C5C  24F3               	addwf	prodl,w,c
 26467  003C5E  6ED9               	movwf	fsr2l,c
 26468  003C60  0E00               	movlw	high _USBAlternateInterface
 26469  003C62  20F4               	addwfc	prodh,w,c
 26470  003C64  6EDA               	movwf	fsr2h,c
 26471  003C66  C432 FFDF          	movff	1074,indf2	;volatile
 26472                           
 26473                           ;usb_device.c: 2356: break;
 26474  003C6A  0012               	return	
 26475  003C6C                     i2l8068:
 26476                           
 26477                           ; BSR set to: 4
 26478                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 26479  003C6C  0E00               	movlw	0
 26480  003C6E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26481  003C70  0E02               	movlw	2
 26482  003C72  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26483  003C74  0E00               	movlw	0
 26484  003C76  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26485  003C78  0E00               	movlw	0
 26486  003C7A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26487  003C7C  0E00               	movlw	0
 26488  003C7E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26489  003C80  0E00               	movlw	0
 26490  003C82  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26491  003C84  ECB7  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26492                           
 26493                           ;usb_device.c: 2363: }
 26494                           
 26495                           ;usb_device.c: 2362: break;
 26496                           
 26497                           ;usb_device.c: 2361: default:
 26498                           
 26499                           ;usb_device.c: 2360: case 12:
 26500                           
 26501                           ;usb_device.c: 2359: break;
 26502  003C88  0012               	return	
 26503  003C8A                     i2l8072:
 26504  003C8A  0104               	movlb	4	; () banked
 26505  003C8C  5131               	movf	49,w,b	;volatile
 26506                           
 26507                           ; Switch size 1, requested type "space"
 26508                           ; Number of cases is 11, Range of values is 0 to 12
 26509                           ; switch strategies available:
 26510                           ; Name         Instructions Cycles
 26511                           ; simple_byte           34    18 (average)
 26512                           ;	Chosen strategy is simple_byte
 26513  003C8E  0A00               	xorlw	0	; case 0
 26514  003C90  B4D8               	btfsc	status,2,c
 26515  003C92  D7CA               	goto	i2l8054
 26516  003C94  0A01               	xorlw	1	; case 1
 26517  003C96  B4D8               	btfsc	status,2,c
 26518  003C98  D7CB               	goto	i2l8056
 26519  003C9A  0A02               	xorlw	2	; case 3
 26520  003C9C  B4D8               	btfsc	status,2,c
 26521  003C9E  D7C8               	goto	i2l8056
 26522  003CA0  0A06               	xorlw	6	; case 5
 26523  003CA2  B4D8               	btfsc	status,2,c
 26524  003CA4  D7AD               	goto	i2l1919
 26525  003CA6  0A03               	xorlw	3	; case 6
 26526  003CA8  B4D8               	btfsc	status,2,c
 26527  003CAA  D7AF               	goto	i2l8042
 26528  003CAC  0A01               	xorlw	1	; case 7
 26529  003CAE  B4D8               	btfsc	status,2,c
 26530  003CB0  D7DD               	goto	i2l8068
 26531  003CB2  0A0F               	xorlw	15	; case 8
 26532  003CB4  B4D8               	btfsc	status,2,c
 26533  003CB6  D7AF               	goto	i2l8046
 26534  003CB8  0A01               	xorlw	1	; case 9
 26535  003CBA  B4D8               	btfsc	status,2,c
 26536  003CBC  D7A9               	goto	i2l8044
 26537  003CBE  0A03               	xorlw	3	; case 10
 26538  003CC0  B4D8               	btfsc	status,2,c
 26539  003CC2  D7B9               	goto	i2l8058
 26540  003CC4  0A01               	xorlw	1	; case 11
 26541  003CC6  B4D8               	btfsc	status,2,c
 26542  003CC8  D7C4               	goto	i2l1928
 26543  003CCA  0A07               	xorlw	7	; case 12
 26544  003CCC  0012               	return	
 26545                           
 26546                           ; BSR set to: 4
 26547  003CCE  0012               	return		;funcret
 26548  003CD0                     __end_of_USBCheckStdRequest:
 26549                           	opt stack 0
 26550                           pclatu	equ	0xFFB
 26551                           pclath	equ	0xFFA
 26552                           tblptru	equ	0xFF8
 26553                           tblptrh	equ	0xFF7
 26554                           tblptrl	equ	0xFF6
 26555                           tablat	equ	0xFF5
 26556                           prodh	equ	0xFF4
 26557                           prodl	equ	0xFF3
 26558                           intcon	equ	0xFF2
 26559                           intcon3	equ	0xFF0
 26560                           indf0	equ	0xFEF
 26561                           postinc0	equ	0xFEE
 26562                           fsr0h	equ	0xFEA
 26563                           fsr0l	equ	0xFE9
 26564                           wreg	equ	0xFE8
 26565                           indf1	equ	0xFE7
 26566                           postdec1	equ	0xFE5
 26567                           fsr1h	equ	0xFE2
 26568                           fsr1l	equ	0xFE1
 26569                           indf2	equ	0xFDF
 26570                           postinc2	equ	0xFDE
 26571                           postdec2	equ	0xFDD
 26572                           plusw2	equ	0xFDB
 26573                           fsr2h	equ	0xFDA
 26574                           fsr2l	equ	0xFD9
 26575                           status	equ	0xFD8
 26576                           
 26577 ;; *************** function _USBStdSetCfgHandler *****************
 26578 ;; Defined at:
 26579 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 26580 ;; Parameters:    Size  Location     Type
 26581 ;;		None
 26582 ;; Auto vars:     Size  Location     Type
 26583 ;;  i               1   21[COMRAM] unsigned char 
 26584 ;; Return value:  Size  Location     Type
 26585 ;;		None               void
 26586 ;; Registers used:
 26587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26588 ;; Tracked objects:
 26589 ;;		On entry : 0/0
 26590 ;;		On exit  : 0/0
 26591 ;;		Unchanged: 0/0
 26592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26593 ;;      Params:         0       0       0       0       0       0       0       0       0
 26594 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26595 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26596 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26597 ;;Total ram usage:        1 bytes
 26598 ;; Hardware stack levels used:    1
 26599 ;; Hardware stack levels required when called:    5
 26600 ;; This function calls:
 26601 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26602 ;;		i2_memset
 26603 ;; This function is called by:
 26604 ;;		_USBCheckStdRequest
 26605 ;; This function uses a non-reentrant model
 26606 ;;
 26607                           
 26608                           	psect	text116
 26609  003CD0                     __ptext116:
 26610                           	opt stack 0
 26611  003CD0                     _USBStdSetCfgHandler:
 26612                           	opt stack 11
 26613                           
 26614                           ;usb_device.c: 1631: uint8_t i;
 26615                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 26616                           
 26617                           ;incstack = 0
 26618  003CD0  8E55               	bsf	_inPipes+3,7,c	;volatile
 26619                           
 26620                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 26621  003CD2  0E6B               	movlw	107
 26622  003CD4  6E01               	movwf	i2memset@p1,c
 26623  003CD6  0E0F               	movlw	15
 26624  003CD8  6E02               	movwf	i2memset@p1+1,c
 26625  003CDA  0E00               	movlw	0
 26626  003CDC  6E04               	movwf	i2memset@c+1,c
 26627  003CDE  0E00               	movlw	0
 26628  003CE0  6E03               	movwf	i2memset@c,c
 26629  003CE2  0E00               	movlw	0
 26630  003CE4  6E06               	movwf	i2memset@n+1,c
 26631  003CE6  0E02               	movlw	2
 26632  003CE8  6E05               	movwf	i2memset@n,c
 26633  003CEA  EC7B  F02E         	call	i2_memset	;wreg free
 26634                           
 26635                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26636  003CEE  0E00               	movlw	0
 26637  003CF0  6E01               	movwf	i2memset@p1,c
 26638  003CF2  0E04               	movlw	4
 26639  003CF4  6E02               	movwf	i2memset@p1+1,c
 26640  003CF6  0E00               	movlw	0
 26641  003CF8  6E04               	movwf	i2memset@c+1,c
 26642  003CFA  0E00               	movlw	0
 26643  003CFC  6E03               	movwf	i2memset@c,c
 26644  003CFE  0E00               	movlw	0
 26645  003D00  6E06               	movwf	i2memset@n+1,c
 26646  003D02  0E30               	movlw	48
 26647  003D04  6E05               	movwf	i2memset@n,c
 26648  003D06  EC7B  F02E         	call	i2_memset	;wreg free
 26649                           
 26650                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 26651  003D0A  8C60               	bsf	3936,6,c	;volatile
 26652                           
 26653                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 26654  003D0C  0E00               	movlw	0
 26655  003D0E  6E16               	movwf	USBStdSetCfgHandler@i,c
 26656  003D10                     i2l7558:
 26657  003D10  0E02               	movlw	2
 26658  003D12  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 26659  003D14  D001               	goto	i2l7562
 26660  003D16  D016               	goto	i2l7568
 26661  003D18                     i2l7562:
 26662                           
 26663                           ;usb_device.c: 1649: {
 26664                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 26665  003D18  5016               	movf	USBStdSetCfgHandler@i,w,c
 26666  003D1A  0D01               	mullw	1
 26667  003D1C  0E66               	movlw	low _ep_data_in
 26668  003D1E  24F3               	addwf	prodl,w,c
 26669  003D20  6ED9               	movwf	fsr2l,c
 26670  003D22  0E00               	movlw	high _ep_data_in
 26671  003D24  20F4               	addwfc	prodh,w,c
 26672  003D26  6EDA               	movwf	fsr2h,c
 26673  003D28  0E00               	movlw	0
 26674  003D2A  6EDF               	movwf	indf2,c
 26675                           
 26676                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 26677  003D2C  5016               	movf	USBStdSetCfgHandler@i,w,c
 26678  003D2E  0D01               	mullw	1
 26679  003D30  0E69               	movlw	low _ep_data_out
 26680  003D32  24F3               	addwf	prodl,w,c
 26681  003D34  6ED9               	movwf	fsr2l,c
 26682  003D36  0E00               	movlw	high _ep_data_out
 26683  003D38  20F4               	addwfc	prodh,w,c
 26684  003D3A  6EDA               	movwf	fsr2h,c
 26685  003D3C  0E00               	movlw	0
 26686  003D3E  6EDF               	movwf	indf2,c
 26687  003D40  2A16               	incf	USBStdSetCfgHandler@i,f,c
 26688  003D42  D7E6               	goto	i2l7558
 26689  003D44                     i2l7568:
 26690                           
 26691                           ;usb_device.c: 1652: }
 26692                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 26693  003D44  0EAD               	movlw	low _USBAlternateInterface
 26694  003D46  6E01               	movwf	i2memset@p1,c
 26695  003D48  0E00               	movlw	high _USBAlternateInterface
 26696  003D4A  6E02               	movwf	i2memset@p1+1,c
 26697  003D4C  0E00               	movlw	0
 26698  003D4E  6E04               	movwf	i2memset@c+1,c
 26699  003D50  0E00               	movlw	0
 26700  003D52  6E03               	movwf	i2memset@c,c
 26701  003D54  0E00               	movlw	0
 26702  003D56  6E06               	movwf	i2memset@n+1,c
 26703  003D58  0E02               	movlw	2
 26704  003D5A  6E05               	movwf	i2memset@n,c
 26705  003D5C  EC7B  F02E         	call	i2_memset	;wreg free
 26706                           
 26707                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 26708  003D60  9C60               	bcf	3936,6,c	;volatile
 26709                           
 26710                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26711  003D62  0E08               	movlw	8
 26712  003D64  6E36               	movwf	_pBDTEntryIn,c
 26713  003D66  0E04               	movlw	4
 26714  003D68  6E37               	movwf	_pBDTEntryIn+1,c
 26715                           
 26716                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26717  003D6A  0E00               	movlw	0
 26718  003D6C  6E3E               	movwf	_pBDTEntryEP0OutCurrent,c
 26719  003D6E  0E04               	movlw	4
 26720  003D70  6E3F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26721                           
 26722                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26723  003D72  C03E  F040         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26724  003D76  C03F  F041         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26725                           
 26726                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26727  003D7A  C432 F058          	movff	1074,_USBActiveConfiguration	;volatile
 26728                           
 26729                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 26730  003D7E  5058               	movf	_USBActiveConfiguration,w,c	;volatile
 26731  003D80  A4D8               	btfss	status,2,c
 26732  003D82  D004               	goto	i2l7584
 26733                           
 26734                           ;usb_device.c: 1671: {
 26735                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 26736  003D84  0E10               	movlw	16
 26737  003D86  0100               	movlb	0	; () banked
 26738  003D88  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 26739                           
 26740                           ;usb_device.c: 1674: }
 26741  003D8A  0012               	return	
 26742  003D8C                     i2l7584:
 26743                           
 26744                           ;usb_device.c: 1675: else
 26745                           ;usb_device.c: 1676: {
 26746                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26747  003D8C  0E00               	movlw	0
 26748  003D8E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26749  003D90  0E01               	movlw	1
 26750  003D92  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26751  003D94  0E58               	movlw	low _USBActiveConfiguration
 26752  003D96  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26753  003D98  0E00               	movlw	high _USBActiveConfiguration
 26754  003D9A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26755  003D9C  0E00               	movlw	0
 26756  003D9E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26757  003DA0  0E01               	movlw	1
 26758  003DA2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26759  003DA4  ECB7  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26760                           
 26761                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 26762  003DA8  0E20               	movlw	32
 26763  003DAA  0100               	movlb	0	; () banked
 26764  003DAC  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 26765  003DAE  0012               	return	
 26766                           
 26767                           ; BSR set to: 0
 26768                           
 26769                           ; BSR set to: 0
 26770  003DB0  0012               	return		;funcret
 26771  003DB2                     __end_of_USBStdSetCfgHandler:
 26772                           	opt stack 0
 26773                           pclatu	equ	0xFFB
 26774                           pclath	equ	0xFFA
 26775                           tblptru	equ	0xFF8
 26776                           tblptrh	equ	0xFF7
 26777                           tblptrl	equ	0xFF6
 26778                           tablat	equ	0xFF5
 26779                           prodh	equ	0xFF4
 26780                           prodl	equ	0xFF3
 26781                           intcon	equ	0xFF2
 26782                           intcon3	equ	0xFF0
 26783                           indf0	equ	0xFEF
 26784                           postinc0	equ	0xFEE
 26785                           fsr0h	equ	0xFEA
 26786                           fsr0l	equ	0xFE9
 26787                           wreg	equ	0xFE8
 26788                           indf1	equ	0xFE7
 26789                           postdec1	equ	0xFE5
 26790                           fsr1h	equ	0xFE2
 26791                           fsr1l	equ	0xFE1
 26792                           indf2	equ	0xFDF
 26793                           postinc2	equ	0xFDE
 26794                           postdec2	equ	0xFDD
 26795                           plusw2	equ	0xFDB
 26796                           fsr2h	equ	0xFDA
 26797                           fsr2l	equ	0xFD9
 26798                           status	equ	0xFD8
 26799                           
 26800 ;; *************** function i2_memset *****************
 26801 ;; Defined at:
 26802 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
 26803 ;; Parameters:    Size  Location     Type
 26804 ;;  p1              2    0[COMRAM] PTR void 
 26805 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26806 ;;  c               2    2[COMRAM] int 
 26807 ;;  n               2    4[COMRAM] unsigned int 
 26808 ;; Auto vars:     Size  Location     Type
 26809 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26810 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26811 ;; Return value:  Size  Location     Type
 26812 ;;                  2    0[COMRAM] PTR void 
 26813 ;; Registers used:
 26814 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26815 ;; Tracked objects:
 26816 ;;		On entry : 0/0
 26817 ;;		On exit  : 0/0
 26818 ;;		Unchanged: 0/0
 26819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26820 ;;      Params:         6       0       0       0       0       0       0       0       0
 26821 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26822 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26823 ;;      Totals:         8       0       0       0       0       0       0       0       0
 26824 ;;Total ram usage:        8 bytes
 26825 ;; Hardware stack levels used:    1
 26826 ;; This function calls:
 26827 ;;		Nothing
 26828 ;; This function is called by:
 26829 ;;		_USBStdSetCfgHandler
 26830 ;;		i2_USBDeviceInit
 26831 ;; This function uses a non-reentrant model
 26832 ;;
 26833                           
 26834                           	psect	text117
 26835  005CF6                     __ptext117:
 26836                           	opt stack 0
 26837  005CF6                     i2_memset:
 26838                           	opt stack 18
 26839                           
 26840                           ; BSR set to: 0
 26841                           ;incstack = 0
 26842  005CF6  C001  F007         	movff	i2memset@p1,i2memset@p
 26843  005CFA  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 26844  005CFE  D009               	goto	i2l7384
 26845  005D00                     i2l7380:
 26846  005D00  C007  FFD9         	movff	i2memset@p,fsr2l
 26847  005D04  C008  FFDA         	movff	i2memset@p+1,fsr2h
 26848  005D08  C003  FFDF         	movff	i2memset@c,indf2
 26849  005D0C  4A07               	infsnz	i2memset@p,f,c
 26850  005D0E  2A08               	incf	i2memset@p+1,f,c
 26851  005D10  D000               	goto	i2l7384
 26852  005D12                     i2l7384:
 26853  005D12  0605               	decf	i2memset@n,f,c
 26854  005D14  A0D8               	btfss	status,0,c
 26855  005D16  0606               	decf	i2memset@n+1,f,c
 26856  005D18  2805               	incf	i2memset@n,w,c
 26857  005D1A  E1F2               	bnz	i2l7380
 26858  005D1C  2806               	incf	i2memset@n+1,w,c
 26859  005D1E  A4D8               	btfss	status,2,c
 26860  005D20  D7EF               	goto	i2l7380
 26861                           
 26862                           ;	Return value of i2_memset is never used
 26863  005D22  0012               	return		;funcret
 26864  005D24                     __end_ofi2_memset:
 26865                           	opt stack 0
 26866                           pclatu	equ	0xFFB
 26867                           pclath	equ	0xFFA
 26868                           tblptru	equ	0xFF8
 26869                           tblptrh	equ	0xFF7
 26870                           tblptrl	equ	0xFF6
 26871                           tablat	equ	0xFF5
 26872                           prodh	equ	0xFF4
 26873                           prodl	equ	0xFF3
 26874                           intcon	equ	0xFF2
 26875                           intcon3	equ	0xFF0
 26876                           indf0	equ	0xFEF
 26877                           postinc0	equ	0xFEE
 26878                           fsr0h	equ	0xFEA
 26879                           fsr0l	equ	0xFE9
 26880                           wreg	equ	0xFE8
 26881                           indf1	equ	0xFE7
 26882                           postdec1	equ	0xFE5
 26883                           fsr1h	equ	0xFE2
 26884                           fsr1l	equ	0xFE1
 26885                           indf2	equ	0xFDF
 26886                           postinc2	equ	0xFDE
 26887                           postdec2	equ	0xFDD
 26888                           plusw2	equ	0xFDB
 26889                           fsr2h	equ	0xFDA
 26890                           fsr2l	equ	0xFD9
 26891                           status	equ	0xFD8
 26892                           
 26893 ;; *************** function _USBStdGetStatusHandler *****************
 26894 ;; Defined at:
 26895 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 26896 ;; Parameters:    Size  Location     Type
 26897 ;;		None
 26898 ;; Auto vars:     Size  Location     Type
 26899 ;;  p               2    1[COMRAM] PTR struct __BDT
 26900 ;;		 -> BDT(48), NULL(0), 
 26901 ;; Return value:  Size  Location     Type
 26902 ;;		None               void
 26903 ;; Registers used:
 26904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26905 ;; Tracked objects:
 26906 ;;		On entry : 0/0
 26907 ;;		On exit  : 0/0
 26908 ;;		Unchanged: 0/0
 26909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26910 ;;      Params:         0       0       0       0       0       0       0       0       0
 26911 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26912 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26913 ;;      Totals:         3       0       0       0       0       0       0       0       0
 26914 ;;Total ram usage:        3 bytes
 26915 ;; Hardware stack levels used:    1
 26916 ;; This function calls:
 26917 ;;		Nothing
 26918 ;; This function is called by:
 26919 ;;		_USBCheckStdRequest
 26920 ;; This function uses a non-reentrant model
 26921 ;;
 26922                           
 26923                           	psect	text118
 26924  0046A8                     __ptext118:
 26925                           	opt stack 0
 26926  0046A8                     _USBStdGetStatusHandler:
 26927                           	opt stack 16
 26928                           
 26929                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 26930                           
 26931                           ;incstack = 0
 26932  0046A8  0E00               	movlw	0
 26933  0046AA  0104               	movlb	4	; () banked
 26934  0046AC  6F38               	movwf	56,b	;volatile
 26935                           
 26936                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 26937  0046AE  0E00               	movlw	0
 26938  0046B0  0104               	movlb	4	; () banked
 26939  0046B2  6F39               	movwf	57,b	;volatile
 26940                           
 26941                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 26942  0046B4  D03E               	goto	i2l7640
 26943  0046B6                     i2l1855:
 26944                           
 26945                           ; BSR set to: 4
 26946                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 26947  0046B6  8E55               	bsf	_inPipes+3,7,c	;volatile
 26948                           
 26949                           ;usb_device.c: 1786: if(0 == 1)
 26950  0046B8  D003               	goto	i2l7624
 26951                           
 26952                           ; BSR set to: 4
 26953                           ;usb_device.c: 1787: {
 26954                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 26955  0046BA  0104               	movlb	4	; () banked
 26956  0046BC  8138               	bsf	56,0,b	;volatile
 26957  0046BE  D000               	goto	i2l7624
 26958  0046C0                     i2l7624:
 26959                           
 26960                           ; BSR set to: 4
 26961                           ;usb_device.c: 1789: }
 26962                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 26963  0046C0  0100               	movlb	0	; () banked
 26964  0046C2  0585               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 26965  0046C4  A4D8               	btfss	status,2,c
 26966  0046C6  D041               	goto	i2l1858
 26967                           
 26968                           ; BSR set to: 0
 26969                           ;usb_device.c: 1792: {
 26970                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 26971  0046C8  0104               	movlb	4	; () banked
 26972  0046CA  8338               	bsf	56,1,b	;volatile
 26973                           
 26974                           ; BSR set to: 4
 26975                           ;usb_device.c: 1794: }
 26976                           ;usb_device.c: 1795: break;
 26977  0046CC  D03E               	goto	i2l1858
 26978  0046CE                     i2l1859:
 26979                           
 26980                           ; BSR set to: 4
 26981                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 26982  0046CE  8E55               	bsf	_inPipes+3,7,c	;volatile
 26983                           
 26984                           ;usb_device.c: 1798: break;
 26985  0046D0  D03C               	goto	i2l1858
 26986  0046D2                     i2l1860:
 26987                           
 26988                           ; BSR set to: 4
 26989                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 26990  0046D2  8E55               	bsf	_inPipes+3,7,c	;volatile
 26991                           
 26992                           ;usb_device.c: 1804: {
 26993                           ;usb_device.c: 1805: BDT_ENTRY *p;
 26994                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 26995  0046D4  0104               	movlb	4	; () banked
 26996  0046D6  BF34               	btfsc	52,7,b	;volatile
 26997  0046D8  D00B               	goto	i2l7630
 26998                           
 26999                           ; BSR set to: 4
 27000                           ;usb_device.c: 1808: {
 27001                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27002  0046DA  0104               	movlb	4	; () banked
 27003  0046DC  5134               	movf	52,w,b	;volatile
 27004  0046DE  0B0F               	andlw	15
 27005  0046E0  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27006  0046E2  5001               	movf	??_USBStdGetStatusHandler,w,c
 27007  0046E4  0D02               	mullw	2
 27008  0046E6  0E60               	movlw	low _pBDTEntryOut
 27009  0046E8  24F3               	addwf	prodl,w,c
 27010  0046EA  6ED9               	movwf	fsr2l,c
 27011  0046EC  0E00               	movlw	high _pBDTEntryOut
 27012  0046EE  D00A               	goto	L16
 27013  0046F0                     i2l7630:
 27014                           
 27015                           ; BSR set to: 4
 27016                           ;usb_device.c: 1811: else
 27017                           ;usb_device.c: 1812: {
 27018                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27019  0046F0  0104               	movlb	4	; () banked
 27020  0046F2  5134               	movf	52,w,b	;volatile
 27021  0046F4  0B0F               	andlw	15
 27022  0046F6  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27023  0046F8  5001               	movf	??_USBStdGetStatusHandler,w,c
 27024  0046FA  0D02               	mullw	2
 27025  0046FC  0E36               	movlw	low _pBDTEntryIn
 27026  0046FE  24F3               	addwf	prodl,w,c
 27027  004700  6ED9               	movwf	fsr2l,c
 27028  004702  0E00               	movlw	high _pBDTEntryIn
 27029  004704                     L16:
 27030  004704  20F4               	addwfc	prodh,w,c
 27031  004706  6EDA               	movwf	fsr2h,c
 27032  004708  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 27033  00470C  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 27034  004710  D000               	goto	i2l7632
 27035  004712                     i2l7632:
 27036                           
 27037                           ; BSR set to: 4
 27038                           ;usb_device.c: 1814: }
 27039                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 27040  004712  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27041  004716  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27042  00471A  AEDF               	btfss	indf2,7,c
 27043  00471C  D016               	goto	i2l1858
 27044                           
 27045                           ; BSR set to: 4
 27046  00471E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27047  004722  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27048  004726  A4DF               	btfss	indf2,2,c
 27049  004728  D010               	goto	i2l1858
 27050                           
 27051                           ; BSR set to: 4
 27052                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 27053  00472A  0E01               	movlw	1
 27054  00472C  0104               	movlb	4	; () banked
 27055  00472E  6F38               	movwf	56,b	;volatile
 27056                           
 27057                           ; BSR set to: 4
 27058                           ;usb_device.c: 1819: }
 27059                           ;usb_device.c: 1820: }
 27060                           
 27061                           ; BSR set to: 4
 27062                           ;usb_device.c: 1818: break;
 27063  004730  D00C               	goto	i2l1858
 27064  004732                     i2l7640:
 27065                           
 27066                           ; BSR set to: 4
 27067  004732  0104               	movlb	4	; () banked
 27068  004734  5130               	movf	48,w,b	;volatile
 27069  004736  0B1F               	andlw	31
 27070                           
 27071                           ; Switch size 1, requested type "space"
 27072                           ; Number of cases is 3, Range of values is 0 to 2
 27073                           ; switch strategies available:
 27074                           ; Name         Instructions Cycles
 27075                           ; simple_byte           10     6 (average)
 27076                           ;	Chosen strategy is simple_byte
 27077  004738  0A00               	xorlw	0	; case 0
 27078  00473A  B4D8               	btfsc	status,2,c
 27079  00473C  D7BC               	goto	i2l1855
 27080  00473E  0A01               	xorlw	1	; case 1
 27081  004740  B4D8               	btfsc	status,2,c
 27082  004742  D7C5               	goto	i2l1859
 27083  004744  0A03               	xorlw	3	; case 2
 27084  004746  B4D8               	btfsc	status,2,c
 27085  004748  D7C4               	goto	i2l1860
 27086  00474A                     i2l1858:
 27087                           
 27088                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 27089  00474A  AE55               	btfss	_inPipes+3,7,c	;volatile
 27090  00474C  0012               	return	
 27091                           
 27092                           ;usb_device.c: 1823: {
 27093                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 27094  00474E  0E38               	movlw	56
 27095  004750  6E52               	movwf	_inPipes,c	;volatile
 27096  004752  0E04               	movlw	4
 27097  004754  6E53               	movwf	_inPipes+1,c	;volatile
 27098                           
 27099                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27100  004756  8055               	bsf	_inPipes+3,0,c	;volatile
 27101                           
 27102                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 27103  004758  0E02               	movlw	2
 27104  00475A  6E56               	movwf	_inPipes+4,c	;volatile
 27105  00475C  0012               	return	
 27106  00475E  0012               	return		;funcret
 27107  004760                     __end_of_USBStdGetStatusHandler:
 27108                           	opt stack 0
 27109                           pclatu	equ	0xFFB
 27110                           pclath	equ	0xFFA
 27111                           tblptru	equ	0xFF8
 27112                           tblptrh	equ	0xFF7
 27113                           tblptrl	equ	0xFF6
 27114                           tablat	equ	0xFF5
 27115                           prodh	equ	0xFF4
 27116                           prodl	equ	0xFF3
 27117                           intcon	equ	0xFF2
 27118                           intcon3	equ	0xFF0
 27119                           indf0	equ	0xFEF
 27120                           postinc0	equ	0xFEE
 27121                           fsr0h	equ	0xFEA
 27122                           fsr0l	equ	0xFE9
 27123                           wreg	equ	0xFE8
 27124                           indf1	equ	0xFE7
 27125                           postdec1	equ	0xFE5
 27126                           fsr1h	equ	0xFE2
 27127                           fsr1l	equ	0xFE1
 27128                           indf2	equ	0xFDF
 27129                           postinc2	equ	0xFDE
 27130                           postdec2	equ	0xFDD
 27131                           plusw2	equ	0xFDB
 27132                           fsr2h	equ	0xFDA
 27133                           fsr2l	equ	0xFD9
 27134                           status	equ	0xFD8
 27135                           
 27136 ;; *************** function _USBStdGetDscHandler *****************
 27137 ;; Defined at:
 27138 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 27139 ;; Parameters:    Size  Location     Type
 27140 ;;		None
 27141 ;; Auto vars:     Size  Location     Type
 27142 ;;		None
 27143 ;; Return value:  Size  Location     Type
 27144 ;;		None               void
 27145 ;; Registers used:
 27146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27147 ;; Tracked objects:
 27148 ;;		On entry : 0/0
 27149 ;;		On exit  : 0/0
 27150 ;;		Unchanged: 0/0
 27151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27152 ;;      Params:         0       0       0       0       0       0       0       0       0
 27153 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27154 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27155 ;;      Totals:         2       0       0       0       0       0       0       0       0
 27156 ;;Total ram usage:        2 bytes
 27157 ;; Hardware stack levels used:    1
 27158 ;; This function calls:
 27159 ;;		Nothing
 27160 ;; This function is called by:
 27161 ;;		_USBCheckStdRequest
 27162 ;; This function uses a non-reentrant model
 27163 ;;
 27164                           
 27165                           	psect	text119
 27166  00301C                     __ptext119:
 27167                           	opt stack 0
 27168  00301C                     _USBStdGetDscHandler:
 27169                           	opt stack 16
 27170                           
 27171                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 27172                           
 27173                           ;incstack = 0
 27174  00301C  0E80               	movlw	128
 27175  00301E  0104               	movlb	4	; () banked
 27176  003020  1930               	xorwf	48,w,b	;volatile
 27177  003022  A4D8               	btfss	status,2,c
 27178  003024  0012               	return	
 27179                           
 27180                           ; BSR set to: 4
 27181                           ;usb_device.c: 1707: {
 27182                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 27183  003026  0EC0               	movlw	192
 27184  003028  6E55               	movwf	_inPipes+3,c	;volatile
 27185                           
 27186                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 27187  00302A  D07C               	goto	i2l7618
 27188  00302C                     i2l7592:
 27189                           
 27190                           ; BSR set to: 4
 27191                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 27192  00302C  0EAC               	movlw	low _device_dsc
 27193  00302E  6E52               	movwf	_inPipes,c	;volatile
 27194  003030  0E79               	movlw	high _device_dsc
 27195  003032  6E53               	movwf	_inPipes+1,c	;volatile
 27196                           
 27197                           ; BSR set to: 4
 27198                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 27199  003034  0E00               	movlw	0
 27200  003036  6E57               	movwf	_inPipes+5,c	;volatile
 27201  003038  0E12               	movlw	18
 27202  00303A  6E56               	movwf	_inPipes+4,c	;volatile
 27203                           
 27204                           ;usb_device.c: 1715: break;
 27205  00303C  0012               	return	
 27206  00303E                     i2l7596:
 27207                           
 27208                           ; BSR set to: 4
 27209                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 27210  00303E  0104               	movlb	4	; () banked
 27211  003040  5132               	movf	50,w,b	;volatile
 27212  003042  A4D8               	btfss	status,2,c
 27213  003044  D03E               	goto	i2l7604
 27214                           
 27215                           ; BSR set to: 4
 27216                           ;usb_device.c: 1721: {
 27217                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 27218  003046  0104               	movlb	4	; () banked
 27219  003048  5132               	movf	50,w,b	;volatile
 27220  00304A  0D02               	mullw	2
 27221  00304C  0EFF               	movlw	low _USB_CD_Ptr
 27222  00304E  24F3               	addwf	prodl,w,c
 27223  003050  6EF6               	movwf	tblptrl,c
 27224  003052  0E75               	movlw	high _USB_CD_Ptr
 27225  003054  20F4               	addwfc	prodh,w,c
 27226  003056  6EF7               	movwf	tblptrh,c
 27227  003058                     	if	0	;There are less than 3 active tblptr bytes
 27228  003058                     	endif
 27229  003058  0009               	tblrd		*+
 27230  00305A  CFF5 F052          	movff	tablat,_inPipes	;volatile
 27231  00305E  000A               	tblrd		*-
 27232  003060  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 27233                           
 27234                           ; BSR set to: 4
 27235                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 27236  003064  0E02               	movlw	2
 27237  003066  2452               	addwf	_inPipes,w,c	;volatile
 27238  003068  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27239  00306A  0E00               	movlw	0
 27240  00306C  2053               	addwfc	_inPipes+1,w,c	;volatile
 27241  00306E  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27242  003070  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27243  003074  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27244  003078  6AF8               	clrf	tblptru,c
 27245  00307A  0E07               	movlw	(high __ramtop+-1)
 27246  00307C  64F7               	cpfsgt	tblptrh,c
 27247  00307E  D003               	bra	i2u534_47
 27248  003080  0008               	tblrd		*
 27249  003082  50F5               	movf	tablat,w,c
 27250  003084  D005               	bra	i2u534_40
 27251  003086                     i2u534_47:
 27252  003086  CFF6 FFE9          	movff	tblptrl,fsr0l
 27253  00308A  CFF7 FFEA          	movff	tblptrh,fsr0h
 27254  00308E  50EF               	movf	indf0,w,c
 27255  003090                     i2u534_40:
 27256  003090  6E56               	movwf	_inPipes+4,c	;volatile
 27257                           
 27258                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 27259  003092  0E03               	movlw	3
 27260  003094  2452               	addwf	_inPipes,w,c	;volatile
 27261  003096  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27262  003098  0E00               	movlw	0
 27263  00309A  2053               	addwfc	_inPipes+1,w,c	;volatile
 27264  00309C  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27265  00309E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27266  0030A2  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27267  0030A6  6AF8               	clrf	tblptru,c
 27268  0030A8  0E07               	movlw	(high __ramtop+-1)
 27269  0030AA  64F7               	cpfsgt	tblptrh,c
 27270  0030AC  D003               	bra	i2u535_47
 27271  0030AE  0008               	tblrd		*
 27272  0030B0  50F5               	movf	tablat,w,c
 27273  0030B2  D005               	bra	i2u535_40
 27274  0030B4                     i2u535_47:
 27275  0030B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 27276  0030B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 27277  0030BC  50EF               	movf	indf0,w,c
 27278  0030BE                     i2u535_40:
 27279  0030BE  6E57               	movwf	_inPipes+5,c	;volatile
 27280                           
 27281                           ;usb_device.c: 1729: }
 27282  0030C0  0012               	return	
 27283  0030C2                     i2l7604:
 27284                           
 27285                           ;usb_device.c: 1730: else
 27286                           ;usb_device.c: 1731: {
 27287                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 27288  0030C2  0E00               	movlw	0
 27289  0030C4  6E55               	movwf	_inPipes+3,c	;volatile
 27290                           
 27291                           ;usb_device.c: 1733: }
 27292                           ;usb_device.c: 1734: break;
 27293  0030C6  0012               	return	
 27294  0030C8                     i2l7606:
 27295                           
 27296                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 27297  0030C8  0E03               	movlw	3
 27298  0030CA  0104               	movlb	4	; () banked
 27299  0030CC  6132               	cpfslt	50,b	;volatile
 27300  0030CE  D024               	goto	i2l7612
 27301                           
 27302                           ; BSR set to: 4
 27303                           ;usb_device.c: 1740: {
 27304                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 27305  0030D0  0104               	movlb	4	; () banked
 27306  0030D2  5132               	movf	50,w,b	;volatile
 27307  0030D4  0D02               	mullw	2
 27308  0030D6  0EF9               	movlw	low _USB_SD_Ptr
 27309  0030D8  24F3               	addwf	prodl,w,c
 27310  0030DA  6EF6               	movwf	tblptrl,c
 27311  0030DC  0E75               	movlw	high _USB_SD_Ptr
 27312  0030DE  20F4               	addwfc	prodh,w,c
 27313  0030E0  6EF7               	movwf	tblptrh,c
 27314  0030E2                     	if	0	;There are less than 3 active tblptr bytes
 27315  0030E2                     	endif
 27316  0030E2  0009               	tblrd		*+
 27317  0030E4  CFF5 F052          	movff	tablat,_inPipes	;volatile
 27318  0030E8  000A               	tblrd		*-
 27319  0030EA  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 27320                           
 27321                           ; BSR set to: 4
 27322                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 27323  0030EE  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 27324  0030F2  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 27325  0030F6  6AF8               	clrf	tblptru,c
 27326  0030F8  0E07               	movlw	(high __ramtop+-1)
 27327  0030FA  64F7               	cpfsgt	tblptrh,c
 27328  0030FC  D003               	bra	i2u537_47
 27329  0030FE  0008               	tblrd		*
 27330  003100  50F5               	movf	tablat,w,c
 27331  003102  D005               	bra	i2u537_40
 27332  003104                     i2u537_47:
 27333  003104  CFF6 FFE9          	movff	tblptrl,fsr0l
 27334  003108  CFF7 FFEA          	movff	tblptrh,fsr0h
 27335  00310C  50EF               	movf	indf0,w,c
 27336  00310E                     i2u537_40:
 27337  00310E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27338  003110  5001               	movf	??_USBStdGetDscHandler,w,c
 27339  003112  6E56               	movwf	_inPipes+4,c	;volatile
 27340  003114  6A57               	clrf	_inPipes+5,c	;volatile
 27341                           
 27342                           ;usb_device.c: 1745: }
 27343  003116  0012               	return	
 27344  003118                     i2l7612:
 27345                           
 27346                           ;usb_device.c: 1746: else
 27347                           ;usb_device.c: 1747: {
 27348                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 27349  003118  0E00               	movlw	0
 27350  00311A  6E55               	movwf	_inPipes+3,c	;volatile
 27351                           
 27352                           ;usb_device.c: 1749: }
 27353                           ;usb_device.c: 1750: break;
 27354  00311C  0012               	return	
 27355  00311E                     i2l7614:
 27356                           
 27357                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 27358  00311E  0E00               	movlw	0
 27359  003120  6E55               	movwf	_inPipes+3,c	;volatile
 27360                           
 27361                           ;usb_device.c: 1754: }
 27362                           
 27363                           ;usb_device.c: 1753: break;
 27364  003122  0012               	return	
 27365  003124                     i2l7618:
 27366  003124  0104               	movlb	4	; () banked
 27367  003126  5133               	movf	51,w,b	;volatile
 27368                           
 27369                           ; Switch size 1, requested type "space"
 27370                           ; Number of cases is 3, Range of values is 1 to 3
 27371                           ; switch strategies available:
 27372                           ; Name         Instructions Cycles
 27373                           ; simple_byte           10     6 (average)
 27374                           ;	Chosen strategy is simple_byte
 27375  003128  0A01               	xorlw	1	; case 1
 27376  00312A  B4D8               	btfsc	status,2,c
 27377  00312C  D77F               	goto	i2l7592
 27378  00312E  0A03               	xorlw	3	; case 2
 27379  003130  B4D8               	btfsc	status,2,c
 27380  003132  D785               	goto	i2l7596
 27381  003134  0A01               	xorlw	1	; case 3
 27382  003136  B4D8               	btfsc	status,2,c
 27383  003138  D7C7               	goto	i2l7606
 27384  00313A  D7F1               	goto	i2l7614
 27385                           
 27386                           ; BSR set to: 4
 27387  00313C  0012               	return	
 27388                           
 27389                           ; BSR set to: 4
 27390  00313E  0012               	return		;funcret
 27391  003140                     __end_of_USBStdGetDscHandler:
 27392                           	opt stack 0
 27393                           pclatu	equ	0xFFB
 27394                           pclath	equ	0xFFA
 27395                           tblptru	equ	0xFF8
 27396                           tblptrh	equ	0xFF7
 27397                           tblptrl	equ	0xFF6
 27398                           tablat	equ	0xFF5
 27399                           prodh	equ	0xFF4
 27400                           prodl	equ	0xFF3
 27401                           intcon	equ	0xFF2
 27402                           intcon3	equ	0xFF0
 27403                           indf0	equ	0xFEF
 27404                           postinc0	equ	0xFEE
 27405                           fsr0h	equ	0xFEA
 27406                           fsr0l	equ	0xFE9
 27407                           wreg	equ	0xFE8
 27408                           indf1	equ	0xFE7
 27409                           postdec1	equ	0xFE5
 27410                           fsr1h	equ	0xFE2
 27411                           fsr1l	equ	0xFE1
 27412                           indf2	equ	0xFDF
 27413                           postinc2	equ	0xFDE
 27414                           postdec2	equ	0xFDD
 27415                           plusw2	equ	0xFDB
 27416                           fsr2h	equ	0xFDA
 27417                           fsr2l	equ	0xFD9
 27418                           status	equ	0xFD8
 27419                           
 27420 ;; *************** function _USBStdFeatureReqHandler *****************
 27421 ;; Defined at:
 27422 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 27423 ;; Parameters:    Size  Location     Type
 27424 ;;		None
 27425 ;; Auto vars:     Size  Location     Type
 27426 ;;  p               2   25[COMRAM] PTR struct __BDT
 27427 ;;		 -> BDT(48), NULL(0), 
 27428 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 27429 ;;		 -> UEP0(1), 
 27430 ;;  current_ep_d    1   24[COMRAM] struct .
 27431 ;; Return value:  Size  Location     Type
 27432 ;;		None               void
 27433 ;; Registers used:
 27434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27435 ;; Tracked objects:
 27436 ;;		On entry : 0/0
 27437 ;;		On exit  : 0/0
 27438 ;;		Unchanged: 0/0
 27439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27440 ;;      Params:         0       0       0       0       0       0       0       0       0
 27441 ;;      Locals:         5       0       0       0       0       0       0       0       0
 27442 ;;      Temps:          1       0       0       0       0       0       0       0       0
 27443 ;;      Totals:         6       0       0       0       0       0       0       0       0
 27444 ;;Total ram usage:        6 bytes
 27445 ;; Hardware stack levels used:    1
 27446 ;; Hardware stack levels required when called:    5
 27447 ;; This function calls:
 27448 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27449 ;; This function is called by:
 27450 ;;		_USBCheckStdRequest
 27451 ;; This function uses a non-reentrant model
 27452 ;;
 27453                           
 27454                           	psect	text120
 27455  0019DA                     __ptext120:
 27456                           	opt stack 0
 27457  0019DA                     _USBStdFeatureReqHandler:
 27458                           	opt stack 11
 27459                           
 27460                           ;usb_device.c: 2387: BDT_ENTRY *p;
 27461                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 27462                           ;usb_device.c: 2390: unsigned char* pUEP;
 27463                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 27464                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 27465                           
 27466                           ;incstack = 0
 27467  0019DA  0104               	movlb	4	; () banked
 27468  0019DC  0532               	decf	50,w,b	;volatile
 27469  0019DE  A4D8               	btfss	status,2,c
 27470  0019E0  D012               	goto	i2l1934
 27471                           
 27472                           ; BSR set to: 4
 27473  0019E2  0104               	movlb	4	; () banked
 27474  0019E4  5130               	movf	48,w,b	;volatile
 27475  0019E6  0B1F               	andlw	31
 27476  0019E8  0900               	iorlw	0
 27477  0019EA  A4D8               	btfss	status,2,c
 27478  0019EC  D00C               	goto	i2l1934
 27479                           
 27480                           ; BSR set to: 4
 27481                           ;usb_device.c: 2395: {
 27482                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 27483  0019EE  8E55               	bsf	_inPipes+3,7,c	;volatile
 27484                           
 27485                           ; BSR set to: 4
 27486                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 27487  0019F0  0E03               	movlw	3
 27488  0019F2  0104               	movlb	4	; () banked
 27489  0019F4  1931               	xorwf	49,w,b	;volatile
 27490  0019F6  A4D8               	btfss	status,2,c
 27491  0019F8  D002               	goto	i2l7658
 27492                           
 27493                           ; BSR set to: 4
 27494                           ;usb_device.c: 2398: RemoteWakeup = 1;
 27495  0019FA  0E01               	movlw	1
 27496  0019FC  D001               	goto	L17
 27497  0019FE                     i2l7658:
 27498                           
 27499                           ;usb_device.c: 2399: else
 27500                           ;usb_device.c: 2400: RemoteWakeup = 0;
 27501  0019FE  0E00               	movlw	0
 27502  001A00                     L17:
 27503  001A00  0100               	movlb	0	; () banked
 27504  001A02  6F85               	movwf	_RemoteWakeup& (0+255),b	;volatile
 27505  001A04  D000               	goto	i2l1934
 27506  001A06                     i2l1934:
 27507                           
 27508                           ;usb_device.c: 2401: }
 27509                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 27510                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 27511                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 27512                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 27513  001A06  0104               	movlb	4	; () banked
 27514  001A08  5132               	movf	50,w,b	;volatile
 27515  001A0A  A4D8               	btfss	status,2,c
 27516  001A0C  0012               	return	
 27517                           
 27518                           ; BSR set to: 4
 27519  001A0E  0104               	movlb	4	; () banked
 27520  001A10  5130               	movf	48,w,b	;volatile
 27521  001A12  0B1F               	andlw	31
 27522  001A14  0A02               	xorlw	2
 27523  001A16  A4D8               	btfss	status,2,c
 27524  001A18  0012               	return	
 27525                           
 27526                           ; BSR set to: 4
 27527  001A1A  0104               	movlb	4	; () banked
 27528  001A1C  5134               	movf	52,w,b	;volatile
 27529  001A1E  0B0F               	andlw	15
 27530  001A20  0900               	iorlw	0
 27531  001A22  B4D8               	btfsc	status,2,c
 27532  001A24  0012               	return	
 27533                           
 27534                           ; BSR set to: 4
 27535  001A26  0104               	movlb	4	; () banked
 27536  001A28  5134               	movf	52,w,b	;volatile
 27537  001A2A  0B0F               	andlw	15
 27538  001A2C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27539  001A2E  0E03               	movlw	3
 27540  001A30  6016               	cpfslt	??_USBStdFeatureReqHandler,c
 27541  001A32  0012               	return	
 27542                           
 27543                           ; BSR set to: 4
 27544  001A34  0E20               	movlw	32
 27545  001A36  0100               	movlb	0	; () banked
 27546  001A38  1989               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 27547  001A3A  A4D8               	btfss	status,2,c
 27548  001A3C  0012               	return	
 27549                           
 27550                           ; BSR set to: 0
 27551                           ;usb_device.c: 2408: {
 27552                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 27553  001A3E  8E55               	bsf	_inPipes+3,7,c	;volatile
 27554                           
 27555                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 27556  001A40  0104               	movlb	4	; () banked
 27557  001A42  BF34               	btfsc	52,7,b	;volatile
 27558  001A44  D01B               	goto	i2l7672
 27559                           
 27560                           ; BSR set to: 4
 27561                           ;usb_device.c: 2415: {
 27562                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27563  001A46  0104               	movlb	4	; () banked
 27564  001A48  5134               	movf	52,w,b	;volatile
 27565  001A4A  0B0F               	andlw	15
 27566  001A4C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27567  001A4E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27568  001A50  0D02               	mullw	2
 27569  001A52  0E60               	movlw	low _pBDTEntryOut
 27570  001A54  24F3               	addwf	prodl,w,c
 27571  001A56  6ED9               	movwf	fsr2l,c
 27572  001A58  0E00               	movlw	high _pBDTEntryOut
 27573  001A5A  20F4               	addwfc	prodh,w,c
 27574  001A5C  6EDA               	movwf	fsr2h,c
 27575  001A5E  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27576  001A62  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27577                           
 27578                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 27579  001A66  0104               	movlb	4	; () banked
 27580  001A68  5134               	movf	52,w,b	;volatile
 27581  001A6A  0B0F               	andlw	15
 27582  001A6C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27583  001A6E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27584  001A70  0D01               	mullw	1
 27585  001A72  0E69               	movlw	low _ep_data_out
 27586  001A74  24F3               	addwf	prodl,w,c
 27587  001A76  6ED9               	movwf	fsr2l,c
 27588  001A78  0E00               	movlw	high _ep_data_out
 27589  001A7A  D01A               	goto	L18
 27590  001A7C                     i2l7672:
 27591                           
 27592                           ; BSR set to: 4
 27593                           ;usb_device.c: 2419: else
 27594                           ;usb_device.c: 2420: {
 27595                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27596  001A7C  0104               	movlb	4	; () banked
 27597  001A7E  5134               	movf	52,w,b	;volatile
 27598  001A80  0B0F               	andlw	15
 27599  001A82  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27600  001A84  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27601  001A86  0D02               	mullw	2
 27602  001A88  0E36               	movlw	low _pBDTEntryIn
 27603  001A8A  24F3               	addwf	prodl,w,c
 27604  001A8C  6ED9               	movwf	fsr2l,c
 27605  001A8E  0E00               	movlw	high _pBDTEntryIn
 27606  001A90  20F4               	addwfc	prodh,w,c
 27607  001A92  6EDA               	movwf	fsr2h,c
 27608  001A94  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27609  001A98  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27610                           
 27611                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27612  001A9C  0104               	movlb	4	; () banked
 27613  001A9E  5134               	movf	52,w,b	;volatile
 27614  001AA0  0B0F               	andlw	15
 27615  001AA2  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27616  001AA4  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27617  001AA6  0D01               	mullw	1
 27618  001AA8  0E66               	movlw	low _ep_data_in
 27619  001AAA  24F3               	addwf	prodl,w,c
 27620  001AAC  6ED9               	movwf	fsr2l,c
 27621  001AAE  0E00               	movlw	high _ep_data_in
 27622  001AB0                     L18:
 27623  001AB0  20F4               	addwfc	prodh,w,c
 27624  001AB2  6EDA               	movwf	fsr2h,c
 27625  001AB4  50DF               	movf	indf2,w,c
 27626  001AB6  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27627  001AB8  D000               	goto	i2l7674
 27628  001ABA                     i2l7674:
 27629                           
 27630                           ; BSR set to: 4
 27631                           ;usb_device.c: 2423: }
 27632                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 27633  001ABA  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27634  001ABC  D002               	goto	i2l7678
 27635                           
 27636                           ; BSR set to: 4
 27637                           ;usb_device.c: 2429: {
 27638                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27639  001ABE  941A               	bcf	USBStdFeatureReqHandler@p,2,c
 27640                           
 27641                           ;usb_device.c: 2431: }
 27642  001AC0  D002               	goto	i2l7680
 27643  001AC2                     i2l7678:
 27644                           
 27645                           ; BSR set to: 4
 27646                           ;usb_device.c: 2432: else
 27647                           ;usb_device.c: 2433: {
 27648                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27649  001AC2  841A               	bsf	USBStdFeatureReqHandler@p,2,c
 27650  001AC4  D000               	goto	i2l7680
 27651  001AC6                     i2l7680:
 27652                           
 27653                           ; BSR set to: 4
 27654                           ;usb_device.c: 2435: }
 27655                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 27656  001AC6  0104               	movlb	4	; () banked
 27657  001AC8  BF34               	btfsc	52,7,b	;volatile
 27658  001ACA  D00B               	goto	i2l7684
 27659                           
 27660                           ; BSR set to: 4
 27661                           ;usb_device.c: 2440: {
 27662                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27663  001ACC  0104               	movlb	4	; () banked
 27664  001ACE  5134               	movf	52,w,b	;volatile
 27665  001AD0  0B0F               	andlw	15
 27666  001AD2  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27667  001AD4  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27668  001AD6  0D02               	mullw	2
 27669  001AD8  0E60               	movlw	low _pBDTEntryOut
 27670  001ADA  24F3               	addwf	prodl,w,c
 27671  001ADC  6ED9               	movwf	fsr2l,c
 27672  001ADE  0E00               	movlw	high _pBDTEntryOut
 27673  001AE0  D00A               	goto	L19
 27674  001AE2                     i2l7684:
 27675                           
 27676                           ; BSR set to: 4
 27677                           ;usb_device.c: 2443: else
 27678                           ;usb_device.c: 2444: {
 27679                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27680  001AE2  0104               	movlb	4	; () banked
 27681  001AE4  5134               	movf	52,w,b	;volatile
 27682  001AE6  0B0F               	andlw	15
 27683  001AE8  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27684  001AEA  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27685  001AEC  0D02               	mullw	2
 27686  001AEE  0E36               	movlw	low _pBDTEntryIn
 27687  001AF0  24F3               	addwf	prodl,w,c
 27688  001AF2  6ED9               	movwf	fsr2l,c
 27689  001AF4  0E00               	movlw	high _pBDTEntryIn
 27690  001AF6                     L19:
 27691  001AF6  20F4               	addwfc	prodh,w,c
 27692  001AF8  6EDA               	movwf	fsr2h,c
 27693  001AFA  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27694  001AFE  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27695  001B02  D000               	goto	i2l7686
 27696  001B04                     i2l7686:
 27697                           
 27698                           ; BSR set to: 4
 27699                           ;usb_device.c: 2446: }
 27700                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 27701  001B04  0E03               	movlw	3
 27702  001B06  0104               	movlb	4	; () banked
 27703  001B08  1931               	xorwf	49,w,b	;volatile
 27704  001B0A  A4D8               	btfss	status,2,c
 27705  001B0C  D030               	goto	i2l7700
 27706                           
 27707                           ; BSR set to: 4
 27708                           ;usb_device.c: 2450: {
 27709                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 27710  001B0E  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27711  001B12  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27712  001B16  AEDF               	btfss	indf2,7,c
 27713  001B18  D01D               	goto	i2l7696
 27714                           
 27715                           ; BSR set to: 4
 27716                           ;usb_device.c: 2452: {
 27717                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 27718  001B1A  0104               	movlb	4	; () banked
 27719  001B1C  BF34               	btfsc	52,7,b	;volatile
 27720  001B1E  D00B               	goto	i2l7694
 27721                           
 27722                           ; BSR set to: 4
 27723                           ;usb_device.c: 2456: {
 27724                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27725  001B20  0104               	movlb	4	; () banked
 27726  001B22  5134               	movf	52,w,b	;volatile
 27727  001B24  0B0F               	andlw	15
 27728  001B26  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27729  001B28  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27730  001B2A  0D01               	mullw	1
 27731  001B2C  0E69               	movlw	low _ep_data_out
 27732  001B2E  24F3               	addwf	prodl,w,c
 27733  001B30  6ED9               	movwf	fsr2l,c
 27734  001B32  0E00               	movlw	high _ep_data_out
 27735  001B34  D00A               	goto	L20
 27736  001B36                     i2l7694:
 27737                           
 27738                           ;usb_device.c: 2459: else
 27739                           ;usb_device.c: 2460: {
 27740                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27741  001B36  0104               	movlb	4	; () banked
 27742  001B38  5134               	movf	52,w,b	;volatile
 27743  001B3A  0B0F               	andlw	15
 27744  001B3C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27745  001B3E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27746  001B40  0D01               	mullw	1
 27747  001B42  0E66               	movlw	low _ep_data_in
 27748  001B44  24F3               	addwf	prodl,w,c
 27749  001B46  6ED9               	movwf	fsr2l,c
 27750  001B48  0E00               	movlw	high _ep_data_in
 27751  001B4A                     L20:
 27752  001B4A  20F4               	addwfc	prodh,w,c
 27753  001B4C  6EDA               	movwf	fsr2h,c
 27754  001B4E  0100               	movlb	0	; () banked
 27755  001B50  82DF               	bsf	indf2,1,c
 27756                           
 27757                           ; BSR set to: 0
 27758  001B52  D000               	goto	i2l7696
 27759  001B54                     i2l7696:
 27760                           
 27761                           ;usb_device.c: 2462: }
 27762                           ;usb_device.c: 2463: }
 27763                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 27764  001B54  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27765  001B58  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27766  001B5C  0E00               	movlw	0
 27767  001B5E  84DB               	bsf	plusw2,2,c
 27768                           
 27769                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 27770  001B60  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27771  001B64  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27772  001B68  0E00               	movlw	0
 27773  001B6A  8EDB               	bsf	plusw2,7,c
 27774                           
 27775                           ;usb_device.c: 2468: }
 27776  001B6C  0012               	return	
 27777  001B6E                     i2l7700:
 27778                           
 27779                           ;usb_device.c: 2469: else
 27780                           ;usb_device.c: 2470: {
 27781                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27782  001B6E  0E04               	movlw	4
 27783  001B70  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 27784                           
 27785                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 27786  001B72  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27787  001B76  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27788  001B7A  AEDF               	btfss	indf2,7,c
 27789  001B7C  D01B               	goto	i2l7710
 27790                           
 27791                           ;usb_device.c: 2476: {
 27792                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 27793  001B7E  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27794  001B82  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27795  001B86  0E7F               	movlw	127
 27796  001B88  16DF               	andwf	indf2,f,c
 27797                           
 27798                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 27799  001B8A  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27800  001B8E  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27801  001B92  0E00               	movlw	0
 27802  001B94  8CDB               	bsf	plusw2,6,c
 27803                           
 27804                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27805  001B96  0E00               	movlw	0
 27806  001B98  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27807  001B9A  0E05               	movlw	5
 27808  001B9C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27809  001B9E  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27810  001BA2  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27811  001BA6  0E00               	movlw	0
 27812  001BA8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27813  001BAA  0E02               	movlw	2
 27814  001BAC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27815  001BAE  ECB7  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27816                           
 27817                           ;usb_device.c: 2482: }
 27818  001BB2  D007               	goto	i2l7712
 27819  001BB4                     i2l7710:
 27820                           
 27821                           ;usb_device.c: 2483: else
 27822                           ;usb_device.c: 2484: {
 27823                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 27824  001BB4  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27825  001BB8  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27826  001BBC  0E00               	movlw	0
 27827  001BBE  8CDB               	bsf	plusw2,6,c
 27828  001BC0  D000               	goto	i2l7712
 27829  001BC2                     i2l7712:
 27830                           
 27831                           ;usb_device.c: 2487: }
 27832                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27833  001BC2  0E04               	movlw	4
 27834  001BC4  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 27835                           
 27836                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27837  001BC6  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27838  001BC8  D006               	goto	i2l1953
 27839  001BCA  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27840  001BCE  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27841  001BD2  AEDF               	btfss	indf2,7,c
 27842  001BD4  D032               	goto	i2l7726
 27843  001BD6                     i2l1953:
 27844                           
 27845                           ;usb_device.c: 2498: {
 27846                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 27847  001BD6  0104               	movlb	4	; () banked
 27848  001BD8  BF34               	btfsc	52,7,b	;volatile
 27849  001BDA  D00B               	goto	i2l7720
 27850                           
 27851                           ; BSR set to: 4
 27852                           ;usb_device.c: 2500: {
 27853                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27854  001BDC  0104               	movlb	4	; () banked
 27855  001BDE  5134               	movf	52,w,b	;volatile
 27856  001BE0  0B0F               	andlw	15
 27857  001BE2  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27858  001BE4  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27859  001BE6  0D01               	mullw	1
 27860  001BE8  0E69               	movlw	low _ep_data_out
 27861  001BEA  24F3               	addwf	prodl,w,c
 27862  001BEC  6ED9               	movwf	fsr2l,c
 27863  001BEE  0E00               	movlw	high _ep_data_out
 27864  001BF0  D00A               	goto	L21
 27865  001BF2                     i2l7720:
 27866                           
 27867                           ;usb_device.c: 2503: else
 27868                           ;usb_device.c: 2504: {
 27869                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27870  001BF2  0104               	movlb	4	; () banked
 27871  001BF4  5134               	movf	52,w,b	;volatile
 27872  001BF6  0B0F               	andlw	15
 27873  001BF8  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27874  001BFA  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27875  001BFC  0D01               	mullw	1
 27876  001BFE  0E66               	movlw	low _ep_data_in
 27877  001C00  24F3               	addwf	prodl,w,c
 27878  001C02  6ED9               	movwf	fsr2l,c
 27879  001C04  0E00               	movlw	high _ep_data_in
 27880  001C06                     L21:
 27881  001C06  20F4               	addwfc	prodh,w,c
 27882  001C08  6EDA               	movwf	fsr2h,c
 27883  001C0A  0100               	movlb	0	; () banked
 27884  001C0C  92DF               	bcf	indf2,1,c
 27885  001C0E  D000               	goto	i2l7722
 27886  001C10                     i2l7722:
 27887                           
 27888                           ; BSR set to: 0
 27889                           ;usb_device.c: 2506: }
 27890                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27891  001C10  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27892  001C14  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27893  001C18  0E3B               	movlw	59
 27894  001C1A  16DF               	andwf	indf2,f,c
 27895                           
 27896                           ; BSR set to: 0
 27897                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27898  001C1C  0E00               	movlw	0
 27899  001C1E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27900  001C20  0E05               	movlw	5
 27901  001C22  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27902  001C24  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27903  001C28  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27904  001C2C  0E00               	movlw	0
 27905  001C2E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27906  001C30  0E02               	movlw	2
 27907  001C32  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27908  001C34  ECB7  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27909                           
 27910                           ;usb_device.c: 2512: }
 27911  001C38  D007               	goto	i2l7728
 27912  001C3A                     i2l7726:
 27913                           
 27914                           ;usb_device.c: 2513: else
 27915                           ;usb_device.c: 2514: {
 27916                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27917  001C3A  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27918  001C3E  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27919  001C42  0E3B               	movlw	59
 27920  001C44  16DF               	andwf	indf2,f,c
 27921  001C46  D000               	goto	i2l7728
 27922  001C48                     i2l7728:
 27923                           
 27924                           ;usb_device.c: 2517: }
 27925                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 27926  001C48  0104               	movlb	4	; () banked
 27927  001C4A  5134               	movf	52,w,b	;volatile
 27928  001C4C  0B0F               	andlw	15
 27929  001C4E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27930  001C50  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27931  001C52  0D01               	mullw	1
 27932  001C54  0E6A               	movlw	106
 27933  001C56  24F3               	addwf	prodl,w,c
 27934  001C58  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
 27935  001C5A  0E0F               	movlw	15
 27936  001C5C  20F4               	addwfc	prodh,w,c
 27937  001C5E  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 27938                           
 27939                           ; BSR set to: 4
 27940                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 27941  001C60  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27942  001C64  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27943  001C68  0EFE               	movlw	254
 27944  001C6A  16DF               	andwf	indf2,f,c
 27945                           
 27946                           ; BSR set to: 4
 27947  001C6C  0012               	return	
 27948                           
 27949                           ; BSR set to: 4
 27950  001C6E  0012               	return		;funcret
 27951  001C70                     __end_of_USBStdFeatureReqHandler:
 27952                           	opt stack 0
 27953                           pclatu	equ	0xFFB
 27954                           pclath	equ	0xFFA
 27955                           tblptru	equ	0xFF8
 27956                           tblptrh	equ	0xFF7
 27957                           tblptrl	equ	0xFF6
 27958                           tablat	equ	0xFF5
 27959                           prodh	equ	0xFF4
 27960                           prodl	equ	0xFF3
 27961                           intcon	equ	0xFF2
 27962                           intcon3	equ	0xFF0
 27963                           indf0	equ	0xFEF
 27964                           postinc0	equ	0xFEE
 27965                           fsr0h	equ	0xFEA
 27966                           fsr0l	equ	0xFE9
 27967                           wreg	equ	0xFE8
 27968                           indf1	equ	0xFE7
 27969                           postdec1	equ	0xFE5
 27970                           fsr1h	equ	0xFE2
 27971                           fsr1l	equ	0xFE1
 27972                           indf2	equ	0xFDF
 27973                           postinc2	equ	0xFDE
 27974                           postdec2	equ	0xFDD
 27975                           plusw2	equ	0xFDB
 27976                           fsr2h	equ	0xFDA
 27977                           fsr2l	equ	0xFD9
 27978                           status	equ	0xFD8
 27979                           
 27980 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27981 ;; Defined at:
 27982 ;;		line 308 in file "../Includes/Board/USBapp.c"
 27983 ;; Parameters:    Size  Location     Type
 27984 ;;  event           2   13[COMRAM] enum E7731
 27985 ;;  pdata           2   15[COMRAM] PTR void 
 27986 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 27987 ;;  size            2   17[COMRAM] unsigned int 
 27988 ;; Auto vars:     Size  Location     Type
 27989 ;;		None
 27990 ;; Return value:  Size  Location     Type
 27991 ;;                  1    wreg      unsigned char 
 27992 ;; Registers used:
 27993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27994 ;; Tracked objects:
 27995 ;;		On entry : 0/0
 27996 ;;		On exit  : 0/0
 27997 ;;		Unchanged: 0/0
 27998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27999 ;;      Params:         6       0       0       0       0       0       0       0       0
 28000 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28001 ;;      Temps:          2       0       0       0       0       0       0       0       0
 28002 ;;      Totals:         8       0       0       0       0       0       0       0       0
 28003 ;;Total ram usage:        8 bytes
 28004 ;; Hardware stack levels used:    1
 28005 ;; Hardware stack levels required when called:    4
 28006 ;; This function calls:
 28007 ;;		_USBCheckCDCRequest
 28008 ;;		_USBapp_CdcEmulatorInitialize
 28009 ;; This function is called by:
 28010 ;;		_USBDeviceTasks
 28011 ;;		_USBStdSetCfgHandler
 28012 ;;		_USBSuspend
 28013 ;;		_USBWakeFromSuspend
 28014 ;;		_USBCtrlTrfSetupHandler
 28015 ;;		_USBCheckStdRequest
 28016 ;;		_USBStdFeatureReqHandler
 28017 ;; This function uses a non-reentrant model
 28018 ;;
 28019                           
 28020                           	psect	text121
 28021  00556E                     __ptext121:
 28022                           	opt stack 0
 28023  00556E                     _USER_USB_CALLBACK_EVENT_HANDLER:
 28024                           	opt stack 15
 28025                           
 28026                           ;USBapp.c: 310: switch( (int) event )
 28027                           
 28028                           ;incstack = 0
 28029  00556E  D007               	goto	i2l7270
 28030                           
 28031                           ;USBapp.c: 329: break;
 28032                           
 28033                           ;USBapp.c: 326: case EVENT_RESUME:
 28034                           
 28035                           ;USBapp.c: 324: break;
 28036                           
 28037                           ;USBapp.c: 321: case EVENT_SUSPEND:
 28038                           
 28039                           ;USBapp.c: 319: break;
 28040                           
 28041                           ;USBapp.c: 315: case EVENT_SOF:
 28042                           
 28043                           ;USBapp.c: 313: break;
 28044                           
 28045                           ;USBapp.c: 311: {
 28046                           ;USBapp.c: 312: case EVENT_TRANSFER:
 28047  005570  0012               	return	
 28048  005572                     i2l7264:
 28049                           
 28050                           ;USBapp.c: 334: USBapp_CdcEmulatorInitialize();
 28051  005572  EC15  F02B         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 28052                           
 28053                           ;USBapp.c: 338: break;
 28054                           
 28055                           ;USBapp.c: 337: case EVENT_SET_DESCRIPTOR:
 28056                           
 28057                           ;USBapp.c: 335: break;
 28058  005576  0012               	return	
 28059  005578                     i2l7266:
 28060                           
 28061                           ;USBapp.c: 343: USBCheckCDCRequest();
 28062  005578  ECF7  F022         	call	_USBCheckCDCRequest	;wreg free
 28063                           
 28064                           ;USBapp.c: 354: }
 28065                           
 28066                           ;USBapp.c: 353: break;
 28067                           
 28068                           ;USBapp.c: 352: default:
 28069                           
 28070                           ;USBapp.c: 350: break;
 28071                           
 28072                           ;USBapp.c: 349: case EVENT_TRANSFER_TERMINATED:
 28073                           
 28074                           ;USBapp.c: 347: break;
 28075                           
 28076                           ;USBapp.c: 346: case EVENT_BUS_ERROR:
 28077                           
 28078                           ;USBapp.c: 344: break;
 28079  00557C  0012               	return	
 28080  00557E                     i2l7270:
 28081  00557E  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 28082  005582  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 28083                           
 28084                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 28085                           ; Switch size 1, requested type "space"
 28086                           ; Number of cases is 2, Range of values is 0 to 127
 28087                           ; switch strategies available:
 28088                           ; Name         Instructions Cycles
 28089                           ; simple_byte            7     4 (average)
 28090                           ;	Chosen strategy is simple_byte
 28091  005586  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 28092  005588  0A00               	xorlw	0	; case 0
 28093  00558A  B4D8               	btfsc	status,2,c
 28094  00558C  D004               	goto	i2l13826
 28095  00558E  0A7F               	xorlw	127	; case 127
 28096  005590  A4D8               	btfss	status,2,c
 28097  005592  0012               	return	
 28098  005594  D018               	goto	i2l13828
 28099  005596                     i2l13826:
 28100                           
 28101                           ; Switch size 1, requested type "space"
 28102                           ; Number of cases is 8, Range of values is 1 to 117
 28103                           ; switch strategies available:
 28104                           ; Name         Instructions Cycles
 28105                           ; simple_byte           25    13 (average)
 28106                           ;	Chosen strategy is simple_byte
 28107  005596  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28108  005598  0A01               	xorlw	1	; case 1
 28109  00559A  B4D8               	btfsc	status,2,c
 28110  00559C  D7EA               	goto	i2l7264
 28111  00559E  0A03               	xorlw	3	; case 2
 28112  0055A0  B4D8               	btfsc	status,2,c
 28113  0055A2  0012               	return	
 28114  0055A4  0A01               	xorlw	1	; case 3
 28115  0055A6  B4D8               	btfsc	status,2,c
 28116  0055A8  D7E7               	goto	i2l7266
 28117  0055AA  0A06               	xorlw	6	; case 5
 28118  0055AC  B4D8               	btfsc	status,2,c
 28119  0055AE  0012               	return	
 28120  0055B0  0A77               	xorlw	119	; case 114
 28121  0055B2  B4D8               	btfsc	status,2,c
 28122  0055B4  0012               	return	
 28123  0055B6  0A01               	xorlw	1	; case 115
 28124  0055B8  B4D8               	btfsc	status,2,c
 28125  0055BA  0012               	return	
 28126  0055BC  0A07               	xorlw	7	; case 116
 28127  0055BE  B4D8               	btfsc	status,2,c
 28128  0055C0  0012               	return	
 28129  0055C2  0A01               	xorlw	1	; case 117
 28130  0055C4  0012               	return	
 28131  0055C6                     i2l13828:
 28132                           
 28133                           ; Switch size 1, requested type "space"
 28134                           ; Number of cases is 1, Range of values is 255 to 255
 28135                           ; switch strategies available:
 28136                           ; Name         Instructions Cycles
 28137                           ; simple_byte            4     3 (average)
 28138                           ;	Chosen strategy is simple_byte
 28139  0055C6  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28140  0055C8  0AFF               	xorlw	255	; case 255
 28141  0055CA  0012               	return	
 28142                           
 28143                           ;USBapp.c: 355: return 1;
 28144                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
 28145  0055CC  0012               	return		;funcret
 28146  0055CE                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 28147                           	opt stack 0
 28148                           pclatu	equ	0xFFB
 28149                           pclath	equ	0xFFA
 28150                           tblptru	equ	0xFF8
 28151                           tblptrh	equ	0xFF7
 28152                           tblptrl	equ	0xFF6
 28153                           tablat	equ	0xFF5
 28154                           prodh	equ	0xFF4
 28155                           prodl	equ	0xFF3
 28156                           intcon	equ	0xFF2
 28157                           intcon3	equ	0xFF0
 28158                           indf0	equ	0xFEF
 28159                           postinc0	equ	0xFEE
 28160                           fsr0h	equ	0xFEA
 28161                           fsr0l	equ	0xFE9
 28162                           wreg	equ	0xFE8
 28163                           indf1	equ	0xFE7
 28164                           postdec1	equ	0xFE5
 28165                           fsr1h	equ	0xFE2
 28166                           fsr1l	equ	0xFE1
 28167                           indf2	equ	0xFDF
 28168                           postinc2	equ	0xFDE
 28169                           postdec2	equ	0xFDD
 28170                           plusw2	equ	0xFDB
 28171                           fsr2h	equ	0xFDA
 28172                           fsr2l	equ	0xFD9
 28173                           status	equ	0xFD8
 28174                           
 28175 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 28176 ;; Defined at:
 28177 ;;		line 144 in file "../Includes/Board/USBapp.c"
 28178 ;; Parameters:    Size  Location     Type
 28179 ;;		None
 28180 ;; Auto vars:     Size  Location     Type
 28181 ;;  i               1   12[COMRAM] unsigned char 
 28182 ;; Return value:  Size  Location     Type
 28183 ;;		None               void
 28184 ;; Registers used:
 28185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28186 ;; Tracked objects:
 28187 ;;		On entry : 0/0
 28188 ;;		On exit  : 0/0
 28189 ;;		Unchanged: 0/0
 28190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28191 ;;      Params:         0       0       0       0       0       0       0       0       0
 28192 ;;      Locals:         1       0       0       0       0       0       0       0       0
 28193 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28194 ;;      Totals:         1       0       0       0       0       0       0       0       0
 28195 ;;Total ram usage:        1 bytes
 28196 ;; Hardware stack levels used:    1
 28197 ;; Hardware stack levels required when called:    3
 28198 ;; This function calls:
 28199 ;;		_CDCInitEP
 28200 ;;		i2_EUSART_Initialize
 28201 ;; This function is called by:
 28202 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28203 ;; This function uses a non-reentrant model
 28204 ;;
 28205                           
 28206                           	psect	text122
 28207  00562A                     __ptext122:
 28208                           	opt stack 0
 28209  00562A                     _USBapp_CdcEmulatorInitialize:
 28210                           	opt stack 15
 28211                           
 28212                           ;USBapp.c: 147: CDCInitEP();
 28213                           
 28214                           ;incstack = 0
 28215  00562A  EC51  F029         	call	_CDCInitEP	;wreg free
 28216                           
 28217                           ;USBapp.c: 148: line_coding.bCharFormat = 0;
 28218  00562E  0E00               	movlw	0
 28219  005630  0101               	movlb	1	; () banked
 28220  005632  6FEE               	movwf	(_line_coding+4)& (0+255),b
 28221                           
 28222                           ; BSR set to: 1
 28223                           ;USBapp.c: 149: line_coding.bDataBits = 8;
 28224  005634  0E08               	movlw	8
 28225  005636  0101               	movlb	1	; () banked
 28226  005638  6FF0               	movwf	(_line_coding+6)& (0+255),b
 28227                           
 28228                           ; BSR set to: 1
 28229                           ;USBapp.c: 150: line_coding.bParityType = 0;
 28230  00563A  0E00               	movlw	0
 28231  00563C  0101               	movlb	1	; () banked
 28232  00563E  6FEF               	movwf	(_line_coding+5)& (0+255),b
 28233                           
 28234                           ; BSR set to: 1
 28235                           ;USBapp.c: 151: line_coding.dwDTERate = 19200;
 28236  005640  0E00               	movlw	0
 28237  005642  0101               	movlb	1	; () banked
 28238  005644  6FEA               	movwf	_line_coding& (0+255),b
 28239  005646  0E4B               	movlw	75
 28240  005648  6FEB               	movwf	(_line_coding+1)& (0+255),b
 28241  00564A  0E00               	movlw	0
 28242  00564C  6FEC               	movwf	(_line_coding+2)& (0+255),b
 28243  00564E  0E00               	movlw	0
 28244  005650  6FED               	movwf	(_line_coding+3)& (0+255),b
 28245                           
 28246                           ; BSR set to: 1
 28247                           ;USBapp.c: 152: EUSART_Initialize();
 28248  005652  ECDC  F02C         	call	i2_EUSART_Initialize	;wreg free
 28249                           
 28250                           ;USBapp.c: 154: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 28251  005656  0E00               	movlw	0
 28252  005658  6E0D               	movwf	USBapp_CdcEmulatorInitialize@i,c
 28253  00565A                     i2l7188:
 28254  00565A  0E3F               	movlw	63
 28255  00565C  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 28256  00565E  D001               	goto	i2l7192
 28257  005660  D00C               	goto	i2l7198
 28258  005662                     i2l7192:
 28259                           
 28260                           ;USBapp.c: 155: {
 28261                           ;USBapp.c: 156: USB_Buffer[i] = 0;
 28262  005662  500D               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 28263  005664  0D01               	mullw	1
 28264  005666  0E28               	movlw	low _USB_Buffer
 28265  005668  24F3               	addwf	prodl,w,c
 28266  00566A  6ED9               	movwf	fsr2l,c
 28267  00566C  0E01               	movlw	high _USB_Buffer
 28268  00566E  20F4               	addwfc	prodh,w,c
 28269  005670  6EDA               	movwf	fsr2h,c
 28270  005672  0E00               	movlw	0
 28271  005674  6EDF               	movwf	indf2,c
 28272  005676  2A0D               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 28273  005678  D7F0               	goto	i2l7188
 28274  00567A                     i2l7198:
 28275                           
 28276                           ;USBapp.c: 157: }
 28277                           ;USBapp.c: 158: NextUSBOut = 0;
 28278  00567A  0E00               	movlw	0
 28279  00567C  6E45               	movwf	_NextUSBOut,c
 28280                           
 28281                           ;USBapp.c: 159: LastRS232Out = 0;
 28282  00567E  0E00               	movlw	0
 28283  005680  6E44               	movwf	_LastRS232Out,c
 28284  005682  0012               	return		;funcret
 28285  005684                     __end_of_USBapp_CdcEmulatorInitialize:
 28286                           	opt stack 0
 28287                           pclatu	equ	0xFFB
 28288                           pclath	equ	0xFFA
 28289                           tblptru	equ	0xFF8
 28290                           tblptrh	equ	0xFF7
 28291                           tblptrl	equ	0xFF6
 28292                           tablat	equ	0xFF5
 28293                           prodh	equ	0xFF4
 28294                           prodl	equ	0xFF3
 28295                           intcon	equ	0xFF2
 28296                           intcon3	equ	0xFF0
 28297                           indf0	equ	0xFEF
 28298                           postinc0	equ	0xFEE
 28299                           fsr0h	equ	0xFEA
 28300                           fsr0l	equ	0xFE9
 28301                           wreg	equ	0xFE8
 28302                           indf1	equ	0xFE7
 28303                           postdec1	equ	0xFE5
 28304                           fsr1h	equ	0xFE2
 28305                           fsr1l	equ	0xFE1
 28306                           indf2	equ	0xFDF
 28307                           postinc2	equ	0xFDE
 28308                           postdec2	equ	0xFDD
 28309                           plusw2	equ	0xFDB
 28310                           fsr2h	equ	0xFDA
 28311                           fsr2l	equ	0xFD9
 28312                           status	equ	0xFD8
 28313                           
 28314 ;; *************** function _CDCInitEP *****************
 28315 ;; Defined at:
 28316 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 28317 ;; Parameters:    Size  Location     Type
 28318 ;;		None
 28319 ;; Auto vars:     Size  Location     Type
 28320 ;;		None
 28321 ;; Return value:  Size  Location     Type
 28322 ;;		None               void
 28323 ;; Registers used:
 28324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28325 ;; Tracked objects:
 28326 ;;		On entry : 0/0
 28327 ;;		On exit  : 0/0
 28328 ;;		Unchanged: 0/0
 28329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28330 ;;      Params:         0       0       0       0       0       0       0       0       0
 28331 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28332 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28333 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28334 ;;Total ram usage:        0 bytes
 28335 ;; Hardware stack levels used:    1
 28336 ;; Hardware stack levels required when called:    2
 28337 ;; This function calls:
 28338 ;;		_USBEnableEndpoint
 28339 ;;		i2_USBTransferOnePacket
 28340 ;; This function is called by:
 28341 ;;		_USBapp_CdcEmulatorInitialize
 28342 ;; This function uses a non-reentrant model
 28343 ;;
 28344                           
 28345                           	psect	text123
 28346  0052A2                     __ptext123:
 28347                           	opt stack 0
 28348  0052A2                     _CDCInitEP:
 28349                           	opt stack 15
 28350                           
 28351                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 28352                           
 28353                           ;incstack = 0
 28354  0052A2  0E00               	movlw	0
 28355  0052A4  0101               	movlb	1	; () banked
 28356  0052A6  6FEA               	movwf	_line_coding& (0+255),b
 28357  0052A8  0E4B               	movlw	75
 28358  0052AA  6FEB               	movwf	(_line_coding+1)& (0+255),b
 28359  0052AC  0E00               	movlw	0
 28360  0052AE  6FEC               	movwf	(_line_coding+2)& (0+255),b
 28361  0052B0  0E00               	movlw	0
 28362  0052B2  6FED               	movwf	(_line_coding+3)& (0+255),b
 28363                           
 28364                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 28365  0052B4  0E00               	movlw	0
 28366  0052B6  0101               	movlb	1	; () banked
 28367  0052B8  6FEE               	movwf	(_line_coding+4)& (0+255),b
 28368                           
 28369                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 28370  0052BA  0E00               	movlw	0
 28371  0052BC  0101               	movlb	1	; () banked
 28372  0052BE  6FEF               	movwf	(_line_coding+5)& (0+255),b
 28373                           
 28374                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 28375  0052C0  0E08               	movlw	8
 28376  0052C2  0101               	movlb	1	; () banked
 28377  0052C4  6FF0               	movwf	(_line_coding+6)& (0+255),b
 28378                           
 28379                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 28380  0052C6  0E00               	movlw	0
 28381  0052C8  0100               	movlb	0	; () banked
 28382  0052CA  6F90               	movwf	_cdc_rx_len& (0+255),b
 28383                           
 28384                           ; BSR set to: 0
 28385                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 28386  0052CC  0E1A               	movlw	26
 28387  0052CE  6E09               	movwf	USBEnableEndpoint@options,c
 28388  0052D0  0E01               	movlw	1
 28389  0052D2  EC7E  F02C         	call	_USBEnableEndpoint
 28390                           
 28391                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 28392  0052D6  0E1E               	movlw	30
 28393  0052D8  6E09               	movwf	USBEnableEndpoint@options,c
 28394  0052DA  0E02               	movlw	2
 28395  0052DC  EC7E  F02C         	call	_USBEnableEndpoint
 28396                           
 28397                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 28398  0052E0  0E00               	movlw	0
 28399  0052E2  6E01               	movwf	i2USBTransferOnePacket@dir,c
 28400  0052E4  0E40               	movlw	64
 28401  0052E6  6E02               	movwf	i2USBTransferOnePacket@data,c
 28402  0052E8  0E05               	movlw	5
 28403  0052EA  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 28404  0052EC  0E40               	movlw	64
 28405  0052EE  6E04               	movwf	i2USBTransferOnePacket@len,c
 28406  0052F0  0E02               	movlw	2
 28407  0052F2  EC39  F022         	call	i2_USBTransferOnePacket
 28408  0052F6  C001  F074         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 28409  0052FA  C002  F075         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 28410                           
 28411                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 28412  0052FE  0E00               	movlw	0
 28413  005300  0100               	movlb	0	; () banked
 28414  005302  6F72               	movwf	_CDCDataInHandle& (0+255),b
 28415  005304  0E00               	movlw	0
 28416  005306  0100               	movlb	0	; () banked
 28417  005308  6F73               	movwf	(_CDCDataInHandle+1)& (0+255),b
 28418                           
 28419                           ; BSR set to: 0
 28420                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 28421  00530A  0E00               	movlw	0
 28422  00530C  6E4A               	movwf	_cdc_trf_state,c
 28423                           
 28424                           ; BSR set to: 0
 28425  00530E  0012               	return		;funcret
 28426  005310                     __end_of_CDCInitEP:
 28427                           	opt stack 0
 28428                           pclatu	equ	0xFFB
 28429                           pclath	equ	0xFFA
 28430                           tblptru	equ	0xFF8
 28431                           tblptrh	equ	0xFF7
 28432                           tblptrl	equ	0xFF6
 28433                           tablat	equ	0xFF5
 28434                           prodh	equ	0xFF4
 28435                           prodl	equ	0xFF3
 28436                           intcon	equ	0xFF2
 28437                           intcon3	equ	0xFF0
 28438                           indf0	equ	0xFEF
 28439                           postinc0	equ	0xFEE
 28440                           fsr0h	equ	0xFEA
 28441                           fsr0l	equ	0xFE9
 28442                           wreg	equ	0xFE8
 28443                           indf1	equ	0xFE7
 28444                           postdec1	equ	0xFE5
 28445                           fsr1h	equ	0xFE2
 28446                           fsr1l	equ	0xFE1
 28447                           indf2	equ	0xFDF
 28448                           postinc2	equ	0xFDE
 28449                           postdec2	equ	0xFDD
 28450                           plusw2	equ	0xFDB
 28451                           fsr2h	equ	0xFDA
 28452                           fsr2l	equ	0xFD9
 28453                           status	equ	0xFD8
 28454                           
 28455 ;; *************** function i2_USBTransferOnePacket *****************
 28456 ;; Defined at:
 28457 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 28458 ;; Parameters:    Size  Location     Type
 28459 ;;  ep              1    wreg     unsigned char 
 28460 ;;  dir             1    0[COMRAM] unsigned char 
 28461 ;;  data            2    1[COMRAM] PTR unsigned char 
 28462 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 28463 ;;  len             1    3[COMRAM] unsigned char 
 28464 ;; Auto vars:     Size  Location     Type
 28465 ;;  ep              1    4[COMRAM] unsigned char 
 28466 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 28467 ;;		 -> BDT(48), NULL(0), 
 28468 ;; Return value:  Size  Location     Type
 28469 ;;                  2    0[COMRAM] PTR void 
 28470 ;; Registers used:
 28471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28472 ;; Tracked objects:
 28473 ;;		On entry : 0/0
 28474 ;;		On exit  : 0/0
 28475 ;;		Unchanged: 0/0
 28476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28477 ;;      Params:         4       0       0       0       0       0       0       0       0
 28478 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28479 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28480 ;;      Totals:         7       0       0       0       0       0       0       0       0
 28481 ;;Total ram usage:        7 bytes
 28482 ;; Hardware stack levels used:    1
 28483 ;; This function calls:
 28484 ;;		Nothing
 28485 ;; This function is called by:
 28486 ;;		_CDCInitEP
 28487 ;; This function uses a non-reentrant model
 28488 ;;
 28489                           
 28490                           	psect	text124
 28491  004472                     __ptext124:
 28492                           	opt stack 0
 28493  004472                     i2_USBTransferOnePacket:
 28494                           	opt stack 16
 28495                           
 28496                           ; BSR set to: 0
 28497                           ;incstack = 0
 28498                           ;i2USBTransferOnePacket@ep stored from wreg
 28499  004472  6E05               	movwf	i2USBTransferOnePacket@ep,c
 28500                           
 28501                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 28502                           ;usb_device.c: 762: if(dir != 0)
 28503  004474  5001               	movf	i2USBTransferOnePacket@dir,w,c
 28504  004476  B4D8               	btfsc	status,2,c
 28505  004478  D007               	goto	i2l7070
 28506                           
 28507                           ;usb_device.c: 763: {
 28508                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 28509  00447A  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28510  00447C  0D02               	mullw	2
 28511  00447E  0E36               	movlw	low _pBDTEntryIn
 28512  004480  24F3               	addwf	prodl,w,c
 28513  004482  6ED9               	movwf	fsr2l,c
 28514  004484  0E00               	movlw	high _pBDTEntryIn
 28515  004486  D006               	goto	L22
 28516  004488                     i2l7070:
 28517                           
 28518                           ;usb_device.c: 767: else
 28519                           ;usb_device.c: 768: {
 28520                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 28521  004488  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28522  00448A  0D02               	mullw	2
 28523  00448C  0E60               	movlw	low _pBDTEntryOut
 28524  00448E  24F3               	addwf	prodl,w,c
 28525  004490  6ED9               	movwf	fsr2l,c
 28526  004492  0E00               	movlw	high _pBDTEntryOut
 28527  004494                     L22:
 28528  004494  20F4               	addwfc	prodh,w,c
 28529  004496  6EDA               	movwf	fsr2h,c
 28530  004498  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 28531  00449C  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 28532  0044A0  D000               	goto	i2l7072
 28533  0044A2                     i2l7072:
 28534                           
 28535                           ;usb_device.c: 771: }
 28536                           ;usb_device.c: 775: if(handle == 0)
 28537  0044A2  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28538  0044A4  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 28539  0044A6  A4D8               	btfss	status,2,c
 28540  0044A8  D005               	goto	i2l7078
 28541                           
 28542                           ;usb_device.c: 776: {
 28543                           ;usb_device.c: 777: return 0;
 28544  0044AA  0E00               	movlw	0
 28545  0044AC  6E01               	movwf	?i2_USBTransferOnePacket,c
 28546  0044AE  0E00               	movlw	0
 28547  0044B0  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 28548  0044B2  0012               	return	
 28549  0044B4                     i2l7078:
 28550                           
 28551                           ;usb_device.c: 778: }
 28552                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 28553  0044B4  EE20 F002          	lfsr	2,2
 28554  0044B8  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28555  0044BA  26D9               	addwf	fsr2l,f,c
 28556  0044BC  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 28557  0044BE  22DA               	addwfc	fsr2h,f,c
 28558  0044C0  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 28559  0044C4  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28560                           
 28561                           ;usb_device.c: 781: handle->CNT = len;
 28562  0044C8  EE20 F001          	lfsr	2,1
 28563  0044CC  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28564  0044CE  26D9               	addwf	fsr2l,f,c
 28565  0044D0  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 28566  0044D2  22DA               	addwfc	fsr2h,f,c
 28567  0044D4  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28568                           
 28569                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 28570  0044D8  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28571  0044DC  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28572  0044E0  0E40               	movlw	64
 28573  0044E2  16DF               	andwf	indf2,f,c
 28574                           
 28575                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 28576  0044E4  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28577  0044E8  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28578  0044EC  0E00               	movlw	0
 28579  0044EE  86DB               	bsf	plusw2,3,c
 28580                           
 28581                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 28582  0044F0  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28583  0044F4  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28584  0044F8  0E00               	movlw	0
 28585  0044FA  8EDB               	bsf	plusw2,7,c
 28586                           
 28587                           ;usb_device.c: 787: if(dir != 0)
 28588  0044FC  5001               	movf	i2USBTransferOnePacket@dir,w,c
 28589  0044FE  B4D8               	btfsc	status,2,c
 28590  004500  D007               	goto	i2l7090
 28591                           
 28592                           ;usb_device.c: 788: {
 28593                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28594  004502  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28595  004504  0D02               	mullw	2
 28596  004506  0E36               	movlw	low _pBDTEntryIn
 28597  004508  24F3               	addwf	prodl,w,c
 28598  00450A  6ED9               	movwf	fsr2l,c
 28599  00450C  0E00               	movlw	high _pBDTEntryIn
 28600  00450E  D006               	goto	L23
 28601  004510                     i2l7090:
 28602                           
 28603                           ;usb_device.c: 792: else
 28604                           ;usb_device.c: 793: {
 28605                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28606  004510  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28607  004512  0D02               	mullw	2
 28608  004514  0E60               	movlw	low _pBDTEntryOut
 28609  004516  24F3               	addwf	prodl,w,c
 28610  004518  6ED9               	movwf	fsr2l,c
 28611  00451A  0E00               	movlw	high _pBDTEntryOut
 28612  00451C                     L23:
 28613  00451C  20F4               	addwfc	prodh,w,c
 28614  00451E  6EDA               	movwf	fsr2h,c
 28615  004520  0E04               	movlw	4
 28616  004522  1ADF               	xorwf	indf2,f,c
 28617  004524  D000               	goto	i2l7092
 28618  004526                     i2l7092:
 28619                           
 28620                           ;usb_device.c: 796: }
 28621                           ;usb_device.c: 797: return (void*)handle;
 28622  004526  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28623  00452A  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28624  00452E  0012               	return	
 28625  004530  0012               	return		;funcret
 28626  004532                     __end_ofi2_USBTransferOnePacket:
 28627                           	opt stack 0
 28628                           pclatu	equ	0xFFB
 28629                           pclath	equ	0xFFA
 28630                           tblptru	equ	0xFF8
 28631                           tblptrh	equ	0xFF7
 28632                           tblptrl	equ	0xFF6
 28633                           tablat	equ	0xFF5
 28634                           prodh	equ	0xFF4
 28635                           prodl	equ	0xFF3
 28636                           intcon	equ	0xFF2
 28637                           intcon3	equ	0xFF0
 28638                           indf0	equ	0xFEF
 28639                           postinc0	equ	0xFEE
 28640                           fsr0h	equ	0xFEA
 28641                           fsr0l	equ	0xFE9
 28642                           wreg	equ	0xFE8
 28643                           indf1	equ	0xFE7
 28644                           postdec1	equ	0xFE5
 28645                           fsr1h	equ	0xFE2
 28646                           fsr1l	equ	0xFE1
 28647                           indf2	equ	0xFDF
 28648                           postinc2	equ	0xFDE
 28649                           postdec2	equ	0xFDD
 28650                           plusw2	equ	0xFDB
 28651                           fsr2h	equ	0xFDA
 28652                           fsr2l	equ	0xFD9
 28653                           status	equ	0xFD8
 28654                           
 28655 ;; *************** function _USBEnableEndpoint *****************
 28656 ;; Defined at:
 28657 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 28658 ;; Parameters:    Size  Location     Type
 28659 ;;  ep              1    wreg     unsigned char 
 28660 ;;  options         1    8[COMRAM] unsigned char 
 28661 ;; Auto vars:     Size  Location     Type
 28662 ;;  ep              1   11[COMRAM] unsigned char 
 28663 ;;  p               2    9[COMRAM] PTR unsigned char 
 28664 ;;		 -> UEP0(1), 
 28665 ;; Return value:  Size  Location     Type
 28666 ;;		None               void
 28667 ;; Registers used:
 28668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28669 ;; Tracked objects:
 28670 ;;		On entry : 0/0
 28671 ;;		On exit  : 0/0
 28672 ;;		Unchanged: 0/0
 28673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28674 ;;      Params:         1       0       0       0       0       0       0       0       0
 28675 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28676 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28677 ;;      Totals:         4       0       0       0       0       0       0       0       0
 28678 ;;Total ram usage:        4 bytes
 28679 ;; Hardware stack levels used:    1
 28680 ;; Hardware stack levels required when called:    1
 28681 ;; This function calls:
 28682 ;;		_USBConfigureEndpoint
 28683 ;; This function is called by:
 28684 ;;		_CDCInitEP
 28685 ;; This function uses a non-reentrant model
 28686 ;;
 28687                           
 28688                           	psect	text125
 28689  0058FC                     __ptext125:
 28690                           	opt stack 0
 28691  0058FC                     _USBEnableEndpoint:
 28692                           	opt stack 15
 28693                           
 28694                           ;incstack = 0
 28695                           ;USBEnableEndpoint@ep stored from wreg
 28696  0058FC  6E0C               	movwf	USBEnableEndpoint@ep,c
 28697                           
 28698                           ;usb_device.c: 647: unsigned char* p;
 28699                           ;usb_device.c: 651: if(options & 0x04)
 28700  0058FE  A409               	btfss	USBEnableEndpoint@options,2,c
 28701  005900  D006               	goto	i2l7058
 28702                           
 28703                           ;usb_device.c: 652: {
 28704                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 28705  005902  0E00               	movlw	0
 28706  005904  6E01               	movwf	USBConfigureEndpoint@direction,c
 28707  005906  500C               	movf	USBEnableEndpoint@ep,w,c
 28708  005908  EC04  F026         	call	_USBConfigureEndpoint
 28709  00590C  D000               	goto	i2l7058
 28710  00590E                     i2l7058:
 28711                           
 28712                           ;usb_device.c: 654: }
 28713                           ;usb_device.c: 655: if(options & 0x02)
 28714  00590E  A209               	btfss	USBEnableEndpoint@options,1,c
 28715  005910  D006               	goto	i2l7062
 28716                           
 28717                           ;usb_device.c: 656: {
 28718                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 28719  005912  0E01               	movlw	1
 28720  005914  6E01               	movwf	USBConfigureEndpoint@direction,c
 28721  005916  500C               	movf	USBEnableEndpoint@ep,w,c
 28722  005918  EC04  F026         	call	_USBConfigureEndpoint
 28723  00591C  D000               	goto	i2l7062
 28724  00591E                     i2l7062:
 28725                           
 28726                           ;usb_device.c: 658: }
 28727                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 28728  00591E  500C               	movf	USBEnableEndpoint@ep,w,c
 28729  005920  0D01               	mullw	1
 28730  005922  0E6A               	movlw	106
 28731  005924  24F3               	addwf	prodl,w,c
 28732  005926  6E0A               	movwf	USBEnableEndpoint@p,c
 28733  005928  0E0F               	movlw	15
 28734  00592A  20F4               	addwfc	prodh,w,c
 28735  00592C  6E0B               	movwf	USBEnableEndpoint@p+1,c
 28736                           
 28737                           ;usb_device.c: 664: *p = options;
 28738  00592E  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28739  005932  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28740  005936  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 28741  00593A  0012               	return		;funcret
 28742  00593C                     __end_of_USBEnableEndpoint:
 28743                           	opt stack 0
 28744                           pclatu	equ	0xFFB
 28745                           pclath	equ	0xFFA
 28746                           tblptru	equ	0xFF8
 28747                           tblptrh	equ	0xFF7
 28748                           tblptrl	equ	0xFF6
 28749                           tablat	equ	0xFF5
 28750                           prodh	equ	0xFF4
 28751                           prodl	equ	0xFF3
 28752                           intcon	equ	0xFF2
 28753                           intcon3	equ	0xFF0
 28754                           indf0	equ	0xFEF
 28755                           postinc0	equ	0xFEE
 28756                           fsr0h	equ	0xFEA
 28757                           fsr0l	equ	0xFE9
 28758                           wreg	equ	0xFE8
 28759                           indf1	equ	0xFE7
 28760                           postdec1	equ	0xFE5
 28761                           fsr1h	equ	0xFE2
 28762                           fsr1l	equ	0xFE1
 28763                           indf2	equ	0xFDF
 28764                           postinc2	equ	0xFDE
 28765                           postdec2	equ	0xFDD
 28766                           plusw2	equ	0xFDB
 28767                           fsr2h	equ	0xFDA
 28768                           fsr2l	equ	0xFD9
 28769                           status	equ	0xFD8
 28770                           
 28771 ;; *************** function _USBConfigureEndpoint *****************
 28772 ;; Defined at:
 28773 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 28774 ;; Parameters:    Size  Location     Type
 28775 ;;  EPNum           1    wreg     unsigned char 
 28776 ;;  direction       1    0[COMRAM] unsigned char 
 28777 ;; Auto vars:     Size  Location     Type
 28778 ;;  EPNum           1    5[COMRAM] unsigned char 
 28779 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28780 ;;		 -> BDT(48), 
 28781 ;; Return value:  Size  Location     Type
 28782 ;;		None               void
 28783 ;; Registers used:
 28784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28785 ;; Tracked objects:
 28786 ;;		On entry : 0/0
 28787 ;;		On exit  : 0/0
 28788 ;;		Unchanged: 0/0
 28789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28790 ;;      Params:         1       0       0       0       0       0       0       0       0
 28791 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28792 ;;      Temps:          4       0       0       0       0       0       0       0       0
 28793 ;;      Totals:         8       0       0       0       0       0       0       0       0
 28794 ;;Total ram usage:        8 bytes
 28795 ;; Hardware stack levels used:    1
 28796 ;; This function calls:
 28797 ;;		Nothing
 28798 ;; This function is called by:
 28799 ;;		_USBEnableEndpoint
 28800 ;; This function uses a non-reentrant model
 28801 ;;
 28802                           
 28803                           	psect	text126
 28804  004C08                     __ptext126:
 28805                           	opt stack 0
 28806  004C08                     _USBConfigureEndpoint:
 28807                           	opt stack 15
 28808                           
 28809                           ;incstack = 0
 28810                           ;USBConfigureEndpoint@EPNum stored from wreg
 28811  004C08  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 28812                           
 28813                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 28814                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 28815  004C0A  0E00               	movlw	0
 28816  004C0C  6E07               	movwf	USBConfigureEndpoint@handle,c
 28817  004C0E  0E04               	movlw	4
 28818  004C10  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 28819                           
 28820                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 28821  004C12  5001               	movf	USBConfigureEndpoint@direction,w,c
 28822  004C14  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 28823  004C16  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 28824  004C18  90D8               	bcf	status,0,c
 28825  004C1A  3602               	rlcf	??_USBConfigureEndpoint,f,c
 28826  004C1C  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 28827  004C1E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28828  004C20  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 28829  004C22  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 28830  004C24  90D8               	bcf	status,0,c
 28831  004C26  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28832  004C28  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28833  004C2A  90D8               	bcf	status,0,c
 28834  004C2C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28835  004C2E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28836  004C30  5002               	movf	??_USBConfigureEndpoint,w,c
 28837  004C32  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 28838  004C34  5003               	movf	??_USBConfigureEndpoint+1,w,c
 28839  004C36  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 28840  004C38  90D8               	bcf	status,0,c
 28841  004C3A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28842  004C3C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28843  004C3E  90D8               	bcf	status,0,c
 28844  004C40  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28845  004C42  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28846  004C44  5004               	movf	??_USBConfigureEndpoint+2,w,c
 28847  004C46  2607               	addwf	USBConfigureEndpoint@handle,f,c
 28848  004C48  5005               	movf	??_USBConfigureEndpoint+3,w,c
 28849  004C4A  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 28850                           
 28851                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 28852  004C4C  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28853  004C50  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28854  004C54  9EDF               	bcf	indf2,7,c
 28855                           
 28856                           ;usb_device.c: 1242: if(direction == 0)
 28857  004C56  5001               	movf	USBConfigureEndpoint@direction,w,c
 28858  004C58  A4D8               	btfss	status,2,c
 28859  004C5A  D007               	goto	i2l7034
 28860                           
 28861                           ;usb_device.c: 1243: {
 28862                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 28863  004C5C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28864  004C5E  0D02               	mullw	2
 28865  004C60  0E60               	movlw	low _pBDTEntryOut
 28866  004C62  24F3               	addwf	prodl,w,c
 28867  004C64  6ED9               	movwf	fsr2l,c
 28868  004C66  0E00               	movlw	high _pBDTEntryOut
 28869  004C68  D006               	goto	L24
 28870  004C6A                     i2l7034:
 28871                           
 28872                           ;usb_device.c: 1246: else
 28873                           ;usb_device.c: 1247: {
 28874                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 28875  004C6A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28876  004C6C  0D02               	mullw	2
 28877  004C6E  0E36               	movlw	low _pBDTEntryIn
 28878  004C70  24F3               	addwf	prodl,w,c
 28879  004C72  6ED9               	movwf	fsr2l,c
 28880  004C74  0E00               	movlw	high _pBDTEntryIn
 28881  004C76                     L24:
 28882  004C76  20F4               	addwfc	prodh,w,c
 28883  004C78  6EDA               	movwf	fsr2h,c
 28884  004C7A  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28885  004C7E  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28886  004C82  D000               	goto	i2l7036
 28887  004C84                     i2l7036:
 28888                           
 28889                           ;usb_device.c: 1249: }
 28890                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 28891  004C84  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28892  004C88  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28893  004C8C  9CDF               	bcf	indf2,6,c
 28894                           
 28895                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 28896  004C8E  EE20 F004          	lfsr	2,4
 28897  004C92  5007               	movf	USBConfigureEndpoint@handle,w,c
 28898  004C94  26D9               	addwf	fsr2l,f,c
 28899  004C96  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 28900  004C98  22DA               	addwfc	fsr2h,f,c
 28901  004C9A  8CDF               	bsf	indf2,6,c
 28902  004C9C  0012               	return		;funcret
 28903  004C9E                     __end_of_USBConfigureEndpoint:
 28904                           	opt stack 0
 28905                           pclatu	equ	0xFFB
 28906                           pclath	equ	0xFFA
 28907                           tblptru	equ	0xFF8
 28908                           tblptrh	equ	0xFF7
 28909                           tblptrl	equ	0xFF6
 28910                           tablat	equ	0xFF5
 28911                           prodh	equ	0xFF4
 28912                           prodl	equ	0xFF3
 28913                           intcon	equ	0xFF2
 28914                           intcon3	equ	0xFF0
 28915                           indf0	equ	0xFEF
 28916                           postinc0	equ	0xFEE
 28917                           fsr0h	equ	0xFEA
 28918                           fsr0l	equ	0xFE9
 28919                           wreg	equ	0xFE8
 28920                           indf1	equ	0xFE7
 28921                           postdec1	equ	0xFE5
 28922                           fsr1h	equ	0xFE2
 28923                           fsr1l	equ	0xFE1
 28924                           indf2	equ	0xFDF
 28925                           postinc2	equ	0xFDE
 28926                           postdec2	equ	0xFDD
 28927                           plusw2	equ	0xFDB
 28928                           fsr2h	equ	0xFDA
 28929                           fsr2l	equ	0xFD9
 28930                           status	equ	0xFD8
 28931                           
 28932 ;; *************** function _USBCheckCDCRequest *****************
 28933 ;; Defined at:
 28934 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 28935 ;; Parameters:    Size  Location     Type
 28936 ;;		None
 28937 ;; Auto vars:     Size  Location     Type
 28938 ;;		None
 28939 ;; Return value:  Size  Location     Type
 28940 ;;		None               void
 28941 ;; Registers used:
 28942 ;;		wreg, status,2, status,0
 28943 ;; Tracked objects:
 28944 ;;		On entry : 0/0
 28945 ;;		On exit  : 0/0
 28946 ;;		Unchanged: 0/0
 28947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28948 ;;      Params:         0       0       0       0       0       0       0       0       0
 28949 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28950 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28951 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28952 ;;Total ram usage:        0 bytes
 28953 ;; Hardware stack levels used:    1
 28954 ;; This function calls:
 28955 ;;		Nothing
 28956 ;; This function is called by:
 28957 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28958 ;; This function uses a non-reentrant model
 28959 ;;
 28960                           
 28961                           	psect	text127
 28962  0045EE                     __ptext127:
 28963                           	opt stack 0
 28964  0045EE                     _USBCheckCDCRequest:
 28965                           	opt stack 18
 28966                           
 28967                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 28968                           
 28969                           ;incstack = 0
 28970  0045EE  0104               	movlb	4	; () banked
 28971  0045F0  5130               	movf	48,w,b	;volatile
 28972  0045F2  0B1F               	andlw	31
 28973  0045F4  06E8               	decf	wreg,f,c
 28974  0045F6  A4D8               	btfss	status,2,c
 28975  0045F8  0012               	return	
 28976  0045FA  D001               	goto	i2l7204
 28977                           
 28978                           ; BSR set to: 4
 28979  0045FC  0012               	return	
 28980  0045FE                     i2l7204:
 28981                           
 28982                           ; BSR set to: 4
 28983                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 28984  0045FE  0104               	movlb	4	; () banked
 28985  004600  3930               	swapf	48,w,b	;volatile
 28986  004602  32E8               	rrcf	wreg,f,c
 28987  004604  0B03               	andlw	3
 28988  004606  06E8               	decf	wreg,f,c
 28989  004608  A4D8               	btfss	status,2,c
 28990  00460A  0012               	return	
 28991  00460C  D001               	goto	i2l7208
 28992                           
 28993                           ; BSR set to: 4
 28994  00460E  0012               	return	
 28995  004610                     i2l7208:
 28996                           
 28997                           ; BSR set to: 4
 28998                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 28999                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 29000  004610  0104               	movlb	4	; () banked
 29001  004612  5134               	movf	52,w,b	;volatile
 29002  004614  B4D8               	btfsc	status,2,c
 29003  004616  D035               	goto	i2l7238
 29004                           
 29005                           ; BSR set to: 4
 29006  004618  0104               	movlb	4	; () banked
 29007  00461A  0534               	decf	52,w,b	;volatile
 29008  00461C  A4D8               	btfss	status,2,c
 29009  00461E  0012               	return	
 29010  004620  D030               	goto	i2l7238
 29011                           
 29012                           ; BSR set to: 4
 29013  004622  0012               	return	
 29014                           
 29015                           ; BSR set to: 4
 29016                           ;usb_device_cdc.c: 203: switch(SetupPkt.bRequest)
 29017  004624  D02E               	goto	i2l7238
 29018  004626                     i2l7214:
 29019                           
 29020                           ; BSR set to: 4
 29021                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 29022  004626  0EE2               	movlw	low _dummy_encapsulated_cmd_response
 29023  004628  6E52               	movwf	_inPipes,c	;volatile
 29024  00462A  0E01               	movlw	high _dummy_encapsulated_cmd_response
 29025  00462C  6E53               	movwf	_inPipes+1,c	;volatile
 29026                           
 29027                           ; BSR set to: 4
 29028                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 29029  00462E  0E00               	movlw	0
 29030  004630  6E57               	movwf	_inPipes+5,c	;volatile
 29031  004632  0E08               	movlw	8
 29032  004634  6E56               	movwf	_inPipes+4,c	;volatile
 29033                           
 29034                           ; BSR set to: 4
 29035                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 29036  004636  8055               	bsf	_inPipes+3,0,c	;volatile
 29037                           
 29038                           ; BSR set to: 4
 29039                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 29040  004638  8E55               	bsf	_inPipes+3,7,c	;volatile
 29041                           
 29042                           ;usb_device_cdc.c: 212: break;
 29043  00463A  0012               	return	
 29044  00463C                     i2l7222:
 29045                           
 29046                           ; BSR set to: 4
 29047                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 29048  00463C  0EE2               	movlw	low _dummy_encapsulated_cmd_response
 29049  00463E  6E52               	movwf	_inPipes,c	;volatile
 29050  004640  0E01               	movlw	high _dummy_encapsulated_cmd_response
 29051  004642  6E53               	movwf	_inPipes+1,c	;volatile
 29052                           
 29053                           ; BSR set to: 4
 29054                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 29055  004644  8E55               	bsf	_inPipes+3,7,c	;volatile
 29056                           
 29057                           ;usb_device_cdc.c: 217: break;
 29058  004646  0012               	return	
 29059  004648                     i2l2012:
 29060                           
 29061                           ; BSR set to: 4
 29062                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 29063  004648  C436 F032          	movff	1078,_outPipes+4	;volatile
 29064  00464C  C437 F033          	movff	1079,_outPipes+5	;volatile
 29065                           
 29066                           ; BSR set to: 4
 29067                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 29068  004650  0ED8               	movlw	low _cdc_notice
 29069  004652  6E2E               	movwf	_outPipes,c	;volatile
 29070  004654  0E01               	movlw	high _cdc_notice
 29071  004656  6E2F               	movwf	_outPipes+1,c	;volatile
 29072                           
 29073                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 29074  004658  0E84               	movlw	low _USART_mySetLineCodingHandler
 29075  00465A  6E34               	movwf	_outPipes+6,c	;volatile
 29076  00465C  0E56               	movlw	high _USART_mySetLineCodingHandler
 29077  00465E  6E35               	movwf	_outPipes+7,c	;volatile
 29078                           
 29079                           ; BSR set to: 4
 29080                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 29081  004660  8E31               	bsf	_outPipes+3,7,c	;volatile
 29082                           
 29083                           ;usb_device_cdc.c: 224: break;
 29084  004662  0012               	return	
 29085  004664                     i2l7230:
 29086                           
 29087                           ; BSR set to: 4
 29088                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 29089  004664  0EEA               	movlw	low _line_coding
 29090  004666  6E52               	movwf	_inPipes,c	;volatile
 29091  004668  0E01               	movlw	high _line_coding
 29092  00466A  6E53               	movwf	_inPipes+1,c	;volatile
 29093                           
 29094                           ; BSR set to: 4
 29095  00466C  0E00               	movlw	0
 29096  00466E  6E57               	movwf	_inPipes+5,c	;volatile
 29097  004670  0E07               	movlw	7
 29098  004672  6E56               	movwf	_inPipes+4,c	;volatile
 29099                           
 29100                           ; BSR set to: 4
 29101  004674  0EC1               	movlw	193
 29102  004676  6E55               	movwf	_inPipes+3,c	;volatile
 29103                           
 29104                           ;usb_device_cdc.c: 231: break;
 29105  004678  0012               	return	
 29106  00467A                     i2l2014:
 29107                           
 29108                           ; BSR set to: 4
 29109                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 29110  00467A  C432 F092          	movff	1074,_control_signal_bitmap	;volatile
 29111                           
 29112                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 29113  00467E  8E55               	bsf	_inPipes+3,7,c	;volatile
 29114                           
 29115                           ; BSR set to: 4
 29116                           ;usb_device_cdc.c: 260: }
 29117                           
 29118                           ; BSR set to: 4
 29119                           ;usb_device_cdc.c: 259: break;
 29120                           
 29121                           ;usb_device_cdc.c: 258: default:
 29122                           
 29123                           ;usb_device_cdc.c: 256: break;
 29124  004680  0012               	return	
 29125  004682                     i2l7238:
 29126                           
 29127                           ; BSR set to: 4
 29128  004682  0104               	movlb	4	; () banked
 29129  004684  5131               	movf	49,w,b	;volatile
 29130                           
 29131                           ; Switch size 1, requested type "space"
 29132                           ; Number of cases is 5, Range of values is 0 to 34
 29133                           ; switch strategies available:
 29134                           ; Name         Instructions Cycles
 29135                           ; simple_byte           16     9 (average)
 29136                           ;	Chosen strategy is simple_byte
 29137  004686  0A00               	xorlw	0	; case 0
 29138  004688  B4D8               	btfsc	status,2,c
 29139  00468A  D7CD               	goto	i2l7214
 29140  00468C  0A01               	xorlw	1	; case 1
 29141  00468E  B4D8               	btfsc	status,2,c
 29142  004690  D7D5               	goto	i2l7222
 29143  004692  0A21               	xorlw	33	; case 32
 29144  004694  B4D8               	btfsc	status,2,c
 29145  004696  D7D8               	goto	i2l2012
 29146  004698  0A01               	xorlw	1	; case 33
 29147  00469A  B4D8               	btfsc	status,2,c
 29148  00469C  D7E3               	goto	i2l7230
 29149  00469E  0A03               	xorlw	3	; case 34
 29150  0046A0  A4D8               	btfss	status,2,c
 29151  0046A2  0012               	return	
 29152  0046A4  D7EA               	goto	i2l2014
 29153                           
 29154                           ; BSR set to: 4
 29155                           
 29156                           ; BSR set to: 4
 29157  0046A6  0012               	return		;funcret
 29158  0046A8                     __end_of_USBCheckCDCRequest:
 29159                           	opt stack 0
 29160                           pclatu	equ	0xFFB
 29161                           pclath	equ	0xFFA
 29162                           tblptru	equ	0xFF8
 29163                           tblptrh	equ	0xFF7
 29164                           tblptrl	equ	0xFF6
 29165                           tablat	equ	0xFF5
 29166                           prodh	equ	0xFF4
 29167                           prodl	equ	0xFF3
 29168                           intcon	equ	0xFF2
 29169                           intcon3	equ	0xFF0
 29170                           indf0	equ	0xFEF
 29171                           postinc0	equ	0xFEE
 29172                           fsr0h	equ	0xFEA
 29173                           fsr0l	equ	0xFE9
 29174                           wreg	equ	0xFE8
 29175                           indf1	equ	0xFE7
 29176                           postdec1	equ	0xFE5
 29177                           fsr1h	equ	0xFE2
 29178                           fsr1l	equ	0xFE1
 29179                           indf2	equ	0xFDF
 29180                           postinc2	equ	0xFDE
 29181                           postdec2	equ	0xFDD
 29182                           plusw2	equ	0xFDB
 29183                           fsr2h	equ	0xFDA
 29184                           fsr2l	equ	0xFD9
 29185                           status	equ	0xFD8
 29186                           
 29187 ;; *************** function _USBCtrlTrfOutHandler *****************
 29188 ;; Defined at:
 29189 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 29190 ;; Parameters:    Size  Location     Type
 29191 ;;		None
 29192 ;; Auto vars:     Size  Location     Type
 29193 ;;		None
 29194 ;; Return value:  Size  Location     Type
 29195 ;;		None               void
 29196 ;; Registers used:
 29197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 29198 ;; Tracked objects:
 29199 ;;		On entry : 0/0
 29200 ;;		On exit  : 0/0
 29201 ;;		Unchanged: 0/0
 29202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29203 ;;      Params:         0       0       0       0       0       0       0       0       0
 29204 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29205 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29206 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29207 ;;Total ram usage:        0 bytes
 29208 ;; Hardware stack levels used:    1
 29209 ;; Hardware stack levels required when called:    3
 29210 ;; This function calls:
 29211 ;;		_USBCtrlTrfRxService
 29212 ;; This function is called by:
 29213 ;;		_USBCtrlEPService
 29214 ;; This function uses a non-reentrant model
 29215 ;;
 29216                           
 29217                           	psect	text128
 29218  0054AC                     __ptext128:
 29219                           	opt stack 0
 29220  0054AC                     _USBCtrlTrfOutHandler:
 29221                           	opt stack 15
 29222                           
 29223                           ;usb_device.c: 2171: if(controlTransferState == 2)
 29224                           
 29225                           ; BSR set to: 4
 29226                           ;incstack = 0
 29227  0054AC  0E02               	movlw	2
 29228  0054AE  184B               	xorwf	_controlTransferState,w,c	;volatile
 29229  0054B0  A4D8               	btfss	status,2,c
 29230  0054B2  D003               	goto	i2l8948
 29231                           
 29232                           ;usb_device.c: 2172: {
 29233                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 29234  0054B4  ECD7  F016         	call	_USBCtrlTrfRxService	;wreg free
 29235                           
 29236                           ;usb_device.c: 2174: }
 29237  0054B8  0012               	return	
 29238  0054BA                     i2l8948:
 29239                           
 29240                           ;usb_device.c: 2175: else
 29241                           ;usb_device.c: 2176: {
 29242                           ;usb_device.c: 2179: controlTransferState = 0;
 29243  0054BA  0E00               	movlw	0
 29244  0054BC  6E4B               	movwf	_controlTransferState,c	;volatile
 29245                           
 29246                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 29247  0054BE  0100               	movlb	0	; () banked
 29248  0054C0  5184               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 29249  0054C2  A4D8               	btfss	status,2,c
 29250  0054C4  D01F               	goto	i2l8956
 29251                           
 29252                           ; BSR set to: 0
 29253                           ;usb_device.c: 2187: {
 29254                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 29255  0054C6  EE20 F001          	lfsr	2,1
 29256  0054CA  5040               	movf	_pBDTEntryEP0OutNext,w,c
 29257  0054CC  26D9               	addwf	fsr2l,f,c
 29258  0054CE  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 29259  0054D0  22DA               	addwfc	fsr2h,f,c
 29260  0054D2  0E08               	movlw	8
 29261  0054D4  6EDF               	movwf	indf2,c
 29262                           
 29263                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29264  0054D6  EE20 F002          	lfsr	2,2
 29265  0054DA  5040               	movf	_pBDTEntryEP0OutNext,w,c
 29266  0054DC  26D9               	addwf	fsr2l,f,c
 29267  0054DE  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 29268  0054E0  22DA               	addwfc	fsr2h,f,c
 29269  0054E2  0E30               	movlw	48
 29270  0054E4  6EDE               	movwf	postinc2,c
 29271  0054E6  0E04               	movlw	4
 29272  0054E8  6EDD               	movwf	postdec2,c
 29273                           
 29274                           ; BSR set to: 0
 29275                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29276  0054EA  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29277  0054EE  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29278  0054F2  0E0C               	movlw	12
 29279  0054F4  6EDF               	movwf	indf2,c
 29280                           
 29281                           ; BSR set to: 0
 29282                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29283  0054F6  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29284  0054FA  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29285  0054FE  0E00               	movlw	0
 29286  005500  8EDB               	bsf	plusw2,7,c
 29287                           
 29288                           ;usb_device.c: 2192: }
 29289  005502  0012               	return	
 29290  005504                     i2l8956:
 29291                           
 29292                           ; BSR set to: 0
 29293                           ;usb_device.c: 2193: else
 29294                           ;usb_device.c: 2194: {
 29295                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 29296  005504  0E00               	movlw	0
 29297  005506  0100               	movlb	0	; () banked
 29298  005508  6F84               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 29299                           
 29300                           ; BSR set to: 0
 29301  00550A  0012               	return	
 29302                           
 29303                           ; BSR set to: 0
 29304  00550C  0012               	return		;funcret
 29305  00550E                     __end_of_USBCtrlTrfOutHandler:
 29306                           	opt stack 0
 29307                           pclatu	equ	0xFFB
 29308                           pclath	equ	0xFFA
 29309                           tblptru	equ	0xFF8
 29310                           tblptrh	equ	0xFF7
 29311                           tblptrl	equ	0xFF6
 29312                           tablat	equ	0xFF5
 29313                           prodh	equ	0xFF4
 29314                           prodl	equ	0xFF3
 29315                           intcon	equ	0xFF2
 29316                           intcon3	equ	0xFF0
 29317                           indf0	equ	0xFEF
 29318                           postinc0	equ	0xFEE
 29319                           fsr0h	equ	0xFEA
 29320                           fsr0l	equ	0xFE9
 29321                           wreg	equ	0xFE8
 29322                           indf1	equ	0xFE7
 29323                           postdec1	equ	0xFE5
 29324                           fsr1h	equ	0xFE2
 29325                           fsr1l	equ	0xFE1
 29326                           indf2	equ	0xFDF
 29327                           postinc2	equ	0xFDE
 29328                           postdec2	equ	0xFDD
 29329                           plusw2	equ	0xFDB
 29330                           fsr2h	equ	0xFDA
 29331                           fsr2l	equ	0xFD9
 29332                           status	equ	0xFD8
 29333                           
 29334 ;; *************** function _USBCtrlTrfRxService *****************
 29335 ;; Defined at:
 29336 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 29337 ;; Parameters:    Size  Location     Type
 29338 ;;		None
 29339 ;; Auto vars:     Size  Location     Type
 29340 ;;  byteToRead      1   18[COMRAM] unsigned char 
 29341 ;;  i               1   17[COMRAM] unsigned char 
 29342 ;; Return value:  Size  Location     Type
 29343 ;;		None               void
 29344 ;; Registers used:
 29345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 29346 ;; Tracked objects:
 29347 ;;		On entry : 0/0
 29348 ;;		On exit  : 0/0
 29349 ;;		Unchanged: 0/0
 29350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29351 ;;      Params:         0       0       0       0       0       0       0       0       0
 29352 ;;      Locals:         2       0       0       0       0       0       0       0       0
 29353 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29354 ;;      Totals:         2       0       0       0       0       0       0       0       0
 29355 ;;Total ram usage:        2 bytes
 29356 ;; Hardware stack levels used:    1
 29357 ;; Hardware stack levels required when called:    2
 29358 ;; This function calls:
 29359 ;;		_USART_mySetLineCodingHandler
 29360 ;;		_USBCtrlEPAllowStatusStage
 29361 ;; This function is called by:
 29362 ;;		_USBCtrlTrfOutHandler
 29363 ;; This function uses a non-reentrant model
 29364 ;;
 29365                           
 29366                           	psect	text129
 29367  002DAE                     __ptext129:
 29368                           	opt stack 0
 29369  002DAE                     _USBCtrlTrfRxService:
 29370                           	opt stack 15
 29371                           
 29372                           ;usb_device.c: 1520: uint8_t byteToRead;
 29373                           ;usb_device.c: 1521: uint8_t i;
 29374                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 29375                           
 29376                           ;incstack = 0
 29377  002DAE  EE20 F001          	lfsr	2,1
 29378  002DB2  503E               	movf	_pBDTEntryEP0OutCurrent,w,c
 29379  002DB4  26D9               	addwf	fsr2l,f,c
 29380  002DB6  503F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29381  002DB8  22DA               	addwfc	fsr2h,f,c
 29382  002DBA  50DF               	movf	indf2,w,c
 29383  002DBC  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 29384                           
 29385                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 29386  002DBE  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29387  002DC0  5C32               	subwf	_outPipes+4,w,c	;volatile
 29388  002DC2  0E00               	movlw	0
 29389  002DC4  5833               	subwfb	_outPipes+5,w,c	;volatile
 29390  002DC6  B0D8               	btfsc	status,0,c
 29391  002DC8  D003               	goto	i2l7994
 29392                           
 29393                           ;usb_device.c: 1532: {
 29394                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 29395  002DCA  C032  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 29396  002DCE  D000               	goto	i2l7994
 29397  002DD0                     i2l7994:
 29398                           
 29399                           ;usb_device.c: 1534: }
 29400                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 29401  002DD0  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29402  002DD2  5E32               	subwf	_outPipes+4,f,c	;volatile
 29403  002DD4  0E00               	movlw	0
 29404  002DD6  5A33               	subwfb	_outPipes+5,f,c	;volatile
 29405                           
 29406                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 29407  002DD8  0E00               	movlw	0
 29408  002DDA  6E12               	movwf	USBCtrlTrfRxService@i,c
 29409  002DDC  D012               	goto	i2l8004
 29410  002DDE                     i2l7998:
 29411                           
 29412                           ;usb_device.c: 1541: {
 29413                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 29414  002DDE  5012               	movf	USBCtrlTrfRxService@i,w,c
 29415  002DE0  0D01               	mullw	1
 29416  002DE2  0E38               	movlw	56
 29417  002DE4  24F3               	addwf	prodl,w,c
 29418  002DE6  6ED9               	movwf	fsr2l,c
 29419  002DE8  0E04               	movlw	4
 29420  002DEA  20F4               	addwfc	prodh,w,c
 29421  002DEC  6EDA               	movwf	fsr2h,c
 29422  002DEE  C02E  FFE1         	movff	_outPipes,fsr1l	;volatile
 29423  002DF2  C02F  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 29424  002DF6  CFDF FFE7          	movff	indf2,indf1
 29425  002DFA  4A2E               	infsnz	_outPipes,f,c	;volatile
 29426  002DFC  2A2F               	incf	_outPipes+1,f,c	;volatile
 29427  002DFE  2A12               	incf	USBCtrlTrfRxService@i,f,c
 29428  002E00  D000               	goto	i2l8004
 29429  002E02                     i2l8004:
 29430  002E02  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29431  002E04  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 29432  002E06  A0D8               	btfss	status,0,c
 29433  002E08  D7EA               	goto	i2l7998
 29434                           
 29435                           ;usb_device.c: 1543: }
 29436                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 29437  002E0A  5032               	movf	_outPipes+4,w,c	;volatile
 29438  002E0C  1033               	iorwf	_outPipes+5,w,c	;volatile
 29439  002E0E  B4D8               	btfsc	status,2,c
 29440  002E10  D032               	goto	i2l8020
 29441                           
 29442                           ;usb_device.c: 1548: {
 29443                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 29444  002E12  EE20 F001          	lfsr	2,1
 29445  002E16  5040               	movf	_pBDTEntryEP0OutNext,w,c
 29446  002E18  26D9               	addwf	fsr2l,f,c
 29447  002E1A  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 29448  002E1C  22DA               	addwfc	fsr2h,f,c
 29449  002E1E  0E08               	movlw	8
 29450  002E20  6EDF               	movwf	indf2,c
 29451                           
 29452                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 29453  002E22  EE20 F002          	lfsr	2,2
 29454  002E26  5040               	movf	_pBDTEntryEP0OutNext,w,c
 29455  002E28  26D9               	addwf	fsr2l,f,c
 29456  002E2A  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 29457  002E2C  22DA               	addwfc	fsr2h,f,c
 29458  002E2E  0E38               	movlw	56
 29459  002E30  6EDE               	movwf	postinc2,c
 29460  002E32  0E04               	movlw	4
 29461  002E34  6EDD               	movwf	postdec2,c
 29462                           
 29463                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 29464  002E36  C03E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29465  002E3A  C03F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29466  002E3E  BCDF               	btfsc	indf2,6,c
 29467  002E40  D00D               	goto	i2l8016
 29468                           
 29469                           ;usb_device.c: 1552: {
 29470                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 29471  002E42  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29472  002E46  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29473  002E4A  0E48               	movlw	72
 29474  002E4C  6EDF               	movwf	indf2,c
 29475                           
 29476                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29477  002E4E  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29478  002E52  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29479  002E56  0E00               	movlw	0
 29480  002E58  8EDB               	bsf	plusw2,7,c
 29481                           
 29482                           ;usb_device.c: 1555: }
 29483  002E5A  0012               	return	
 29484  002E5C                     i2l8016:
 29485                           
 29486                           ;usb_device.c: 1556: else
 29487                           ;usb_device.c: 1557: {
 29488                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 29489  002E5C  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29490  002E60  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29491  002E64  0E08               	movlw	8
 29492  002E66  6EDF               	movwf	indf2,c
 29493                           
 29494                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29495  002E68  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29496  002E6C  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29497  002E70  0E00               	movlw	0
 29498  002E72  8EDB               	bsf	plusw2,7,c
 29499                           
 29500                           ;usb_device.c: 1560: }
 29501                           ;usb_device.c: 1561: }
 29502  002E74  0012               	return	
 29503  002E76                     i2l8020:
 29504                           
 29505                           ;usb_device.c: 1562: else
 29506                           ;usb_device.c: 1563: {
 29507                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 29508  002E76  EE20 F001          	lfsr	2,1
 29509  002E7A  5040               	movf	_pBDTEntryEP0OutNext,w,c
 29510  002E7C  26D9               	addwf	fsr2l,f,c
 29511  002E7E  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 29512  002E80  22DA               	addwfc	fsr2h,f,c
 29513  002E82  0E08               	movlw	8
 29514  002E84  6EDF               	movwf	indf2,c
 29515                           
 29516                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29517  002E86  EE20 F002          	lfsr	2,2
 29518  002E8A  5040               	movf	_pBDTEntryEP0OutNext,w,c
 29519  002E8C  26D9               	addwf	fsr2l,f,c
 29520  002E8E  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 29521  002E90  22DA               	addwfc	fsr2h,f,c
 29522  002E92  0E30               	movlw	48
 29523  002E94  6EDE               	movwf	postinc2,c
 29524  002E96  0E04               	movlw	4
 29525  002E98  6EDD               	movwf	postdec2,c
 29526                           
 29527                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 29528  002E9A  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29529  002E9E  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29530  002EA2  0E04               	movlw	4
 29531  002EA4  6EDF               	movwf	indf2,c
 29532                           
 29533                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29534  002EA6  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29535  002EAA  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29536  002EAE  0E00               	movlw	0
 29537  002EB0  8EDB               	bsf	plusw2,7,c
 29538                           
 29539                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 29540  002EB2  5034               	movf	_outPipes+6,w,c	;volatile
 29541  002EB4  1035               	iorwf	_outPipes+7,w,c	;volatile
 29542  002EB6  B4D8               	btfsc	status,2,c
 29543  002EB8  D00E               	goto	i2l8030
 29544                           
 29545                           ;usb_device.c: 1581: {
 29546                           ;usb_device.c: 1586: outPipes[0].pFunc();
 29547  002EBA  EE20  F034         	lfsr	2,_outPipes+6	;volatile
 29548  002EBE  D801               	call	i2u602_48
 29549  002EC0  D00A               	goto	i2l8030
 29550  002EC2                     i2u602_48:
 29551  002EC2  0005               	push	
 29552  002EC4  6EFA               	movwf	pclath,c
 29553  002EC6  50DE               	movf	postinc2,w,c
 29554  002EC8  6EFD               	movwf	tosl,c
 29555  002ECA  50DE               	movf	postinc2,w,c
 29556  002ECC  6EFE               	movwf	tosh,c
 29557  002ECE  50F8               	movf	tblptru,w,c
 29558  002ED0  6EFF               	movwf	tosu,c
 29559  002ED2  50FA               	movf	pclath,w,c
 29560  002ED4  0012               	return		;indir
 29561  002ED6                     i2l8030:
 29562                           
 29563                           ;usb_device.c: 1588: }
 29564                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 29565  002ED6  9E31               	bcf	_outPipes+3,7,c	;volatile
 29566                           
 29567                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 29568  002ED8  5048               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29569  002EDA  A4D8               	btfss	status,2,c
 29570  002EDC  0012               	return	
 29571                           
 29572                           ;usb_device.c: 1604: {
 29573                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 29574  002EDE  ECD1  F021         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29575  002EE2  0012               	return	
 29576  002EE4  0012               	return		;funcret
 29577  002EE6                     __end_of_USBCtrlTrfRxService:
 29578                           	opt stack 0
 29579                           tosu	equ	0xFFF
 29580                           tosh	equ	0xFFE
 29581                           tosl	equ	0xFFD
 29582                           pclatu	equ	0xFFB
 29583                           pclath	equ	0xFFA
 29584                           tblptru	equ	0xFF8
 29585                           tblptrh	equ	0xFF7
 29586                           tblptrl	equ	0xFF6
 29587                           tablat	equ	0xFF5
 29588                           prodh	equ	0xFF4
 29589                           prodl	equ	0xFF3
 29590                           intcon	equ	0xFF2
 29591                           intcon3	equ	0xFF0
 29592                           indf0	equ	0xFEF
 29593                           postinc0	equ	0xFEE
 29594                           fsr0h	equ	0xFEA
 29595                           fsr0l	equ	0xFE9
 29596                           wreg	equ	0xFE8
 29597                           indf1	equ	0xFE7
 29598                           postdec1	equ	0xFE5
 29599                           fsr1h	equ	0xFE2
 29600                           fsr1l	equ	0xFE1
 29601                           indf2	equ	0xFDF
 29602                           postinc2	equ	0xFDE
 29603                           postdec2	equ	0xFDD
 29604                           plusw2	equ	0xFDB
 29605                           fsr2h	equ	0xFDA
 29606                           fsr2l	equ	0xFD9
 29607                           status	equ	0xFD8
 29608                           
 29609 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 29610 ;; Defined at:
 29611 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 29612 ;; Parameters:    Size  Location     Type
 29613 ;;		None
 29614 ;; Auto vars:     Size  Location     Type
 29615 ;;		None
 29616 ;; Return value:  Size  Location     Type
 29617 ;;		None               void
 29618 ;; Registers used:
 29619 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29620 ;; Tracked objects:
 29621 ;;		On entry : 0/0
 29622 ;;		On exit  : 0/0
 29623 ;;		Unchanged: 0/0
 29624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29625 ;;      Params:         0       0       0       0       0       0       0       0       0
 29626 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29627 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29628 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29629 ;;Total ram usage:        0 bytes
 29630 ;; Hardware stack levels used:    1
 29631 ;; This function calls:
 29632 ;;		Nothing
 29633 ;; This function is called by:
 29634 ;;		_USBDeviceTasks
 29635 ;;		_USBCtrlEPServiceComplete
 29636 ;;		_USBCtrlTrfRxService
 29637 ;; This function uses a non-reentrant model
 29638 ;;
 29639                           
 29640                           	psect	text130
 29641  0043A2                     __ptext130:
 29642                           	opt stack 0
 29643  0043A2                     _USBCtrlEPAllowStatusStage:
 29644                           	opt stack 16
 29645                           
 29646                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 29647                           
 29648                           ;incstack = 0
 29649  0043A2  0100               	movlb	0	; () banked
 29650  0043A4  518A               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 29651  0043A6  A4D8               	btfss	status,2,c
 29652  0043A8  0012               	return	
 29653                           
 29654                           ; BSR set to: 0
 29655                           ;usb_device.c: 1112: {
 29656                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 29657  0043AA  0E01               	movlw	1
 29658  0043AC  0100               	movlb	0	; () banked
 29659  0043AE  6F8A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 29660                           
 29661                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 29662  0043B0  0100               	movlb	0	; () banked
 29663  0043B2  518B               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 29664  0043B4  A4D8               	btfss	status,2,c
 29665  0043B6  0012               	return	
 29666                           
 29667                           ; BSR set to: 0
 29668                           ;usb_device.c: 1115: {
 29669                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 29670  0043B8  0E01               	movlw	1
 29671  0043BA  0100               	movlb	0	; () banked
 29672  0043BC  6F8B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 29673                           
 29674                           ; BSR set to: 0
 29675                           ;usb_device.c: 1120: if(controlTransferState == 2)
 29676  0043BE  0E02               	movlw	2
 29677  0043C0  184B               	xorwf	_controlTransferState,w,c	;volatile
 29678  0043C2  A4D8               	btfss	status,2,c
 29679  0043C4  D015               	goto	i2l7508
 29680                           
 29681                           ; BSR set to: 0
 29682                           ;usb_device.c: 1121: {
 29683                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 29684  0043C6  EE20 F001          	lfsr	2,1
 29685  0043CA  5036               	movf	_pBDTEntryIn,w,c
 29686  0043CC  26D9               	addwf	fsr2l,f,c
 29687  0043CE  5037               	movf	_pBDTEntryIn+1,w,c
 29688  0043D0  22DA               	addwfc	fsr2h,f,c
 29689  0043D2  0E00               	movlw	0
 29690  0043D4  6EDF               	movwf	indf2,c
 29691                           
 29692                           ; BSR set to: 0
 29693                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29694  0043D6  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29695  0043DA  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29696  0043DE  0E48               	movlw	72
 29697  0043E0  6EDF               	movwf	indf2,c
 29698                           
 29699                           ; BSR set to: 0
 29700                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29701  0043E2  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29702  0043E6  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29703  0043EA  0E00               	movlw	0
 29704  0043EC  8EDB               	bsf	plusw2,7,c
 29705                           
 29706                           ;usb_device.c: 1125: }
 29707  0043EE  0012               	return	
 29708  0043F0                     i2l7508:
 29709                           
 29710                           ; BSR set to: 0
 29711                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 29712  0043F0  044B               	decf	_controlTransferState,w,c	;volatile
 29713  0043F2  A4D8               	btfss	status,2,c
 29714  0043F4  0012               	return	
 29715                           
 29716                           ; BSR set to: 0
 29717                           ;usb_device.c: 1127: {
 29718                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 29719  0043F6  0E00               	movlw	0
 29720  0043F8  0100               	movlb	0	; () banked
 29721  0043FA  6F84               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 29722                           
 29723                           ; BSR set to: 0
 29724                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 29725  0043FC  EE20 F001          	lfsr	2,1
 29726  004400  503E               	movf	_pBDTEntryEP0OutCurrent,w,c
 29727  004402  26D9               	addwf	fsr2l,f,c
 29728  004404  503F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29729  004406  22DA               	addwfc	fsr2h,f,c
 29730  004408  0E08               	movlw	8
 29731  00440A  6EDF               	movwf	indf2,c
 29732                           
 29733                           ; BSR set to: 0
 29734                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 29735  00440C  EE20 F002          	lfsr	2,2
 29736  004410  503E               	movf	_pBDTEntryEP0OutCurrent,w,c
 29737  004412  26D9               	addwf	fsr2l,f,c
 29738  004414  503F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29739  004416  22DA               	addwfc	fsr2h,f,c
 29740  004418  0E30               	movlw	48
 29741  00441A  6EDE               	movwf	postinc2,c
 29742  00441C  0E04               	movlw	4
 29743  00441E  6EDD               	movwf	postdec2,c
 29744                           
 29745                           ; BSR set to: 0
 29746                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 29747  004420  C03E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29748  004424  C03F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29749  004428  0E04               	movlw	4
 29750  00442A  6EDF               	movwf	indf2,c
 29751                           
 29752                           ; BSR set to: 0
 29753                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29754  00442C  C03E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29755  004430  C03F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29756  004434  0E00               	movlw	0
 29757  004436  8EDB               	bsf	plusw2,7,c
 29758                           
 29759                           ; BSR set to: 0
 29760                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 29761  004438  0E01               	movlw	1
 29762  00443A  0100               	movlb	0	; () banked
 29763  00443C  6F84               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 29764                           
 29765                           ; BSR set to: 0
 29766                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 29767  00443E  EE20 F001          	lfsr	2,1
 29768  004442  5040               	movf	_pBDTEntryEP0OutNext,w,c
 29769  004444  26D9               	addwf	fsr2l,f,c
 29770  004446  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 29771  004448  22DA               	addwfc	fsr2h,f,c
 29772  00444A  0E08               	movlw	8
 29773  00444C  6EDF               	movwf	indf2,c
 29774                           
 29775                           ; BSR set to: 0
 29776                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29777  00444E  EE20 F002          	lfsr	2,2
 29778  004452  5040               	movf	_pBDTEntryEP0OutNext,w,c
 29779  004454  26D9               	addwf	fsr2l,f,c
 29780  004456  5041               	movf	_pBDTEntryEP0OutNext+1,w,c
 29781  004458  22DA               	addwfc	fsr2h,f,c
 29782  00445A  0E30               	movlw	48
 29783  00445C  6EDE               	movwf	postinc2,c
 29784  00445E  0E04               	movlw	4
 29785  004460  6EDD               	movwf	postdec2,c
 29786                           
 29787                           ; BSR set to: 0
 29788                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 29789  004462  C040  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29790  004466  C041  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29791  00446A  0E80               	movlw	128
 29792  00446C  6EDF               	movwf	indf2,c
 29793                           
 29794                           ; BSR set to: 0
 29795                           
 29796                           ; BSR set to: 0
 29797                           
 29798                           ; BSR set to: 0
 29799  00446E  0012               	return	
 29800                           
 29801                           ; BSR set to: 0
 29802                           
 29803                           ; BSR set to: 0
 29804  004470  0012               	return		;funcret
 29805  004472                     __end_of_USBCtrlEPAllowStatusStage:
 29806                           	opt stack 0
 29807                           tosu	equ	0xFFF
 29808                           tosh	equ	0xFFE
 29809                           tosl	equ	0xFFD
 29810                           pclatu	equ	0xFFB
 29811                           pclath	equ	0xFFA
 29812                           tblptru	equ	0xFF8
 29813                           tblptrh	equ	0xFF7
 29814                           tblptrl	equ	0xFF6
 29815                           tablat	equ	0xFF5
 29816                           prodh	equ	0xFF4
 29817                           prodl	equ	0xFF3
 29818                           intcon	equ	0xFF2
 29819                           intcon3	equ	0xFF0
 29820                           indf0	equ	0xFEF
 29821                           postinc0	equ	0xFEE
 29822                           fsr0h	equ	0xFEA
 29823                           fsr0l	equ	0xFE9
 29824                           wreg	equ	0xFE8
 29825                           indf1	equ	0xFE7
 29826                           postdec1	equ	0xFE5
 29827                           fsr1h	equ	0xFE2
 29828                           fsr1l	equ	0xFE1
 29829                           indf2	equ	0xFDF
 29830                           postinc2	equ	0xFDE
 29831                           postdec2	equ	0xFDD
 29832                           plusw2	equ	0xFDB
 29833                           fsr2h	equ	0xFDA
 29834                           fsr2l	equ	0xFD9
 29835                           status	equ	0xFD8
 29836                           
 29837 ;; *************** function _USBCtrlTrfInHandler *****************
 29838 ;; Defined at:
 29839 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 29840 ;; Parameters:    Size  Location     Type
 29841 ;;		None
 29842 ;; Auto vars:     Size  Location     Type
 29843 ;;  lastDTS         1   17[COMRAM] unsigned char 
 29844 ;; Return value:  Size  Location     Type
 29845 ;;		None               void
 29846 ;; Registers used:
 29847 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 29848 ;; Tracked objects:
 29849 ;;		On entry : 0/0
 29850 ;;		On exit  : 0/0
 29851 ;;		Unchanged: 0/0
 29852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29853 ;;      Params:         0       0       0       0       0       0       0       0       0
 29854 ;;      Locals:         1       0       0       0       0       0       0       0       0
 29855 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29856 ;;      Totals:         1       0       0       0       0       0       0       0       0
 29857 ;;Total ram usage:        1 bytes
 29858 ;; Hardware stack levels used:    1
 29859 ;; Hardware stack levels required when called:    2
 29860 ;; This function calls:
 29861 ;;		_USART_mySetLineCodingHandler
 29862 ;;		_USBCtrlTrfTxService
 29863 ;; This function is called by:
 29864 ;;		_USBCtrlEPService
 29865 ;; This function uses a non-reentrant model
 29866 ;;
 29867                           
 29868                           	psect	text131
 29869  003B06                     __ptext131:
 29870                           	opt stack 0
 29871  003B06                     _USBCtrlTrfInHandler:
 29872                           	opt stack 16
 29873                           
 29874                           ;usb_device.c: 2225: uint8_t lastDTS;
 29875                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29876                           
 29877                           ; BSR set to: 0
 29878                           ;incstack = 0
 29879  003B06  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29880  003B0A  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29881  003B0E  0E00               	movlw	0
 29882  003B10  BCDF               	btfsc	indf2,6,c
 29883  003B12  0E01               	movlw	1
 29884  003B14  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29885                           
 29886                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29887  003B16  0E04               	movlw	4
 29888  003B18  1A36               	xorwf	_pBDTEntryIn,f,c
 29889                           
 29890                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 29891  003B1A  0E08               	movlw	8
 29892  003B1C  0100               	movlb	0	; () banked
 29893  003B1E  1989               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 29894  003B20  A4D8               	btfss	status,2,c
 29895  003B22  D00D               	goto	i2l8972
 29896                           
 29897                           ; BSR set to: 0
 29898                           ;usb_device.c: 2236: {
 29899                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 29900  003B24  0104               	movlb	4	; () banked
 29901  003B26  5132               	movf	50,w,b	;volatile
 29902  003B28  0B7F               	andlw	127
 29903  003B2A  6E63               	movwf	3939,c	;volatile
 29904                           
 29905                           ; BSR set to: 4
 29906                           ;usb_device.c: 2238: if(UADDR != 0u)
 29907  003B2C  5063               	movf	3939,w,c	;volatile
 29908  003B2E  B4D8               	btfsc	status,2,c
 29909  003B30  D002               	goto	i2l8970
 29910                           
 29911                           ; BSR set to: 4
 29912                           ;usb_device.c: 2239: {
 29913                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 29914  003B32  0E10               	movlw	16
 29915  003B34  D001               	goto	L25
 29916  003B36                     i2l8970:
 29917                           
 29918                           ;usb_device.c: 2242: else
 29919                           ;usb_device.c: 2243: {
 29920                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 29921  003B36  0E04               	movlw	4
 29922  003B38                     L25:
 29923  003B38  0100               	movlb	0	; () banked
 29924  003B3A  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 29925                           
 29926                           ; BSR set to: 0
 29927  003B3C  D000               	goto	i2l8972
 29928  003B3E                     i2l8972:
 29929                           
 29930                           ; BSR set to: 0
 29931                           ;usb_device.c: 2245: }
 29932                           ;usb_device.c: 2246: }
 29933                           ;usb_device.c: 2249: if(controlTransferState == 1)
 29934  003B3E  044B               	decf	_controlTransferState,w,c	;volatile
 29935  003B40  A4D8               	btfss	status,2,c
 29936  003B42  D03A               	goto	i2l1905
 29937                           
 29938                           ; BSR set to: 0
 29939                           ;usb_device.c: 2250: {
 29940                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29941  003B44  EE20 F002          	lfsr	2,2
 29942  003B48  5036               	movf	_pBDTEntryIn,w,c
 29943  003B4A  26D9               	addwf	fsr2l,f,c
 29944  003B4C  5037               	movf	_pBDTEntryIn+1,w,c
 29945  003B4E  22DA               	addwfc	fsr2h,f,c
 29946  003B50  0E38               	movlw	56
 29947  003B52  6EDE               	movwf	postinc2,c
 29948  003B54  0E04               	movlw	4
 29949  003B56  6EDD               	movwf	postdec2,c
 29950                           
 29951                           ; BSR set to: 0
 29952                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 29953  003B58  EC26  F020         	call	_USBCtrlTrfTxService	;wreg free
 29954                           
 29955                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 29956  003B5C  0E02               	movlw	2
 29957  003B5E  1851               	xorwf	_shortPacketStatus,w,c	;volatile
 29958  003B60  A4D8               	btfss	status,2,c
 29959  003B62  D00D               	goto	i2l8984
 29960                           
 29961                           ;usb_device.c: 2259: {
 29962                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 29963  003B64  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29964  003B68  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29965  003B6C  0E04               	movlw	4
 29966  003B6E  6EDF               	movwf	indf2,c
 29967                           
 29968                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29969  003B70  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29970  003B74  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29971  003B78  0E00               	movlw	0
 29972  003B7A  8EDB               	bsf	plusw2,7,c
 29973                           
 29974                           ;usb_device.c: 2264: }
 29975  003B7C  0012               	return	
 29976  003B7E                     i2l8984:
 29977                           
 29978                           ;usb_device.c: 2265: else
 29979                           ;usb_device.c: 2266: {
 29980                           ;usb_device.c: 2267: if(lastDTS == 0)
 29981  003B7E  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 29982  003B80  A4D8               	btfss	status,2,c
 29983  003B82  D00D               	goto	i2l8990
 29984                           
 29985                           ;usb_device.c: 2268: {
 29986                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29987  003B84  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29988  003B88  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29989  003B8C  0E48               	movlw	72
 29990  003B8E  6EDF               	movwf	indf2,c
 29991                           
 29992                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29993  003B90  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 29994  003B94  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29995  003B98  0E00               	movlw	0
 29996  003B9A  8EDB               	bsf	plusw2,7,c
 29997                           
 29998                           ;usb_device.c: 2271: }
 29999  003B9C  0012               	return	
 30000  003B9E                     i2l8990:
 30001                           
 30002                           ;usb_device.c: 2272: else
 30003                           ;usb_device.c: 2273: {
 30004                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 30005  003B9E  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 30006  003BA2  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30007  003BA6  0E08               	movlw	8
 30008  003BA8  6EDF               	movwf	indf2,c
 30009                           
 30010                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30011  003BAA  C036  FFD9         	movff	_pBDTEntryIn,fsr2l
 30012  003BAE  C037  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30013  003BB2  0E00               	movlw	0
 30014  003BB4  8EDB               	bsf	plusw2,7,c
 30015                           
 30016                           ;usb_device.c: 2276: }
 30017                           ;usb_device.c: 2277: }
 30018                           ;usb_device.c: 2278: }
 30019  003BB6  0012               	return	
 30020  003BB8                     i2l1905:
 30021                           
 30022                           ; BSR set to: 0
 30023                           ;usb_device.c: 2279: else
 30024                           ;usb_device.c: 2280: {
 30025                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 30026  003BB8  AE31               	btfss	_outPipes+3,7,c	;volatile
 30027  003BBA  D014               	goto	i2l9000
 30028                           
 30029                           ; BSR set to: 0
 30030                           ;usb_device.c: 2285: {
 30031                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 30032  003BBC  5034               	movf	_outPipes+6,w,c	;volatile
 30033  003BBE  1035               	iorwf	_outPipes+7,w,c	;volatile
 30034  003BC0  B4D8               	btfsc	status,2,c
 30035  003BC2  D00E               	goto	i2l8998
 30036                           
 30037                           ; BSR set to: 0
 30038                           ;usb_device.c: 2287: {
 30039                           ;usb_device.c: 2288: outPipes[0].pFunc();
 30040  003BC4  EE20  F034         	lfsr	2,_outPipes+6	;volatile
 30041  003BC8  D801               	call	i2u720_48
 30042  003BCA  D00A               	goto	i2l8998
 30043  003BCC                     i2u720_48:
 30044  003BCC  0005               	push	
 30045  003BCE  6EFA               	movwf	pclath,c
 30046  003BD0  50DE               	movf	postinc2,w,c
 30047  003BD2  6EFD               	movwf	tosl,c
 30048  003BD4  50DE               	movf	postinc2,w,c
 30049  003BD6  6EFE               	movwf	tosh,c
 30050  003BD8  50F8               	movf	tblptru,w,c
 30051  003BDA  6EFF               	movwf	tosu,c
 30052  003BDC  50FA               	movf	pclath,w,c
 30053  003BDE  0012               	return		;indir
 30054  003BE0                     i2l8998:
 30055                           
 30056                           ;usb_device.c: 2289: }
 30057                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 30058  003BE0  9E31               	bcf	_outPipes+3,7,c	;volatile
 30059  003BE2  D000               	goto	i2l9000
 30060  003BE4                     i2l9000:
 30061                           
 30062                           ;usb_device.c: 2291: }
 30063                           ;usb_device.c: 2293: controlTransferState = 0;
 30064  003BE4  0E00               	movlw	0
 30065  003BE6  6E4B               	movwf	_controlTransferState,c	;volatile
 30066  003BE8  0012               	return	
 30067  003BEA  0012               	return		;funcret
 30068  003BEC                     __end_of_USBCtrlTrfInHandler:
 30069                           	opt stack 0
 30070                           tosu	equ	0xFFF
 30071                           tosh	equ	0xFFE
 30072                           tosl	equ	0xFFD
 30073                           pclatu	equ	0xFFB
 30074                           pclath	equ	0xFFA
 30075                           tblptru	equ	0xFF8
 30076                           tblptrh	equ	0xFF7
 30077                           tblptrl	equ	0xFF6
 30078                           tablat	equ	0xFF5
 30079                           prodh	equ	0xFF4
 30080                           prodl	equ	0xFF3
 30081                           intcon	equ	0xFF2
 30082                           intcon3	equ	0xFF0
 30083                           indf0	equ	0xFEF
 30084                           postinc0	equ	0xFEE
 30085                           fsr0h	equ	0xFEA
 30086                           fsr0l	equ	0xFE9
 30087                           wreg	equ	0xFE8
 30088                           indf1	equ	0xFE7
 30089                           postdec1	equ	0xFE5
 30090                           fsr1h	equ	0xFE2
 30091                           fsr1l	equ	0xFE1
 30092                           indf2	equ	0xFDF
 30093                           postinc2	equ	0xFDE
 30094                           postdec2	equ	0xFDD
 30095                           plusw2	equ	0xFDB
 30096                           fsr2h	equ	0xFDA
 30097                           fsr2l	equ	0xFD9
 30098                           status	equ	0xFD8
 30099                           
 30100 ;; *************** function _USBCtrlTrfTxService *****************
 30101 ;; Defined at:
 30102 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 30103 ;; Parameters:    Size  Location     Type
 30104 ;;		None
 30105 ;; Auto vars:     Size  Location     Type
 30106 ;;  byteToSend      1    0[COMRAM] unsigned char 
 30107 ;; Return value:  Size  Location     Type
 30108 ;;		None               void
 30109 ;; Registers used:
 30110 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30111 ;; Tracked objects:
 30112 ;;		On entry : 0/0
 30113 ;;		On exit  : 0/0
 30114 ;;		Unchanged: 0/0
 30115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30116 ;;      Params:         0       0       0       0       0       0       0       0       0
 30117 ;;      Locals:         1       0       0       0       0       0       0       0       0
 30118 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30119 ;;      Totals:         1       0       0       0       0       0       0       0       0
 30120 ;;Total ram usage:        1 bytes
 30121 ;; Hardware stack levels used:    1
 30122 ;; This function calls:
 30123 ;;		Nothing
 30124 ;; This function is called by:
 30125 ;;		_USBCtrlEPAllowDataStage
 30126 ;;		_USBCtrlTrfInHandler
 30127 ;; This function uses a non-reentrant model
 30128 ;;
 30129                           
 30130                           	psect	text132
 30131  00404C                     __ptext132:
 30132                           	opt stack 0
 30133  00404C                     _USBCtrlTrfTxService:
 30134                           	opt stack 15
 30135                           
 30136                           ;usb_device.c: 1439: uint8_t byteToSend;
 30137                           ;usb_device.c: 1443: byteToSend = 8;
 30138                           
 30139                           ;incstack = 0
 30140  00404C  0E08               	movlw	8
 30141  00404E  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 30142                           
 30143                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 30144  004050  5057               	movf	_inPipes+5,w,c	;volatile
 30145  004052  E111               	bnz	i2l7326
 30146  004054  0E08               	movlw	8
 30147  004056  5C56               	subwf	_inPipes+4,w,c	;volatile
 30148  004058  B0D8               	btfsc	status,0,c
 30149  00405A  D00D               	goto	i2l7326
 30150                           
 30151                           ;usb_device.c: 1445: {
 30152                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 30153  00405C  C056  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 30154                           
 30155                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 30156  004060  5051               	movf	_shortPacketStatus,w,c	;volatile
 30157  004062  A4D8               	btfss	status,2,c
 30158  004064  D002               	goto	i2l7322
 30159                           
 30160                           ;usb_device.c: 1454: {
 30161                           ;usb_device.c: 1455: shortPacketStatus = 1;
 30162  004066  0E01               	movlw	1
 30163  004068  D004               	goto	L26
 30164  00406A                     i2l7322:
 30165                           
 30166                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 30167  00406A  0451               	decf	_shortPacketStatus,w,c	;volatile
 30168  00406C  A4D8               	btfss	status,2,c
 30169  00406E  D003               	goto	i2l7326
 30170                           
 30171                           ;usb_device.c: 1458: {
 30172                           ;usb_device.c: 1459: shortPacketStatus = 2;
 30173  004070  0E02               	movlw	2
 30174  004072                     L26:
 30175  004072  6E51               	movwf	_shortPacketStatus,c	;volatile
 30176  004074  D000               	goto	i2l7326
 30177  004076                     i2l7326:
 30178                           
 30179                           ;usb_device.c: 1460: }
 30180                           ;usb_device.c: 1461: }
 30181                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 30182  004076  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30183  004078  5E56               	subwf	_inPipes+4,f,c	;volatile
 30184  00407A  0E00               	movlw	0
 30185  00407C  5A57               	subwfb	_inPipes+5,f,c	;volatile
 30186                           
 30187                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 30188  00407E  EE20 F001          	lfsr	2,1
 30189  004082  5036               	movf	_pBDTEntryIn,w,c
 30190  004084  26D9               	addwf	fsr2l,f,c
 30191  004086  5037               	movf	_pBDTEntryIn+1,w,c
 30192  004088  22DA               	addwfc	fsr2h,f,c
 30193  00408A  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 30194                           
 30195                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 30196  00408E  0E38               	movlw	56
 30197  004090  0100               	movlb	0	; () banked
 30198  004092  6F7A               	movwf	_pDst& (0+255),b
 30199  004094  0E04               	movlw	4
 30200  004096  0100               	movlb	0	; () banked
 30201  004098  6F7B               	movwf	(_pDst+1)& (0+255),b
 30202                           
 30203                           ; BSR set to: 0
 30204                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 30205  00409A  A055               	btfss	_inPipes+3,0,c	;volatile
 30206  00409C  D01E               	goto	i2l7344
 30207  00409E  D03F               	goto	i2l7354
 30208                           
 30209                           ; BSR set to: 0
 30210                           ;usb_device.c: 1476: {
 30211                           ;usb_device.c: 1477: while(byteToSend)
 30212  0040A0  D01C               	goto	i2l7344
 30213  0040A2                     i2l7336:
 30214                           
 30215                           ; BSR set to: 0
 30216                           ;usb_device.c: 1478: {
 30217                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 30218  0040A2  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 30219  0040A6  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30220  0040AA  6AF8               	clrf	tblptru,c
 30221  0040AC  C07A  FFD9         	movff	_pDst,fsr2l
 30222  0040B0  C07B  FFDA         	movff	_pDst+1,fsr2h
 30223  0040B4  0E07               	movlw	(high __ramtop+-1)
 30224  0040B6  64F7               	cpfsgt	tblptrh,c
 30225  0040B8  D003               	bra	i2u506_47
 30226  0040BA  0008               	tblrd		*
 30227  0040BC  50F5               	movf	tablat,w,c
 30228  0040BE  D005               	bra	i2u506_40
 30229  0040C0                     i2u506_47:
 30230  0040C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 30231  0040C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 30232  0040C8  50EF               	movf	indf0,w,c
 30233  0040CA                     i2u506_40:
 30234  0040CA  6EDF               	movwf	indf2,c
 30235  0040CC  4A52               	infsnz	_inPipes,f,c	;volatile
 30236  0040CE  2A53               	incf	_inPipes+1,f,c	;volatile
 30237  0040D0  0100               	movlb	0	; () banked
 30238  0040D2  4B7A               	infsnz	_pDst& (0+255),f,b
 30239  0040D4  2B7B               	incf	(_pDst+1)& (0+255),f,b
 30240                           
 30241                           ; BSR set to: 0
 30242                           ;usb_device.c: 1480: byteToSend--;
 30243  0040D6  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30244  0040D8  D000               	goto	i2l7344
 30245  0040DA                     i2l7344:
 30246                           
 30247                           ; BSR set to: 0
 30248  0040DA  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30249  0040DC  B4D8               	btfsc	status,2,c
 30250  0040DE  0012               	return	
 30251  0040E0  D7E0               	goto	i2l7336
 30252                           
 30253                           ; BSR set to: 0
 30254                           ;usb_device.c: 1481: }
 30255                           ;usb_device.c: 1482: }
 30256  0040E2  0012               	return	
 30257                           
 30258                           ; BSR set to: 0
 30259                           ;usb_device.c: 1483: else
 30260                           ;usb_device.c: 1484: {
 30261                           ;usb_device.c: 1485: while(byteToSend)
 30262  0040E4  D01C               	goto	i2l7354
 30263  0040E6                     i2l7346:
 30264                           
 30265                           ; BSR set to: 0
 30266                           ;usb_device.c: 1486: {
 30267                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 30268  0040E6  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 30269  0040EA  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30270  0040EE  6AF8               	clrf	tblptru,c
 30271  0040F0  C07A  FFD9         	movff	_pDst,fsr2l
 30272  0040F4  C07B  FFDA         	movff	_pDst+1,fsr2h
 30273  0040F8  0E07               	movlw	(high __ramtop+-1)
 30274  0040FA  64F7               	cpfsgt	tblptrh,c
 30275  0040FC  D003               	bra	i2u508_47
 30276  0040FE  0008               	tblrd		*
 30277  004100  50F5               	movf	tablat,w,c
 30278  004102  D005               	bra	i2u508_40
 30279  004104                     i2u508_47:
 30280  004104  CFF6 FFE9          	movff	tblptrl,fsr0l
 30281  004108  CFF7 FFEA          	movff	tblptrh,fsr0h
 30282  00410C  50EF               	movf	indf0,w,c
 30283  00410E                     i2u508_40:
 30284  00410E  6EDF               	movwf	indf2,c
 30285  004110  4A52               	infsnz	_inPipes,f,c	;volatile
 30286  004112  2A53               	incf	_inPipes+1,f,c	;volatile
 30287  004114  0100               	movlb	0	; () banked
 30288  004116  4B7A               	infsnz	_pDst& (0+255),f,b
 30289  004118  2B7B               	incf	(_pDst+1)& (0+255),f,b
 30290                           
 30291                           ; BSR set to: 0
 30292                           ;usb_device.c: 1488: byteToSend--;
 30293  00411A  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30294  00411C  D000               	goto	i2l7354
 30295  00411E                     i2l7354:
 30296                           
 30297                           ; BSR set to: 0
 30298  00411E  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30299  004120  B4D8               	btfsc	status,2,c
 30300  004122  0012               	return	
 30301  004124  D7E0               	goto	i2l7346
 30302                           
 30303                           ; BSR set to: 0
 30304  004126  0012               	return	
 30305                           
 30306                           ; BSR set to: 0
 30307                           
 30308                           ; BSR set to: 0
 30309  004128  0012               	return		;funcret
 30310  00412A                     __end_of_USBCtrlTrfTxService:
 30311                           	opt stack 0
 30312                           tosu	equ	0xFFF
 30313                           tosh	equ	0xFFE
 30314                           tosl	equ	0xFFD
 30315                           pclatu	equ	0xFFB
 30316                           pclath	equ	0xFFA
 30317                           tblptru	equ	0xFF8
 30318                           tblptrh	equ	0xFF7
 30319                           tblptrl	equ	0xFF6
 30320                           tablat	equ	0xFF5
 30321                           prodh	equ	0xFF4
 30322                           prodl	equ	0xFF3
 30323                           intcon	equ	0xFF2
 30324                           intcon3	equ	0xFF0
 30325                           indf0	equ	0xFEF
 30326                           postinc0	equ	0xFEE
 30327                           fsr0h	equ	0xFEA
 30328                           fsr0l	equ	0xFE9
 30329                           wreg	equ	0xFE8
 30330                           indf1	equ	0xFE7
 30331                           postdec1	equ	0xFE5
 30332                           fsr1h	equ	0xFE2
 30333                           fsr1l	equ	0xFE1
 30334                           indf2	equ	0xFDF
 30335                           postinc2	equ	0xFDE
 30336                           postdec2	equ	0xFDD
 30337                           plusw2	equ	0xFDB
 30338                           fsr2h	equ	0xFDA
 30339                           fsr2l	equ	0xFD9
 30340                           status	equ	0xFD8
 30341                           
 30342 ;; *************** function _USART_mySetLineCodingHandler *****************
 30343 ;; Defined at:
 30344 ;;		line 273 in file "../Includes/Board/USBapp.c"
 30345 ;; Parameters:    Size  Location     Type
 30346 ;;		None
 30347 ;; Auto vars:     Size  Location     Type
 30348 ;;  dwBaud          4   13[COMRAM] unsigned long 
 30349 ;; Return value:  Size  Location     Type
 30350 ;;		None               void
 30351 ;; Registers used:
 30352 ;;		wreg, status,2, status,0, cstack
 30353 ;; Tracked objects:
 30354 ;;		On entry : 0/0
 30355 ;;		On exit  : 0/0
 30356 ;;		Unchanged: 0/0
 30357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30358 ;;      Params:         0       0       0       0       0       0       0       0       0
 30359 ;;      Locals:         4       0       0       0       0       0       0       0       0
 30360 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30361 ;;      Totals:         4       0       0       0       0       0       0       0       0
 30362 ;;Total ram usage:        4 bytes
 30363 ;; Hardware stack levels used:    1
 30364 ;; Hardware stack levels required when called:    1
 30365 ;; This function calls:
 30366 ;;		___lldiv
 30367 ;;		i2_EUSART_Initialize
 30368 ;; This function is called by:
 30369 ;;		_USBCheckCDCRequest
 30370 ;;		_USBCtrlTrfRxService
 30371 ;;		_USBCtrlTrfInHandler
 30372 ;; This function uses a non-reentrant model
 30373 ;;
 30374                           
 30375                           	psect	text133
 30376  005684                     __ptext133:
 30377                           	opt stack 0
 30378  005684                     _USART_mySetLineCodingHandler:
 30379                           	opt stack 15
 30380                           
 30381                           ;USBapp.c: 276: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 30382                           
 30383                           ; BSR set to: 0
 30384                           ;incstack = 0
 30385  005684  C1D8  F1EA         	movff	_cdc_notice,_line_coding
 30386  005688  C1D9  F1EB         	movff	_cdc_notice+1,_line_coding+1
 30387  00568C  C1DA  F1EC         	movff	_cdc_notice+2,_line_coding+2
 30388  005690  C1DB  F1ED         	movff	_cdc_notice+3,_line_coding+3
 30389                           
 30390                           ;USBapp.c: 278: uint32_t dwBaud;
 30391                           ;USBapp.c: 279: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 30392  005694  0E00               	movlw	0
 30393  005696  6E01               	movwf	___lldiv@dividend,c
 30394  005698  0E1B               	movlw	27
 30395  00569A  6E02               	movwf	___lldiv@dividend+1,c
 30396  00569C  0EB7               	movlw	183
 30397  00569E  6E03               	movwf	___lldiv@dividend+2,c
 30398  0056A0  0E00               	movlw	0
 30399  0056A2  6E04               	movwf	___lldiv@dividend+3,c
 30400  0056A4  C1EA  F005         	movff	_line_coding,___lldiv@divisor
 30401  0056A8  C1EB  F006         	movff	_line_coding+1,___lldiv@divisor+1
 30402  0056AC  C1EC  F007         	movff	_line_coding+2,___lldiv@divisor+2
 30403  0056B0  C1ED  F008         	movff	_line_coding+3,___lldiv@divisor+3
 30404  0056B4  ECE1  F026         	call	___lldiv	;wreg free
 30405  0056B8  0EFF               	movlw	255
 30406  0056BA  2401               	addwf	?___lldiv,w,c
 30407  0056BC  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 30408  0056BE  0EFF               	movlw	255
 30409  0056C0  2002               	addwfc	?___lldiv+1,w,c
 30410  0056C2  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 30411  0056C4  0EFF               	movlw	255
 30412  0056C6  2003               	addwfc	?___lldiv+2,w,c
 30413  0056C8  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 30414  0056CA  0EFF               	movlw	255
 30415  0056CC  2004               	addwfc	?___lldiv+3,w,c
 30416  0056CE  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 30417                           
 30418                           ;USBapp.c: 280: SPBRG = (uint8_t) dwBaud;
 30419  0056D0  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 30420                           
 30421                           ;USBapp.c: 281: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 30422  0056D4  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 30423                           
 30424                           ;USBapp.c: 283: EUSART_Initialize();
 30425  0056D8  ECDC  F02C         	call	i2_EUSART_Initialize	;wreg free
 30426  0056DC  0012               	return		;funcret
 30427  0056DE                     __end_of_USART_mySetLineCodingHandler:
 30428                           	opt stack 0
 30429                           tosu	equ	0xFFF
 30430                           tosh	equ	0xFFE
 30431                           tosl	equ	0xFFD
 30432                           pclatu	equ	0xFFB
 30433                           pclath	equ	0xFFA
 30434                           tblptru	equ	0xFF8
 30435                           tblptrh	equ	0xFF7
 30436                           tblptrl	equ	0xFF6
 30437                           tablat	equ	0xFF5
 30438                           prodh	equ	0xFF4
 30439                           prodl	equ	0xFF3
 30440                           intcon	equ	0xFF2
 30441                           intcon3	equ	0xFF0
 30442                           indf0	equ	0xFEF
 30443                           postinc0	equ	0xFEE
 30444                           fsr0h	equ	0xFEA
 30445                           fsr0l	equ	0xFE9
 30446                           wreg	equ	0xFE8
 30447                           indf1	equ	0xFE7
 30448                           postdec1	equ	0xFE5
 30449                           fsr1h	equ	0xFE2
 30450                           fsr1l	equ	0xFE1
 30451                           indf2	equ	0xFDF
 30452                           postinc2	equ	0xFDE
 30453                           postdec2	equ	0xFDD
 30454                           plusw2	equ	0xFDB
 30455                           fsr2h	equ	0xFDA
 30456                           fsr2l	equ	0xFD9
 30457                           status	equ	0xFD8
 30458                           
 30459 ;; *************** function i2_EUSART_Initialize *****************
 30460 ;; Defined at:
 30461 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 30462 ;; Parameters:    Size  Location     Type
 30463 ;;		None
 30464 ;; Auto vars:     Size  Location     Type
 30465 ;;		None
 30466 ;; Return value:  Size  Location     Type
 30467 ;;		None               void
 30468 ;; Registers used:
 30469 ;;		wreg, status,2
 30470 ;; Tracked objects:
 30471 ;;		On entry : 0/0
 30472 ;;		On exit  : 0/0
 30473 ;;		Unchanged: 0/0
 30474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30475 ;;      Params:         0       0       0       0       0       0       0       0       0
 30476 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30477 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30478 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30479 ;;Total ram usage:        0 bytes
 30480 ;; Hardware stack levels used:    1
 30481 ;; This function calls:
 30482 ;;		Nothing
 30483 ;; This function is called by:
 30484 ;;		_USBapp_CdcEmulatorInitialize
 30485 ;;		_USART_mySetLineCodingHandler
 30486 ;; This function uses a non-reentrant model
 30487 ;;
 30488                           
 30489                           	psect	text134
 30490  0059B8                     __ptext134:
 30491                           	opt stack 0
 30492  0059B8                     i2_EUSART_Initialize:
 30493                           	opt stack 17
 30494                           
 30495                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 30496                           
 30497                           ;incstack = 0
 30498  0059B8  9A9D               	bcf	3997,5,c	;volatile
 30499                           
 30500                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 30501  0059BA  989D               	bcf	3997,4,c	;volatile
 30502                           
 30503                           ;eusart.c: 85: BAUDCON = 0x48;
 30504  0059BC  0E48               	movlw	72
 30505  0059BE  6EB8               	movwf	4024,c	;volatile
 30506                           
 30507                           ;eusart.c: 88: RCSTA = 0x90;
 30508  0059C0  0E90               	movlw	144
 30509  0059C2  6EAB               	movwf	4011,c	;volatile
 30510                           
 30511                           ;eusart.c: 91: TXSTA = 0x26;
 30512  0059C4  0E26               	movlw	38
 30513  0059C6  6EAC               	movwf	4012,c	;volatile
 30514                           
 30515                           ;eusart.c: 95: SPBRG = 0xD0;
 30516  0059C8  0ED0               	movlw	208
 30517  0059CA  6EAF               	movwf	4015,c	;volatile
 30518                           
 30519                           ;eusart.c: 100: SPBRGH = 0x00;
 30520  0059CC  0E00               	movlw	0
 30521  0059CE  6EB0               	movwf	4016,c	;volatile
 30522                           
 30523                           ;eusart.c: 103: eusartTxHead = 0;
 30524  0059D0  0E00               	movlw	0
 30525  0059D2  0100               	movlb	0	; () banked
 30526  0059D4  6F98               	movwf	_eusartTxHead& (0+255),b
 30527                           
 30528                           ;eusart.c: 104: eusartTxTail = 0;
 30529  0059D6  0E00               	movlw	0
 30530  0059D8  0100               	movlb	0	; () banked
 30531  0059DA  6F99               	movwf	_eusartTxTail& (0+255),b
 30532                           
 30533                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 30534  0059DC  0E40               	movlw	64
 30535  0059DE  6E4E               	movwf	_eusartTxBufferRemaining,c	;volatile
 30536                           
 30537                           ;eusart.c: 107: eusartRxHead = 0;
 30538  0059E0  0E00               	movlw	0
 30539  0059E2  0100               	movlb	0	; () banked
 30540  0059E4  6F96               	movwf	_eusartRxHead& (0+255),b
 30541                           
 30542                           ;eusart.c: 108: eusartRxTail = 0;
 30543  0059E6  0E00               	movlw	0
 30544  0059E8  0100               	movlb	0	; () banked
 30545  0059EA  6F97               	movwf	_eusartRxTail& (0+255),b
 30546                           
 30547                           ;eusart.c: 109: eusartRxCount = 0;
 30548  0059EC  0E00               	movlw	0
 30549  0059EE  6E4D               	movwf	_eusartRxCount,c	;volatile
 30550                           
 30551                           ; BSR set to: 0
 30552                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 30553  0059F0  8A9D               	bsf	3997,5,c	;volatile
 30554                           
 30555                           ; BSR set to: 0
 30556                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 30557  0059F2  88AB               	bsf	4011,4,c	;volatile
 30558                           
 30559                           ; BSR set to: 0
 30560  0059F4  0012               	return		;funcret
 30561  0059F6                     __end_ofi2_EUSART_Initialize:
 30562                           	opt stack 0
 30563                           tosu	equ	0xFFF
 30564                           tosh	equ	0xFFE
 30565                           tosl	equ	0xFFD
 30566                           pclatu	equ	0xFFB
 30567                           pclath	equ	0xFFA
 30568                           tblptru	equ	0xFF8
 30569                           tblptrh	equ	0xFF7
 30570                           tblptrl	equ	0xFF6
 30571                           tablat	equ	0xFF5
 30572                           prodh	equ	0xFF4
 30573                           prodl	equ	0xFF3
 30574                           intcon	equ	0xFF2
 30575                           intcon3	equ	0xFF0
 30576                           indf0	equ	0xFEF
 30577                           postinc0	equ	0xFEE
 30578                           fsr0h	equ	0xFEA
 30579                           fsr0l	equ	0xFE9
 30580                           wreg	equ	0xFE8
 30581                           indf1	equ	0xFE7
 30582                           postdec1	equ	0xFE5
 30583                           fsr1h	equ	0xFE2
 30584                           fsr1l	equ	0xFE1
 30585                           indf2	equ	0xFDF
 30586                           postinc2	equ	0xFDE
 30587                           postdec2	equ	0xFDD
 30588                           plusw2	equ	0xFDB
 30589                           fsr2h	equ	0xFDA
 30590                           fsr2l	equ	0xFD9
 30591                           status	equ	0xFD8
 30592                           
 30593 ;; *************** function ___lldiv *****************
 30594 ;; Defined at:
 30595 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 30596 ;; Parameters:    Size  Location     Type
 30597 ;;  dividend        4    0[COMRAM] unsigned long 
 30598 ;;  divisor         4    4[COMRAM] unsigned long 
 30599 ;; Auto vars:     Size  Location     Type
 30600 ;;  quotient        4    8[COMRAM] unsigned long 
 30601 ;;  counter         1   12[COMRAM] unsigned char 
 30602 ;; Return value:  Size  Location     Type
 30603 ;;                  4    0[COMRAM] unsigned long 
 30604 ;; Registers used:
 30605 ;;		wreg, status,2, status,0
 30606 ;; Tracked objects:
 30607 ;;		On entry : 0/0
 30608 ;;		On exit  : 0/0
 30609 ;;		Unchanged: 0/0
 30610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30611 ;;      Params:         8       0       0       0       0       0       0       0       0
 30612 ;;      Locals:         5       0       0       0       0       0       0       0       0
 30613 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30614 ;;      Totals:        13       0       0       0       0       0       0       0       0
 30615 ;;Total ram usage:       13 bytes
 30616 ;; Hardware stack levels used:    1
 30617 ;; This function calls:
 30618 ;;		Nothing
 30619 ;; This function is called by:
 30620 ;;		_USART_mySetLineCodingHandler
 30621 ;; This function uses a non-reentrant model
 30622 ;;
 30623                           
 30624                           	psect	text135
 30625  004DC2                     __ptext135:
 30626                           	opt stack 0
 30627  004DC2                     ___lldiv:
 30628                           	opt stack 15
 30629                           
 30630                           ; BSR set to: 0
 30631                           ;incstack = 0
 30632  004DC2  0E00               	movlw	0
 30633  004DC4  6E09               	movwf	___lldiv@quotient,c
 30634  004DC6  0E00               	movlw	0
 30635  004DC8  6E0A               	movwf	___lldiv@quotient+1,c
 30636  004DCA  0E00               	movlw	0
 30637  004DCC  6E0B               	movwf	___lldiv@quotient+2,c
 30638  004DCE  0E00               	movlw	0
 30639  004DD0  6E0C               	movwf	___lldiv@quotient+3,c
 30640  004DD2  5005               	movf	___lldiv@divisor,w,c
 30641  004DD4  1006               	iorwf	___lldiv@divisor+1,w,c
 30642  004DD6  1007               	iorwf	___lldiv@divisor+2,w,c
 30643  004DD8  1008               	iorwf	___lldiv@divisor+3,w,c
 30644  004DDA  B4D8               	btfsc	status,2,c
 30645  004DDC  D02F               	goto	i2l2555
 30646  004DDE  0E01               	movlw	1
 30647  004DE0  6E0D               	movwf	___lldiv@counter,c
 30648  004DE2  D007               	goto	i2l7364
 30649  004DE4                     i2l7362:
 30650  004DE4  90D8               	bcf	status,0,c
 30651  004DE6  3605               	rlcf	___lldiv@divisor,f,c
 30652  004DE8  3606               	rlcf	___lldiv@divisor+1,f,c
 30653  004DEA  3607               	rlcf	___lldiv@divisor+2,f,c
 30654  004DEC  3608               	rlcf	___lldiv@divisor+3,f,c
 30655  004DEE  2A0D               	incf	___lldiv@counter,f,c
 30656  004DF0  D000               	goto	i2l7364
 30657  004DF2                     i2l7364:
 30658  004DF2  BE08               	btfsc	___lldiv@divisor+3,7,c
 30659  004DF4  D002               	goto	i2l7366
 30660  004DF6  D7F6               	goto	i2l7362
 30661  004DF8  D000               	goto	i2l7366
 30662  004DFA                     i2l7366:
 30663  004DFA  90D8               	bcf	status,0,c
 30664  004DFC  3609               	rlcf	___lldiv@quotient,f,c
 30665  004DFE  360A               	rlcf	___lldiv@quotient+1,f,c
 30666  004E00  360B               	rlcf	___lldiv@quotient+2,f,c
 30667  004E02  360C               	rlcf	___lldiv@quotient+3,f,c
 30668  004E04  5005               	movf	___lldiv@divisor,w,c
 30669  004E06  5C01               	subwf	___lldiv@dividend,w,c
 30670  004E08  5006               	movf	___lldiv@divisor+1,w,c
 30671  004E0A  5802               	subwfb	___lldiv@dividend+1,w,c
 30672  004E0C  5007               	movf	___lldiv@divisor+2,w,c
 30673  004E0E  5803               	subwfb	___lldiv@dividend+2,w,c
 30674  004E10  5008               	movf	___lldiv@divisor+3,w,c
 30675  004E12  5804               	subwfb	___lldiv@dividend+3,w,c
 30676  004E14  A0D8               	btfss	status,0,c
 30677  004E16  D00A               	goto	i2l7374
 30678  004E18  5005               	movf	___lldiv@divisor,w,c
 30679  004E1A  5E01               	subwf	___lldiv@dividend,f,c
 30680  004E1C  5006               	movf	___lldiv@divisor+1,w,c
 30681  004E1E  5A02               	subwfb	___lldiv@dividend+1,f,c
 30682  004E20  5007               	movf	___lldiv@divisor+2,w,c
 30683  004E22  5A03               	subwfb	___lldiv@dividend+2,f,c
 30684  004E24  5008               	movf	___lldiv@divisor+3,w,c
 30685  004E26  5A04               	subwfb	___lldiv@dividend+3,f,c
 30686  004E28  8009               	bsf	___lldiv@quotient,0,c
 30687  004E2A  D000               	goto	i2l7374
 30688  004E2C                     i2l7374:
 30689  004E2C  90D8               	bcf	status,0,c
 30690  004E2E  3208               	rrcf	___lldiv@divisor+3,f,c
 30691  004E30  3207               	rrcf	___lldiv@divisor+2,f,c
 30692  004E32  3206               	rrcf	___lldiv@divisor+1,f,c
 30693  004E34  3205               	rrcf	___lldiv@divisor,f,c
 30694  004E36  2E0D               	decfsz	___lldiv@counter,f,c
 30695  004E38  D7E0               	goto	i2l7366
 30696  004E3A  D000               	goto	i2l2555
 30697  004E3C                     i2l2555:
 30698  004E3C  C009  F001         	movff	___lldiv@quotient,?___lldiv
 30699  004E40  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 30700  004E44  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 30701  004E48  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 30702  004E4C  0012               	return		;funcret
 30703  004E4E                     __end_of___lldiv:
 30704                           	opt stack 0
 30705                           tosu	equ	0xFFF
 30706                           tosh	equ	0xFFE
 30707                           tosl	equ	0xFFD
 30708                           pclatu	equ	0xFFB
 30709                           pclath	equ	0xFFA
 30710                           tblptru	equ	0xFF8
 30711                           tblptrh	equ	0xFF7
 30712                           tblptrl	equ	0xFF6
 30713                           tablat	equ	0xFF5
 30714                           prodh	equ	0xFF4
 30715                           prodl	equ	0xFF3
 30716                           intcon	equ	0xFF2
 30717                           intcon3	equ	0xFF0
 30718                           indf0	equ	0xFEF
 30719                           postinc0	equ	0xFEE
 30720                           fsr0h	equ	0xFEA
 30721                           fsr0l	equ	0xFE9
 30722                           wreg	equ	0xFE8
 30723                           indf1	equ	0xFE7
 30724                           postdec1	equ	0xFE5
 30725                           fsr1h	equ	0xFE2
 30726                           fsr1l	equ	0xFE1
 30727                           indf2	equ	0xFDF
 30728                           postinc2	equ	0xFDE
 30729                           postdec2	equ	0xFDD
 30730                           plusw2	equ	0xFDB
 30731                           fsr2h	equ	0xFDA
 30732                           fsr2l	equ	0xFD9
 30733                           status	equ	0xFD8
 30734                           
 30735 ;; *************** function _TMRapp_Tick *****************
 30736 ;; Defined at:
 30737 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 30738 ;; Parameters:    Size  Location     Type
 30739 ;;		None
 30740 ;; Auto vars:     Size  Location     Type
 30741 ;;		None
 30742 ;; Return value:  Size  Location     Type
 30743 ;;		None               void
 30744 ;; Registers used:
 30745 ;;		None
 30746 ;; Tracked objects:
 30747 ;;		On entry : 0/0
 30748 ;;		On exit  : 0/0
 30749 ;;		Unchanged: 0/0
 30750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30751 ;;      Params:         0       0       0       0       0       0       0       0       0
 30752 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30753 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30754 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30755 ;;Total ram usage:        0 bytes
 30756 ;; Hardware stack levels used:    1
 30757 ;; This function calls:
 30758 ;;		Nothing
 30759 ;; This function is called by:
 30760 ;;		_INTERRUPT_InterruptManager
 30761 ;; This function uses a non-reentrant model
 30762 ;;
 30763                           
 30764                           	psect	text136
 30765  006056                     __ptext136:
 30766                           	opt stack 0
 30767  006056                     _TMRapp_Tick:
 30768                           	opt stack 20
 30769                           
 30770                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 30771                           
 30772                           ;incstack = 0
 30773  006056  0100               	movlb	0	; () banked
 30774  006058  818E               	bsf	_appTimer& (0+255),0,b
 30775                           
 30776                           ; BSR set to: 0
 30777  00605A  0012               	return		;funcret
 30778  00605C                     __end_of_TMRapp_Tick:
 30779                           	opt stack 0
 30780                           tosu	equ	0xFFF
 30781                           tosh	equ	0xFFE
 30782                           tosl	equ	0xFFD
 30783                           pclatu	equ	0xFFB
 30784                           pclath	equ	0xFFA
 30785                           tblptru	equ	0xFF8
 30786                           tblptrh	equ	0xFF7
 30787                           tblptrl	equ	0xFF6
 30788                           tablat	equ	0xFF5
 30789                           prodh	equ	0xFF4
 30790                           prodl	equ	0xFF3
 30791                           intcon	equ	0xFF2
 30792                           intcon3	equ	0xFF0
 30793                           indf0	equ	0xFEF
 30794                           postinc0	equ	0xFEE
 30795                           fsr0h	equ	0xFEA
 30796                           fsr0l	equ	0xFE9
 30797                           wreg	equ	0xFE8
 30798                           indf1	equ	0xFE7
 30799                           postdec1	equ	0xFE5
 30800                           fsr1h	equ	0xFE2
 30801                           fsr1l	equ	0xFE1
 30802                           indf2	equ	0xFDF
 30803                           postinc2	equ	0xFDE
 30804                           postdec2	equ	0xFDD
 30805                           plusw2	equ	0xFDB
 30806                           fsr2h	equ	0xFDA
 30807                           fsr2l	equ	0xFD9
 30808                           status	equ	0xFD8
 30809                           
 30810 ;; *************** function _TMR3_ISR *****************
 30811 ;; Defined at:
 30812 ;;		line 161 in file "../Includes/MccGenerated/tmr3.c"
 30813 ;; Parameters:    Size  Location     Type
 30814 ;;		None
 30815 ;; Auto vars:     Size  Location     Type
 30816 ;;		None
 30817 ;; Return value:  Size  Location     Type
 30818 ;;		None               void
 30819 ;; Registers used:
 30820 ;;		wreg, status,2
 30821 ;; Tracked objects:
 30822 ;;		On entry : 0/0
 30823 ;;		On exit  : 0/0
 30824 ;;		Unchanged: 0/0
 30825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30826 ;;      Params:         0       0       0       0       0       0       0       0       0
 30827 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30828 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30829 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30830 ;;Total ram usage:        0 bytes
 30831 ;; Hardware stack levels used:    1
 30832 ;; This function calls:
 30833 ;;		Nothing
 30834 ;; This function is called by:
 30835 ;;		_INTERRUPT_InterruptManager
 30836 ;; This function uses a non-reentrant model
 30837 ;;
 30838                           
 30839                           	psect	text137
 30840  005E38                     __ptext137:
 30841                           	opt stack 0
 30842  005E38                     _TMR3_ISR:
 30843                           	opt stack 20
 30844                           
 30845                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 30846                           
 30847                           ; BSR set to: 0
 30848                           ;incstack = 0
 30849  005E38  92A1               	bcf	4001,1,c	;volatile
 30850                           
 30851                           ;tmr3.c: 167: if(LATEbits.LATE2 == 1)
 30852  005E3A  A48D               	btfss	3981,2,c	;volatile
 30853  005E3C  D006               	goto	i2l1572
 30854                           
 30855                           ;tmr3.c: 168: {
 30856                           ;tmr3.c: 169: LATEbits.LATE2 = 0;
 30857  005E3E  948D               	bcf	3981,2,c	;volatile
 30858                           
 30859                           ;tmr3.c: 170: TMR3H = 0xD5;
 30860  005E40  0ED5               	movlw	213
 30861  005E42  6EB3               	movwf	4019,c	;volatile
 30862                           
 30863                           ;tmr3.c: 171: TMR3L = 0xD0;
 30864  005E44  0ED0               	movlw	208
 30865  005E46  6EB2               	movwf	4018,c	;volatile
 30866                           
 30867                           ;tmr3.c: 172: } else {
 30868  005E48  0012               	return	
 30869  005E4A                     i2l1572:
 30870                           
 30871                           ;tmr3.c: 173: LATEbits.LATE2 = 1;
 30872  005E4A  848D               	bsf	3981,2,c	;volatile
 30873                           
 30874                           ;tmr3.c: 174: TMR3H = 0xFB;
 30875  005E4C  0EFB               	movlw	251
 30876  005E4E  6EB3               	movwf	4019,c	;volatile
 30877                           
 30878                           ;tmr3.c: 175: TMR3L = 0x50;
 30879  005E50  0E50               	movlw	80
 30880  005E52  6EB2               	movwf	4018,c	;volatile
 30881  005E54  0012               	return	
 30882  005E56  0012               	return		;funcret
 30883  005E58                     __end_of_TMR3_ISR:
 30884                           	opt stack 0
 30885                           tosu	equ	0xFFF
 30886                           tosh	equ	0xFFE
 30887                           tosl	equ	0xFFD
 30888                           pclatu	equ	0xFFB
 30889                           pclath	equ	0xFFA
 30890                           tblptru	equ	0xFF8
 30891                           tblptrh	equ	0xFF7
 30892                           tblptrl	equ	0xFF6
 30893                           tablat	equ	0xFF5
 30894                           prodh	equ	0xFF4
 30895                           prodl	equ	0xFF3
 30896                           intcon	equ	0xFF2
 30897                           intcon3	equ	0xFF0
 30898                           indf0	equ	0xFEF
 30899                           postinc0	equ	0xFEE
 30900                           fsr0h	equ	0xFEA
 30901                           fsr0l	equ	0xFE9
 30902                           wreg	equ	0xFE8
 30903                           indf1	equ	0xFE7
 30904                           postdec1	equ	0xFE5
 30905                           fsr1h	equ	0xFE2
 30906                           fsr1l	equ	0xFE1
 30907                           indf2	equ	0xFDF
 30908                           postinc2	equ	0xFDE
 30909                           postdec2	equ	0xFDD
 30910                           plusw2	equ	0xFDB
 30911                           fsr2h	equ	0xFDA
 30912                           fsr2l	equ	0xFD9
 30913                           status	equ	0xFD8
 30914                           
 30915 ;; *************** function _TMR1_ISR *****************
 30916 ;; Defined at:
 30917 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 30918 ;; Parameters:    Size  Location     Type
 30919 ;;		None
 30920 ;; Auto vars:     Size  Location     Type
 30921 ;;		None
 30922 ;; Return value:  Size  Location     Type
 30923 ;;		None               void
 30924 ;; Registers used:
 30925 ;;		wreg, status,2
 30926 ;; Tracked objects:
 30927 ;;		On entry : 0/0
 30928 ;;		On exit  : 0/0
 30929 ;;		Unchanged: 0/0
 30930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30931 ;;      Params:         0       0       0       0       0       0       0       0       0
 30932 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30933 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30934 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30935 ;;Total ram usage:        0 bytes
 30936 ;; Hardware stack levels used:    1
 30937 ;; This function calls:
 30938 ;;		Nothing
 30939 ;; This function is called by:
 30940 ;;		_INTERRUPT_InterruptManager
 30941 ;; This function uses a non-reentrant model
 30942 ;;
 30943                           
 30944                           	psect	text138
 30945  005FEC                     __ptext138:
 30946                           	opt stack 0
 30947  005FEC                     _TMR1_ISR:
 30948                           	opt stack 20
 30949                           
 30950                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 30951                           
 30952                           ;incstack = 0
 30953  005FEC  909E               	bcf	3998,0,c	;volatile
 30954                           
 30955                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 30956  005FEE  5043               	movf	_timer1ReloadVal+1,w,c	;volatile
 30957  005FF0  6ECF               	movwf	4047,c	;volatile
 30958                           
 30959                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 30960  005FF2  C042  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 30961  005FF6  0012               	return		;funcret
 30962  005FF8                     __end_of_TMR1_ISR:
 30963                           	opt stack 0
 30964                           tosu	equ	0xFFF
 30965                           tosh	equ	0xFFE
 30966                           tosl	equ	0xFFD
 30967                           pclatu	equ	0xFFB
 30968                           pclath	equ	0xFFA
 30969                           tblptru	equ	0xFF8
 30970                           tblptrh	equ	0xFF7
 30971                           tblptrl	equ	0xFF6
 30972                           tablat	equ	0xFF5
 30973                           prodh	equ	0xFF4
 30974                           prodl	equ	0xFF3
 30975                           intcon	equ	0xFF2
 30976                           intcon3	equ	0xFF0
 30977                           indf0	equ	0xFEF
 30978                           postinc0	equ	0xFEE
 30979                           fsr0h	equ	0xFEA
 30980                           fsr0l	equ	0xFE9
 30981                           wreg	equ	0xFE8
 30982                           indf1	equ	0xFE7
 30983                           postdec1	equ	0xFE5
 30984                           fsr1h	equ	0xFE2
 30985                           fsr1l	equ	0xFE1
 30986                           indf2	equ	0xFDF
 30987                           postinc2	equ	0xFDE
 30988                           postdec2	equ	0xFDD
 30989                           plusw2	equ	0xFDB
 30990                           fsr2h	equ	0xFDA
 30991                           fsr2l	equ	0xFD9
 30992                           status	equ	0xFD8
 30993                           
 30994 ;; *************** function _EUSART_Transmit_ISR *****************
 30995 ;; Defined at:
 30996 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 30997 ;; Parameters:    Size  Location     Type
 30998 ;;		None
 30999 ;; Auto vars:     Size  Location     Type
 31000 ;;		None
 31001 ;; Return value:  Size  Location     Type
 31002 ;;		None               void
 31003 ;; Registers used:
 31004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31005 ;; Tracked objects:
 31006 ;;		On entry : 0/0
 31007 ;;		On exit  : 0/0
 31008 ;;		Unchanged: 0/0
 31009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31010 ;;      Params:         0       0       0       0       0       0       0       0       0
 31011 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31012 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31013 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31014 ;;Total ram usage:        0 bytes
 31015 ;; Hardware stack levels used:    1
 31016 ;; This function calls:
 31017 ;;		Nothing
 31018 ;; This function is called by:
 31019 ;;		_INTERRUPT_InterruptManager
 31020 ;; This function uses a non-reentrant model
 31021 ;;
 31022                           
 31023                           	psect	text139
 31024  005AA6                     __ptext139:
 31025                           	opt stack 0
 31026  005AA6                     _EUSART_Transmit_ISR:
 31027                           	opt stack 20
 31028                           
 31029                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 31030                           
 31031                           ;incstack = 0
 31032  005AA6  0E40               	movlw	64
 31033  005AA8  604E               	cpfslt	_eusartTxBufferRemaining,c	;volatile
 31034  005AAA  D017               	goto	i2l1142
 31035                           
 31036                           ;eusart.c: 167: {
 31037                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 31038  005AAC  0100               	movlb	0	; () banked
 31039  005AAE  5199               	movf	_eusartTxTail& (0+255),w,b
 31040  005AB0  0D01               	mullw	1
 31041  005AB2  0E40               	movlw	low _eusartTxBuffer
 31042  005AB4  24F3               	addwf	prodl,w,c
 31043  005AB6  6ED9               	movwf	fsr2l,c
 31044  005AB8  0E02               	movlw	high _eusartTxBuffer
 31045  005ABA  20F4               	addwfc	prodh,w,c
 31046  005ABC  6EDA               	movwf	fsr2h,c
 31047  005ABE  50DF               	movf	indf2,w,c
 31048  005AC0  6EAD               	movwf	4013,c	;volatile
 31049                           
 31050                           ; BSR set to: 0
 31051  005AC2  0100               	movlb	0	; () banked
 31052  005AC4  2B99               	incf	_eusartTxTail& (0+255),f,b
 31053                           
 31054                           ; BSR set to: 0
 31055                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 31056  005AC6  0E3F               	movlw	63
 31057  005AC8  0100               	movlb	0	; () banked
 31058  005ACA  6599               	cpfsgt	_eusartTxTail& (0+255),b
 31059  005ACC  D004               	goto	i2l10526
 31060                           
 31061                           ; BSR set to: 0
 31062                           ;eusart.c: 170: {
 31063                           ;eusart.c: 171: eusartTxTail = 0;
 31064  005ACE  0E00               	movlw	0
 31065  005AD0  0100               	movlb	0	; () banked
 31066  005AD2  6F99               	movwf	_eusartTxTail& (0+255),b
 31067  005AD4  D000               	goto	i2l10526
 31068  005AD6                     i2l10526:
 31069                           
 31070                           ; BSR set to: 0
 31071                           ;eusart.c: 172: }
 31072                           ;eusart.c: 173: eusartTxBufferRemaining++;
 31073  005AD6  2A4E               	incf	_eusartTxBufferRemaining,f,c	;volatile
 31074                           
 31075                           ;eusart.c: 174: }
 31076  005AD8  0012               	return	
 31077  005ADA                     i2l1142:
 31078                           
 31079                           ;eusart.c: 175: else
 31080                           ;eusart.c: 176: {
 31081                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 31082  005ADA  989D               	bcf	3997,4,c	;volatile
 31083  005ADC  0012               	return	
 31084  005ADE  0012               	return		;funcret
 31085  005AE0                     __end_of_EUSART_Transmit_ISR:
 31086                           	opt stack 0
 31087                           tosu	equ	0xFFF
 31088                           tosh	equ	0xFFE
 31089                           tosl	equ	0xFFD
 31090                           pclatu	equ	0xFFB
 31091                           pclath	equ	0xFFA
 31092                           tblptru	equ	0xFF8
 31093                           tblptrh	equ	0xFF7
 31094                           tblptrl	equ	0xFF6
 31095                           tablat	equ	0xFF5
 31096                           prodh	equ	0xFF4
 31097                           prodl	equ	0xFF3
 31098                           intcon	equ	0xFF2
 31099                           intcon3	equ	0xFF0
 31100                           indf0	equ	0xFEF
 31101                           postinc0	equ	0xFEE
 31102                           fsr0h	equ	0xFEA
 31103                           fsr0l	equ	0xFE9
 31104                           wreg	equ	0xFE8
 31105                           indf1	equ	0xFE7
 31106                           postdec1	equ	0xFE5
 31107                           fsr1h	equ	0xFE2
 31108                           fsr1l	equ	0xFE1
 31109                           indf2	equ	0xFDF
 31110                           postinc2	equ	0xFDE
 31111                           postdec2	equ	0xFDD
 31112                           plusw2	equ	0xFDB
 31113                           fsr2h	equ	0xFDA
 31114                           fsr2l	equ	0xFD9
 31115                           status	equ	0xFD8
 31116                           
 31117 ;; *************** function _EUSART_Receive_ISR *****************
 31118 ;; Defined at:
 31119 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 31120 ;; Parameters:    Size  Location     Type
 31121 ;;		None
 31122 ;; Auto vars:     Size  Location     Type
 31123 ;;		None
 31124 ;; Return value:  Size  Location     Type
 31125 ;;		None               void
 31126 ;; Registers used:
 31127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31128 ;; Tracked objects:
 31129 ;;		On entry : 0/0
 31130 ;;		On exit  : 0/0
 31131 ;;		Unchanged: 0/0
 31132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31133 ;;      Params:         0       0       0       0       0       0       0       0       0
 31134 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31135 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31136 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31137 ;;Total ram usage:        0 bytes
 31138 ;; Hardware stack levels used:    1
 31139 ;; This function calls:
 31140 ;;		Nothing
 31141 ;; This function is called by:
 31142 ;;		_INTERRUPT_InterruptManager
 31143 ;; This function uses a non-reentrant model
 31144 ;;
 31145                           
 31146                           	psect	text140
 31147  005AE0                     __ptext140:
 31148                           	opt stack 0
 31149  005AE0                     _EUSART_Receive_ISR:
 31150                           	opt stack 20
 31151                           
 31152                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 31153                           
 31154                           ;incstack = 0
 31155  005AE0  A2AB               	btfss	4011,1,c	;volatile
 31156  005AE2  D003               	goto	i2l10532
 31157                           
 31158                           ;eusart.c: 184: {
 31159                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 31160  005AE4  98AB               	bcf	4011,4,c	;volatile
 31161                           
 31162                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 31163  005AE6  88AB               	bsf	4011,4,c	;volatile
 31164                           
 31165                           ;eusart.c: 189: }
 31166  005AE8  0012               	return	
 31167  005AEA                     i2l10532:
 31168                           
 31169                           ;eusart.c: 190: else
 31170                           ;eusart.c: 191: {
 31171                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 31172  005AEA  0100               	movlb	0	; () banked
 31173  005AEC  5196               	movf	_eusartRxHead& (0+255),w,b
 31174  005AEE  0D01               	mullw	1
 31175  005AF0  0E00               	movlw	low _eusartRxBuffer
 31176  005AF2  24F3               	addwf	prodl,w,c
 31177  005AF4  6ED9               	movwf	fsr2l,c
 31178  005AF6  0E02               	movlw	high _eusartRxBuffer
 31179  005AF8  20F4               	addwfc	prodh,w,c
 31180  005AFA  6EDA               	movwf	fsr2h,c
 31181  005AFC  CFAE FFDF          	movff	4014,indf2	;volatile
 31182                           
 31183                           ; BSR set to: 0
 31184  005B00  0100               	movlb	0	; () banked
 31185  005B02  2B96               	incf	_eusartRxHead& (0+255),f,b
 31186                           
 31187                           ; BSR set to: 0
 31188                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 31189  005B04  0E3F               	movlw	63
 31190  005B06  0100               	movlb	0	; () banked
 31191  005B08  6596               	cpfsgt	_eusartRxHead& (0+255),b
 31192  005B0A  D004               	goto	i2l10540
 31193                           
 31194                           ; BSR set to: 0
 31195                           ;eusart.c: 195: {
 31196                           ;eusart.c: 196: eusartRxHead = 0;
 31197  005B0C  0E00               	movlw	0
 31198  005B0E  0100               	movlb	0	; () banked
 31199  005B10  6F96               	movwf	_eusartRxHead& (0+255),b
 31200  005B12  D000               	goto	i2l10540
 31201  005B14                     i2l10540:
 31202                           
 31203                           ; BSR set to: 0
 31204                           ;eusart.c: 197: }
 31205                           ;eusart.c: 198: eusartRxCount++;
 31206  005B14  2A4D               	incf	_eusartRxCount,f,c	;volatile
 31207  005B16  0012               	return	
 31208                           
 31209                           ; BSR set to: 0
 31210  005B18  0012               	return		;funcret
 31211  005B1A                     __end_of_EUSART_Receive_ISR:
 31212                           	opt stack 0
 31213                           tosu	equ	0xFFF
 31214                           tosh	equ	0xFFE
 31215                           tosl	equ	0xFFD
 31216                           pclatu	equ	0xFFB
 31217                           pclath	equ	0xFFA
 31218                           tblptru	equ	0xFF8
 31219                           tblptrh	equ	0xFF7
 31220                           tblptrl	equ	0xFF6
 31221                           tablat	equ	0xFF5
 31222                           prodh	equ	0xFF4
 31223                           prodl	equ	0xFF3
 31224                           intcon	equ	0xFF2
 31225                           intcon3	equ	0xFF0
 31226                           indf0	equ	0xFEF
 31227                           postinc0	equ	0xFEE
 31228                           fsr0h	equ	0xFEA
 31229                           fsr0l	equ	0xFE9
 31230                           wreg	equ	0xFE8
 31231                           indf1	equ	0xFE7
 31232                           postdec1	equ	0xFE5
 31233                           fsr1h	equ	0xFE2
 31234                           fsr1l	equ	0xFE1
 31235                           indf2	equ	0xFDF
 31236                           postinc2	equ	0xFDE
 31237                           postdec2	equ	0xFDD
 31238                           plusw2	equ	0xFDB
 31239                           fsr2h	equ	0xFDA
 31240                           fsr2l	equ	0xFD9
 31241                           status	equ	0xFD8
 31242                           
 31243 ;; *************** function _CMP1_ISR *****************
 31244 ;; Defined at:
 31245 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 31246 ;; Parameters:    Size  Location     Type
 31247 ;;		None
 31248 ;; Auto vars:     Size  Location     Type
 31249 ;;		None
 31250 ;; Return value:  Size  Location     Type
 31251 ;;		None               void
 31252 ;; Registers used:
 31253 ;;		None
 31254 ;; Tracked objects:
 31255 ;;		On entry : 0/0
 31256 ;;		On exit  : 0/0
 31257 ;;		Unchanged: 0/0
 31258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31259 ;;      Params:         0       0       0       0       0       0       0       0       0
 31260 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31261 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31262 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31263 ;;Total ram usage:        0 bytes
 31264 ;; Hardware stack levels used:    1
 31265 ;; This function calls:
 31266 ;;		Nothing
 31267 ;; This function is called by:
 31268 ;;		_INTERRUPT_InterruptManager
 31269 ;; This function uses a non-reentrant model
 31270 ;;
 31271                           
 31272                           	psect	text141
 31273  006068                     __ptext141:
 31274                           	opt stack 0
 31275  006068                     _CMP1_ISR:
 31276                           	opt stack 20
 31277                           
 31278                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 31279                           
 31280                           ;incstack = 0
 31281  006068  9CA1               	bcf	4001,6,c	;volatile
 31282  00606A  0012               	return		;funcret
 31283  00606C                     __end_of_CMP1_ISR:
 31284                           	opt stack 0
 31285                           tosu	equ	0xFFF
 31286                           tosh	equ	0xFFE
 31287                           tosl	equ	0xFFD
 31288                           pclatu	equ	0xFFB
 31289                           pclath	equ	0xFFA
 31290                           tblptru	equ	0xFF8
 31291                           tblptrh	equ	0xFF7
 31292                           tblptrl	equ	0xFF6
 31293                           tablat	equ	0xFF5
 31294                           prodh	equ	0xFF4
 31295                           prodl	equ	0xFF3
 31296                           intcon	equ	0xFF2
 31297                           intcon3	equ	0xFF0
 31298                           indf0	equ	0xFEF
 31299                           postinc0	equ	0xFEE
 31300                           fsr0h	equ	0xFEA
 31301                           fsr0l	equ	0xFE9
 31302                           wreg	equ	0xFE8
 31303                           indf1	equ	0xFE7
 31304                           postdec1	equ	0xFE5
 31305                           fsr1h	equ	0xFE2
 31306                           fsr1l	equ	0xFE1
 31307                           indf2	equ	0xFDF
 31308                           postinc2	equ	0xFDE
 31309                           postdec2	equ	0xFDD
 31310                           plusw2	equ	0xFDB
 31311                           fsr2h	equ	0xFDA
 31312                           fsr2l	equ	0xFD9
 31313                           status	equ	0xFD8
 31314                           tosu	equ	0xFFF
 31315                           tosh	equ	0xFFE
 31316                           tosl	equ	0xFFD
 31317                           pclatu	equ	0xFFB
 31318                           pclath	equ	0xFFA
 31319                           tblptru	equ	0xFF8
 31320                           tblptrh	equ	0xFF7
 31321                           tblptrl	equ	0xFF6
 31322                           tablat	equ	0xFF5
 31323                           prodh	equ	0xFF4
 31324                           prodl	equ	0xFF3
 31325                           intcon	equ	0xFF2
 31326                           intcon3	equ	0xFF0
 31327                           indf0	equ	0xFEF
 31328                           postinc0	equ	0xFEE
 31329                           fsr0h	equ	0xFEA
 31330                           fsr0l	equ	0xFE9
 31331                           wreg	equ	0xFE8
 31332                           indf1	equ	0xFE7
 31333                           postdec1	equ	0xFE5
 31334                           fsr1h	equ	0xFE2
 31335                           fsr1l	equ	0xFE1
 31336                           indf2	equ	0xFDF
 31337                           postinc2	equ	0xFDE
 31338                           postdec2	equ	0xFDD
 31339                           plusw2	equ	0xFDB
 31340                           fsr2h	equ	0xFDA
 31341                           fsr2l	equ	0xFD9
 31342                           status	equ	0xFD8
 31343                           
 31344                           	psect	text142
 31345  000000                     __ptext142:
 31346                           	opt stack 0
 31347                           tosu	equ	0xFFF
 31348                           tosh	equ	0xFFE
 31349                           tosl	equ	0xFFD
 31350                           pclatu	equ	0xFFB
 31351                           pclath	equ	0xFFA
 31352                           tblptru	equ	0xFF8
 31353                           tblptrh	equ	0xFF7
 31354                           tblptrl	equ	0xFF6
 31355                           tablat	equ	0xFF5
 31356                           prodh	equ	0xFF4
 31357                           prodl	equ	0xFF3
 31358                           intcon	equ	0xFF2
 31359                           intcon3	equ	0xFF0
 31360                           indf0	equ	0xFEF
 31361                           postinc0	equ	0xFEE
 31362                           fsr0h	equ	0xFEA
 31363                           fsr0l	equ	0xFE9
 31364                           wreg	equ	0xFE8
 31365                           indf1	equ	0xFE7
 31366                           postdec1	equ	0xFE5
 31367                           fsr1h	equ	0xFE2
 31368                           fsr1l	equ	0xFE1
 31369                           indf2	equ	0xFDF
 31370                           postinc2	equ	0xFDE
 31371                           postdec2	equ	0xFDD
 31372                           plusw2	equ	0xFDB
 31373                           fsr2h	equ	0xFDA
 31374                           fsr2l	equ	0xFD9
 31375                           status	equ	0xFD8
 31376                           
 31377                           	psect	rparam
 31378  0000                     tosu	equ	0xFFF
 31379                           tosh	equ	0xFFE
 31380                           tosl	equ	0xFFD
 31381                           pclatu	equ	0xFFB
 31382                           pclath	equ	0xFFA
 31383                           tblptru	equ	0xFF8
 31384                           tblptrh	equ	0xFF7
 31385                           tblptrl	equ	0xFF6
 31386                           tablat	equ	0xFF5
 31387                           prodh	equ	0xFF4
 31388                           prodl	equ	0xFF3
 31389                           intcon	equ	0xFF2
 31390                           intcon3	equ	0xFF0
 31391                           indf0	equ	0xFEF
 31392                           postinc0	equ	0xFEE
 31393                           fsr0h	equ	0xFEA
 31394                           fsr0l	equ	0xFE9
 31395                           wreg	equ	0xFE8
 31396                           indf1	equ	0xFE7
 31397                           postdec1	equ	0xFE5
 31398                           fsr1h	equ	0xFE2
 31399                           fsr1l	equ	0xFE1
 31400                           indf2	equ	0xFDF
 31401                           postinc2	equ	0xFDE
 31402                           postdec2	equ	0xFDD
 31403                           plusw2	equ	0xFDB
 31404                           fsr2h	equ	0xFDA
 31405                           fsr2l	equ	0xFD9
 31406                           status	equ	0xFD8


Data Sizes:
    Strings     1597
    Constant    969
    Data        11
    BSS         534
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      90
    BANK0           160     69     159
    BANK1           256      5     256
    BANK2           256      0     160
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[7]), STR_90(CODE[7]), 
		 -> STR_35(CODE[5]), STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_89(CODE[3]), STR_69(CODE[14]), STR_67(CODE[11]), STR_63(CODE[7]), 
		 -> STR_60(CODE[9]), STR_59(CODE[11]), STR_57(CODE[14]), STR_54(CODE[14]), 
		 -> STR_53(CODE[3]), STR_49(CODE[9]), STR_45(CODE[14]), STR_44(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S6072_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S6072_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S6072_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S6072_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4785$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    S4775$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4775$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4751$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4751$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4751$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4751$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 64
		 -> oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_189(CODE[12]), 
		 -> STR_188(CODE[8]), STR_187(CODE[9]), storedLight(BANK1[5]), STR_182(CODE[5]), 
		 -> STR_181(CODE[8]), STR_180(CODE[8]), STR_179(CODE[9]), STR_162(CODE[16]), 
		 -> STR_161(CODE[17]), STR_160(CODE[17]), STR_159(CODE[4]), STR_158(CODE[4]), 
		 -> STR_157(CODE[4]), STR_156(CODE[4]), STR_155(CODE[4]), STR_154(CODE[4]), 
		 -> STR_153(CODE[4]), STR_152(CODE[16]), STR_151(CODE[17]), STR_150(CODE[4]), 
		 -> STR_149(CODE[4]), STR_148(CODE[4]), STR_147(CODE[4]), STR_146(CODE[4]), 
		 -> STR_145(CODE[4]), STR_144(CODE[4]), STR_143(CODE[4]), STR_142(CODE[4]), 
		 -> STR_141(CODE[4]), STR_140(CODE[4]), STR_139(CODE[4]), STR_138(CODE[4]), 
		 -> STR_137(CODE[16]), STR_136(CODE[12]), STR_135(CODE[17]), STR_134(CODE[16]), 
		 -> STR_133(CODE[16]), STR_132(CODE[16]), STR_131(CODE[15]), STR_130(CODE[15]), 
		 -> STR_129(CODE[16]), STR_128(CODE[4]), STR_127(CODE[3]), STR_126(CODE[3]), 
		 -> STR_125(CODE[3]), STR_124(CODE[3]), STR_123(CODE[2]), STR_122(CODE[5]), 
		 -> STR_121(CODE[7]), STR_120(CODE[17]), STR_119(CODE[17]), STR_118(CODE[2]), 
		 -> STR_117(CODE[7]), STR_116(CODE[7]), STR_115(CODE[16]), STR_114(CODE[16]), 
		 -> STR_113(CODE[15]), STR_112(CODE[15]), STR_111(CODE[17]), STR_110(CODE[16]), 
		 -> STR_109(CODE[17]), STR_108(CODE[17]), STR_107(CODE[7]), STR_106(CODE[10]), 
		 -> STR_105(CODE[17]), STR_104(CODE[16]), STR_103(CODE[16]), STR_102(CODE[16]), 
		 -> STR_101(CODE[16]), STR_100(CODE[17]), STR_99(CODE[17]), STR_98(CODE[16]), 
		 -> STR_96(CODE[19]), STR_94(CODE[17]), STR_92(CODE[17]), STR_91(CODE[17]), 
		 -> responseData(BANK1[32]), responsePortNum(BANK0[3]), STR_88(CODE[13]), STR_87(CODE[12]), 
		 -> STR_86(CODE[12]), STR_83(CODE[18]), STR_82(CODE[13]), STR_81(CODE[17]), 
		 -> STR_80(CODE[16]), STR_79(CODE[17]), STR_78(CODE[17]), STR_77(CODE[16]), 
		 -> STR_76(CODE[17]), STR_75(CODE[17]), STR_73(CODE[13]), STR_72(CODE[12]), 
		 -> STR_71(CODE[17]), STR_65(CODE[7]), STR_64(CODE[10]), STR_62(CODE[11]), 
		 -> STR_61(CODE[11]), STR_56(CODE[9]), STR_55(CODE[11]), STR_51(CODE[11]), 
		 -> STR_50(CODE[10]), STR_47(CODE[9]), STR_46(CODE[11]), STR_42(CODE[17]), 
		 -> STR_40(CODE[17]), STR_38(CODE[17]), STR_37(CODE[17]), STR_36(CODE[17]), 
		 -> STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), moduleResonseBuffer(BANK1[64]), 
		 -> STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), STR_26(CODE[17]), 
		 -> STR_25(CODE[9]), STR_24(CODE[10]), STR_23(CODE[5]), STR_20(CODE[9]), 
		 -> STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), STR_16(CODE[10]), 
		 -> STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), STR_12(CODE[13]), 
		 -> STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), STR_8(CODE[12]), 
		 -> STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[9]), 
		 -> STR_3(CODE[11]), STR_2(CODE[15]), STR_1(CODE[10]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    moteApp_setLightString@lightString	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    moteApp_convertSensorValue@string	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    moteApp_addToDataBuffer@string	PTR const unsigned char  size(2) Largest target is 64
		 -> storedLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 16
		 -> dataBuffer(BANK1[16]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_85(CODE[12]), STR_84(CODE[14]), STR_74(CODE[14]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_186(CODE[22]), STR_185(CODE[22]), STR_184(CODE[27]), STR_183(CODE[27]), 
		 -> STR_178(CODE[26]), STR_177(CODE[26]), STR_176(CODE[26]), STR_175(CODE[26]), 
		 -> STR_174(CODE[3]), STR_173(CODE[9]), STR_172(CODE[15]), STR_171(CODE[13]), 
		 -> STR_170(CODE[13]), STR_169(CODE[13]), STR_168(CODE[13]), STR_167(CODE[13]), 
		 -> STR_166(CODE[13]), STR_165(CODE[13]), STR_164(CODE[13]), STR_163(CODE[16]), 
		 -> STR_70(CODE[11]), STR_68(CODE[11]), STR_66(CODE[14]), STR_58(CODE[14]), 
		 -> STR_52(CODE[10]), STR_48(CODE[13]), STR_43(CODE[14]), STR_41(CODE[13]), 
		 -> STR_39(CODE[10]), STR_30(CODE[10]), STR_22(CODE[20]), STR_21(CODE[2]), 

    sp__moteApp_getLightString	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    sp__moteApp_getTempValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__moteApp_getLightValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_moteApp_testSensors
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_sendCommand
    _moteApp_testSensors->_ADC_TempConversion
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_ADC_TempConversion
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putint8->_oled_putString
    _oled_putUint8->_oled_putString
    _moteApp_setSensorsInput->_moteApp_delayms
    _moteApp_getTempValue->_MOTEapp_getModuleResponse
    _moteApp_getTempValue->_sendCommand
    _moteApp_getLightValue->_moteApp_setLightString
    _moteApp_setLightString->_memcpy
    _moteApp_convertSensorValue->_moteApp_getLightValue
    _moteApp_addToDataBuffer->_moteApp_getLightValue
    _moteApp_add8bToDataBuffer->___awmod
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->_sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_getModuleResponse->_EUSART_Read
    _MOTEapp_SetDataRateSetting->_sendCommand
    _ADC_TempConversion->___fldiv
    ___lbtofl->___flpack
    ___flmul->___fladd
    ___fldiv->___flmul
    ___fladd->___flpack
    _moteJoiningProcess->_oled_putString
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->_sendCommand
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _USBapp_Handler->_oled_putString
    _oled_putString->_moteApp_getLightValue
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moteHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  885760
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  343291
                 _EUSART_FlushBuffer
                    _moteApp_delayms
                _moteApp_testSensors
                         _oled_clear
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          4     4      0   48844
                                             22 BANK0      4     4      0
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   48708
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   48234
                            _delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   51782
                            _delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    3548
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _delayms                                              5     3      2     900
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteApp_testSensors                                  3     3      0  141998
                                             58 BANK0      1     1      0
                 _ADC_TempConversion
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                       _oled_putint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                          6     6      0  424712
                                             68 BANK0      1     1      0
                                              0 BANK1      5     5      0
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                       _oled_putint8
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  10     7      3  224925
                                             58 BANK0     10     7      3
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
          _moteApp_add8bToDataBuffer
            _moteApp_addToDataBuffer
               _moteApp_clearBuffers
         _moteApp_convertSensorValue
                    _moteApp_delayms
             _moteApp_getLightString
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_lightStringSize
            _moteApp_setSensorsInput
                         _oled_clear
                     _oled_putString
                      _oled_putUint8
                       _oled_putint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1667
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     189
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putint8                                        10     8      2   51815
                                             22 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   51710
                                             22 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_setSensorsInput                              2     2      0    6041
                                              5 BANK0      2     2      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_lightStringSize                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _moteApp_getTempValue                                 4     2      2    3755
                                              3 BANK0      4     2      2
          _MOTEapp_getModuleResponse
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightValue                                4     2      2    4818
                                             13 BANK0      4     2      2
          _MOTEapp_getModuleResponse
             _moteApp_setLightString
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moteApp_setLightString                               3     1      2    1063
                                             10 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              10     4      6     798
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightString                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _moteApp_convertSensorValue                           8     6      2    7958
                                             17 BANK0      8     6      2
                             ___wmul
              _moteApp_getLightValue (ARG)
               _moteApp_getTempValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    7068
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     396
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_addToDataBuffer                              4     1      3     645
                                             17 BANK0      4     1      3
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    3840
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
            _moteApp_lightStringSize (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     865
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    2305
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   13879
                                             14 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1884
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     282
                                              2 BANK0      1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      65
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      31
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    3517
                                              3 BANK0      1     1      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    6047
                                              5 BANK0      3     3      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _MOTEapp_getModuleResponse                            2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    3579
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   6     6      0   17659
                                             52 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___lbtofl
 ---------------------------------------------------------------------------------
 (4) ___lbtofl                                             5     1      4    3386
                                             10 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     441
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             15     7      8    4427
                                             22 BANK0     15     7      8
                            ___fladd (ARG)
                           ___flpack
                           ___lbtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             15     7      8    4148
                                             37 BANK0     15     7      8
                            ___flmul (ARG)
                           ___flpack
                           ___lbtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             12     4      8    5124
                                             10 BANK0     12     4      8
                           ___flpack
 ---------------------------------------------------------------------------------
 (5) ___flpack                                            10     4      6    3355
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   60063
                                             22 BANK0      6     4      2
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    2064
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2629
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _moteApp_delayms                                      5     3      2    2252
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     304
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    4201
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    3560
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     641
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    3517
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    3517
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   53591
                                             22 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   47334
                                             17 BANK0      5     1      4
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1374
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1374
                                             12 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1244
                                              2 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      96
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0      93
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4800
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2267
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2164
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         14    14      0   30063
                                             31 COMRAM    14    14      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (11) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (13) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_clearCommand
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_TempConversion
       ___fladd
         ___flpack
       ___fldiv
         ___flmul (ARG)
           ___fladd (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___flmul
         ___fladd (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___fltol
       ___lbtofl
         ___flpack
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_convertSensorValue
       ___wmul
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
     _moteApp_getLightValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteApp_getTempValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteJoiningProcess
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_TempConversion
         ___fladd
           ___flpack
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flmul
           ___fladd (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___fltol
         ___lbtofl
           ___flpack
       _MOTEapp_SetDataRateSetting
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moduleSleep
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                 _Set_Page_Address
                   _oled_writeCommand
                 _oled_writeData
           _oled_devInit
             _oled_initialDispayLine
               _oled_writeCommand
             _oled_powerControl
               _oled_writeCommand
             _oled_regulorResistorSelect
               _oled_writeCommand
             _oled_setContrastControlRegister
               _oled_writeCommand
             _oled_writeCommand
           _oled_setDisplay
             _oled_writeCommand
           _oled_setFont
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
         _moteApp_lightStringSize (ARG)
       _moteApp_addToDataBuffer
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_clearBuffers
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_delayms
       _moteApp_getLightString
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_lightStringSize
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _oled_putint8
       ___awmod
       ___lbdiv
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
     _moteApp_getLightString (ARG)
     _moteApp_getLightValue (ARG)
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _oled_putChar (ARG)
       _Set_Column_Address
         _oled_writeCommand
       _Set_Page_Address
         _oled_writeCommand
       _oled_writeData
   _test_powerup
     _EUSART_FlushBuffer
     _moteApp_delayms
     _moteApp_testSensors
       _ADC_TempConversion
         ___fladd
           ___flpack
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flmul
           ___fladd (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___fltol
         ___lbtofl
           ___flpack
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_comms
       _delayms
       _moteApp_toggleLeds
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_leds
       _delayms
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_switch
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMR3_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      5     100       7      100.0%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     45      9F       5       99.4%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     2D      5A       1       94.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     299      14        0.0%
DATA                 0      0     299       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Feb 05 17:41:41 2020

           __size_of_moteApp_lightStringSize 0008                                   _USB_SD_Ptr 75F9  
                               ___fldiv@cntr 00E0                                 ___fldiv@sign 00E2  
                      ??_moteApp_testSensors 00E9                                           l60 2D68  
                          ??_CMP1_Initialize 00AF                                   _USB_Buffer 0128  
                  _MOTEapp_getModuleResponse 505C               moteJoiningProcess@selectButton 00C6  
                              _USBDeviceInit 2750                          ___wmul@multiplicand 00B1  
                    EUSART_FlushBuffer@index 00AF                       __end_of_oled_writeData 5EF4  
                       ??_moteApp_toggleLeds 00B2                           __size_of_CDCInitEP 006E  
                   USBapp_handlerState@state 00AF                                 __CFG_CP0$OFF 000000  
                               __CFG_CP1$OFF 000000                                 __CFG_CP2$OFF 000000  
                               __CFG_CP3$OFF 000000                                 ___flpack@arg 00AF  
             __end_of_moteApp_setLightString 4FDC                                 ___flpack@exp 00B3  
       USER_USB_CALLBACK_EVENT_HANDLER@event 000E         USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010  
                                        l109 5A56                                          l126 33D8  
                __end_of_USBStdGetDscHandler 3140                                          l334 4D6A  
                                        l440 1946                                          l352 5D8E  
                                        l337 4DB6                                          l346 5A90  
                                        l517 0B48                                          l391 1366  
                                        l377 1DD8                                          l562 108E  
                                        l707 4B5E                                          l467 02DE  
                                        l396 138C                                          l581 1290  
                                        l494 0786                                          l663 3760  
                                        l843 4202                                          _BDT 000400  
                                        l669 37E0                                          l749 4FD8  
                                        l854 42BC                                          _CKE 007E3E  
                                        l849 42B0                                          l874 3970  
                                        l876 399E                                          _CKP 007E34  
                                        _GIE 007F97                                 __CFG_CPB$OFF 000000  
                    ?_oled_initialDispayLine 0001                                          _PR2 000FBB  
                               __CFG_CPD$OFF 000000                           _moteJoiningProcess 135A  
                                        _UIE 000F64                                          _UIR 000F65  
                            _timer1ReloadVal 0042                                          _log 02D0  
                                 _USBSuspend 5DA6                                 ___awmod@sign 00B4  
               __end_of_moteApp_clearBuffers 45EE                 __end_of_moteApp_clearCommand 5FB0  
                       USBStdSetCfgHandler@i 0016                              _TMR2_Initialize 5F66  
                                        prod 000FF3                                          tosl 000FFD  
                                        wreg 000FE8                               _USBDeviceTasks 28A8  
                             _USBDeviceState 0089                                 ___flmul@cntr 00D2  
                               ___flmul@sign 00D3                        moteApp_delayms@length 00AF  
               MOTEapp_SetDataRateSetting@dr 00B3                        ??_USBCtrlTrfRxService 0012  
                   __size_ofi2_USBDeviceInit 013A                               ??_getsUSBUSART 00B9  
                               ?_EUSART_Read 0001                     USBEnableEndpoint@options 0009  
                               __CFG_LVP$OFF 000000                          ?_moteJoiningProcess 00C5  
                              ___flpack@sign 00B4                                 ___fltol@exp1 00B8  
                                       l1028 41E0                                         l1127 582A  
                                       l1136 5884                                         l1226 5F1A  
                                       l2071 2210                                         l2066 21BC  
                            _timer3ReloadVal 007E                                         l1438 5966  
                                       l2350 1FA0                                         l2335 23F6  
                                       l2336 240E                                         l2328 2394  
                                       l2344 1F34                                         l1706 27BE  
                                       l2348 1F72                   USBConfigureEndpoint@handle 0007  
                                       l2359 208C                                         l2628 5372  
                                       l1767 5C1E                                         l1768 5C1C  
                                       STR_1 7F07                                         STR_2 7D0A  
                                       STR_3 7EB6                                         STR_4 7F3E  
                                       STR_5 7D76                                         STR_6 7D83  
                                       STR_7 7CCD                                         STR_8 7E5C  
                                       STR_9 7F47                              _lightStringSize 009A  
                                       _LATD 000F8C              __size_of_MOTEapp_TimerBasedTask 002C  
                                       _PEIE 007F96                        ??_USBCtrlTrfTxService 0001  
                                       _UCFG 000F62                                         _UEP0 000F6A  
                                       _UEP1 000F6B                                         _UEIE 000F66  
                                       u9730 5108                                         u9750 5136  
                                       _UEIR 000F67                                         _UCON 000F60  
                                       u9737 50FE                                         u9757 512C  
                                       _TMR2 000FBC                                         _TMR3 000FB2  
                            _CDCDataInHandle 0072       USBStdFeatureReqHandler@current_ep_data 0019  
                                       _pDst 007A                                         _main 2C76  
                   ??i2_USBTransferOnePacket 0005            __end_of_moteApp_add8bToDataBuffer 3F6E  
                                       fsr0h 000FEA                                         fsr1h 000FE2  
                                       indf0 000FEF                                         fsr0l 000FE9  
                                       fsr2h 000FDA                                         indf1 000FE7  
                                _BaudRateGen 0120                                         fsr1l 000FE1  
                                       indf2 000FDF                                         fsr2l 000FD9  
                            _USBDeviceAttach 5BF6                                __CFG_BORV$190 000000  
                                       pclat 000FFA                 moteApp_addToDataBuffer@index 00C3  
                                       prodh 000FF4                                         prodl 000FF3  
                       _USBapp_setrxByteFlag 6050                                         start 00C4  
                              __CFG_IESO$OFF 000000                              __end_of_EndLine 5FE0  
                            _TMR3_Initialize 5E16                                  _storedLight 01F6  
                __end_of_USBapp_exitCDCState 600E                             __end_of_CMP1_ISR 606C  
                            ?_oled_putString 00C0                   __end_of_USBCheckStdRequest 3CD0  
                     ??_USBCtrlTrfOutHandler 0014                  __size_of_moteRunningProcess 1292  
                           ?_oled_setDisplay 0001                                __CFG_MCLRE$ON 000000  
                               ___param_bank 000010                    ??_USBStdFeatureReqHandler 0016  
                                _TMRapp_Tick 6056                         ??_moteJoiningProcess 00C7  
                     moteApp_delayms@counter 00B2                ?_USART_mySetLineCodingHandler 0001  
                     sendDataCommand@appData 00B2                            sendCommand@string 00B0  
                   ??_USBStdGetStatusHandler 0001                 __end_of_USBapp_getrxByteFlag 6050  
                  __size_of_DATAEE_WriteByte 003E                               ?_USBDeviceInit 0001  
                     _moteApp_getLightString 5FC2                                ?_EUSART_Write 0001  
             __size_of_OSCILLATOR_Initialize 0018               __end_of_oled_initialDispayLine 5F66  
                            ?_oled_writeData 0001                __end_of_OSCILLATOR_Initialize 5F24  
                                      l11220 5D40                                        l12012 3E7E  
                                      l12004 3E10                                        l11054 5874  
                                      l11046 4840                                        l11302 5144  
                                      l11134 5C94                                        l11126 5A78  
                                      l11230 2324                                        l12030 24EA  
                                      l11072 582E                                        l11240 23D4  
                                      l11232 2336                                        l12040 2544  
                                      l12032 24FC                                        l11312 5796  
                                      l11160 50B8                                        l12008 3E2C  
                                      l11410 3FC2                                        l11402 3F8C  
                                      l12202 2194                                        l11082 5862  
                                      l11066 58B0                                        l11138 5CAC  
                                      l11242 23E6                                        l11234 2376  
                                      l11226 230E                                        l12042 2556  
                                      l12034 250E                                        l12026 24C6  
                                      l12130 3804                                        l11170 57E8  
                                      l11404 3FA8                                        l12220 21FA  
                                      l12204 21A0                                        l11068 58B4  
                                      l12300 353C                                        l11252 245C  
                                      l12036 2520                                        l12028 24D8  
                                      l11308 578C                                        l11156 50A0  
                                      l11164 50D0                                        l13100 0D56  
                                      l11422 4028                                        l12214 21C6  
                                      l12038 2532                                        l12046 2568  
                                      l11318 57B2                                        l11334 5A14  
                                      l11424 4040                                        l12208 21B0  
                                      l12304 355A                                        l12320 5362  
                                      l12312 5324                                        l11440 1F46  
                                      l12048 25A4                                        l12136 3816  
                                      l11600 477E                                        l11176 580A  
                                      l11344 5A2C                                        l13120 0DE8  
                                      l13112 0DB0                                        l13104 0D7A  
                                      l13032 0A7C                                        l13008 09A8  
                                      l12234 2240                                        l12242 2266  
                                      l12226 2216                                        l12170 371C  
                                      l11098 5C42                                        l12314 5332  
                                      l11514 2F32                                        l11282 4D8E  
                                      l11610 47B2                                        l13130 0E48  
                                      l13042 0ADC                                        l12260 22C0  
                                      l12244 2276                                        l12252 229C  
                                      l12164 36E2                                        l12156 369C  
                                      l12316 533C                                        l11460 1FD8  
                                      l11452 1F96                                        l11508 2F0C  
                                      l11612 47BC                                        l11620 47F2  
                                      l11604 4790                                        l13220 1168  
                                      l13116 0DD4                                        l13052 0B2C  
                                      l13028 0A68                                        l12262 22C6  
                                      l12254 22AA                                        l12166 36EA  
                                      l12174 3750                                        l12158 36A8  
                                      l11470 202C                                        l11446 1F84  
                                      l11534 2FD8                                        l11526 2F82  
                                      l11390 4FAE                                        l13230 11FE  
                                      l13222 1186                                        l13206 1132  
                                      l13150 0F2C                                        l13142 0EB4  
                                      l12350 33BA                                        l12264 22EC  
                                      l11296 50E8                                        l12280 3490  
                                      l12600 15A8                                        l11480 207C  
                                      l11472 2038                                        l11288 4DAE  
                                      l11624 4808                                        l11616 47E2  
                                      l11608 47A4                                        l11800 4AD8  
                                      l13232 121C                                        l13224 11A4  
                                      l13216 1158                                        l13152 0F4A  
                                      l13144 0ED2                                        l13160 0FB8  
                                      l13072 0BF6                                        l13056 0B6C  
                                      l13402 2798                                        l12194 5DF0  
                                      l13306 3A18                                        l12522 4F46  
                                      l12514 4F16                                        l12506 4EE4  
                                      l12290 34D8                                        l12610 160E  
                                      l11466 200A                                        l11538 2FEC  
                                      l11570 26B0                                        l11554 2638  
                                      l11650 31D6                                        l11634 3166  
                                      l11810 4B52                                        l11394 4FCC  
                                      l13226 11C2                                        l13218 115E  
                                      l13154 0F68                                        l13146 0EF0  
                                      l13090 0CD2                                        l12362 3430  
                                      l12524 4F4C                                        l12516 4F1C  
                                      l12292 34E2                                        l12284 34AA  
                                      l12612 161E                                        l12532 136A  
                                      l11484 20B4                                        l11468 201C  
                                      l11548 2612                                        l11660 3208  
                                      l11812 4B56                                        l11396 4FD0  
                                      l11820 4142                                        l13244 1288  
                                      l13228 11E0                                        l13236 123A  
                                      l13180 1046                                        l13172 0FFE  
                                      l13148 0F0E                                        l13092 0CF0  
                                      l13084 0C78                                        l11724 5A3E  
                                      l12356 3404                                        l12348 339C  
                                      l13430 2810                                        l13414 27CA  
                                      l13422 27DE                                        l13406 27B6  
                                      l12526 4F54                                        l12518 4F22  
                                      l12710 1950                                        l12702 1928  
                                      l12630 16AA                                        l12614 1624  
                                      l11478 206A                                        l11582 2700  
                                      l11566 2688                                        l11662 321A  
                                      l11654 31EA                                        l11910 45C8  
                                      l11806 4B10                                        l13238 126C  
                                      l13166 0FD0                                        l13158 0F86  
                                      l13094 0D0E                                        l13086 0C96  
                                      l11742 360A                                        l12366 343E  
                                      l13264 3942                                        l13512 4206  
                                      l12296 3528                                        l12288 34C6  
                                      l11840 4A20                                        l12536 137C  
                                      l11488 20DC                                        l11576 26D0  
                                      l11664 3228                                        l11904 45B6  
                                      l11920 4CBA                                        l13184 106A  
                                      l13176 1022                                        l13168 0FDA  
                                      l13192 10B0                                        l13088 0CB4  
                                      l12800 02E2                                        l12368 3452  
                                      l13426 2806                                        l13522 4262  
                                      l12490 5D6E                                        l11850 4AA0  
                                      l12706 1938                                        l12626 1694  
                                      l12554 142E                                        l12714 198A  
                                      l11498 2130                                        l11578 26D8  
                                      l11690 53CE                                        l11682 53A4  
                                      l11930 4CFC                                        l13194 10DC  
                                      l13098 0D2C                                        l13258 12FA  
                                      l13610 1DDC                                        l13602 1DB2  
                                      l13364 5BCA                                        l13436 2876  
                                      l13540 4298                                        l11860 551E  
                                      l11844 4A50                                        l12652 1782  
                                      l12644 1744                                        l12636 16E0  
                                      l12628 16A4                                        l12716 19D2  
                                      l11588 2720                                        l11668 3246  
                                      l11684 53AE                                        l11772 5482  
                                      l11924 4CD6                                        l12804 02F6  
                                      l13526 426C                                        l12486 5D62  
                                      l12646 1748                                        l12574 14E4  
                                      l12566 14BE                                        l11678 5398  
                                      l11694 53DC                                        l11870 4538  
                                      l11774 548C                                        l11790 5776  
                                      l11934 4D18                                        l11926 4CE0  
                                      l12814 0356                                        l13622 1E3E  
                                      l13702 2D7E                                        l13710 2D96  
                                      l13368 5BDE                                        l13296 39EE  
                                      l13528 4274                                        l11864 555C  
                                      l11848 4A92                                        l12680 188C  
                                      l12656 17A2                                        l12584 152A  
                                      l12568 14C2                                        l11944 523A  
                                      l11880 455E                                        l11768 5466  
                                      l11784 5750                                        l11936 4D22  
                                      l13640 1ED0                                        l13560 1CAC  
                                      l11858 5510                                        l12682 18B4  
                                      l12666 1810                                        l12594 1572  
                                      l11962 529A                                        l11882 4564  
                                      l11874 4542                                        l12850 0456  
                                      l12826 03C0                                        l13642 1EEC  
                                      l12684 18BA                                        l12668 1814  
                                      l11956 527C                                        l11948 5244  
                                      l11892 458A                                        l11788 576C  
                                      l12924 067C                                        l12916 0640  
                                      l12772 0248                                        l13636 1EBA  
                                      l12694 190E                                        l12678 1888  
                                      l11958 5294                                        l11894 4590  
                                      l11886 456E                                        l11990 3DCC  
                                      l12846 0442                                        l12790 02B8  
                                      l13582 1D08                                        l13574 1CE2  
                                      l13558 1CA4                                        l12696 1912  
                                      l12688 18CC                                        l12960 077A  
                                      l12952 072C                                        l12776 025C  
                                      l13584 1D10                                        l13568 1CC4  
                                      l11898 459A                                        l11994 3DE4  
                                      l11986 3DB4                                        l12962 077E  
                                      l12946 0722                                        l12890 0558  
                                      l13578 1CFA                                        l13682 2CF4  
                                      l12972 0816                                        l12980 08B6  
                                      l11998 3DEE                                        l12958 0772  
                                      l12966 07C4                                        l12982 08CA  
                                      l12894 0586                                        l12886 052A  
                                      l12798 02D4                                        l12976 0866  
                                      l13696 2D6C                                        l12986 08DE  
                                      l12898 059A                                        l12996 093E  
                              ___fltol@sign1 00B7                              __end_of___almod 356E  
                            __end_of___fladd 2160                                        ?_main 0001  
                            __end_of___fldiv 301C                              __end_of___lbdiv 53E4  
                                      _EEADR 000FA9                                        STR_10 7DE0  
                                      STR_11 7E68                                        STR_20 7F50  
                                      STR_12 7E07                                        STR_21 7FFD  
                                      STR_13 7DED                                        STR_30 7EF3  
                                      STR_14 7DFA                                        STR_22 7A8C  
                                      STR_23 7AD1                                        STR_31 7FB9  
                                      STR_15 7EAB                                        STR_16 7EFD  
                                      STR_24 7ED5                                        STR_32 7B4D  
                                      STR_40 7AC5                                        STR_17 7F59  
                                      STR_25 7F35                                        STR_41 7DD3  
                                      STR_33 7BA2                                        STR_18 7F6A  
                                      STR_50 7ECB                                        STR_26 7BB3  
                                      STR_34 7AF8                                        STR_42 7AE7  
                                      STR_35 7FBE                                        STR_19 7F72  
                                      STR_51 7E8A                                        STR_43 7D27  
                                      STR_27 7C08                                        STR_36 7B4D  
                                      STR_60 7F23                                        STR_44 7FF8  
                                      STR_52 7EE9                                        STR_28 7C19  
                            __end_of___awmod 4814                                        STR_37 7BA2  
                                      STR_53 7FF8                                        STR_61 7E74  
                                      STR_45 7D43                                        STR_29 7B3C  
                                      STR_38 7AF8                                        STR_62 7E8A  
                                      STR_70 7E95                                        STR_54 7D43  
                                      STR_46 7EA0                                        STR_55 7EA0  
                                      STR_39 7EF3                                        STR_63 7F96  
                                      STR_47 7F1A                                        STR_71 7C3B  
                                      STR_80 7C8D                                        STR_56 7F1A  
                                      STR_48 7DD3                                        STR_64 7EDF  
                                      STR_72 7E20                                        STR_65 7F8F  
                                      STR_49 7F23                                        STR_73 7D5E  
                                      STR_57 7D35                                        STR_81 7BE6  
                                      STR_66 7D27                                        STR_58 7D27  
                                      STR_90 7FAB                                        STR_82 7D51  
                                      STR_74 7D19                                        STR_67 7E7F  
                                      STR_59 7E7F                                        STR_91 7B5E  
                                      STR_75 7B2B                                        STR_83 7AB3  
                                      STR_84 7D19                                        STR_68 7E95  
                                      STR_76 7B91                                        STR_92 7AD6  
                                      STR_69 7D35                                        STR_93 7FB2  
                                      STR_85 7E50                                        STR_77 7C8D  
                                      STR_86 7E38                                        STR_94 7BC4  
                                      STR_78 7B1A                                        STR_95 7FA4  
                                      STR_87 7E2C                                        STR_79 7B09  
                                      STR_88 7D5E                                        STR_96 7AA0  
                            __end_of___flmul 2750                                        STR_89 7FF8  
                                      STR_97 7F9D                                        STR_98 7CBD  
                                      STR_99 7B2B            __size_of_USBCtrlEPServiceComplete 010A  
                            __end_of___fltol 325A                              _TMR1_StartTimer 6064  
                            __end_of___lldiv 4E4E                                        u10220 3186  
                                      u10225 317A                                        u10325 5976  
                                      u10326 5978            __size_of_MOTEapp_setResponseReady 0008  
                                      _T1CON 000FCD                       __end_of_USBDeviceTasks 29F8  
                                      u10830 2184                                        u12350 1D2A  
                                      _T2CON 000FBA                                        u10770 368C  
                                      u12507 35CA                                        u12517 35DC  
                                      u10838 2188                                        u12607 5012  
                                      u12527 35EE                      __end_of_sendDataCommand 3E90  
                                      _T3CON 000FB1                                        u12617 5D9A  
                                      u12537 3622                                        u10778 3690  
                                      u12707 197C                                        u12627 2496  
                                      u12547 3634                                        u12467 3446  
                                      u12717 5A80                                        u12637 24A8  
                                      u12557 3646                                        u12477 357A  
                                      u12647 24BA                                        u12567 5A46  
                                      u12487 358C                                        u12657 25AC  
                                      u12577 08BE                                        u12497 359E  
                  ?_USBCtrlEPServiceComplete 0001                                        u12667 25BE  
                                      u12587 4FEC                                        u12677 25D0  
                                      u12597 5000                                        u12687 1958  
                                      u12697 196A                              __end_of___lwmod 537C  
                  ?_MOTEapp_setResponseReady 0001                          oled_putUint8@number 00C7  
                                      _UADDR 000F63                                        _RCREG 000FAE  
                                      _RCSTA 000FAB                                        _TMR1H 000FCF  
                                      _TMR3H 000FB3                                        _TMR1L 000FCE  
                                      _TMR3L 000FB2                                        _SPBRG 000FAF  
                                      _TRISD 000F95      moteApp_add8bToDataBuffer@bufferLocation 00B5  
                                      _USTAT 000F61                                        _TXREG 000FAD  
                                      _TXSTA 000FAC                                __CFG_WRT0$OFF 000000  
         __size_of_USBCtrlEPAllowStatusStage 00D0                              __end_of_delayms 5A6C  
                              __CFG_WRT1$OFF 000000                                __CFG_WRT2$OFF 000000  
                              __CFG_WRT3$OFF 000000                               __CFG_EBTR0$OFF 000000  
                             __CFG_FCMEN$OFF 000000                               __CFG_EBTR1$OFF 000000  
                             __CFG_EBTR2$OFF 000000                               __CFG_EBTR3$OFF 000000  
            __end_of_USBCtrlEPAllowDataStage 4C08                            oled_putChar@index 00BA  
                           __end_of_TMR1_ISR 5FF8                                        _sd000 79BE  
                                      _sd001 7944              service_pushbutton@Release_Timer 00A9  
                                      _sd002 7978                                __CFG_WRTB$OFF 000000  
                           __end_of_TMR3_ISR 5E58                                __CFG_WRTC$OFF 000000  
                              __CFG_WRTD$OFF 000000                              _DATAEE_ReadByte 5F24  
                             __CFG_EBTRB$OFF 000000                                   i2memset@p1 0001  
                                      _light 0076                               __pbitbssCOMRAM 02D0  
                    __end_of_TMR1_Initialize 5B8A                                 _runningState 00A5  
                                      pclath 000FFA                                        tablat 000FF5  
                                      plusw2 000FDB                            __end_of_CDCInitEP 5310  
                 oled_setDisplay@displayType 00B0                                        status 000FD8  
                             __CFG_T3CMX$RC0 000000                              _TMR2_StartTimer 6060  
                            __end_of_strncmp 4AC4                              ___lbdiv@divisor 00AF  
                             __CFG_ICPRT$OFF 000000                        ?_USBapp_setrxByteFlag 0001  
                           __end_ofi2_memset 5D24                              ___lbdiv@counter 00B1  
                               _m10SecTicker 0078                 __end_of_moteApp_getTempValue 5786  
                            putUSBUSART@data 00AF           USART_mySetLineCodingHandler@dwBaud 000E  
               __size_of_USBStdSetCfgHandler 00E2                              __initialization 55CE  
                      TMR2_ReadTimer@readVal 00AF                __size_of_TMRapp_ClearBitFlags 0008  
                               __end_of_main 2DAE                        _control_signal_bitmap 0092  
              __size_of_MOTEapp_handlerState 000A                       _MOTEapp_TimerBasedTask 5D50  
                             ??_EUSART_Write 00AF                      __end_of_TMR2_Initialize 5F7A  
                               ?_sendCommand 00B0                  ?_INTERRUPT_InterruptManager 0001  
                  __size_of_USBCtrlEPService 00D0                                       ??_main 00F4  
                               ?_moduleSleep 0001                                 ?_moteHandler 0001  
           __size_of_moteApp_addToDataBuffer 006E                              _TMR3_StartTimer 605C  
                              __activetblptr 000002                              ?_USBDeviceTasks 0001  
                        i2_EUSART_Initialize 59B8                    sendDataCommand@dataLength 00B4  
                                ?_USBSuspend 0001                                   _NextUSBOut 0045  
                             __CFG_SDOMX$RB3 000000                              __CFG_CCP2MX$RC1 000000  
                               _cdc_mem_type 008F             moteApp_convertSensorValue@string 00C0  
                    __end_of_USBDeviceAttach 5C2C                                       _ADCON0 000FC2  
                                     _ADCON1 000FC1                                       _ADCON2 000FC0  
                           _CDCDataOutHandle 0074                            _getsUSBUSART$6440 00BA  
                                     _ACTCON 000FB5                                       STR_100 7B91  
                                     STR_101 7C8D                                       STR_110 7C8D  
                                     STR_102 7C6D                                       STR_103 7C5D  
                                     STR_111 7C2A                                       STR_104 7C8D  
                                     STR_112 7CDD                                       STR_120 7B6F  
                                     STR_121 7F88                                       STR_113 7CEC  
                                     STR_105 7C4C                                       STR_130 7CEC  
                                     STR_122 7FC3                                       STR_106 7EC1  
                                     STR_114 7C7D                                       _ADRESH 000FC4  
                                     STR_131 7CDD                                       STR_115 7C6D  
                                     STR_107 7E3D                                       STR_123 7DB7  
                                     STR_132 7C6D                                       STR_108 7B1A  
                                     STR_124 7FE1                                       STR_140 7FD0  
                                     STR_116 7F81                                       STR_133 7C5D  
                                     STR_109 7B09                                       STR_125 7FED  
                                     STR_141 7FD4                                       STR_117 7F7A  
                                     STR_134 7C8D                                       STR_126 7FE5  
                                     STR_150 7FF0                                       STR_118 7FFB  
                                     STR_142 7FD8                                       _ADRESL 000FC3  
                                     STR_127 7FE9                                       STR_143 7FDC  
                                     STR_135 7BF7                                       STR_151 7BD5  
                                     STR_119 7B80                                       STR_160 7B2B  
                                     STR_144 7FF4                                       STR_128 7FF0  
                                     STR_136 7E44                                       STR_152 7C9D  
                                     STR_137 7C7D                                       STR_129 7C7D  
                                     STR_153 7FC8                                       STR_145 7FDC  
                                     STR_161 7B91                                       STR_162 7C8D  
                                     STR_154 7FCC                                       STR_146 7FE0  
                                     STR_138 7FC8                                       STR_170 7DB9  
                                     STR_155 7FD0                                       STR_147 7FEC  
                                     STR_139 7FCC                                       STR_171 7DC6  
                                     STR_163 7CAD                                       STR_156 7FD4  
                                     STR_180 7F72                                       STR_148 7FE4  
                                     STR_164 7D6B                                       STR_172 7CFB  
                                     STR_157 7FD8                                       STR_181 7F6A  
                                     STR_149 7FE8                                       STR_173 7F2C  
                                     STR_165 7D78                                       _EEDATA 000FA8  
                                     STR_174 7A0F                                       STR_182 7AD1  
                                     STR_158 7FDC                                       STR_166 7D85  
                                     STR_159 7FF4                                       STR_167 7D92  
                                     STR_175 7A2C                                       STR_183 79DD  
                                     STR_168 7D9F                                       STR_176 7A46  
                                     STR_184 79C2                                       STR_169 7DAC  
                                     STR_185 7A60                                       STR_177 79F8  
                                     STR_186 7A76                                       STR_178 7A12  
                                     STR_179 7F59                                       STR_187 7F11  
                                     STR_188 7F62                                       STR_189 7E14  
                           __end_of___flpack 2470                                       _EECON2 000FA7  
                           __end_of___lbtofl 5BC0                              getsUSBUSART@len 00B8  
                                     _T1GCON 000FCC                         oled_putUint8@numData 00C8  
                                     _T3GCON 000FB4                        __size_of_CDCTxService 0190  
                                     i2l2012 4648                      __end_of_TMR3_Initialize 5E38  
                                     i2l1142 5ADA                                       i2l2014 467A  
                                     i2l1190 0078                                       i2l1194 008A  
                                     i2l1186 005C                                       i2l1188 006C  
                                     i2l1706 2B9A                                       i2l1730 2988  
                                     i2l1572 5E4A                                       i2l1718 28D8  
                                     i2l1728 2978                                       i2l1905 3BB8  
                                     i2l1729 29F4                                       i2l2555 4E3C  
                                     i2l1860 46D2                                       i2l1934 1A06  
                                     i2l1855 46B6                                       i2l1919 3C00  
                                     i2l1928 3C52                                       i2l1792 32DA  
                                     i2l1953 1BD6                                       i2l1858 474A  
                                     i2l1859 46CE                                       i2l1868 58F8  
                                     i2l7034 4C6A                                       i2l8020 2E76  
                                     i2l8004 2E02                                       i2l7204 45FE  
                                     i2l7036 4C84                                       i2l8030 2ED6  
                                     i2l7230 4664                                       i2l7222 463C  
                                     i2l7214 4626                                       i2l7062 591E  
                                     i2l7070 4488                                       i2l9000 3BE4  
                                     i2l8016 2E5C                                       i2l7208 4610  
                                     i2l7072 44A2                                       i2l7322 406A  
                                     i2l7058 590E                                       i2l7090 4510  
                                     i2l8042 3C0A                                       i2l7092 4526  
                                     i2l8044 3C10                                       i2l7326 4076  
                                     i2l7238 4682                                       i2l7078 44B4  
                                     i2l7270 557E                                       i2l8054 3C28  
                                     i2l8046 3C16                                       i2l7336 40A2  
                                     i2l7344 40DA                                       i2l7192 5662  
                                     i2l7264 5572                                       i2l8056 3C30  
                                     i2l8072 3C8A                                       i2l7362 4DE4  
                                     i2l7346 40E6                                       i2l7354 411E  
                                     i2l7266 5578                                       i2l8058 3C36  
                                     i2l7364 4DF2                                       i2l7508 43F0  
                                     i2l7188 565A                                       i2l7700 1B6E  
                                     i2l7612 3118                                       i2l7604 30C2  
                                     i2l7380 5D00                                       i2l8068 3C6C  
                                     i2l7374 4E2C                                       i2l7366 4DFA  
                                     i2l7198 567A                                       i2l7710 1BB4  
                                     i2l7614 311E                                       i2l7606 30C8  
                                     i2l7630 46F0                                       i2l7542 4BD4  
                                     _TABLAT 000FF5                                       i2l7720 1BF2  
                                     i2l7712 1BC2                                       i2l7632 4712  
                                     i2l7624 46C0                                       i2l7640 4732  
                                     i2l7384 5D12                                       i2l7722 1C10  
                                     i2l7618 3124                                       i2l7562 3D18  
                                     i2l7538 4BBA                                       i2l7726 1C3A  
                                     i2l7558 3D10                                       i2l7728 1C48  
                                     i2l7680 1AC6                                       i2l7672 1A7C  
                                     i2l7592 302C                                       i2l7584 3D8C  
                                     i2l7568 3D44                                       i2l7674 1ABA  
                                     i2l7658 19FE                                       i2l7684 1AE2  
                                     i2l7596 303E                                       i2l7694 1B36  
                                     i2l7686 1B04                                       i2l7678 1AC2  
                                     i2l7950 3284                                       i2l7696 1B54  
                                     i2l7962 32F2                                       i2l7970 330A  
                                     i2l7946 3276                                       i2l8970 3B36  
                                     i2l7994 2DD0                                       i2l8972 3B3E  
                                     i2l8956 5504                                       i2l8948 54BA  
                                     i2l8990 3B9E                                       i2l7998 2DDE  
                                     i2l8984 3B7E                                       i2l8998 3BE0  
                                  ??_EndLine 00B0                                       _OSCCON 000FD3  
                              CDCTxService@i 00B9                                       _SPBRGH 000FB0  
                                     _SSPBUF 000FC9                     i2USBTransferOnePacket@ep 0005  
                          ??i2_USBDeviceInit 0009              __size_ofi2_USBTransferOnePacket 00C0  
                       ?i2_EUSART_Initialize 0001                         oled_displayOff@state 0001  
                              oled_putChar@k 00B9               __size_of_moteApp_getLightValue 0062  
              __end_of_moteApp_getLightValue 54AC                            _shortPacketStatus 0051  
             moteRunningProcess@changeStates 00F2                               __CFG_XINST$OFF 000000  
                       _moteApp_clearBuffers 4532                         _moteApp_clearCommand 5F9E  
                    _moteApp_lightStringSize 6022                 ??_MOTEapp_SetDataRateSetting 00B2  
                            USBDeviceTasks@i 001F                   __end_of_Set_Column_Address 5E76  
                USBStdFeatureReqHandler@pUEP 0017                             __end_of_hexToStr 5A32  
                   USBTransferOnePacket@data 00B0                   USBCtrlTrfInHandler@lastDTS 0012  
                            ??_USBDeviceInit 00B7                    __size_of_Set_Page_Address 001A  
                    __end_of_TMR1_StartTimer 6068                                 ?_putUSBUSART 00AF  
                                  ??___almod 00B7                                    ??___fladd 00C1  
                                     ___wmul 5B1A                                    ??___fldiv 00DC  
                                  ??___lbdiv 00B0                               __CFG_STVREN$ON 000000  
                                  ??___awmod 00B3                     ?_moteApp_setSensorsInput 0001  
                                  ??___flmul 00CD                                    ??___fltol 00B3  
                                  ??___lldiv 0009                                       _appKey 0280  
                       __end_of_getsUSBUSART 3758                                    ??___lwmod 00B3  
                          _USBEnableEndpoint 58FC              __size_of_USBStdGetStatusHandler 00B8  
                        _EUSART_Transmit_ISR 5AA6                                       _memcpy 57D6  
                                     _memset 5BC0                                       clear_0 55D4  
                                     clear_1 55E0                                       clear_2 55EC  
                                     clear_3 55FA                              ___awmod@divisor 00B1  
                                  ??_delayms 00B1                              ___awmod@counter 00B3  
                         ?_USBEnableEndpoint 0009               ??_USART_mySetLineCodingHandler 000E  
                    __end_of_DATAEE_ReadByte 5F3C                                       _strcmp 550E  
                 __end_of_ADC_TempConversion 3B06                __size_of_USBTransferOnePacket 00DE  
                           ?_sendDataCommand 00B0                              _moteApp_delayms 5A6C  
                __size_of_service_pushbutton 0086                                 _CDCTxService 2160  
                               __mediumconst 75F8                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                        ??_USBEnableEndpoint 000A                                    ?_CMP1_ISR 0001  
                    __end_of_TMR2_StartTimer 6064                                 _dataRateRead 0094  
                                _CtrlTrfData 000438                                    ??_strncmp 00B5  
                           ___lbdiv@dividend 00B0                                ?_oled_devInit 0001  
                       ?_EUSART_Transmit_ISR 0001                                   ___fladd@f1 00B9  
                                 ___fladd@f2 00BD                         _controlTransferState 004B  
                  USBapp_Handler@buttonPress 00C5                         _USBapp_getrxByteFlag 604A  
                           ?_TMR1_Initialize 0001                         __CFG_LS48MHZ$SYS48X8 000000  
        __size_of_MOTEapp_SetDataRateSetting 017C                         __size_of_EUSART_Read 004C  
                          _SYSTEM_Initialize 5DF4                 __size_of_USBapp_handlerState 000A  
                                 ___fldiv@f1 00D4                                   ___fldiv@f2 00D8  
                                 ___fldiv@f3 00DC           moteApp_getLightValue@escapeCounter 00BE  
                                 __accesstop 0060                      __end_of__initialization 5620  
                     ??_USBapp_setrxByteFlag 0001                              __CFG_PBADEN$OFF 000000  
                               ?_test_switch 0001                        ??i2_EUSART_Initialize 0001  
                            _CMP1_Initialize 5FB0                           ?_SYSTEM_Initialize 0001  
                         oled_writeData@data 00AF                                   ___flmul@f1 00C5  
                                 ___flmul@f2 00C9                                ___rparam_used 000001  
                              ?_oled_setFont 00AF                     __size_of_USBStallHandler 0044  
                                 ___fltol@f1 00AF                                ?_oled_putChar 00B1  
                                 ___lbtofl@c 00BD                        ?_moteApp_clearBuffers 0001  
                      ?_moteApp_clearCommand 0001                          __size_of_USBSuspend 002A  
                __size_of_EUSART_FlushBuffer 0050                                ?_oled_putint8 00C5  
                             __pcstackCOMRAM 0001                    __end_of_USBEnableEndpoint 593C  
                           __CFG_nPWRTEN$OFF 000000                                __end_of_sd000 79C2  
                              __end_of_sd001 7978                                __end_of_sd002 79AC  
                               __pidataBANK0 5FF8                          ??_SYSTEM_Initialize 00B1  
                    __end_of_TMR3_StartTimer 6060                                    ?_TMR1_ISR 0001  
                                  ?_TMR3_ISR 0001             __size_of_USBCtrlEPAllowDataStage 00A0  
                           _DATAEE_WriteByte 593C                __size_of_USBConfigureEndpoint 0096  
    __end_of_oled_setContrastControlRegister 5F52     __size_of_oled_setContrastControlRegister 0016  
           ?_oled_setContrastControlRegister 0001            ??_oled_setContrastControlRegister 00B0  
            _oled_setContrastControlRegister 5F3C                  __end_of_USBCtrlTrfInHandler 3BEC  
                           ?_TMR2_Initialize 0001                             ___lbdiv@quotient 00B2  
       moteApp_setSensorsInput@escapeCounter 00B4                       i2_USBTransferOnePacket 4472  
                            __CFG_PCLKEN$OFF 000000                               __CFG_nLPBOR$ON 000000  
                          __end_of_OledFont0 7901                            _CDCTxService$6488 00B7  
                                 _cdc_notice 01D8                                    ?i2_memset 0001  
                                 _cdc_rx_len 0090                                   _cdc_tx_len 0091  
                       _moteApp_getTempValue 5734                                   ??_CMP1_ISR 0001  
                            _responsePortNum 00AA                     ??_USBCtrlTrfSetupHandler 001C  
                                 _dataBuffer 01C8                               ??_oled_devInit 00B1  
                           ?_USBDeviceAttach 0001                    __end_of_SYSTEM_Initialize 5E16  
                      ??_EUSART_Transmit_ISR 0001                       _USBStdGetStatusHandler 46A8  
                              ?_moduleResync 0001                        ?_USBapp_getrxByteFlag 0001  
                       service_pushbutton@bs 00AF                                   __pbssBANK0 0060  
                                 __pbssBANK1 0100                                   __pbssBANK2 0200  
                       __end_of_EUSART_Write 58B8                      __size_of_TMR2_ReadTimer 000C  
                           ?_TMR3_Initialize 0001                             ??_oled_putString 00C4  
                oled_regulorResistorSelect@r 00B0                      moduleResync@escapeEvent 00B6  
                             ??_oled_setFont 00B1                 ??_moteApp_convertSensorValue 00C2  
                            _periodicUpValue 00FE                    ??_moteApp_lightStringSize 00AF  
                __size_of_EUSART_Receive_ISR 003A                          oled_putString@index 00C4  
                             ??_oled_putChar 00B3                  __size_of_USBWakeFromSuspend 0032  
                                _pBDTEntryIn 0036                       __size_of_oled_clearRow 0034  
                                 _clearLight 01F1                  __end_of_moteApp_testSensors 3932  
                   sendDataCommand@byteCount 00B6             __end_of_USBCtrlEPServiceComplete 3364  
           __end_of_MOTEapp_setResponseReady 604A                               ??_oled_putint8 00C7  
                     oled_putChar@start_page 00B2                  __size_of_USBCheckCDCRequest 00BA  
                          __CFG_PLLSEL$PLL3X 000000                           __size_of_oled_init 0032  
                    ?_moteApp_getLightString 00AF                             ??_oled_writeData 00AF  
                       USBCtrlTrfRxService@i 0012                                 ?_TMRapp_Tick 0001  
                                    ?___wmul 00AF                             ?_TMR1_StartTimer 0001  
                                 ??_TMR1_ISR 0001                                   ??_TMR3_ISR 0001  
                    __end_of_moteApp_delayms 5AA6                                      _CM1CON0 000F98  
                    __size_of_USBapp_Handler 00D2                      __size_of_TMRapp_Handler 0144  
                                    ?_memcpy 00AF                                      _BAUDCON 000FB8  
                                    ?_memset 00AF                                    ?___flpack 00AF  
                                 _device_dsc 79AC                    Set_Column_Address@address 00B0  
                                  ?___lbtofl 00B9                     __size_of_oled_displayOff 0008  
                           _USBCtrlEPService 42D2                      _moteApp_addToDataBuffer 5234  
                __size_of_moteApp_toggleLeds 00F6                                   _ep_data_in 0066  
                    __size_of_ADC_Initialize 001A                                      ?_strcmp 00AF  
                           ?_DATAEE_ReadByte 0001                  __end_of_USBCtrlTrfRxService 2EE6  
                       __size_of_sendCommand 0032                           _USBCheckStdRequest 3BEC  
                              _eusartRxCount 004D                            _configDescriptor1 7901  
                                    i2l10110 5CF0                                      i2l10200 2BA6  
                                    i2l10132 58F6                                      i2l10108 5CEC  
                                    i2l10212 2BE0                                      i2l10222 2C44  
                                    i2l10160 4370                                      i2l10152 432A  
                                    i2l10216 2BE8                                      i2l10208 2BBA  
                                    i2l10148 4322                                      i2l10164 438A  
                                    i2l10166 4390                                      i2l10192 2B94  
                                    i2l10540 5B14                                      i2l10532 5AEA  
                                    i2l10188 2B7A                                      i2l10612 296C  
                                    i2l10604 2946                                      i2l10526 5AD6  
                                    i2l10640 29F0                                      i2l10632 29AE  
                                    i2l10560 28D0                                      i2l10552 28C2  
                                    i2l10634 29C4                                      i2l10618 2980  
                                    i2l10638 29D0                                      i2l10582 28FC  
                                    i2l10574 28EE                                      i2l10832 0050  
                                    i2l10594 292E                                      i2l10588 2922  
                                    i2l10852 0084                                      i2l10598 293A  
                                    i2l13826 5596                                      i2l13828 55C6  
                                    _RS232cp 0047                              __CFG_WDTEN$SWON 000000  
                      ?_moteApp_getTempValue 00B2                           __size_of_test_leds 0066  
                                 ??i2_memset 0007                           __size_of_test_oled 00AE  
                       __size_of_moduleSleep 002A                  __end_of_USBCtrlTrfTxService 412A  
                       __size_of_moteHandler 0284                          _USBStdSetCfgHandler 3CD0  
                                    _OSCCON2 000FD2                                      _TBLPTRH 000FF7  
                                    _TBLPTRL 000FF6                                      _TBLPTRU 000FF8  
                                    _OSCTUNE 000F9B                       __size_of_oled_putUint8 00A8  
             USBapp_LEDUpdateStatus@ledCount 003C                              __CFG_WDTPS$8192 000000  
        __size_of_moteApp_convertSensorValue 00A4                                      _SSP1ADD 000FC8  
                    __end_of_CMP1_Initialize 5FC2                               ??_moduleResync 00B4  
                        ?_USBCheckStdRequest 0001                             ?_TMR2_StartTimer 0001  
               __size_of_USBStdGetDscHandler 0124                                      _UIEbits 000F64  
                                  ?_hexToStr 0001                        ADC_TempConversion@val 00E5  
                                    _UIRbits 000F65                       test_switch@buttonCheck 00C8  
            moteRunningProcess@bufferReadPos 00F1                                      _EndLine 5FD2  
                              _cdc_trf_state 004A                         DATAEE_WriteByte@bAdd 00B0  
                    __size_of_USBapp_exitCDC 0008                   __end_of_moteRunningProcess 135A  
                     ??_moteApp_clearBuffers 00AF                       ??_moteApp_clearCommand 00B2  
                 ?_moteApp_add8bToDataBuffer 00B5                                      _pCDCDst 006C  
                                    _pCDCSrc 006F                        __size_of_getsUSBUSART 00F4  
             __end_of_moteApp_getLightString 5FD2           __end_of_MOTEapp_SetDataRateSetting 25EC  
                 _MOTEapp_SetDataRateSetting 2470                                      __Hparam 0000  
                       ?_USBStdSetCfgHandler 0001                                    _CDCInitEP 52A2  
                    ?_MOTEapp_TimerBasedTask 0001                                      __Lparam 0000  
                 __size_of_USBEnableEndpoint 0040                  USBapp_exitCDCState@usbState 00AF  
                        moteHandler@s2Button 01FD                             _Set_Page_Address 5E90  
                       ??_USBCheckStdRequest 001C                 moteRunningProcess@sleepEvent 00EB  
                                    ___almod 346A                                      ___fladd 1EF4  
                          _timerMinTickCount 0080                __size_of_USBCtrlTrfOutHandler 0062  
                __size_of_moteJoiningProcess 0680                                      ___fldiv 2EE6  
                                    ___lbdiv 537C                                      ___awmod 4760  
                                    ___flmul 25EC                             ?_TMR3_StartTimer 0001  
                                    ___fltol 3140                                      ___lldiv 4DC2  
                           ??_USBDeviceTasks 001F                              __size_of___wmul 0038  
                          ??_USBStallHandler 0001                                      ___lwmod 5310  
                       oled_putint8@negative 00C7           oled_setContrastControlRegister@mod 00B0  
                                 ??___flpack 00B5                         __size_of_putUSBUSART 0024  
                                    __pcinit 55CE                           getsUSBUSART@buffer 00B6  
                            __size_of_memcpy 004C                                   ??___lbtofl 00BD  
               __size_of_USBapp_exitCDCState 000A                              __size_of_memset 0036  
                  __end_of_configDescriptor1 7944                                      __ramtop 0800  
                                    _delayms 5A32                            hexToStr@character 00AF  
                                    __ptext0 2C76                                      __ptext1 5154  
                                    __ptext2 3364                                      __ptext3 48C8  
                                    __ptext4 53E4                                      __ptext5 51C6  
                                    __ptext6 356E                                      __ptext7 5A32  
                                    __ptext8 3846                                      __ptext9 1C70  
                   __size_of_oled_setDisplay 002C                                      _inPipes 0052  
                _USBDeferOUTDataStagePackets 0088              __end_of_moteApp_lightStringSize 602A  
                            __size_of_strcmp 0060                    moteRunningProcess@counter 00F0  
                           oled_setFont@font 00AF                                    _T1CONbits 000FCD  
                      _OSCILLATOR_Initialize 5F0C                                      _exitUSB 00F9  
                               ??_USBSuspend 0016                                _oled_clearRow 5C2C  
                                  _T2CONbits 000FBA              moteApp_add8bToDataBuffer@number 00B8  
                                  _T3CONbits 000FB1                                   _oled_clear 5E76  
                           ___awmod@dividend 00AF                     ??_PIN_MANAGER_Initialize 00AF  
               __end_of_TMRapp_ClearBitFlags 6042                                 _LastRS232Out 0044  
                            i2_USBDeviceInit 2B3C                             i2USBDeviceInit@i 0009  
                          __end_of_oled_init 5C92                 __end_of_MOTEapp_handlerState 6022  
                     ??_USBapp_getrxByteFlag 00AF                           __end_of_USB_CD_Ptr 7601  
                 moteRunningProcess@readByte 00ED                   __size_of_SYSTEM_Initialize 0022  
            __size_of_USBCtrlTrfSetupHandler 0088                                   ??_hexToStr 00AF  
                                    _strncmp 4A1E                         end_of_initialization 5620  
                               _getsUSBUSART 3664                sendDataCommand@byteCount_1823 00B7  
                         __end_of_USB_SD_Ptr 75FF                                      memcpy@d 00B5  
                                    memcpy@n 00B3                                      memcpy@s 00B7  
                        _pBDTEntryEP0OutNext 0040                                      memset@c 00B1  
                                    memset@n 00B3                                      memset@p 00B5  
                              __Lmediumconst 75F8              _dummy_encapsulated_cmd_response 01E2  
   moteApp_convertSensorValue@convertedValue 00C6                     ?_USBStdFeatureReqHandler 0001  
             __end_of_MOTEapp_TimerBasedTask 5D7C                            _EUSART_Initialize 597A  
                          _oled_powerControl 5F8C                                   _rxByteFlag 0050  
                      ??_USBStdSetCfgHandler 0016                              ___lldiv@divisor 0005  
                       __size_of_test_switch 0106                                   ?_CDCInitEP 0001  
                            ___lldiv@counter 000D                            __end_of_test_leds 544A  
                          __end_of_test_oled 4976               moteJoiningProcess@changeStates 00C5  
                         ?_EUSART_Initialize 0001                           ?_oled_powerControl 0001  
                              _oled_putUint8 4976                           __end_of_USBSuspend 5DD0  
             ??_USBapp_CdcEmulatorInitialize 000D                      _USBCtrlEPAllowDataStage 4B68  
                                  _RCSTAbits 000FAB                     ??_moteApp_setLightString 00BB  
                         test_switch@timeout 00C6                                      postdec1 000FE5  
                                    postdec2 000FDD                                      postinc0 000FEE  
                                    postinc2 000FDE                    ??_moteApp_addToDataBuffer 00C3  
             moteApp_setLightString@stingPos 00BB                         __end_of_oled_devInit 505C  
                   _USBCtrlEPServiceComplete 325A                      moteApp_toggleLeds@state 00B3  
                                 _responseId 0110                                   _retryCount 00A3  
                           ?_moteApp_delayms 00AF                                _randomPortNum 00A1  
                   _MOTEapp_setResponseReady 6042                                      strcmp@r 00B4  
                 _USBStatusStageEnabledFlag1 008A                   _USBStatusStageEnabledFlag2 008B  
                              _dataRateValue 00F8                          _USBapp_handlerState 600E  
                        ??_EUSART_Initialize 00AF                          ??_oled_powerControl 00B0  
                         USBEnableEndpoint@p 000A                                    _PORTAbits 000F80  
                                  _PORTBbits 000F81                                    _PORTCbits 000F82  
                    oled_putUint8@start_page 00C6                               ?_oled_clearRow 0001  
                                 _test_comms 51C6                       ??_moteApp_getTempValue 00B4  
                       __end_of_oled_setFont 5EDC                           _Set_Column_Address 5E58  
                       __end_of_oled_putChar 48C8                                    _TRISAbits 000F92  
                                  _TRISBbits 000F93                                    _TRISCbits 000F94  
                                  _TRISEbits 000F96                            ??_oled_displayOff 00B0  
                      __size_of_EUSART_Write 004A                         __end_of_oled_putint8 4200  
                         _BothEP0OutUOWNsSet 0084             __size_of_moteApp_setSensorsInput 0094  
                              ?_test_powerup 0001                                  ___fldiv@exp 00E1  
                           ?_CMP1_Initialize 0001                    USBConfigureEndpoint@EPNum 0006  
                 ?_USBCtrlEPAllowStatusStage 0001                     __end_of_DATAEE_WriteByte 597A  
                        ?_Set_Column_Address 0001          USER_USB_CALLBACK_EVENT_HANDLER@size 0012  
                             _TMR2_ReadTimer 5FE0                                    _USTATcopy 0059  
                          __size_of_CMP1_ISR 0004                         ?_USBapp_handlerState 0001  
                         _ADC_TempConversion 3A1E                     oled_putString@start_page 00C3  
                                _CM1CON0bits 000F98                                  ___flmul@exp 00CD  
         __end_of_moteApp_convertSensorValue 4B68                   _moteApp_convertSensorValue 4AC4  
                  __end_of_EUSART_Initialize 59B8                    __end_of_oled_powerControl 5F9E  
                    oled_putint8@station_dot 00C5                 ??_oled_regulorResistorSelect 00B0  
               __end_of_USBTransferOnePacket 404C                                  _CM2CON1bits 000F9A  
                                  _TXSTAbits 000FAC                               ?_oled_putUint8 00C5  
                          putUSBUSART@length 00B1                          ?_ADC_TempConversion 0001  
                   ??_oled_initialDispayLine 00B0                        _moteApp_getLightValue 544A  
                     _USBCtrlTrfSetupHandler 4E4E                         ??_Set_Column_Address 00B0  
                    ?i2_USBTransferOnePacket 0001                         __end_of_moduleResync 4DC2  
                      __end_of_USBDeviceInit 28A8                               _TMRapp_Handler 29F8  
                             _USBapp_Handler 4200                         __size_of_TMRapp_Tick 0006  
        MOTEapp_getModuleResponse@bufferByte 00B1                               __end_of___wmul 5B52  
                               _EUSART_Write 586E                        sendDataCommand@string 00B0  
                    __end_ofi2_USBDeviceInit 2C76                            __size_of_TMR1_ISR 000C  
                 __end_of_service_pushbutton 4F5C                            __size_of_TMR3_ISR 0020  
                             _ADC_Initialize 5EAA                  moteApp_clearBuffers@counter 00AF  
                    moteApp_GoToSleep@status 00BD                                    i2memset@c 0003  
                                  i2memset@n 0005                                    i2memset@p 0007  
                             __end_of_memcpy 5822                       ?_OSCILLATOR_Initialize 0001  
                             __end_of_memset 5BF6                            _USBBusIsSuspended 0086  
                   oled_writeCommand@command 00AF                               __end_of_strcmp 556E  
                                ?_oled_clear 0001                          start_initialization 55CE  
                       ??_ADC_TempConversion 00E3                      ?_USBStdGetStatusHandler 0001  
              USBCtrlTrfRxService@byteToRead 0013                               ??_test_powerup 00EA  
        __size_of_oled_regulorResistorSelect 0012              __size_of_PIN_MANAGER_Initialize 0056  
                          ??_oled_setDisplay 00B0                                ??_EUSART_Read 00AF  
                     __end_of_TMR2_ReadTimer 5FEC              __end_of_moteApp_addToDataBuffer 52A2  
                                _cdc_data_rx 000540                                  _cdc_data_tx 000500  
                __end_ofi2_EUSART_Initialize 59F6                            __size_ofi2_memset 002E  
                                  _OledFont0 7601                 __end_of_USBConfigureEndpoint 4C9E  
            __end_of_USBStdFeatureReqHandler 1C70                     __size_of_sendDataCommand 00DE  
                      ??_USBapp_handlerState 00AF              moteApp_convertSensorValue@index 00C5  
          __end_of_USBCtrlEPAllowStatusStage 4472                                _periodicState 00FC  
                             _USBapp_exitCDC 6032                     __end_of_USBCtrlEPService 43A2  
       __end_of_USART_mySetLineCodingHandler 56DE        __size_of_USART_mySetLineCodingHandler 005A  
               _USART_mySetLineCodingHandler 5684                   __end_of_EUSART_FlushBuffer 57D6  
                        DATAEE_ReadByte@bAdd 00AF                __size_of_USBapp_setrxByteFlag 0006  
                              _moteModeState 009E                    ??_USBCtrlEPAllowDataStage 0002  
                                ??_CDCInitEP 000D                               USBDeviceInit@i 00B7  
                         _periodicTimerValue 00FD                       _pBDTEntryEP0OutCurrent 003E  
                   __size_of_TMR1_Initialize 0038                      USBTransferOnePacket@dir 00AF  
                    USBTransferOnePacket@len 00B2                       __end_of_USBapp_Handler 42D2  
                     __end_of_TMRapp_Handler 2B3C               __end_ofi2_USBTransferOnePacket 4532  
                       _TMRapp_ClearBitFlags 603A                                     ??___wmul 00B3  
            __size_of_moteApp_setLightString 0080                          _USBStdGetDscHandler 301C  
                       _MOTEapp_handlerState 6018                       __end_of_ADC_Initialize 5EC4  
                                __pdataBANK0 00F4                                     ??_memcpy 00B5  
                                   ??_memset 00B5                              ??_oled_clearRow 00BB  
            MOTEapp_TimerBasedTask@timerTask 00AF                          _moduleResonseBuffer 0168  
                                   ??_strcmp 00B3                                  ?_test_comms 0001  
                  oled_putString@station_dot 00C2                            __size_of___flpack 0180  
                     _USBActiveConfiguration 0058               __end_of_USBStdGetStatusHandler 4760  
                          __size_of___lbtofl 0036                  __end_of_EUSART_Transmit_ISR 5AE0  
                                __pbssCOMRAM 002E                   service_pushbutton@PB_Timer 0124  
                              __pcstackBANK0 00AF                                __pcstackBANK1 01FB  
               __size_of_USBCtrlTrfInHandler 00E6                     __size_of_TMR2_Initialize 0014  
                   __end_of_Set_Page_Address 5EAA                              ?_TMR2_ReadTimer 0001  
                                _activeState 008C                         ?_USBStdGetDscHandler 0001  
                     __end_of_USBapp_exitCDC 603A           __size_of_MOTEapp_getModuleResponse 007C  
                 ?_MOTEapp_getModuleResponse 0001                    ADC_TempConversion@tempRaw 00E3  
                 __end_of_EUSART_Receive_ISR 5B1A               moteRunningProcess@messageReady 00EA  
                                   ?_EndLine 0001                          _USBapp_exitCDCState 6004  
                 __end_of_USBWakeFromSuspend 5CF6                   __size_of_EUSART_Initialize 003E  
                 __size_of_oled_powerControl 0012                            __size_of_hexToStr 003C  
                            _USBStallHandler 58B8                                 _pBDTEntryOut 0060  
                        __end_of_EUSART_Read 586E                   __end_of_USBCheckCDCRequest 46A8  
                            ??_oled_putUint8 00C7                         oled_putString@string 00C0  
                   __size_of_USBDeviceAttach 0036                                    _appDevEui 0100  
                ??_moteApp_add8bToDataBuffer 00B6                            _oled_writeCommand 5EF4  
                      __size_of_oled_devInit 0080                      oled_putChar@station_dot 00B1  
                ?_MOTEapp_SetDataRateSetting 0001                       _PIN_MANAGER_Initialize 56DE  
                     ?_moteApp_getLightValue 00BC                          __size_of_oled_clear 001A  
                      ?_TMRapp_ClearBitFlags 0001                              _messageReceived 009C  
                   __size_of_TMR3_Initialize 0022                         EUSART_Read@readValue 00AF  
            __size_of_oled_initialDispayLine 0014                              ?_TMRapp_Handler 0001  
                            ?_USBapp_Handler 0001                                    __pintcode 0008  
                         ?_oled_writeCommand 0001                                __pmediumconst 75F8  
                                   ?___almod 00AF                                     ?___fladd 00B9  
                      ?_MOTEapp_handlerState 0001                                     ?___fldiv 00D4  
                                  __ptext100 5FB0                                    __ptext101 5EAA  
                                   ?___lbdiv 00AF                                    __ptext110 58B8  
                                  __ptext102 6018                                    __ptext111 42D2  
                                  __ptext103 5F24                                    __ptext120 19DA  
                                  __ptext112 4E4E                                    __ptext121 556E  
                                  __ptext113 325A                                    __ptext105 6050  
                                  __ptext130 43A2                                    __ptext122 562A  
                                  __ptext114 4B68                                    __ptext106 28A8  
                                  __ptext131 3B06                                    __ptext123 52A2  
                                  __ptext115 3BEC                                    __ptext107 2B3C  
                                  __ptext140 5AE0                                    __ptext132 404C  
                                  __ptext124 4472                                    __ptext116 3CD0  
                                  __ptext108 5CC4                                    __ptext141 6068  
                                  __ptext133 5684                                    __ptext125 58FC  
                                  __ptext117 5CF6                                    __ptext109 5DA6  
                                  __ptext142 0000                                    __ptext134 59B8  
                                  __ptext126 4C08                                    __ptext118 46A8  
                                  __ptext135 4DC2                                    __ptext127 45EE  
                                  __ptext119 301C                                    __ptext136 6056  
                                  __ptext128 54AC                                    __ptext137 5E38  
                                  __ptext129 2DAE                                    __ptext138 5FEC  
                                  __ptext139 5AA6                                     ?___awmod 00AF  
                                   ?___flmul 00C5                                     ?___fltol 00AF  
                 __end_of_moteApp_toggleLeds 3664                                     ?___lldiv 0001  
                                   ?___lwmod 00AF                              ?_ADC_Initialize 0001  
                      __size_of_oled_setFont 0018                                 _eusartRxHead 0096  
                              ??_sendCommand 00B2            moteApp_getTempValue@escapeCounter 00B4  
                               _eusartTxHead 0098                                 _eusartRxTail 0097  
               __size_of_moteApp_testSensors 00EC                                 _eusartTxTail 0099  
                       ?_USBapp_exitCDCState 0001                        __size_of_oled_putChar 00B4  
                         _moteRunningProcess 00C8                            _moduleBufferIndex 004F  
                                   ?_delayms 00AF                 ??_INTERRUPT_InterruptManager 0020  
                           ___almod@dividend 00AF                             ?i2_USBDeviceInit 0001  
                     moteHandler@readMessage 01FF                          ??_oled_writeCommand 00AF  
                              ??_moduleSleep 00B2                                ??_moteHandler 00F3  
                      __size_of_oled_putint8 00D6                      _eusartTxBufferRemaining 004E  
                       _USBTransferOnePacket 3F6E                                    _mainState 009B  
                   __size_of_TMR1_StartTimer 0004                      _moteApp_setSensorsInput 4C9E  
                     moteHandler@buttonPress 01FE                          ?_moteRunningProcess 00E9  
               __end_of_USBCtrlTrfOutHandler 550E                                    _minTicker 009D  
                      ??_USBStdGetDscHandler 0001                                     _CMP1_ISR 6068  
                     _moteApp_setLightString 4F5C                                  _ep_data_out 0069  
               __size_of_USBCtrlTrfRxService 0138                                    _secTicker 00A6  
                            ?_USBapp_exitCDC 0001                USBConfigureEndpoint@direction 0001  
                   __size_of_DATAEE_ReadByte 0018                                     ?_strncmp 00AF  
                        oled_putint8@numData 00C8                     ?_moteApp_lightStringSize 0001  
                               _oled_devInit 4FDC           __end_of_oled_regulorResistorSelect 5F8C  
                 _oled_regulorResistorSelect 5F7A                               _eusartRxBuffer 0200  
              moteApp_addToDataBuffer@string 00C0                            _dataRateSelection 00F7  
                           _timerMsTickCount 0082                                    _oled_init 5C60  
               __size_of_USBCtrlTrfTxService 00DE            __end_of_MOTEapp_getModuleResponse 50D8  
                             _eusartTxBuffer 0240                               ___wmul@product 00B3  
                                   _LATAbits 000F89                                     _IOCCbits 000F87  
                  __end_of_oled_writeCommand 5F0C                                     _LATBbits 000F8A  
                                   _LATCbits 000F8B                                     _LATEbits 000F8D  
                 ??_USBCtrlEPServiceComplete 0002                   ??_MOTEapp_setResponseReady 00AF  
                                   _PIE1bits 000F9D                                     _IPR3bits 000FA5  
                                   _PIE2bits 000FA0                                     _PIE3bits 000FA3  
                        __size_of_test_comms 006E                     __size_of_TMR2_StartTimer 0004  
                               _oled_setFont 5EC4                                    _moteState 00FB  
                          ??_sendDataCommand 00B5                                _operationType 009F  
                      __size_of_moduleResync 0090                         ??_moteRunningProcess 00EC  
                 __end_of_moteJoiningProcess 19DA          __size_of_INTERRUPT_InterruptManager 00BC  
                               _oled_putChar 4814                                     _PIR1bits 000F9E  
                                   i2u506_40 40CA                                     i2u506_47 40C0  
                                   i2u602_48 2EC2                                     _PIR2bits 000FA1  
              __size_of_moteApp_clearBuffers 00BC                                     i2u508_40 410E  
              __size_of_moteApp_clearCommand 0012                                     i2u508_47 4104  
                                   _PIR3bits 000FA4                                     i2u534_40 3090  
                                   i2u534_47 3086                                     i2u535_40 30BE  
                                   i2u535_47 30B4                                     i2u720_48 3BCC  
                                   i2u537_40 310E                                     i2u537_47 3104  
                  USBCtrlEPService@setup_cnt 001E                                     _RCONbits 000FD0  
                       __end_of_test_powerup 51C6                                 _oled_putint8 412A  
                              ??_putUSBUSART 00B2                                     _UEP0bits 000F6A  
                 _USBDeferINDataStagePackets 0087                                     _SSP1CON1 000FC6  
                __size_of_USBCheckStdRequest 00E4                                     _TMR1_ISR 5FEC  
                    __size_of_oled_putString 007C                                     _TMR3_ISR 5E38  
                                   _SSP1STAT 000FC7                                     _UCONbits 000F60  
                            _oled_displayOff 602A                                    _test_leds 53E4  
                                   _VREFCON0 000F7D               moteRunningProcess@selectButton 00E9  
                       _USBConfigureEndpoint 4C08                                    _test_oled 48C8  
                      ??_USBapp_exitCDCState 00AF             __size_of_USBStdFeatureReqHandler 0296  
                          ??_TMR1_Initialize 00AF                                   _ADCON0bits 000FC2  
                    Set_Page_Address@address 00B0                            ___wmul@multiplier 00AF  
                      ?_USBTransferOnePacket 00AF          moteRunningProcess@sizeOfUpdate_1693 00EF  
                     ADC_TempConversion@temp 00E4                       oled_putint8@start_page 00C6  
                  _moteApp_add8bToDataBuffer 3E90                      __size_of_oled_writeData 0018  
                              ?_CDCTxService 0001                     __size_of_TMR3_StartTimer 0004  
                   moteHandler@gotoNextState 01FC                                 _RemoteWakeup 0085  
                        __end_of_sendCommand 5CC4                                     i2_memset 5CF6  
                          __CFG_CFGPLLEN$OFF 000000                       _oled_initialDispayLine 5F52  
                      DATAEE_WriteByte@bData 00AF                           _RS232_Out_Data_Rdy 0046  
          moteApp_setLightString@lightString 00B9                      __end_of_USBStallHandler 58FC  
                        __end_of_moduleSleep 5DA6                          __end_of_moteHandler 1EF4  
                                _EUSART_Read 5822                            _moteApp_GoToSleep 3758  
                                _INTCON3bits 000FF0                                    copy_data0 5614  
                ??_USBCtrlEPAllowStatusStage 0001        moteApp_addToDataBuffer@bufferLocation 00C2  
                               _moduleResync 4D32                  __end_of_USBStdSetCfgHandler 3DB2  
                          ?_DATAEE_WriteByte 00AF                __size_of_USBapp_getrxByteFlag 0006  
                         ?_moteApp_GoToSleep 0001                                   ?_oled_init 0001  
                          ??_TMR2_Initialize 00AF                                ??_test_switch 00C5  
MOTEapp_getModuleResponse@terminatorReceived 00B0                  ?_moteApp_convertSensorValue 00C0  
                           __size_of_EndLine 000E                           ??_DATAEE_WriteByte 00B0  
                         __end_of_device_dsc 79BE                                   _EECON1bits 000FA6  
                    ?_USBCtrlTrfSetupHandler 0001                USBapp_CdcEmulatorInitialize@i 000D  
                     ??_TMRapp_ClearBitFlags 00AF                      USBStdGetStatusHandler@p 0002  
                                   __Hrparam 0000                          ??_moteApp_GoToSleep 00BD  
                                   __Lrparam 0000                       USBTransferOnePacket@ep 00B3  
                     ??_MOTEapp_handlerState 00AF                           __CFG_BOREN$SBORDIS 000000  
                                   _SetupPkt 000430                      ??_OSCILLATOR_Initialize 00AF  
                      ?_USBConfigureEndpoint 0001                             __size_of___almod 0104  
                           __size_of___fladd 026C                            ??_USBDeviceAttach 00AF  
                                 ?_test_leds 0001                             __size_of___fldiv 0136  
                           __size_of___lbdiv 0068                                   ?_test_oled 0001  
                           __size_of___awmod 00B4                             __size_of___flmul 0164  
                           __size_of___fltol 011A                   oled_initialDispayLine@line 00B0  
             moteJoiningProcess@readDataRate 00C8                                 _selectedFont 00F4  
                           __size_of___lldiv 008C                              _oled_setDisplay 5D24  
                                   ___flpack 22F0             moteApp_clearBuffers@counter_1905 00B0  
           moteApp_clearBuffers@counter_1906 00B1             moteApp_clearBuffers@counter_1907 00B2  
                           __size_of___lwmod 006C                                     ___lbtofl 5B8A  
                  MOTEapp_handlerState@state 00AF                            ??_TMR3_Initialize 00AF  
                  ??_moteApp_setSensorsInput 00B4                             __size_of_delayms 003A  
                                 _ANSELAbits 000F5B                          __end_of_putUSBUSART 5DF4  
                                _line_coding 01EA                                   _ANSELCbits 000F5D  
                             ??_CDCTxService 00B6                                _responseReady 00A2  
                               ??_oled_clear 00BD                                  _menuTimeout 00FA  
                   __size_of_moteApp_delayms 003A                    __end_of_moteApp_GoToSleep 3846  
              __size_of_moteApp_getTempValue 0052                      __size_of_USBDeviceTasks 0150  
                                   _appTimer 008E                                     _appState 008D  
                                   __ptext10 00C8                                     __ptext11 3DB2  
                                   __ptext20 57D6                                     __ptext12 59F6  
                                   __ptext21 5FC2                                     __ptext13 412A  
                                 _T1GCONbits 000FCC                                     __ptext30 5C60  
                                   __ptext22 4AC4                                     __ptext14 4976  
                                   __ptext31 5EC4                                     __ptext23 5B1A  
                                   __ptext15 4C9E                                     __ptext40 4D32  
                                   __ptext32 5D24                                     __ptext24 4532  
                                   __ptext16 6022                                     __ptext41 505C  
                                   __ptext33 4FDC                                     __ptext25 5234  
                                   __ptext17 5734                                     __ptext50 1EF4  
                                   __ptext42 5786                                     __ptext34 5F3C  
                                   __ptext26 3E90                                     __ptext18 544A  
                                   __ptext51 22F0                                     __ptext43 5FE0  
                                   __ptext35 5F7A                                     __ptext27 537C  
                                   __ptext19 4F5C                                     __ptext60 5310  
                                   __ptext52 135A                                     __ptext44 2470  
                                   __ptext36 5F8C                                     __ptext28 4760  
                                   __ptext61 346A                                     __ptext53 4A1E  
                                   __ptext45 3A1E                                     __ptext37 5F52  
                                   __ptext29 3758                                     __ptext70 50D8  
                                   __ptext62 603A                                     __ptext54 550E  
                                   __ptext46 5B8A                                     __ptext38 602A  
                                   __ptext71 5E76                                     __ptext63 5D50  
                                   __ptext55 5A6C                                     __ptext47 3140  
                                   __ptext39 5D7C                                     __ptext80 3664  
                                   __ptext72 5C2C                                     __ptext64 5F9E  
                                   __ptext56 593C                                     __ptext48 25EC  
                                   __ptext81 604A                                     __ptext73 4814  
                                   __ptext65 5C92                                     __ptext57 6004  
                                   __ptext49 2EE6                                     __ptext90 5DF4  
                                   __ptext82 6042                                     __ptext74 5EDC  
                                   __ptext66 5FD2                                     __ptext58 6032  
                                   __ptext91 5E16                                     __ptext83 586E  
                                   __ptext75 5E90                                     __ptext67 600E  
                                   __ptext59 29F8                                     __ptext92 605C  
                                   __ptext84 5822                                     __ptext76 5E58  
                                   __ptext68 4200                                     __ptext93 5F66  
                                   __ptext85 2160                                     __ptext77 5EF4  
                                   __ptext69 4ED6                                     __ptext94 6060  
                                   __ptext86 3F6E                                     __ptext78 3932  
                                   __ptext95 5B52                                     __ptext87 2750  
                                   __ptext79 5DD0                                     __ptext96 6064  
                                   __ptext88 5BC0                                     __ptext97 56DE  
                                   __ptext89 5BF6                                     __ptext98 5F0C  
                                   __ptext99 597A         __end_of_USBapp_CdcEmulatorInitialize 5684  
      __size_of_USBapp_CdcEmulatorInitialize 005A                 _USBapp_CdcEmulatorInitialize 562A  
                               _SSP1CON1bits 000FC6                                     _dotCount 0095  
                                   _hexToStr 59F6                           _service_pushbutton 4ED6  
                            ___almod@divisor 00B3                            ??_TMR1_StartTimer 00AF  
                            ___almod@counter 00B7                                   _T3GCONbits 000FB4  
                DATAEE_WriteByte@GIEBitValue 00B1                     ??_moteApp_getLightString 00B1  
                                _OSCCON2bits 000FD2                             __size_of_strncmp 00A6  
             __end_of_USBCtrlTrfSetupHandler 4ED6                                __size_of_main 0138  
                          ?_USBCtrlEPService 0001                   __size_of_oled_writeCommand 0018  
                             _Contrast_level 00F6                                     _rnModule 00A4  
                         oled_putint8@number 00CE                                   strncmp@len 00B3  
                        ?_service_pushbutton 0001                            ??_DATAEE_ReadByte 00AF  
                   __size_of_CMP1_Initialize 0012                     ?_moteApp_addToDataBuffer 00C0  
                    __end_of_oled_displayOff 6032                           ??_USBCtrlEPService 001C  
                  moduleResync@escapeCounter 00B4                                     delayms@i 00B2  
                                   delayms@t 00AF                          _USBCtrlTrfInHandler 3B06  
                              ??_TMRapp_Tick 0001                             _dataRatePosition 0093  
                         __end_of_oled_clear 5E90                          __end_of_test_switch 346A  
                                   _outPipes 002E                         _USBCtrlTrfOutHandler 54AC  
                                   _usbState 00A8                    _USBCtrlEPAllowStatusStage 43A2  
                __size_of_Set_Column_Address 001E                            ??_TMR2_StartTimer 00AF  
         __end_of_INTERRUPT_InterruptManager 00C4                   _INTERRUPT_InterruptManager 0008  
             moteRunningProcess@sizeOfUpdate 00EE                                 _SSP1STATbits 000FC7  
                                _sendCommand 5C92                       ??_USBTransferOnePacket 00B3  
                         oled_clearRow@index 00BC                           _EUSART_FlushBuffer 5786  
                               ??_test_comms 00C5                 __end_of_USBapp_setrxByteFlag 6056  
                      ___flmul@f3_as_product 00CE                                  _moduleSleep 5D7C  
                                _moteHandler 1C70                             ??_TMR2_ReadTimer 00AF  
                       ??_service_pushbutton 00AF                    _USBDeferStatusStagePacket 0048  
                   CDCTxService@byte_to_send 00BA                                   _INTCONbits 000FF2  
                __end_of_USBapp_handlerState 6018                         ?_USBCtrlTrfInHandler 0001  
                        ?_EUSART_FlushBuffer 0001                                     memcpy@d1 00AF  
                __size_of_ADC_TempConversion 00E8                                     memcpy@s1 00B1  
              USBCtrlTrfTxService@byteToSend 0001                                     memset@p1 00AF  
                           ?_USBStallHandler 0001                     USBStdFeatureReqHandler@p 001A  
                          ?_Set_Page_Address 0001                     ??_MOTEapp_TimerBasedTask 00AF  
                               _responseData 01A8                            ??_TMR3_StartTimer 00AF  
              ?_USBapp_CdcEmulatorInitialize 0001                                     intlevel2 0000  
                        _moteApp_testSensors 3846                                  ??_oled_init 00BD  
                ??_MOTEapp_getModuleResponse 00B0                           ??_Set_Page_Address 00B0  
                     __size_of_USBDeviceInit 0158                         oled_powerControl@vol 00B0  
    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 55CE     __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0060  
          ??_USER_USB_CALLBACK_EVENT_HANDLER 0014             ?_USER_USB_CALLBACK_EVENT_HANDLER 000E  
            _USER_USB_CALLBACK_EVENT_HANDLER 556E               moteJoiningProcess@messageReady 00CA  
            __end_of_moteApp_setSensorsInput 4D32                             ___lwmod@dividend 00AF  
               i2USBTransferOnePacket@handle 0006                                 _VREFCON0bits 000F7D  
                           ___lldiv@dividend 0001                      ?_PIN_MANAGER_Initialize 0001  
                    ??_moteApp_getLightValue 00BE                             ??_USBapp_Handler 00C5  
                           ??_TMRapp_Handler 00B9                        __size_of_test_powerup 0072  
                       moteHandler@gotoSleep 01FB                 __size_ofi2_EUSART_Initialize 003E  
                                  strncmp@s1 00AF                                    strncmp@s2 00B1  
                           ??_ADC_Initialize 00AF                           __end_of_test_comms 5234  
                       ??_EUSART_FlushBuffer 00AF                      __end_of_oled_setDisplay 5D50  
                 i2USBTransferOnePacket@data 0002                                  _sleepTicker 00A7  
                     ??_USBConfigureEndpoint 0002                        ?_USBCtrlTrfOutHandler 0001  
                             _oled_putString 50D8                                  _putUSBUSART 5DD0  
                         _EUSART_Receive_ISR 5AE0                            oled_clearRow@page 00BB  
                       __CFG_CPUDIV$NOCLKDIV 000000                          _USBCtrlTrfRxService 2DAE  
                         _USBWakeFromSuspend 5CC4                                  ??_test_leds 00C5  
                              _powerOnStatus 00A0                                  ??_test_oled 00C5  
                    _USBStdFeatureReqHandler 19DA                         ?_moteApp_testSensors 0001  
    __end_of_USBapp_DeviceCdcEmulatorHandler 3A1E     __size_of_USBapp_DeviceCdcEmulatorHandler 00EC  
           ?_USBapp_DeviceCdcEmulatorHandler 0001            ??_USBapp_DeviceCdcEmulatorHandler 00BC  
            _USBapp_DeviceCdcEmulatorHandler 3932                           _USBCheckCDCRequest 45EE  
                        _USBCtrlTrfTxService 404C                          __end_of_TMRapp_Tick 605C  
                      __end_of_oled_clearRow 5C60                                  _temperature 007C  
                        ?_EUSART_Receive_ISR 0001                               _oled_writeData 5EDC  
                        ?_USBWakeFromSuspend 0001                                     strcmp@s1 00AF  
                                   strcmp@s2 00B1                      ?_moteApp_setLightString 00B9  
                           ___lldiv@quotient 0009                              ___lwmod@divisor 00B1  
                           ??_USBapp_exitCDC 00AF                        ??_USBCtrlTrfInHandler 0012  
                      _USBAlternateInterface 00AD                              ___lwmod@counter 00B3  
                        ?_USBCheckCDCRequest 0001                   __size_of_moteApp_GoToSleep 00EE  
                  i2USBTransferOnePacket@dir 0001                           _moteApp_toggleLeds 356E  
                  i2USBTransferOnePacket@len 0004                          USBEnableEndpoint@ep 000C  
                            _endpoint_number 004C                                   _WDTCONbits 000FD1  
                               _test_powerup 5154                              _sendDataCommand 3DB2  
                       ?_USBCtrlTrfRxService 0001                                ?_getsUSBUSART 00B6  
                   oled_putUint8@station_dot 00C5                           __CFG_FOSC$INTOSCIO 000000  
                         EUSART_Write@txData 00AF                 __size_of_EUSART_Transmit_ISR 003A  
             __end_of_PIN_MANAGER_Initialize 5734                     ?_USBCtrlEPAllowDataStage 0001  
         __size_of_moteApp_add8bToDataBuffer 00DE                                 ___almod@sign 00B8  
                       ?_USBCtrlTrfTxService 0001                            ??_moteApp_delayms 00B1  
            __size_of_moteApp_getLightString 0010                  ?_oled_regulorResistorSelect 0001  
                        ?_moteApp_toggleLeds 0001                                 ___fladd@exp1 00C4  
                               ___fladd@exp2 00C3                                 ___fladd@sign 00C2  
               _USBStatusStageTimeoutCounter 0049                                  _test_switch 3364  
                       ??_EUSART_Receive_ISR 0001                         ??_USBWakeFromSuspend 0016  
                 USBTransferOnePacket@handle 00B4                         __end_of_CDCTxService 22F0  
                            _TMR1_Initialize 5B52            moteJoiningProcess@joiningComplete 00C9  
                           ?_oled_displayOff 0001                        __end_of_oled_putUint8 4A1E  
                     __end_of_oled_putString 5154                         ??_USBCheckCDCRequest 0001  
                                 _USB_CD_Ptr 75FF  
