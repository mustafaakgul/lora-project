

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Aug 13 10:41:43 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1,group=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1,group=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1,group=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1,group=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1,group=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=2,class=CODE,delta=1
   231                           	psect	text208,global,reloc=2,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1
   234                           	psect	text211,global,reloc=2,class=CODE,delta=1
   235                           	psect	text212,global,reloc=2,class=CODE,delta=1
   236                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   239                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   240  0000                     
   241                           ; Version 1.45
   242                           ; Generated 16/11/2017 GMT
   243                           ; 
   244                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   245                           ; All rights reserved.
   246                           ; 
   247                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   248                           ; 
   249                           ; Redistribution and use in source and binary forms, with or without modification, are
   250                           ; permitted provided that the following conditions are met:
   251                           ; 
   252                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   253                           ;        conditions and the following disclaimer.
   254                           ; 
   255                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   256                           ;        of conditions and the following disclaimer in the documentation and/or other
   257                           ;        materials provided with the distribution.
   258                           ; 
   259                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   260                           ;        software without specific prior written permission.
   261                           ; 
   262                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   263                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   264                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   265                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   266                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   267                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   268                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   269                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   270                           ; 
   271                           ; 
   272                           ; Code-generator required, PIC18LF46K22 Definitions
   273                           ; 
   274                           ; SFR Addresses
   275  0000                     
   276 ;; Function _DIO5_ISR_Lora is unused but had its address taken
   277  0000                     
   278 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   279 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   280 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   281 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   282 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   283 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   284 ;;_LORAWAN_LinkCheckCallback$2510	offset	0
   285 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   286 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   287 ;;_DutyCycleCallback$1856	offset	0
   288 ;;DutyCycleCallback@minim	offset	4
   289 ;;DutyCycleCallback@i	offset	8
   290 ;;DutyCycleCallback@found	offset	9
   291 ;;DutyCycleCallback@param	offset=-1 (param)
   292 ;;AutomaticReplyCallback@param	offset=-1 (param)
   293 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   294 ;;AckRetransmissionCallback@param	offset=-1 (param)
   295 ;;_param	offset=-1 (param)
   296 ;;_UpdateJoinSuccessState$2527	offset	0
   297 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   298                           
   299                           	psect	idataCOMRAM
   300  0000'                    __pidataCOMRAM:
   301                           	opt stack 0
   302                           
   303                           ;initializer for _ticksToScheduledInterrupt
   304  0000' FFFF               	dw	65535
   305  0002' FFFF               	dw	65535
   306                           
   307                           	psect	idataBANK1
   308  0000'                    __pidataBANK1:
   309                           	opt stack 0
   310                           
   311                           ;initializer for GenerateSubkey@F7103
   312  0000' 00                 	db	0
   313  0001' 00                 	db	0
   314  0002' 00                 	db	0
   315  0003' 00                 	db	0
   316  0004' 00                 	db	0
   317  0005' 00                 	db	0
   318  0006' 00                 	db	0
   319  0007' 00                 	db	0
   320  0008' 00                 	db	0
   321  0009' 00                 	db	0
   322  000A' 00                 	db	0
   323  000B' 00                 	db	0
   324  000C' 00                 	db	0
   325  000D' 00                 	db	0
   326  000E' 00                 	db	0
   327  000F' 87                 	db	135
   328                           
   329                           ;initializer for _randx
   330  0010' 0001               	dw	1
   331  0012' 0000               	dw	0
   332                           
   333                           ;initializer for _devAddr
   334  0014' 5E47               	dw	24135
   335  0016' 3DEF               	dw	15855
   336                           
   337                           ;initializer for _nwkSKey
   338  0018' CB                 	db	203
   339  0019' 1E                 	db	30
   340  001A' 88                 	db	136
   341  001B' 5D                 	db	93
   342  001C' 5D                 	db	93
   343  001D' F1                 	db	241
   344  001E' 12                 	db	18
   345  001F' D5                 	db	213
   346  0020' 08                 	db	8
   347  0021' CC                 	db	204
   348  0022' B9                 	db	185
   349  0023' D1                 	db	209
   350  0024' D4                 	db	212
   351  0025' 4B                 	db	75
   352  0026' 1E                 	db	30
   353  0027' DF                 	db	223
   354                           
   355                           	psect	idataBANK3
   356  0000'                    __pidataBANK3:
   357                           	opt stack 0
   358                           
   359                           ;initializer for _appSKey
   360  0000' 96                 	db	150
   361  0001' 23                 	db	35
   362  0002' 5A                 	db	90
   363  0003' 1F                 	db	31
   364  0004' 9A                 	db	154
   365  0005' E1                 	db	225
   366  0006' 60                 	db	96
   367  0007' 36                 	db	54
   368  0008' 81                 	db	129
   369  0009' C4                 	db	196
   370  000A' E4                 	db	228
   371  000B' B5                 	db	181
   372  000C' 54                 	db	84
   373  000D' C3                 	db	195
   374  000E' CA                 	db	202
   375  000F' B5                 	db	181
   376                           
   377                           	psect	mediumconst
   378  0000'                    __pmediumconst:
   379                           	opt stack 0
   380  0000' 00                 	db	0
   381  0001'                    _STable:
   382                           	opt stack 0
   383  0001' 63                 	db	99
   384  0002' 7C                 	db	124
   385  0003' 77                 	db	119
   386  0004' 7B                 	db	123
   387  0005' F2                 	db	242
   388  0006' 6B                 	db	107
   389  0007' 6F                 	db	111
   390  0008' C5                 	db	197
   391  0009' 30                 	db	48
   392  000A' 01                 	db	1
   393  000B' 67                 	db	103
   394  000C' 2B                 	db	43
   395  000D' FE                 	db	254
   396  000E' D7                 	db	215
   397  000F' AB                 	db	171
   398  0010' 76                 	db	118
   399  0011' CA                 	db	202
   400  0012' 82                 	db	130
   401  0013' C9                 	db	201
   402  0014' 7D                 	db	125
   403  0015' FA                 	db	250
   404  0016' 59                 	db	89
   405  0017' 47                 	db	71
   406  0018' F0                 	db	240
   407  0019' AD                 	db	173
   408  001A' D4                 	db	212
   409  001B' A2                 	db	162
   410  001C' AF                 	db	175
   411  001D' 9C                 	db	156
   412  001E' A4                 	db	164
   413  001F' 72                 	db	114
   414  0020' C0                 	db	192
   415  0021' B7                 	db	183
   416  0022' FD                 	db	253
   417  0023' 93                 	db	147
   418  0024' 26                 	db	38
   419  0025' 36                 	db	54
   420  0026' 3F                 	db	63
   421  0027' F7                 	db	247
   422  0028' CC                 	db	204
   423  0029' 34                 	db	52
   424  002A' A5                 	db	165
   425  002B' E5                 	db	229
   426  002C' F1                 	db	241
   427  002D' 71                 	db	113
   428  002E' D8                 	db	216
   429  002F' 31                 	db	49
   430  0030' 15                 	db	21
   431  0031' 04                 	db	4
   432  0032' C7                 	db	199
   433  0033' 23                 	db	35
   434  0034' C3                 	db	195
   435  0035' 18                 	db	24
   436  0036' 96                 	db	150
   437  0037' 05                 	db	5
   438  0038' 9A                 	db	154
   439  0039' 07                 	db	7
   440  003A' 12                 	db	18
   441  003B' 80                 	db	128
   442  003C' E2                 	db	226
   443  003D' EB                 	db	235
   444  003E' 27                 	db	39
   445  003F' B2                 	db	178
   446  0040' 75                 	db	117
   447  0041' 09                 	db	9
   448  0042' 83                 	db	131
   449  0043' 2C                 	db	44
   450  0044' 1A                 	db	26
   451  0045' 1B                 	db	27
   452  0046' 6E                 	db	110
   453  0047' 5A                 	db	90
   454  0048' A0                 	db	160
   455  0049' 52                 	db	82
   456  004A' 3B                 	db	59
   457  004B' D6                 	db	214
   458  004C' B3                 	db	179
   459  004D' 29                 	db	41
   460  004E' E3                 	db	227
   461  004F' 2F                 	db	47
   462  0050' 84                 	db	132
   463  0051' 53                 	db	83
   464  0052' D1                 	db	209
   465  0053' 00                 	db	0
   466  0054' ED                 	db	237
   467  0055' 20                 	db	32
   468  0056' FC                 	db	252
   469  0057' B1                 	db	177
   470  0058' 5B                 	db	91
   471  0059' 6A                 	db	106
   472  005A' CB                 	db	203
   473  005B' BE                 	db	190
   474  005C' 39                 	db	57
   475  005D' 4A                 	db	74
   476  005E' 4C                 	db	76
   477  005F' 58                 	db	88
   478  0060' CF                 	db	207
   479  0061' D0                 	db	208
   480  0062' EF                 	db	239
   481  0063' AA                 	db	170
   482  0064' FB                 	db	251
   483  0065' 43                 	db	67
   484  0066' 4D                 	db	77
   485  0067' 33                 	db	51
   486  0068' 85                 	db	133
   487  0069' 45                 	db	69
   488  006A' F9                 	db	249
   489  006B' 02                 	db	2
   490  006C' 7F                 	db	127
   491  006D' 50                 	db	80
   492  006E' 3C                 	db	60
   493  006F' 9F                 	db	159
   494  0070' A8                 	db	168
   495  0071' 51                 	db	81
   496  0072' A3                 	db	163
   497  0073' 40                 	db	64
   498  0074' 8F                 	db	143
   499  0075' 92                 	db	146
   500  0076' 9D                 	db	157
   501  0077' 38                 	db	56
   502  0078' F5                 	db	245
   503  0079' BC                 	db	188
   504  007A' B6                 	db	182
   505  007B' DA                 	db	218
   506  007C' 21                 	db	33
   507  007D' 10                 	db	16
   508  007E' FF                 	db	255
   509  007F' F3                 	db	243
   510  0080' D2                 	db	210
   511  0081' CD                 	db	205
   512  0082' 0C                 	db	12
   513  0083' 13                 	db	19
   514  0084' EC                 	db	236
   515  0085' 5F                 	db	95
   516  0086' 97                 	db	151
   517  0087' 44                 	db	68
   518  0088' 17                 	db	23
   519  0089' C4                 	db	196
   520  008A' A7                 	db	167
   521  008B' 7E                 	db	126
   522  008C' 3D                 	db	61
   523  008D' 64                 	db	100
   524  008E' 5D                 	db	93
   525  008F' 19                 	db	25
   526  0090' 73                 	db	115
   527  0091' 60                 	db	96
   528  0092' 81                 	db	129
   529  0093' 4F                 	db	79
   530  0094' DC                 	db	220
   531  0095' 22                 	db	34
   532  0096' 2A                 	db	42
   533  0097' 90                 	db	144
   534  0098' 88                 	db	136
   535  0099' 46                 	db	70
   536  009A' EE                 	db	238
   537  009B' B8                 	db	184
   538  009C' 14                 	db	20
   539  009D' DE                 	db	222
   540  009E' 5E                 	db	94
   541  009F' 0B                 	db	11
   542  00A0' DB                 	db	219
   543  00A1' E0                 	db	224
   544  00A2' 32                 	db	50
   545  00A3' 3A                 	db	58
   546  00A4' 0A                 	db	10
   547  00A5' 49                 	db	73
   548  00A6' 06                 	db	6
   549  00A7' 24                 	db	36
   550  00A8' 5C                 	db	92
   551  00A9' C2                 	db	194
   552  00AA' D3                 	db	211
   553  00AB' AC                 	db	172
   554  00AC' 62                 	db	98
   555  00AD' 91                 	db	145
   556  00AE' 95                 	db	149
   557  00AF' E4                 	db	228
   558  00B0' 79                 	db	121
   559  00B1' E7                 	db	231
   560  00B2' C8                 	db	200
   561  00B3' 37                 	db	55
   562  00B4' 6D                 	db	109
   563  00B5' 8D                 	db	141
   564  00B6' D5                 	db	213
   565  00B7' 4E                 	db	78
   566  00B8' A9                 	db	169
   567  00B9' 6C                 	db	108
   568  00BA' 56                 	db	86
   569  00BB' F4                 	db	244
   570  00BC' EA                 	db	234
   571  00BD' 65                 	db	101
   572  00BE' 7A                 	db	122
   573  00BF' AE                 	db	174
   574  00C0' 08                 	db	8
   575  00C1' BA                 	db	186
   576  00C2' 78                 	db	120
   577  00C3' 25                 	db	37
   578  00C4' 2E                 	db	46
   579  00C5' 1C                 	db	28
   580  00C6' A6                 	db	166
   581  00C7' B4                 	db	180
   582  00C8' C6                 	db	198
   583  00C9' E8                 	db	232
   584  00CA' DD                 	db	221
   585  00CB' 74                 	db	116
   586  00CC' 1F                 	db	31
   587  00CD' 4B                 	db	75
   588  00CE' BD                 	db	189
   589  00CF' 8B                 	db	139
   590  00D0' 8A                 	db	138
   591  00D1' 70                 	db	112
   592  00D2' 3E                 	db	62
   593  00D3' B5                 	db	181
   594  00D4' 66                 	db	102
   595  00D5' 48                 	db	72
   596  00D6' 03                 	db	3
   597  00D7' F6                 	db	246
   598  00D8' 0E                 	db	14
   599  00D9' 61                 	db	97
   600  00DA' 35                 	db	53
   601  00DB' 57                 	db	87
   602  00DC' B9                 	db	185
   603  00DD' 86                 	db	134
   604  00DE' C1                 	db	193
   605  00DF' 1D                 	db	29
   606  00E0' 9E                 	db	158
   607  00E1' E1                 	db	225
   608  00E2' F8                 	db	248
   609  00E3' 98                 	db	152
   610  00E4' 11                 	db	17
   611  00E5' 69                 	db	105
   612  00E6' D9                 	db	217
   613  00E7' 8E                 	db	142
   614  00E8' 94                 	db	148
   615  00E9' 9B                 	db	155
   616  00EA' 1E                 	db	30
   617  00EB' 87                 	db	135
   618  00EC' E9                 	db	233
   619  00ED' CE                 	db	206
   620  00EE' 55                 	db	85
   621  00EF' 28                 	db	40
   622  00F0' DF                 	db	223
   623  00F1' 8C                 	db	140
   624  00F2' A1                 	db	161
   625  00F3' 89                 	db	137
   626  00F4' 0D                 	db	13
   627  00F5' BF                 	db	191
   628  00F6' E6                 	db	230
   629  00F7' 42                 	db	66
   630  00F8' 68                 	db	104
   631  00F9' 41                 	db	65
   632  00FA' 99                 	db	153
   633  00FB' 2D                 	db	45
   634  00FC' 0F                 	db	15
   635  00FD' B0                 	db	176
   636  00FE' 54                 	db	84
   637  00FF' BB                 	db	187
   638  0100' 16                 	db	22
   639  0101'                    __end_of_STable:
   640                           	opt stack 0
   641  0101'                    _modulation:
   642                           	opt stack 0
   643  0101' 01                 	db	1
   644  0102' 01                 	db	1
   645  0103' 01                 	db	1
   646  0104' 01                 	db	1
   647  0105' 01                 	db	1
   648  0106' 01                 	db	1
   649  0107' 01                 	db	1
   650  0108' 00                 	db	0
   651  0109'                    __end_of_modulation:
   652                           	opt stack 0
   653  0109'                    _rxWindowOffset:
   654                           	opt stack 0
   655  0109' DF                 	db	223
   656  010A' CE                 	db	206
   657  010B' C6                 	db	198
   658  010C' C2                 	db	194
   659  010D' BE                 	db	190
   660  010E' BC                 	db	188
   661  010F' F1                 	db	241
   662  0110' FE                 	db	254
   663  0111'                    __end_of_rxWindowOffset:
   664                           	opt stack 0
   665  0111'                    _maxPayloadSize:
   666                           	opt stack 0
   667  0111' 33                 	db	51
   668  0112' 33                 	db	51
   669  0113' 33                 	db	51
   670  0114' 73                 	db	115
   671  0115' F2                 	db	242
   672  0116' F2                 	db	242
   673  0117' F2                 	db	242
   674  0118' 38                 	db	56
   675  0119'                    __end_of_maxPayloadSize:
   676                           	opt stack 0
   677  0119'                    _rxWindowSize:
   678                           	opt stack 0
   679  0119' 08                 	db	8
   680  011A' 0A                 	db	10
   681  011B' 0E                 	db	14
   682  011C' 1A                 	db	26
   683  011D' 31                 	db	49
   684  011E' 58                 	db	88
   685  011F' 3C                 	db	60
   686  0120' 08                 	db	8
   687  0121'                    __end_of_rxWindowSize:
   688                           	opt stack 0
   689  0121'                    _macEndDevCmdReplyLen:
   690                           	opt stack 0
   691  0121' 01                 	db	1
   692  0122' 02                 	db	2
   693  0123' 01                 	db	1
   694  0124' 02                 	db	2
   695  0125' 03                 	db	3
   696  0126' 02                 	db	2
   697  0127' 01                 	db	1
   698  0128'                    __end_of_macEndDevCmdReplyLen:
   699                           	opt stack 0
   700  0128'                    _bandwidth:
   701                           	opt stack 0
   702  0128' 07                 	db	7
   703  0129' 07                 	db	7
   704  012A' 07                 	db	7
   705  012B' 07                 	db	7
   706  012C' 07                 	db	7
   707  012D' 07                 	db	7
   708  012E' 08                 	db	8
   709  012F'                    __end_of_bandwidth:
   710                           	opt stack 0
   711  012F'                    _spreadingFactor:
   712                           	opt stack 0
   713  012F' 0C                 	db	12
   714  0130' 0B                 	db	11
   715  0131' 0A                 	db	10
   716  0132' 09                 	db	9
   717  0133' 08                 	db	8
   718  0134' 07                 	db	7
   719  0135' 07                 	db	7
   720  0136'                    __end_of_spreadingFactor:
   721                           	opt stack 0
   722  0136' 0A                 	db	10
   723  0137' 07                 	db	7
   724  0138' 04                 	db	4
   725  0139' 01                 	db	1
   726  013A' FE                 	db	254
   727  013B' FB                 	db	251
   728  013C'                    __end_of_txPower433:
   729                           	opt stack 0
   730  013C'                    _txPower868:
   731                           	opt stack 0
   732  013C' 14                 	db	20
   733  013D' 0E                 	db	14
   734  013E' 0B                 	db	11
   735  013F' 08                 	db	8
   736  0140' 05                 	db	5
   737  0141' 02                 	db	2
   738  0142'                    __end_of_txPower868:
   739                           	opt stack 0
   740  0142'                    _spi2_configuration:
   741                           	opt stack 0
   742  0142' 00                 	db	0
   743  0143' 40                 	db	64
   744  0144' 01                 	db	1
   745  0145' 00                 	db	0
   746  0146'                    __end_of_spi2_configuration:
   747                           	opt stack 0
   748  0146'                    _spi1_configuration:
   749                           	opt stack 0
   750  0146' 00                 	db	0
   751  0147' 40                 	db	64
   752  0148' 01                 	db	1
   753  0149' 00                 	db	0
   754  014A'                    __end_of_spi1_configuration:
   755                           	opt stack 0
   756  014A'                    _DefaultChannels433:
   757                           	opt stack 0
   758  014A' B9D8               	dw	47576
   759  014C' 19D1               	dw	6609
   760  014E' 01                 	db	1
   761  014F' 50                 	db	80
   762  0150' 012E               	dw	302
   763  0152' 0000               	dw	0
   764  0154' 0000               	dw	0
   765  0156' 01                 	db	1
   766  0157' FF                 	db	255
   767  0158' C718               	dw	50968
   768  015A' 19D4               	dw	6612
   769  015C' 01                 	db	1
   770  015D' 50                 	db	80
   771  015E' 012E               	dw	302
   772  0160' 0000               	dw	0
   773  0162' 0000               	dw	0
   774  0164' 01                 	db	1
   775  0165' FF                 	db	255
   776  0166' D458               	dw	54360
   777  0168' 19D7               	dw	6615
   778  016A' 01                 	db	1
   779  016B' 50                 	db	80
   780  016C' 012E               	dw	302
   781  016E' 0000               	dw	0
   782  0170' 0000               	dw	0
   783  0172' 01                 	db	1
   784  0173' FF                 	db	255
   785  0174'                    __end_of_DefaultChannels433:
   786                           	opt stack 0
   787  0174'                    _DefaultChannels868:
   788                           	opt stack 0
   789  0174' 27A0               	dw	10144
   790  0176' 33BE               	dw	13246
   791  0178' 01                 	db	1
   792  0179' 50                 	db	80
   793  017A' 012E               	dw	302
   794  017C' 0000               	dw	0
   795  017E' 0000               	dw	0
   796  0180' 01                 	db	1
   797  0181' FF                 	db	255
   798  0182' 34E0               	dw	13536
   799  0184' 33C1               	dw	13249
   800  0186' 01                 	db	1
   801  0187' 50                 	db	80
   802  0188' 012E               	dw	302
   803  018A' 0000               	dw	0
   804  018C' 0000               	dw	0
   805  018E' 01                 	db	1
   806  018F' FF                 	db	255
   807  0190' 4220               	dw	16928
   808  0192' 33C4               	dw	13252
   809  0194' 01                 	db	1
   810  0195' 50                 	db	80
   811  0196' 012E               	dw	302
   812  0198' 0000               	dw	0
   813  019A' 0000               	dw	0
   814  019C' 01                 	db	1
   815  019D' FF                 	db	255
   816  019E'                    __end_of_DefaultChannels868:
   817                           	opt stack 0
   818  019E'                    _FskSyncWordBuff:
   819                           	opt stack 0
   820  019E' C1                 	db	193
   821  019F' 94                 	db	148
   822  01A0' C1                 	db	193
   823  01A1'                    __end_of_FskSyncWordBuff:
   824                           	opt stack 0
   825  01A1'                    STR_1:
   826                           
   827                           ; BSR set to: 1
   828  01A1' 4C                 	db	76	;'L'
   829  01A2' 6F                 	db	111	;'o'
   830  01A3' 52                 	db	82	;'R'
   831  01A4' 61                 	db	97	;'a'
   832  01A5' 00                 	db	0
   833                           
   834                           ; #config settings
   835  01A6' 00                 	db	0	; dummy byte at the end
   836  0000                     
   837                           	psect	nvBANK1
   838  0000'                    __pnvBANK1:
   839                           	opt stack 0
   840  0000'                    _TMR1_InterruptHandler:
   841                           	opt stack 0
   842  0000'                    	ds	2
   843  0002'                    _timer1ReloadVal:
   844                           	opt stack 0
   845  0002'                    	ds	2
   846  0004'                    _IOCB4_InterruptHandler:
   847                           	opt stack 0
   848  0004'                    	ds	2
   849  0006'                    _INT2_InterruptHandler:
   850                           	opt stack 0
   851  0006'                    	ds	2
   852  0008'                    _INT1_InterruptHandler:
   853                           	opt stack 0
   854  0008'                    	ds	2
   855  0000                     _ANSELA	set	3896
   856  0000                     _ANSELE	set	3900
   857  0000                     _ANSELB	set	3897
   858  0000                     _ANSELC	set	3898
   859  0000                     _ANSELD	set	3899
   860  0000                     _TMR1	set	4046
   861  0000                     _PIR3bits	set	4004
   862  0000                     _SSP2BUF	set	3951
   863  0000                     _SSP2CON2	set	3947
   864  0000                     _SSP2CON1bits	set	3948
   865  0000                     _TRISDbits	set	3989
   866  0000                     _SSP2ADD	set	3950
   867  0000                     _SSP2CON1	set	3948
   868  0000                     _SSP2STAT	set	3949
   869  0000                     _T1GCONbits	set	4044
   870  0000                     _T1CONbits	set	4045
   871  0000                     _T1CON	set	4045
   872  0000                     _TMR1L	set	4046
   873  0000                     _TMR1H	set	4047
   874  0000                     _T1GCON	set	4044
   875  0000                     _IOCBbits	set	3938
   876  0000                     _WPUB	set	3937
   877  0000                     _TRISD	set	3989
   878  0000                     _TRISC	set	3988
   879  0000                     _TRISB	set	3987
   880  0000                     _TRISA	set	3986
   881  0000                     _TRISE	set	3990
   882  0000                     _LATC	set	3979
   883  0000                     _LATB	set	3978
   884  0000                     _LATA	set	3977
   885  0000                     _LATD	set	3980
   886  0000                     _LATE	set	3981
   887  0000                     _OSCTUNE	set	3995
   888  0000                     _OSCCON2	set	4050
   889  0000                     _OSCCON	set	4051
   890  0000                     _PIE1bits	set	3997
   891  0000                     _RCONbits	set	4048
   892  0000                     _INTCON2bits	set	4081
   893  0000                     _INTCON3bits	set	4080
   894  0000                     _PIR1bits	set	3998
   895  0000                     _SSP1BUF	set	4041
   896  0000                     _SSP1CON2	set	4037
   897  0000                     _SSP1CON1bits	set	4038
   898  0000                     _TRISCbits	set	3988
   899  0000                     _SSP1ADD	set	4040
   900  0000                     _SSP1CON1	set	4038
   901  0000                     _SSP1STAT	set	4039
   902  0000                     _PORTBbits	set	3969
   903  0000                     _INTCONbits	set	4082
   904  0000                     _LATD3	set	31843
   905  0000                     _LATC2	set	31834
   906  0000                     _TRISC2	set	31906
   907                           
   908                           	psect	cinit
   909  0000'                    __pcinit:
   910                           	opt stack 0
   911  0000'                    start_initialization:
   912                           	opt stack 0
   913  0000'                    __initialization:
   914                           	opt stack 0
   915                           
   916                           ; Initialize objects allocated to BANK3 (16 bytes)
   917                           ; load TBLPTR registers with __pidataBANK3
   918  0000' 0E00'              	movlw	low __pidataBANK3
   919  0002' 6EF6               	movwf	tblptrl,c
   920  0004' 0E00'              	movlw	high __pidataBANK3
   921  0006' 6EF7               	movwf	tblptrh,c
   922  0008' 0E00'              	movlw	low (__pidataBANK3 shr (0+16))
   923  000A' 6EF8               	movwf	tblptru,c
   924  000C' EE00' F000'        	lfsr	0,__pdataBANK3
   925  0010' EE20 F010          	lfsr	2,16
   926  0014'                    copy_data0:
   927  0014' 0009               	tblrd		*+
   928  0016' CFF5 FFEE          	movff	tablat,postinc0
   929  001A' 50DD               	movf	postdec2,w,c
   930  001C' 50D9               	movf	fsr2l,w,c
   931  001E' E1FA               	bnz	copy_data0
   932                           
   933                           ; Initialize objects allocated to BANK1 (40 bytes)
   934                           ; load TBLPTR registers with __pidataBANK1
   935  0020' 0E00'              	movlw	low __pidataBANK1
   936  0022' 6EF6               	movwf	tblptrl,c
   937  0024' 0E00'              	movlw	high __pidataBANK1
   938  0026' 6EF7               	movwf	tblptrh,c
   939  0028' 0E00'              	movlw	low (__pidataBANK1 shr (0+16))
   940  002A' 6EF8               	movwf	tblptru,c
   941  002C' EE00' F000'        	lfsr	0,__pdataBANK1
   942  0030' EE20 F028          	lfsr	2,40
   943  0034'                    copy_data1:
   944  0034' 0009               	tblrd		*+
   945  0036' CFF5 FFEE          	movff	tablat,postinc0
   946  003A' 50DD               	movf	postdec2,w,c
   947  003C' 50D9               	movf	fsr2l,w,c
   948  003E' E1FA               	bnz	copy_data1
   949                           
   950                           ; Initialize objects allocated to COMRAM (4 bytes)
   951                           ; load TBLPTR registers with __pidataCOMRAM
   952  0040' 0E00'              	movlw	low __pidataCOMRAM
   953  0042' 6EF6               	movwf	tblptrl,c
   954  0044' 0E00'              	movlw	high __pidataCOMRAM
   955  0046' 6EF7               	movwf	tblptrh,c
   956  0048' 0E00'              	movlw	low (__pidataCOMRAM shr (0+16))
   957  004A' 6EF8               	movwf	tblptru,c
   958  004C' EE00' F000'        	lfsr	0,__pdataCOMRAM
   959  0050' EE20 F004          	lfsr	2,4
   960  0054'                    copy_data2:
   961  0054' 0009               	tblrd		*+
   962  0056' CFF5 FFEE          	movff	tablat,postinc0
   963  005A' 50DD               	movf	postdec2,w,c
   964  005C' 50D9               	movf	fsr2l,w,c
   965  005E' E1FA               	bnz	copy_data2
   966                           
   967                           ; Clear objects allocated to BIGRAM (542 bytes)
   968  0060' EE00' F000'        	lfsr	0,__pbssBIGRAM
   969  0064' EE22 F01E          	lfsr	2,542
   970  0068'                    clear_0:
   971  0068' 6AEE               	clrf	postinc0,c
   972  006A' 50DD               	movf	postdec2,w,c
   973  006C' 50D9               	movf	fsr2l,w,c
   974  006E' E1FC               	bnz	clear_0
   975  0070' 50DA               	movf	fsr2h,w,c
   976  0072' E1FA               	bnz	clear_0
   977                           
   978                           ; Clear objects allocated to BANK4 (224 bytes)
   979  0074' EE00' F000'        	lfsr	0,__pbssBANK4
   980  0078' 0EE0               	movlw	224
   981  007A'                    clear_1:
   982  007A' 6AEE               	clrf	postinc0,c
   983  007C' 06E8               	decf	wreg,f,c
   984  007E' E1FD               	bnz	clear_1
   985                           
   986                           ; Clear objects allocated to BANK3 (160 bytes)
   987  0080' EE00' F000'        	lfsr	0,__pbssBANK3
   988  0084' 0EA0               	movlw	160
   989  0086'                    clear_2:
   990  0086' 6AEE               	clrf	postinc0,c
   991  0088' 06E8               	decf	wreg,f,c
   992  008A' E1FD               	bnz	clear_2
   993                           
   994                           ; Clear objects allocated to BANK2 (245 bytes)
   995  008C' EE00' F000'        	lfsr	0,__pbssBANK2
   996  0090' 0EF5               	movlw	245
   997  0092'                    clear_3:
   998  0092' 6AEE               	clrf	postinc0,c
   999  0094' 06E8               	decf	wreg,f,c
  1000  0096' E1FD               	bnz	clear_3
  1001                           
  1002                           ; Clear objects allocated to BANK1 (88 bytes)
  1003  0098' EE00' F000'        	lfsr	0,__pbssBANK1
  1004  009C' 0E58               	movlw	88
  1005  009E'                    clear_4:
  1006  009E' 6AEE               	clrf	postinc0,c
  1007  00A0' 06E8               	decf	wreg,f,c
  1008  00A2' E1FD               	bnz	clear_4
  1009                           
  1010                           ; Clear objects allocated to COMRAM (12 bytes)
  1011  00A4' EE00' F000'        	lfsr	0,__pbssCOMRAM
  1012  00A8' 0E0C               	movlw	12
  1013  00AA'                    clear_5:
  1014  00AA' 6AEE               	clrf	postinc0,c
  1015  00AC' 06E8               	decf	wreg,f,c
  1016  00AE' E1FD               	bnz	clear_5
  1017  00B0'                    end_of_initialization:
  1018                           	opt stack 0
  1019  00B0'                    __end_of__initialization:
  1020                           	opt stack 0
  1021  00B0' 0100               	movlb	0
  1022  00B2' EF00' F000'        	goto	_main	;jump to C main() function
  1023                           tblptru	equ	0xFF8
  1024                           tblptrh	equ	0xFF7
  1025                           tblptrl	equ	0xFF6
  1026                           tablat	equ	0xFF5
  1027                           postinc0	equ	0xFEE
  1028                           wreg	equ	0xFE8
  1029                           postdec2	equ	0xFDD
  1030                           fsr2h	equ	0xFDA
  1031                           fsr2l	equ	0xFD9
  1032                           
  1033                           	psect	bssCOMRAM
  1034  0000'                    __pbssCOMRAM:
  1035                           	opt stack 0
  1036  0000'                    _ticksAccounted:
  1037                           	opt stack 0
  1038  0000'                    	ds	4
  1039  0004'                    _ticksAdded:
  1040                           	opt stack 0
  1041  0004'                    	ds	4
  1042  0008'                    _reloadVal:
  1043                           	opt stack 0
  1044  0008'                    	ds	2
  1045  000A'                    __rcon:
  1046                           	opt stack 0
  1047  000A'                    	ds	1
  1048  000B'                    _timerOverflow:
  1049                           	opt stack 0
  1050  000B'                    	ds	1
  1051                           tblptru	equ	0xFF8
  1052                           tblptrh	equ	0xFF7
  1053                           tblptrl	equ	0xFF6
  1054                           tablat	equ	0xFF5
  1055                           postinc0	equ	0xFEE
  1056                           wreg	equ	0xFE8
  1057                           postdec2	equ	0xFDD
  1058                           fsr2h	equ	0xFDA
  1059                           fsr2l	equ	0xFD9
  1060                           
  1061                           	psect	dataCOMRAM
  1062  0000'                    __pdataCOMRAM:
  1063                           	opt stack 0
  1064  0000'                    _ticksToScheduledInterrupt:
  1065                           	opt stack 0
  1066  0000'                    	ds	4
  1067                           tblptru	equ	0xFF8
  1068                           tblptrh	equ	0xFF7
  1069                           tblptrl	equ	0xFF6
  1070                           tablat	equ	0xFF5
  1071                           postinc0	equ	0xFEE
  1072                           wreg	equ	0xFE8
  1073                           postdec2	equ	0xFDD
  1074                           fsr2h	equ	0xFDA
  1075                           fsr2l	equ	0xFD9
  1076                           
  1077                           	psect	bssBANK1
  1078  0000'                    __pbssBANK1:
  1079                           	opt stack 0
  1080  0000'                    _rxPayload:
  1081                           	opt stack 0
  1082  0000'                    	ds	4
  1083  0004'                    TMR_GetDeltaTime@retVal:
  1084                           	opt stack 0
  1085  0004'                    	ds	4
  1086  0008'                    TMR_SwapTimer@retVal:
  1087                           	opt stack 0
  1088  0008'                    	ds	2
  1089  000A'                    TMR_SwapTimer@oldVal:
  1090                           	opt stack 0
  1091  000A'                    	ds	2
  1092  000C'                    TMR_GetDeltaTime@tmrVal:
  1093                           	opt stack 0
  1094  000C'                    	ds	2
  1095  000E'                    _localDioStatus:
  1096                           	opt stack 0
  1097  000E'                    	ds	1
  1098  000F'                    __roundCounter:
  1099                           	opt stack 0
  1100  000F'                    	ds	1
  1101  0010'                    _allocatedTimers:
  1102                           	opt stack 0
  1103  0010'                    	ds	1
  1104  0011'                    _dioStatus:
  1105                           	opt stack 0
  1106  0011'                    	ds	1
  1107  0012'                    _RadioConfiguration:
  1108                           	opt stack 0
  1109  0012'                    	ds	54
  1110  0048'                    _aesBuffer:
  1111                           	opt stack 0
  1112  0048'                    	ds	16
  1113                           tblptru	equ	0xFF8
  1114                           tblptrh	equ	0xFF7
  1115                           tblptrl	equ	0xFF6
  1116                           tablat	equ	0xFF5
  1117                           postinc0	equ	0xFEE
  1118                           wreg	equ	0xFE8
  1119                           postdec2	equ	0xFDD
  1120                           fsr2h	equ	0xFDA
  1121                           fsr2l	equ	0xFD9
  1122                           
  1123                           	psect	dataBANK1
  1124  0000'                    __pdataBANK1:
  1125                           	opt stack 0
  1126  0000'                    GenerateSubkey@F7103:
  1127                           	opt stack 0
  1128  0000'                    	ds	16
  1129  0010'                    _randx:
  1130                           	opt stack 0
  1131  0010'                    	ds	4
  1132  0014'                    _devAddr:
  1133                           	opt stack 0
  1134  0014'                    	ds	4
  1135  0018'                    _nwkSKey:
  1136                           	opt stack 0
  1137  0018'                    	ds	16
  1138                           tblptru	equ	0xFF8
  1139                           tblptrh	equ	0xFF7
  1140                           tblptrl	equ	0xFF6
  1141                           tablat	equ	0xFF5
  1142                           postinc0	equ	0xFEE
  1143                           wreg	equ	0xFE8
  1144                           postdec2	equ	0xFDD
  1145                           fsr2h	equ	0xFDA
  1146                           fsr2l	equ	0xFD9
  1147                           
  1148                           	psect	bssBANK2
  1149  0000'                    __pbssBANK2:
  1150                           	opt stack 0
  1151  0000'                    _loRa:
  1152                           	opt stack 0
  1153  0000'                    	ds	245
  1154                           tblptru	equ	0xFF8
  1155                           tblptrh	equ	0xFF7
  1156                           tblptrl	equ	0xFF6
  1157                           tablat	equ	0xFF5
  1158                           postinc0	equ	0xFEE
  1159                           wreg	equ	0xFE8
  1160                           postdec2	equ	0xFDD
  1161                           fsr2h	equ	0xFDA
  1162                           fsr2l	equ	0xFD9
  1163                           
  1164                           	psect	bssBANK3
  1165  0000'                    __pbssBANK3:
  1166                           	opt stack 0
  1167  0000'                    _swTimers:
  1168                           	opt stack 0
  1169  0000'                    	ds	160
  1170                           tblptru	equ	0xFF8
  1171                           tblptrh	equ	0xFF7
  1172                           tblptrl	equ	0xFF6
  1173                           tablat	equ	0xFF5
  1174                           postinc0	equ	0xFEE
  1175                           wreg	equ	0xFE8
  1176                           postdec2	equ	0xFDD
  1177                           fsr2h	equ	0xFDA
  1178                           fsr2l	equ	0xFD9
  1179                           
  1180                           	psect	dataBANK3
  1181  0000'                    __pdataBANK3:
  1182                           	opt stack 0
  1183  0000'                    _appSKey:
  1184                           	opt stack 0
  1185  0000'                    	ds	16
  1186                           tblptru	equ	0xFF8
  1187                           tblptrh	equ	0xFF7
  1188                           tblptrl	equ	0xFF6
  1189                           tablat	equ	0xFF5
  1190                           postinc0	equ	0xFEE
  1191                           wreg	equ	0xFE8
  1192                           postdec2	equ	0xFDD
  1193                           fsr2h	equ	0xFDA
  1194                           fsr2l	equ	0xFD9
  1195                           
  1196                           	psect	bssBANK4
  1197  0000'                    __pbssBANK4:
  1198                           	opt stack 0
  1199  0000'                    _Channels:
  1200                           	opt stack 0
  1201  0000'                    	ds	224
  1202                           tblptru	equ	0xFF8
  1203                           tblptrh	equ	0xFF7
  1204                           tblptrl	equ	0xFF6
  1205                           tablat	equ	0xFF5
  1206                           postinc0	equ	0xFEE
  1207                           wreg	equ	0xFE8
  1208                           postdec2	equ	0xFDD
  1209                           fsr2h	equ	0xFDA
  1210                           fsr2l	equ	0xFD9
  1211                           
  1212                           	psect	bssBIGRAM
  1213  0000'                    __pbssBIGRAM:
  1214                           	opt stack 0
  1215  0000'                    _macBuffer:
  1216                           	opt stack 0
  1217  0000'                    	ds	271
  1218  010F'                    _radioBuffer:
  1219                           	opt stack 0
  1220  010F'                    	ds	271
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           postdec2	equ	0xFDD
  1228                           fsr2h	equ	0xFDA
  1229                           fsr2l	equ	0xFD9
  1230                           
  1231                           	psect	cstackBANK1
  1232  0000'                    __pcstackBANK1:
  1233                           	opt stack 0
  1234  0000'                    AESCmac@k2:
  1235                           	opt stack 0
  1236                           
  1237                           ; 16 bytes @ 0x0
  1238  0000'                    	ds	16
  1239  0010'                    AESCmac@k1:
  1240                           	opt stack 0
  1241                           
  1242                           ; 16 bytes @ 0x10
  1243  0010'                    	ds	16
  1244  0020'                    AESCmac@mLast:
  1245                           	opt stack 0
  1246                           
  1247                           ; 16 bytes @ 0x20
  1248  0020'                    	ds	16
  1249  0030'                    AESCmac@padded:
  1250                           	opt stack 0
  1251                           
  1252                           ; 16 bytes @ 0x30
  1253  0030'                    	ds	16
  1254  0040'                    AESCmac@y:
  1255                           	opt stack 0
  1256                           
  1257                           ; 16 bytes @ 0x40
  1258  0040'                    	ds	16
  1259  0050'                    AESCmac@x:
  1260                           	opt stack 0
  1261                           
  1262                           ; 16 bytes @ 0x50
  1263  0050'                    	ds	16
  1264  0060'                    AESCmac@ptr:
  1265                           	opt stack 0
  1266                           
  1267                           ; 2 bytes @ 0x60
  1268  0060'                    	ds	2
  1269  0062'                    AESCmac@flag:
  1270                           	opt stack 0
  1271                           
  1272                           ; 1 bytes @ 0x62
  1273  0062'                    	ds	1
  1274  0063'                    AESCmac@n:
  1275                           	opt stack 0
  1276                           
  1277                           ; 1 bytes @ 0x63
  1278  0063'                    	ds	1
  1279  0064'                    AESCmac@j:
  1280                           	opt stack 0
  1281                           
  1282                           ; 1 bytes @ 0x64
  1283  0064'                    	ds	1
  1284  0065'                    AESCmac@i:
  1285                           	opt stack 0
  1286                           
  1287                           ; 1 bytes @ 0x65
  1288  0065'                    	ds	1
  1289  0066'                    LORAWAN_RxDone@buffer:
  1290                           	opt stack 0
  1291                           
  1292                           ; 2 bytes @ 0x66
  1293  0066'                    	ds	2
  1294  0068'                    LORAWAN_RxDone@bufferLength:
  1295                           	opt stack 0
  1296                           
  1297                           ; 1 bytes @ 0x68
  1298  0068'                    	ds	1
  1299                           tblptru	equ	0xFF8
  1300                           tblptrh	equ	0xFF7
  1301                           tblptrl	equ	0xFF6
  1302                           tablat	equ	0xFF5
  1303                           postinc0	equ	0xFEE
  1304                           wreg	equ	0xFE8
  1305                           postdec2	equ	0xFDD
  1306                           fsr2h	equ	0xFDA
  1307                           fsr2l	equ	0xFD9
  1308                           
  1309                           	psect	cstackBANK0
  1310  0000'                    __pcstackBANK0:
  1311                           	opt stack 0
  1312  0000'                    ??_UpdateMinMaxChDataRate:
  1313  0000'                    ??_FindSmallestDataRate:
  1314  0000'                    ??_CountfOptsLength:
  1315  0000'                    ?_INT0_SetInterruptHandler:
  1316                           	opt stack 0
  1317  0000'                    ?_SPI2_Exchange8bit:
  1318                           	opt stack 0
  1319  0000'                    ?_TMR1_ReadTimer:
  1320                           	opt stack 0
  1321  0000'                    ?_ExecuteDutyCycle:
  1322                           	opt stack 0
  1323  0000'                    ?_ExecuteDevStatus:
  1324                           	opt stack 0
  1325  0000'                    ?_ExecuteLinkCheck:
  1326                           	opt stack 0
  1327  0000'                    ?___wmul:
  1328                           	opt stack 0
  1329  0000'                    ?___awdiv:
  1330                           	opt stack 0
  1331  0000'                    ?_GetRx1Freq:
  1332                           	opt stack 0
  1333  0000'                    ?___lldiv:
  1334                           	opt stack 0
  1335  0000'                    ?___llmod:
  1336                           	opt stack 0
  1337  0000'                    INTERRUPT_GetDioStatus@a:
  1338                           	opt stack 0
  1339  0000'                    HALResetPinOutputValue@value:
  1340                           	opt stack 0
  1341  0000'                    HALSPISend@data:
  1342                           	opt stack 0
  1343  0000'                    SwTimerCreate@retVal:
  1344                           	opt stack 0
  1345  0000'                    SwTimerIsRunning@timerId:
  1346                           	opt stack 0
  1347  0000'                    SwTimerStop@timerId:
  1348                           	opt stack 0
  1349  0000'                    RADIO_SetLoRaSyncWord@syncWord:
  1350                           	opt stack 0
  1351  0000'                    RADIO_SetSpreadingFactor@spreadingFactor:
  1352                           	opt stack 0
  1353  0000'                    RADIO_SetOutputPower@power:
  1354                           	opt stack 0
  1355  0000'                    RADIO_SetCRC@crc:
  1356                           	opt stack 0
  1357  0000'                    RADIO_SetIQInverted@iqInverted:
  1358                           	opt stack 0
  1359  0000'                    RADIO_SetBandwidth@bandwidth:
  1360                           	opt stack 0
  1361  0000'                    RADIO_SetModulation@modulation:
  1362                           	opt stack 0
  1363  0000'                    ValidateDataRate@dataRate:
  1364                           	opt stack 0
  1365  0000'                    ValidateTxPower@result:
  1366                           	opt stack 0
  1367  0000'                    UpdateDLSettings@dlRx1DrOffset:
  1368                           	opt stack 0
  1369  0000'                    UpdateDataRange@dataRangeNew:
  1370                           	opt stack 0
  1371  0000'                    UpdateChannelIdStatus@statusNew:
  1372                           	opt stack 0
  1373  0000'                    ValidateRxOffset@rxOffset:
  1374                           	opt stack 0
  1375  0000'                    ValidateChannelId@allowedForDefaultChannels:
  1376                           	opt stack 0
  1377  0000'                    ValidateChannelMaskCntl@result:
  1378                           	opt stack 0
  1379  0000'                    UpdateCurrentDataRate@valueNew:
  1380                           	opt stack 0
  1381  0000'                    UpdateTxPower@txPowerNew:
  1382                           	opt stack 0
  1383  0000'                    UpdateJoinInProgress@state:
  1384                           	opt stack 0
  1385  0000'                    ___abdiv@divisor:
  1386                           	opt stack 0
  1387  0000'                    FillSubKey@source:
  1388                           	opt stack 0
  1389  0000'                    SwTimerSetCallback@callback:
  1390                           	opt stack 0
  1391  0000'                    EncKeySchedule@key:
  1392                           	opt stack 0
  1393  0000'                    EncodeShiftRow@stateTable:
  1394                           	opt stack 0
  1395  0000'                    RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1396                           	opt stack 0
  1397  0000'                    ExecuteDutyCycle@ptr:
  1398                           	opt stack 0
  1399  0000'                    ExecuteDevStatus@ptr:
  1400                           	opt stack 0
  1401  0000'                    UpdateDutyCycle@dutyCycleNew:
  1402                           	opt stack 0
  1403  0000'                    ValidateChannelMask@channelMask:
  1404                           	opt stack 0
  1405  0000'                    ExecuteLinkCheck@ptr:
  1406                           	opt stack 0
  1407  0000'                    IncludeMacCommandsResponse@macBuffer:
  1408                           	opt stack 0
  1409  0000'                    CheckFlags@hdr:
  1410                           	opt stack 0
  1411  0000'                    CheckMcastFlags@hdr:
  1412                           	opt stack 0
  1413  0000'                    INT1_SetInterruptHandler@InterruptHandler:
  1414                           	opt stack 0
  1415  0000'                    INT2_SetInterruptHandler@InterruptHandler:
  1416                           	opt stack 0
  1417  0000'                    IOCB4_SetInterruptHandler@InterruptHandler:
  1418                           	opt stack 0
  1419  0000'                    TMR1_WriteTimer@timerVal:
  1420                           	opt stack 0
  1421  0000'                    TMR1_SetInterruptHandler@InterruptHandler:
  1422                           	opt stack 0
  1423  0000'                    RxData@pData:
  1424                           	opt stack 0
  1425  0000'                    ___wmul@multiplier:
  1426                           	opt stack 0
  1427  0000'                    ___awdiv@dividend:
  1428                           	opt stack 0
  1429  0000'                    memcpy@d1:
  1430                           	opt stack 0
  1431  0000'                    memset@p1:
  1432                           	opt stack 0
  1433  0000'                    SystemBlockingWaitMs@ms:
  1434                           	opt stack 0
  1435  0000'                    RADIO_SetChannelFrequency@frequency:
  1436                           	opt stack 0
  1437  0000'                    ValidateFrequency@frequencyNew:
  1438                           	opt stack 0
  1439  0000'                    UpdateFrequency@frequencyNew:
  1440                           	opt stack 0
  1441  0000'                    LORAWAN_SetDeviceAddress@deviceAddressNew:
  1442                           	opt stack 0
  1443  0000'                    UpdateReceiveWindow2Parameters@frequency:
  1444                           	opt stack 0
  1445  0000'                    ___lldiv@dividend:
  1446                           	opt stack 0
  1447  0000'                    ___llmod@dividend:
  1448                           	opt stack 0
  1449                           
  1450                           ; 4 bytes @ 0x0
  1451  0000'                    	ds	1
  1452  0001'                    ??_UpdateDataRange:
  1453  0001'                    ??_UpdateChannelIdStatus:
  1454  0001'                    ??___abdiv:
  1455  0001'                    SwTimerIsRunning@isRunning:
  1456                           	opt stack 0
  1457  0001'                    RADIO_RegisterWrite@value:
  1458                           	opt stack 0
  1459  0001'                    RADIO_RegisterRead@reg:
  1460                           	opt stack 0
  1461  0001'                    ValidateDataRate@result:
  1462                           	opt stack 0
  1463  0001'                    ValidateTxPower@txPowerNew:
  1464                           	opt stack 0
  1465  0001'                    UpdateDLSettings@dlRx2Dr:
  1466                           	opt stack 0
  1467  0001'                    ValidateRxOffset@result:
  1468                           	opt stack 0
  1469  0001'                    ValidateChannelId@result:
  1470                           	opt stack 0
  1471  0001'                    ValidateChannelMaskCntl@channelMaskCntl:
  1472                           	opt stack 0
  1473  0001'                    UpdateMinMaxChDataRate@i:
  1474                           	opt stack 0
  1475  0001'                    FindSmallestDataRate@found:
  1476                           	opt stack 0
  1477                           
  1478                           ; 1 bytes @ 0x1
  1479  0001'                    	ds	1
  1480  0002'                    ??_TMR1_ReadTimer:
  1481  0002'                    ??_EncKeySchedule:
  1482  0002'                    ??_ValidateChannelMask:
  1483  0002'                    ??_ExecuteDutyCycle:
  1484  0002'                    SwTimerSetCallback@callbackParameter:
  1485                           	opt stack 0
  1486  0002'                    EncodeShiftRow@temp:
  1487                           	opt stack 0
  1488  0002'                    RADIO_RegisterWrite@reg:
  1489                           	opt stack 0
  1490  0002'                    RADIO_RegisterRead@readValue:
  1491                           	opt stack 0
  1492  0002'                    UpdateDataRange@channelId:
  1493                           	opt stack 0
  1494  0002'                    UpdateChannelIdStatus@channelId:
  1495                           	opt stack 0
  1496  0002'                    ValidateDataRange@result:
  1497                           	opt stack 0
  1498  0002'                    ValidateChannelId@channelId:
  1499                           	opt stack 0
  1500  0002'                    UpdateDutyCycle@channelId:
  1501                           	opt stack 0
  1502  0002'                    FindSmallestDataRate@i:
  1503                           	opt stack 0
  1504  0002'                    RxData@dataLength:
  1505                           	opt stack 0
  1506  0002'                    FillSubKey@key:
  1507                           	opt stack 0
  1508  0002'                    IncludeMacCommandsResponse@pBufferIndex:
  1509                           	opt stack 0
  1510  0002'                    ___wmul@multiplicand:
  1511                           	opt stack 0
  1512  0002'                    ___awdiv@divisor:
  1513                           	opt stack 0
  1514  0002'                    memcpy@s1:
  1515                           	opt stack 0
  1516  0002'                    memset@c:
  1517                           	opt stack 0
  1518                           
  1519                           ; 2 bytes @ 0x2
  1520  0002'                    	ds	1
  1521  0003'                    SwTimerSetCallback@timerId:
  1522                           	opt stack 0
  1523  0003'                    RADIO_WritePower@ocp:
  1524                           	opt stack 0
  1525  0003'                    RADIO_UnhandledInterrupt@modulation:
  1526                           	opt stack 0
  1527  0003'                    UpdateDataRange@i:
  1528                           	opt stack 0
  1529  0003'                    UpdateChannelIdStatus@i:
  1530                           	opt stack 0
  1531  0003'                    ValidateDataRange@dataRangeNew:
  1532                           	opt stack 0
  1533  0003'                    FindSmallestDataRate@dataRate:
  1534                           	opt stack 0
  1535  0003'                    RxData@status:
  1536                           	opt stack 0
  1537  0003'                    ___abdiv@counter:
  1538                           	opt stack 0
  1539                           
  1540                           ; 1 bytes @ 0x3
  1541  0003'                    	ds	1
  1542  0004'                    ??_SystemBlockingWaitMs:
  1543  0004'                    ??_RADIO_DIO3:
  1544  0004'                    ??_RADIO_DIO4:
  1545  0004'                    ??_RADIO_DIO5:
  1546  0004'                    FillSubKey@size:
  1547                           	opt stack 0
  1548  0004'                    RADIO_WritePower@paDac:
  1549                           	opt stack 0
  1550  0004'                    LORAWAN_SetChannelIdStatus@statusNew:
  1551                           	opt stack 0
  1552  0004'                    ValidateFrequency@result:
  1553                           	opt stack 0
  1554  0004'                    ValidateDataRange@dataRateMax:
  1555                           	opt stack 0
  1556  0004'                    UpdateFrequency@channelId:
  1557                           	opt stack 0
  1558  0004'                    ValidateChannelMask@i:
  1559                           	opt stack 0
  1560  0004'                    UpdateReceiveWindow2Parameters@dataRate:
  1561                           	opt stack 0
  1562  0004'                    IncludeMacCommandsResponse@bIncludeInFopts:
  1563                           	opt stack 0
  1564  0004'                    ___abdiv@sign:
  1565                           	opt stack 0
  1566  0004'                    ___awdiv@counter:
  1567                           	opt stack 0
  1568  0004'                    _EncKeySchedule$518:
  1569                           	opt stack 0
  1570  0004'                    EnableChannels1@channelMask:
  1571                           	opt stack 0
  1572  0004'                    TMR1_ReadTimer@readVal:
  1573                           	opt stack 0
  1574  0004'                    ___wmul@product:
  1575                           	opt stack 0
  1576  0004'                    memcpy@n:
  1577                           	opt stack 0
  1578  0004'                    memset@n:
  1579                           	opt stack 0
  1580  0004'                    ___lldiv@divisor:
  1581                           	opt stack 0
  1582  0004'                    ___llmod@divisor:
  1583                           	opt stack 0
  1584                           
  1585                           ; 4 bytes @ 0x4
  1586  0004'                    	ds	1
  1587  0005'                    ??_FillSubKey:
  1588  0005'                    ??_IncludeMacCommandsResponse:
  1589  0005'                    RADIO_WriteMode@newModulation:
  1590                           	opt stack 0
  1591  0005'                    RADIO_WritePower@power:
  1592                           	opt stack 0
  1593  0005'                    RADIO_DIO3@dioMapping:
  1594                           	opt stack 0
  1595  0005'                    RADIO_DIO5@dioMapping:
  1596                           	opt stack 0
  1597  0005'                    LORAWAN_SetChannelIdStatus@result:
  1598                           	opt stack 0
  1599  0005'                    ExecuteDutyCycle@maxDCycle:
  1600                           	opt stack 0
  1601  0005'                    ValidateDataRange@dataRateMin:
  1602                           	opt stack 0
  1603  0005'                    ___abdiv@quotient:
  1604                           	opt stack 0
  1605  0005'                    ___awdiv@sign:
  1606                           	opt stack 0
  1607                           
  1608                           ; 1 bytes @ 0x5
  1609  0005'                    	ds	1
  1610  0006'                    FillSubKey@carry:
  1611                           	opt stack 0
  1612  0006'                    RADIO_WriteMode@blocking:
  1613                           	opt stack 0
  1614  0006'                    RADIO_DIO4@dioMapping:
  1615                           	opt stack 0
  1616  0006'                    LORAWAN_SetChannelIdStatus@channelId:
  1617                           	opt stack 0
  1618  0006'                    EnableChannels1@channelMaskCntl:
  1619                           	opt stack 0
  1620  0006'                    UpdateReceiveDelays@delay:
  1621                           	opt stack 0
  1622  0006'                    CountfOptsLength@macCommandLength:
  1623                           	opt stack 0
  1624  0006'                    TMR1_ReadTimer@readValHigh:
  1625                           	opt stack 0
  1626  0006'                    ___abdiv@dividend:
  1627                           	opt stack 0
  1628  0006'                    memcpy@tmp:
  1629                           	opt stack 0
  1630  0006'                    AESEncode@block:
  1631                           	opt stack 0
  1632  0006'                    ___awdiv@quotient:
  1633                           	opt stack 0
  1634  0006'                    memset@p:
  1635                           	opt stack 0
  1636                           
  1637                           ; 2 bytes @ 0x6
  1638  0006'                    	ds	1
  1639  0007'                    ?_ExecuteRxTimingSetup:
  1640                           	opt stack 0
  1641  0007'                    FillSubKey@i:
  1642                           	opt stack 0
  1643  0007'                    RADIO_WriteMode@currentModulation:
  1644                           	opt stack 0
  1645  0007'                    EnableChannels1@channelIndexMin:
  1646                           	opt stack 0
  1647  0007'                    CountfOptsLength@i:
  1648                           	opt stack 0
  1649  0007'                    TMR1_ReadTimer@readValLow:
  1650                           	opt stack 0
  1651  0007'                    ExecuteRxTimingSetup@ptr:
  1652                           	opt stack 0
  1653  0007'                    memcpy@d:
  1654                           	opt stack 0
  1655                           
  1656                           ; 2 bytes @ 0x7
  1657  0007'                    	ds	1
  1658  0008'                    ??_LORAWAN_GetMaxPayloadSize:
  1659  0008'                    ?_TMR_SwapTimer:
  1660                           	opt stack 0
  1661  0008'                    ?_TMR_GetDeltaTime:
  1662                           	opt stack 0
  1663  0008'                    RADIO_WriteMode@dioMapping:
  1664                           	opt stack 0
  1665  0008'                    EnableChannels1@channelIndexMax:
  1666                           	opt stack 0
  1667  0008'                    ___llmod@counter:
  1668                           	opt stack 0
  1669  0008'                    TMR_SwapTimer@timerVal:
  1670                           	opt stack 0
  1671  0008'                    AESEncode@key:
  1672                           	opt stack 0
  1673  0008'                    ___lldiv@quotient:
  1674                           	opt stack 0
  1675                           
  1676                           ; 4 bytes @ 0x8
  1677  0008'                    	ds	1
  1678  0009'                    ??_EnableChannels1:
  1679  0009'                    RADIO_WriteMode@currentMode:
  1680                           	opt stack 0
  1681  0009'                    LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1682                           	opt stack 0
  1683  0009'                    ExecuteRxTimingSetup@delay:
  1684                           	opt stack 0
  1685  0009'                    memcpy@s:
  1686                           	opt stack 0
  1687                           
  1688                           ; 2 bytes @ 0x9
  1689  0009'                    	ds	1
  1690  000A'                    ??_AESEncode:
  1691  000A'                    RADIO_WriteMode@newMode:
  1692                           	opt stack 0
  1693  000A'                    LORAWAN_GetMaxPayloadSize@result:
  1694                           	opt stack 0
  1695  000A'                    TMR_OverrideRemaining@ticksRemaining:
  1696                           	opt stack 0
  1697                           
  1698                           ; 4 bytes @ 0xA
  1699  000A'                    	ds	1
  1700  000B'                    ?_ExtractMic:
  1701                           	opt stack 0
  1702  000B'                    RADIO_WriteMode@opMode:
  1703                           	opt stack 0
  1704  000B'                    InitDefault868Channels@i:
  1705                           	opt stack 0
  1706  000B'                    InitDefault433Channels@i:
  1707                           	opt stack 0
  1708  000B'                    EnableChannels1@i:
  1709                           	opt stack 0
  1710  000B'                    RADIO_SetFSKSyncWord@syncWord:
  1711                           	opt stack 0
  1712  000B'                    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1713                           	opt stack 0
  1714  000B'                    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1715                           	opt stack 0
  1716  000B'                    PrepareSessionKeys@sessionKey:
  1717                           	opt stack 0
  1718  000B'                    ExtractMic@buffer:
  1719                           	opt stack 0
  1720  000B'                    AssembleEncryptionBlock@frameCounter:
  1721                           	opt stack 0
  1722                           
  1723                           ; 4 bytes @ 0xB
  1724  000B'                    	ds	1
  1725  000C'                    ??_TMR_GetDeltaTime:
  1726  000C'                    ?_RADIO_ReadRandom:
  1727                           	opt stack 0
  1728  000C'                    ___lldiv@counter:
  1729                           	opt stack 0
  1730  000C'                    EnableChannels@channelMask:
  1731                           	opt stack 0
  1732                           
  1733                           ; 2 bytes @ 0xC
  1734  000C'                    	ds	1
  1735  000D'                    RADIO_SetFSKSyncWord@syncWordLen:
  1736                           	opt stack 0
  1737  000D'                    IncludeMacCommandsResponse@i:
  1738                           	opt stack 0
  1739  000D'                    ExtractMic@bufferLength:
  1740                           	opt stack 0
  1741  000D'                    PrepareSessionKeys@appNonce:
  1742                           	opt stack 0
  1743  000D'                    SwTimerSetTimeout@timeout:
  1744                           	opt stack 0
  1745  000D'                    RADIO_WriteFrequency@frequency:
  1746                           	opt stack 0
  1747  000D'                    RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1748                           	opt stack 0
  1749  000D'                    RADIO_WriteFSKBitRate@bitRate:
  1750                           	opt stack 0
  1751                           
  1752                           ; 4 bytes @ 0xD
  1753  000D'                    	ds	1
  1754  000E'                    ??_TMR_OverrideRemaining:
  1755  000E'                    ??_RADIO_ReadRandom:
  1756  000E'                    EnableChannels@channelMaskCntl:
  1757                           	opt stack 0
  1758  000E'                    IncludeMacCommandsResponse@bufferIndex:
  1759                           	opt stack 0
  1760  000E'                    ConfigureRadio@freq:
  1761                           	opt stack 0
  1762                           
  1763                           ; 4 bytes @ 0xE
  1764  000E'                    	ds	1
  1765  000F'                    ??_ExtractMic:
  1766  000F'                    ?_ExecuteLinkAdr:
  1767                           	opt stack 0
  1768  000F'                    AssembleEncryptionBlock@blockId:
  1769                           	opt stack 0
  1770  000F'                    RADIO_ReadRandom@retVal:
  1771                           	opt stack 0
  1772  000F'                    ExecuteLinkAdr@ptr:
  1773                           	opt stack 0
  1774  000F'                    PrepareSessionKeys@networkId:
  1775                           	opt stack 0
  1776                           
  1777                           ; 2 bytes @ 0xF
  1778  000F'                    	ds	1
  1779  0010'                    AssembleEncryptionBlock@firstByte:
  1780                           	opt stack 0
  1781  0010'                    TMR_OverrideRemaining@tmrVal:
  1782                           	opt stack 0
  1783                           
  1784                           ; 2 bytes @ 0x10
  1785  0010'                    	ds	1
  1786  0011'                    ??_ExecuteLinkAdr:
  1787  0011'                    ??_SwTimerSetTimeout:
  1788  0011'                    RADIO_ReadRandom@i:
  1789                           	opt stack 0
  1790  0011'                    PrepareSessionKeys@index:
  1791                           	opt stack 0
  1792  0011'                    AssembleEncryptionBlock@multicastStatus:
  1793                           	opt stack 0
  1794  0011'                    RADIO_WriteFrequency@num_mod:
  1795                           	opt stack 0
  1796  0011'                    RADIO_WriteFSKFrequencyDeviation@num:
  1797                           	opt stack 0
  1798  0011'                    RADIO_WriteFSKBitRate@num:
  1799                           	opt stack 0
  1800                           
  1801                           ; 4 bytes @ 0x11
  1802  0011'                    	ds	1
  1803  0012'                    ConfigureRadio@dataRate:
  1804                           	opt stack 0
  1805  0012'                    AssembleEncryptionBlock@dir:
  1806                           	opt stack 0
  1807  0012'                    TMR_OverrideRemaining@oldReloadVal:
  1808                           	opt stack 0
  1809  0012'                    _AESEncode$513:
  1810                           	opt stack 0
  1811  0012'                    srand@x:
  1812                           	opt stack 0
  1813                           
  1814                           ; 2 bytes @ 0x12
  1815  0012'                    	ds	1
  1816  0013'                    AssembleEncryptionBlock@bufferIndex:
  1817                           	opt stack 0
  1818  0013'                    ExecuteLinkAdr@channelMask:
  1819                           	opt stack 0
  1820  0013'                    ConfigureRadioTx@freq:
  1821                           	opt stack 0
  1822  0013'                    ConfigureRadioRx@freq:
  1823                           	opt stack 0
  1824  0013'                    ExtractMic@mic:
  1825                           	opt stack 0
  1826                           
  1827                           ; 4 bytes @ 0x13
  1828  0013'                    	ds	1
  1829  0014'                    _AESEncode$514:
  1830                           	opt stack 0
  1831                           
  1832                           ; 2 bytes @ 0x14
  1833  0014'                    	ds	1
  1834  0015'                    SwTimerSetTimeout@timerId:
  1835                           	opt stack 0
  1836  0015'                    ExecuteLinkAdr@txPower:
  1837                           	opt stack 0
  1838  0015'                    RADIO_WriteFrequency@num:
  1839                           	opt stack 0
  1840                           
  1841                           ; 4 bytes @ 0x15
  1842  0015'                    	ds	1
  1843  0016'                    _AESEncode$515:
  1844                           	opt stack 0
  1845  0016'                    ExecuteLinkAdr@redundancy:
  1846                           	opt stack 0
  1847                           
  1848                           ; 2 bytes @ 0x16
  1849  0016'                    	ds	1
  1850  0017'                    ConfigureRadioTx@dataRate:
  1851                           	opt stack 0
  1852  0017'                    ConfigureRadioRx@dataRate:
  1853                           	opt stack 0
  1854                           
  1855                           ; 1 bytes @ 0x17
  1856  0017'                    	ds	1
  1857  0018'                    AESEncode@aux:
  1858                           	opt stack 0
  1859  0018'                    ExecuteLinkAdr@dataRate:
  1860                           	opt stack 0
  1861  0018'                    ConfigureRadioTx@txPower:
  1862                           	opt stack 0
  1863                           
  1864                           ; 1 bytes @ 0x18
  1865  0018'                    	ds	1
  1866  0019'                    AESEncode@aux2:
  1867                           	opt stack 0
  1868  0019'                    RADIO_FHSSChangeChannel@irqFlags:
  1869                           	opt stack 0
  1870  0019'                    RADIO_Init@radioBuffer:
  1871                           	opt stack 0
  1872                           
  1873                           ; 2 bytes @ 0x19
  1874  0019'                    	ds	1
  1875  001A'                    ??_RADIO_DIO2:
  1876  001A'                    AESEncode@aux1:
  1877                           	opt stack 0
  1878                           
  1879                           ; 1 bytes @ 0x1A
  1880  001A'                    	ds	1
  1881  001B'                    AESEncode@aux3:
  1882                           	opt stack 0
  1883  001B'                    RADIO_DIO2@opMode:
  1884                           	opt stack 0
  1885  001B'                    RADIO_Init@frequency:
  1886                           	opt stack 0
  1887                           
  1888                           ; 4 bytes @ 0x1B
  1889  001B'                    	ds	1
  1890  001C'                    AESEncode@i:
  1891                           	opt stack 0
  1892  001C'                    RADIO_DIO2@dioMapping:
  1893                           	opt stack 0
  1894                           
  1895                           ; 1 bytes @ 0x1C
  1896  001C'                    	ds	1
  1897  001D'                    AESEncodeLoRa@block:
  1898                           	opt stack 0
  1899                           
  1900                           ; 2 bytes @ 0x1D
  1901  001D'                    	ds	2
  1902  001F'                    ??_RADIO_Init:
  1903  001F'                    AESEncodeLoRa@key:
  1904                           	opt stack 0
  1905                           
  1906                           ; 2 bytes @ 0x1F
  1907  001F'                    	ds	1
  1908  0020'                    ?_SwTimersInterrupt:
  1909                           	opt stack 0
  1910                           
  1911                           ; 4 bytes @ 0x20
  1912  0020'                    	ds	1
  1913  0021'                    AESEncodeLoRa@useKey:
  1914                           	opt stack 0
  1915                           
  1916                           ; 16 bytes @ 0x21
  1917  0021'                    	ds	3
  1918  0024'                    
  1919                           ; 1 bytes @ 0x24
  1920  0024'                    	ds	4
  1921  0028'                    SwTimersInterrupt@timeElapsed:
  1922                           	opt stack 0
  1923                           
  1924                           ; 4 bytes @ 0x28
  1925  0028'                    	ds	4
  1926  002C'                    SwTimersInterrupt@ticksToNextTimerEvent:
  1927                           	opt stack 0
  1928                           
  1929                           ; 4 bytes @ 0x2C
  1930  002C'                    	ds	4
  1931  0030'                    SwTimersInterrupt@i:
  1932                           	opt stack 0
  1933                           
  1934                           ; 1 bytes @ 0x30
  1935  0030'                    	ds	1
  1936  0031'                    ?_SwTimerReadValue:
  1937                           	opt stack 0
  1938  0031'                    GenerateSubkey@key:
  1939                           	opt stack 0
  1940  0031'                    ComputeSessionKeys@joinAcceptBuffer:
  1941                           	opt stack 0
  1942  0031'                    EncryptFRMPayload@buffer:
  1943                           	opt stack 0
  1944                           
  1945                           ; 2 bytes @ 0x31
  1946  0031'                    	ds	2
  1947  0033'                    EncryptFRMPayload@bufferLength:
  1948                           	opt stack 0
  1949  0033'                    GenerateSubkey@k1:
  1950                           	opt stack 0
  1951                           
  1952                           ; 2 bytes @ 0x33
  1953  0033'                    	ds	1
  1954  0034'                    EncryptFRMPayload@dir:
  1955                           	opt stack 0
  1956                           
  1957                           ; 1 bytes @ 0x34
  1958  0034'                    	ds	1
  1959  0035'                    GenerateSubkey@k2:
  1960                           	opt stack 0
  1961  0035'                    SwTimerReadValue@ticksCount:
  1962                           	opt stack 0
  1963  0035'                    SwTimerStart@ticksRemaining:
  1964                           	opt stack 0
  1965  0035'                    EncryptFRMPayload@frameCounter:
  1966                           	opt stack 0
  1967                           
  1968                           ; 4 bytes @ 0x35
  1969  0035'                    	ds	2
  1970  0037'                    ??_GenerateSubkey:
  1971                           
  1972                           ; 1 bytes @ 0x37
  1973  0037'                    	ds	1
  1974  0038'                    GenerateSubkey@const_Rb:
  1975                           	opt stack 0
  1976                           
  1977                           ; 16 bytes @ 0x38
  1978  0038'                    	ds	1
  1979  0039'                    SwTimerReadValue@timerId:
  1980                           	opt stack 0
  1981  0039'                    SwTimerStart@timerId:
  1982                           	opt stack 0
  1983  0039'                    EncryptFRMPayload@key:
  1984                           	opt stack 0
  1985                           
  1986                           ; 2 bytes @ 0x39
  1987  0039'                    	ds	1
  1988  003A'                    ??_UpdateRetransmissionAckTimeoutState:
  1989  003A'                    ??_StartReTxTimer:
  1990  003A'                    ?___lmul:
  1991                           	opt stack 0
  1992  003A'                    ___lmul@multiplier:
  1993                           	opt stack 0
  1994                           
  1995                           ; 4 bytes @ 0x3A
  1996  003A'                    	ds	1
  1997  003B'                    EncryptFRMPayload@macBufferIndex:
  1998                           	opt stack 0
  1999                           
  2000                           ; 1 bytes @ 0x3B
  2001  003B'                    	ds	1
  2002  003C'                    EncryptFRMPayload@bufferToBeEncrypted:
  2003                           	opt stack 0
  2004                           
  2005                           ; 2 bytes @ 0x3C
  2006  003C'                    	ds	2
  2007  003E'                    EncryptFRMPayload@multicastStatus:
  2008                           	opt stack 0
  2009  003E'                    StartReTxTimer@minim:
  2010                           	opt stack 0
  2011  003E'                    ___lmul@multiplicand:
  2012                           	opt stack 0
  2013                           
  2014                           ; 4 bytes @ 0x3E
  2015  003E'                    	ds	1
  2016  003F'                    ??_EncryptFRMPayload:
  2017                           
  2018                           ; 1 bytes @ 0x3F
  2019  003F'                    	ds	3
  2020  0042'                    StartReTxTimer@i:
  2021                           	opt stack 0
  2022  0042'                    ___lmul@product:
  2023                           	opt stack 0
  2024                           
  2025                           ; 4 bytes @ 0x42
  2026  0042'                    	ds	4
  2027  0046'                    ?_ExecuteNewChannel:
  2028                           	opt stack 0
  2029  0046'                    ?_ExecuteRxParamSetupReq:
  2030                           	opt stack 0
  2031  0046'                    ?_rand:
  2032                           	opt stack 0
  2033  0046'                    EncryptFRMPayload@k:
  2034                           	opt stack 0
  2035  0046'                    RADIO_WriteConfiguration@symbolTimeout:
  2036                           	opt stack 0
  2037  0046'                    ExecuteNewChannel@ptr:
  2038                           	opt stack 0
  2039  0046'                    ExecuteRxParamSetupReq@ptr:
  2040                           	opt stack 0
  2041  0046'                    UpdateCfList@joinAccept:
  2042                           	opt stack 0
  2043  0046'                    LORAWAN_LinkCheckConfigure@period:
  2044                           	opt stack 0
  2045                           
  2046                           ; 2 bytes @ 0x46
  2047  0046'                    	ds	1
  2048  0047'                    EncryptFRMPayload@i:
  2049                           	opt stack 0
  2050                           
  2051                           ; 1 bytes @ 0x47
  2052  0047'                    	ds	1
  2053  0048'                    ??_LORAWAN_LinkCheckConfigure:
  2054  0048'                    ??_ExecuteNewChannel:
  2055  0048'                    ??_ExecuteRxParamSetupReq:
  2056  0048'                    ??_RADIO_WriteConfiguration:
  2057  0048'                    ?___lwmod:
  2058                           	opt stack 0
  2059  0048'                    UpdateCfList@bufferLength:
  2060                           	opt stack 0
  2061  0048'                    EncryptFRMPayload@j:
  2062                           	opt stack 0
  2063  0048'                    ___lwmod@dividend:
  2064                           	opt stack 0
  2065  0048'                    GenerateSubkey@l:
  2066                           	opt stack 0
  2067                           
  2068                           ; 16 bytes @ 0x48
  2069  0048'                    	ds	1
  2070  0049'                    UpdateCfList@frequency:
  2071                           	opt stack 0
  2072                           
  2073                           ; 4 bytes @ 0x49
  2074  0049'                    	ds	1
  2075  004A'                    ExecuteNewChannel@drRange:
  2076                           	opt stack 0
  2077  004A'                    ___lwmod@divisor:
  2078                           	opt stack 0
  2079  004A'                    ExecuteRxParamSetupReq@frequency:
  2080                           	opt stack 0
  2081                           
  2082                           ; 4 bytes @ 0x4A
  2083  004A'                    	ds	1
  2084  004B'                    RADIO_WriteConfiguration@i:
  2085                           	opt stack 0
  2086  004B'                    ExecuteNewChannel@frequency:
  2087                           	opt stack 0
  2088                           
  2089                           ; 4 bytes @ 0x4B
  2090  004B'                    	ds	1
  2091  004C'                    ___lwmod@counter:
  2092                           	opt stack 0
  2093  004C'                    RADIO_WriteConfiguration@tempValue:
  2094                           	opt stack 0
  2095  004C'                    _LORAWAN_LinkCheckConfigure$2496:
  2096                           	opt stack 0
  2097                           
  2098                           ; 4 bytes @ 0x4C
  2099  004C'                    	ds	1
  2100  004D'                    ?_Random:
  2101                           	opt stack 0
  2102  004D'                    UpdateCfList@channelIndex:
  2103                           	opt stack 0
  2104  004D'                    Random@max:
  2105                           	opt stack 0
  2106                           
  2107                           ; 2 bytes @ 0x4D
  2108  004D'                    	ds	1
  2109  004E'                    ExecuteRxParamSetupReq@dlSettings:
  2110                           	opt stack 0
  2111  004E'                    UpdateCfList@i:
  2112                           	opt stack 0
  2113                           
  2114                           ; 1 bytes @ 0x4E
  2115  004E'                    	ds	1
  2116  004F'                    ExecuteNewChannel@channelIndex:
  2117                           	opt stack 0
  2118  004F'                    SearchAvailableChannel@transmissionType:
  2119                           	opt stack 0
  2120                           
  2121                           ; 1 bytes @ 0x4F
  2122  004F'                    	ds	1
  2123  0050'                    ?_MacExecuteCommands:
  2124                           	opt stack 0
  2125  0050'                    RADIO_WriteConfiguration@regValue:
  2126                           	opt stack 0
  2127  0050'                    LORAWAN_LinkCheckConfigure@iCtr:
  2128                           	opt stack 0
  2129  0050'                    SearchAvailableChannel@channelIndex:
  2130                           	opt stack 0
  2131  0050'                    MacExecuteCommands@buffer:
  2132                           	opt stack 0
  2133                           
  2134                           ; 2 bytes @ 0x50
  2135  0050'                    	ds	1
  2136  0051'                    ?_RADIO_Transmit:
  2137                           	opt stack 0
  2138  0051'                    ?_RADIO_ReceiveStart:
  2139                           	opt stack 0
  2140  0051'                    LORAWAN_Reset@ismBandNew:
  2141                           	opt stack 0
  2142  0051'                    RADIO_Transmit@buffer:
  2143                           	opt stack 0
  2144  0051'                    RADIO_ReceiveStart@rxWindowSize:
  2145                           	opt stack 0
  2146                           
  2147                           ; 2 bytes @ 0x51
  2148  0051'                    	ds	1
  2149  0052'                    ??_SearchAvailableChannel:
  2150  0052'                    MacExecuteCommands@fOptsLen:
  2151                           	opt stack 0
  2152  0052'                    LORAWAN_Init@RxPayload:
  2153                           	opt stack 0
  2154                           
  2155                           ; 2 bytes @ 0x52
  2156  0052'                    	ds	1
  2157  0053'                    ??_MacExecuteCommands:
  2158  0053'                    ??_RADIO_ReceiveStart:
  2159  0053'                    RADIO_Transmit@bufferLen:
  2160                           	opt stack 0
  2161                           
  2162                           ; 1 bytes @ 0x53
  2163  0053'                    	ds	1
  2164  0054'                    ??_RADIO_Transmit:
  2165  0054'                    LORAWAN_Init@RxJoinResponse:
  2166                           	opt stack 0
  2167                           
  2168                           ; 2 bytes @ 0x54
  2169  0054'                    	ds	1
  2170  0055'                    MacExecuteCommands@done:
  2171                           	opt stack 0
  2172                           
  2173                           ; 1 bytes @ 0x55
  2174  0055'                    	ds	1
  2175  0056'                    SearchAvailableChannel@randomNumberCopy:
  2176                           	opt stack 0
  2177  0056'                    MacExecuteCommands@ptr:
  2178                           	opt stack 0
  2179                           
  2180                           ; 2 bytes @ 0x56
  2181  0056'                    	ds	1
  2182  0057'                    SearchAvailableChannel@result:
  2183                           	opt stack 0
  2184  0057'                    _RADIO_ReceiveStart$781:
  2185                           	opt stack 0
  2186                           
  2187                           ; 4 bytes @ 0x57
  2188  0057'                    	ds	1
  2189  0058'                    GenerateSubkey@i:
  2190                           	opt stack 0
  2191  0058'                    SearchAvailableChannel@maxChannels:
  2192                           	opt stack 0
  2193  0058'                    _RADIO_Transmit$776:
  2194                           	opt stack 0
  2195                           
  2196                           ; 4 bytes @ 0x58
  2197  0058'                    	ds	1
  2198  0059'                    SearchAvailableChannel@randomNumber:
  2199                           	opt stack 0
  2200  0059'                    AESCmac@key:
  2201                           	opt stack 0
  2202                           
  2203                           ; 2 bytes @ 0x59
  2204  0059'                    	ds	1
  2205  005A'                    SearchAvailableChannel@i:
  2206                           	opt stack 0
  2207                           
  2208                           ; 1 bytes @ 0x5A
  2209  005A'                    	ds	1
  2210  005B'                    SelectChannelForTransmission@transmissionType:
  2211                           	opt stack 0
  2212  005B'                    AESCmac@output:
  2213                           	opt stack 0
  2214  005B'                    LORAWAN_TxDone@timeOnAir:
  2215                           	opt stack 0
  2216                           
  2217                           ; 2 bytes @ 0x5B
  2218  005B'                    	ds	1
  2219  005C'                    SelectChannelForTransmission@result:
  2220                           	opt stack 0
  2221  005C'                    _RADIO_Transmit$778:
  2222                           	opt stack 0
  2223                           
  2224                           ; 4 bytes @ 0x5C
  2225  005C'                    	ds	1
  2226  005D'                    ??_LORAWAN_TxDone:
  2227  005D'                    SelectChannelForTransmission@channelIndex:
  2228                           	opt stack 0
  2229  005D'                    AESCmac@input:
  2230                           	opt stack 0
  2231                           
  2232                           ; 2 bytes @ 0x5D
  2233  005D'                    	ds	2
  2234  005F'                    AESCmac@size:
  2235                           	opt stack 0
  2236                           
  2237                           ; 1 bytes @ 0x5F
  2238  005F'                    	ds	1
  2239  0060'                    ??_AESCmac:
  2240  0060'                    RADIO_Transmit@regValue:
  2241                           	opt stack 0
  2242                           
  2243                           ; 1 bytes @ 0x60
  2244  0060'                    	ds	1
  2245  0061'                    RADIO_Transmit@i:
  2246                           	opt stack 0
  2247                           
  2248                           ; 1 bytes @ 0x61
  2249  0061'                    	ds	1
  2250  0062'                    ??_LORAWAN_RxTimeout:
  2251                           
  2252                           ; 1 bytes @ 0x62
  2253  0062'                    	ds	4
  2254  0066'                    LORAWAN_RxTimeout@minim:
  2255                           	opt stack 0
  2256                           
  2257                           ; 4 bytes @ 0x66
  2258  0066'                    	ds	1
  2259  0067'                    ?_ComputeMic:
  2260                           	opt stack 0
  2261  0067'                    AssemblePacket@port:
  2262                           	opt stack 0
  2263  0067'                    ComputeMic@key:
  2264                           	opt stack 0
  2265                           
  2266                           ; 2 bytes @ 0x67
  2267  0067'                    	ds	1
  2268  0068'                    AssemblePacket@buffer:
  2269                           	opt stack 0
  2270                           
  2271                           ; 2 bytes @ 0x68
  2272  0068'                    	ds	1
  2273  0069'                    ComputeMic@buffer:
  2274                           	opt stack 0
  2275  0069'                    _LORAWAN_TxDone$1670:
  2276                           	opt stack 0
  2277                           
  2278                           ; 4 bytes @ 0x69
  2279  0069'                    	ds	1
  2280  006A'                    LORAWAN_RxTimeout@i:
  2281                           	opt stack 0
  2282  006A'                    AssemblePacket@bufferLength:
  2283                           	opt stack 0
  2284                           
  2285                           ; 2 bytes @ 0x6A
  2286  006A'                    	ds	1
  2287  006B'                    ??_RADIO_DIO1:
  2288  006B'                    ComputeMic@bufferLength:
  2289                           	opt stack 0
  2290                           
  2291                           ; 1 bytes @ 0x6B
  2292  006B'                    	ds	1
  2293  006C'                    ??_AssemblePacket:
  2294  006C'                    RADIO_DIO1@dioMapping:
  2295                           	opt stack 0
  2296  006C'                    ComputeMic@mic:
  2297                           	opt stack 0
  2298                           
  2299                           ; 4 bytes @ 0x6C
  2300  006C'                    	ds	1
  2301  006D'                    _LORAWAN_TxDone$1671:
  2302                           	opt stack 0
  2303                           
  2304                           ; 4 bytes @ 0x6D
  2305  006D'                    	ds	1
  2306  006E'                    AssemblePacket@confirmed:
  2307                           	opt stack 0
  2308                           
  2309                           ; 1 bytes @ 0x6E
  2310  006E'                    	ds	1
  2311  006F'                    AssemblePacket@mhdr:
  2312                           	opt stack 0
  2313                           
  2314                           ; 1 bytes @ 0x6F
  2315  006F'                    	ds	1
  2316  0070'                    ??_PrepareJoinRequestFrame:
  2317  0070'                    AssemblePacket@fCtrl:
  2318                           	opt stack 0
  2319                           
  2320                           ; 1 bytes @ 0x70
  2321  0070'                    	ds	1
  2322  0071'                    LORAWAN_TxDone@found:
  2323                           	opt stack 0
  2324  0071'                    AssemblePacket@macCmdIdx:
  2325                           	opt stack 0
  2326                           
  2327                           ; 1 bytes @ 0x71
  2328  0071'                    	ds	1
  2329  0072'                    AssemblePacket@bufferIndex:
  2330                           	opt stack 0
  2331  0072'                    LORAWAN_TxDone@delta:
  2332                           	opt stack 0
  2333                           
  2334                           ; 4 bytes @ 0x72
  2335  0072'                    	ds	1
  2336  0073'                    LORAWAN_Send@port:
  2337                           	opt stack 0
  2338                           
  2339                           ; 1 bytes @ 0x73
  2340  0073'                    	ds	1
  2341  0074'                    LORAWAN_Send@buffer:
  2342                           	opt stack 0
  2343  0074'                    PrepareJoinRequestFrame@mic:
  2344                           	opt stack 0
  2345                           
  2346                           ; 4 bytes @ 0x74
  2347  0074'                    	ds	2
  2348  0076'                    LORAWAN_Send@bufferLength:
  2349                           	opt stack 0
  2350  0076'                    _LORAWAN_TxDone$5065:
  2351                           	opt stack 0
  2352                           
  2353                           ; 4 bytes @ 0x76
  2354  0076'                    	ds	1
  2355  0077'                    ??_LORAWAN_Send:
  2356                           
  2357                           ; 1 bytes @ 0x77
  2358  0077'                    	ds	1
  2359  0078'                    LORAWAN_Send@result:
  2360                           	opt stack 0
  2361  0078'                    PrepareJoinRequestFrame@mhdr:
  2362                           	opt stack 0
  2363                           
  2364                           ; 1 bytes @ 0x78
  2365  0078'                    	ds	1
  2366  0079'                    LORAWAN_Send@confirmed:
  2367                           	opt stack 0
  2368  0079'                    PrepareJoinRequestFrame@iCtr:
  2369                           	opt stack 0
  2370                           
  2371                           ; 1 bytes @ 0x79
  2372  0079'                    	ds	1
  2373  007A'                    ??_LORAWAN_RxDone:
  2374  007A'                    ??_SwTimersExecute:
  2375  007A'                    PrepareJoinRequestFrame@bufferIndex:
  2376                           	opt stack 0
  2377  007A'                    LORAWAN_TxDone@ticks:
  2378                           	opt stack 0
  2379                           
  2380                           ; 4 bytes @ 0x7A
  2381  007A'                    	ds	1
  2382  007B'                    LORAWAN_Join@bufferIndex:
  2383                           	opt stack 0
  2384                           
  2385                           ; 1 bytes @ 0x7B
  2386  007B'                    	ds	1
  2387  007C'                    LORAWAN_Join@result:
  2388                           	opt stack 0
  2389                           
  2390                           ; 1 bytes @ 0x7C
  2391  007C'                    	ds	1
  2392  007D'                    LORAWAN_Join@activationTypeNew:
  2393                           	opt stack 0
  2394                           
  2395                           ; 1 bytes @ 0x7D
  2396  007D'                    	ds	1
  2397  007E'                    SwTimersExecute@i:
  2398                           	opt stack 0
  2399  007E'                    LORAWAN_TxDone@minim:
  2400                           	opt stack 0
  2401                           
  2402                           ; 4 bytes @ 0x7E
  2403  007E'                    	ds	1
  2404  007F'                    LORAWAN_RxDone@fPort:
  2405                           	opt stack 0
  2406                           
  2407                           ; 1 bytes @ 0x7F
  2408  007F'                    	ds	1
  2409  0080'                    LORAWAN_RxDone@channelIndex:
  2410                           	opt stack 0
  2411                           
  2412                           ; 1 bytes @ 0x80
  2413  0080'                    	ds	1
  2414  0081'                    LORAWAN_RxDone@mhdr:
  2415                           	opt stack 0
  2416                           
  2417                           ; 1 bytes @ 0x81
  2418  0081'                    	ds	1
  2419  0082'                    LORAWAN_TxDone@i:
  2420                           	opt stack 0
  2421  0082'                    LORAWAN_RxDone@extractedMic:
  2422                           	opt stack 0
  2423                           
  2424                           ; 4 bytes @ 0x82
  2425  0082'                    	ds	1
  2426  0083'                    ??_RADIO_TxDone:
  2427  0083'                    ??_RADIO_FSKPacketSent:
  2428                           
  2429                           ; 1 bytes @ 0x83
  2430  0083'                    	ds	3
  2431  0086'                    LORAWAN_RxDone@bufferIndex:
  2432                           	opt stack 0
  2433                           
  2434                           ; 1 bytes @ 0x86
  2435  0086'                    	ds	1
  2436  0087'                    LORAWAN_RxDone@temp:
  2437                           	opt stack 0
  2438  0087'                    RADIO_TxDone@timeOnAir:
  2439                           	opt stack 0
  2440  0087'                    RADIO_FSKPacketSent@timeOnAir:
  2441                           	opt stack 0
  2442                           
  2443                           ; 4 bytes @ 0x87
  2444  0087'                    	ds	1
  2445  0088'                    LORAWAN_RxDone@packet:
  2446                           	opt stack 0
  2447                           
  2448                           ; 2 bytes @ 0x88
  2449  0088'                    	ds	2
  2450  008A'                    LORAWAN_RxDone@computedMic:
  2451                           	opt stack 0
  2452                           
  2453                           ; 4 bytes @ 0x8A
  2454  008A'                    	ds	1
  2455  008B'                    _RADIO_TxDone$793:
  2456                           	opt stack 0
  2457  008B'                    _RADIO_FSKPacketSent$797:
  2458                           	opt stack 0
  2459                           
  2460                           ; 4 bytes @ 0x8B
  2461  008B'                    	ds	3
  2462  008E'                    LORAWAN_RxDone@joinAccept:
  2463                           	opt stack 0
  2464                           
  2465                           ; 2 bytes @ 0x8E
  2466  008E'                    	ds	1
  2467  008F'                    RADIO_FSKPacketSent@irqFlags:
  2468                           	opt stack 0
  2469                           
  2470                           ; 1 bytes @ 0x8F
  2471  008F'                    	ds	1
  2472  0090'                    LORAWAN_RxDone@frmPayloadLength:
  2473                           	opt stack 0
  2474                           
  2475                           ; 1 bytes @ 0x90
  2476  0090'                    	ds	1
  2477  0091'                    LORAWAN_RxDone@hdr:
  2478                           	opt stack 0
  2479                           
  2480                           ; 2 bytes @ 0x91
  2481  0091'                    	ds	2
  2482  0093'                    ??_RADIO_RxDone:
  2483  0093'                    ??_RADIO_FSKPayloadReady:
  2484                           
  2485                           ; 1 bytes @ 0x93
  2486  0093'                    	ds	1
  2487  0094'                    RADIO_RxDone@irqFlags:
  2488                           	opt stack 0
  2489  0094'                    RADIO_FSKPayloadReady@irqFlags:
  2490                           	opt stack 0
  2491                           
  2492                           ; 1 bytes @ 0x94
  2493  0094'                    	ds	1
  2494  0095'                    RADIO_RxDone@i:
  2495                           	opt stack 0
  2496  0095'                    RADIO_FSKPayloadReady@i:
  2497                           	opt stack 0
  2498                           
  2499                           ; 1 bytes @ 0x95
  2500  0095'                    	ds	1
  2501  0096'                    ??_RADIO_DIO0:
  2502                           
  2503                           ; 1 bytes @ 0x96
  2504  0096'                    	ds	2
  2505  0098'                    RADIO_DIO0@dioMapping:
  2506                           	opt stack 0
  2507                           
  2508                           ; 1 bytes @ 0x98
  2509  0098'                    	ds	1
  2510  0099'                    RADIO_DIO0@opMode:
  2511                           	opt stack 0
  2512                           
  2513                           ; 1 bytes @ 0x99
  2514  0099'                    	ds	1
  2515  009A'                    ??_main:
  2516                           
  2517                           ; 1 bytes @ 0x9A
  2518  009A'                    	ds	2
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           postinc0	equ	0xFEE
  2524                           wreg	equ	0xFE8
  2525                           postdec2	equ	0xFDD
  2526                           fsr2h	equ	0xFDA
  2527                           fsr2l	equ	0xFD9
  2528                           
  2529                           	psect	cstackCOMRAM
  2530  0000'                    __pcstackCOMRAM:
  2531                           	opt stack 0
  2532  0000'                    ?i2_TMR1_ReadTimer:
  2533                           	opt stack 0
  2534  0000'                    i2TMR1_WriteTimer@timerVal:
  2535                           	opt stack 0
  2536                           
  2537                           ; 2 bytes @ 0x0
  2538  0000'                    	ds	2
  2539  0002'                    ??i2_TMR1_ReadTimer:
  2540  0002'                    
  2541                           ; 1 bytes @ 0x2
  2542  0002'                    	ds	2
  2543  0004'                    i2TMR1_ReadTimer@readVal:
  2544                           	opt stack 0
  2545                           
  2546                           ; 2 bytes @ 0x4
  2547  0004'                    	ds	2
  2548  0006'                    i2TMR1_ReadTimer@readValHigh:
  2549                           	opt stack 0
  2550                           
  2551                           ; 1 bytes @ 0x6
  2552  0006'                    	ds	1
  2553  0007'                    i2TMR1_ReadTimer@readValLow:
  2554                           	opt stack 0
  2555                           
  2556                           ; 1 bytes @ 0x7
  2557  0007'                    	ds	1
  2558  0008'                    ?i2_TMR_SwapTimer:
  2559                           	opt stack 0
  2560  0008'                    ?i2_TMR_GetDeltaTime:
  2561                           	opt stack 0
  2562  0008'                    i2TMR_SwapTimer@timerVal:
  2563                           	opt stack 0
  2564                           
  2565                           ; 2 bytes @ 0x8
  2566  0008'                    	ds	2
  2567  000A'                    
  2568                           ; 1 bytes @ 0xA
  2569  000A'                    	ds	2
  2570  000C'                    ??i2_TMR_GetDeltaTime:
  2571                           
  2572                           ; 1 bytes @ 0xC
  2573  000C'                    	ds	20
  2574  0020'                    ?i2_SwTimersInterrupt:
  2575                           	opt stack 0
  2576                           
  2577                           ; 4 bytes @ 0x20
  2578  0020'                    	ds	4
  2579  0024'                    
  2580                           ; 1 bytes @ 0x24
  2581  0024'                    	ds	4
  2582  0028'                    i2SwTimersInterrupt@timeElapsed:
  2583                           	opt stack 0
  2584                           
  2585                           ; 4 bytes @ 0x28
  2586  0028'                    	ds	4
  2587  002C'                    i2SwTimersInterrupt@ticksToNextTimerEvent:
  2588                           	opt stack 0
  2589                           
  2590                           ; 4 bytes @ 0x2C
  2591  002C'                    	ds	4
  2592  0030'                    i2SwTimersInterrupt@i:
  2593                           	opt stack 0
  2594                           
  2595                           ; 1 bytes @ 0x30
  2596  0030'                    	ds	1
  2597  0031'                    ??_TMR_ISR_lora:
  2598                           
  2599                           ; 1 bytes @ 0x31
  2600  0031'                    	ds	2
  2601  0033'                    ??_INTERRUPT_InterruptManager:
  2602                           
  2603                           ; 1 bytes @ 0x33
  2604  0033'                    	ds	8
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           postinc0	equ	0xFEE
  2610                           wreg	equ	0xFE8
  2611                           postdec2	equ	0xFDD
  2612                           fsr2h	equ	0xFDA
  2613                           fsr2l	equ	0xFD9
  2614                           
  2615 ;;
  2616 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2617 ;;
  2618 ;; *************** function _main *****************
  2619 ;; Defined at:
  2620 ;;		line 60 in file "main.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;Total ram usage:        2 bytes
  2639 ;; Hardware stack levels required when called:   19
  2640 ;; This function calls:
  2641 ;;		_LORAWAN_Init
  2642 ;;		_LORAWAN_Join
  2643 ;;		_LORAWAN_Mainloop
  2644 ;;		_LORAWAN_Send
  2645 ;;		_LORAWAN_SetApplicationSessionKey
  2646 ;;		_LORAWAN_SetDeviceAddress
  2647 ;;		_LORAWAN_SetNetworkSessionKey
  2648 ;;		_SYSTEM_Initialize
  2649 ;; This function is called by:
  2650 ;;		Startup code after reset
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text0
  2655  0000'                    __ptext0:
  2656                           	opt stack 0
  2657  0000'                    _main:
  2658                           	opt stack 12
  2659                           
  2660                           ;main.c: 63: SYSTEM_Initialize();
  2661                           
  2662                           ;incstack = 0
  2663  0000' EC00' F000'        	call	_SYSTEM_Initialize	;wreg free
  2664                           
  2665                           ;main.c: 81: (INTCONbits.GIE = 1);
  2666  0004' 8EF2               	bsf	intcon,7,c	;volatile
  2667                           
  2668                           ;main.c: 83: (INTCONbits.PEIE = 1);
  2669  0006' 8CF2               	bsf	intcon,6,c	;volatile
  2670                           
  2671                           ;main.c: 88: LORAWAN_Init(RxData, RxJoinResponse);
  2672  0008' 0E00'              	movlw	low _RxData
  2673  000A' 0100               	movlb	0	; () banked
  2674  000C' 6F00'              	movwf	LORAWAN_Init@RxPayload& (0+255),b
  2675  000E' 0E00'              	movlw	high _RxData
  2676  0010' 6F00'              	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  2677  0012' 0E00'              	movlw	low _RxJoinResponse
  2678  0014' 6F00'              	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  2679  0016' 0E00'              	movlw	high _RxJoinResponse
  2680  0018' 6F00'              	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  2681  001A' EC00' F000'        	call	_LORAWAN_Init	;wreg free
  2682                           
  2683                           ;main.c: 89: LORAWAN_SetNetworkSessionKey(nwkSKey);
  2684  001E' 0E00'              	movlw	low _nwkSKey
  2685  0020' 0100               	movlb	0	; () banked
  2686  0022' 6F00'              	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  2687  0024' 0E00'              	movlw	high _nwkSKey
  2688  0026' 6F00'              	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  2689  0028' EC00' F000'        	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  2690                           
  2691                           ;main.c: 90: LORAWAN_SetApplicationSessionKey(appSKey);
  2692  002C' 0E00'              	movlw	low _appSKey
  2693  002E' 0100               	movlb	0	; () banked
  2694  0030' 6F00'              	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  2695  0032' 0E00'              	movlw	high _appSKey
  2696  0034' 6F00'              	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  2697  0036' EC00' F000'        	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  2698                           
  2699                           ;main.c: 91: LORAWAN_SetDeviceAddress(devAddr);
  2700  003A' C014' F000'        	movff	_devAddr,LORAWAN_SetDeviceAddress@deviceAddressNew
  2701  003E' C015' F001'        	movff	_devAddr+1,LORAWAN_SetDeviceAddress@deviceAddressNew+1
  2702  0042' C016' F002'        	movff	_devAddr+2,LORAWAN_SetDeviceAddress@deviceAddressNew+2
  2703  0046' C017' F003'        	movff	_devAddr+3,LORAWAN_SetDeviceAddress@deviceAddressNew+3
  2704  004A' EC00' F000'        	call	_LORAWAN_SetDeviceAddress	;wreg free
  2705                           
  2706                           ;main.c: 92: LORAWAN_Join(ABP);
  2707  004E' 0E01               	movlw	1
  2708  0050' EC00' F000'        	call	_LORAWAN_Join
  2709  0054'                    
  2710                           ;main.c: 95: {
  2711                           ;main.c: 97: LORAWAN_Mainloop();
  2712  0054' EC00' F000'        	call	_LORAWAN_Mainloop	;wreg free
  2713                           
  2714                           ;main.c: 100: LORAWAN_Send(UNCNF, 2, "LoRa", 4);
  2715  0058' 0E02               	movlw	2
  2716  005A' 0100               	movlb	0	; () banked
  2717  005C' 6F00'              	movwf	LORAWAN_Send@port& (0+255),b
  2718  005E' 0E00'              	movlw	low STR_1
  2719  0060' 6F00'              	movwf	LORAWAN_Send@buffer& (0+255),b
  2720  0062' 0E00'              	movlw	high STR_1
  2721  0064' 6F00'              	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  2722  0066' 0E04               	movlw	4
  2723  0068' 6F00'              	movwf	LORAWAN_Send@bufferLength& (0+255),b
  2724  006A' 0E00               	movlw	0
  2725  006C' EC00' F000'        	call	_LORAWAN_Send
  2726                           
  2727                           ;main.c: 102: _delay((unsigned long)((5000)*(16000000/4000.0)));
  2728  0070' 0E66               	movlw	102
  2729  0072' 0100               	movlb	0	; () banked
  2730  0074' 6F00'              	movwf	(??_main+1)& (0+255),b
  2731  0076' 0E76               	movlw	118
  2732  0078' 6F00'              	movwf	??_main& (0+255),b
  2733  007A' 0EC1               	movlw	193
  2734  007C'                    u21687:
  2735  007C' 2EE8               	decfsz	wreg,f,c
  2736  007E' D7FE               	bra	u21687
  2737  0080' 2F00'              	decfsz	??_main& (0+255),f,b
  2738  0082' D7FC               	bra	u21687
  2739  0084' 2F00'              	decfsz	(??_main+1)& (0+255),f,b
  2740  0086' D7FA               	bra	u21687
  2741  0088' D7E5               	goto	l2569
  2742  008A'                    __end_of_main:
  2743                           	opt stack 0
  2744                           tblptru	equ	0xFF8
  2745                           tblptrh	equ	0xFF7
  2746                           tblptrl	equ	0xFF6
  2747                           tablat	equ	0xFF5
  2748                           intcon	equ	0xFF2
  2749                           postinc0	equ	0xFEE
  2750                           wreg	equ	0xFE8
  2751                           postdec2	equ	0xFDD
  2752                           fsr2h	equ	0xFDA
  2753                           fsr2l	equ	0xFD9
  2754                           
  2755 ;; *************** function _SYSTEM_Initialize *****************
  2756 ;; Defined at:
  2757 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;		None
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;Total ram usage:        0 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:   10
  2778 ;; This function calls:
  2779 ;;		_EXT_INT_Initialize
  2780 ;;		_INTERRUPT_Initialize
  2781 ;;		_LORAWAN_PlatformInit
  2782 ;;		_OSCILLATOR_Initialize
  2783 ;;		_PIN_MANAGER_Initialize
  2784 ;;		_SPI1_Initialize
  2785 ;;		_SPI2_Initialize
  2786 ;;		_TMR1_Initialize
  2787 ;; This function is called by:
  2788 ;;		_main
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text1
  2793  0000'                    __ptext1:
  2794                           	opt stack 0
  2795  0000'                    _SYSTEM_Initialize:
  2796                           	opt stack 20
  2797                           
  2798                           ;mcc.c: 53: INTERRUPT_Initialize();
  2799                           
  2800                           ;incstack = 0
  2801  0000' EC00' F000'        	call	_INTERRUPT_Initialize	;wreg free
  2802                           
  2803                           ;mcc.c: 54: SPI1_Initialize();
  2804  0004' EC00' F000'        	call	_SPI1_Initialize	;wreg free
  2805                           
  2806                           ;mcc.c: 55: SPI2_Initialize();
  2807  0008' EC00' F000'        	call	_SPI2_Initialize	;wreg free
  2808                           
  2809                           ;mcc.c: 56: PIN_MANAGER_Initialize();
  2810  000C' EC00' F000'        	call	_PIN_MANAGER_Initialize	;wreg free
  2811                           
  2812                           ;mcc.c: 57: OSCILLATOR_Initialize();
  2813  0010' EC00' F000'        	call	_OSCILLATOR_Initialize	;wreg free
  2814                           
  2815                           ;mcc.c: 58: TMR1_Initialize();
  2816  0014' EC00' F000'        	call	_TMR1_Initialize	;wreg free
  2817                           
  2818                           ;mcc.c: 59: EXT_INT_Initialize();
  2819  0018' EC00' F000'        	call	_EXT_INT_Initialize	;wreg free
  2820                           
  2821                           ;mcc.c: 60: LORAWAN_PlatformInit();
  2822  001C' EC00' F000'        	call	_LORAWAN_PlatformInit	;wreg free
  2823  0020' 0012               	return		;funcret
  2824  0022'                    __end_of_SYSTEM_Initialize:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           intcon	equ	0xFF2
  2831                           postinc0	equ	0xFEE
  2832                           wreg	equ	0xFE8
  2833                           postdec2	equ	0xFDD
  2834                           fsr2h	equ	0xFDA
  2835                           fsr2l	equ	0xFD9
  2836                           
  2837 ;; *************** function _TMR1_Initialize *****************
  2838 ;; Defined at:
  2839 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;		None
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;		None
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      void 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;Total ram usage:        0 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    8
  2860 ;; This function calls:
  2861 ;;		_TMR1_SetInterruptHandler
  2862 ;; This function is called by:
  2863 ;;		_SYSTEM_Initialize
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text2
  2868  0000'                    __ptext2:
  2869                           	opt stack 0
  2870  0000'                    _TMR1_Initialize:
  2871                           	opt stack 21
  2872                           
  2873                           ;tmr1.c: 69: T1GCON = 0x00;
  2874                           
  2875                           ;incstack = 0
  2876  0000' 0E00               	movlw	0
  2877  0002' 6ECC               	movwf	4044,c	;volatile
  2878                           
  2879                           ;tmr1.c: 72: TMR1H = 0x00;
  2880  0004' 0E00               	movlw	0
  2881  0006' 6ECF               	movwf	4047,c	;volatile
  2882                           
  2883                           ;tmr1.c: 75: TMR1L = 0x00;
  2884  0008' 0E00               	movlw	0
  2885  000A' 6ECE               	movwf	4046,c	;volatile
  2886                           
  2887                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
  2888  000C' CFCE F002'         	movff	4046,_timer1ReloadVal	;volatile
  2889  0010' CFCF F003'         	movff	4047,_timer1ReloadVal+1	;volatile
  2890                           
  2891                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  2892  0014' 909E               	bcf	3998,0,c	;volatile
  2893                           
  2894                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  2895  0016' 809D               	bsf	3997,0,c	;volatile
  2896                           
  2897                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2898  0018' 0E00'              	movlw	low _TMR1_DefaultInterruptHandler
  2899  001A' 0100               	movlb	0	; () banked
  2900  001C' 6F00'              	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2901  001E' 0E00'              	movlw	high _TMR1_DefaultInterruptHandler
  2902  0020' 6F00'              	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2903  0022' EC00' F000'        	call	_TMR1_SetInterruptHandler	;wreg free
  2904                           
  2905                           ;tmr1.c: 90: T1CON = 0x8D;
  2906  0026' 0E8D               	movlw	141
  2907  0028' 6ECD               	movwf	4045,c	;volatile
  2908  002A' 0012               	return		;funcret
  2909  002C'                    __end_of_TMR1_Initialize:
  2910                           	opt stack 0
  2911                           tblptru	equ	0xFF8
  2912                           tblptrh	equ	0xFF7
  2913                           tblptrl	equ	0xFF6
  2914                           tablat	equ	0xFF5
  2915                           intcon	equ	0xFF2
  2916                           postinc0	equ	0xFEE
  2917                           wreg	equ	0xFE8
  2918                           postdec2	equ	0xFDD
  2919                           fsr2h	equ	0xFDA
  2920                           fsr2l	equ	0xFD9
  2921                           
  2922 ;; *************** function _SPI2_Initialize *****************
  2923 ;; Defined at:
  2924 ;;		line 62 in file "mcc_generated_files/spi2.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;Total ram usage:        0 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:    7
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_SYSTEM_Initialize
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text3
  2953  0000'                    __ptext3:
  2954                           	opt stack 0
  2955  0000'                    _SPI2_Initialize:
  2956                           	opt stack 22
  2957                           
  2958                           ;spi2.c: 65: SSP2STAT = 0x40;
  2959                           
  2960                           ;incstack = 0
  2961  0000' 0E40               	movlw	64
  2962  0002' 6E6D               	movwf	3949,c	;volatile
  2963                           
  2964                           ;spi2.c: 66: SSP2CON1 = 0x00;
  2965  0004' 0E00               	movlw	0
  2966  0006' 6E6C               	movwf	3948,c	;volatile
  2967                           
  2968                           ;spi2.c: 67: SSP2ADD = 0x01;
  2969  0008' 0E01               	movlw	1
  2970  000A' 6E6E               	movwf	3950,c	;volatile
  2971                           
  2972                           ;spi2.c: 68: TRISDbits.TRISD0 = 0;
  2973  000C' 9095               	bcf	3989,0,c	;volatile
  2974                           
  2975                           ;spi2.c: 69: SSP2CON1bits.SSPEN = 0;
  2976  000E' 9A6C               	bcf	3948,5,c	;volatile
  2977  0010' 0012               	return		;funcret
  2978  0012'                    __end_of_SPI2_Initialize:
  2979                           	opt stack 0
  2980                           tblptru	equ	0xFF8
  2981                           tblptrh	equ	0xFF7
  2982                           tblptrl	equ	0xFF6
  2983                           tablat	equ	0xFF5
  2984                           intcon	equ	0xFF2
  2985                           postinc0	equ	0xFEE
  2986                           wreg	equ	0xFE8
  2987                           postdec2	equ	0xFDD
  2988                           fsr2h	equ	0xFDA
  2989                           fsr2l	equ	0xFD9
  2990                           
  2991 ;; *************** function _SPI1_Initialize *****************
  2992 ;; Defined at:
  2993 ;;		line 62 in file "mcc_generated_files/spi1.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;		None
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      void 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;Total ram usage:        0 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:    7
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_SYSTEM_Initialize
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text4
  3022  0000'                    __ptext4:
  3023                           	opt stack 0
  3024  0000'                    _SPI1_Initialize:
  3025                           	opt stack 22
  3026                           
  3027                           ;spi1.c: 65: SSP1STAT = 0x40;
  3028                           
  3029                           ;incstack = 0
  3030  0000' 0E40               	movlw	64
  3031  0002' 6EC7               	movwf	4039,c	;volatile
  3032                           
  3033                           ;spi1.c: 66: SSP1CON1 = 0x00;
  3034  0004' 0E00               	movlw	0
  3035  0006' 6EC6               	movwf	4038,c	;volatile
  3036                           
  3037                           ;spi1.c: 67: SSP1ADD = 0x01;
  3038  0008' 0E01               	movlw	1
  3039  000A' 6EC8               	movwf	4040,c	;volatile
  3040                           
  3041                           ;spi1.c: 68: TRISCbits.TRISC3 = 0;
  3042  000C' 9694               	bcf	3988,3,c	;volatile
  3043                           
  3044                           ;spi1.c: 69: SSP1CON1bits.SSPEN = 0;
  3045  000E' 9AC6               	bcf	4038,5,c	;volatile
  3046  0010' 0012               	return		;funcret
  3047  0012'                    __end_of_SPI1_Initialize:
  3048                           	opt stack 0
  3049                           tblptru	equ	0xFF8
  3050                           tblptrh	equ	0xFF7
  3051                           tblptrl	equ	0xFF6
  3052                           tablat	equ	0xFF5
  3053                           intcon	equ	0xFF2
  3054                           postinc0	equ	0xFEE
  3055                           wreg	equ	0xFE8
  3056                           postdec2	equ	0xFDD
  3057                           fsr2h	equ	0xFDA
  3058                           fsr2l	equ	0xFD9
  3059                           
  3060 ;; *************** function _PIN_MANAGER_Initialize *****************
  3061 ;; Defined at:
  3062 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;Total ram usage:        0 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    8
  3083 ;; This function calls:
  3084 ;;		_IOCB4_SetInterruptHandler
  3085 ;; This function is called by:
  3086 ;;		_SYSTEM_Initialize
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text5
  3091  0000'                    __ptext5:
  3092                           	opt stack 0
  3093  0000'                    _PIN_MANAGER_Initialize:
  3094                           	opt stack 21
  3095                           
  3096                           ;pin_manager.c: 62: LATE = 0x00;
  3097                           
  3098                           ;incstack = 0
  3099  0000' 0E00               	movlw	0
  3100  0002' 6E8D               	movwf	3981,c	;volatile
  3101                           
  3102                           ;pin_manager.c: 63: LATD = 0x00;
  3103  0004' 0E00               	movlw	0
  3104  0006' 6E8C               	movwf	3980,c	;volatile
  3105                           
  3106                           ;pin_manager.c: 64: LATA = 0x00;
  3107  0008' 0E00               	movlw	0
  3108  000A' 6E89               	movwf	3977,c	;volatile
  3109                           
  3110                           ;pin_manager.c: 65: LATB = 0x00;
  3111  000C' 0E00               	movlw	0
  3112  000E' 6E8A               	movwf	3978,c	;volatile
  3113                           
  3114                           ;pin_manager.c: 66: LATC = 0x00;
  3115  0010' 0E00               	movlw	0
  3116  0012' 6E8B               	movwf	3979,c	;volatile
  3117                           
  3118                           ;pin_manager.c: 71: TRISE = 0x07;
  3119  0014' 0E07               	movlw	7
  3120  0016' 6E96               	movwf	3990,c	;volatile
  3121                           
  3122                           ;pin_manager.c: 72: TRISA = 0xFF;
  3123  0018' 6892               	setf	3986,c	;volatile
  3124                           
  3125                           ;pin_manager.c: 73: TRISB = 0xFF;
  3126  001A' 6893               	setf	3987,c	;volatile
  3127                           
  3128                           ;pin_manager.c: 74: TRISC = 0xDE;
  3129  001C' 0EDE               	movlw	222
  3130  001E' 6E94               	movwf	3988,c	;volatile
  3131                           
  3132                           ;pin_manager.c: 75: TRISD = 0xE7;
  3133  0020' 0EE7               	movlw	231
  3134  0022' 6E95               	movwf	3989,c	;volatile
  3135                           
  3136                           ;pin_manager.c: 80: ANSELD = 0xE5;
  3137  0024' 0EE5               	movlw	229
  3138  0026' 010F               	movlb	15	; () banked
  3139  0028' 6F3B               	movwf	59,b	;volatile
  3140                           
  3141                           ;pin_manager.c: 81: ANSELC = 0xC8;
  3142  002A' 0EC8               	movlw	200
  3143  002C' 6F3A               	movwf	58,b	;volatile
  3144                           
  3145                           ;pin_manager.c: 82: ANSELB = 0x28;
  3146  002E' 0E28               	movlw	40
  3147  0030' 6F39               	movwf	57,b	;volatile
  3148                           
  3149                           ;pin_manager.c: 83: ANSELE = 0x07;
  3150  0032' 0E07               	movlw	7
  3151  0034' 6F3C               	movwf	60,b	;volatile
  3152                           
  3153                           ;pin_manager.c: 84: ANSELA = 0x2F;
  3154  0036' 0E2F               	movlw	47
  3155  0038' 6F38               	movwf	56,b	;volatile
  3156                           
  3157                           ;pin_manager.c: 89: WPUB = 0x00;
  3158  003A' 0E00               	movlw	0
  3159  003C' 6E61               	movwf	3937,c	;volatile
  3160                           
  3161                           ; BSR set to: 15
  3162                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
  3163  003E' 8EF1               	bsf	intcon2,7,c	;volatile
  3164                           
  3165                           ; BSR set to: 15
  3166                           ;pin_manager.c: 98: IOCBbits.IOCB4 = 1;
  3167  0040' 8862               	bsf	3938,4,c	;volatile
  3168                           
  3169                           ; BSR set to: 15
  3170                           ;pin_manager.c: 103: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  3171  0042' 0E00'              	movlw	low _IOCB4_DefaultInterruptHandler
  3172  0044' 0100               	movlb	0	; () banked
  3173  0046' 6F00'              	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3174  0048' 0E00'              	movlw	high _IOCB4_DefaultInterruptHandler
  3175  004A' 6F00'              	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3176  004C' EC00' F000'        	call	_IOCB4_SetInterruptHandler	;wreg free
  3177                           
  3178                           ;pin_manager.c: 106: INTCONbits.RBIE = 1;
  3179  0050' 86F2               	bsf	intcon,3,c	;volatile
  3180  0052' 0012               	return		;funcret
  3181  0054'                    __end_of_PIN_MANAGER_Initialize:
  3182                           	opt stack 0
  3183                           tblptru	equ	0xFF8
  3184                           tblptrh	equ	0xFF7
  3185                           tblptrl	equ	0xFF6
  3186                           tablat	equ	0xFF5
  3187                           intcon	equ	0xFF2
  3188                           intcon2	equ	0xFF1
  3189                           postinc0	equ	0xFEE
  3190                           wreg	equ	0xFE8
  3191                           postdec2	equ	0xFDD
  3192                           fsr2h	equ	0xFDA
  3193                           fsr2l	equ	0xFD9
  3194                           
  3195 ;; *************** function _OSCILLATOR_Initialize *****************
  3196 ;; Defined at:
  3197 ;;		line 63 in file "mcc_generated_files/mcc.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    7
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_SYSTEM_Initialize
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text6
  3226  0000'                    __ptext6:
  3227                           	opt stack 0
  3228  0000'                    _OSCILLATOR_Initialize:
  3229                           	opt stack 22
  3230                           
  3231                           ;mcc.c: 66: OSCCON = 0x70;
  3232                           
  3233                           ;incstack = 0
  3234  0000' 0E70               	movlw	112
  3235  0002' 6ED3               	movwf	4051,c	;volatile
  3236                           
  3237                           ;mcc.c: 68: OSCCON2 = 0x04;
  3238  0004' 0E04               	movlw	4
  3239  0006' 6ED2               	movwf	4050,c	;volatile
  3240                           
  3241                           ;mcc.c: 70: OSCTUNE = 0x00;
  3242  0008' 0E00               	movlw	0
  3243  000A' 6E9B               	movwf	3995,c	;volatile
  3244  000C' 0012               	return		;funcret
  3245  000E'                    __end_of_OSCILLATOR_Initialize:
  3246                           	opt stack 0
  3247                           tblptru	equ	0xFF8
  3248                           tblptrh	equ	0xFF7
  3249                           tblptrl	equ	0xFF6
  3250                           tablat	equ	0xFF5
  3251                           intcon	equ	0xFF2
  3252                           intcon2	equ	0xFF1
  3253                           postinc0	equ	0xFEE
  3254                           wreg	equ	0xFE8
  3255                           postdec2	equ	0xFDD
  3256                           fsr2h	equ	0xFDA
  3257                           fsr2l	equ	0xFD9
  3258                           
  3259 ;; *************** function _LORAWAN_PlatformInit *****************
  3260 ;; Defined at:
  3261 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;Total ram usage:        0 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    9
  3282 ;; This function calls:
  3283 ;;		_DIO0_ISR_Lora_Init
  3284 ;;		_DIO1_ISR_Lora_Init
  3285 ;;		_DIO2_ISR_Lora_Init
  3286 ;;		_DIO3_ISR_Lora_Init
  3287 ;;		_DIO4_ISR_Lora_Init
  3288 ;;		_DIO5_ISR_Lora_Init
  3289 ;;		_SystemTimerInit
  3290 ;;		_TMR_ISR_Lora_Init
  3291 ;; This function is called by:
  3292 ;;		_SYSTEM_Initialize
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text7
  3297  0000'                    __ptext7:
  3298                           	opt stack 0
  3299  0000'                    _LORAWAN_PlatformInit:
  3300                           	opt stack 20
  3301                           
  3302                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
  3303                           
  3304                           ;incstack = 0
  3305  0000' EC00' F000'        	call	_TMR_ISR_Lora_Init	;wreg free
  3306                           
  3307                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
  3308  0004' EC00' F000'        	call	_DIO0_ISR_Lora_Init	;wreg free
  3309                           
  3310                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
  3311  0008' EC00' F000'        	call	_DIO1_ISR_Lora_Init	;wreg free
  3312                           
  3313                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
  3314  000C' EC00' F000'        	call	_DIO2_ISR_Lora_Init	;wreg free
  3315                           
  3316                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
  3317  0010' EC00' F000'        	call	_DIO3_ISR_Lora_Init	;wreg free
  3318                           
  3319                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
  3320  0014' EC00' F000'        	call	_DIO4_ISR_Lora_Init	;wreg free
  3321                           
  3322                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
  3323  0018' EC00' F000'        	call	_DIO5_ISR_Lora_Init	;wreg free
  3324                           
  3325                           ;lorawan_init.c: 81: SystemTimerInit();
  3326  001C' EC00' F000'        	call	_SystemTimerInit	;wreg free
  3327  0020' 0012               	return		;funcret
  3328  0022'                    __end_of_LORAWAN_PlatformInit:
  3329                           	opt stack 0
  3330                           tblptru	equ	0xFF8
  3331                           tblptrh	equ	0xFF7
  3332                           tblptrl	equ	0xFF6
  3333                           tablat	equ	0xFF5
  3334                           intcon	equ	0xFF2
  3335                           intcon2	equ	0xFF1
  3336                           postinc0	equ	0xFEE
  3337                           wreg	equ	0xFE8
  3338                           postdec2	equ	0xFDD
  3339                           fsr2h	equ	0xFDA
  3340                           fsr2l	equ	0xFD9
  3341                           
  3342 ;; *************** function _TMR_ISR_Lora_Init *****************
  3343 ;; Defined at:
  3344 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;		None
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;Total ram usage:        0 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    8
  3365 ;; This function calls:
  3366 ;;		_TMR1_SetInterruptHandler
  3367 ;; This function is called by:
  3368 ;;		_LORAWAN_PlatformInit
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text8
  3373  0000'                    __ptext8:
  3374                           	opt stack 0
  3375  0000'                    _TMR_ISR_Lora_Init:
  3376                           	opt stack 20
  3377                           
  3378                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  3379                           
  3380                           ;incstack = 0
  3381  0000' 0E00'              	movlw	low _TMR_ISR_lora
  3382  0002' 0100               	movlb	0	; () banked
  3383  0004' 6F00'              	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3384  0006' 0E00'              	movlw	high _TMR_ISR_lora
  3385  0008' 6F00'              	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3386  000A' EC00' F000'        	call	_TMR1_SetInterruptHandler	;wreg free
  3387  000E' 0012               	return		;funcret
  3388  0010'                    __end_of_TMR_ISR_Lora_Init:
  3389                           	opt stack 0
  3390                           tblptru	equ	0xFF8
  3391                           tblptrh	equ	0xFF7
  3392                           tblptrl	equ	0xFF6
  3393                           tablat	equ	0xFF5
  3394                           intcon	equ	0xFF2
  3395                           intcon2	equ	0xFF1
  3396                           postinc0	equ	0xFEE
  3397                           wreg	equ	0xFE8
  3398                           postdec2	equ	0xFDD
  3399                           fsr2h	equ	0xFDA
  3400                           fsr2l	equ	0xFD9
  3401                           
  3402 ;; *************** function _TMR1_SetInterruptHandler *****************
  3403 ;; Defined at:
  3404 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3407 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;Total ram usage:        2 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    7
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_TMR_ISR_Lora_Init
  3430 ;;		_TMR1_Initialize
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text9
  3435  0000'                    __ptext9:
  3436                           	opt stack 0
  3437  0000'                    _TMR1_SetInterruptHandler:
  3438                           	opt stack 21
  3439                           
  3440                           ;tmr1.c: 180: TMR1_InterruptHandler = InterruptHandler;
  3441                           
  3442                           ;incstack = 0
  3443  0000' C000' F000'        	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  3444  0004' C001' F001'        	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  3445  0008' 0012               	return		;funcret
  3446  000A'                    __end_of_TMR1_SetInterruptHandler:
  3447                           	opt stack 0
  3448                           tblptru	equ	0xFF8
  3449                           tblptrh	equ	0xFF7
  3450                           tblptrl	equ	0xFF6
  3451                           tablat	equ	0xFF5
  3452                           intcon	equ	0xFF2
  3453                           intcon2	equ	0xFF1
  3454                           postinc0	equ	0xFEE
  3455                           wreg	equ	0xFE8
  3456                           postdec2	equ	0xFDD
  3457                           fsr2h	equ	0xFDA
  3458                           fsr2l	equ	0xFD9
  3459                           
  3460 ;; *************** function _SystemTimerInit *****************
  3461 ;; Defined at:
  3462 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;Total ram usage:        0 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:    7
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_LORAWAN_PlatformInit
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text10
  3491  0000'                    __ptext10:
  3492                           	opt stack 0
  3493  0000'                    _SystemTimerInit:
  3494                           	opt stack 21
  3495                           
  3496                           ;sw_timer.c: 137: allocatedTimers = 0;
  3497                           
  3498                           ;incstack = 0
  3499  0000' 0E00               	movlw	0
  3500  0002' 0101               	movlb	1	; () banked
  3501  0004' 6F00'              	movwf	_allocatedTimers& (0+255),b	;volatile
  3502                           
  3503                           ; BSR set to: 1
  3504  0006' 0012               	return		;funcret
  3505  0008'                    __end_of_SystemTimerInit:
  3506                           	opt stack 0
  3507                           tblptru	equ	0xFF8
  3508                           tblptrh	equ	0xFF7
  3509                           tblptrl	equ	0xFF6
  3510                           tablat	equ	0xFF5
  3511                           intcon	equ	0xFF2
  3512                           intcon2	equ	0xFF1
  3513                           postinc0	equ	0xFEE
  3514                           wreg	equ	0xFE8
  3515                           postdec2	equ	0xFDD
  3516                           fsr2h	equ	0xFDA
  3517                           fsr2l	equ	0xFD9
  3518                           
  3519 ;; *************** function _DIO5_ISR_Lora_Init *****************
  3520 ;; Defined at:
  3521 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;Total ram usage:        0 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    8
  3542 ;; This function calls:
  3543 ;;		_INT0_SetInterruptHandler
  3544 ;; This function is called by:
  3545 ;;		_LORAWAN_PlatformInit
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text11
  3550  0000'                    __ptext11:
  3551                           	opt stack 0
  3552  0000'                    _DIO5_ISR_Lora_Init:
  3553                           	opt stack 20
  3554                           
  3555                           ;lorawan_init.c: 69: INT0_SetInterruptHandler(DIO5_ISR_Lora);
  3556                           
  3557                           ; BSR set to: 1
  3558                           ;incstack = 0
  3559  0000' 0E00               	movlw	0
  3560  0002' 0100               	movlb	0	; () banked
  3561  0004' 6F00'              	movwf	?_INT0_SetInterruptHandler& (0+255),b
  3562  0006' 0E00               	movlw	0
  3563  0008' 6F00'              	movwf	(?_INT0_SetInterruptHandler+1)& (0+255),b
  3564  000A' EC00' F000'        	call	_INT0_SetInterruptHandler	;wreg free
  3565  000E' 0012               	return		;funcret
  3566  0010'                    __end_of_DIO5_ISR_Lora_Init:
  3567                           	opt stack 0
  3568                           tblptru	equ	0xFF8
  3569                           tblptrh	equ	0xFF7
  3570                           tblptrl	equ	0xFF6
  3571                           tablat	equ	0xFF5
  3572                           intcon	equ	0xFF2
  3573                           intcon2	equ	0xFF1
  3574                           postinc0	equ	0xFEE
  3575                           wreg	equ	0xFE8
  3576                           postdec2	equ	0xFDD
  3577                           fsr2h	equ	0xFDA
  3578                           fsr2l	equ	0xFD9
  3579                           
  3580 ;; *************** function _DIO4_ISR_Lora_Init *****************
  3581 ;; Defined at:
  3582 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		None
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;Total ram usage:        0 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    7
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_LORAWAN_PlatformInit
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text12
  3611  0000'                    __ptext12:
  3612                           	opt stack 0
  3613  0000'                    _DIO4_ISR_Lora_Init:
  3614                           	opt stack 21
  3615                           
  3616                           ;incstack = 0
  3617  0000' 0012               	return		;funcret
  3618  0002'                    __end_of_DIO4_ISR_Lora_Init:
  3619                           	opt stack 0
  3620                           tblptru	equ	0xFF8
  3621                           tblptrh	equ	0xFF7
  3622                           tblptrl	equ	0xFF6
  3623                           tablat	equ	0xFF5
  3624                           intcon	equ	0xFF2
  3625                           intcon2	equ	0xFF1
  3626                           postinc0	equ	0xFEE
  3627                           wreg	equ	0xFE8
  3628                           postdec2	equ	0xFDD
  3629                           fsr2h	equ	0xFDA
  3630                           fsr2l	equ	0xFD9
  3631                           
  3632 ;; *************** function _DIO3_ISR_Lora_Init *****************
  3633 ;; Defined at:
  3634 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;		None
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  1    wreg      void 
  3641 ;; Registers used:
  3642 ;;		None
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;Total ram usage:        0 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    7
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_LORAWAN_PlatformInit
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text13
  3663  0000'                    __ptext13:
  3664                           	opt stack 0
  3665  0000'                    _DIO3_ISR_Lora_Init:
  3666                           	opt stack 21
  3667                           
  3668                           ;incstack = 0
  3669  0000' 0012               	return		;funcret
  3670  0002'                    __end_of_DIO3_ISR_Lora_Init:
  3671                           	opt stack 0
  3672                           tblptru	equ	0xFF8
  3673                           tblptrh	equ	0xFF7
  3674                           tblptrl	equ	0xFF6
  3675                           tablat	equ	0xFF5
  3676                           intcon	equ	0xFF2
  3677                           intcon2	equ	0xFF1
  3678                           postinc0	equ	0xFEE
  3679                           wreg	equ	0xFE8
  3680                           postdec2	equ	0xFDD
  3681                           fsr2h	equ	0xFDA
  3682                           fsr2l	equ	0xFD9
  3683                           
  3684 ;; *************** function _DIO2_ISR_Lora_Init *****************
  3685 ;; Defined at:
  3686 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, status,2, status,0, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3704 ;;Total ram usage:        0 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    8
  3707 ;; This function calls:
  3708 ;;		_IOCB4_SetInterruptHandler
  3709 ;; This function is called by:
  3710 ;;		_LORAWAN_PlatformInit
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text14
  3715  0000'                    __ptext14:
  3716                           	opt stack 0
  3717  0000'                    _DIO2_ISR_Lora_Init:
  3718                           	opt stack 20
  3719                           
  3720                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  3721                           
  3722                           ;incstack = 0
  3723  0000' 0E00'              	movlw	low _DIO2_ISR_Lora
  3724  0002' 0100               	movlb	0	; () banked
  3725  0004' 6F00'              	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3726  0006' 0E00'              	movlw	high _DIO2_ISR_Lora
  3727  0008' 6F00'              	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3728  000A' EC00' F000'        	call	_IOCB4_SetInterruptHandler	;wreg free
  3729  000E' 0012               	return		;funcret
  3730  0010'                    __end_of_DIO2_ISR_Lora_Init:
  3731                           	opt stack 0
  3732                           tblptru	equ	0xFF8
  3733                           tblptrh	equ	0xFF7
  3734                           tblptrl	equ	0xFF6
  3735                           tablat	equ	0xFF5
  3736                           intcon	equ	0xFF2
  3737                           intcon2	equ	0xFF1
  3738                           postinc0	equ	0xFEE
  3739                           wreg	equ	0xFE8
  3740                           postdec2	equ	0xFDD
  3741                           fsr2h	equ	0xFDA
  3742                           fsr2l	equ	0xFD9
  3743                           
  3744 ;; *************** function _IOCB4_SetInterruptHandler *****************
  3745 ;; Defined at:
  3746 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3749 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3761 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3764 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;Total ram usage:        2 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    7
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		_DIO2_ISR_Lora_Init
  3772 ;;		_PIN_MANAGER_Initialize
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text15
  3777  0000'                    __ptext15:
  3778                           	opt stack 0
  3779  0000'                    _IOCB4_SetInterruptHandler:
  3780                           	opt stack 21
  3781                           
  3782                           ;pin_manager.c: 139: IOCB4_InterruptHandler = InterruptHandler;
  3783                           
  3784                           ;incstack = 0
  3785  0000' C000' F004'        	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  3786  0004' C001' F005'        	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  3787  0008' 0012               	return		;funcret
  3788  000A'                    __end_of_IOCB4_SetInterruptHandler:
  3789                           	opt stack 0
  3790                           tblptru	equ	0xFF8
  3791                           tblptrh	equ	0xFF7
  3792                           tblptrl	equ	0xFF6
  3793                           tablat	equ	0xFF5
  3794                           intcon	equ	0xFF2
  3795                           intcon2	equ	0xFF1
  3796                           postinc0	equ	0xFEE
  3797                           wreg	equ	0xFE8
  3798                           postdec2	equ	0xFDD
  3799                           fsr2h	equ	0xFDA
  3800                           fsr2l	equ	0xFD9
  3801                           
  3802 ;; *************** function _DIO1_ISR_Lora_Init *****************
  3803 ;; Defined at:
  3804 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;		None
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;		None
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  1    wreg      void 
  3811 ;; Registers used:
  3812 ;;		wreg, status,2, status,0, cstack
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;Total ram usage:        0 bytes
  3823 ;; Hardware stack levels used:    1
  3824 ;; Hardware stack levels required when called:    8
  3825 ;; This function calls:
  3826 ;;		_INT2_SetInterruptHandler
  3827 ;; This function is called by:
  3828 ;;		_LORAWAN_PlatformInit
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text16
  3833  0000'                    __ptext16:
  3834                           	opt stack 0
  3835  0000'                    _DIO1_ISR_Lora_Init:
  3836                           	opt stack 20
  3837                           
  3838                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  3839                           
  3840                           ;incstack = 0
  3841  0000' 0E00'              	movlw	low _DIO1_ISR_Lora
  3842  0002' 0100               	movlb	0	; () banked
  3843  0004' 6F00'              	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3844  0006' 0E00'              	movlw	high _DIO1_ISR_Lora
  3845  0008' 6F00'              	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3846  000A' EC00' F000'        	call	_INT2_SetInterruptHandler	;wreg free
  3847  000E' 0012               	return		;funcret
  3848  0010'                    __end_of_DIO1_ISR_Lora_Init:
  3849                           	opt stack 0
  3850                           tblptru	equ	0xFF8
  3851                           tblptrh	equ	0xFF7
  3852                           tblptrl	equ	0xFF6
  3853                           tablat	equ	0xFF5
  3854                           intcon	equ	0xFF2
  3855                           intcon2	equ	0xFF1
  3856                           postinc0	equ	0xFEE
  3857                           wreg	equ	0xFE8
  3858                           postdec2	equ	0xFDD
  3859                           fsr2h	equ	0xFDA
  3860                           fsr2l	equ	0xFD9
  3861                           
  3862 ;; *************** function _DIO0_ISR_Lora_Init *****************
  3863 ;; Defined at:
  3864 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;		None
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, status,0, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3882 ;;Total ram usage:        0 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    8
  3885 ;; This function calls:
  3886 ;;		_INT1_SetInterruptHandler
  3887 ;; This function is called by:
  3888 ;;		_LORAWAN_PlatformInit
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text17
  3893  0000'                    __ptext17:
  3894                           	opt stack 0
  3895  0000'                    _DIO0_ISR_Lora_Init:
  3896                           	opt stack 20
  3897                           
  3898                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  3899                           
  3900                           ;incstack = 0
  3901  0000' 0E00'              	movlw	low _DIO0_ISR_Lora
  3902  0002' 0100               	movlb	0	; () banked
  3903  0004' 6F00'              	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3904  0006' 0E00'              	movlw	high _DIO0_ISR_Lora
  3905  0008' 6F00'              	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3906  000A' EC00' F000'        	call	_INT1_SetInterruptHandler	;wreg free
  3907  000E' 0012               	return		;funcret
  3908  0010'                    __end_of_DIO0_ISR_Lora_Init:
  3909                           	opt stack 0
  3910                           tblptru	equ	0xFF8
  3911                           tblptrh	equ	0xFF7
  3912                           tblptrl	equ	0xFF6
  3913                           tablat	equ	0xFF5
  3914                           intcon	equ	0xFF2
  3915                           intcon2	equ	0xFF1
  3916                           postinc0	equ	0xFEE
  3917                           wreg	equ	0xFE8
  3918                           postdec2	equ	0xFDD
  3919                           fsr2h	equ	0xFDA
  3920                           fsr2l	equ	0xFD9
  3921                           
  3922 ;; *************** function _INTERRUPT_Initialize *****************
  3923 ;; Defined at:
  3924 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;		None
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;		None
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		None
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;Total ram usage:        0 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    7
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_SYSTEM_Initialize
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text18
  3953  0000'                    __ptext18:
  3954                           	opt stack 0
  3955  0000'                    _INTERRUPT_Initialize:
  3956                           	opt stack 22
  3957                           
  3958                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3959                           
  3960                           ;incstack = 0
  3961  0000' 9ED0               	bcf	4048,7,c	;volatile
  3962  0002' 0012               	return		;funcret
  3963  0004'                    __end_of_INTERRUPT_Initialize:
  3964                           	opt stack 0
  3965                           tblptru	equ	0xFF8
  3966                           tblptrh	equ	0xFF7
  3967                           tblptrl	equ	0xFF6
  3968                           tablat	equ	0xFF5
  3969                           intcon	equ	0xFF2
  3970                           intcon2	equ	0xFF1
  3971                           postinc0	equ	0xFEE
  3972                           wreg	equ	0xFE8
  3973                           postdec2	equ	0xFDD
  3974                           fsr2h	equ	0xFDA
  3975                           fsr2l	equ	0xFD9
  3976                           
  3977 ;; *************** function _EXT_INT_Initialize *****************
  3978 ;; Defined at:
  3979 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0, cstack
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;Total ram usage:        0 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; Hardware stack levels required when called:    8
  4000 ;; This function calls:
  4001 ;;		_INT1_SetInterruptHandler
  4002 ;;		_INT2_SetInterruptHandler
  4003 ;; This function is called by:
  4004 ;;		_SYSTEM_Initialize
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           	psect	text19
  4009  0000'                    __ptext19:
  4010                           	opt stack 0
  4011  0000'                    _EXT_INT_Initialize:
  4012                           	opt stack 21
  4013                           
  4014                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  4015                           
  4016                           ;incstack = 0
  4017  0000' 90F0               	bcf	intcon3,0,c	;volatile
  4018                           
  4019                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  4020  0002' 8AF1               	bsf	intcon2,5,c	;volatile
  4021                           
  4022                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  4023  0004' 0E00'              	movlw	low _INT1_DefaultInterruptHandler
  4024  0006' 0100               	movlb	0	; () banked
  4025  0008' 6F00'              	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4026  000A' 0E00'              	movlw	high _INT1_DefaultInterruptHandler
  4027  000C' 6F00'              	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4028  000E' EC00' F000'        	call	_INT1_SetInterruptHandler	;wreg free
  4029                           
  4030                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  4031  0012' 86F0               	bsf	intcon3,3,c	;volatile
  4032                           
  4033                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
  4034  0014' 92F0               	bcf	intcon3,1,c	;volatile
  4035                           
  4036                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
  4037  0016' 88F1               	bsf	intcon2,4,c	;volatile
  4038                           
  4039                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  4040  0018' 0E00'              	movlw	low _INT2_DefaultInterruptHandler
  4041  001A' 0100               	movlb	0	; () banked
  4042  001C' 6F00'              	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4043  001E' 0E00'              	movlw	high _INT2_DefaultInterruptHandler
  4044  0020' 6F00'              	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4045  0022' EC00' F000'        	call	_INT2_SetInterruptHandler	;wreg free
  4046                           
  4047                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
  4048  0026' 88F0               	bsf	intcon3,4,c	;volatile
  4049  0028' 0012               	return		;funcret
  4050  002A'                    __end_of_EXT_INT_Initialize:
  4051                           	opt stack 0
  4052                           tblptru	equ	0xFF8
  4053                           tblptrh	equ	0xFF7
  4054                           tblptrl	equ	0xFF6
  4055                           tablat	equ	0xFF5
  4056                           intcon	equ	0xFF2
  4057                           intcon2	equ	0xFF1
  4058                           intcon3	equ	0xFF0
  4059                           postinc0	equ	0xFEE
  4060                           wreg	equ	0xFE8
  4061                           postdec2	equ	0xFDD
  4062                           fsr2h	equ	0xFDA
  4063                           fsr2l	equ	0xFD9
  4064                           
  4065 ;; *************** function _INT2_SetInterruptHandler *****************
  4066 ;; Defined at:
  4067 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4070 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      void 
  4075 ;; Registers used:
  4076 ;;		wreg, status,2, status,0
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4082 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;Total ram usage:        2 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    7
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_DIO1_ISR_Lora_Init
  4093 ;;		_EXT_INT_Initialize
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text20
  4098  0000'                    __ptext20:
  4099                           	opt stack 0
  4100  0000'                    _INT2_SetInterruptHandler:
  4101                           	opt stack 20
  4102                           
  4103                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
  4104                           
  4105                           ;incstack = 0
  4106  0000' C000' F006'        	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4107  0004' C001' F007'        	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4108  0008' 0012               	return		;funcret
  4109  000A'                    __end_of_INT2_SetInterruptHandler:
  4110                           	opt stack 0
  4111                           tblptru	equ	0xFF8
  4112                           tblptrh	equ	0xFF7
  4113                           tblptrl	equ	0xFF6
  4114                           tablat	equ	0xFF5
  4115                           intcon	equ	0xFF2
  4116                           intcon2	equ	0xFF1
  4117                           intcon3	equ	0xFF0
  4118                           postinc0	equ	0xFEE
  4119                           wreg	equ	0xFE8
  4120                           postdec2	equ	0xFDD
  4121                           fsr2h	equ	0xFDA
  4122                           fsr2l	equ	0xFD9
  4123                           
  4124 ;; *************** function _INT1_SetInterruptHandler *****************
  4125 ;; Defined at:
  4126 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4129 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;		None
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  1    wreg      void 
  4134 ;; Registers used:
  4135 ;;		wreg, status,2, status,0
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4141 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4145 ;;Total ram usage:        2 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; Hardware stack levels required when called:    7
  4148 ;; This function calls:
  4149 ;;		Nothing
  4150 ;; This function is called by:
  4151 ;;		_DIO0_ISR_Lora_Init
  4152 ;;		_EXT_INT_Initialize
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text21
  4157  0000'                    __ptext21:
  4158                           	opt stack 0
  4159  0000'                    _INT1_SetInterruptHandler:
  4160                           	opt stack 20
  4161                           
  4162                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  4163                           
  4164                           ;incstack = 0
  4165  0000' C000' F008'        	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4166  0004' C001' F009'        	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4167  0008' 0012               	return		;funcret
  4168  000A'                    __end_of_INT1_SetInterruptHandler:
  4169                           	opt stack 0
  4170                           tblptru	equ	0xFF8
  4171                           tblptrh	equ	0xFF7
  4172                           tblptrl	equ	0xFF6
  4173                           tablat	equ	0xFF5
  4174                           intcon	equ	0xFF2
  4175                           intcon2	equ	0xFF1
  4176                           intcon3	equ	0xFF0
  4177                           postinc0	equ	0xFEE
  4178                           wreg	equ	0xFE8
  4179                           postdec2	equ	0xFDD
  4180                           fsr2h	equ	0xFDA
  4181                           fsr2l	equ	0xFD9
  4182                           
  4183 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  4184 ;; Defined at:
  4185 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  networkSessi    2   11[BANK0 ] PTR unsigned char 
  4188 ;;		 -> nwkSKey(16), 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4200 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;Total ram usage:        2 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    8
  4207 ;; This function calls:
  4208 ;;		_memcpy
  4209 ;; This function is called by:
  4210 ;;		_main
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text22
  4215  0000'                    __ptext22:
  4216                           	opt stack 0
  4217  0000'                    _LORAWAN_SetNetworkSessionKey:
  4218                           	opt stack 22
  4219                           
  4220                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  4221                           
  4222                           ;incstack = 0
  4223  0000' 0100               	movlb	0	; () banked
  4224  0002' 5100'              	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  4225  0004' 1100'              	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  4226  0006' B4D8               	btfsc	status,2,c
  4227  0008' 0012               	return	
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;lorawan.c: 382: {
  4231                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  4232  000A' 0E00'              	movlw	low (_loRa+34)
  4233  000C' 6F00'              	movwf	memcpy@d1& (0+255),b
  4234  000E' 0E00'              	movlw	high (_loRa+34)
  4235  0010' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
  4236  0012' C00B' F002'        	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  4237  0016' C00C' F003'        	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  4238  001A' 0E00               	movlw	0
  4239  001C' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
  4240  001E' 0E10               	movlw	16
  4241  0020' 6F00'              	movwf	memcpy@n& (0+255),b
  4242  0022' EC00' F000'        	call	_memcpy	;wreg free
  4243                           
  4244                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  4245  0026' 0102               	movlb	2	; () banked
  4246  0028' 8900'              	bsf	(_loRa+165)& (0+255),4,b
  4247                           
  4248                           ; BSR set to: 2
  4249                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  4250  002A' 9900'              	bcf	(_loRa+2)& (0+255),4,b
  4251  002C' 0012               	return	
  4252  002E'                    __end_of_LORAWAN_SetNetworkSessionKey:
  4253                           	opt stack 0
  4254                           tblptru	equ	0xFF8
  4255                           tblptrh	equ	0xFF7
  4256                           tblptrl	equ	0xFF6
  4257                           tablat	equ	0xFF5
  4258                           intcon	equ	0xFF2
  4259                           intcon2	equ	0xFF1
  4260                           intcon3	equ	0xFF0
  4261                           postinc0	equ	0xFEE
  4262                           wreg	equ	0xFE8
  4263                           postdec2	equ	0xFDD
  4264                           fsr2h	equ	0xFDA
  4265                           fsr2l	equ	0xFD9
  4266                           status	equ	0xFD8
  4267                           
  4268 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  4269 ;; Defined at:
  4270 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  deviceAddres    4    0[BANK0 ] unsigned long 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		None
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4284 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;Total ram usage:        4 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    7
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_main
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text23
  4299  0000'                    __ptext23:
  4300                           	opt stack 0
  4301  0000'                    _LORAWAN_SetDeviceAddress:
  4302                           	opt stack 23
  4303                           
  4304                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  4305                           
  4306                           ;incstack = 0
  4307  0000' C000' F01E'        	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  4308  0004' C001' F01F'        	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  4309  0008' C002' F020'        	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  4310  000C' C003' F021'        	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  4311                           
  4312                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  4313  0010' 0102               	movlb	2	; () banked
  4314  0012' 8500'              	bsf	(_loRa+165)& (0+255),2,b
  4315                           
  4316                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  4317  0014' 9900'              	bcf	(_loRa+2)& (0+255),4,b
  4318                           
  4319                           ; BSR set to: 2
  4320  0016' 0012               	return		;funcret
  4321  0018'                    __end_of_LORAWAN_SetDeviceAddress:
  4322                           	opt stack 0
  4323                           tblptru	equ	0xFF8
  4324                           tblptrh	equ	0xFF7
  4325                           tblptrl	equ	0xFF6
  4326                           tablat	equ	0xFF5
  4327                           intcon	equ	0xFF2
  4328                           intcon2	equ	0xFF1
  4329                           intcon3	equ	0xFF0
  4330                           postinc0	equ	0xFEE
  4331                           wreg	equ	0xFE8
  4332                           postdec2	equ	0xFDD
  4333                           fsr2h	equ	0xFDA
  4334                           fsr2l	equ	0xFD9
  4335                           status	equ	0xFD8
  4336                           
  4337 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  4338 ;; Defined at:
  4339 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  applicationS    2   11[BANK0 ] PTR unsigned char 
  4342 ;;		 -> appSKey(16), 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;		None
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      void 
  4347 ;; Registers used:
  4348 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4354 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;Total ram usage:        2 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    8
  4361 ;; This function calls:
  4362 ;;		_memcpy
  4363 ;; This function is called by:
  4364 ;;		_main
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text24
  4369  0000'                    __ptext24:
  4370                           	opt stack 0
  4371  0000'                    _LORAWAN_SetApplicationSessionKey:
  4372                           	opt stack 22
  4373                           
  4374                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  4375                           
  4376                           ; BSR set to: 2
  4377                           ;incstack = 0
  4378  0000' 0100               	movlb	0	; () banked
  4379  0002' 5100'              	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  4380  0004' 1100'              	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  4381  0006' B4D8               	btfsc	status,2,c
  4382  0008' 0012               	return	
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;lorawan.c: 397: {
  4386                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  4387  000A' 0E00'              	movlw	low (_loRa+50)
  4388  000C' 6F00'              	movwf	memcpy@d1& (0+255),b
  4389  000E' 0E00'              	movlw	high (_loRa+50)
  4390  0010' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
  4391  0012' C00B' F002'        	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  4392  0016' C00C' F003'        	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  4393  001A' 0E00               	movlw	0
  4394  001C' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
  4395  001E' 0E10               	movlw	16
  4396  0020' 6F00'              	movwf	memcpy@n& (0+255),b
  4397  0022' EC00' F000'        	call	_memcpy	;wreg free
  4398                           
  4399                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  4400  0026' 0102               	movlb	2	; () banked
  4401  0028' 8B00'              	bsf	(_loRa+165)& (0+255),5,b
  4402                           
  4403                           ; BSR set to: 2
  4404                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  4405  002A' 9900'              	bcf	(_loRa+2)& (0+255),4,b
  4406  002C' 0012               	return	
  4407  002E'                    __end_of_LORAWAN_SetApplicationSessionKey:
  4408                           	opt stack 0
  4409                           tblptru	equ	0xFF8
  4410                           tblptrh	equ	0xFF7
  4411                           tblptrl	equ	0xFF6
  4412                           tablat	equ	0xFF5
  4413                           intcon	equ	0xFF2
  4414                           intcon2	equ	0xFF1
  4415                           intcon3	equ	0xFF0
  4416                           postinc0	equ	0xFEE
  4417                           wreg	equ	0xFE8
  4418                           postdec2	equ	0xFDD
  4419                           fsr2h	equ	0xFDA
  4420                           fsr2l	equ	0xFD9
  4421                           status	equ	0xFD8
  4422                           
  4423 ;; *************** function _LORAWAN_Mainloop *****************
  4424 ;; Defined at:
  4425 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;		None
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;		None
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      void 
  4432 ;; Registers used:
  4433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;Total ram usage:        0 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:   18
  4446 ;; This function calls:
  4447 ;;		_INTERRUPT_GetDioStatus
  4448 ;;		_RADIO_DIO0
  4449 ;;		_RADIO_DIO1
  4450 ;;		_RADIO_DIO2
  4451 ;;		_RADIO_DIO3
  4452 ;;		_RADIO_DIO4
  4453 ;;		_RADIO_DIO5
  4454 ;;		_SwTimersExecute
  4455 ;; This function is called by:
  4456 ;;		_main
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text25
  4461  0000'                    __ptext25:
  4462                           	opt stack 0
  4463  0000'                    _LORAWAN_Mainloop:
  4464                           	opt stack 12
  4465                           
  4466                           ;lorawan.c: 2240: SwTimersExecute();
  4467                           
  4468                           ;incstack = 0
  4469  0000' EC00' F000'        	call	_SwTimersExecute	;wreg free
  4470                           
  4471                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  4472  0004' EC00' F000'        	call	_INTERRUPT_GetDioStatus	;wreg free
  4473  0008' 0101               	movlb	1	; () banked
  4474  000A' 6F00'              	movwf	_localDioStatus& (0+255),b
  4475                           
  4476                           ; BSR set to: 1
  4477                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  4478  000C' B100'              	btfsc	_localDioStatus& (0+255),0,b
  4479                           
  4480                           ; BSR set to: 1
  4481                           ;lorawan.c: 2246: {
  4482                           ;lorawan.c: 2247: RADIO_DIO0();
  4483  000E' EC00' F000'        	call	_RADIO_DIO0	;wreg free
  4484                           
  4485                           ;lorawan.c: 2248: }
  4486                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  4487  0012' 0101               	movlb	1	; () banked
  4488  0014' B300'              	btfsc	_localDioStatus& (0+255),1,b
  4489                           
  4490                           ; BSR set to: 1
  4491                           ;lorawan.c: 2250: {
  4492                           ;lorawan.c: 2251: RADIO_DIO1();
  4493  0016' EC00' F000'        	call	_RADIO_DIO1	;wreg free
  4494                           
  4495                           ;lorawan.c: 2252: }
  4496                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  4497  001A' 0101               	movlb	1	; () banked
  4498  001C' B500'              	btfsc	_localDioStatus& (0+255),2,b
  4499                           
  4500                           ; BSR set to: 1
  4501                           ;lorawan.c: 2254: {
  4502                           ;lorawan.c: 2255: RADIO_DIO2();
  4503  001E' EC00' F000'        	call	_RADIO_DIO2	;wreg free
  4504                           
  4505                           ;lorawan.c: 2256: }
  4506                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  4507  0022' 0101               	movlb	1	; () banked
  4508  0024' B700'              	btfsc	_localDioStatus& (0+255),3,b
  4509                           
  4510                           ; BSR set to: 1
  4511                           ;lorawan.c: 2258: {
  4512                           ;lorawan.c: 2259: RADIO_DIO3();
  4513  0026' EC00' F000'        	call	_RADIO_DIO3	;wreg free
  4514                           
  4515                           ;lorawan.c: 2260: }
  4516                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  4517  002A' 0101               	movlb	1	; () banked
  4518  002C' B900'              	btfsc	_localDioStatus& (0+255),4,b
  4519                           
  4520                           ; BSR set to: 1
  4521                           ;lorawan.c: 2262: {
  4522                           ;lorawan.c: 2263: RADIO_DIO4();
  4523  002E' EC00' F000'        	call	_RADIO_DIO4	;wreg free
  4524                           
  4525                           ;lorawan.c: 2264: }
  4526                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  4527  0032' 0101               	movlb	1	; () banked
  4528  0034' AB00'              	btfss	_localDioStatus& (0+255),5,b
  4529  0036' 0012               	return	
  4530                           
  4531                           ; BSR set to: 1
  4532                           ;lorawan.c: 2266: {
  4533                           ;lorawan.c: 2267: RADIO_DIO5();
  4534  0038' EC00' F000'        	call	_RADIO_DIO5	;wreg free
  4535  003C' 0012               	return	
  4536  003E'                    __end_of_LORAWAN_Mainloop:
  4537                           	opt stack 0
  4538                           tblptru	equ	0xFF8
  4539                           tblptrh	equ	0xFF7
  4540                           tblptrl	equ	0xFF6
  4541                           tablat	equ	0xFF5
  4542                           intcon	equ	0xFF2
  4543                           intcon2	equ	0xFF1
  4544                           intcon3	equ	0xFF0
  4545                           postinc0	equ	0xFEE
  4546                           wreg	equ	0xFE8
  4547                           postdec2	equ	0xFDD
  4548                           fsr2h	equ	0xFDA
  4549                           fsr2l	equ	0xFD9
  4550                           status	equ	0xFD8
  4551                           
  4552 ;; *************** function _SwTimersExecute *****************
  4553 ;; Defined at:
  4554 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;		None
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;  i               1  126[BANK0 ] unsigned char 
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;Total ram usage:        5 bytes
  4573 ;; Hardware stack levels used:    1
  4574 ;; Hardware stack levels required when called:   17
  4575 ;; This function calls:
  4576 ;;		Absolute function
  4577 ;;		_AckRetransmissionCallback
  4578 ;;		_AutomaticReplyCallback
  4579 ;;		_DutyCycleCallback
  4580 ;;		_LORAWAN_LinkCheckCallback
  4581 ;;		_LORAWAN_ReceiveWindow1Callback
  4582 ;;		_LORAWAN_ReceiveWindow2Callback
  4583 ;;		_RADIO_RxFSKTimeout
  4584 ;;		_RADIO_WatchdogTimeout
  4585 ;;		_UnconfirmedTransmissionCallback
  4586 ;;		_UpdateJoinSuccessState
  4587 ;; This function is called by:
  4588 ;;		_LORAWAN_Mainloop
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text26
  4593  0000'                    __ptext26:
  4594                           	opt stack 0
  4595  0000'                    _SwTimersExecute:
  4596                           	opt stack 12
  4597                           
  4598                           ;sw_timer.c: 262: uint8_t i;
  4599                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  4600                           
  4601                           ;incstack = 0
  4602  0000' 9EF2               	bcf	intcon,7,c	;volatile
  4603                           
  4604                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  4605  0002' 0E00               	movlw	0
  4606  0004' 0100               	movlb	0	; () banked
  4607  0006' 6F00'              	movwf	SwTimersExecute@i& (0+255),b
  4608  0008' D068               	goto	l278
  4609  000A'                    
  4610                           ; BSR set to: 0
  4611                           ;sw_timer.c: 266: {
  4612                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  4613                           
  4614                           ; BSR set to: 0
  4615  000A' 5100'              	movf	SwTimersExecute@i& (0+255),w,b
  4616  000C' 0D08               	mullw	8
  4617  000E' 0E04               	movlw	4
  4618  0010' 26F3               	addwf	prodl,f,c
  4619  0012' 0E00               	movlw	0
  4620  0014' 22F4               	addwfc	prodh,f,c
  4621  0016' 0E00'              	movlw	low _swTimers
  4622  0018' 24F3               	addwf	prodl,w,c
  4623  001A' 6ED9               	movwf	fsr2l,c
  4624  001C' 0E00'              	movlw	high _swTimers
  4625  001E' 20F4               	addwfc	prodh,w,c
  4626  0020' 6EDA               	movwf	fsr2h,c
  4627  0022' 04DE               	decf	postinc2,w,c
  4628  0024' A4D8               	btfss	status,2,c
  4629  0026' D057               	goto	l282
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;sw_timer.c: 270: {
  4633                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  4634  0028' 5100'              	movf	SwTimersExecute@i& (0+255),w,b
  4635  002A' 0D08               	mullw	8
  4636  002C' 0E00'              	movlw	low _swTimers
  4637  002E' 24F3               	addwf	prodl,w,c
  4638  0030' 6ED9               	movwf	fsr2l,c
  4639  0032' 0E00'              	movlw	high _swTimers
  4640  0034' 20F4               	addwfc	prodh,w,c
  4641  0036' 6EDA               	movwf	fsr2h,c
  4642  0038' 50DE               	movf	postinc2,w,c
  4643  003A' 10DE               	iorwf	postinc2,w,c
  4644  003C' 10DE               	iorwf	postinc2,w,c
  4645  003E' 10DE               	iorwf	postinc2,w,c
  4646  0040' A4D8               	btfss	status,2,c
  4647  0042' D049               	goto	l282
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;sw_timer.c: 272: {
  4651                           ;sw_timer.c: 273: swTimers[i].running = 0;
  4652  0044' 5100'              	movf	SwTimersExecute@i& (0+255),w,b
  4653  0046' 0D08               	mullw	8
  4654  0048' 0E04               	movlw	4
  4655  004A' 26F3               	addwf	prodl,f,c
  4656  004C' 0E00               	movlw	0
  4657  004E' 22F4               	addwfc	prodh,f,c
  4658  0050' 0E00'              	movlw	low _swTimers
  4659  0052' 24F3               	addwf	prodl,w,c
  4660  0054' 6ED9               	movwf	fsr2l,c
  4661  0056' 0E00'              	movlw	high _swTimers
  4662  0058' 20F4               	addwfc	prodh,w,c
  4663  005A' 6EDA               	movwf	fsr2h,c
  4664  005C' 0E00               	movlw	0
  4665  005E' 6EDF               	movwf	indf2,c
  4666                           
  4667                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  4668  0060' 5100'              	movf	SwTimersExecute@i& (0+255),w,b
  4669  0062' 0D08               	mullw	8
  4670  0064' 0E06               	movlw	6
  4671  0066' 26F3               	addwf	prodl,f,c
  4672  0068' 0E00               	movlw	0
  4673  006A' 22F4               	addwfc	prodh,f,c
  4674  006C' 0E00'              	movlw	low _swTimers
  4675  006E' 24F3               	addwf	prodl,w,c
  4676  0070' 6ED9               	movwf	fsr2l,c
  4677  0072' 0E00'              	movlw	high _swTimers
  4678  0074' 20F4               	addwfc	prodh,w,c
  4679  0076' 6EDA               	movwf	fsr2h,c
  4680  0078' 50DE               	movf	postinc2,w,c
  4681  007A' 10DE               	iorwf	postinc2,w,c
  4682  007C' B4D8               	btfsc	status,2,c
  4683  007E' D02B               	goto	l282
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;sw_timer.c: 275: {
  4687                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  4688  0080' 8EF2               	bsf	intcon,7,c	;volatile
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  4692  0082' 5100'              	movf	SwTimersExecute@i& (0+255),w,b
  4693  0084' 0D08               	mullw	8
  4694  0086' 0E05               	movlw	5
  4695  0088' 26F3               	addwf	prodl,f,c
  4696  008A' 0E00               	movlw	0
  4697  008C' 22F4               	addwfc	prodh,f,c
  4698  008E' 0E00'              	movlw	low _swTimers
  4699  0090' 24F3               	addwf	prodl,w,c
  4700  0092' 6ED9               	movwf	fsr2l,c
  4701  0094' 0E00'              	movlw	high _swTimers
  4702  0096' 20F4               	addwfc	prodh,w,c
  4703  0098' 6EDA               	movwf	fsr2h,c
  4704  009A' 50DF               	movf	indf2,w,c
  4705  009C' 6EE6               	movwf	postinc1,c
  4706  009E' 5100'              	movf	SwTimersExecute@i& (0+255),w,b
  4707  00A0' 0D08               	mullw	8
  4708  00A2' 0E06               	movlw	6
  4709  00A4' 26F3               	addwf	prodl,f,c
  4710  00A6' 0E00               	movlw	0
  4711  00A8' 22F4               	addwfc	prodh,f,c
  4712  00AA' 0E00'              	movlw	low _swTimers
  4713  00AC' 24F3               	addwf	prodl,w,c
  4714  00AE' 6ED9               	movwf	fsr2l,c
  4715  00B0' 0E00'              	movlw	high _swTimers
  4716  00B2' 20F4               	addwfc	prodh,w,c
  4717  00B4' 6EDA               	movwf	fsr2h,c
  4718  00B6' CFDE F07A'         	movff	postinc2,??_SwTimersExecute
  4719  00BA' CFDD F07B'         	movff	postdec2,??_SwTimersExecute+1
  4720  00BE' D801               	call	u21428
  4721  00C0' D009               	goto	u21429
  4722  00C2'                    u21428:
  4723  00C2' 0005               	push	
  4724  00C4' 6EFA               	movwf	pclath,c
  4725  00C6' 5100'              	movf	??_SwTimersExecute& (0+255),w,b
  4726  00C8' 6EFD               	movwf	tosl,c
  4727  00CA' 5100'              	movf	(??_SwTimersExecute+1)& (0+255),w,b
  4728  00CC' 6EFE               	movwf	tosh,c
  4729  00CE' 6AFF               	clrf	tosu,c
  4730  00D0' 50FA               	movf	pclath,w,c
  4731  00D2' 0012               	return		;indir
  4732  00D4'                    u21429:
  4733                           
  4734                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  4735  00D4' 9EF2               	bcf	intcon,7,c	;volatile
  4736  00D6'                    l282:
  4737  00D6' 0100               	movlb	0	; () banked
  4738  00D8' 2B00'              	incf	SwTimersExecute@i& (0+255),f,b
  4739  00DA'                    l278:
  4740                           
  4741                           ; BSR set to: 0
  4742                           
  4743                           ; BSR set to: 0
  4744  00DA' 0101               	movlb	1	; () banked
  4745  00DC' 5100'              	movf	_allocatedTimers& (0+255),w,b	;volatile
  4746  00DE' 0100               	movlb	0	; () banked
  4747  00E0' 5D00'              	subwf	SwTimersExecute@i& (0+255),w,b
  4748  00E2' A0D8               	btfss	status,0,c
  4749  00E4' D792               	goto	l279
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;sw_timer.c: 279: }
  4753                           ;sw_timer.c: 280: }
  4754                           ;sw_timer.c: 281: }
  4755                           ;sw_timer.c: 282: }
  4756                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  4757  00E6' 8EF2               	bsf	intcon,7,c	;volatile
  4758                           
  4759                           ; BSR set to: 0
  4760  00E8' 0012               	return		;funcret
  4761  00EA'                    __end_of_SwTimersExecute:
  4762                           	opt stack 0
  4763                           tosu	equ	0xFFF
  4764                           tosh	equ	0xFFE
  4765                           tosl	equ	0xFFD
  4766                           pclath	equ	0xFFA
  4767                           tblptru	equ	0xFF8
  4768                           tblptrh	equ	0xFF7
  4769                           tblptrl	equ	0xFF6
  4770                           tablat	equ	0xFF5
  4771                           prodh	equ	0xFF4
  4772                           prodl	equ	0xFF3
  4773                           intcon	equ	0xFF2
  4774                           intcon2	equ	0xFF1
  4775                           intcon3	equ	0xFF0
  4776                           postinc0	equ	0xFEE
  4777                           wreg	equ	0xFE8
  4778                           postinc1	equ	0xFE6
  4779                           indf2	equ	0xFDF
  4780                           postinc2	equ	0xFDE
  4781                           postdec2	equ	0xFDD
  4782                           fsr2h	equ	0xFDA
  4783                           fsr2l	equ	0xFD9
  4784                           status	equ	0xFD8
  4785                           
  4786 ;; *************** function _DutyCycleCallback *****************
  4787 ;; Defined at:
  4788 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;  param           1  [STACK] unsigned char 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  minim           4  [STACK] unsigned long 
  4793 ;;  i               1  [STACK] unsigned char 
  4794 ;;  found           1  [STACK] unsigned char 
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1  [STACK] void 
  4797 ;; Registers used:
  4798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, prodl, prodh, cstack
  4799 ;; Tracked objects:
  4800 ;;		On entry : 3F/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4808 ;;Total ram usage:        0 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; Hardware stack levels required when called:   11
  4811 ;; This function calls:
  4812 ;;		_SwTimerSetTimeout
  4813 ;;		_SwTimerStart
  4814 ;;		___lldiv
  4815 ;; This function is called by:
  4816 ;;		_SetCallbackSoftwareTimers
  4817 ;;		_SwTimersExecute
  4818 ;; This function uses a reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text27
  4822  0000'                    __ptext27:
  4823                           	opt stack 0
  4824  0000'                    _DutyCycleCallback:
  4825                           	opt stack 0
  4826                           
  4827                           ; BSR set to: 0
  4828                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
  4829  0000' 0E0A               	movlw	10
  4830  0002' 26E1               	addwf	fsr1l,f,c
  4831  0004' 0E00               	movlw	0
  4832  0006' 22E2               	addwfc	fsr1h,f,c
  4833                           
  4834                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  4835                           
  4836                           ;incstack = 0
  4837  0008' 0EFF               	movlw	255
  4838  000A' 6E08'              	movwf	btemp+8,c
  4839  000C' 0EFF               	movlw	255
  4840  000E' 6E09'              	movwf	btemp+9,c
  4841  0010' 0EFF               	movlw	255
  4842  0012' 6E0A'              	movwf	btemp+10,c
  4843  0014' 0EFF               	movlw	255
  4844  0016' 6E0B'              	movwf	btemp+11,c
  4845                           
  4846                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  4847  0018' 0EFA               	movlw	-6
  4848  001A' C008' FFE3         	movff	btemp+8,plusw1
  4849  001E' 0EFB               	movlw	-5
  4850  0020' C009' FFE3         	movff	btemp+9,plusw1
  4851  0024' 0EFC               	movlw	-4
  4852  0026' C00A' FFE3         	movff	btemp+10,plusw1
  4853  002A' 0EFD               	movlw	-3
  4854  002C' C00B' FFE3         	movff	btemp+11,plusw1
  4855                           
  4856                           ;lorawan_eu.c: 1224: bool found = 0;
  4857                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  4858  0030' 0EFF               	movlw	-1
  4859  0032' 6AE3               	clrf	plusw1,c
  4860                           
  4861                           ;lorawan_eu.c: 1225: uint8_t i;
  4862                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  4863                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4864  0034' 0EFE               	movlw	-2
  4865  0036' 6AE3               	clrf	plusw1,c
  4866  0038'                    l15920:
  4867                           
  4868                           ;lorawan_eu.c: 1228: {
  4869                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
  4870                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4871  0038' 0EFE               	movlw	-2
  4872  003A' 50E3               	movf	plusw1,w,c
  4873  003C' 0D0E               	mullw	14
  4874  003E' 0E00'              	movlw	low (_Channels+4)
  4875  0040' 24F3               	addwf	prodl,w,c
  4876  0042' 6ED9               	movwf	fsr2l,c
  4877  0044' 0E00'              	movlw	high (_Channels+4)
  4878  0046' 20F4               	addwfc	prodh,w,c
  4879  0048' 6EDA               	movwf	fsr2h,c
  4880  004A' 04DE               	decf	postinc2,w,c
  4881  004C' A4D8               	btfss	status,2,c
  4882  004E' D0AD               	goto	l15938
  4883                           
  4884                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4885  0050' 0EFE               	movlw	-2
  4886  0052' 50E3               	movf	plusw1,w,c
  4887  0054' 0D0E               	mullw	14
  4888  0056' 0E00'              	movlw	low (_Channels+8)
  4889  0058' 24F3               	addwf	prodl,w,c
  4890  005A' 6ED9               	movwf	fsr2l,c
  4891  005C' 0E00'              	movlw	high (_Channels+8)
  4892  005E' 20F4               	addwfc	prodh,w,c
  4893  0060' 6EDA               	movwf	fsr2h,c
  4894  0062' 50DE               	movf	postinc2,w,c
  4895  0064' 10DE               	iorwf	postinc2,w,c
  4896  0066' 10DE               	iorwf	postinc2,w,c
  4897  0068' 10DE               	iorwf	postinc2,w,c
  4898  006A' B4D8               	btfsc	status,2,c
  4899  006C' D09E               	goto	l15938
  4900                           
  4901                           ;lorawan_eu.c: 1231: {
  4902                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
  4903                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4904  006E' 0EFE               	movlw	-2
  4905  0070' 50E3               	movf	plusw1,w,c
  4906  0072' 0D0E               	mullw	14
  4907  0074' 0E00'              	movlw	low (_Channels+8)
  4908  0076' 24F3               	addwf	prodl,w,c
  4909  0078' 6ED9               	movwf	fsr2l,c
  4910  007A' 0E00'              	movlw	high (_Channels+8)
  4911  007C' 20F4               	addwfc	prodh,w,c
  4912  007E' 6EDA               	movwf	fsr2h,c
  4913  0080' 50DE               	movf	postinc2,w,c
  4914  0082' 0102               	movlb	2	; () banked
  4915  0084' 5D00'              	subwf	(_loRa+200)& (0+255),w,b
  4916  0086' 50DE               	movf	postinc2,w,c
  4917  0088' 5900'              	subwfb	(_loRa+201)& (0+255),w,b
  4918  008A' 50DE               	movf	postinc2,w,c
  4919  008C' 5900'              	subwfb	(_loRa+202)& (0+255),w,b
  4920  008E' 50DE               	movf	postinc2,w,c
  4921  0090' 5900'              	subwfb	(_loRa+203)& (0+255),w,b
  4922  0092' B0D8               	btfsc	status,0,c
  4923  0094' D02F               	goto	l15928
  4924                           
  4925                           ; BSR set to: 2
  4926                           ;lorawan_eu.c: 1233: {
  4927                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
  4928                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4929  0096' 0EFE               	movlw	-2
  4930  0098' 50E3               	movf	plusw1,w,c
  4931  009A' 0D0E               	mullw	14
  4932  009C' 0E00'              	movlw	low (_Channels+8)
  4933  009E' 24F3               	addwf	prodl,w,c
  4934  00A0' 6ED9               	movwf	fsr2l,c
  4935  00A2' 0E00'              	movlw	high (_Channels+8)
  4936  00A4' 20F4               	addwfc	prodh,w,c
  4937  00A6' 6EDA               	movwf	fsr2h,c
  4938  00A8' CFDE F008'         	movff	postinc2,btemp+8
  4939  00AC' CFDE F009'         	movff	postinc2,btemp+9
  4940  00B0' CFDE F00A'         	movff	postinc2,btemp+10
  4941  00B4' CFDE F00B'         	movff	postinc2,btemp+11
  4942  00B8' 5100'              	movf	(_loRa+200)& (0+255),w,b
  4943  00BA' 5C08'              	subwf	btemp+8,w,c
  4944  00BC' 6E04'              	movwf	btemp+4,c
  4945  00BE' 5100'              	movf	(_loRa+201)& (0+255),w,b
  4946  00C0' 5809'              	subwfb	btemp+9,w,c
  4947  00C2' 6E05'              	movwf	btemp+5,c
  4948  00C4' 5100'              	movf	(_loRa+202)& (0+255),w,b
  4949  00C6' 580A'              	subwfb	btemp+10,w,c
  4950  00C8' 6E06'              	movwf	btemp+6,c
  4951  00CA' 5100'              	movf	(_loRa+203)& (0+255),w,b
  4952  00CC' 580B'              	subwfb	btemp+11,w,c
  4953  00CE' 6E07'              	movwf	btemp+7,c
  4954                           
  4955                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4956  00D0' 0EFE               	movlw	-2
  4957  00D2' 50E3               	movf	plusw1,w,c
  4958  00D4' 0D0E               	mullw	14
  4959  00D6' 0E00'              	movlw	low (_Channels+8)
  4960  00D8' 24F3               	addwf	prodl,w,c
  4961  00DA' 6ED9               	movwf	fsr2l,c
  4962  00DC' 0E00'              	movlw	high (_Channels+8)
  4963  00DE' 20F4               	addwfc	prodh,w,c
  4964  00E0' 6EDA               	movwf	fsr2h,c
  4965  00E2' C004' FFDE         	movff	btemp+4,postinc2
  4966  00E6' C005' FFDE         	movff	btemp+5,postinc2
  4967  00EA' C006' FFDE         	movff	btemp+6,postinc2
  4968  00EE' C007' FFDE         	movff	btemp+7,postinc2
  4969                           
  4970                           ;lorawan_eu.c: 1235: }
  4971  00F2' D00D               	goto	l15930
  4972  00F4'                    l15928:
  4973                           
  4974                           ; BSR set to: 2
  4975                           ;lorawan_eu.c: 1236: else
  4976                           ;lorawan_eu.c: 1237: {
  4977                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
  4978                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4979  00F4' 0EFE               	movlw	-2
  4980  00F6' 50E3               	movf	plusw1,w,c
  4981  00F8' 0D0E               	mullw	14
  4982  00FA' 0E00'              	movlw	low (_Channels+8)
  4983  00FC' 24F3               	addwf	prodl,w,c
  4984  00FE' 6ED9               	movwf	fsr2l,c
  4985  0100' 0E00'              	movlw	high (_Channels+8)
  4986  0102' 20F4               	addwfc	prodh,w,c
  4987  0104' 6EDA               	movwf	fsr2h,c
  4988  0106' 6ADE               	clrf	postinc2,c
  4989  0108' 6ADE               	clrf	postinc2,c
  4990  010A' 6ADE               	clrf	postinc2,c
  4991  010C' 6ADD               	clrf	postdec2,c
  4992  010E'                    l15930:
  4993                           
  4994                           ; BSR set to: 2
  4995                           ;lorawan_eu.c: 1239: }
  4996                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
  4997                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4998  010E' 0EFE               	movlw	-2
  4999  0110' 50E3               	movf	plusw1,w,c
  5000  0112' 0D0E               	mullw	14
  5001  0114' 0E00'              	movlw	low (_Channels+8)
  5002  0116' 24F3               	addwf	prodl,w,c
  5003  0118' 6ED9               	movwf	fsr2l,c
  5004  011A' 0E00'              	movlw	high (_Channels+8)
  5005  011C' 20F4               	addwfc	prodh,w,c
  5006  011E' 6EDA               	movwf	fsr2h,c
  5007                           
  5008                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5009  0120' 0EFA               	movlw	-6
  5010  0122' CFE3 F000'         	movff	plusw1,btemp
  5011  0126' 50DE               	movf	postinc2,w,c
  5012  0128' 5C00'              	subwf	btemp,w,c
  5013  012A' 0EFB               	movlw	-5
  5014  012C' CFE3 F000'         	movff	plusw1,btemp
  5015  0130' 50DE               	movf	postinc2,w,c
  5016  0132' 5800'              	subwfb	btemp,w,c
  5017  0134' 0EFC               	movlw	-4
  5018  0136' CFE3 F000'         	movff	plusw1,btemp
  5019  013A' 50DE               	movf	postinc2,w,c
  5020  013C' 5800'              	subwfb	btemp,w,c
  5021  013E' 0EFD               	movlw	-3
  5022  0140' CFE3 F000'         	movff	plusw1,btemp
  5023  0144' 50DE               	movf	postinc2,w,c
  5024  0146' 5800'              	subwfb	btemp,w,c
  5025  0148' A0D8               	btfss	status,0,c
  5026  014A' D02F               	goto	l15938
  5027                           
  5028                           ; BSR set to: 2
  5029                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5030  014C' 0EFE               	movlw	-2
  5031  014E' 50E3               	movf	plusw1,w,c
  5032  0150' 0D0E               	mullw	14
  5033  0152' 0E00'              	movlw	low (_Channels+8)
  5034  0154' 24F3               	addwf	prodl,w,c
  5035  0156' 6ED9               	movwf	fsr2l,c
  5036  0158' 0E00'              	movlw	high (_Channels+8)
  5037  015A' 20F4               	addwfc	prodh,w,c
  5038  015C' 6EDA               	movwf	fsr2h,c
  5039  015E' 50DE               	movf	postinc2,w,c
  5040  0160' 10DE               	iorwf	postinc2,w,c
  5041  0162' 10DE               	iorwf	postinc2,w,c
  5042  0164' 10DE               	iorwf	postinc2,w,c
  5043  0166' B4D8               	btfsc	status,2,c
  5044  0168' D020               	goto	l15938
  5045                           
  5046                           ; BSR set to: 2
  5047                           ;lorawan_eu.c: 1241: {
  5048                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  5049                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5050  016A' 0EFE               	movlw	-2
  5051  016C' 50E3               	movf	plusw1,w,c
  5052  016E' 0D0E               	mullw	14
  5053  0170' 0E00'              	movlw	low (_Channels+8)
  5054  0172' 24F3               	addwf	prodl,w,c
  5055  0174' 6ED9               	movwf	fsr2l,c
  5056  0176' 0E00'              	movlw	high (_Channels+8)
  5057  0178' 20F4               	addwfc	prodh,w,c
  5058  017A' 6EDA               	movwf	fsr2h,c
  5059  017C' CFDE F008'         	movff	postinc2,btemp+8
  5060  0180' CFDE F009'         	movff	postinc2,btemp+9
  5061  0184' CFDE F00A'         	movff	postinc2,btemp+10
  5062  0188' CFDE F00B'         	movff	postinc2,btemp+11
  5063                           
  5064                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5065  018C' 0EFA               	movlw	-6
  5066  018E' C008' FFE3         	movff	btemp+8,plusw1
  5067  0192' 0EFB               	movlw	-5
  5068  0194' C009' FFE3         	movff	btemp+9,plusw1
  5069  0198' 0EFC               	movlw	-4
  5070  019A' C00A' FFE3         	movff	btemp+10,plusw1
  5071  019E' 0EFD               	movlw	-3
  5072  01A0' C00B' FFE3         	movff	btemp+11,plusw1
  5073                           
  5074                           ; BSR set to: 2
  5075                           ;lorawan_eu.c: 1243: found = 1;
  5076                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5077  01A4' 0EFF               	movlw	-1
  5078  01A6' 6AE3               	clrf	plusw1,c
  5079  01A8' 2AE3               	incf	plusw1,f,c
  5080  01AA'                    l15938:
  5081                           
  5082                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5083  01AA' 0EFE               	movlw	-2
  5084  01AC' 2AE3               	incf	plusw1,f,c
  5085                           
  5086                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5087  01AE' 0EFE               	movlw	-2
  5088  01B0' CFE3 F000'         	movff	plusw1,btemp
  5089  01B4' 0E0F               	movlw	15
  5090  01B6' 6400'              	cpfsgt	btemp,c
  5091  01B8' D73F               	goto	l15920
  5092                           
  5093                           ;lorawan_eu.c: 1244: }
  5094                           ;lorawan_eu.c: 1245: }
  5095                           ;lorawan_eu.c: 1246: }
  5096                           ;lorawan_eu.c: 1247: if ( found == 1 )
  5097                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5098  01BA' 0EFF               	movlw	-1
  5099  01BC' 04E3               	decf	plusw1,w,c
  5100  01BE' A4D8               	btfss	status,2,c
  5101  01C0' D09D               	goto	l1310
  5102                           
  5103                           ;lorawan_eu.c: 1248: {
  5104                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  5105                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5106  01C2' 50E1               	movf	fsr1l,w,c
  5107  01C4' 0FFA               	addlw	-6
  5108  01C6' 6ED9               	movwf	fsr2l,c
  5109  01C8' 50E2               	movf	fsr1h,w,c
  5110  01CA' 6EDA               	movwf	fsr2h,c
  5111  01CC' 0EFF               	movlw	255
  5112  01CE' 22DA               	addwfc	fsr2h,f,c
  5113  01D0' CFDE F0C8'         	movff	postinc2,_loRa+200
  5114  01D4' CFDE F0C9'         	movff	postinc2,_loRa+201
  5115  01D8' CFDE F0CA'         	movff	postinc2,_loRa+202
  5116  01DC' CFDE F0CB'         	movff	postinc2,_loRa+203
  5117                           
  5118                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  5119                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5120  01E0' 0EFD               	movlw	-3
  5121  01E2' 50E3               	movf	plusw1,w,c
  5122  01E4' E10E               	bnz	u19420
  5123  01E6' 0EFA               	movlw	-6
  5124  01E8' 28E3               	incf	plusw1,w,c
  5125  01EA' 0EFB               	movlw	-5
  5126  01EC' CFE3 F000'         	movff	plusw1,btemp
  5127  01F0' 0EFF               	movlw	255
  5128  01F2' 5A00'              	subwfb	btemp,f,c
  5129  01F4' 0EFC               	movlw	-4
  5130  01F6' CFE3 F000'         	movff	plusw1,btemp
  5131  01FA' 0E0F               	movlw	15
  5132  01FC' 5A00'              	subwfb	btemp,f,c
  5133  01FE' A0D8               	btfss	status,0,c
  5134  0200' D02B               	goto	l15950
  5135  0202'                    u19420:
  5136                           
  5137                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5138  0202' 50E1               	movf	fsr1l,w,c
  5139  0204' 0FFA               	addlw	-6
  5140  0206' 6ED9               	movwf	fsr2l,c
  5141  0208' 50E2               	movf	fsr1h,w,c
  5142  020A' 6EDA               	movwf	fsr2h,c
  5143  020C' 0EFF               	movlw	255
  5144  020E' 22DA               	addwfc	fsr2h,f,c
  5145  0210' CFDE F000'         	movff	postinc2,___lldiv@dividend
  5146  0214' CFDE F001'         	movff	postinc2,___lldiv@dividend+1
  5147  0218' CFDE F002'         	movff	postinc2,___lldiv@dividend+2
  5148  021C' CFDE F003'         	movff	postinc2,___lldiv@dividend+3
  5149  0220' 0E7D               	movlw	125
  5150  0222' 0100               	movlb	0	; () banked
  5151  0224' 6F00'              	movwf	___lldiv@divisor& (0+255),b
  5152  0226' 0E00               	movlw	0
  5153  0228' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
  5154  022A' 0E00               	movlw	0
  5155  022C' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
  5156  022E' 0E00               	movlw	0
  5157  0230' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
  5158  0232' EC00' F000'        	call	___lldiv	;wreg free
  5159  0236' C000' F008'        	movff	?___lldiv,btemp+8
  5160  023A' C001' F009'        	movff	?___lldiv+1,btemp+9
  5161  023E' C002' F00A'        	movff	?___lldiv+2,btemp+10
  5162  0242' C003' F00B'        	movff	?___lldiv+3,btemp+11
  5163  0246' 0E0C               	movlw	12
  5164  0248'                    u19435:
  5165  0248' 90D8               	bcf	status,0,c
  5166  024A' 3608'              	rlcf	btemp+8,f,c
  5167  024C' 3609'              	rlcf	btemp+9,f,c
  5168  024E' 360A'              	rlcf	btemp+10,f,c
  5169  0250' 360B'              	rlcf	btemp+11,f,c
  5170  0252' 2EE8               	decfsz	wreg,f,c
  5171  0254' D7F9               	goto	u19435
  5172  0256' D02F               	goto	L1
  5173  0258'                    l15950:
  5174                           
  5175                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5176  0258' 0EFA               	movlw	-6
  5177  025A' CFE3 F008'         	movff	plusw1,btemp+8
  5178  025E' 0EFB               	movlw	-5
  5179  0260' CFE3 F009'         	movff	plusw1,btemp+9
  5180  0264' 0EFC               	movlw	-4
  5181  0266' CFE3 F00A'         	movff	plusw1,btemp+10
  5182  026A' 0EFD               	movlw	-3
  5183  026C' CFE3 F00B'         	movff	plusw1,btemp+11
  5184  0270' 0E0C               	movlw	12
  5185  0272'                    u19445:
  5186  0272' 90D8               	bcf	status,0,c
  5187  0274' 3608'              	rlcf	btemp+8,f,c
  5188  0276' 3609'              	rlcf	btemp+9,f,c
  5189  0278' 360A'              	rlcf	btemp+10,f,c
  5190  027A' 360B'              	rlcf	btemp+11,f,c
  5191  027C' 2EE8               	decfsz	wreg,f,c
  5192  027E' D7F9               	goto	u19445
  5193  0280' C008' F000'        	movff	btemp+8,___lldiv@dividend
  5194  0284' C009' F001'        	movff	btemp+9,___lldiv@dividend+1
  5195  0288' C00A' F002'        	movff	btemp+10,___lldiv@dividend+2
  5196  028C' C00B' F003'        	movff	btemp+11,___lldiv@dividend+3
  5197  0290' 0E7D               	movlw	125
  5198  0292' 0100               	movlb	0	; () banked
  5199  0294' 6F00'              	movwf	___lldiv@divisor& (0+255),b
  5200  0296' 0E00               	movlw	0
  5201  0298' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
  5202  029A' 0E00               	movlw	0
  5203  029C' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
  5204  029E' 0E00               	movlw	0
  5205  02A0' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
  5206  02A2' EC00' F000'        	call	___lldiv	;wreg free
  5207  02A6' C000' F008'        	movff	?___lldiv,btemp+8
  5208  02AA' C001' F009'        	movff	?___lldiv+1,btemp+9
  5209  02AE' C002' F00A'        	movff	?___lldiv+2,btemp+10
  5210  02B2' C003' F00B'        	movff	?___lldiv+3,btemp+11
  5211  02B6'                    L1:
  5212                           
  5213                           ;stkvar	_DutyCycleCallback$1856 @ sp[(-10)+0]
  5214  02B6' 0EF6               	movlw	-10
  5215  02B8' C008' FFE3         	movff	btemp+8,plusw1
  5216  02BC' 0EF7               	movlw	-9
  5217  02BE' C009' FFE3         	movff	btemp+9,plusw1
  5218  02C2' 0EF8               	movlw	-8
  5219  02C4' C00A' FFE3         	movff	btemp+10,plusw1
  5220  02C8' 0EF9               	movlw	-7
  5221  02CA' C00B' FFE3         	movff	btemp+11,plusw1
  5222                           
  5223                           ;stkvar	_DutyCycleCallback$1856 @ sp[(-10)+0]
  5224  02CE' 50E1               	movf	fsr1l,w,c
  5225  02D0' 0FF6               	addlw	-10
  5226  02D2' 6ED9               	movwf	fsr2l,c
  5227  02D4' 50E2               	movf	fsr1h,w,c
  5228  02D6' 6EDA               	movwf	fsr2h,c
  5229  02D8' 0EFF               	movlw	255
  5230  02DA' 22DA               	addwfc	fsr2h,f,c
  5231  02DC' CFDE F00D'         	movff	postinc2,SwTimerSetTimeout@timeout
  5232  02E0' CFDE F00E'         	movff	postinc2,SwTimerSetTimeout@timeout+1
  5233  02E4' CFDE F00F'         	movff	postinc2,SwTimerSetTimeout@timeout+2
  5234  02E8' CFDE F010'         	movff	postinc2,SwTimerSetTimeout@timeout+3
  5235  02EC' 0102               	movlb	2	; () banked
  5236  02EE' 5100'              	movf	(_loRa+233)& (0+255),w,b
  5237  02F0' EC00' F000'        	call	_SwTimerSetTimeout
  5238                           
  5239                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  5240  02F4' 0102               	movlb	2	; () banked
  5241  02F6' 5100'              	movf	(_loRa+233)& (0+255),w,b
  5242  02F8' EC00' F000'        	call	_SwTimerStart
  5243  02FC'                    l1310:
  5244                           
  5245                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5246  02FC' 0EF5               	movlw	245
  5247  02FE' 26E1               	addwf	fsr1l,f,c
  5248  0300' 0EFF               	movlw	255
  5249  0302' 22E2               	addwfc	fsr1h,f,c
  5250  0304' 0012               	return		;funcret
  5251  0306'                    __end_of_DutyCycleCallback:
  5252                           	opt stack 0
  5253                           tosu	equ	0xFFF
  5254                           tosh	equ	0xFFE
  5255                           tosl	equ	0xFFD
  5256                           pclath	equ	0xFFA
  5257                           tblptru	equ	0xFF8
  5258                           tblptrh	equ	0xFF7
  5259                           tblptrl	equ	0xFF6
  5260                           tablat	equ	0xFF5
  5261                           prodh	equ	0xFF4
  5262                           prodl	equ	0xFF3
  5263                           intcon	equ	0xFF2
  5264                           intcon2	equ	0xFF1
  5265                           intcon3	equ	0xFF0
  5266                           postinc0	equ	0xFEE
  5267                           wreg	equ	0xFE8
  5268                           postinc1	equ	0xFE6
  5269                           plusw1	equ	0xFE3
  5270                           fsr1h	equ	0xFE2
  5271                           fsr1l	equ	0xFE1
  5272                           indf2	equ	0xFDF
  5273                           postinc2	equ	0xFDE
  5274                           postdec2	equ	0xFDD
  5275                           fsr2h	equ	0xFDA
  5276                           fsr2l	equ	0xFD9
  5277                           status	equ	0xFD8
  5278                           
  5279 ;; *************** function _UpdateJoinSuccessState *****************
  5280 ;; Defined at:
  5281 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  param           1  [STACK] unsigned char 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;		None
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  1  [STACK] void 
  5288 ;; Registers used:
  5289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, pro
      +dh, cstack
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;Total ram usage:        0 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; Hardware stack levels required when called:   11
  5302 ;; This function calls:
  5303 ;;		_RxJoinResponse
  5304 ;;		_SwTimerSetTimeout
  5305 ;;		_SwTimerStart
  5306 ;;		___lldiv
  5307 ;; This function is called by:
  5308 ;;		_SetCallbackSoftwareTimers
  5309 ;;		_LORAWAN_RxDone
  5310 ;;		_SwTimersExecute
  5311 ;; This function uses a reentrant model
  5312 ;;
  5313                           
  5314                           	psect	text28
  5315  0000'                    __ptext28:
  5316                           	opt stack 0
  5317  0000'                    _UpdateJoinSuccessState:
  5318                           	opt stack 0
  5319                           
  5320                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5321  0000' 52E6               	movf	postinc1,f,c
  5322  0002' 52E6               	movf	postinc1,f,c
  5323  0004' 52E6               	movf	postinc1,f,c
  5324  0006' 52E6               	movf	postinc1,f,c
  5325                           
  5326                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  5327                           
  5328                           ;incstack = 0
  5329  0008' 0102               	movlb	2	; () banked
  5330  000A' 9500'              	bcf	_loRa& (0+255),2,b
  5331                           
  5332                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  5333  000C' 8900'              	bsf	(_loRa+2)& (0+255),4,b
  5334                           
  5335                           ; BSR set to: 2
  5336                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  5337  000E' 0EF0               	movlw	-16
  5338  0010' 1700'              	andwf	(_loRa+2)& (0+255),f,b
  5339                           
  5340                           ; BSR set to: 2
  5341                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  5342  0012' 6B00'              	clrf	(_loRa+208)& (0+255),b
  5343  0014' 6B00'              	clrf	(_loRa+209)& (0+255),b
  5344                           
  5345                           ; BSR set to: 2
  5346                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  5347  0016' 6B00'              	clrf	(_loRa+238)& (0+255),b
  5348                           
  5349                           ; BSR set to: 2
  5350                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  5351  0018' A500'              	btfss	(_loRa+3)& (0+255),2,b
  5352  001A' D07B               	goto	l14840
  5353                           
  5354                           ; BSR set to: 2
  5355                           ;lorawan.c: 1052: {
  5356                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  5357  001C' 5100'              	movf	(_loRa+207)& (0+255),w,b
  5358  001E' E107               	bnz	u17370
  5359  0020' 2900'              	incf	(_loRa+204)& (0+255),w,b
  5360  0022' 0EFF               	movlw	255
  5361  0024' 5900'              	subwfb	(_loRa+205)& (0+255),w,b
  5362  0026' 0E0F               	movlw	15
  5363  0028' 5900'              	subwfb	(_loRa+206)& (0+255),w,b
  5364  002A' A0D8               	btfss	status,0,c
  5365  002C' D024               	goto	l14834
  5366  002E'                    u17370:
  5367                           
  5368                           ; BSR set to: 2
  5369  002E' C0CC' F000'        	movff	_loRa+204,___lldiv@dividend
  5370  0032' C0CD' F001'        	movff	_loRa+205,___lldiv@dividend+1
  5371  0036' C0CE' F002'        	movff	_loRa+206,___lldiv@dividend+2
  5372  003A' C0CF' F003'        	movff	_loRa+207,___lldiv@dividend+3
  5373  003E' 0E7D               	movlw	125
  5374  0040' 0100               	movlb	0	; () banked
  5375  0042' 6F00'              	movwf	___lldiv@divisor& (0+255),b
  5376  0044' 0E00               	movlw	0
  5377  0046' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
  5378  0048' 0E00               	movlw	0
  5379  004A' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
  5380  004C' 0E00               	movlw	0
  5381  004E' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
  5382  0050' EC00' F000'        	call	___lldiv	;wreg free
  5383  0054' C000' F008'        	movff	?___lldiv,btemp+8
  5384  0058' C001' F009'        	movff	?___lldiv+1,btemp+9
  5385  005C' C002' F00A'        	movff	?___lldiv+2,btemp+10
  5386  0060' C003' F00B'        	movff	?___lldiv+3,btemp+11
  5387  0064' 0E0C               	movlw	12
  5388  0066'                    u17385:
  5389  0066' 90D8               	bcf	status,0,c
  5390  0068' 3608'              	rlcf	btemp+8,f,c
  5391  006A' 3609'              	rlcf	btemp+9,f,c
  5392  006C' 360A'              	rlcf	btemp+10,f,c
  5393  006E' 360B'              	rlcf	btemp+11,f,c
  5394  0070' 2EE8               	decfsz	wreg,f,c
  5395  0072' D7F9               	goto	u17385
  5396  0074' D02B               	goto	L2
  5397  0076'                    l14834:
  5398                           
  5399                           ; BSR set to: 2
  5400  0076' C0CC' F008'        	movff	_loRa+204,btemp+8
  5401  007A' C0CD' F009'        	movff	_loRa+205,btemp+9
  5402  007E' C0CE' F00A'        	movff	_loRa+206,btemp+10
  5403  0082' C0CF' F00B'        	movff	_loRa+207,btemp+11
  5404  0086' 0E0C               	movlw	12
  5405  0088'                    u17395:
  5406  0088' 90D8               	bcf	status,0,c
  5407  008A' 3608'              	rlcf	btemp+8,f,c
  5408  008C' 3609'              	rlcf	btemp+9,f,c
  5409  008E' 360A'              	rlcf	btemp+10,f,c
  5410  0090' 360B'              	rlcf	btemp+11,f,c
  5411  0092' 2EE8               	decfsz	wreg,f,c
  5412  0094' D7F9               	goto	u17395
  5413  0096' C008' F000'        	movff	btemp+8,___lldiv@dividend
  5414  009A' C009' F001'        	movff	btemp+9,___lldiv@dividend+1
  5415  009E' C00A' F002'        	movff	btemp+10,___lldiv@dividend+2
  5416  00A2' C00B' F003'        	movff	btemp+11,___lldiv@dividend+3
  5417  00A6' 0E7D               	movlw	125
  5418  00A8' 0100               	movlb	0	; () banked
  5419  00AA' 6F00'              	movwf	___lldiv@divisor& (0+255),b
  5420  00AC' 0E00               	movlw	0
  5421  00AE' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
  5422  00B0' 0E00               	movlw	0
  5423  00B2' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
  5424  00B4' 0E00               	movlw	0
  5425  00B6' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
  5426  00B8' EC00' F000'        	call	___lldiv	;wreg free
  5427  00BC' C000' F008'        	movff	?___lldiv,btemp+8
  5428  00C0' C001' F009'        	movff	?___lldiv+1,btemp+9
  5429  00C4' C002' F00A'        	movff	?___lldiv+2,btemp+10
  5430  00C8' C003' F00B'        	movff	?___lldiv+3,btemp+11
  5431  00CC'                    L2:
  5432                           
  5433                           ;stkvar	_UpdateJoinSuccessState$2527 @ sp[(-4)+0]
  5434  00CC' 0EFC               	movlw	-4
  5435  00CE' C008' FFE3         	movff	btemp+8,plusw1
  5436  00D2' 0EFD               	movlw	-3
  5437  00D4' C009' FFE3         	movff	btemp+9,plusw1
  5438  00D8' 0EFE               	movlw	-2
  5439  00DA' C00A' FFE3         	movff	btemp+10,plusw1
  5440  00DE' 0EFF               	movlw	-1
  5441  00E0' C00B' FFE3         	movff	btemp+11,plusw1
  5442                           
  5443                           ;stkvar	_UpdateJoinSuccessState$2527 @ sp[(-4)+0]
  5444  00E4' 50E1               	movf	fsr1l,w,c
  5445  00E6' 0FFC               	addlw	-4
  5446  00E8' 6ED9               	movwf	fsr2l,c
  5447  00EA' 50E2               	movf	fsr1h,w,c
  5448  00EC' 6EDA               	movwf	fsr2h,c
  5449  00EE' 0EFF               	movlw	255
  5450  00F0' 22DA               	addwfc	fsr2h,f,c
  5451  00F2' CFDE F00D'         	movff	postinc2,SwTimerSetTimeout@timeout
  5452  00F6' CFDE F00E'         	movff	postinc2,SwTimerSetTimeout@timeout+1
  5453  00FA' CFDE F00F'         	movff	postinc2,SwTimerSetTimeout@timeout+2
  5454  00FE' CFDE F010'         	movff	postinc2,SwTimerSetTimeout@timeout+3
  5455  0102' 0102               	movlb	2	; () banked
  5456  0104' 5100'              	movf	(_loRa+231)& (0+255),w,b
  5457  0106' EC00' F000'        	call	_SwTimerSetTimeout
  5458                           
  5459                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  5460  010A' 0102               	movlb	2	; () banked
  5461  010C' 5100'              	movf	(_loRa+231)& (0+255),w,b
  5462  010E' EC00' F000'        	call	_SwTimerStart
  5463  0112'                    l14840:
  5464                           
  5465                           ;lorawan.c: 1055: }
  5466                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  5467  0112' 0101               	movlb	1	; () banked
  5468  0114' 5100'              	movf	(_rxPayload+2)& (0+255),w,b
  5469  0116' 1100'              	iorwf	(_rxPayload+3)& (0+255),w,b
  5470  0118' B4D8               	btfsc	status,2,c
  5471  011A' D00C               	goto	u17419
  5472                           
  5473                           ; BSR set to: 1
  5474                           ;lorawan.c: 1058: {
  5475                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  5476  011C' D801               	call	u17418
  5477  011E' D00A               	goto	u17419
  5478  0120'                    u17418:
  5479  0120' 0005               	push	
  5480  0122' 6EFA               	movwf	pclath,c
  5481  0124' 5100'              	movf	(_rxPayload+2)& (0+255),w,b
  5482  0126' 6EFD               	movwf	tosl,c
  5483  0128' 5100'              	movf	(_rxPayload+3)& (0+255),w,b
  5484  012A' 6EFE               	movwf	tosh,c
  5485  012C' 6AFF               	clrf	tosu,c
  5486  012E' 50FA               	movf	pclath,w,c
  5487  0130' 0E01               	movlw	1
  5488  0132' 0012               	return		;indir
  5489  0134'                    u17419:
  5490                           
  5491                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  5492  0134' 0EFB               	movlw	251
  5493  0136' 26E1               	addwf	fsr1l,f,c
  5494  0138' 0EFF               	movlw	255
  5495  013A' 22E2               	addwfc	fsr1h,f,c
  5496  013C' 0012               	return		;funcret
  5497  013E'                    __end_of_UpdateJoinSuccessState:
  5498                           	opt stack 0
  5499                           tosu	equ	0xFFF
  5500                           tosh	equ	0xFFE
  5501                           tosl	equ	0xFFD
  5502                           pclath	equ	0xFFA
  5503                           tblptru	equ	0xFF8
  5504                           tblptrh	equ	0xFF7
  5505                           tblptrl	equ	0xFF6
  5506                           tablat	equ	0xFF5
  5507                           prodh	equ	0xFF4
  5508                           prodl	equ	0xFF3
  5509                           intcon	equ	0xFF2
  5510                           intcon2	equ	0xFF1
  5511                           intcon3	equ	0xFF0
  5512                           postinc0	equ	0xFEE
  5513                           wreg	equ	0xFE8
  5514                           postinc1	equ	0xFE6
  5515                           plusw1	equ	0xFE3
  5516                           fsr1h	equ	0xFE2
  5517                           fsr1l	equ	0xFE1
  5518                           indf2	equ	0xFDF
  5519                           postinc2	equ	0xFDE
  5520                           postdec2	equ	0xFDD
  5521                           fsr2h	equ	0xFDA
  5522                           fsr2l	equ	0xFD9
  5523                           status	equ	0xFD8
  5524                           
  5525 ;; *************** function _AutomaticReplyCallback *****************
  5526 ;; Defined at:
  5527 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  param           1  [STACK] unsigned char 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;		None
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1  [STACK] void 
  5534 ;; Registers used:
  5535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 3F/0
  5538 ;;		On exit  : 3F/2
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5545 ;;Total ram usage:        0 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:   14
  5548 ;; This function calls:
  5549 ;;		_LORAWAN_Send
  5550 ;; This function is called by:
  5551 ;;		_SetCallbackSoftwareTimers
  5552 ;;		_SwTimersExecute
  5553 ;; This function uses a reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text29
  5557  0000'                    __ptext29:
  5558                           	opt stack 0
  5559  0000'                    _AutomaticReplyCallback:
  5560                           	opt stack 14
  5561                           
  5562                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  5563                           
  5564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5565                           ;incstack = 0
  5566  0000' 0EF0               	movlw	-16
  5567  0002' 0102               	movlb	2	; () banked
  5568  0004' 1700'              	andwf	(_loRa+2)& (0+255),f,b
  5569                           
  5570                           ; BSR set to: 2
  5571                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  5572  0006' 0E00               	movlw	0
  5573  0008' 0100               	movlb	0	; () banked
  5574  000A' 6F00'              	movwf	LORAWAN_Send@port& (0+255),b
  5575  000C' 0E00               	movlw	0
  5576  000E' 6F00'              	movwf	LORAWAN_Send@buffer& (0+255),b
  5577  0010' 0E00               	movlw	0
  5578  0012' 6F00'              	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  5579  0014' 0E00               	movlw	0
  5580  0016' 6F00'              	movwf	LORAWAN_Send@bufferLength& (0+255),b
  5581  0018' 0E00               	movlw	0
  5582  001A' EC00' F000'        	call	_LORAWAN_Send
  5583                           
  5584                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  5585  001E' 0102               	movlb	2	; () banked
  5586  0020' 9700'              	bcf	_loRa& (0+255),3,b
  5587                           
  5588                           ; BSR set to: 2
  5589                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  5590  0022' 52E5               	movf	postdec1,f,c
  5591  0024' 0012               	return		;funcret
  5592  0026'                    __end_of_AutomaticReplyCallback:
  5593                           	opt stack 0
  5594                           tosu	equ	0xFFF
  5595                           tosh	equ	0xFFE
  5596                           tosl	equ	0xFFD
  5597                           pclath	equ	0xFFA
  5598                           tblptru	equ	0xFF8
  5599                           tblptrh	equ	0xFF7
  5600                           tblptrl	equ	0xFF6
  5601                           tablat	equ	0xFF5
  5602                           prodh	equ	0xFF4
  5603                           prodl	equ	0xFF3
  5604                           intcon	equ	0xFF2
  5605                           intcon2	equ	0xFF1
  5606                           intcon3	equ	0xFF0
  5607                           postinc0	equ	0xFEE
  5608                           wreg	equ	0xFE8
  5609                           postinc1	equ	0xFE6
  5610                           postdec1	equ	0xFE5
  5611                           plusw1	equ	0xFE3
  5612                           fsr1h	equ	0xFE2
  5613                           fsr1l	equ	0xFE1
  5614                           indf2	equ	0xFDF
  5615                           postinc2	equ	0xFDE
  5616                           postdec2	equ	0xFDD
  5617                           fsr2h	equ	0xFDA
  5618                           fsr2l	equ	0xFD9
  5619                           status	equ	0xFD8
  5620                           
  5621 ;; *************** function _AckRetransmissionCallback *****************
  5622 ;; Defined at:
  5623 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  param           1  [STACK] unsigned char 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  maximumPacke    1  [STACK] unsigned char 
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1  [STACK] void 
  5630 ;; Registers used:
  5631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 3F/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;Total ram usage:        0 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:   13
  5644 ;; This function calls:
  5645 ;;		_FindSmallestDataRate
  5646 ;;		_LORAWAN_GetMaxPayloadSize
  5647 ;;		_RADIO_Transmit
  5648 ;;		_ResetParametersForConfirmedTransmission
  5649 ;;		_RxData
  5650 ;;		_SelectChannelForTransmission
  5651 ;;		_UpdateRetransmissionAckTimeoutState
  5652 ;; This function is called by:
  5653 ;;		_SetCallbackSoftwareTimers
  5654 ;;		_SwTimersExecute
  5655 ;; This function uses a reentrant model
  5656 ;;
  5657                           
  5658                           	psect	text30
  5659  0000'                    __ptext30:
  5660                           	opt stack 0
  5661  0000'                    _AckRetransmissionCallback:
  5662                           	opt stack 0
  5663                           
  5664                           ; BSR set to: 2
  5665                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5666  0000' 52E6               	movf	postinc1,f,c
  5667                           
  5668                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  5669                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  5670                           
  5671                           ;incstack = 0
  5672  0002' 0102               	movlb	2	; () banked
  5673  0004' B100'              	btfsc	(_loRa+3)& (0+255),0,b
  5674  0006' D086               	goto	l16056
  5675                           
  5676                           ; BSR set to: 2
  5677                           ;lorawan.c: 939: {
  5678                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  5679  0008' 5100'              	movf	(_loRa+217)& (0+255),w,b
  5680  000A' 5D00'              	subwf	(_loRa+215)& (0+255),w,b
  5681  000C' A0D8               	btfss	status,0,c
  5682  000E' D061               	goto	l16046
  5683                           
  5684                           ; BSR set to: 2
  5685                           ;lorawan.c: 941: {
  5686                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  5687  0010' EC00' F000'        	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  5688  0014' 6E0B'              	movwf	btemp+11,c
  5689  0016' 0E0D               	movlw	13
  5690  0018' 260B'              	addwf	btemp+11,f,c
  5691                           
  5692                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  5693  001A' 0EFF               	movlw	-1
  5694  001C' C00B' FFE3         	movff	btemp+11,plusw1
  5695                           
  5696                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  5697                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  5698  0020' 0EFF               	movlw	-1
  5699  0022' 50E3               	movf	plusw1,w,c
  5700  0024' 6E01'              	movwf	btemp+1,c
  5701  0026' 6A02'              	clrf	btemp+2,c
  5702  0028' 0102               	movlb	2	; () banked
  5703  002A' 5100'              	movf	(_loRa+212)& (0+255),w,b
  5704  002C' 5C01'              	subwf	btemp+1,w,c
  5705  002E' 5100'              	movf	(_loRa+213)& (0+255),w,b
  5706  0030' 5802'              	subwfb	btemp+2,w,c
  5707  0032' A0D8               	btfss	status,0,c
  5708  0034' D039               	goto	l16040
  5709                           
  5710                           ; BSR set to: 2
  5711                           ;lorawan.c: 946: {
  5712                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  5713  0036' 0E01               	movlw	1
  5714  0038' EC00' F000'        	call	_SelectChannelForTransmission
  5715  003C' 0900               	iorlw	0
  5716  003E' A4D8               	btfss	status,2,c
  5717  0040' D030               	goto	l16036
  5718                           
  5719                           ;lorawan.c: 948: {
  5720                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  5721  0042' 0E00'              	movlw	low (_macBuffer+16)
  5722  0044' 0100               	movlb	0	; () banked
  5723  0046' 6F00'              	movwf	RADIO_Transmit@buffer& (0+255),b
  5724  0048' 0E00'              	movlw	high (_macBuffer+16)
  5725  004A' 6F00'              	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  5726  004C' C0D4' F053'        	movff	_loRa+212,RADIO_Transmit@bufferLen
  5727  0050' EC00' F000'        	call	_RADIO_Transmit	;wreg free
  5728  0054' C051' F001'        	movff	?_RADIO_Transmit,btemp+1
  5729  0058' C052' F002'        	movff	?_RADIO_Transmit+1,btemp+2
  5730  005C' 5001'              	movf	btemp+1,w,c
  5731  005E' 1002'              	iorwf	btemp+2,w,c
  5732  0060' A4D8               	btfss	status,2,c
  5733  0062' D01F               	goto	l16036
  5734                           
  5735                           ;lorawan.c: 951: {
  5736                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  5737  0064' 0102               	movlb	2	; () banked
  5738  0066' 5100'              	movf	(_loRa+2)& (0+255),w,b
  5739  0068' 0BF0               	andlw	-16
  5740  006A' 0901               	iorlw	1
  5741  006C' 6F00'              	movwf	(_loRa+2)& (0+255),b
  5742                           
  5743                           ; BSR set to: 2
  5744                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  5745  006E' 2B00'              	incf	(_loRa+217)& (0+255),f,b
  5746                           
  5747                           ; BSR set to: 2
  5748                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  5749  0070' B100'              	btfsc	(_loRa+217)& (0+255),0,b
  5750  0072' D052               	goto	l1851
  5751                           
  5752                           ; BSR set to: 2
  5753  0074' 5100'              	movf	(_loRa+223)& (0+255),w,b
  5754  0076' B4D8               	btfsc	status,2,c
  5755  0078' D04F               	goto	l1851
  5756                           
  5757                           ; BSR set to: 2
  5758  007A' 5100'              	movf	(_loRa+217)& (0+255),w,b
  5759  007C' 6E01'              	movwf	btemp+1,c
  5760  007E' 6A02'              	clrf	btemp+2,c
  5761  0080' 5100'              	movf	(_loRa+215)& (0+255),w,b
  5762  0082' 6E0A'              	movwf	btemp+10,c
  5763  0084' 6A0B'              	clrf	btemp+11,c
  5764  0086' 0E01               	movlw	1
  5765  0088' 260A'              	addwf	btemp+10,f,c
  5766  008A' 0E00               	movlw	0
  5767  008C' 220B'              	addwfc	btemp+11,f,c
  5768  008E' 5001'              	movf	btemp+1,w,c
  5769  0090' 180A'              	xorwf	btemp+10,w,c
  5770  0092' E104               	bnz	u19650
  5771  0094' 5002'              	movf	btemp+2,w,c
  5772  0096' 180B'              	xorwf	btemp+11,w,c
  5773  0098' B4D8               	btfsc	status,2,c
  5774  009A' D03E               	goto	l1851
  5775  009C'                    u19650:
  5776                           
  5777                           ; BSR set to: 2
  5778                           ;lorawan.c: 957: {
  5779                           ;lorawan.c: 958: FindSmallestDataRate();
  5780  009C' EC00' F000'        	call	_FindSmallestDataRate	;wreg free
  5781  00A0' D03B               	goto	l1851
  5782  00A2'                    l16036:
  5783                           
  5784                           ;lorawan.c: 961: else
  5785                           ;lorawan.c: 962: {
  5786                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  5787  00A2' EC00' F000'        	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  5788  00A6' D038               	goto	l1851
  5789  00A8'                    l16040:
  5790                           
  5791                           ; BSR set to: 2
  5792                           ;lorawan.c: 973: else
  5793                           ;lorawan.c: 974: {
  5794                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  5795  00A8' EC00' F000'        	call	_ResetParametersForConfirmedTransmission	;wreg free
  5796                           
  5797                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  5798  00AC' 0101               	movlb	1	; () banked
  5799  00AE' 5100'              	movf	_rxPayload& (0+255),w,b
  5800  00B0' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
  5801  00B2' B4D8               	btfsc	status,2,c
  5802  00B4' D031               	goto	l1851
  5803                           
  5804                           ; BSR set to: 1
  5805                           ;lorawan.c: 977: {
  5806                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  5807  00B6' 0E00               	movlw	0
  5808  00B8' 0100               	movlb	0	; () banked
  5809  00BA' 6F00'              	movwf	RxData@pData& (0+255),b
  5810  00BC' 0E00               	movlw	0
  5811  00BE' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
  5812  00C0' 0E00               	movlw	0
  5813  00C2' 6F00'              	movwf	RxData@dataLength& (0+255),b
  5814  00C4' 0E04               	movlw	4
  5815  00C6' 6F00'              	movwf	RxData@status& (0+255),b
  5816  00C8' D801               	call	u19678
  5817  00CA' D026               	goto	l1851
  5818  00CC'                    u19678:
  5819  00CC' 0005               	push	
  5820  00CE' 6EFA               	movwf	pclath,c
  5821  00D0' D019               	goto	L3
  5822  00D2'                    l16046:
  5823                           
  5824                           ; BSR set to: 2
  5825                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  5826  00D2' 5100'              	movf	(_loRa+217)& (0+255),w,b
  5827  00D4' 5D00'              	subwf	(_loRa+215)& (0+255),w,b
  5828  00D6' A0D8               	btfss	status,0,c
  5829                           
  5830                           ; BSR set to: 2
  5831  00D8' B100'              	btfsc	(_loRa+3)& (0+255),0,b
  5832  00DA' D01E               	goto	l1851
  5833                           
  5834                           ; BSR set to: 2
  5835                           ;lorawan.c: 983: {
  5836                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  5837  00DC' EC00' F000'        	call	_ResetParametersForConfirmedTransmission	;wreg free
  5838                           
  5839                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  5840  00E0' 0101               	movlb	1	; () banked
  5841  00E2' 5100'              	movf	_rxPayload& (0+255),w,b
  5842  00E4' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
  5843  00E6' B4D8               	btfsc	status,2,c
  5844  00E8' D017               	goto	l1851
  5845                           
  5846                           ; BSR set to: 1
  5847                           ;lorawan.c: 986: {
  5848                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  5849  00EA' 0E00               	movlw	0
  5850  00EC' 0100               	movlb	0	; () banked
  5851  00EE' 6F00'              	movwf	RxData@pData& (0+255),b
  5852  00F0' 0E00               	movlw	0
  5853  00F2' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
  5854  00F4' 0E00               	movlw	0
  5855  00F6' 6F00'              	movwf	RxData@dataLength& (0+255),b
  5856  00F8' 0E00               	movlw	0
  5857  00FA' 6F00'              	movwf	RxData@status& (0+255),b
  5858  00FC' D801               	call	u19718
  5859  00FE' D00C               	goto	l1851
  5860  0100'                    u19718:
  5861  0100' 0005               	push	
  5862  0102' 6EFA               	movwf	pclath,c
  5863  0104'                    L3:
  5864  0104' 0101               	movlb	1	; () banked
  5865  0106' 5100'              	movf	_rxPayload& (0+255),w,b
  5866  0108' 6EFD               	movwf	tosl,c
  5867  010A' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
  5868  010C' 6EFE               	movwf	tosh,c
  5869  010E' 6AFF               	clrf	tosu,c
  5870  0110' 50FA               	movf	pclath,w,c
  5871  0112' 0012               	return		;indir
  5872  0114'                    l16056:
  5873                           
  5874                           ; BSR set to: 2
  5875                           ;lorawan.c: 991: else
  5876                           ;lorawan.c: 992: {
  5877                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  5878  0114' EC00' F000'        	call	_ResetParametersForConfirmedTransmission	;wreg free
  5879  0118'                    l1851:
  5880                           
  5881                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  5882  0118' 52E5               	movf	postdec1,f,c
  5883  011A' 52E5               	movf	postdec1,f,c
  5884  011C' 0012               	return		;funcret
  5885  011E'                    __end_of_AckRetransmissionCallback:
  5886                           	opt stack 0
  5887                           tosu	equ	0xFFF
  5888                           tosh	equ	0xFFE
  5889                           tosl	equ	0xFFD
  5890                           pclath	equ	0xFFA
  5891                           tblptru	equ	0xFF8
  5892                           tblptrh	equ	0xFF7
  5893                           tblptrl	equ	0xFF6
  5894                           tablat	equ	0xFF5
  5895                           prodh	equ	0xFF4
  5896                           prodl	equ	0xFF3
  5897                           intcon	equ	0xFF2
  5898                           intcon2	equ	0xFF1
  5899                           intcon3	equ	0xFF0
  5900                           postinc0	equ	0xFEE
  5901                           wreg	equ	0xFE8
  5902                           postinc1	equ	0xFE6
  5903                           postdec1	equ	0xFE5
  5904                           plusw1	equ	0xFE3
  5905                           fsr1h	equ	0xFE2
  5906                           fsr1l	equ	0xFE1
  5907                           indf2	equ	0xFDF
  5908                           postinc2	equ	0xFDE
  5909                           postdec2	equ	0xFDD
  5910                           fsr2h	equ	0xFDA
  5911                           fsr2l	equ	0xFD9
  5912                           status	equ	0xFD8
  5913                           
  5914 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  5915 ;; Defined at:
  5916 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  param           1  [STACK] unsigned char 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  iCtr            1  [STACK] unsigned char 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  1  [STACK] void 
  5923 ;; Registers used:
  5924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, cst
      +ack
  5925 ;; Tracked objects:
  5926 ;;		On entry : 3F/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;Total ram usage:        0 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:   11
  5937 ;; This function calls:
  5938 ;;		_SwTimerSetTimeout
  5939 ;;		_SwTimerStart
  5940 ;;		___lldiv
  5941 ;; This function is called by:
  5942 ;;		_SetCallbackSoftwareTimers
  5943 ;;		_SwTimersExecute
  5944 ;; This function uses a reentrant model
  5945 ;;
  5946                           
  5947                           	psect	text31
  5948  0000'                    __ptext31:
  5949                           	opt stack 0
  5950  0000'                    _LORAWAN_LinkCheckCallback:
  5951                           	opt stack 0
  5952                           
  5953                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5954  0000' 0E05               	movlw	5
  5955  0002' 26E1               	addwf	fsr1l,f,c
  5956  0004' 0E00               	movlw	0
  5957  0006' 22E2               	addwfc	fsr1h,f,c
  5958                           
  5959                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  5960                           
  5961                           ;incstack = 0
  5962  0008' 0102               	movlb	2	; () banked
  5963  000A' A100'              	btfss	(_loRa+3)& (0+255),0,b
  5964                           
  5965                           ; BSR set to: 2
  5966  000C' A500'              	btfss	(_loRa+3)& (0+255),2,b
  5967  000E' D02C               	goto	l16000
  5968                           
  5969                           ; BSR set to: 2
  5970                           ;lorawan.c: 886: {
  5971                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  5972                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  5973  0010' 0EFF               	movlw	-1
  5974  0012' 6AE3               	clrf	plusw1,c
  5975  0014' D00F               	goto	l15990
  5976  0016'                    l15984:
  5977                           
  5978                           ; BSR set to: 2
  5979                           ;lorawan.c: 889: {
  5980                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  5981                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  5982  0016' 0EFF               	movlw	-1
  5983  0018' 50E3               	movf	plusw1,w,c
  5984  001A' 0D02               	mullw	2
  5985  001C' 0E00'              	movlw	low (_loRa+168)
  5986  001E' 24F3               	addwf	prodl,w,c
  5987  0020' 6ED9               	movwf	fsr2l,c
  5988  0022' 0E00'              	movlw	high (_loRa+168)
  5989  0024' 20F4               	addwfc	prodh,w,c
  5990  0026' 6EDA               	movwf	fsr2h,c
  5991  0028' 0E02               	movlw	2
  5992  002A' 18DE               	xorwf	postinc2,w,c
  5993  002C' B4D8               	btfsc	status,2,c
  5994  002E' D009               	goto	u19510
  5995                           
  5996                           ; BSR set to: 2
  5997                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  5998  0030' 0EFF               	movlw	-1
  5999  0032' 2AE3               	incf	plusw1,f,c
  6000  0034'                    l15990:
  6001                           
  6002                           ; BSR set to: 2
  6003                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6004  0034' 0EFF               	movlw	-1
  6005  0036' CFE3 F000'         	movff	plusw1,btemp
  6006  003A' 5100'              	movf	(_loRa+167)& (0+255),w,b
  6007  003C' 5C00'              	subwf	btemp,w,c
  6008  003E' A0D8               	btfss	status,0,c
  6009  0040' D7EA               	goto	l15984
  6010  0042'                    u19510:
  6011                           
  6012                           ; BSR set to: 2
  6013                           ;lorawan.c: 893: }
  6014                           ;lorawan.c: 894: }
  6015                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  6016                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6017  0042' 0EFF               	movlw	-1
  6018  0044' 50E3               	movf	plusw1,w,c
  6019  0046' 1900'              	xorwf	(_loRa+167)& (0+255),w,b
  6020  0048' A4D8               	btfss	status,2,c
  6021  004A' D00E               	goto	l16000
  6022                           
  6023                           ; BSR set to: 2
  6024                           ;lorawan.c: 897: {
  6025                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  6026  004C' 5100'              	movf	(_loRa+167)& (0+255),w,b
  6027  004E' 0D02               	mullw	2
  6028  0050' 0E00'              	movlw	low (_loRa+168)
  6029  0052' 24F3               	addwf	prodl,w,c
  6030  0054' 6ED9               	movwf	fsr2l,c
  6031  0056' 0E00'              	movlw	high (_loRa+168)
  6032  0058' 20F4               	addwfc	prodh,w,c
  6033  005A' 6EDA               	movwf	fsr2h,c
  6034  005C' 0E02               	movlw	2
  6035  005E' 6EDF               	movwf	indf2,c
  6036                           
  6037                           ; BSR set to: 2
  6038                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  6039  0060' 0E10               	movlw	16
  6040  0062' 6100'              	cpfslt	(_loRa+167)& (0+255),b
  6041  0064' D001               	goto	l16000
  6042                           
  6043                           ; BSR set to: 2
  6044                           ;lorawan.c: 901: {
  6045                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  6046  0066' 2B00'              	incf	(_loRa+167)& (0+255),f,b
  6047  0068'                    l16000:
  6048                           
  6049                           ; BSR set to: 2
  6050                           ;lorawan.c: 903: }
  6051                           ;lorawan.c: 904: }
  6052                           ;lorawan.c: 905: }
  6053                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  6054  0068' A500'              	btfss	(_loRa+3)& (0+255),2,b
  6055  006A' D07B               	goto	l1829
  6056                           
  6057                           ; BSR set to: 2
  6058                           ;lorawan.c: 909: {
  6059                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6060  006C' 5100'              	movf	(_loRa+207)& (0+255),w,b
  6061  006E' E107               	bnz	u19550
  6062  0070' 2900'              	incf	(_loRa+204)& (0+255),w,b
  6063  0072' 0EFF               	movlw	255
  6064  0074' 5900'              	subwfb	(_loRa+205)& (0+255),w,b
  6065  0076' 0E0F               	movlw	15
  6066  0078' 5900'              	subwfb	(_loRa+206)& (0+255),w,b
  6067  007A' A0D8               	btfss	status,0,c
  6068  007C' D024               	goto	l16006
  6069  007E'                    u19550:
  6070                           
  6071                           ; BSR set to: 2
  6072  007E' C0CC' F000'        	movff	_loRa+204,___lldiv@dividend
  6073  0082' C0CD' F001'        	movff	_loRa+205,___lldiv@dividend+1
  6074  0086' C0CE' F002'        	movff	_loRa+206,___lldiv@dividend+2
  6075  008A' C0CF' F003'        	movff	_loRa+207,___lldiv@dividend+3
  6076  008E' 0E7D               	movlw	125
  6077  0090' 0100               	movlb	0	; () banked
  6078  0092' 6F00'              	movwf	___lldiv@divisor& (0+255),b
  6079  0094' 0E00               	movlw	0
  6080  0096' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
  6081  0098' 0E00               	movlw	0
  6082  009A' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
  6083  009C' 0E00               	movlw	0
  6084  009E' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
  6085  00A0' EC00' F000'        	call	___lldiv	;wreg free
  6086  00A4' C000' F008'        	movff	?___lldiv,btemp+8
  6087  00A8' C001' F009'        	movff	?___lldiv+1,btemp+9
  6088  00AC' C002' F00A'        	movff	?___lldiv+2,btemp+10
  6089  00B0' C003' F00B'        	movff	?___lldiv+3,btemp+11
  6090  00B4' 0E0C               	movlw	12
  6091  00B6'                    u19565:
  6092  00B6' 90D8               	bcf	status,0,c
  6093  00B8' 3608'              	rlcf	btemp+8,f,c
  6094  00BA' 3609'              	rlcf	btemp+9,f,c
  6095  00BC' 360A'              	rlcf	btemp+10,f,c
  6096  00BE' 360B'              	rlcf	btemp+11,f,c
  6097  00C0' 2EE8               	decfsz	wreg,f,c
  6098  00C2' D7F9               	goto	u19565
  6099  00C4' D02B               	goto	L4
  6100  00C6'                    l16006:
  6101                           
  6102                           ; BSR set to: 2
  6103  00C6' C0CC' F008'        	movff	_loRa+204,btemp+8
  6104  00CA' C0CD' F009'        	movff	_loRa+205,btemp+9
  6105  00CE' C0CE' F00A'        	movff	_loRa+206,btemp+10
  6106  00D2' C0CF' F00B'        	movff	_loRa+207,btemp+11
  6107  00D6' 0E0C               	movlw	12
  6108  00D8'                    u19575:
  6109  00D8' 90D8               	bcf	status,0,c
  6110  00DA' 3608'              	rlcf	btemp+8,f,c
  6111  00DC' 3609'              	rlcf	btemp+9,f,c
  6112  00DE' 360A'              	rlcf	btemp+10,f,c
  6113  00E0' 360B'              	rlcf	btemp+11,f,c
  6114  00E2' 2EE8               	decfsz	wreg,f,c
  6115  00E4' D7F9               	goto	u19575
  6116  00E6' C008' F000'        	movff	btemp+8,___lldiv@dividend
  6117  00EA' C009' F001'        	movff	btemp+9,___lldiv@dividend+1
  6118  00EE' C00A' F002'        	movff	btemp+10,___lldiv@dividend+2
  6119  00F2' C00B' F003'        	movff	btemp+11,___lldiv@dividend+3
  6120  00F6' 0E7D               	movlw	125
  6121  00F8' 0100               	movlb	0	; () banked
  6122  00FA' 6F00'              	movwf	___lldiv@divisor& (0+255),b
  6123  00FC' 0E00               	movlw	0
  6124  00FE' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
  6125  0100' 0E00               	movlw	0
  6126  0102' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
  6127  0104' 0E00               	movlw	0
  6128  0106' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
  6129  0108' EC00' F000'        	call	___lldiv	;wreg free
  6130  010C' C000' F008'        	movff	?___lldiv,btemp+8
  6131  0110' C001' F009'        	movff	?___lldiv+1,btemp+9
  6132  0114' C002' F00A'        	movff	?___lldiv+2,btemp+10
  6133  0118' C003' F00B'        	movff	?___lldiv+3,btemp+11
  6134  011C'                    L4:
  6135                           
  6136                           ;stkvar	_LORAWAN_LinkCheckCallback$2510 @ sp[(-5)+0]
  6137  011C' 0EFB               	movlw	-5
  6138  011E' C008' FFE3         	movff	btemp+8,plusw1
  6139  0122' 0EFC               	movlw	-4
  6140  0124' C009' FFE3         	movff	btemp+9,plusw1
  6141  0128' 0EFD               	movlw	-3
  6142  012A' C00A' FFE3         	movff	btemp+10,plusw1
  6143  012E' 0EFE               	movlw	-2
  6144  0130' C00B' FFE3         	movff	btemp+11,plusw1
  6145                           
  6146                           ;stkvar	_LORAWAN_LinkCheckCallback$2510 @ sp[(-5)+0]
  6147  0134' 50E1               	movf	fsr1l,w,c
  6148  0136' 0FFB               	addlw	-5
  6149  0138' 6ED9               	movwf	fsr2l,c
  6150  013A' 50E2               	movf	fsr1h,w,c
  6151  013C' 6EDA               	movwf	fsr2h,c
  6152  013E' 0EFF               	movlw	255
  6153  0140' 22DA               	addwfc	fsr2h,f,c
  6154  0142' CFDE F00D'         	movff	postinc2,SwTimerSetTimeout@timeout
  6155  0146' CFDE F00E'         	movff	postinc2,SwTimerSetTimeout@timeout+1
  6156  014A' CFDE F00F'         	movff	postinc2,SwTimerSetTimeout@timeout+2
  6157  014E' CFDE F010'         	movff	postinc2,SwTimerSetTimeout@timeout+3
  6158  0152' 0102               	movlb	2	; () banked
  6159  0154' 5100'              	movf	(_loRa+231)& (0+255),w,b
  6160  0156' EC00' F000'        	call	_SwTimerSetTimeout
  6161                           
  6162                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  6163  015A' 0102               	movlb	2	; () banked
  6164  015C' 5100'              	movf	(_loRa+231)& (0+255),w,b
  6165  015E' EC00' F000'        	call	_SwTimerStart
  6166  0162'                    l1829:
  6167                           
  6168                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  6169  0162' 0EFA               	movlw	250
  6170  0164' 26E1               	addwf	fsr1l,f,c
  6171  0166' 0EFF               	movlw	255
  6172  0168' 22E2               	addwfc	fsr1h,f,c
  6173  016A' 0012               	return		;funcret
  6174  016C'                    __end_of_LORAWAN_LinkCheckCallback:
  6175                           	opt stack 0
  6176                           tosu	equ	0xFFF
  6177                           tosh	equ	0xFFE
  6178                           tosl	equ	0xFFD
  6179                           pclath	equ	0xFFA
  6180                           tblptru	equ	0xFF8
  6181                           tblptrh	equ	0xFF7
  6182                           tblptrl	equ	0xFF6
  6183                           tablat	equ	0xFF5
  6184                           prodh	equ	0xFF4
  6185                           prodl	equ	0xFF3
  6186                           intcon	equ	0xFF2
  6187                           intcon2	equ	0xFF1
  6188                           intcon3	equ	0xFF0
  6189                           postinc0	equ	0xFEE
  6190                           wreg	equ	0xFE8
  6191                           postinc1	equ	0xFE6
  6192                           postdec1	equ	0xFE5
  6193                           plusw1	equ	0xFE3
  6194                           fsr1h	equ	0xFE2
  6195                           fsr1l	equ	0xFE1
  6196                           indf2	equ	0xFDF
  6197                           postinc2	equ	0xFDE
  6198                           postdec2	equ	0xFDD
  6199                           fsr2h	equ	0xFDA
  6200                           fsr2l	equ	0xFD9
  6201                           status	equ	0xFD8
  6202                           
  6203 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  6204 ;; Defined at:
  6205 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;  param           1  [STACK] unsigned char 
  6208 ;; Auto vars:     Size  Location     Type
  6209 ;;  freq            4  [STACK] unsigned long 
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  1  [STACK] void 
  6212 ;; Registers used:
  6213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  6214 ;; Tracked objects:
  6215 ;;		On entry : 3F/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;Total ram usage:        0 bytes
  6224 ;; Hardware stack levels used:    1
  6225 ;; Hardware stack levels required when called:   13
  6226 ;; This function calls:
  6227 ;;		_ConfigureRadioRx
  6228 ;;		_GetRx1Freq
  6229 ;;		_RADIO_ReceiveStart
  6230 ;;		_RADIO_ReceiveStop
  6231 ;;		_RADIO_ReleaseData
  6232 ;; This function is called by:
  6233 ;;		_SetCallbackSoftwareTimers
  6234 ;;		_SwTimersExecute
  6235 ;; This function uses a reentrant model
  6236 ;;
  6237                           
  6238                           	psect	text32
  6239  0000'                    __ptext32:
  6240                           	opt stack 0
  6241  0000'                    _LORAWAN_ReceiveWindow1Callback:
  6242                           	opt stack 0
  6243                           
  6244                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6245  0000' 52E6               	movf	postinc1,f,c
  6246  0002' 52E6               	movf	postinc1,f,c
  6247  0004' 52E6               	movf	postinc1,f,c
  6248  0006' 52E6               	movf	postinc1,f,c
  6249                           
  6250                           ;lorawan.c: 798: uint32_t freq;
  6251                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  6252                           
  6253                           ;incstack = 0
  6254  0008' 0102               	movlb	2	; () banked
  6255  000A' B100'              	btfsc	(_loRa+3)& (0+255),0,b
  6256  000C' D050               	goto	l1802
  6257                           
  6258                           ; BSR set to: 2
  6259                           ;lorawan.c: 801: {
  6260                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  6261  000E' 0E02               	movlw	2
  6262  0010' 1900'              	xorwf	(_loRa+18)& (0+255),w,b
  6263  0012' B4D8               	btfsc	status,2,c
  6264                           
  6265                           ; BSR set to: 2
  6266                           ;lorawan.c: 803: {
  6267                           ;lorawan.c: 804: RADIO_ReceiveStop();
  6268  0014' EC00' F000'        	call	_RADIO_ReceiveStop	;wreg free
  6269                           
  6270                           ;lorawan.c: 805: }
  6271                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  6272  0018' 0102               	movlb	2	; () banked
  6273  001A' 5100'              	movf	(_loRa+239)& (0+255),w,b
  6274  001C' 5D00'              	subwf	(_loRa+23)& (0+255),w,b
  6275  001E' A0D8               	btfss	status,0,c
  6276  0020' D004               	goto	l1800
  6277                           
  6278                           ; BSR set to: 2
  6279                           ;lorawan.c: 807: {
  6280                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  6281  0022' 5100'              	movf	(_loRa+239)& (0+255),w,b
  6282  0024' 5D00'              	subwf	(_loRa+23)& (0+255),w,b
  6283  0026' 6F00'              	movwf	(_loRa+23)& (0+255),b
  6284                           
  6285                           ;lorawan.c: 809: }
  6286  0028' D001               	goto	l15966
  6287  002A'                    l1800:
  6288                           
  6289                           ; BSR set to: 2
  6290                           ;lorawan.c: 810: else
  6291                           ;lorawan.c: 811: {
  6292                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  6293  002A' 6B00'              	clrf	(_loRa+23)& (0+255),b
  6294  002C'                    l15966:
  6295                           
  6296                           ; BSR set to: 2
  6297                           ;lorawan.c: 813: }
  6298                           ;lorawan.c: 815: freq = GetRx1Freq();
  6299  002C' EC00' F000'        	call	_GetRx1Freq	;wreg free
  6300  0030' C000' F008'        	movff	?_GetRx1Freq,btemp+8
  6301  0034' C001' F009'        	movff	?_GetRx1Freq+1,btemp+9
  6302  0038' C002' F00A'        	movff	?_GetRx1Freq+2,btemp+10
  6303  003C' C003' F00B'        	movff	?_GetRx1Freq+3,btemp+11
  6304                           
  6305                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  6306  0040' 0EFC               	movlw	-4
  6307  0042' C008' FFE3         	movff	btemp+8,plusw1
  6308  0046' 0EFD               	movlw	-3
  6309  0048' C009' FFE3         	movff	btemp+9,plusw1
  6310  004C' 0EFE               	movlw	-2
  6311  004E' C00A' FFE3         	movff	btemp+10,plusw1
  6312  0052' 0EFF               	movlw	-1
  6313  0054' C00B' FFE3         	movff	btemp+11,plusw1
  6314                           
  6315                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  6316  0058' 0102               	movlb	2	; () banked
  6317  005A' 5100'              	movf	(_loRa+2)& (0+255),w,b
  6318  005C' 0BF0               	andlw	-16
  6319  005E' 0903               	iorlw	3
  6320  0060' 6F00'              	movwf	(_loRa+2)& (0+255),b
  6321                           
  6322                           ; BSR set to: 2
  6323                           ;lorawan.c: 819: RADIO_ReleaseData();
  6324  0062' EC00' F000'        	call	_RADIO_ReleaseData	;wreg free
  6325                           
  6326                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  6327                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  6328  0066' 50E1               	movf	fsr1l,w,c
  6329  0068' 0FFC               	addlw	-4
  6330  006A' 6ED9               	movwf	fsr2l,c
  6331  006C' 50E2               	movf	fsr1h,w,c
  6332  006E' 6EDA               	movwf	fsr2h,c
  6333  0070' 0EFF               	movlw	255
  6334  0072' 22DA               	addwfc	fsr2h,f,c
  6335  0074' CFDE F013'         	movff	postinc2,ConfigureRadioRx@freq
  6336  0078' CFDE F014'         	movff	postinc2,ConfigureRadioRx@freq+1
  6337  007C' CFDE F015'         	movff	postinc2,ConfigureRadioRx@freq+2
  6338  0080' CFDE F016'         	movff	postinc2,ConfigureRadioRx@freq+3
  6339  0084' 0102               	movlb	2	; () banked
  6340  0086' 5100'              	movf	(_loRa+23)& (0+255),w,b
  6341  0088' EC00' F000'        	call	_ConfigureRadioRx
  6342                           
  6343                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  6344  008C' 0E00'              	movlw	low _rxWindowSize
  6345  008E' 0102               	movlb	2	; () banked
  6346  0090' 2500'              	addwf	(_loRa+23)& (0+255),w,b
  6347  0092' 6EF6               	movwf	tblptrl,c
  6348  0094' 6AF7               	clrf	tblptrh,c
  6349  0096' 0E00'              	movlw	high _rxWindowSize
  6350  0098' 22F7               	addwfc	tblptrh,f,c
  6351  009A'                    	if	1	;There are 3 active tblptr bytes
  6352  009A' 6AF8               	clrf	tblptru,c
  6353  009C' 0E00'              	movlw	low (__mediumconst shr (0+16))
  6354  009E' 22F8               	addwfc	tblptru,f,c
  6355  00A0'                    	endif
  6356  00A0' 0008               	tblrd		*
  6357  00A2' 50F5               	movf	tablat,w,c
  6358  00A4' 0100               	movlb	0	; () banked
  6359  00A6' 6F00'              	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  6360  00A8' 6B00'              	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  6361  00AA' EC00' F000'        	call	_RADIO_ReceiveStart	;wreg free
  6362  00AE'                    l1802:
  6363                           
  6364                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  6365  00AE' 0EFB               	movlw	251
  6366  00B0' 26E1               	addwf	fsr1l,f,c
  6367  00B2' 0EFF               	movlw	255
  6368  00B4' 22E2               	addwfc	fsr1h,f,c
  6369  00B6' 0012               	return		;funcret
  6370  00B8'                    __end_of_LORAWAN_ReceiveWindow1Callback:
  6371                           	opt stack 0
  6372                           tosu	equ	0xFFF
  6373                           tosh	equ	0xFFE
  6374                           tosl	equ	0xFFD
  6375                           pclath	equ	0xFFA
  6376                           tblptru	equ	0xFF8
  6377                           tblptrh	equ	0xFF7
  6378                           tblptrl	equ	0xFF6
  6379                           tablat	equ	0xFF5
  6380                           prodh	equ	0xFF4
  6381                           prodl	equ	0xFF3
  6382                           intcon	equ	0xFF2
  6383                           intcon2	equ	0xFF1
  6384                           intcon3	equ	0xFF0
  6385                           postinc0	equ	0xFEE
  6386                           wreg	equ	0xFE8
  6387                           postinc1	equ	0xFE6
  6388                           postdec1	equ	0xFE5
  6389                           plusw1	equ	0xFE3
  6390                           fsr1h	equ	0xFE2
  6391                           fsr1l	equ	0xFE1
  6392                           indf2	equ	0xFDF
  6393                           postinc2	equ	0xFDE
  6394                           postdec2	equ	0xFDD
  6395                           fsr2h	equ	0xFDA
  6396                           fsr2l	equ	0xFD9
  6397                           status	equ	0xFD8
  6398                           
  6399 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  6400 ;; Defined at:
  6401 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  param           1  [STACK] unsigned char 
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;		None
  6406 ;; Return value:  Size  Location     Type
  6407 ;;                  1  [STACK] void 
  6408 ;; Registers used:
  6409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  6410 ;; Tracked objects:
  6411 ;;		On entry : 3D/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;Total ram usage:        0 bytes
  6420 ;; Hardware stack levels used:    1
  6421 ;; Hardware stack levels required when called:   14
  6422 ;; This function calls:
  6423 ;;		_ConfigureRadioRx
  6424 ;;		_LORAWAN_EnterContinuousReceive
  6425 ;;		_RADIO_GetStatus
  6426 ;;		_RADIO_ReceiveStart
  6427 ;;		_RADIO_ReceiveStop
  6428 ;;		_RADIO_ReleaseData
  6429 ;;		_ResetParametersForConfirmedTransmission
  6430 ;;		_ResetParametersForUnconfirmedTransmission
  6431 ;;		_RxData
  6432 ;; This function is called by:
  6433 ;;		_LORAWAN_RxTimeout
  6434 ;;		_SetCallbackSoftwareTimers
  6435 ;;		_SwTimersExecute
  6436 ;; This function uses a reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text33
  6440  0000'                    __ptext33:
  6441                           	opt stack 0
  6442  0000'                    _LORAWAN_ReceiveWindow2Callback:
  6443                           	opt stack 12
  6444                           
  6445                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  6446                           
  6447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6448                           ;incstack = 0
  6449  0000' 0102               	movlb	2	; () banked
  6450  0002' B100'              	btfsc	(_loRa+3)& (0+255),0,b
  6451  0004' D05F               	goto	l1805
  6452                           
  6453                           ; BSR set to: 2
  6454                           ;lorawan.c: 831: {
  6455                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  6456  0006' EC00' F000'        	call	_RADIO_GetStatus	;wreg free
  6457  000A' 6E0B'              	movwf	btemp+11,c
  6458  000C' B20B'              	btfsc	btemp+11,1,c
  6459  000E' D056               	goto	l14690
  6460                           
  6461                           ;lorawan.c: 833: {
  6462                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  6463  0010' 0102               	movlb	2	; () banked
  6464  0012' 5100'              	movf	(_loRa+2)& (0+255),w,b
  6465  0014' 0BF0               	andlw	-16
  6466  0016' 0905               	iorlw	5
  6467  0018' 6F00'              	movwf	(_loRa+2)& (0+255),b
  6468                           
  6469                           ; BSR set to: 2
  6470                           ;lorawan.c: 836: RADIO_ReceiveStop();
  6471  001A' EC00' F000'        	call	_RADIO_ReceiveStop	;wreg free
  6472                           
  6473                           ;lorawan.c: 837: RADIO_ReleaseData();
  6474  001E' EC00' F000'        	call	_RADIO_ReleaseData	;wreg free
  6475                           
  6476                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  6477  0022' C018' F013'        	movff	_loRa+24,ConfigureRadioRx@freq
  6478  0026' C019' F014'        	movff	_loRa+25,ConfigureRadioRx@freq+1
  6479  002A' C01A' F015'        	movff	_loRa+26,ConfigureRadioRx@freq+2
  6480  002E' C01B' F016'        	movff	_loRa+27,ConfigureRadioRx@freq+3
  6481  0032' 0102               	movlb	2	; () banked
  6482  0034' 5100'              	movf	(_loRa+28)& (0+255),w,b
  6483  0036' EC00' F000'        	call	_ConfigureRadioRx
  6484                           
  6485                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  6486  003A' 0102               	movlb	2	; () banked
  6487  003C' 5100'              	movf	(_loRa+18)& (0+255),w,b
  6488  003E' A4D8               	btfss	status,2,c
  6489  0040' D036               	goto	l14686
  6490                           
  6491                           ; BSR set to: 2
  6492                           ;lorawan.c: 842: {
  6493                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  6494  0042' 0E00'              	movlw	low _rxWindowSize
  6495  0044' 2500'              	addwf	(_loRa+28)& (0+255),w,b
  6496  0046' 6EF6               	movwf	tblptrl,c
  6497  0048' 6AF7               	clrf	tblptrh,c
  6498  004A' 0E00'              	movlw	high _rxWindowSize
  6499  004C' 22F7               	addwfc	tblptrh,f,c
  6500  004E'                    	if	1	;There are 3 active tblptr bytes
  6501  004E' 6AF8               	clrf	tblptru,c
  6502  0050' 0E00'              	movlw	low (__mediumconst shr (0+16))
  6503  0052' 22F8               	addwfc	tblptru,f,c
  6504  0054'                    	endif
  6505  0054' 0008               	tblrd		*
  6506  0056' 50F5               	movf	tablat,w,c
  6507  0058' 0100               	movlb	0	; () banked
  6508  005A' 6F00'              	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  6509  005C' 6B00'              	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  6510  005E' EC00' F000'        	call	_RADIO_ReceiveStart	;wreg free
  6511  0062' C051' F001'        	movff	?_RADIO_ReceiveStart,btemp+1
  6512  0066' C052' F002'        	movff	?_RADIO_ReceiveStart+1,btemp+2
  6513  006A' 5001'              	movf	btemp+1,w,c
  6514  006C' 1002'              	iorwf	btemp+2,w,c
  6515  006E' B4D8               	btfsc	status,2,c
  6516  0070' D031               	goto	l1814
  6517                           
  6518                           ;lorawan.c: 844: {
  6519                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  6520  0072' EC00' F000'        	call	_ResetParametersForConfirmedTransmission	;wreg free
  6521                           
  6522                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  6523  0076' EC00' F000'        	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  6524                           
  6525                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  6526  007A' 0101               	movlb	1	; () banked
  6527  007C' 5100'              	movf	_rxPayload& (0+255),w,b
  6528  007E' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
  6529  0080' B4D8               	btfsc	status,2,c
  6530  0082' D028               	goto	l1814
  6531                           
  6532                           ; BSR set to: 1
  6533                           ;lorawan.c: 848: {
  6534                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  6535  0084' 0E00               	movlw	0
  6536  0086' 0100               	movlb	0	; () banked
  6537  0088' 6F00'              	movwf	RxData@pData& (0+255),b
  6538  008A' 0E00               	movlw	0
  6539  008C' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
  6540  008E' 0E00               	movlw	0
  6541  0090' 6F00'              	movwf	RxData@dataLength& (0+255),b
  6542  0092' 0E00               	movlw	0
  6543  0094' 6F00'              	movwf	RxData@status& (0+255),b
  6544  0096' D801               	call	u17048
  6545  0098' D01D               	goto	l1814
  6546  009A'                    u17048:
  6547  009A' 0005               	push	
  6548  009C' 6EFA               	movwf	pclath,c
  6549  009E' 0101               	movlb	1	; () banked
  6550  00A0' 5100'              	movf	_rxPayload& (0+255),w,b
  6551  00A2' 6EFD               	movwf	tosl,c
  6552  00A4' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
  6553  00A6' 6EFE               	movwf	tosh,c
  6554  00A8' 6AFF               	clrf	tosu,c
  6555  00AA' 50FA               	movf	pclath,w,c
  6556  00AC' 0012               	return		;indir
  6557  00AE'                    l14686:
  6558                           
  6559                           ; BSR set to: 2
  6560                           ;lorawan.c: 853: else
  6561                           ;lorawan.c: 854: {
  6562                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  6563  00AE' 5100'              	movf	(_loRa+2)& (0+255),w,b
  6564  00B0' 0BF0               	andlw	-16
  6565  00B2' 0909               	iorlw	9
  6566  00B4' 6F00'              	movwf	(_loRa+2)& (0+255),b
  6567                           
  6568                           ; BSR set to: 2
  6569                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  6570  00B6' EC00' F000'        	call	_LORAWAN_EnterContinuousReceive	;wreg free
  6571  00BA' D00C               	goto	l1814
  6572  00BC'                    l14690:
  6573                           
  6574                           ;lorawan.c: 859: else
  6575                           ;lorawan.c: 860: {
  6576                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  6577  00BC' 0E01               	movlw	1
  6578  00BE' 0102               	movlb	2	; () banked
  6579  00C0' 6F00'              	movwf	(_loRa+241)& (0+255),b
  6580                           
  6581                           ; BSR set to: 1
  6582                           ;lorawan.c: 864: }
  6583                           ;lorawan.c: 865: }
  6584  00C2' D008               	goto	l1814
  6585  00C4'                    l1805:
  6586                           
  6587                           ; BSR set to: 2
  6588                           ;lorawan.c: 866: else
  6589                           ;lorawan.c: 867: {
  6590                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  6591  00C4' A500'              	btfss	_loRa& (0+255),2,b
  6592  00C6' D002               	goto	l14694
  6593                           
  6594                           ; BSR set to: 2
  6595                           ;lorawan.c: 871: {
  6596                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  6597  00C8' 9500'              	bcf	_loRa& (0+255),2,b
  6598                           
  6599                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  6600  00CA' 9900'              	bcf	(_loRa+2)& (0+255),4,b
  6601  00CC'                    l14694:
  6602                           
  6603                           ; BSR set to: 2
  6604                           ;lorawan.c: 874: }
  6605                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  6606  00CC' EC00' F000'        	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  6607                           
  6608                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  6609  00D0' EC00' F000'        	call	_ResetParametersForConfirmedTransmission	;wreg free
  6610  00D4'                    l1814:
  6611                           
  6612                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  6613  00D4' 52E5               	movf	postdec1,f,c
  6614  00D6' 0012               	return		;funcret
  6615  00D8'                    __end_of_LORAWAN_ReceiveWindow2Callback:
  6616                           	opt stack 0
  6617                           tosu	equ	0xFFF
  6618                           tosh	equ	0xFFE
  6619                           tosl	equ	0xFFD
  6620                           pclath	equ	0xFFA
  6621                           tblptru	equ	0xFF8
  6622                           tblptrh	equ	0xFF7
  6623                           tblptrl	equ	0xFF6
  6624                           tablat	equ	0xFF5
  6625                           prodh	equ	0xFF4
  6626                           prodl	equ	0xFF3
  6627                           intcon	equ	0xFF2
  6628                           intcon2	equ	0xFF1
  6629                           intcon3	equ	0xFF0
  6630                           postinc0	equ	0xFEE
  6631                           wreg	equ	0xFE8
  6632                           postinc1	equ	0xFE6
  6633                           postdec1	equ	0xFE5
  6634                           plusw1	equ	0xFE3
  6635                           fsr1h	equ	0xFE2
  6636                           fsr1l	equ	0xFE1
  6637                           indf2	equ	0xFDF
  6638                           postinc2	equ	0xFDE
  6639                           postdec2	equ	0xFDD
  6640                           fsr2h	equ	0xFDA
  6641                           fsr2l	equ	0xFD9
  6642                           status	equ	0xFD8
  6643                           
  6644 ;; *************** function _RADIO_WatchdogTimeout *****************
  6645 ;; Defined at:
  6646 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  param           1  [STACK] unsigned char 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;		None
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  1  [STACK] void 
  6653 ;; Registers used:
  6654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  6655 ;; Tracked objects:
  6656 ;;		On entry : 3F/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;Total ram usage:        0 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:   16
  6667 ;; This function calls:
  6668 ;;		_LORAWAN_RxTimeout
  6669 ;;		_LORAWAN_TxDone
  6670 ;;		_RADIO_WriteMode
  6671 ;; This function is called by:
  6672 ;;		_RADIO_Init
  6673 ;;		_SwTimersExecute
  6674 ;; This function uses a reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text34
  6678  0000'                    __ptext34:
  6679                           	opt stack 0
  6680  0000'                    _RADIO_WatchdogTimeout:
  6681                           	opt stack 12
  6682                           
  6683                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  6684                           
  6685                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6686                           ;incstack = 0
  6687  0000' C02A' F005'        	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  6688  0004' 0E01               	movlw	1
  6689  0006' 0100               	movlb	0	; () banked
  6690  0008' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
  6691  000A' 0E01               	movlw	1
  6692  000C' EC00' F000'        	call	_RADIO_WriteMode
  6693                           
  6694                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  6695  0010' C02A' F005'        	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  6696  0014' 0E00               	movlw	0
  6697  0016' 0100               	movlb	0	; () banked
  6698  0018' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
  6699  001A' 0E00               	movlw	0
  6700  001C' EC00' F000'        	call	_RADIO_WriteMode
  6701                           
  6702                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  6703  0020' 0101               	movlb	1	; () banked
  6704  0022' 8900'              	bsf	(_RadioConfiguration+35)& (0+255),4,b
  6705                           
  6706                           ; BSR set to: 1
  6707                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  6708  0024' A300'              	btfss	(_RadioConfiguration+35)& (0+255),1,b
  6709  0026' D004               	goto	l686
  6710                           
  6711                           ; BSR set to: 1
  6712                           ;radio_driver_SX1276.c: 1414: {
  6713                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
  6714  0028' 9300'              	bcf	(_RadioConfiguration+35)& (0+255),1,b
  6715                           
  6716                           ; BSR set to: 1
  6717                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  6718  002A' EC00' F000'        	call	_LORAWAN_RxTimeout	;wreg free
  6719                           
  6720                           ;radio_driver_SX1276.c: 1417: }
  6721  002E' D009               	goto	l689
  6722  0030'                    l686:
  6723                           
  6724                           ; BSR set to: 1
  6725                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  6726  0030' A100'              	btfss	(_RadioConfiguration+35)& (0+255),0,b
  6727  0032' D007               	goto	l689
  6728                           
  6729                           ; BSR set to: 1
  6730                           ;radio_driver_SX1276.c: 1419: {
  6731                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
  6732  0034' 9100'              	bcf	(_RadioConfiguration+35)& (0+255),0,b
  6733                           
  6734                           ; BSR set to: 1
  6735                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  6736  0036' C03C' F05B'        	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  6737  003A' C03D' F05C'        	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  6738  003E' EC00' F000'        	call	_LORAWAN_TxDone	;wreg free
  6739  0042'                    l689:
  6740                           
  6741                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  6742  0042' 52E5               	movf	postdec1,f,c
  6743  0044' 0012               	return		;funcret
  6744  0046'                    __end_of_RADIO_WatchdogTimeout:
  6745                           	opt stack 0
  6746                           tosu	equ	0xFFF
  6747                           tosh	equ	0xFFE
  6748                           tosl	equ	0xFFD
  6749                           pclath	equ	0xFFA
  6750                           tblptru	equ	0xFF8
  6751                           tblptrh	equ	0xFF7
  6752                           tblptrl	equ	0xFF6
  6753                           tablat	equ	0xFF5
  6754                           prodh	equ	0xFF4
  6755                           prodl	equ	0xFF3
  6756                           intcon	equ	0xFF2
  6757                           intcon2	equ	0xFF1
  6758                           intcon3	equ	0xFF0
  6759                           postinc0	equ	0xFEE
  6760                           wreg	equ	0xFE8
  6761                           postinc1	equ	0xFE6
  6762                           postdec1	equ	0xFE5
  6763                           plusw1	equ	0xFE3
  6764                           fsr1h	equ	0xFE2
  6765                           fsr1l	equ	0xFE1
  6766                           indf2	equ	0xFDF
  6767                           postinc2	equ	0xFDE
  6768                           postdec2	equ	0xFDD
  6769                           fsr2h	equ	0xFDA
  6770                           fsr2l	equ	0xFD9
  6771                           status	equ	0xFD8
  6772                           
  6773 ;; *************** function _RADIO_RxFSKTimeout *****************
  6774 ;; Defined at:
  6775 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  param           1  [STACK] unsigned char 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  irqFlags        1  [STACK] unsigned char 
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1  [STACK] void 
  6782 ;; Registers used:
  6783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  6784 ;; Tracked objects:
  6785 ;;		On entry : 3F/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6793 ;;Total ram usage:        0 bytes
  6794 ;; Hardware stack levels used:    1
  6795 ;; Hardware stack levels required when called:   16
  6796 ;; This function calls:
  6797 ;;		_LORAWAN_RxTimeout
  6798 ;;		_RADIO_RegisterRead
  6799 ;;		_RADIO_WriteMode
  6800 ;;		_SwTimerStop
  6801 ;; This function is called by:
  6802 ;;		_RADIO_Init
  6803 ;;		_SwTimersExecute
  6804 ;; This function uses a reentrant model
  6805 ;;
  6806                           
  6807                           	psect	text35
  6808  0000'                    __ptext35:
  6809                           	opt stack 0
  6810  0000'                    _RADIO_RxFSKTimeout:
  6811                           	opt stack 0
  6812                           
  6813                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6814  0000' 52E6               	movf	postinc1,f,c
  6815                           
  6816                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
  6817                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
  6818                           
  6819                           ;incstack = 0
  6820  0002' 0E3E               	movlw	62
  6821  0004' EC00' F000'        	call	_RADIO_RegisterRead
  6822  0008' 6E0B'              	movwf	btemp+11,c
  6823                           
  6824                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  6825  000A' 0EFF               	movlw	-1
  6826  000C' C00B' FFE3         	movff	btemp+11,plusw1
  6827                           
  6828                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  6829                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  6830  0010' 0EFF               	movlw	-1
  6831  0012' B0E3               	btfsc	plusw1,0,c
  6832  0014' D010               	goto	l683
  6833                           
  6834                           ;radio_driver_SX1276.c: 1397: {
  6835                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  6836  0016' C02A' F005'        	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  6837  001A' 0E00               	movlw	0
  6838  001C' 0100               	movlb	0	; () banked
  6839  001E' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
  6840  0020' 0E00               	movlw	0
  6841  0022' EC00' F000'        	call	_RADIO_WriteMode
  6842                           
  6843                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  6844  0026' 0101               	movlb	1	; () banked
  6845  0028' 5100'              	movf	(_RadioConfiguration+41)& (0+255),w,b
  6846  002A' EC00' F000'        	call	_SwTimerStop
  6847                           
  6848                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  6849  002E' 0101               	movlb	1	; () banked
  6850  0030' 9300'              	bcf	(_RadioConfiguration+35)& (0+255),1,b
  6851                           
  6852                           ; BSR set to: 1
  6853                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  6854  0032' EC00' F000'        	call	_LORAWAN_RxTimeout	;wreg free
  6855  0036'                    l683:
  6856                           
  6857                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  6858  0036' 52E5               	movf	postdec1,f,c
  6859  0038' 52E5               	movf	postdec1,f,c
  6860  003A' 0012               	return		;funcret
  6861  003C'                    __end_of_RADIO_RxFSKTimeout:
  6862                           	opt stack 0
  6863                           tosu	equ	0xFFF
  6864                           tosh	equ	0xFFE
  6865                           tosl	equ	0xFFD
  6866                           pclath	equ	0xFFA
  6867                           tblptru	equ	0xFF8
  6868                           tblptrh	equ	0xFF7
  6869                           tblptrl	equ	0xFF6
  6870                           tablat	equ	0xFF5
  6871                           prodh	equ	0xFF4
  6872                           prodl	equ	0xFF3
  6873                           intcon	equ	0xFF2
  6874                           intcon2	equ	0xFF1
  6875                           intcon3	equ	0xFF0
  6876                           postinc0	equ	0xFEE
  6877                           wreg	equ	0xFE8
  6878                           postinc1	equ	0xFE6
  6879                           postdec1	equ	0xFE5
  6880                           plusw1	equ	0xFE3
  6881                           fsr1h	equ	0xFE2
  6882                           fsr1l	equ	0xFE1
  6883                           indf2	equ	0xFDF
  6884                           postinc2	equ	0xFDE
  6885                           postdec2	equ	0xFDD
  6886                           fsr2h	equ	0xFDA
  6887                           fsr2l	equ	0xFD9
  6888                           status	equ	0xFD8
  6889                           
  6890 ;; *************** function _UnconfirmedTransmissionCallback *****************
  6891 ;; Defined at:
  6892 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  param           1  [STACK] unsigned char 
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;		None
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  1  [STACK] void 
  6899 ;; Registers used:
  6900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  6901 ;; Tracked objects:
  6902 ;;		On entry : 3F/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;Total ram usage:        0 bytes
  6911 ;; Hardware stack levels used:    1
  6912 ;; Hardware stack levels required when called:   13
  6913 ;; This function calls:
  6914 ;;		_RADIO_Transmit
  6915 ;;		_ResetParametersForUnconfirmedTransmission
  6916 ;;		_RxData
  6917 ;;		_SelectChannelForTransmission
  6918 ;; This function is called by:
  6919 ;;		_SetCallbackSoftwareTimers
  6920 ;;		_SwTimersExecute
  6921 ;; This function uses a reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text36
  6925  0000'                    __ptext36:
  6926                           	opt stack 0
  6927  0000'                    _UnconfirmedTransmissionCallback:
  6928                           	opt stack 15
  6929                           
  6930                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  6931                           
  6932                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6933                           ;incstack = 0
  6934  0000' 0E01               	movlw	1
  6935  0002' EC00' F000'        	call	_SelectChannelForTransmission
  6936  0006' 0900               	iorlw	0
  6937  0008' A4D8               	btfss	status,2,c
  6938  000A' D018               	goto	l16066
  6939  000C' 0E00'              	movlw	low (_macBuffer+16)
  6940  000E' 0100               	movlb	0	; () banked
  6941  0010' 6F00'              	movwf	RADIO_Transmit@buffer& (0+255),b
  6942  0012' 0E00'              	movlw	high (_macBuffer+16)
  6943  0014' 6F00'              	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  6944  0016' C0D4' F053'        	movff	_loRa+212,RADIO_Transmit@bufferLen
  6945  001A' EC00' F000'        	call	_RADIO_Transmit	;wreg free
  6946  001E' C051' F001'        	movff	?_RADIO_Transmit,btemp+1
  6947  0022' C052' F002'        	movff	?_RADIO_Transmit+1,btemp+2
  6948  0026' 5001'              	movf	btemp+1,w,c
  6949  0028' 1002'              	iorwf	btemp+2,w,c
  6950  002A' A4D8               	btfss	status,2,c
  6951  002C' D007               	goto	l16066
  6952                           
  6953                           ;lorawan.c: 1001: {
  6954                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  6955  002E' 0102               	movlb	2	; () banked
  6956  0030' 2B00'              	incf	(_loRa+216)& (0+255),f,b
  6957                           
  6958                           ; BSR set to: 2
  6959                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  6960  0032' 5100'              	movf	(_loRa+2)& (0+255),w,b
  6961  0034' 0BF0               	andlw	-16
  6962  0036' 0901               	iorlw	1
  6963  0038' 6F00'              	movwf	(_loRa+2)& (0+255),b
  6964                           
  6965                           ;lorawan.c: 1005: }
  6966  003A' D01C               	goto	u19759
  6967  003C'                    l16066:
  6968                           
  6969                           ;lorawan.c: 1006: else
  6970                           ;lorawan.c: 1008: {
  6971                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  6972  003C' EC00' F000'        	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  6973                           
  6974                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  6975  0040' 0101               	movlb	1	; () banked
  6976  0042' 5100'              	movf	_rxPayload& (0+255),w,b
  6977  0044' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
  6978  0046' B4D8               	btfsc	status,2,c
  6979  0048' D015               	goto	u19759
  6980                           
  6981                           ; BSR set to: 1
  6982                           ;lorawan.c: 1011: {
  6983                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  6984  004A' 0E00               	movlw	0
  6985  004C' 0100               	movlb	0	; () banked
  6986  004E' 6F00'              	movwf	RxData@pData& (0+255),b
  6987  0050' 0E00               	movlw	0
  6988  0052' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
  6989  0054' 0E00               	movlw	0
  6990  0056' 6F00'              	movwf	RxData@dataLength& (0+255),b
  6991  0058' 0E00               	movlw	0
  6992  005A' 6F00'              	movwf	RxData@status& (0+255),b
  6993  005C' D801               	call	u19758
  6994  005E' D00A               	goto	u19759
  6995  0060'                    u19758:
  6996  0060' 0005               	push	
  6997  0062' 6EFA               	movwf	pclath,c
  6998  0064' 0101               	movlb	1	; () banked
  6999  0066' 5100'              	movf	_rxPayload& (0+255),w,b
  7000  0068' 6EFD               	movwf	tosl,c
  7001  006A' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
  7002  006C' 6EFE               	movwf	tosh,c
  7003  006E' 6AFF               	clrf	tosu,c
  7004  0070' 50FA               	movf	pclath,w,c
  7005  0072' 0012               	return		;indir
  7006  0074'                    u19759:
  7007                           
  7008                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  7009  0074' 52E5               	movf	postdec1,f,c
  7010  0076' 0012               	return		;funcret
  7011  0078'                    __end_of_UnconfirmedTransmissionCallback:
  7012                           	opt stack 0
  7013                           tosu	equ	0xFFF
  7014                           tosh	equ	0xFFE
  7015                           tosl	equ	0xFFD
  7016                           pclath	equ	0xFFA
  7017                           tblptru	equ	0xFF8
  7018                           tblptrh	equ	0xFF7
  7019                           tblptrl	equ	0xFF6
  7020                           tablat	equ	0xFF5
  7021                           prodh	equ	0xFF4
  7022                           prodl	equ	0xFF3
  7023                           intcon	equ	0xFF2
  7024                           intcon2	equ	0xFF1
  7025                           intcon3	equ	0xFF0
  7026                           postinc0	equ	0xFEE
  7027                           wreg	equ	0xFE8
  7028                           postinc1	equ	0xFE6
  7029                           postdec1	equ	0xFE5
  7030                           plusw1	equ	0xFE3
  7031                           fsr1h	equ	0xFE2
  7032                           fsr1l	equ	0xFE1
  7033                           indf2	equ	0xFDF
  7034                           postinc2	equ	0xFDE
  7035                           postdec2	equ	0xFDD
  7036                           fsr2h	equ	0xFDA
  7037                           fsr2l	equ	0xFD9
  7038                           status	equ	0xFD8
  7039                           
  7040 ;; *************** function _GetRx1Freq *****************
  7041 ;; Defined at:
  7042 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;		None
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;		None
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  4    0[BANK0 ] unsigned long 
  7049 ;; Registers used:
  7050 ;;		None
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7056 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7059 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;Total ram usage:        4 bytes
  7061 ;; Hardware stack levels used:    1
  7062 ;; Hardware stack levels required when called:    7
  7063 ;; This function calls:
  7064 ;;		Nothing
  7065 ;; This function is called by:
  7066 ;;		_LORAWAN_ReceiveWindow1Callback
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           
  7070                           	psect	text37
  7071  0000'                    __ptext37:
  7072                           	opt stack 0
  7073  0000'                    _GetRx1Freq:
  7074                           	opt stack 20
  7075                           
  7076                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  7077                           
  7078                           ;incstack = 0
  7079  0000' C013' F000'        	movff	_loRa+19,?_GetRx1Freq
  7080  0004' C014' F001'        	movff	_loRa+20,?_GetRx1Freq+1
  7081  0008' C015' F002'        	movff	_loRa+21,?_GetRx1Freq+2
  7082  000C' C016' F003'        	movff	_loRa+22,?_GetRx1Freq+3
  7083  0010' 0012               	return		;funcret
  7084  0012'                    __end_of_GetRx1Freq:
  7085                           	opt stack 0
  7086                           tosu	equ	0xFFF
  7087                           tosh	equ	0xFFE
  7088                           tosl	equ	0xFFD
  7089                           pclath	equ	0xFFA
  7090                           tblptru	equ	0xFF8
  7091                           tblptrh	equ	0xFF7
  7092                           tblptrl	equ	0xFF6
  7093                           tablat	equ	0xFF5
  7094                           prodh	equ	0xFF4
  7095                           prodl	equ	0xFF3
  7096                           intcon	equ	0xFF2
  7097                           intcon2	equ	0xFF1
  7098                           intcon3	equ	0xFF0
  7099                           postinc0	equ	0xFEE
  7100                           wreg	equ	0xFE8
  7101                           postinc1	equ	0xFE6
  7102                           postdec1	equ	0xFE5
  7103                           plusw1	equ	0xFE3
  7104                           fsr1h	equ	0xFE2
  7105                           fsr1l	equ	0xFE1
  7106                           indf2	equ	0xFDF
  7107                           postinc2	equ	0xFDE
  7108                           postdec2	equ	0xFDD
  7109                           fsr2h	equ	0xFDA
  7110                           fsr2l	equ	0xFD9
  7111                           status	equ	0xFD8
  7112                           
  7113 ;; *************** function _RADIO_DIO5 *****************
  7114 ;; Defined at:
  7115 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;		None
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;  dioMapping      1    5[BANK0 ] unsigned char 
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1    wreg      void 
  7122 ;; Registers used:
  7123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7132 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7133 ;;Total ram usage:        2 bytes
  7134 ;; Hardware stack levels used:    1
  7135 ;; Hardware stack levels required when called:   11
  7136 ;; This function calls:
  7137 ;;		_RADIO_RegisterRead
  7138 ;;		_RADIO_UnhandledInterrupt
  7139 ;; This function is called by:
  7140 ;;		_LORAWAN_Mainloop
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           	psect	text38
  7145  0000'                    __ptext38:
  7146                           	opt stack 0
  7147  0000'                    _RADIO_DIO5:
  7148                           	opt stack 18
  7149                           
  7150                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
  7151                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  7152                           
  7153                           ;incstack = 0
  7154  0000' 0E41               	movlw	65
  7155  0002' EC00' F000'        	call	_RADIO_RegisterRead
  7156  0006' 0100               	movlb	0	; () banked
  7157  0008' 6F00'              	movwf	??_RADIO_DIO5& (0+255),b
  7158  000A' 3900'              	swapf	??_RADIO_DIO5& (0+255),w,b
  7159  000C' 0B0F               	andlw	15
  7160  000E' 0B03               	andlw	3
  7161  0010' 6F00'              	movwf	RADIO_DIO5@dioMapping& (0+255),b
  7162                           
  7163                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7164  0012' 0E01               	movlw	1
  7165  0014' EC00' F000'        	call	_RADIO_RegisterRead
  7166  0018' 0100               	movlb	0	; () banked
  7167  001A' 6F00'              	movwf	??_RADIO_DIO5& (0+255),b
  7168  001C' AF00'              	btfss	??_RADIO_DIO5& (0+255),7,b
  7169  001E' 0012               	return	
  7170                           
  7171                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7172                           
  7173                           ; BSR set to: 0
  7174                           
  7175                           ;radio_driver_SX1276.c: 1354: {
  7176                           ;radio_driver_SX1276.c: 1355: default:
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;radio_driver_SX1276.c: 1351: {
  7180                           ;radio_driver_SX1276.c: 1353: switch (dioMapping)
  7181  0020' 0E01               	movlw	1
  7182  0022' EC00' F000'        	call	_RADIO_UnhandledInterrupt
  7183                           
  7184                           ;radio_driver_SX1276.c: 1358: }
  7185                           
  7186                           ;radio_driver_SX1276.c: 1357: break;
  7187  0026' 0012               	return	
  7188  0028'                    __end_of_RADIO_DIO5:
  7189                           	opt stack 0
  7190                           tosu	equ	0xFFF
  7191                           tosh	equ	0xFFE
  7192                           tosl	equ	0xFFD
  7193                           pclath	equ	0xFFA
  7194                           tblptru	equ	0xFF8
  7195                           tblptrh	equ	0xFF7
  7196                           tblptrl	equ	0xFF6
  7197                           tablat	equ	0xFF5
  7198                           prodh	equ	0xFF4
  7199                           prodl	equ	0xFF3
  7200                           intcon	equ	0xFF2
  7201                           intcon2	equ	0xFF1
  7202                           intcon3	equ	0xFF0
  7203                           postinc0	equ	0xFEE
  7204                           wreg	equ	0xFE8
  7205                           postinc1	equ	0xFE6
  7206                           postdec1	equ	0xFE5
  7207                           plusw1	equ	0xFE3
  7208                           fsr1h	equ	0xFE2
  7209                           fsr1l	equ	0xFE1
  7210                           indf2	equ	0xFDF
  7211                           postinc2	equ	0xFDE
  7212                           postdec2	equ	0xFDD
  7213                           fsr2h	equ	0xFDA
  7214                           fsr2l	equ	0xFD9
  7215                           status	equ	0xFD8
  7216                           
  7217 ;; *************** function _RADIO_DIO4 *****************
  7218 ;; Defined at:
  7219 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;		None
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;  dioMapping      1    6[BANK0 ] unsigned char 
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  1    wreg      void 
  7226 ;; Registers used:
  7227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 0/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7236 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;Total ram usage:        3 bytes
  7238 ;; Hardware stack levels used:    1
  7239 ;; Hardware stack levels required when called:   11
  7240 ;; This function calls:
  7241 ;;		_RADIO_RegisterRead
  7242 ;;		_RADIO_UnhandledInterrupt
  7243 ;; This function is called by:
  7244 ;;		_LORAWAN_Mainloop
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text39
  7249  0000'                    __ptext39:
  7250                           	opt stack 0
  7251  0000'                    _RADIO_DIO4:
  7252                           	opt stack 18
  7253                           
  7254                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
  7255                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  7256                           
  7257                           ;incstack = 0
  7258  0000' 0E41               	movlw	65
  7259  0002' EC00' F000'        	call	_RADIO_RegisterRead
  7260  0006' 0100               	movlb	0	; () banked
  7261  0008' 6F00'              	movwf	??_RADIO_DIO4& (0+255),b
  7262  000A' 0E06               	movlw	6
  7263  000C' 6F00'              	movwf	(??_RADIO_DIO4+1)& (0+255),b
  7264  000E'                    u19885:
  7265  000E' 90D8               	bcf	status,0,c
  7266  0010' 3300'              	rrcf	??_RADIO_DIO4& (0+255),f,b
  7267  0012' 2F00'              	decfsz	(??_RADIO_DIO4+1)& (0+255),f,b
  7268  0014' D7FC               	goto	u19885
  7269  0016' 5100'              	movf	??_RADIO_DIO4& (0+255),w,b
  7270  0018' 0B03               	andlw	3
  7271  001A' 6F00'              	movwf	RADIO_DIO4@dioMapping& (0+255),b
  7272                           
  7273                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7274  001C' 0E01               	movlw	1
  7275  001E' EC00' F000'        	call	_RADIO_RegisterRead
  7276  0022' 0100               	movlb	0	; () banked
  7277  0024' 6F00'              	movwf	??_RADIO_DIO4& (0+255),b
  7278  0026' AF00'              	btfss	??_RADIO_DIO4& (0+255),7,b
  7279  0028' 0012               	return	
  7280                           
  7281                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7282                           
  7283                           ; BSR set to: 0
  7284                           
  7285                           ;radio_driver_SX1276.c: 1331: {
  7286                           ;radio_driver_SX1276.c: 1332: default:
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;radio_driver_SX1276.c: 1328: {
  7290                           ;radio_driver_SX1276.c: 1330: switch (dioMapping)
  7291  002A' 0E01               	movlw	1
  7292  002C' EC00' F000'        	call	_RADIO_UnhandledInterrupt
  7293                           
  7294                           ;radio_driver_SX1276.c: 1335: }
  7295                           
  7296                           ;radio_driver_SX1276.c: 1334: break;
  7297  0030' 0012               	return	
  7298  0032'                    __end_of_RADIO_DIO4:
  7299                           	opt stack 0
  7300                           tosu	equ	0xFFF
  7301                           tosh	equ	0xFFE
  7302                           tosl	equ	0xFFD
  7303                           pclath	equ	0xFFA
  7304                           tblptru	equ	0xFF8
  7305                           tblptrh	equ	0xFF7
  7306                           tblptrl	equ	0xFF6
  7307                           tablat	equ	0xFF5
  7308                           prodh	equ	0xFF4
  7309                           prodl	equ	0xFF3
  7310                           intcon	equ	0xFF2
  7311                           intcon2	equ	0xFF1
  7312                           intcon3	equ	0xFF0
  7313                           postinc0	equ	0xFEE
  7314                           wreg	equ	0xFE8
  7315                           postinc1	equ	0xFE6
  7316                           postdec1	equ	0xFE5
  7317                           plusw1	equ	0xFE3
  7318                           fsr1h	equ	0xFE2
  7319                           fsr1l	equ	0xFE1
  7320                           indf2	equ	0xFDF
  7321                           postinc2	equ	0xFDE
  7322                           postdec2	equ	0xFDD
  7323                           fsr2h	equ	0xFDA
  7324                           fsr2l	equ	0xFD9
  7325                           status	equ	0xFD8
  7326                           
  7327 ;; *************** function _RADIO_DIO3 *****************
  7328 ;; Defined at:
  7329 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;		None
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;  dioMapping      1    5[BANK0 ] unsigned char 
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  1    wreg      void 
  7336 ;; Registers used:
  7337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7344 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7345 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;Total ram usage:        2 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; Hardware stack levels required when called:   11
  7350 ;; This function calls:
  7351 ;;		_RADIO_RegisterRead
  7352 ;;		_RADIO_UnhandledInterrupt
  7353 ;; This function is called by:
  7354 ;;		_LORAWAN_Mainloop
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           	psect	text40
  7359  0000'                    __ptext40:
  7360                           	opt stack 0
  7361  0000'                    _RADIO_DIO3:
  7362                           	opt stack 18
  7363                           
  7364                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
  7365                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  7366                           
  7367                           ;incstack = 0
  7368  0000' 0E40               	movlw	64
  7369  0002' EC00' F000'        	call	_RADIO_RegisterRead
  7370  0006' 0B03               	andlw	3
  7371  0008' 0100               	movlb	0	; () banked
  7372  000A' 6F00'              	movwf	RADIO_DIO3@dioMapping& (0+255),b
  7373                           
  7374                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7375  000C' 0E01               	movlw	1
  7376  000E' EC00' F000'        	call	_RADIO_RegisterRead
  7377  0012' 0100               	movlb	0	; () banked
  7378  0014' 6F00'              	movwf	??_RADIO_DIO3& (0+255),b
  7379  0016' AF00'              	btfss	??_RADIO_DIO3& (0+255),7,b
  7380  0018' 0012               	return	
  7381                           
  7382                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7383                           
  7384                           ; BSR set to: 0
  7385                           
  7386                           ;radio_driver_SX1276.c: 1308: {
  7387                           ;radio_driver_SX1276.c: 1309: default:
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;radio_driver_SX1276.c: 1305: {
  7391                           ;radio_driver_SX1276.c: 1307: switch (dioMapping)
  7392  001A' 0E01               	movlw	1
  7393  001C' EC00' F000'        	call	_RADIO_UnhandledInterrupt
  7394                           
  7395                           ;radio_driver_SX1276.c: 1312: }
  7396                           
  7397                           ;radio_driver_SX1276.c: 1311: break;
  7398  0020' 0012               	return	
  7399  0022'                    __end_of_RADIO_DIO3:
  7400                           	opt stack 0
  7401                           tosu	equ	0xFFF
  7402                           tosh	equ	0xFFE
  7403                           tosl	equ	0xFFD
  7404                           pclath	equ	0xFFA
  7405                           tblptru	equ	0xFF8
  7406                           tblptrh	equ	0xFF7
  7407                           tblptrl	equ	0xFF6
  7408                           tablat	equ	0xFF5
  7409                           prodh	equ	0xFF4
  7410                           prodl	equ	0xFF3
  7411                           intcon	equ	0xFF2
  7412                           intcon2	equ	0xFF1
  7413                           intcon3	equ	0xFF0
  7414                           postinc0	equ	0xFEE
  7415                           wreg	equ	0xFE8
  7416                           postinc1	equ	0xFE6
  7417                           postdec1	equ	0xFE5
  7418                           plusw1	equ	0xFE3
  7419                           fsr1h	equ	0xFE2
  7420                           fsr1l	equ	0xFE1
  7421                           indf2	equ	0xFDF
  7422                           postinc2	equ	0xFDE
  7423                           postdec2	equ	0xFDD
  7424                           fsr2h	equ	0xFDA
  7425                           fsr2l	equ	0xFD9
  7426                           status	equ	0xFD8
  7427                           
  7428 ;; *************** function _RADIO_DIO2 *****************
  7429 ;; Defined at:
  7430 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;		None
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;  dioMapping      1   28[BANK0 ] unsigned char 
  7435 ;;  opMode          1   27[BANK0 ] unsigned char 
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  1    wreg      void 
  7438 ;; Registers used:
  7439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7446 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7447 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7448 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7449 ;;Total ram usage:        3 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; Hardware stack levels required when called:   12
  7452 ;; This function calls:
  7453 ;;		_RADIO_FHSSChangeChannel
  7454 ;;		_RADIO_RegisterRead
  7455 ;;		_RADIO_UnhandledInterrupt
  7456 ;; This function is called by:
  7457 ;;		_LORAWAN_Mainloop
  7458 ;; This function uses a non-reentrant model
  7459 ;;
  7460                           
  7461                           	psect	text41
  7462  0000'                    __ptext41:
  7463                           	opt stack 0
  7464  0000'                    _RADIO_DIO2:
  7465                           	opt stack 17
  7466                           
  7467                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
  7468                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
  7469                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  7470                           
  7471                           ;incstack = 0
  7472  0000' 0E40               	movlw	64
  7473  0002' EC00' F000'        	call	_RADIO_RegisterRead
  7474  0006' 0100               	movlb	0	; () banked
  7475  0008' 6F00'              	movwf	??_RADIO_DIO2& (0+255),b
  7476  000A' 90D8               	bcf	status,0,c
  7477  000C' 3300'              	rrcf	??_RADIO_DIO2& (0+255),f,b
  7478  000E' 90D8               	bcf	status,0,c
  7479  0010' 3100'              	rrcf	??_RADIO_DIO2& (0+255),w,b
  7480  0012' 0B03               	andlw	3
  7481  0014' 6F00'              	movwf	RADIO_DIO2@dioMapping& (0+255),b
  7482                           
  7483                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
  7484  0016' 0E01               	movlw	1
  7485  0018' EC00' F000'        	call	_RADIO_RegisterRead
  7486  001C' 0100               	movlb	0	; () banked
  7487  001E' 6F00'              	movwf	RADIO_DIO2@opMode& (0+255),b
  7488                           
  7489                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7490  0020' 0E01               	movlw	1
  7491  0022' EC00' F000'        	call	_RADIO_RegisterRead
  7492  0026' 0100               	movlb	0	; () banked
  7493  0028' 6F00'              	movwf	??_RADIO_DIO2& (0+255),b
  7494  002A' AF00'              	btfss	??_RADIO_DIO2& (0+255),7,b
  7495  002C' 0012               	return	
  7496  002E' D007               	goto	l643
  7497  0030'                    
  7498                           ; BSR set to: 0
  7499                           ;radio_driver_SX1276.c: 1283: case 0x01:
  7500                           ;radio_driver_SX1276.c: 1284: case 0x02:
  7501                           ;radio_driver_SX1276.c: 1285: RADIO_FHSSChangeChannel();
  7502                           
  7503                           ; BSR set to: 0
  7504                           
  7505                           ; BSR set to: 0
  7506                           
  7507                           ; BSR set to: 0
  7508  0030' EC00' F000'        	call	_RADIO_FHSSChangeChannel	;wreg free
  7509                           
  7510                           ;radio_driver_SX1276.c: 1286: break;
  7511  0034' 0012               	return	
  7512  0036'                    
  7513                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7514  0036' 0E01               	movlw	1
  7515  0038' EC00' F000'        	call	_RADIO_UnhandledInterrupt
  7516                           
  7517                           ;radio_driver_SX1276.c: 1290: }
  7518                           
  7519                           ;radio_driver_SX1276.c: 1289: break;
  7520  003C' 0012               	return	
  7521  003E'                    l643:
  7522  003E' 0100               	movlb	0	; () banked
  7523  0040' 5100'              	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  7524                           
  7525                           ; Switch size 1, requested type "space"
  7526                           ; Number of cases is 3, Range of values is 0 to 2
  7527                           ; switch strategies available:
  7528                           ; Name         Instructions Cycles
  7529                           ; simple_byte           10     6 (average)
  7530                           ;	Chosen strategy is simple_byte
  7531  0042' 0A00               	xorlw	0	; case 0
  7532  0044' B4D8               	btfsc	status,2,c
  7533  0046' D7F4               	goto	l644
  7534  0048' 0A01               	xorlw	1	; case 1
  7535  004A' B4D8               	btfsc	status,2,c
  7536  004C' D7F1               	goto	l644
  7537  004E' 0A03               	xorlw	3	; case 2
  7538  0050' B4D8               	btfsc	status,2,c
  7539  0052' D7EE               	goto	l644
  7540  0054' D7F0               	goto	l648
  7541  0056'                    __end_of_RADIO_DIO2:
  7542                           	opt stack 0
  7543                           tosu	equ	0xFFF
  7544                           tosh	equ	0xFFE
  7545                           tosl	equ	0xFFD
  7546                           pclath	equ	0xFFA
  7547                           tblptru	equ	0xFF8
  7548                           tblptrh	equ	0xFF7
  7549                           tblptrl	equ	0xFF6
  7550                           tablat	equ	0xFF5
  7551                           prodh	equ	0xFF4
  7552                           prodl	equ	0xFF3
  7553                           intcon	equ	0xFF2
  7554                           intcon2	equ	0xFF1
  7555                           intcon3	equ	0xFF0
  7556                           postinc0	equ	0xFEE
  7557                           wreg	equ	0xFE8
  7558                           postinc1	equ	0xFE6
  7559                           postdec1	equ	0xFE5
  7560                           plusw1	equ	0xFE3
  7561                           fsr1h	equ	0xFE2
  7562                           fsr1l	equ	0xFE1
  7563                           indf2	equ	0xFDF
  7564                           postinc2	equ	0xFDE
  7565                           postdec2	equ	0xFDD
  7566                           fsr2h	equ	0xFDA
  7567                           fsr2l	equ	0xFD9
  7568                           status	equ	0xFD8
  7569                           
  7570 ;; *************** function _RADIO_DIO1 *****************
  7571 ;; Defined at:
  7572 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;		None
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;  dioMapping      1  108[BANK0 ] unsigned char 
  7577 ;; Return value:  Size  Location     Type
  7578 ;;                  1    wreg      void 
  7579 ;; Registers used:
  7580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  7581 ;; Tracked objects:
  7582 ;;		On entry : 0/0
  7583 ;;		On exit  : 0/0
  7584 ;;		Unchanged: 0/0
  7585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7587 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7588 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7589 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7590 ;;Total ram usage:        2 bytes
  7591 ;; Hardware stack levels used:    1
  7592 ;; Hardware stack levels required when called:   17
  7593 ;; This function calls:
  7594 ;;		_RADIO_FHSSChangeChannel
  7595 ;;		_RADIO_RegisterRead
  7596 ;;		_RADIO_RxTimeout
  7597 ;;		_RADIO_UnhandledInterrupt
  7598 ;; This function is called by:
  7599 ;;		_LORAWAN_Mainloop
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text42
  7604  0000'                    __ptext42:
  7605                           	opt stack 0
  7606  0000'                    _RADIO_DIO1:
  7607                           	opt stack 12
  7608                           
  7609                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
  7610                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  7611                           
  7612                           ;incstack = 0
  7613  0000' 0E40               	movlw	64
  7614  0002' EC00' F000'        	call	_RADIO_RegisterRead
  7615  0006' 0100               	movlb	0	; () banked
  7616  0008' 6F00'              	movwf	??_RADIO_DIO1& (0+255),b
  7617  000A' 3900'              	swapf	??_RADIO_DIO1& (0+255),w,b
  7618  000C' 0B0F               	andlw	15
  7619  000E' 0B03               	andlw	3
  7620  0010' 6F00'              	movwf	RADIO_DIO1@dioMapping& (0+255),b
  7621                           
  7622                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7623  0012' 0E01               	movlw	1
  7624  0014' EC00' F000'        	call	_RADIO_RegisterRead
  7625  0018' 0100               	movlb	0	; () banked
  7626  001A' 6F00'              	movwf	??_RADIO_DIO1& (0+255),b
  7627  001C' BF00'              	btfsc	??_RADIO_DIO1& (0+255),7,b
  7628  001E' D00B               	goto	l629
  7629  0020' D013               	goto	l635
  7630  0022'                    
  7631                           ; BSR set to: 0
  7632                           ;radio_driver_SX1276.c: 1243: RADIO_RxTimeout();
  7633                           
  7634                           ; BSR set to: 0
  7635  0022' EC00' F000'        	call	_RADIO_RxTimeout	;wreg free
  7636                           
  7637                           ;radio_driver_SX1276.c: 1244: break;
  7638  0026' 0012               	return	
  7639  0028'                    
  7640                           ;radio_driver_SX1276.c: 1246: RADIO_FHSSChangeChannel();
  7641  0028' EC00' F000'        	call	_RADIO_FHSSChangeChannel	;wreg free
  7642                           
  7643                           ;radio_driver_SX1276.c: 1247: break;
  7644  002C' 0012               	return	
  7645  002E'                    
  7646                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7647  002E' 0E01               	movlw	1
  7648  0030' EC00' F000'        	call	_RADIO_UnhandledInterrupt
  7649                           
  7650                           ;radio_driver_SX1276.c: 1251: }
  7651                           
  7652                           ;radio_driver_SX1276.c: 1250: break;
  7653  0034' 0012               	return	
  7654  0036'                    l629:
  7655  0036' 0100               	movlb	0	; () banked
  7656  0038' 5100'              	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  7657                           
  7658                           ; Switch size 1, requested type "space"
  7659                           ; Number of cases is 2, Range of values is 0 to 1
  7660                           ; switch strategies available:
  7661                           ; Name         Instructions Cycles
  7662                           ; simple_byte            7     4 (average)
  7663                           ;	Chosen strategy is simple_byte
  7664  003A' 0A00               	xorlw	0	; case 0
  7665  003C' B4D8               	btfsc	status,2,c
  7666  003E' D7F1               	goto	l630
  7667  0040' 0A01               	xorlw	1	; case 1
  7668  0042' B4D8               	btfsc	status,2,c
  7669  0044' D7F1               	goto	l632
  7670  0046' D7F3               	goto	l633
  7671  0048'                    l635:
  7672                           
  7673                           ; BSR set to: 0
  7674                           
  7675                           ; BSR set to: 0
  7676  0048' 5100'              	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  7677                           
  7678                           ; Switch size 1, requested type "space"
  7679                           ; Number of cases is 1, Range of values is 0 to 0
  7680                           ; switch strategies available:
  7681                           ; Name         Instructions Cycles
  7682                           ; simple_byte            4     3 (average)
  7683                           ;	Chosen strategy is simple_byte
  7684  004A' 0A00               	xorlw	0	; case 0
  7685                           
  7686                           ; BSR set to: 0
  7687  004C' 0012               	return	
  7688  004E'                    __end_of_RADIO_DIO1:
  7689                           	opt stack 0
  7690                           tosu	equ	0xFFF
  7691                           tosh	equ	0xFFE
  7692                           tosl	equ	0xFFD
  7693                           pclath	equ	0xFFA
  7694                           tblptru	equ	0xFF8
  7695                           tblptrh	equ	0xFF7
  7696                           tblptrl	equ	0xFF6
  7697                           tablat	equ	0xFF5
  7698                           prodh	equ	0xFF4
  7699                           prodl	equ	0xFF3
  7700                           intcon	equ	0xFF2
  7701                           intcon2	equ	0xFF1
  7702                           intcon3	equ	0xFF0
  7703                           postinc0	equ	0xFEE
  7704                           wreg	equ	0xFE8
  7705                           postinc1	equ	0xFE6
  7706                           postdec1	equ	0xFE5
  7707                           plusw1	equ	0xFE3
  7708                           fsr1h	equ	0xFE2
  7709                           fsr1l	equ	0xFE1
  7710                           indf2	equ	0xFDF
  7711                           postinc2	equ	0xFDE
  7712                           postdec2	equ	0xFDD
  7713                           fsr2h	equ	0xFDA
  7714                           fsr2l	equ	0xFD9
  7715                           status	equ	0xFD8
  7716                           
  7717 ;; *************** function _RADIO_RxTimeout *****************
  7718 ;; Defined at:
  7719 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;		None
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;		None
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  1    wreg      void 
  7726 ;; Registers used:
  7727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7737 ;;Total ram usage:        0 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:   16
  7740 ;; This function calls:
  7741 ;;		_LORAWAN_RxTimeout
  7742 ;;		_RADIO_RegisterWrite
  7743 ;;		_RADIO_WriteMode
  7744 ;;		_SwTimerStop
  7745 ;; This function is called by:
  7746 ;;		_RADIO_DIO1
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text43
  7751  0000'                    __ptext43:
  7752                           	opt stack 0
  7753  0000'                    _RADIO_RxTimeout:
  7754                           	opt stack 12
  7755                           
  7756                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
  7757                           
  7758                           ;incstack = 0
  7759  0000' 0101               	movlb	1	; () banked
  7760  0002' 5100'              	movf	(_RadioConfiguration+41)& (0+255),w,b
  7761  0004' EC00' F000'        	call	_SwTimerStop
  7762                           
  7763                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
  7764  0008' 0E80               	movlw	128
  7765  000A' 0100               	movlb	0	; () banked
  7766  000C' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
  7767  000E' 0E12               	movlw	18
  7768  0010' EC00' F000'        	call	_RADIO_RegisterWrite
  7769                           
  7770                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7771  0014' C02A' F005'        	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7772  0018' 0E00               	movlw	0
  7773  001A' 0100               	movlb	0	; () banked
  7774  001C' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
  7775  001E' 0E00               	movlw	0
  7776  0020' EC00' F000'        	call	_RADIO_WriteMode
  7777                           
  7778                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
  7779  0024' 0101               	movlb	1	; () banked
  7780  0026' 9300'              	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7781                           
  7782                           ; BSR set to: 1
  7783                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
  7784  0028' EC00' F000'        	call	_LORAWAN_RxTimeout	;wreg free
  7785  002C' 0012               	return		;funcret
  7786  002E'                    __end_of_RADIO_RxTimeout:
  7787                           	opt stack 0
  7788                           tosu	equ	0xFFF
  7789                           tosh	equ	0xFFE
  7790                           tosl	equ	0xFFD
  7791                           pclath	equ	0xFFA
  7792                           tblptru	equ	0xFF8
  7793                           tblptrh	equ	0xFF7
  7794                           tblptrl	equ	0xFF6
  7795                           tablat	equ	0xFF5
  7796                           prodh	equ	0xFF4
  7797                           prodl	equ	0xFF3
  7798                           intcon	equ	0xFF2
  7799                           intcon2	equ	0xFF1
  7800                           intcon3	equ	0xFF0
  7801                           postinc0	equ	0xFEE
  7802                           wreg	equ	0xFE8
  7803                           postinc1	equ	0xFE6
  7804                           postdec1	equ	0xFE5
  7805                           plusw1	equ	0xFE3
  7806                           fsr1h	equ	0xFE2
  7807                           fsr1l	equ	0xFE1
  7808                           indf2	equ	0xFDF
  7809                           postinc2	equ	0xFDE
  7810                           postdec2	equ	0xFDD
  7811                           fsr2h	equ	0xFDA
  7812                           fsr2l	equ	0xFD9
  7813                           status	equ	0xFD8
  7814                           
  7815 ;; *************** function _RADIO_FHSSChangeChannel *****************
  7816 ;; Defined at:
  7817 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;		None
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;  irqFlags        1   25[BANK0 ] unsigned char 
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  1    wreg      void 
  7824 ;; Registers used:
  7825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  7826 ;; Tracked objects:
  7827 ;;		On entry : 0/0
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7832 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7834 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7835 ;;Total ram usage:        1 bytes
  7836 ;; Hardware stack levels used:    1
  7837 ;; Hardware stack levels required when called:   11
  7838 ;; This function calls:
  7839 ;;		_RADIO_RegisterRead
  7840 ;;		_RADIO_RegisterWrite
  7841 ;;		_RADIO_WriteFrequency
  7842 ;; This function is called by:
  7843 ;;		_RADIO_DIO1
  7844 ;;		_RADIO_DIO2
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848                           	psect	text44
  7849  0000'                    __ptext44:
  7850                           	opt stack 0
  7851  0000'                    _RADIO_FHSSChangeChannel:
  7852                           	opt stack 17
  7853                           
  7854                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
  7855                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
  7856                           
  7857                           ;incstack = 0
  7858  0000' 0E12               	movlw	18
  7859  0002' EC00' F000'        	call	_RADIO_RegisterRead
  7860  0006' 0100               	movlb	0	; () banked
  7861  0008' 6F00'              	movwf	RADIO_FHSSChangeChannel@irqFlags& (0+255),b
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
  7865  000A' 0101               	movlb	1	; () banked
  7866  000C' 5100'              	movf	(_RadioConfiguration+30)& (0+255),w,b
  7867  000E' 1100'              	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  7868  0010' B4D8               	btfsc	status,2,c
  7869  0012' D00F               	goto	l606
  7870                           
  7871                           ; BSR set to: 1
  7872                           ;radio_driver_SX1276.c: 1164: {
  7873                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
  7874  0014' 5100'              	movf	(_RadioConfiguration+47)& (0+255),w,b
  7875  0016' 1100'              	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  7876  0018' B4D8               	btfsc	status,2,c
  7877  001A' D00B               	goto	l606
  7878                           
  7879                           ; BSR set to: 1
  7880                           ;radio_driver_SX1276.c: 1166: {
  7881                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
  7882  001C' 0E00               	movlw	0
  7883  001E' 0100               	movlb	0	; () banked
  7884  0020' 6F00'              	movwf	RADIO_WriteFrequency@frequency& (0+255),b
  7885  0022' 0E00               	movlw	0
  7886  0024' 6F00'              	movwf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
  7887  0026' 0E00               	movlw	0
  7888  0028' 6F00'              	movwf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
  7889  002A' 0E00               	movlw	0
  7890  002C' 6F00'              	movwf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
  7891  002E' EC00' F000'        	call	_RADIO_WriteFrequency	;wreg free
  7892  0032'                    l606:
  7893                           
  7894                           ;radio_driver_SX1276.c: 1168: }
  7895                           ;radio_driver_SX1276.c: 1169: }
  7896                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
  7897  0032' 0E02               	movlw	2
  7898  0034' 0100               	movlb	0	; () banked
  7899  0036' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
  7900  0038' 0E12               	movlw	18
  7901  003A' EC00' F000'        	call	_RADIO_RegisterWrite
  7902  003E' 0012               	return		;funcret
  7903  0040'                    __end_of_RADIO_FHSSChangeChannel:
  7904                           	opt stack 0
  7905                           tosu	equ	0xFFF
  7906                           tosh	equ	0xFFE
  7907                           tosl	equ	0xFFD
  7908                           pclath	equ	0xFFA
  7909                           tblptru	equ	0xFF8
  7910                           tblptrh	equ	0xFF7
  7911                           tblptrl	equ	0xFF6
  7912                           tablat	equ	0xFF5
  7913                           prodh	equ	0xFF4
  7914                           prodl	equ	0xFF3
  7915                           intcon	equ	0xFF2
  7916                           intcon2	equ	0xFF1
  7917                           intcon3	equ	0xFF0
  7918                           postinc0	equ	0xFEE
  7919                           wreg	equ	0xFE8
  7920                           postinc1	equ	0xFE6
  7921                           postdec1	equ	0xFE5
  7922                           plusw1	equ	0xFE3
  7923                           fsr1h	equ	0xFE2
  7924                           fsr1l	equ	0xFE1
  7925                           indf2	equ	0xFDF
  7926                           postinc2	equ	0xFDE
  7927                           postdec2	equ	0xFDD
  7928                           fsr2h	equ	0xFDA
  7929                           fsr2l	equ	0xFD9
  7930                           status	equ	0xFD8
  7931                           
  7932 ;; *************** function _RADIO_DIO0 *****************
  7933 ;; Defined at:
  7934 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;		None
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;  opMode          1  153[BANK0 ] unsigned char 
  7939 ;;  dioMapping      1  152[BANK0 ] unsigned char 
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  1    wreg      void 
  7942 ;; Registers used:
  7943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7950 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7951 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7952 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7953 ;;Total ram usage:        4 bytes
  7954 ;; Hardware stack levels used:    1
  7955 ;; Hardware stack levels required when called:   17
  7956 ;; This function calls:
  7957 ;;		_RADIO_FSKPacketSent
  7958 ;;		_RADIO_FSKPayloadReady
  7959 ;;		_RADIO_RegisterRead
  7960 ;;		_RADIO_RxDone
  7961 ;;		_RADIO_TxDone
  7962 ;;		_RADIO_UnhandledInterrupt
  7963 ;; This function is called by:
  7964 ;;		_LORAWAN_Mainloop
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           	psect	text45
  7969  0000'                    __ptext45:
  7970                           	opt stack 0
  7971  0000'                    _RADIO_DIO0:
  7972                           	opt stack 12
  7973                           
  7974                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
  7975                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
  7976                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
  7977                           
  7978                           ;incstack = 0
  7979  0000' 0E40               	movlw	64
  7980  0002' EC00' F000'        	call	_RADIO_RegisterRead
  7981  0006' 0100               	movlb	0	; () banked
  7982  0008' 6F00'              	movwf	??_RADIO_DIO0& (0+255),b
  7983  000A' 0E06               	movlw	6
  7984  000C' 6F00'              	movwf	(??_RADIO_DIO0+1)& (0+255),b
  7985  000E'                    u19815:
  7986  000E' 90D8               	bcf	status,0,c
  7987  0010' 3300'              	rrcf	??_RADIO_DIO0& (0+255),f,b
  7988  0012' 2F00'              	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  7989  0014' D7FC               	goto	u19815
  7990  0016' 5100'              	movf	??_RADIO_DIO0& (0+255),w,b
  7991  0018' 0B03               	andlw	3
  7992  001A' 6F00'              	movwf	RADIO_DIO0@dioMapping& (0+255),b
  7993                           
  7994                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
  7995  001C' 0E01               	movlw	1
  7996  001E' EC00' F000'        	call	_RADIO_RegisterRead
  7997  0022' 0100               	movlb	0	; () banked
  7998  0024' 6F00'              	movwf	RADIO_DIO0@opMode& (0+255),b
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
  8002  0026' BF00'              	btfsc	RADIO_DIO0@opMode& (0+255),7,b
  8003  0028' D00B               	goto	l611
  8004  002A' D02C               	goto	l617
  8005  002C'                    
  8006                           ; BSR set to: 0
  8007                           ;radio_driver_SX1276.c: 1190: RADIO_RxDone();
  8008                           
  8009                           ; BSR set to: 0
  8010  002C' EC00' F000'        	call	_RADIO_RxDone	;wreg free
  8011                           
  8012                           ;radio_driver_SX1276.c: 1191: break;
  8013  0030' 0012               	return	
  8014  0032'                    
  8015                           ;radio_driver_SX1276.c: 1193: RADIO_TxDone();
  8016  0032' EC00' F000'        	call	_RADIO_TxDone	;wreg free
  8017                           
  8018                           ;radio_driver_SX1276.c: 1194: break;
  8019  0036' 0012               	return	
  8020  0038'                    
  8021                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8022  0038' 0E01               	movlw	1
  8023  003A' EC00' F000'        	call	_RADIO_UnhandledInterrupt
  8024                           
  8025                           ;radio_driver_SX1276.c: 1198: }
  8026                           
  8027                           ;radio_driver_SX1276.c: 1197: break;
  8028  003E' 0012               	return	
  8029  0040'                    l611:
  8030  0040' 0100               	movlb	0	; () banked
  8031  0042' 5100'              	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8032                           
  8033                           ; Switch size 1, requested type "space"
  8034                           ; Number of cases is 2, Range of values is 0 to 1
  8035                           ; switch strategies available:
  8036                           ; Name         Instructions Cycles
  8037                           ; simple_byte            7     4 (average)
  8038                           ;	Chosen strategy is simple_byte
  8039  0044' 0A00               	xorlw	0	; case 0
  8040  0046' B4D8               	btfsc	status,2,c
  8041  0048' D7F1               	goto	l612
  8042  004A' 0A01               	xorlw	1	; case 1
  8043  004C' B4D8               	btfsc	status,2,c
  8044  004E' D7F1               	goto	l614
  8045  0050' D7F3               	goto	l615
  8046  0052'                    
  8047                           ; BSR set to: 0
  8048                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
  8049                           
  8050                           ; BSR set to: 0
  8051  0052' 0E07               	movlw	7
  8052  0054' 1700'              	andwf	RADIO_DIO0@opMode& (0+255),f,b
  8053                           
  8054                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
  8055  0056' 0E03               	movlw	3
  8056  0058' 1900'              	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8057  005A' A4D8               	btfss	status,2,c
  8058  005C' D003               	goto	l619
  8059                           
  8060                           ; BSR set to: 0
  8061                           ;radio_driver_SX1276.c: 1209: {
  8062                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
  8063  005E' EC00' F000'        	call	_RADIO_FSKPacketSent	;wreg free
  8064                           
  8065                           ;radio_driver_SX1276.c: 1212: }
  8066  0062' 0012               	return	
  8067  0064'                    l619:
  8068                           
  8069                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
  8070  0064' 0E05               	movlw	5
  8071  0066' 0100               	movlb	0	; () banked
  8072  0068' 1900'              	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8073  006A' A4D8               	btfss	status,2,c
  8074  006C' D003               	goto	l621
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;radio_driver_SX1276.c: 1214: {
  8078                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
  8079  006E' EC00' F000'        	call	_RADIO_FSKPayloadReady	;wreg free
  8080                           
  8081                           ;radio_driver_SX1276.c: 1217: }
  8082  0072' 0012               	return	
  8083  0074'                    l621:
  8084                           
  8085                           ;radio_driver_SX1276.c: 1218: else
  8086                           ;radio_driver_SX1276.c: 1219: {
  8087                           ;radio_driver_SX1276.c: 1220: RADIO_UnhandledInterrupt(MODULATION_FSK);
  8088  0074' 0E00               	movlw	0
  8089  0076' EC00' F000'        	call	_RADIO_UnhandledInterrupt
  8090                           
  8091                           ;radio_driver_SX1276.c: 1221: }
  8092                           ;radio_driver_SX1276.c: 1222: break;
  8093  007A' 0012               	return	
  8094  007C'                    
  8095                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
  8096  007C' 0E00               	movlw	0
  8097  007E' EC00' F000'        	call	_RADIO_UnhandledInterrupt
  8098                           
  8099                           ;radio_driver_SX1276.c: 1226: }
  8100                           
  8101                           ;radio_driver_SX1276.c: 1225: break;
  8102  0082' 0012               	return	
  8103  0084'                    l617:
  8104  0084' 0100               	movlb	0	; () banked
  8105  0086' 5100'              	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8106                           
  8107                           ; Switch size 1, requested type "space"
  8108                           ; Number of cases is 1, Range of values is 0 to 0
  8109                           ; switch strategies available:
  8110                           ; Name         Instructions Cycles
  8111                           ; simple_byte            4     3 (average)
  8112                           ;	Chosen strategy is simple_byte
  8113  0088' 0A00               	xorlw	0	; case 0
  8114  008A' B4D8               	btfsc	status,2,c
  8115  008C' D7E2               	goto	l618
  8116  008E' D7F6               	goto	l624
  8117  0090'                    __end_of_RADIO_DIO0:
  8118                           	opt stack 0
  8119                           tosu	equ	0xFFF
  8120                           tosh	equ	0xFFE
  8121                           tosl	equ	0xFFD
  8122                           pclath	equ	0xFFA
  8123                           tblptru	equ	0xFF8
  8124                           tblptrh	equ	0xFF7
  8125                           tblptrl	equ	0xFF6
  8126                           tablat	equ	0xFF5
  8127                           prodh	equ	0xFF4
  8128                           prodl	equ	0xFF3
  8129                           intcon	equ	0xFF2
  8130                           intcon2	equ	0xFF1
  8131                           intcon3	equ	0xFF0
  8132                           postinc0	equ	0xFEE
  8133                           wreg	equ	0xFE8
  8134                           postinc1	equ	0xFE6
  8135                           postdec1	equ	0xFE5
  8136                           plusw1	equ	0xFE3
  8137                           fsr1h	equ	0xFE2
  8138                           fsr1l	equ	0xFE1
  8139                           indf2	equ	0xFDF
  8140                           postinc2	equ	0xFDE
  8141                           postdec2	equ	0xFDD
  8142                           fsr2h	equ	0xFDA
  8143                           fsr2l	equ	0xFD9
  8144                           status	equ	0xFD8
  8145                           
  8146 ;; *************** function _RADIO_UnhandledInterrupt *****************
  8147 ;; Defined at:
  8148 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;  modulation      1    wreg     enum E6984
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;  modulation      1    3[BANK0 ] enum E6984
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  1    wreg      void 
  8155 ;; Registers used:
  8156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8163 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8165 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8166 ;;Total ram usage:        1 bytes
  8167 ;; Hardware stack levels used:    1
  8168 ;; Hardware stack levels required when called:   10
  8169 ;; This function calls:
  8170 ;;		_RADIO_RegisterWrite
  8171 ;; This function is called by:
  8172 ;;		_RADIO_DIO0
  8173 ;;		_RADIO_DIO1
  8174 ;;		_RADIO_DIO2
  8175 ;;		_RADIO_DIO3
  8176 ;;		_RADIO_DIO4
  8177 ;;		_RADIO_DIO5
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           	psect	text46
  8182  0000'                    __ptext46:
  8183                           	opt stack 0
  8184  0000'                    _RADIO_UnhandledInterrupt:
  8185                           	opt stack 18
  8186                           
  8187                           ;incstack = 0
  8188                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  8189  0000' 0100               	movlb	0	; () banked
  8190  0002' 6F00'              	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
  8191                           
  8192                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
  8193  0004' 0100               	movlb	0	; () banked
  8194  0006' 0500'              	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
  8195  0008' A4D8               	btfss	status,2,c
  8196  000A' D006               	goto	l600
  8197                           
  8198                           ; BSR set to: 0
  8199                           ;radio_driver_SX1276.c: 1145: {
  8200                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
  8201  000C' 0EFF               	movlw	255
  8202  000E' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
  8203  0010' 0E12               	movlw	18
  8204  0012' EC00' F000'        	call	_RADIO_RegisterWrite
  8205                           
  8206                           ;radio_driver_SX1276.c: 1147: }
  8207  0016' 0012               	return	
  8208  0018'                    l600:
  8209                           
  8210                           ;radio_driver_SX1276.c: 1148: else
  8211                           ;radio_driver_SX1276.c: 1149: {
  8212                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
  8213  0018' 0EFF               	movlw	255
  8214  001A' 0100               	movlb	0	; () banked
  8215  001C' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
  8216  001E' 0E3E               	movlw	62
  8217  0020' EC00' F000'        	call	_RADIO_RegisterWrite
  8218                           
  8219                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
  8220  0024' 0EFF               	movlw	255
  8221  0026' 0100               	movlb	0	; () banked
  8222  0028' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
  8223  002A' 0E3F               	movlw	63
  8224  002C' EC00' F000'        	call	_RADIO_RegisterWrite
  8225  0030' 0012               	return	
  8226  0032'                    __end_of_RADIO_UnhandledInterrupt:
  8227                           	opt stack 0
  8228                           tosu	equ	0xFFF
  8229                           tosh	equ	0xFFE
  8230                           tosl	equ	0xFFD
  8231                           pclath	equ	0xFFA
  8232                           tblptru	equ	0xFF8
  8233                           tblptrh	equ	0xFF7
  8234                           tblptrl	equ	0xFF6
  8235                           tablat	equ	0xFF5
  8236                           prodh	equ	0xFF4
  8237                           prodl	equ	0xFF3
  8238                           intcon	equ	0xFF2
  8239                           intcon2	equ	0xFF1
  8240                           intcon3	equ	0xFF0
  8241                           postinc0	equ	0xFEE
  8242                           wreg	equ	0xFE8
  8243                           postinc1	equ	0xFE6
  8244                           postdec1	equ	0xFE5
  8245                           plusw1	equ	0xFE3
  8246                           fsr1h	equ	0xFE2
  8247                           fsr1l	equ	0xFE1
  8248                           indf2	equ	0xFDF
  8249                           postinc2	equ	0xFDE
  8250                           postdec2	equ	0xFDD
  8251                           fsr2h	equ	0xFDA
  8252                           fsr2l	equ	0xFD9
  8253                           status	equ	0xFD8
  8254                           
  8255 ;; *************** function _RADIO_TxDone *****************
  8256 ;; Defined at:
  8257 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;		None
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;  timeOnAir       4  135[BANK0 ] unsigned long 
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  1    wreg      void 
  8264 ;; Registers used:
  8265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8274 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8275 ;;Total ram usage:       12 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; Hardware stack levels required when called:   15
  8278 ;; This function calls:
  8279 ;;		_LORAWAN_TxDone
  8280 ;;		_RADIO_RegisterWrite
  8281 ;;		_RADIO_WriteMode
  8282 ;;		_SwTimerReadValue
  8283 ;;		_SwTimerStop
  8284 ;;		___lmul
  8285 ;; This function is called by:
  8286 ;;		_RADIO_DIO0
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           	psect	text47
  8291  0000'                    __ptext47:
  8292                           	opt stack 0
  8293  0000'                    _RADIO_TxDone:
  8294                           	opt stack 13
  8295                           
  8296                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
  8297                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8298                           
  8299                           ;incstack = 0
  8300  0000' 0101               	movlb	1	; () banked
  8301  0002' 5100'              	movf	(_RadioConfiguration+41)& (0+255),w,b
  8302  0004' EC00' F000'        	call	_SwTimerStop
  8303                           
  8304                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
  8305  0008' 0E08               	movlw	8
  8306  000A' 0100               	movlb	0	; () banked
  8307  000C' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
  8308  000E' 0E12               	movlw	18
  8309  0010' EC00' F000'        	call	_RADIO_RegisterWrite
  8310                           
  8311                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8312  0014' C02A' F005'        	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8313  0018' 0E00               	movlw	0
  8314  001A' 0100               	movlb	0	; () banked
  8315  001C' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
  8316  001E' 0E00               	movlw	0
  8317  0020' EC00' F000'        	call	_RADIO_WriteMode
  8318                           
  8319                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
  8320  0024' 0101               	movlb	1	; () banked
  8321  0026' 9100'              	bcf	(_RadioConfiguration+35)& (0+255),0,b
  8322                           
  8323                           ; BSR set to: 1
  8324                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  8325  0028' B900'              	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  8326  002A' 0012               	return	
  8327                           
  8328                           ; BSR set to: 1
  8329                           ;radio_driver_SX1276.c: 1087: {
  8330                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
  8331  002C' 5100'              	movf	(_RadioConfiguration+39)& (0+255),w,b
  8332  002E' EC00' F000'        	call	_SwTimerReadValue
  8333  0032' 0100               	movlb	0	; () banked
  8334  0034' 5100'              	movf	(?_SwTimerReadValue+3)& (0+255),w,b
  8335  0036' E108               	bnz	u19100
  8336  0038' 0E1F               	movlw	31
  8337  003A' 5D00'              	subwf	?_SwTimerReadValue& (0+255),w,b
  8338  003C' 0EAC               	movlw	172
  8339  003E' 5900'              	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
  8340  0040' 0EDF               	movlw	223
  8341  0042' 5900'              	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
  8342  0044' A0D8               	btfss	status,0,c
  8343  0046' D021               	goto	l575
  8344  0048'                    u19100:
  8345                           
  8346                           ; BSR set to: 0
  8347  0048' 0101               	movlb	1	; () banked
  8348  004A' 5100'              	movf	(_RadioConfiguration+39)& (0+255),w,b
  8349  004C' EC00' F000'        	call	_SwTimerReadValue
  8350  0050' 0E0D               	movlw	13
  8351  0052' D006               	goto	u19110
  8352  0054'                    u19115:
  8353  0054' 0100               	movlb	0	; () banked
  8354  0056' 90D8               	bcf	status,0,c
  8355  0058' 3300'              	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
  8356  005A' 3300'              	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
  8357  005C' 3300'              	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
  8358  005E' 3300'              	rrcf	?_SwTimerReadValue& (0+255),f,b
  8359  0060'                    u19110:
  8360  0060' 2EE8               	decfsz	wreg,f,c
  8361  0062' D7F8               	goto	u19115
  8362  0064' C031' F03A'        	movff	?_SwTimerReadValue,___lmul@multiplier
  8363  0068' C032' F03B'        	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  8364  006C' C033' F03C'        	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  8365  0070' C034' F03D'        	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  8366  0074' 0E7D               	movlw	125
  8367  0076' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
  8368  0078' 0E00               	movlw	0
  8369  007A' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
  8370  007C' 0E00               	movlw	0
  8371  007E' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
  8372  0080' 0E00               	movlw	0
  8373  0082' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
  8374  0084' EC00' F000'        	call	___lmul	;wreg free
  8375  0088' D021               	goto	L5
  8376  008A'                    l575:
  8377  008A' 0101               	movlb	1	; () banked
  8378  008C' 5100'              	movf	(_RadioConfiguration+39)& (0+255),w,b
  8379  008E' EC00' F000'        	call	_SwTimerReadValue
  8380  0092' C031' F03A'        	movff	?_SwTimerReadValue,___lmul@multiplier
  8381  0096' C032' F03B'        	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  8382  009A' C033' F03C'        	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  8383  009E' C034' F03D'        	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  8384  00A2' 0E7D               	movlw	125
  8385  00A4' 0100               	movlb	0	; () banked
  8386  00A6' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
  8387  00A8' 0E00               	movlw	0
  8388  00AA' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
  8389  00AC' 0E00               	movlw	0
  8390  00AE' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
  8391  00B0' 0E00               	movlw	0
  8392  00B2' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
  8393  00B4' EC00' F000'        	call	___lmul	;wreg free
  8394  00B8' 0E0D               	movlw	13
  8395  00BA' D006               	goto	u19120
  8396  00BC'                    u19125:
  8397  00BC' 0100               	movlb	0	; () banked
  8398  00BE' 90D8               	bcf	status,0,c
  8399  00C0' 3300'              	rrcf	(?___lmul+3)& (0+255),f,b
  8400  00C2' 3300'              	rrcf	(?___lmul+2)& (0+255),f,b
  8401  00C4' 3300'              	rrcf	(?___lmul+1)& (0+255),f,b
  8402  00C6' 3300'              	rrcf	?___lmul& (0+255),f,b
  8403  00C8'                    u19120:
  8404  00C8' 2EE8               	decfsz	wreg,f,c
  8405  00CA' D7F8               	goto	u19125
  8406  00CC'                    L5:
  8407  00CC' C03A' F08B'        	movff	?___lmul,_RADIO_TxDone$793
  8408  00D0' C03B' F08C'        	movff	?___lmul+1,_RADIO_TxDone$793+1
  8409  00D4' C03C' F08D'        	movff	?___lmul+2,_RADIO_TxDone$793+2
  8410  00D8' C03D' F08E'        	movff	?___lmul+3,_RADIO_TxDone$793+3
  8411                           
  8412                           ; BSR set to: 0
  8413  00DC' C08B' F083'        	movff	_RADIO_TxDone$793,??_RADIO_TxDone
  8414  00E0' C08C' F084'        	movff	_RADIO_TxDone$793+1,??_RADIO_TxDone+1
  8415  00E4' C08D' F085'        	movff	_RADIO_TxDone$793+2,??_RADIO_TxDone+2
  8416  00E8' C08E' F086'        	movff	_RADIO_TxDone$793+3,??_RADIO_TxDone+3
  8417  00EC' 0100               	movlb	0	; () banked
  8418  00EE' 1F00'              	comf	??_RADIO_TxDone& (0+255),f,b
  8419  00F0' 1F00'              	comf	(??_RADIO_TxDone+1)& (0+255),f,b
  8420  00F2' 1F00'              	comf	(??_RADIO_TxDone+2)& (0+255),f,b
  8421  00F4' 1F00'              	comf	(??_RADIO_TxDone+3)& (0+255),f,b
  8422  00F6' 2B00'              	incf	??_RADIO_TxDone& (0+255),f,b
  8423  00F8' 0E00               	movlw	0
  8424  00FA' 2300'              	addwfc	(??_RADIO_TxDone+1)& (0+255),f,b
  8425  00FC' 2300'              	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  8426  00FE' 2300'              	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  8427  0100' 0E20               	movlw	32
  8428  0102' 2500'              	addwf	??_RADIO_TxDone& (0+255),w,b
  8429  0104' 6F00'              	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  8430  0106' 0E4E               	movlw	78
  8431  0108' 2100'              	addwfc	(??_RADIO_TxDone+1)& (0+255),w,b
  8432  010A' 6F00'              	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  8433  010C' 0E00               	movlw	0
  8434  010E' 2100'              	addwfc	(??_RADIO_TxDone+2)& (0+255),w,b
  8435  0110' 6F00'              	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  8436  0112' 0E00               	movlw	0
  8437  0114' 2100'              	addwfc	(??_RADIO_TxDone+3)& (0+255),w,b
  8438  0116' 6F00'              	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
  8442  0118' C087' F05B'        	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  8443  011C' C088' F05C'        	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  8444  0120' EC00' F000'        	call	_LORAWAN_TxDone	;wreg free
  8445  0124' 0012               	return	
  8446  0126'                    __end_of_RADIO_TxDone:
  8447                           	opt stack 0
  8448                           tosu	equ	0xFFF
  8449                           tosh	equ	0xFFE
  8450                           tosl	equ	0xFFD
  8451                           pclath	equ	0xFFA
  8452                           tblptru	equ	0xFF8
  8453                           tblptrh	equ	0xFF7
  8454                           tblptrl	equ	0xFF6
  8455                           tablat	equ	0xFF5
  8456                           prodh	equ	0xFF4
  8457                           prodl	equ	0xFF3
  8458                           intcon	equ	0xFF2
  8459                           intcon2	equ	0xFF1
  8460                           intcon3	equ	0xFF0
  8461                           postinc0	equ	0xFEE
  8462                           wreg	equ	0xFE8
  8463                           postinc1	equ	0xFE6
  8464                           postdec1	equ	0xFE5
  8465                           plusw1	equ	0xFE3
  8466                           fsr1h	equ	0xFE2
  8467                           fsr1l	equ	0xFE1
  8468                           indf2	equ	0xFDF
  8469                           postinc2	equ	0xFDE
  8470                           postdec2	equ	0xFDD
  8471                           fsr2h	equ	0xFDA
  8472                           fsr2l	equ	0xFD9
  8473                           status	equ	0xFD8
  8474                           
  8475 ;; *************** function _RADIO_RxDone *****************
  8476 ;; Defined at:
  8477 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8478 ;; Parameters:    Size  Location     Type
  8479 ;;		None
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;  i               1  149[BANK0 ] unsigned char 
  8482 ;;  irqFlags        1  148[BANK0 ] unsigned char 
  8483 ;; Return value:  Size  Location     Type
  8484 ;;                  1    wreg      void 
  8485 ;; Registers used:
  8486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8493 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8494 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8495 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8496 ;;Total ram usage:        3 bytes
  8497 ;; Hardware stack levels used:    1
  8498 ;; Hardware stack levels required when called:   16
  8499 ;; This function calls:
  8500 ;;		_HALSPICSAssert
  8501 ;;		_HALSPICSDeassert
  8502 ;;		_HALSPISend
  8503 ;;		_LORAWAN_RxDone
  8504 ;;		_RADIO_RegisterRead
  8505 ;;		_RADIO_RegisterWrite
  8506 ;;		_RADIO_WriteMode
  8507 ;;		_SwTimerStop
  8508 ;;		___abdiv
  8509 ;; This function is called by:
  8510 ;;		_RADIO_DIO0
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           	psect	text48
  8515  0000'                    __ptext48:
  8516                           	opt stack 0
  8517  0000'                    _RADIO_RxDone:
  8518                           	opt stack 12
  8519                           
  8520                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
  8521                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
  8522                           
  8523                           ;incstack = 0
  8524  0000' 0E12               	movlw	18
  8525  0002' EC00' F000'        	call	_RADIO_RegisterRead
  8526  0006' 0100               	movlb	0	; () banked
  8527  0008' 6F00'              	movwf	RADIO_RxDone@irqFlags& (0+255),b
  8528                           
  8529                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  8530  000A' 0E70               	movlw	112
  8531  000C' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
  8532  000E' 0E12               	movlw	18
  8533  0010' EC00' F000'        	call	_RADIO_RegisterWrite
  8534                           
  8535                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
  8536  0014' 0100               	movlb	0	; () banked
  8537  0016' 5100'              	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  8538  0018' 0B50               	andlw	80
  8539  001A' 0A50               	xorlw	80
  8540  001C' A4D8               	btfss	status,2,c
  8541  001E' 0012               	return	
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;radio_driver_SX1276.c: 969: {
  8545                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8546  0020' 0101               	movlb	1	; () banked
  8547  0022' 5100'              	movf	(_RadioConfiguration+41)& (0+255),w,b
  8548  0024' EC00' F000'        	call	_SwTimerStop
  8549                           
  8550                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
  8551  0028' 0E1C               	movlw	28
  8552  002A' EC00' F000'        	call	_RADIO_RegisterRead
  8553  002E' 0100               	movlb	0	; () banked
  8554  0030' 6F00'              	movwf	RADIO_RxDone@i& (0+255),b
  8555                           
  8556                           ; BSR set to: 0
  8557                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
  8558  0032' 0101               	movlb	1	; () banked
  8559  0034' 5100'              	movf	(_RadioConfiguration+28)& (0+255),w,b
  8560  0036' B4D8               	btfsc	status,2,c
  8561  0038' D004               	goto	u19020
  8562                           
  8563                           ; BSR set to: 1
  8564  003A' 0100               	movlb	0	; () banked
  8565  003C' AB00'              	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
  8566                           
  8567                           ; BSR set to: 0
  8568  003E' AD00'              	btfss	RADIO_RxDone@i& (0+255),6,b
  8569  0040' D03F               	goto	l547
  8570  0042'                    u19020:
  8571                           
  8572                           ;radio_driver_SX1276.c: 976: {
  8573                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
  8574                           
  8575                           ; BSR set to: 0
  8576  0042' 0E13               	movlw	19
  8577  0044' EC00' F000'        	call	_RADIO_RegisterRead
  8578  0048' 0101               	movlb	1	; () banked
  8579  004A' 6F00'              	movwf	(_RadioConfiguration+36)& (0+255),b
  8580                           
  8581                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
  8582  004C' 0E00               	movlw	0
  8583  004E' 0100               	movlb	0	; () banked
  8584  0050' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
  8585  0052' 0E0D               	movlw	13
  8586  0054' EC00' F000'        	call	_RADIO_RegisterWrite
  8587                           
  8588                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
  8589  0058' EC00' F000'        	call	_HALSPICSAssert	;wreg free
  8590                           
  8591                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
  8592  005C' 0E00               	movlw	0
  8593  005E' EC00' F000'        	call	_HALSPISend
  8594                           
  8595                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  8596  0062' 0E00               	movlw	0
  8597  0064' 0100               	movlb	0	; () banked
  8598  0066' 6F00'              	movwf	RADIO_RxDone@i& (0+255),b
  8599  0068' D012               	goto	l550
  8600  006A'                    
  8601                           ; BSR set to: 0
  8602                           ;radio_driver_SX1276.c: 990: {
  8603                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  8604                           
  8605                           ; BSR set to: 0
  8606  006A' 0EFF               	movlw	255
  8607  006C' EC00' F000'        	call	_HALSPISend
  8608  0070' 0100               	movlb	0	; () banked
  8609  0072' 6F00'              	movwf	??_RADIO_RxDone& (0+255),b
  8610  0074' 5100'              	movf	RADIO_RxDone@i& (0+255),w,b
  8611  0076' 0D01               	mullw	1
  8612  0078' 50F3               	movf	prodl,w,c
  8613  007A' 0101               	movlb	1	; () banked
  8614  007C' 2500'              	addwf	(_RadioConfiguration+37)& (0+255),w,b
  8615  007E' 6ED9               	movwf	fsr2l,c
  8616  0080' 50F4               	movf	prodh,w,c
  8617  0082' 2100'              	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  8618  0084' 6EDA               	movwf	fsr2h,c
  8619  0086' C093' FFDF         	movff	??_RADIO_RxDone,indf2
  8620                           
  8621                           ; BSR set to: 1
  8622  008A' 0100               	movlb	0	; () banked
  8623  008C' 2B00'              	incf	RADIO_RxDone@i& (0+255),f,b
  8624  008E'                    l550:
  8625                           
  8626                           ; BSR set to: 0
  8627                           
  8628                           ; BSR set to: 0
  8629  008E' 0101               	movlb	1	; () banked
  8630  0090' 5100'              	movf	(_RadioConfiguration+36)& (0+255),w,b
  8631  0092' 0100               	movlb	0	; () banked
  8632  0094' 5D00'              	subwf	RADIO_RxDone@i& (0+255),w,b
  8633  0096' A0D8               	btfss	status,0,c
  8634  0098' D7E8               	goto	l551
  8635                           
  8636                           ; BSR set to: 0
  8637                           ;radio_driver_SX1276.c: 992: }
  8638                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
  8639                           
  8640                           ; BSR set to: 0
  8641  009A' EC00' F000'        	call	_HALSPICSDeassert	;wreg free
  8642                           
  8643                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
  8644  009E' 0101               	movlb	1	; () banked
  8645  00A0' 8500'              	bsf	(_RadioConfiguration+35)& (0+255),2,b
  8646                           
  8647                           ; BSR set to: 1
  8648                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  8649  00A2' 0E19               	movlw	25
  8650  00A4' EC00' F000'        	call	_RADIO_RegisterRead
  8651  00A8' 0101               	movlb	1	; () banked
  8652  00AA' 6F00'              	movwf	(_RadioConfiguration+50)& (0+255),b
  8653                           
  8654                           ; BSR set to: 1
  8655                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
  8656  00AC' 0E04               	movlw	4
  8657  00AE' 0100               	movlb	0	; () banked
  8658  00B0' 6F00'              	movwf	___abdiv@divisor& (0+255),b
  8659  00B2' 0101               	movlb	1	; () banked
  8660  00B4' 5100'              	movf	(_RadioConfiguration+50)& (0+255),w,b
  8661  00B6' EC00' F000'        	call	___abdiv
  8662  00BA' 0101               	movlb	1	; () banked
  8663  00BC' 6F00'              	movwf	(_RadioConfiguration+50)& (0+255),b
  8664                           
  8665                           ;radio_driver_SX1276.c: 998: }
  8666  00BE' D002               	goto	l553
  8667  00C0'                    l547:
  8668                           
  8669                           ;radio_driver_SX1276.c: 999: else
  8670                           ;radio_driver_SX1276.c: 1000: {
  8671                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
  8672                           
  8673                           ; BSR set to: 1
  8674  00C0' 0101               	movlb	1	; () banked
  8675  00C2' 8700'              	bsf	(_RadioConfiguration+35)& (0+255),3,b
  8676  00C4'                    l553:
  8677                           
  8678                           ; BSR set to: 1
  8679                           ;radio_driver_SX1276.c: 1003: }
  8680                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8681                           
  8682                           ; BSR set to: 1
  8683  00C4' C02A' F005'        	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8684  00C8' 0E00               	movlw	0
  8685  00CA' 0100               	movlb	0	; () banked
  8686  00CC' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
  8687  00CE' 0E00               	movlw	0
  8688  00D0' EC00' F000'        	call	_RADIO_WriteMode
  8689                           
  8690                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
  8691  00D4' 0101               	movlb	1	; () banked
  8692  00D6' 9300'              	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8693                           
  8694                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  8695  00D8' C037' F066'        	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  8696  00DC' C038' F067'        	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  8697  00E0' C036' F068'        	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  8698  00E4' EC00' F000'        	call	_LORAWAN_RxDone	;wreg free
  8699  00E8' 0012               	return	
  8700  00EA'                    __end_of_RADIO_RxDone:
  8701                           	opt stack 0
  8702                           tosu	equ	0xFFF
  8703                           tosh	equ	0xFFE
  8704                           tosl	equ	0xFFD
  8705                           pclath	equ	0xFFA
  8706                           tblptru	equ	0xFF8
  8707                           tblptrh	equ	0xFF7
  8708                           tblptrl	equ	0xFF6
  8709                           tablat	equ	0xFF5
  8710                           prodh	equ	0xFF4
  8711                           prodl	equ	0xFF3
  8712                           intcon	equ	0xFF2
  8713                           intcon2	equ	0xFF1
  8714                           intcon3	equ	0xFF0
  8715                           postinc0	equ	0xFEE
  8716                           wreg	equ	0xFE8
  8717                           postinc1	equ	0xFE6
  8718                           postdec1	equ	0xFE5
  8719                           plusw1	equ	0xFE3
  8720                           fsr1h	equ	0xFE2
  8721                           fsr1l	equ	0xFE1
  8722                           indf2	equ	0xFDF
  8723                           postinc2	equ	0xFDE
  8724                           postdec2	equ	0xFDD
  8725                           fsr2h	equ	0xFDA
  8726                           fsr2l	equ	0xFD9
  8727                           status	equ	0xFD8
  8728                           
  8729 ;; *************** function ___abdiv *****************
  8730 ;; Defined at:
  8731 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abdiv.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;  dividend        1    wreg     char 
  8734 ;;  divisor         1    0[BANK0 ] char 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  dividend        1    6[BANK0 ] char 
  8737 ;;  quotient        1    5[BANK0 ] char 
  8738 ;;  sign            1    4[BANK0 ] unsigned char 
  8739 ;;  counter         1    3[BANK0 ] unsigned char 
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  1    wreg      char 
  8742 ;; Registers used:
  8743 ;;		wreg, status,2, status,0
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8749 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8750 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8751 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8752 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8753 ;;Total ram usage:        7 bytes
  8754 ;; Hardware stack levels used:    1
  8755 ;; Hardware stack levels required when called:    7
  8756 ;; This function calls:
  8757 ;;		Nothing
  8758 ;; This function is called by:
  8759 ;;		_RADIO_RxDone
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           	psect	text49
  8764  0000'                    __ptext49:
  8765                           	opt stack 0
  8766  0000'                    ___abdiv:
  8767                           	opt stack 20
  8768                           
  8769                           ;incstack = 0
  8770                           ;___abdiv@dividend stored from wreg
  8771  0000' 0100               	movlb	0	; () banked
  8772  0002' 6F00'              	movwf	___abdiv@dividend& (0+255),b
  8773  0004' 0E00               	movlw	0
  8774  0006' 0100               	movlb	0	; () banked
  8775  0008' 6F00'              	movwf	___abdiv@sign& (0+255),b
  8776                           
  8777                           ; BSR set to: 0
  8778  000A' AF00'              	btfss	___abdiv@divisor& (0+255),7,b
  8779  000C' D003               	goto	l2596
  8780                           
  8781                           ; BSR set to: 0
  8782  000E' 6D00'              	negf	___abdiv@divisor& (0+255),b
  8783                           
  8784                           ; BSR set to: 0
  8785  0010' 0E01               	movlw	1
  8786  0012' 6F00'              	movwf	___abdiv@sign& (0+255),b
  8787  0014'                    l2596:
  8788                           
  8789                           ; BSR set to: 0
  8790                           
  8791                           ; BSR set to: 0
  8792  0014' AF00'              	btfss	___abdiv@dividend& (0+255),7,b
  8793  0016' D003               	goto	l2597
  8794                           
  8795                           ; BSR set to: 0
  8796  0018' 6D00'              	negf	___abdiv@dividend& (0+255),b
  8797                           
  8798                           ; BSR set to: 0
  8799  001A' 0E01               	movlw	1
  8800  001C' 1B00'              	xorwf	___abdiv@sign& (0+255),f,b
  8801  001E'                    l2597:
  8802                           
  8803                           ; BSR set to: 0
  8804                           
  8805                           ; BSR set to: 0
  8806  001E' 0E00               	movlw	0
  8807  0020' 6F00'              	movwf	___abdiv@quotient& (0+255),b
  8808                           
  8809                           ; BSR set to: 0
  8810  0022' 5100'              	movf	___abdiv@divisor& (0+255),w,b
  8811  0024' B4D8               	btfsc	status,2,c
  8812  0026' D01A               	goto	l2604
  8813                           
  8814                           ; BSR set to: 0
  8815  0028' 0E01               	movlw	1
  8816  002A' 6F00'              	movwf	___abdiv@counter& (0+255),b
  8817  002C' D003               	goto	l2599
  8818  002E'                    
  8819                           ; BSR set to: 0
  8820                           
  8821                           ; BSR set to: 0
  8822  002E' 90D8               	bcf	status,0,c
  8823  0030' 3700'              	rlcf	___abdiv@divisor& (0+255),f,b
  8824                           
  8825                           ; BSR set to: 0
  8826  0032' 2B00'              	incf	___abdiv@counter& (0+255),f,b
  8827  0034'                    l2599:
  8828                           
  8829                           ; BSR set to: 0
  8830                           
  8831                           ; BSR set to: 0
  8832  0034' C000' F001'        	movff	___abdiv@divisor,??___abdiv
  8833  0038' 6B00'              	clrf	(??___abdiv+1)& (0+255),b
  8834  003A' BF00'              	btfsc	??___abdiv& (0+255),7,b
  8835  003C' 0700'              	decf	(??___abdiv+1)& (0+255),f,b
  8836  003E' AF00'              	btfss	??___abdiv& (0+255),7,b
  8837  0040' D7F6               	goto	l2600
  8838  0042'                    u18940:
  8839                           
  8840                           ; BSR set to: 0
  8841                           
  8842                           ; BSR set to: 0
  8843                           
  8844                           ; BSR set to: 0
  8845  0042' 90D8               	bcf	status,0,c
  8846  0044' 3700'              	rlcf	___abdiv@quotient& (0+255),f,b
  8847  0046' 5100'              	movf	___abdiv@divisor& (0+255),w,b
  8848  0048' 5D00'              	subwf	___abdiv@dividend& (0+255),w,b
  8849  004A' A0D8               	btfss	status,0,c
  8850  004C' D003               	goto	l2603
  8851                           
  8852                           ; BSR set to: 0
  8853  004E' 5100'              	movf	___abdiv@divisor& (0+255),w,b
  8854  0050' 5F00'              	subwf	___abdiv@dividend& (0+255),f,b
  8855                           
  8856                           ; BSR set to: 0
  8857  0052' 8100'              	bsf	___abdiv@quotient& (0+255),0,b
  8858  0054'                    l2603:
  8859                           
  8860                           ; BSR set to: 0
  8861                           
  8862                           ; BSR set to: 0
  8863  0054' 90D8               	bcf	status,0,c
  8864  0056' 3300'              	rrcf	___abdiv@divisor& (0+255),f,b
  8865                           
  8866                           ; BSR set to: 0
  8867  0058' 2F00'              	decfsz	___abdiv@counter& (0+255),f,b
  8868  005A' D7F3               	goto	u18940
  8869  005C'                    l2604:
  8870                           
  8871                           ; BSR set to: 0
  8872                           
  8873                           ; BSR set to: 0
  8874                           
  8875                           ; BSR set to: 0
  8876  005C' 5100'              	movf	___abdiv@sign& (0+255),w,b
  8877  005E' A4D8               	btfss	status,2,c
  8878                           
  8879                           ; BSR set to: 0
  8880  0060' 6D00'              	negf	___abdiv@quotient& (0+255),b
  8881                           
  8882                           ; BSR set to: 0
  8883                           
  8884                           ; BSR set to: 0
  8885  0062' 5100'              	movf	___abdiv@quotient& (0+255),w,b
  8886  0064' 0012               	return	
  8887  0066'                    __end_of___abdiv:
  8888                           	opt stack 0
  8889                           tosu	equ	0xFFF
  8890                           tosh	equ	0xFFE
  8891                           tosl	equ	0xFFD
  8892                           pclath	equ	0xFFA
  8893                           tblptru	equ	0xFF8
  8894                           tblptrh	equ	0xFF7
  8895                           tblptrl	equ	0xFF6
  8896                           tablat	equ	0xFF5
  8897                           prodh	equ	0xFF4
  8898                           prodl	equ	0xFF3
  8899                           intcon	equ	0xFF2
  8900                           intcon2	equ	0xFF1
  8901                           intcon3	equ	0xFF0
  8902                           postinc0	equ	0xFEE
  8903                           wreg	equ	0xFE8
  8904                           postinc1	equ	0xFE6
  8905                           postdec1	equ	0xFE5
  8906                           plusw1	equ	0xFE3
  8907                           fsr1h	equ	0xFE2
  8908                           fsr1l	equ	0xFE1
  8909                           indf2	equ	0xFDF
  8910                           postinc2	equ	0xFDE
  8911                           postdec2	equ	0xFDD
  8912                           fsr2h	equ	0xFDA
  8913                           fsr2l	equ	0xFD9
  8914                           status	equ	0xFD8
  8915                           
  8916 ;; *************** function _RADIO_FSKPayloadReady *****************
  8917 ;; Defined at:
  8918 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;		None
  8921 ;; Auto vars:     Size  Location     Type
  8922 ;;  i               1  149[BANK0 ] unsigned char 
  8923 ;;  irqFlags        1  148[BANK0 ] unsigned char 
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      void 
  8926 ;; Registers used:
  8927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8934 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8935 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8936 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8937 ;;Total ram usage:        3 bytes
  8938 ;; Hardware stack levels used:    1
  8939 ;; Hardware stack levels required when called:   16
  8940 ;; This function calls:
  8941 ;;		_HALSPICSAssert
  8942 ;;		_HALSPICSDeassert
  8943 ;;		_HALSPISend
  8944 ;;		_LORAWAN_RxDone
  8945 ;;		_LORAWAN_RxTimeout
  8946 ;;		_RADIO_RegisterRead
  8947 ;;		_RADIO_WriteMode
  8948 ;;		_SwTimerStop
  8949 ;; This function is called by:
  8950 ;;		_RADIO_DIO0
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           
  8954                           	psect	text50
  8955  0000'                    __ptext50:
  8956                           	opt stack 0
  8957  0000'                    _RADIO_FSKPayloadReady:
  8958                           	opt stack 12
  8959                           
  8960                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
  8961                           ;radio_driver_SX1276.c: 1013: uint8_t i;
  8962                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;incstack = 0
  8966  0000' 0E3F               	movlw	63
  8967  0002' EC00' F000'        	call	_RADIO_RegisterRead
  8968  0006' 0100               	movlb	0	; () banked
  8969  0008' 6F00'              	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
  8973  000A' A500'              	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
  8974  000C' 0012               	return	
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;radio_driver_SX1276.c: 1017: {
  8978                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8979  000E' 0101               	movlb	1	; () banked
  8980  0010' 5100'              	movf	(_RadioConfiguration+41)& (0+255),w,b
  8981  0012' EC00' F000'        	call	_SwTimerStop
  8982                           
  8983                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
  8984  0016' 0101               	movlb	1	; () banked
  8985  0018' 5100'              	movf	(_RadioConfiguration+40)& (0+255),w,b
  8986  001A' EC00' F000'        	call	_SwTimerStop
  8987                           
  8988                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
  8989  001E' EC00' F000'        	call	_HALSPICSAssert	;wreg free
  8990                           
  8991                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
  8992  0022' 0E00               	movlw	0
  8993  0024' EC00' F000'        	call	_HALSPISend
  8994                           
  8995                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
  8996  0028' 0EFF               	movlw	255
  8997  002A' EC00' F000'        	call	_HALSPISend
  8998  002E' 0101               	movlb	1	; () banked
  8999  0030' 6F00'              	movwf	(_RadioConfiguration+36)& (0+255),b
  9000                           
  9001                           ; BSR set to: 1
  9002                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9003  0032' 0E00               	movlw	0
  9004  0034' 0100               	movlb	0	; () banked
  9005  0036' 6F00'              	movwf	RADIO_FSKPayloadReady@i& (0+255),b
  9006  0038' D012               	goto	l558
  9007  003A'                    
  9008                           ; BSR set to: 0
  9009                           ;radio_driver_SX1276.c: 1029: {
  9010                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9011                           
  9012                           ; BSR set to: 0
  9013  003A' 0EFF               	movlw	255
  9014  003C' EC00' F000'        	call	_HALSPISend
  9015  0040' 0100               	movlb	0	; () banked
  9016  0042' 6F00'              	movwf	??_RADIO_FSKPayloadReady& (0+255),b
  9017  0044' 5100'              	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9018  0046' 0D01               	mullw	1
  9019  0048' 50F3               	movf	prodl,w,c
  9020  004A' 0101               	movlb	1	; () banked
  9021  004C' 2500'              	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9022  004E' 6ED9               	movwf	fsr2l,c
  9023  0050' 50F4               	movf	prodh,w,c
  9024  0052' 2100'              	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9025  0054' 6EDA               	movwf	fsr2h,c
  9026  0056' C093' FFDF         	movff	??_RADIO_FSKPayloadReady,indf2
  9027                           
  9028                           ; BSR set to: 1
  9029  005A' 0100               	movlb	0	; () banked
  9030  005C' 2B00'              	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
  9031  005E'                    l558:
  9032                           
  9033                           ; BSR set to: 0
  9034                           
  9035                           ; BSR set to: 0
  9036  005E' 0101               	movlb	1	; () banked
  9037  0060' 5100'              	movf	(_RadioConfiguration+36)& (0+255),w,b
  9038  0062' 0100               	movlb	0	; () banked
  9039  0064' 5D00'              	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9040  0066' A0D8               	btfss	status,0,c
  9041  0068' D7E8               	goto	l559
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;radio_driver_SX1276.c: 1031: }
  9045                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
  9046                           
  9047                           ; BSR set to: 0
  9048  006A' EC00' F000'        	call	_HALSPICSDeassert	;wreg free
  9049                           
  9050                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9051  006E' C02A' F005'        	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9052  0072' 0E00               	movlw	0
  9053  0074' 0100               	movlb	0	; () banked
  9054  0076' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
  9055  0078' 0E00               	movlw	0
  9056  007A' EC00' F000'        	call	_RADIO_WriteMode
  9057                           
  9058                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
  9059  007E' 0101               	movlb	1	; () banked
  9060  0080' 9300'              	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9061                           
  9062                           ; BSR set to: 1
  9063                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
  9064  0082' 0E80               	movlw	128
  9065  0084' 6F00'              	movwf	(_RadioConfiguration+50)& (0+255),b
  9066                           
  9067                           ; BSR set to: 1
  9068                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
  9069  0086' 0500'              	decf	(_RadioConfiguration+28)& (0+255),w,b
  9070  0088' A4D8               	btfss	status,2,c
  9071  008A' D008               	goto	l561
  9072                           
  9073                           ; BSR set to: 1
  9074                           ;radio_driver_SX1276.c: 1040: {
  9075                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
  9076  008C' 0100               	movlb	0	; () banked
  9077  008E' A300'              	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
  9078  0090' D002               	goto	l562
  9079                           
  9080                           ; BSR set to: 0
  9081                           ;radio_driver_SX1276.c: 1042: {
  9082                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
  9083  0092' 0101               	movlb	1	; () banked
  9084  0094' D003               	goto	l561
  9085  0096'                    l562:
  9086                           
  9087                           ;radio_driver_SX1276.c: 1045: else
  9088                           ;radio_driver_SX1276.c: 1046: {
  9089                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
  9090                           
  9091                           ; BSR set to: 1
  9092  0096' 0101               	movlb	1	; () banked
  9093  0098' 9500'              	bcf	(_RadioConfiguration+35)& (0+255),2,b
  9094                           
  9095                           ; BSR set to: 1
  9096                           ;radio_driver_SX1276.c: 1048: }
  9097                           ;radio_driver_SX1276.c: 1049: }
  9098  009A' D001               	goto	l564
  9099  009C'                    l561:
  9100                           
  9101                           ; BSR set to: 1
  9102                           ;radio_driver_SX1276.c: 1050: else
  9103                           ;radio_driver_SX1276.c: 1051: {
  9104                           ;radio_driver_SX1276.c: 1052: RadioConfiguration.flags |= (1 << (2));
  9105                           
  9106                           ; BSR set to: 1
  9107  009C' 8500'              	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9108  009E'                    l564:
  9109                           
  9110                           ; BSR set to: 1
  9111                           ;radio_driver_SX1276.c: 1053: }
  9112                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
  9113                           
  9114                           ; BSR set to: 1
  9115  009E' A500'              	btfss	(_RadioConfiguration+35)& (0+255),2,b
  9116  00A0' D009               	goto	l565
  9117                           
  9118                           ; BSR set to: 1
  9119                           ;radio_driver_SX1276.c: 1056: {
  9120                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9121  00A2' C037' F066'        	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9122  00A6' C038' F067'        	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9123  00AA' C036' F068'        	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9124  00AE' EC00' F000'        	call	_LORAWAN_RxDone	;wreg free
  9125                           
  9126                           ;radio_driver_SX1276.c: 1058: }
  9127  00B2' 0012               	return	
  9128  00B4'                    l565:
  9129                           
  9130                           ;radio_driver_SX1276.c: 1059: else
  9131                           ;radio_driver_SX1276.c: 1060: {
  9132                           ;radio_driver_SX1276.c: 1061: LORAWAN_RxTimeout();
  9133  00B4' EC00' F000'        	call	_LORAWAN_RxTimeout	;wreg free
  9134  00B8' 0012               	return	
  9135  00BA'                    __end_of_RADIO_FSKPayloadReady:
  9136                           	opt stack 0
  9137                           tosu	equ	0xFFF
  9138                           tosh	equ	0xFFE
  9139                           tosl	equ	0xFFD
  9140                           pclath	equ	0xFFA
  9141                           tblptru	equ	0xFF8
  9142                           tblptrh	equ	0xFF7
  9143                           tblptrl	equ	0xFF6
  9144                           tablat	equ	0xFF5
  9145                           prodh	equ	0xFF4
  9146                           prodl	equ	0xFF3
  9147                           intcon	equ	0xFF2
  9148                           intcon2	equ	0xFF1
  9149                           intcon3	equ	0xFF0
  9150                           postinc0	equ	0xFEE
  9151                           wreg	equ	0xFE8
  9152                           postinc1	equ	0xFE6
  9153                           postdec1	equ	0xFE5
  9154                           plusw1	equ	0xFE3
  9155                           fsr1h	equ	0xFE2
  9156                           fsr1l	equ	0xFE1
  9157                           indf2	equ	0xFDF
  9158                           postinc2	equ	0xFDE
  9159                           postdec2	equ	0xFDD
  9160                           fsr2h	equ	0xFDA
  9161                           fsr2l	equ	0xFD9
  9162                           status	equ	0xFD8
  9163                           
  9164 ;; *************** function _LORAWAN_RxTimeout *****************
  9165 ;; Defined at:
  9166 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;		None
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;  minim           4  102[BANK0 ] unsigned long 
  9171 ;;  i               1  106[BANK0 ] unsigned char 
  9172 ;; Return value:  Size  Location     Type
  9173 ;;                  1    wreg      void 
  9174 ;; Registers used:
  9175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  9176 ;; Tracked objects:
  9177 ;;		On entry : 0/0
  9178 ;;		On exit  : 0/0
  9179 ;;		Unchanged: 0/0
  9180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9182 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9183 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9184 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9185 ;;Total ram usage:        9 bytes
  9186 ;; Hardware stack levels used:    1
  9187 ;; Hardware stack levels required when called:   15
  9188 ;; This function calls:
  9189 ;;		_LORAWAN_ReceiveWindow2Callback
  9190 ;;		_RADIO_Transmit
  9191 ;;		_ResetParametersForConfirmedTransmission
  9192 ;;		_ResetParametersForUnconfirmedTransmission
  9193 ;;		_RxData
  9194 ;;		_SelectChannelForTransmission
  9195 ;;		_SetJoinFailState
  9196 ;;		_SwTimerSetTimeout
  9197 ;;		_SwTimerStart
  9198 ;;		___lldiv
  9199 ;; This function is called by:
  9200 ;;		_RADIO_FSKPayloadReady
  9201 ;;		_RADIO_RxTimeout
  9202 ;;		_RADIO_RxFSKTimeout
  9203 ;;		_RADIO_WatchdogTimeout
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text51
  9208  0000'                    __ptext51:
  9209                           	opt stack 0
  9210  0000'                    _LORAWAN_RxTimeout:
  9211                           	opt stack 12
  9212                           
  9213                           ;lorawan_eu.c: 466: uint8_t i;
  9214                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
  9215                           
  9216                           ;incstack = 0
  9217  0000' 0100               	movlb	0	; () banked
  9218  0002' 6900'              	setf	LORAWAN_RxTimeout@minim& (0+255),b
  9219  0004' 6900'              	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
  9220  0006' 6900'              	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
  9221  0008' 6900'              	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
  9222                           
  9223                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
  9224  000A' 0102               	movlb	2	; () banked
  9225  000C' B100'              	btfsc	(_loRa+3)& (0+255),0,b
  9226  000E' D190               	goto	l1061
  9227                           
  9228                           ; BSR set to: 2
  9229                           ;lorawan_eu.c: 470: {
  9230                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
  9231  0010' 5100'              	movf	(_loRa+2)& (0+255),w,b
  9232  0012' 0B0F               	andlw	15
  9233  0014' 0A03               	xorlw	3
  9234  0016' A4D8               	btfss	status,2,c
  9235  0018' D011               	goto	l1062
  9236                           
  9237                           ; BSR set to: 2
  9238                           ;lorawan_eu.c: 473: {
  9239                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
  9240  001A' 5100'              	movf	(_loRa+18)& (0+255),w,b
  9241  001C' A4D8               	btfss	status,2,c
  9242  001E' D005               	goto	l1063
  9243                           
  9244                           ; BSR set to: 2
  9245                           ;lorawan_eu.c: 475: {
  9246                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
  9247  0020' 5100'              	movf	(_loRa+2)& (0+255),w,b
  9248  0022' 0BF0               	andlw	-16
  9249  0024' 0904               	iorlw	4
  9250  0026' 6F00'              	movwf	(_loRa+2)& (0+255),b
  9251                           
  9252                           ;lorawan_eu.c: 477: }
  9253  0028' 0012               	return	
  9254  002A'                    l1063:
  9255                           
  9256                           ; BSR set to: 2
  9257                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
  9258                           
  9259                           ; BSR set to: 2
  9260  002A' 0E02               	movlw	2
  9261  002C' 1900'              	xorwf	(_loRa+18)& (0+255),w,b
  9262  002E' A4D8               	btfss	status,2,c
  9263  0030' 0012               	return	
  9264                           
  9265                           ; BSR set to: 2
  9266                           ;lorawan_eu.c: 479: {
  9267                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
  9268  0032' 0E00               	movlw	0
  9269  0034' 6EE6               	movwf	postinc1,c
  9270  0036' EC00' F000'        	call	_LORAWAN_ReceiveWindow2Callback	;wreg free
  9271                           
  9272                           ;lorawan_eu.c: 481: }
  9273                           ;lorawan_eu.c: 482: }
  9274  003A' 0012               	return	
  9275  003C'                    l1062:
  9276                           
  9277                           ; BSR set to: 2
  9278                           ;lorawan_eu.c: 483: else
  9279                           ;lorawan_eu.c: 484: {
  9280                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
  9281  003C' A500'              	btfss	_loRa& (0+255),2,b
  9282  003E' D003               	goto	l1067
  9283                           
  9284                           ; BSR set to: 2
  9285                           ;lorawan_eu.c: 487: {
  9286                           ;lorawan_eu.c: 488: SetJoinFailState();
  9287  0040' EC00' F000'        	call	_SetJoinFailState	;wreg free
  9288                           
  9289                           ;lorawan_eu.c: 489: }
  9290  0044' 0012               	return	
  9291  0046'                    l1067:
  9292                           
  9293                           ; BSR set to: 2
  9294                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
  9295  0046' A900'              	btfss	(_loRa+2)& (0+255),4,b
  9296  0048' 0012               	return	
  9297                           
  9298                           ; BSR set to: 2
  9299                           ;lorawan_eu.c: 492: {
  9300                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
  9301  004A' A100'              	btfss	_loRa& (0+255),0,b
  9302  004C' D058               	goto	l1070
  9303                           
  9304                           ; BSR set to: 2
  9305                           ;lorawan_eu.c: 494: {
  9306                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
  9307  004E' 5100'              	movf	(_loRa+217)& (0+255),w,b
  9308  0050' 5D00'              	subwf	(_loRa+215)& (0+255),w,b
  9309  0052' A0D8               	btfss	status,0,c
  9310  0054' D038               	goto	l1071
  9311                           
  9312                           ; BSR set to: 2
  9313                           ;lorawan_eu.c: 496: {
  9314                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9315  0056' 5100'              	movf	(_loRa+2)& (0+255),w,b
  9316  0058' 0BF0               	andlw	-16
  9317  005A' 0906               	iorlw	6
  9318  005C' 6F00'              	movwf	(_loRa+2)& (0+255),b
  9319                           
  9320                           ; BSR set to: 2
  9321                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
  9322  005E' 5100'              	movf	(_loRa+160)& (0+255),w,b
  9323  0060' 0100               	movlb	0	; () banked
  9324  0062' 6F00'              	movwf	??_LORAWAN_RxTimeout& (0+255),b
  9325  0064' 0102               	movlb	2	; () banked
  9326  0066' 5100'              	movf	(_loRa+161)& (0+255),w,b
  9327  0068' 0100               	movlb	0	; () banked
  9328  006A' 6F00'              	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
  9329  006C' 6B00'              	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
  9330  006E' 6B00'              	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
  9331  0070' 0E0C               	movlw	12
  9332  0072'                    u18445:
  9333  0072' 90D8               	bcf	status,0,c
  9334  0074' 3700'              	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
  9335  0076' 3700'              	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
  9336  0078' 3700'              	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
  9337  007A' 3700'              	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
  9338  007C' 2EE8               	decfsz	wreg,f,c
  9339  007E' D7F9               	goto	u18445
  9340  0080' C062' F000'        	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
  9341  0084' C063' F001'        	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
  9342  0088' C064' F002'        	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
  9343  008C' C065' F003'        	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
  9344  0090' 0E7D               	movlw	125
  9345  0092' 6F00'              	movwf	___lldiv@divisor& (0+255),b
  9346  0094' 0E00               	movlw	0
  9347  0096' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
  9348  0098' 0E00               	movlw	0
  9349  009A' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
  9350  009C' 0E00               	movlw	0
  9351  009E' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
  9352  00A0' EC00' F000'        	call	___lldiv	;wreg free
  9353  00A4' C000' F00D'        	movff	?___lldiv,SwTimerSetTimeout@timeout
  9354  00A8' C001' F00E'        	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
  9355  00AC' C002' F00F'        	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
  9356  00B0' C003' F010'        	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
  9357  00B4' 0102               	movlb	2	; () banked
  9358  00B6' 5100'              	movf	(_loRa+232)& (0+255),w,b
  9359  00B8' EC00' F000'        	call	_SwTimerSetTimeout
  9360                           
  9361                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
  9362  00BC' 0102               	movlb	2	; () banked
  9363  00BE' 5100'              	movf	(_loRa+232)& (0+255),w,b
  9364  00C0' EC00' F000'        	call	_SwTimerStart
  9365                           
  9366                           ;lorawan_eu.c: 500: }
  9367  00C4' 0012               	return	
  9368  00C6'                    l1071:
  9369                           
  9370                           ;lorawan_eu.c: 501: else
  9371                           ;lorawan_eu.c: 502: {
  9372                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
  9373  00C6' EC00' F000'        	call	_ResetParametersForConfirmedTransmission	;wreg free
  9374                           
  9375                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
  9376  00CA' 0101               	movlb	1	; () banked
  9377  00CC' 5100'              	movf	_rxPayload& (0+255),w,b
  9378  00CE' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
  9379  00D0' B4D8               	btfsc	status,2,c
  9380  00D2' 0012               	return	
  9381                           
  9382                           ; BSR set to: 1
  9383                           ;lorawan_eu.c: 505: {
  9384                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  9385  00D4' 0E00               	movlw	0
  9386  00D6' 0100               	movlb	0	; () banked
  9387  00D8' 6F00'              	movwf	RxData@pData& (0+255),b
  9388  00DA' 0E00               	movlw	0
  9389  00DC' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
  9390  00DE' 0E00               	movlw	0
  9391  00E0' 6F00'              	movwf	RxData@dataLength& (0+255),b
  9392  00E2' 0E00               	movlw	0
  9393  00E4' 6F00'              	movwf	RxData@status& (0+255),b
  9394  00E6' D801               	call	u18468
  9395  00E8' 0012               	return	
  9396  00EA'                    u18468:
  9397  00EA' 0005               	push	
  9398  00EC' 6EFA               	movwf	pclath,c
  9399  00EE' 0101               	movlb	1	; () banked
  9400  00F0' 5100'              	movf	_rxPayload& (0+255),w,b
  9401  00F2' 6EFD               	movwf	tosl,c
  9402  00F4' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
  9403  00F6' 6EFE               	movwf	tosh,c
  9404  00F8' 6AFF               	clrf	tosu,c
  9405  00FA' 50FA               	movf	pclath,w,c
  9406  00FC' 0012               	return		;indir
  9407  00FE'                    l1070:
  9408                           
  9409                           ;lorawan_eu.c: 511: else
  9410                           ;lorawan_eu.c: 512: {
  9411                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
  9412  00FE' 0102               	movlb	2	; () banked
  9413  0100' 5100'              	movf	(_loRa+216)& (0+255),w,b
  9414  0102' 5D00'              	subwf	(_loRa+214)& (0+255),w,b
  9415  0104' A0D8               	btfss	status,0,c
  9416  0106' D0F8               	goto	l1075
  9417                           
  9418                           ; BSR set to: 2
  9419                           ;lorawan_eu.c: 514: {
  9420                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9421  0108' 5100'              	movf	(_loRa+2)& (0+255),w,b
  9422  010A' 0BF0               	andlw	-16
  9423  010C' 0906               	iorlw	6
  9424  010E' 6F00'              	movwf	(_loRa+2)& (0+255),b
  9425                           
  9426                           ; BSR set to: 2
  9427                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
  9428  0110' 0E01               	movlw	1
  9429  0112' EC00' F000'        	call	_SelectChannelForTransmission
  9430  0116' 0900               	iorlw	0
  9431  0118' A4D8               	btfss	status,2,c
  9432  011A' D031               	goto	l1076
  9433                           
  9434                           ;lorawan_eu.c: 517: {
  9435                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  9436  011C' 0E00'              	movlw	low (_macBuffer+16)
  9437  011E' 0100               	movlb	0	; () banked
  9438  0120' 6F00'              	movwf	RADIO_Transmit@buffer& (0+255),b
  9439  0122' 0E00'              	movlw	high (_macBuffer+16)
  9440  0124' 6F00'              	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  9441  0126' C0D4' F053'        	movff	_loRa+212,RADIO_Transmit@bufferLen
  9442  012A' EC00' F000'        	call	_RADIO_Transmit	;wreg free
  9443  012E' 0100               	movlb	0	; () banked
  9444  0130' 5100'              	movf	?_RADIO_Transmit& (0+255),w,b
  9445  0132' 1100'              	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
  9446  0134' A4D8               	btfss	status,2,c
  9447  0136' D007               	goto	l1077
  9448                           
  9449                           ; BSR set to: 0
  9450                           ;lorawan_eu.c: 520: {
  9451                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  9452  0138' 0102               	movlb	2	; () banked
  9453  013A' 2B00'              	incf	(_loRa+216)& (0+255),f,b
  9454                           
  9455                           ; BSR set to: 2
  9456                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  9457  013C' 5100'              	movf	(_loRa+2)& (0+255),w,b
  9458  013E' 0BF0               	andlw	-16
  9459  0140' 0901               	iorlw	1
  9460  0142' 6F00'              	movwf	(_loRa+2)& (0+255),b
  9461                           
  9462                           ;lorawan_eu.c: 523: }
  9463  0144' 0012               	return	
  9464  0146'                    l1077:
  9465                           
  9466                           ;lorawan_eu.c: 524: else
  9467                           ;lorawan_eu.c: 526: {
  9468                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
  9469                           
  9470                           ; BSR set to: 2
  9471  0146' EC00' F000'        	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9472                           
  9473                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
  9474  014A' 0101               	movlb	1	; () banked
  9475  014C' 5100'              	movf	_rxPayload& (0+255),w,b
  9476  014E' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
  9477  0150' B4D8               	btfsc	status,2,c
  9478  0152' 0012               	return	
  9479                           
  9480                           ; BSR set to: 1
  9481                           ;lorawan_eu.c: 529: {
  9482                           ;lorawan_eu.c: 530: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  9483  0154' 0E00               	movlw	0
  9484  0156' 0100               	movlb	0	; () banked
  9485  0158' 6F00'              	movwf	RxData@pData& (0+255),b
  9486  015A' 0E00               	movlw	0
  9487  015C' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
  9488  015E' 0E00               	movlw	0
  9489  0160' 6F00'              	movwf	RxData@dataLength& (0+255),b
  9490  0162' 0E00               	movlw	0
  9491  0164' 6F00'              	movwf	RxData@status& (0+255),b
  9492  0166' D801               	call	u18518
  9493  0168' 0012               	return	
  9494  016A'                    u18518:
  9495  016A' 0005               	push	
  9496  016C' 6EFA               	movwf	pclath,c
  9497  016E' 0101               	movlb	1	; () banked
  9498  0170' 5100'              	movf	_rxPayload& (0+255),w,b
  9499  0172' 6EFD               	movwf	tosl,c
  9500  0174' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
  9501  0176' 6EFE               	movwf	tosh,c
  9502  0178' 6AFF               	clrf	tosu,c
  9503  017A' 50FA               	movf	pclath,w,c
  9504  017C' 0012               	return		;indir
  9505  017E'                    l1076:
  9506                           
  9507                           ;lorawan_eu.c: 534: else
  9508                           ;lorawan_eu.c: 535: {
  9509                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
  9510  017E' 0E00               	movlw	0
  9511  0180' 0100               	movlb	0	; () banked
  9512  0182' 6F00'              	movwf	LORAWAN_RxTimeout@i& (0+255),b
  9513  0184' D07C               	goto	l1081
  9514  0186'                    
  9515                           ;lorawan_eu.c: 538: {
  9516                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
  9517                           
  9518                           ; BSR set to: 0
  9519  0186' 0100               	movlb	0	; () banked
  9520  0188' 5100'              	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9521  018A' 0D0E               	mullw	14
  9522  018C' 0E04               	movlw	4
  9523  018E' 26F3               	addwf	prodl,f,c
  9524  0190' 0E00               	movlw	0
  9525  0192' 22F4               	addwfc	prodh,f,c
  9526  0194' 0E00'              	movlw	low _Channels
  9527  0196' 24F3               	addwf	prodl,w,c
  9528  0198' 6ED9               	movwf	fsr2l,c
  9529  019A' 0E00'              	movlw	high _Channels
  9530  019C' 20F4               	addwfc	prodh,w,c
  9531  019E' 6EDA               	movwf	fsr2h,c
  9532  01A0' 04DE               	decf	postinc2,w,c
  9533  01A2' A4D8               	btfss	status,2,c
  9534  01A4' D06A               	goto	l1083
  9535                           
  9536                           ; BSR set to: 0
  9537  01A6' 5100'              	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9538  01A8' 0D0E               	mullw	14
  9539  01AA' 0E08               	movlw	8
  9540  01AC' 26F3               	addwf	prodl,f,c
  9541  01AE' 0E00               	movlw	0
  9542  01B0' 22F4               	addwfc	prodh,f,c
  9543  01B2' 0E00'              	movlw	low _Channels
  9544  01B4' 24F3               	addwf	prodl,w,c
  9545  01B6' 6ED9               	movwf	fsr2l,c
  9546  01B8' 0E00'              	movlw	high _Channels
  9547  01BA' 20F4               	addwfc	prodh,w,c
  9548  01BC' 6EDA               	movwf	fsr2h,c
  9549  01BE' 50DE               	movf	postinc2,w,c
  9550  01C0' 10DE               	iorwf	postinc2,w,c
  9551  01C2' 10DE               	iorwf	postinc2,w,c
  9552  01C4' 10DE               	iorwf	postinc2,w,c
  9553  01C6' B4D8               	btfsc	status,2,c
  9554  01C8' D058               	goto	l1083
  9555                           
  9556                           ; BSR set to: 0
  9557  01CA' 5100'              	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9558  01CC' 0D0E               	mullw	14
  9559  01CE' 0E08               	movlw	8
  9560  01D0' 26F3               	addwf	prodl,f,c
  9561  01D2' 0E00               	movlw	0
  9562  01D4' 22F4               	addwfc	prodh,f,c
  9563  01D6' 0E00'              	movlw	low _Channels
  9564  01D8' 24F3               	addwf	prodl,w,c
  9565  01DA' 6ED9               	movwf	fsr2l,c
  9566  01DC' 0E00'              	movlw	high _Channels
  9567  01DE' 20F4               	addwfc	prodh,w,c
  9568  01E0' 6EDA               	movwf	fsr2h,c
  9569  01E2' 50DE               	movf	postinc2,w,c
  9570  01E4' 5D00'              	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
  9571  01E6' 50DE               	movf	postinc2,w,c
  9572  01E8' 5900'              	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
  9573  01EA' 50DE               	movf	postinc2,w,c
  9574  01EC' 5900'              	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
  9575  01EE' 50DE               	movf	postinc2,w,c
  9576  01F0' 5900'              	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
  9577  01F2' A0D8               	btfss	status,0,c
  9578  01F4' D042               	goto	l1083
  9579                           
  9580                           ; BSR set to: 0
  9581  01F6' 5100'              	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9582  01F8' 0D0E               	mullw	14
  9583  01FA' 0E05               	movlw	5
  9584  01FC' 26F3               	addwf	prodl,f,c
  9585  01FE' 0E00               	movlw	0
  9586  0200' 22F4               	addwfc	prodh,f,c
  9587  0202' 0E00'              	movlw	low _Channels
  9588  0204' 24F3               	addwf	prodl,w,c
  9589  0206' 6ED9               	movwf	fsr2l,c
  9590  0208' 0E00'              	movlw	high _Channels
  9591  020A' 20F4               	addwfc	prodh,w,c
  9592  020C' 6EDA               	movwf	fsr2h,c
  9593  020E' 0104               	movlb	4	; () banked
  9594  0210' 50DF               	movf	223,w,c
  9595  0212' 0B0F               	andlw	15
  9596  0214' 0100               	movlb	0	; () banked
  9597  0216' 6F00'              	movwf	??_LORAWAN_RxTimeout& (0+255),b
  9598  0218' 5100'              	movf	??_LORAWAN_RxTimeout& (0+255),w,b
  9599  021A' 0102               	movlb	2	; () banked
  9600  021C' 5D00'              	subwf	(_loRa+223)& (0+255),w,b
  9601  021E' A0D8               	btfss	status,0,c
  9602  0220' D02C               	goto	l1083
  9603                           
  9604                           ; BSR set to: 2
  9605  0222' 0100               	movlb	0	; () banked
  9606  0224' 5100'              	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9607  0226' 0D0E               	mullw	14
  9608  0228' 0E05               	movlw	5
  9609  022A' 26F3               	addwf	prodl,f,c
  9610  022C' 0E00               	movlw	0
  9611  022E' 22F4               	addwfc	prodh,f,c
  9612  0230' 0E00'              	movlw	low _Channels
  9613  0232' 24F3               	addwf	prodl,w,c
  9614  0234' 6ED9               	movwf	fsr2l,c
  9615  0236' 0E00'              	movlw	high _Channels
  9616  0238' 20F4               	addwfc	prodh,w,c
  9617  023A' 6EDA               	movwf	fsr2h,c
  9618  023C' 0104               	movlb	4	; () banked
  9619  023E' 38DF               	swapf	223,w,c
  9620  0240' 0B0F               	andlw	15
  9621  0242' 0100               	movlb	0	; () banked
  9622  0244' 6F00'              	movwf	??_LORAWAN_RxTimeout& (0+255),b
  9623  0246' 0102               	movlb	2	; () banked
  9624  0248' 5100'              	movf	(_loRa+223)& (0+255),w,b
  9625  024A' 0100               	movlb	0	; () banked
  9626  024C' 5D00'              	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
  9627  024E' A0D8               	btfss	status,0,c
  9628  0250' D014               	goto	l1083
  9629                           
  9630                           ; BSR set to: 0
  9631                           ;lorawan_eu.c: 540: {
  9632                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
  9633  0252' 5100'              	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9634  0254' 0D0E               	mullw	14
  9635  0256' 0E08               	movlw	8
  9636  0258' 26F3               	addwf	prodl,f,c
  9637  025A' 0E00               	movlw	0
  9638  025C' 22F4               	addwfc	prodh,f,c
  9639  025E' 0E00'              	movlw	low _Channels
  9640  0260' 24F3               	addwf	prodl,w,c
  9641  0262' 6ED9               	movwf	fsr2l,c
  9642  0264' 0E00'              	movlw	high _Channels
  9643  0266' 20F4               	addwfc	prodh,w,c
  9644  0268' 6EDA               	movwf	fsr2h,c
  9645  026A' CFDE F066'         	movff	postinc2,LORAWAN_RxTimeout@minim
  9646  026E' CFDE F067'         	movff	postinc2,LORAWAN_RxTimeout@minim+1
  9647  0272' CFDE F068'         	movff	postinc2,LORAWAN_RxTimeout@minim+2
  9648  0276' CFDE F069'         	movff	postinc2,LORAWAN_RxTimeout@minim+3
  9649  027A'                    l1083:
  9650                           
  9651                           ; BSR set to: 0
  9652  027A' 0100               	movlb	0	; () banked
  9653  027C' 2B00'              	incf	LORAWAN_RxTimeout@i& (0+255),f,b
  9654  027E'                    l1081:
  9655                           
  9656                           ; BSR set to: 0
  9657                           
  9658                           ; BSR set to: 0
  9659  027E' 5100'              	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9660  0280' 0102               	movlb	2	; () banked
  9661  0282' 5D00'              	subwf	(_loRa+237)& (0+255),w,b
  9662  0284' B0D8               	btfsc	status,0,c
  9663  0286' D77F               	goto	l1082
  9664                           
  9665                           ; BSR set to: 2
  9666                           ;lorawan_eu.c: 542: }
  9667                           ;lorawan_eu.c: 543: }
  9668                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
  9669                           
  9670                           ; BSR set to: 2
  9671  0288' C066' F062'        	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
  9672  028C' C067' F063'        	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
  9673  0290' C068' F064'        	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
  9674  0294' C069' F065'        	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
  9675  0298' 0E0C               	movlw	12
  9676  029A'                    u18585:
  9677  029A' 90D8               	bcf	status,0,c
  9678  029C' 0100               	movlb	0	; () banked
  9679  029E' 3700'              	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
  9680  02A0' 3700'              	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
  9681  02A2' 3700'              	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
  9682  02A4' 3700'              	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
  9683  02A6' 2EE8               	decfsz	wreg,f,c
  9684  02A8' D7F8               	goto	u18585
  9685  02AA' 0E00               	movlw	0
  9686  02AC' 2500'              	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
  9687  02AE' 6F00'              	movwf	___lldiv@dividend& (0+255),b
  9688  02B0' 0E20               	movlw	32
  9689  02B2' 2100'              	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
  9690  02B4' 6F00'              	movwf	(___lldiv@dividend+1)& (0+255),b
  9691  02B6' 0E03               	movlw	3
  9692  02B8' 2100'              	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
  9693  02BA' 6F00'              	movwf	(___lldiv@dividend+2)& (0+255),b
  9694  02BC' 0E00               	movlw	0
  9695  02BE' 2100'              	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
  9696  02C0' 6F00'              	movwf	(___lldiv@dividend+3)& (0+255),b
  9697  02C2' 0E7D               	movlw	125
  9698  02C4' 6F00'              	movwf	___lldiv@divisor& (0+255),b
  9699  02C6' 0E00               	movlw	0
  9700  02C8' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
  9701  02CA' 0E00               	movlw	0
  9702  02CC' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
  9703  02CE' 0E00               	movlw	0
  9704  02D0' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
  9705  02D2' EC00' F000'        	call	___lldiv	;wreg free
  9706  02D6' C000' F00D'        	movff	?___lldiv,SwTimerSetTimeout@timeout
  9707  02DA' C001' F00E'        	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
  9708  02DE' C002' F00F'        	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
  9709  02E2' C003' F010'        	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
  9710  02E6' 0102               	movlb	2	; () banked
  9711  02E8' 5100'              	movf	(_loRa+234)& (0+255),w,b
  9712  02EA' EC00' F000'        	call	_SwTimerSetTimeout
  9713                           
  9714                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
  9715  02EE' 0102               	movlb	2	; () banked
  9716  02F0' 5100'              	movf	(_loRa+234)& (0+255),w,b
  9717  02F2' EC00' F000'        	call	_SwTimerStart
  9718                           
  9719                           ;lorawan_eu.c: 546: }
  9720                           ;lorawan_eu.c: 547: }
  9721  02F6' 0012               	return	
  9722  02F8'                    l1075:
  9723                           
  9724                           ;lorawan_eu.c: 548: else
  9725                           ;lorawan_eu.c: 549: {
  9726                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
  9727  02F8' EC00' F000'        	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9728                           
  9729                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
  9730  02FC' 0101               	movlb	1	; () banked
  9731  02FE' 5100'              	movf	_rxPayload& (0+255),w,b
  9732  0300' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
  9733  0302' B4D8               	btfsc	status,2,c
  9734  0304' 0012               	return	
  9735                           
  9736                           ; BSR set to: 1
  9737                           ;lorawan_eu.c: 552: {
  9738                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
  9739  0306' 0E00               	movlw	0
  9740  0308' 0100               	movlb	0	; () banked
  9741  030A' 6F00'              	movwf	RxData@pData& (0+255),b
  9742  030C' 0E00               	movlw	0
  9743  030E' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
  9744  0310' 0E00               	movlw	0
  9745  0312' 6F00'              	movwf	RxData@dataLength& (0+255),b
  9746  0314' 0E01               	movlw	1
  9747  0316' 6F00'              	movwf	RxData@status& (0+255),b
  9748  0318' D801               	call	u18608
  9749  031A' 0012               	return	
  9750  031C'                    u18608:
  9751  031C' 0005               	push	
  9752  031E' 6EFA               	movwf	pclath,c
  9753  0320' 0101               	movlb	1	; () banked
  9754  0322' 5100'              	movf	_rxPayload& (0+255),w,b
  9755  0324' 6EFD               	movwf	tosl,c
  9756  0326' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
  9757  0328' 6EFE               	movwf	tosh,c
  9758  032A' 6AFF               	clrf	tosu,c
  9759  032C' 50FA               	movf	pclath,w,c
  9760  032E' 0012               	return		;indir
  9761  0330'                    l1061:
  9762                           
  9763                           ;lorawan_eu.c: 560: else
  9764                           ;lorawan_eu.c: 561: {
  9765                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
  9766  0330' 0101               	movlb	1	; () banked
  9767  0332' 5100'              	movf	_rxPayload& (0+255),w,b
  9768  0334' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
  9769  0336' B4D8               	btfsc	status,2,c
  9770  0338' 0012               	return	
  9771                           
  9772                           ; BSR set to: 1
  9773                           ;lorawan_eu.c: 564: {
  9774                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
  9775  033A' 0E00               	movlw	0
  9776  033C' 0100               	movlb	0	; () banked
  9777  033E' 6F00'              	movwf	RxData@pData& (0+255),b
  9778  0340' 0E00               	movlw	0
  9779  0342' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
  9780  0344' 0E00               	movlw	0
  9781  0346' 6F00'              	movwf	RxData@dataLength& (0+255),b
  9782  0348' 0E02               	movlw	2
  9783  034A' 6F00'              	movwf	RxData@status& (0+255),b
  9784  034C' D801               	call	u18628
  9785  034E' 0012               	return	
  9786  0350'                    u18628:
  9787  0350' 0005               	push	
  9788  0352' 6EFA               	movwf	pclath,c
  9789  0354' 0101               	movlb	1	; () banked
  9790  0356' 5100'              	movf	_rxPayload& (0+255),w,b
  9791  0358' 6EFD               	movwf	tosl,c
  9792  035A' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
  9793  035C' 6EFE               	movwf	tosh,c
  9794  035E' 6AFF               	clrf	tosu,c
  9795  0360' 50FA               	movf	pclath,w,c
  9796  0362' 0012               	return		;indir
  9797  0364'                    __end_of_LORAWAN_RxTimeout:
  9798                           	opt stack 0
  9799                           tosu	equ	0xFFF
  9800                           tosh	equ	0xFFE
  9801                           tosl	equ	0xFFD
  9802                           pclath	equ	0xFFA
  9803                           tblptru	equ	0xFF8
  9804                           tblptrh	equ	0xFF7
  9805                           tblptrl	equ	0xFF6
  9806                           tablat	equ	0xFF5
  9807                           prodh	equ	0xFF4
  9808                           prodl	equ	0xFF3
  9809                           intcon	equ	0xFF2
  9810                           intcon2	equ	0xFF1
  9811                           intcon3	equ	0xFF0
  9812                           postinc0	equ	0xFEE
  9813                           wreg	equ	0xFE8
  9814                           postinc1	equ	0xFE6
  9815                           postdec1	equ	0xFE5
  9816                           plusw1	equ	0xFE3
  9817                           fsr1h	equ	0xFE2
  9818                           fsr1l	equ	0xFE1
  9819                           indf2	equ	0xFDF
  9820                           postinc2	equ	0xFDE
  9821                           postdec2	equ	0xFDD
  9822                           fsr2h	equ	0xFDA
  9823                           fsr2l	equ	0xFD9
  9824                           status	equ	0xFD8
  9825                           
  9826 ;; *************** function _LORAWAN_RxDone *****************
  9827 ;; Defined at:
  9828 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
  9831 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
  9832 ;;  bufferLength    1  104[BANK1 ] unsigned char 
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;  hdr             2  145[BANK0 ] PTR struct .
  9835 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
  9836 ;;  joinAccept      2  142[BANK0 ] PTR struct .
  9837 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
  9838 ;;  computedMic     4  138[BANK0 ] unsigned long 
  9839 ;;  extractedMic    4  130[BANK0 ] unsigned long 
  9840 ;;  packet          2  136[BANK0 ] PTR unsigned char 
  9841 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
  9842 ;;  frmPayloadLe    1  144[BANK0 ] unsigned char 
  9843 ;;  temp            1  135[BANK0 ] unsigned char 
  9844 ;;  bufferIndex     1  134[BANK0 ] unsigned char 
  9845 ;;  mhdr            1  129[BANK0 ] struct .
  9846 ;;  channelIndex    1  128[BANK0 ] unsigned char 
  9847 ;;  fPort           1  127[BANK0 ] unsigned char 
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  1    wreg      enum E7497
  9850 ;; Registers used:
  9851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9857 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9858 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9859 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9860 ;;      Totals:         0      25       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9861 ;;Total ram usage:       28 bytes
  9862 ;; Hardware stack levels used:    1
  9863 ;; Hardware stack levels required when called:   15
  9864 ;; This function calls:
  9865 ;;		_AESCmac
  9866 ;;		_AESEncodeLoRa
  9867 ;;		_AssembleEncryptionBlock
  9868 ;;		_CheckFlags
  9869 ;;		_CheckMcastFlags
  9870 ;;		_ComputeMic
  9871 ;;		_ComputeSessionKeys
  9872 ;;		_EncryptFRMPayload
  9873 ;;		_ExtractMic
  9874 ;;		_LORAWAN_EnterContinuousReceive
  9875 ;;		_LORAWAN_Send
  9876 ;;		_MacExecuteCommands
  9877 ;;		_RADIO_GetStatus
  9878 ;;		_RADIO_ReleaseData
  9879 ;;		_RxData
  9880 ;;		_SearchAvailableChannel
  9881 ;;		_SetJoinFailState
  9882 ;;		_SetReceptionNotOkState
  9883 ;;		_StartReTxTimer
  9884 ;;		_SwTimerStop
  9885 ;;		_UpdateCfList
  9886 ;;		_UpdateDLSettings
  9887 ;;		_UpdateJoinSuccessState
  9888 ;;		_UpdateReceiveDelays
  9889 ;;		_UpdateRetransmissionAckTimeoutState
  9890 ;;		_memcpy
  9891 ;; This function is called by:
  9892 ;;		_RADIO_RxDone
  9893 ;;		_RADIO_FSKPayloadReady
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           	psect	text52
  9898  0000'                    __ptext52:
  9899                           	opt stack 0
  9900  0000'                    _LORAWAN_RxDone:
  9901                           	opt stack 12
  9902                           
  9903                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
  9904                           ;lorawan.c: 1124: Mhdr_t mhdr;
  9905                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
  9906                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
  9907                           ;lorawan.c: 1127: uint8_t *packet;
  9908                           ;lorawan.c: 1128: uint8_t temp;
  9909                           ;lorawan.c: 1130: RADIO_ReleaseData();
  9910                           
  9911                           ;incstack = 0
  9912  0000' EC00' F000'        	call	_RADIO_ReleaseData	;wreg free
  9913                           
  9914                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
  9915  0004' 0102               	movlb	2	; () banked
  9916  0006' B100'              	btfsc	(_loRa+3)& (0+255),0,b
  9917  0008' EF00' F000'        	goto	l1905
  9918                           
  9919                           ; BSR set to: 2
  9920                           ;lorawan.c: 1133: {
  9921                           ;lorawan.c: 1134: mhdr.value = buffer[0];
  9922  000C' C066' FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
  9923  0010' C067' FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
  9924  0014' 50DF               	movf	indf2,w,c
  9925  0016' 0100               	movlb	0	; () banked
  9926  0018' 6F00'              	movwf	LORAWAN_RxDone@mhdr& (0+255),b
  9927                           
  9928                           ; BSR set to: 0
  9929                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
  9930  001A' 3900'              	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
  9931  001C' 32E8               	rrcf	wreg,f,c
  9932  001E' 0B07               	andlw	7
  9933  0020' 06E8               	decf	wreg,f,c
  9934  0022' A4D8               	btfss	status,2,c
  9935  0024' D0D8               	goto	l1906
  9936                           
  9937                           ; BSR set to: 0
  9938  0026' 0102               	movlb	2	; () banked
  9939  0028' 5100'              	movf	(_loRa+29)& (0+255),w,b
  9940  002A' A4D8               	btfss	status,2,c
  9941  002C' D0D4               	goto	l1906
  9942                           
  9943                           ; BSR set to: 2
  9944                           ;lorawan.c: 1136: {
  9945                           ;lorawan.c: 1137: temp = bufferLength - 1;
  9946  002E' 0101               	movlb	1	; () banked
  9947  0030' 0500'              	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  9948  0032' 0100               	movlb	0	; () banked
  9949  0034' D028               	goto	L6
  9950  0036'                    
  9951                           ; BSR set to: 0
  9952                           ;lorawan.c: 1139: {
  9953                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
  9954                           
  9955                           ; BSR set to: 0
  9956  0036' 5100'              	movf	LORAWAN_RxDone@temp& (0+255),w,b
  9957  0038' 6F00'              	movwf	??_LORAWAN_RxDone& (0+255),b
  9958  003A' 6B00'              	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
  9959  003C' 1F00'              	comf	??_LORAWAN_RxDone& (0+255),f,b
  9960  003E' 1F00'              	comf	(??_LORAWAN_RxDone+1)& (0+255),f,b
  9961  0040' 4B00'              	infsnz	??_LORAWAN_RxDone& (0+255),f,b
  9962  0042' 2B00'              	incf	(??_LORAWAN_RxDone+1)& (0+255),f,b
  9963  0044' 0101               	movlb	1	; () banked
  9964  0046' 5100'              	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  9965  0048' 0100               	movlb	0	; () banked
  9966  004A' 6F00'              	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
  9967  004C' 6B00'              	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
  9968  004E' 5100'              	movf	??_LORAWAN_RxDone& (0+255),w,b
  9969  0050' 2700'              	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
  9970  0052' 5100'              	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
  9971  0054' 2300'              	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
  9972  0056' 5100'              	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
  9973  0058' 0101               	movlb	1	; () banked
  9974  005A' 2500'              	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
  9975  005C' 0100               	movlb	0	; () banked
  9976  005E' 6F00'              	movwf	AESEncodeLoRa@block& (0+255),b
  9977  0060' 5100'              	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
  9978  0062' 0101               	movlb	1	; () banked
  9979  0064' 2100'              	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
  9980  0066' 0100               	movlb	0	; () banked
  9981  0068' 6F00'              	movwf	(AESEncodeLoRa@block+1)& (0+255),b
  9982  006A' 0E00'              	movlw	low (_loRa+66)
  9983  006C' 6F00'              	movwf	AESEncodeLoRa@key& (0+255),b
  9984  006E' 0E00'              	movlw	high (_loRa+66)
  9985  0070' 6F00'              	movwf	(AESEncodeLoRa@key+1)& (0+255),b
  9986  0072' EC00' F000'        	call	_AESEncodeLoRa	;wreg free
  9987                           
  9988                           ;lorawan.c: 1142: if (temp > 16)
  9989  0076' 0E10               	movlw	16
  9990  0078' 0100               	movlb	0	; () banked
  9991  007A' 6500'              	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
  9992  007C' D003               	goto	l1909
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;lorawan.c: 1143: {
  9996                           ;lorawan.c: 1144: temp -= 16;
  9997  007E' 0E10               	movlw	16
  9998  0080' 5F00'              	subwf	LORAWAN_RxDone@temp& (0+255),f,b
  9999                           
 10000                           ;lorawan.c: 1145: }
 10001  0082' D002               	goto	l1910
 10002  0084'                    l1909:
 10003                           
 10004                           ; BSR set to: 0
 10005                           ;lorawan.c: 1146: else
 10006                           ;lorawan.c: 1147: {
 10007                           ;lorawan.c: 1148: temp = 0;
 10008                           
 10009                           ; BSR set to: 0
 10010  0084' 0E00               	movlw	0
 10011  0086'                    L6:
 10012  0086' 6F00'              	movwf	LORAWAN_RxDone@temp& (0+255),b
 10013  0088'                    l1910:
 10014                           
 10015                           ; BSR set to: 0
 10016                           
 10017                           ; BSR set to: 0
 10018  0088' 5100'              	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10019  008A' A4D8               	btfss	status,2,c
 10020  008C' D7D4               	goto	l1908
 10021                           
 10022                           ; BSR set to: 0
 10023                           ;lorawan.c: 1149: }
 10024                           ;lorawan.c: 1150: }
 10025                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 10026                           
 10027                           ; BSR set to: 0
 10028  008E' 0E00'              	movlw	low (_loRa+66)
 10029  0090' 6F00'              	movwf	ComputeMic@key& (0+255),b
 10030  0092' 0E00'              	movlw	high (_loRa+66)
 10031  0094' 6F00'              	movwf	(ComputeMic@key+1)& (0+255),b
 10032  0096' C066' F069'        	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 10033  009A' C067' F06A'        	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 10034  009E' 0101               	movlb	1	; () banked
 10035  00A0' 5100'              	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10036  00A2' 0FFC               	addlw	252
 10037  00A4' 0100               	movlb	0	; () banked
 10038  00A6' 6F00'              	movwf	ComputeMic@bufferLength& (0+255),b
 10039  00A8' EC00' F000'        	call	_ComputeMic	;wreg free
 10040  00AC' C067' F08A'        	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 10041  00B0' C068' F08B'        	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 10042  00B4' C069' F08C'        	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 10043  00B8' C06A' F08D'        	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 10044                           
 10045                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 10046  00BC' C066' F00B'        	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10047  00C0' C067' F00C'        	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10048  00C4' C068' F00D'        	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10049  00C8' EC00' F000'        	call	_ExtractMic	;wreg free
 10050  00CC' C00B' F082'        	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10051  00D0' C00C' F083'        	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10052  00D4' C00D' F084'        	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10053  00D8' C00E' F085'        	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10054                           
 10055                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 10056  00DC' 0100               	movlb	0	; () banked
 10057  00DE' 5100'              	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10058  00E0' 1900'              	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10059  00E2' E10A               	bnz	u17680
 10060  00E4' 5100'              	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10061  00E6' 1900'              	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10062  00E8' E107               	bnz	u17680
 10063  00EA' 5100'              	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10064  00EC' 1900'              	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10065  00EE' E104               	bnz	u17680
 10066  00F0' 5100'              	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10067  00F2' 1900'              	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10068  00F4' B4D8               	btfsc	status,2,c
 10069  00F6' D011               	goto	l1912
 10070  00F8'                    u17680:
 10071                           
 10072                           ; BSR set to: 0
 10073                           ;lorawan.c: 1156: {
 10074                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 10075  00F8' 0102               	movlb	2	; () banked
 10076  00FA' 5100'              	movf	(_loRa+2)& (0+255),w,b
 10077  00FC' 0B0F               	andlw	15
 10078  00FE' 0A05               	xorlw	5
 10079  0100' B4D8               	btfsc	status,2,c
 10080  0102' D008               	goto	u17710
 10081                           
 10082                           ; BSR set to: 2
 10083  0104' 5100'              	movf	(_loRa+2)& (0+255),w,b
 10084  0106' 0B0F               	andlw	15
 10085  0108' 0A03               	xorlw	3
 10086  010A' A4D8               	btfss	status,2,c
 10087  010C' 0012               	return	
 10088                           
 10089                           ; BSR set to: 2
 10090  010E' 5100'              	movf	(_loRa+241)& (0+255),w,b
 10091  0110' B4D8               	btfsc	status,2,c
 10092  0112' 0012               	return	
 10093  0114'                    u17710:
 10094                           
 10095                           ; BSR set to: 2
 10096                           ;lorawan.c: 1158: {
 10097                           ;lorawan.c: 1159: SetJoinFailState();
 10098                           
 10099                           ; BSR set to: 2
 10100  0114' EC00' F000'        	call	_SetJoinFailState	;wreg free
 10101                           
 10102                           ;lorawan.c: 1160: }
 10103                           ;lorawan.c: 1162: return INVALID_PARAMETER;
 10104                           ;	Return value of _LORAWAN_RxDone is never used
 10105  0118' 0012               	return	
 10106  011A'                    l1912:
 10107                           
 10108                           ;lorawan.c: 1163: }
 10109                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 10110  011A' 0102               	movlb	2	; () banked
 10111  011C' 5100'              	movf	(_loRa+2)& (0+255),w,b
 10112  011E' 0B0F               	andlw	15
 10113  0120' 0A03               	xorlw	3
 10114  0122' A4D8               	btfss	status,2,c
 10115  0124' D003               	goto	l1917
 10116                           
 10117                           ; BSR set to: 2
 10118                           ;lorawan.c: 1167: {
 10119                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 10120  0126' 5100'              	movf	(_loRa+227)& (0+255),w,b
 10121  0128' EC00' F000'        	call	_SwTimerStop
 10122  012C'                    l1917:
 10123                           
 10124                           ;lorawan.c: 1169: }
 10125                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 10126                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 10127  012C' C066' F08E'        	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 10128  0130' C067' F08F'        	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 10129                           
 10130                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 10131  0134' 0100               	movlb	0	; () banked
 10132  0136' EE20 F007          	lfsr	2,7
 10133  013A' 5100'              	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10134  013C' 26D9               	addwf	fsr2l,f,c
 10135  013E' 5100'              	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10136  0140' 22DA               	addwfc	fsr2h,f,c
 10137  0142' CFDE F01E'         	movff	postinc2,_loRa+30
 10138  0146' CFDE F01F'         	movff	postinc2,_loRa+31
 10139  014A' CFDE F020'         	movff	postinc2,_loRa+32
 10140  014E' CFDE F021'         	movff	postinc2,_loRa+33
 10141                           
 10142                           ; BSR set to: 0
 10143                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 10144  0152' EE20 F00C          	lfsr	2,12
 10145  0156' 5100'              	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10146  0158' 26D9               	addwf	fsr2l,f,c
 10147  015A' 5100'              	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10148  015C' 22DA               	addwfc	fsr2h,f,c
 10149  015E' 50DF               	movf	indf2,w,c
 10150  0160' 0B0F               	andlw	15
 10151  0162' EC00' F000'        	call	_UpdateReceiveDelays
 10152                           
 10153                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 10154  0166' 0100               	movlb	0	; () banked
 10155  0168' EE20 F00B          	lfsr	2,11
 10156  016C' 5100'              	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10157  016E' 26D9               	addwf	fsr2l,f,c
 10158  0170' 5100'              	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10159  0172' 22DA               	addwfc	fsr2h,f,c
 10160  0174' 38DF               	swapf	223,w,c
 10161  0176' 0B07               	andlw	7
 10162  0178' 6F00'              	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 10163  017A' EE20 F00B          	lfsr	2,11
 10164  017E' 5100'              	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10165  0180' 26D9               	addwf	fsr2l,f,c
 10166  0182' 5100'              	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10167  0184' 22DA               	addwfc	fsr2h,f,c
 10168  0186' 50DF               	movf	223,w,c
 10169  0188' 0B0F               	andlw	15
 10170  018A' EC00' F000'        	call	_UpdateDLSettings
 10171                           
 10172                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 10173  018E' C08E' F046'        	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 10174  0192' C08F' F047'        	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 10175  0196' 0101               	movlb	1	; () banked
 10176  0198' 5100'              	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10177  019A' EC00' F000'        	call	_UpdateCfList
 10178                           
 10179                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 10180  019E' C08E' F031'        	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 10181  01A2' C08F' F032'        	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 10182  01A6' EC00' F000'        	call	_ComputeSessionKeys	;wreg free
 10183                           
 10184                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 10185  01AA' 0E00               	movlw	0
 10186  01AC' 6EE6               	movwf	postinc1,c
 10187  01AE' EC00' F000'        	call	_UpdateJoinSuccessState	;wreg free
 10188                           
 10189                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 10190  01B2' 0E00               	movlw	0
 10191  01B4' 0102               	movlb	2	; () banked
 10192  01B6' 6F00'              	movwf	(_loRa+6)& (0+255),b
 10193  01B8' 0E00               	movlw	0
 10194  01BA' 6F00'              	movwf	(_loRa+7)& (0+255),b
 10195  01BC' 0E00               	movlw	0
 10196  01BE' 6F00'              	movwf	(_loRa+8)& (0+255),b
 10197  01C0' 0E00               	movlw	0
 10198  01C2' 6F00'              	movwf	(_loRa+9)& (0+255),b
 10199                           
 10200                           ; BSR set to: 2
 10201                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 10202  01C4' 0E00               	movlw	0
 10203  01C6' 6F00'              	movwf	(_loRa+10)& (0+255),b
 10204  01C8' 0E00               	movlw	0
 10205  01CA' 6F00'              	movwf	(_loRa+11)& (0+255),b
 10206  01CC' 0E00               	movlw	0
 10207  01CE' 6F00'              	movwf	(_loRa+12)& (0+255),b
 10208  01D0' 0E00               	movlw	0
 10209  01D2' 6F00'              	movwf	(_loRa+13)& (0+255),b
 10210                           
 10211                           ; BSR set to: 2
 10212                           ;lorawan.c: 1190: }
 10213                           
 10214                           ; BSR set to: 2
 10215                           ;lorawan.c: 1189: return OK;
 10216                           ;	Return value of _LORAWAN_RxDone is never used
 10217  01D4' 0012               	return	
 10218  01D6'                    l1906:
 10219                           
 10220                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 10221                           
 10222                           ; BSR set to: 2
 10223  01D6' 0100               	movlb	0	; () banked
 10224  01D8' 3900'              	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10225  01DA' 32E8               	rrcf	wreg,f,c
 10226  01DC' 0B07               	andlw	7
 10227  01DE' 0A03               	xorlw	3
 10228  01E0' B4D8               	btfsc	status,2,c
 10229  01E2' D007               	goto	u17740
 10230                           
 10231                           ; BSR set to: 0
 10232  01E4' 3900'              	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10233  01E6' 32E8               	rrcf	wreg,f,c
 10234  01E8' 0B07               	andlw	7
 10235  01EA' 0A05               	xorlw	5
 10236  01EC' A4D8               	btfss	status,2,c
 10237  01EE' EF00' F000'        	goto	l1919
 10238  01F2'                    u17740:
 10239                           
 10240                           ; BSR set to: 0
 10241                           ;lorawan.c: 1192: {
 10242                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 10243                           
 10244                           ; BSR set to: 0
 10245  01F2' 0E00               	movlw	0
 10246  01F4' 0102               	movlb	2	; () banked
 10247  01F6' 6F00'              	movwf	(_loRa+167)& (0+255),b
 10248                           
 10249                           ; BSR set to: 2
 10250                           ;lorawan.c: 1195: Hdr_t *hdr;
 10251                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 10252  01F8' C066' F091'        	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 10253  01FC' C067' F092'        	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 10254                           
 10255                           ; BSR set to: 2
 10256                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 10257  0200' 0E02               	movlw	2
 10258  0202' 1900'              	xorwf	(_loRa+18)& (0+255),w,b
 10259  0204' A4D8               	btfss	status,2,c
 10260  0206' D210               	goto	l1922
 10261                           
 10262                           ; BSR set to: 2
 10263  0208' 0100               	movlb	0	; () banked
 10264  020A' EE20 F001          	lfsr	2,1
 10265  020E' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10266  0210' 26D9               	addwf	fsr2l,f,c
 10267  0212' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10268  0214' 22DA               	addwfc	fsr2h,f,c
 10269  0216' 0102               	movlb	2	; () banked
 10270  0218' 5100'              	movf	(_loRa+98)& (0+255),w,b
 10271  021A' 18DE               	xorwf	postinc2,w,c
 10272  021C' E109               	bnz	u17761
 10273  021E' 5100'              	movf	(_loRa+99)& (0+255),w,b
 10274  0220' 18DE               	xorwf	postinc2,w,c
 10275  0222' E106               	bnz	u17761
 10276  0224' 5100'              	movf	(_loRa+100)& (0+255),w,b
 10277  0226' 18DE               	xorwf	postinc2,w,c
 10278  0228' E103               	bnz	u17761
 10279  022A' 5100'              	movf	(_loRa+101)& (0+255),w,b
 10280  022C' 18DE               	xorwf	postinc2,w,c
 10281  022E' A4D8               	btfss	status,2,c
 10282  0230'                    u17761:
 10283  0230' D1FB               	goto	l1922
 10284                           
 10285                           ; BSR set to: 2
 10286  0232' A500'              	btfss	(_loRa+4)& (0+255),2,b
 10287  0234' D1F9               	goto	l1922
 10288                           
 10289                           ; BSR set to: 2
 10290                           ;lorawan.c: 1200: {
 10291                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 10292  0236' C091' F000'        	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 10293  023A' C092' F001'        	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 10294  023E' EC00' F000'        	call	_CheckMcastFlags	;wreg free
 10295  0242' 0900               	iorlw	0
 10296  0244' A4D8               	btfss	status,2,c
 10297  0246' D008               	goto	l1923
 10298                           
 10299                           ;lorawan.c: 1203: {
 10300                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10301  0248' 0102               	movlb	2	; () banked
 10302  024A' 5100'              	movf	(_loRa+2)& (0+255),w,b
 10303  024C' 0BF0               	andlw	-16
 10304  024E' 0909               	iorlw	9
 10305  0250' 6F00'              	movwf	(_loRa+2)& (0+255),b
 10306                           
 10307                           ; BSR set to: 2
 10308                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 10309  0252' EC00' F000'        	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10310                           
 10311                           ;lorawan.c: 1206: return MCAST_MSG_ERROR;
 10312                           ;	Return value of _LORAWAN_RxDone is never used
 10313  0256' 0012               	return	
 10314  0258'                    l1923:
 10315                           
 10316                           ;lorawan.c: 1207: }
 10317                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 10318  0258' 0100               	movlb	0	; () banked
 10319  025A' EE20 F006          	lfsr	2,6
 10320  025E' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10321  0260' 26D9               	addwf	fsr2l,f,c
 10322  0262' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10323  0264' 22DA               	addwfc	fsr2h,f,c
 10324  0266' CFDE F07A'         	movff	postinc2,??_LORAWAN_RxDone
 10325  026A' CFDD F07B'         	movff	postdec2,??_LORAWAN_RxDone+1
 10326  026E' C07A' F00B'        	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 10327  0272' C07B' F00C'        	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 10328  0276' 6B00'              	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 10329  0278' 6B00'              	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 10330  027A' 0101               	movlb	1	; () banked
 10331  027C' 5100'              	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10332  027E' 0FFC               	addlw	252
 10333  0280' 0100               	movlb	0	; () banked
 10334  0282' 6F00'              	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 10335  0284' 0E49               	movlw	73
 10336  0286' 6F00'              	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 10337  0288' 0E01               	movlw	1
 10338  028A' 6F00'              	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 10339  028C' 0E01               	movlw	1
 10340  028E' EC00' F000'        	call	_AssembleEncryptionBlock
 10341                           
 10342                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 10343  0292' 0E00'              	movlw	low _radioBuffer
 10344  0294' 0100               	movlb	0	; () banked
 10345  0296' 6F00'              	movwf	memcpy@d1& (0+255),b
 10346  0298' 0E00'              	movlw	high _radioBuffer
 10347  029A' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 10348  029C' 0E00'              	movlw	low _aesBuffer
 10349  029E' 6F00'              	movwf	memcpy@s1& (0+255),b
 10350  02A0' 0E00'              	movlw	high _aesBuffer
 10351  02A2' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 10352  02A4' 0E00               	movlw	0
 10353  02A6' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 10354  02A8' 0E10               	movlw	16
 10355  02AA' 6F00'              	movwf	memcpy@n& (0+255),b
 10356  02AC' EC00' F000'        	call	_memcpy	;wreg free
 10357                           
 10358                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 10359  02B0' 0E00'              	movlw	low (_radioBuffer+16)
 10360  02B2' 0100               	movlb	0	; () banked
 10361  02B4' 6F00'              	movwf	memcpy@d1& (0+255),b
 10362  02B6' 0E00'              	movlw	high (_radioBuffer+16)
 10363  02B8' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 10364  02BA' C066' F002'        	movff	LORAWAN_RxDone@buffer,memcpy@s1
 10365  02BE' C067' F003'        	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 10366  02C2' 0EFC               	movlw	252
 10367  02C4' 0101               	movlb	1	; () banked
 10368  02C6' 2500'              	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10369  02C8' 0100               	movlb	0	; () banked
 10370  02CA' 6F00'              	movwf	memcpy@n& (0+255),b
 10371  02CC' 6B00'              	clrf	(memcpy@n+1)& (0+255),b
 10372  02CE' 0EFF               	movlw	255
 10373  02D0' 2300'              	addwfc	(memcpy@n+1)& (0+255),f,b
 10374  02D2' EC00' F000'        	call	_memcpy	;wreg free
 10375                           
 10376                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 10377  02D6' 0E00'              	movlw	low (_loRa+102)
 10378  02D8' 0100               	movlb	0	; () banked
 10379  02DA' 6F00'              	movwf	AESCmac@key& (0+255),b
 10380  02DC' 0E00'              	movlw	high (_loRa+102)
 10381  02DE' 6F00'              	movwf	(AESCmac@key+1)& (0+255),b
 10382  02E0' 0E00'              	movlw	low _aesBuffer
 10383  02E2' 6F00'              	movwf	AESCmac@output& (0+255),b
 10384  02E4' 0E00'              	movlw	high _aesBuffer
 10385  02E6' 6F00'              	movwf	(AESCmac@output+1)& (0+255),b
 10386  02E8' 0E00'              	movlw	low _radioBuffer
 10387  02EA' 6F00'              	movwf	AESCmac@input& (0+255),b
 10388  02EC' 0E00'              	movlw	high _radioBuffer
 10389  02EE' 6F00'              	movwf	(AESCmac@input+1)& (0+255),b
 10390  02F0' 0101               	movlb	1	; () banked
 10391  02F2' 5100'              	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10392  02F4' 0F0C               	addlw	12
 10393  02F6' 0100               	movlb	0	; () banked
 10394  02F8' 6F00'              	movwf	AESCmac@size& (0+255),b
 10395  02FA' EC00' F000'        	call	_AESCmac	;wreg free
 10396                           
 10397                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 10398  02FE' 0E00'              	movlw	low LORAWAN_RxDone@computedMic
 10399  0300' 0100               	movlb	0	; () banked
 10400  0302' 6F00'              	movwf	memcpy@d1& (0+255),b
 10401  0304' 0E00'              	movlw	high LORAWAN_RxDone@computedMic
 10402  0306' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 10403  0308' 0E00'              	movlw	low _aesBuffer
 10404  030A' 6F00'              	movwf	memcpy@s1& (0+255),b
 10405  030C' 0E00'              	movlw	high _aesBuffer
 10406  030E' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 10407  0310' 0E00               	movlw	0
 10408  0312' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 10409  0314' 0E04               	movlw	4
 10410  0316' 6F00'              	movwf	memcpy@n& (0+255),b
 10411  0318' EC00' F000'        	call	_memcpy	;wreg free
 10412                           
 10413                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 10414  031C' C066' F00B'        	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10415  0320' C067' F00C'        	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10416  0324' C068' F00D'        	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10417  0328' EC00' F000'        	call	_ExtractMic	;wreg free
 10418  032C' C00B' F082'        	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10419  0330' C00C' F083'        	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10420  0334' C00D' F084'        	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10421  0338' C00E' F085'        	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10422                           
 10423                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 10424  033C' 0100               	movlb	0	; () banked
 10425  033E' 5100'              	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10426  0340' 1900'              	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10427  0342' E10A               	bnz	u17790
 10428  0344' 5100'              	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10429  0346' 1900'              	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10430  0348' E107               	bnz	u17790
 10431  034A' 5100'              	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10432  034C' 1900'              	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10433  034E' E104               	bnz	u17790
 10434  0350' 5100'              	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10435  0352' 1900'              	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10436  0354' B4D8               	btfsc	status,2,c
 10437  0356' D008               	goto	l1924
 10438  0358'                    u17790:
 10439                           
 10440                           ; BSR set to: 0
 10441                           ;lorawan.c: 1218: {
 10442                           ;lorawan.c: 1219: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10443  0358' 0102               	movlb	2	; () banked
 10444  035A' 5100'              	movf	(_loRa+2)& (0+255),w,b
 10445  035C' 0BF0               	andlw	-16
 10446  035E' 0909               	iorlw	9
 10447  0360' 6F00'              	movwf	(_loRa+2)& (0+255),b
 10448                           
 10449                           ; BSR set to: 2
 10450                           ;lorawan.c: 1220: LORAWAN_EnterContinuousReceive();
 10451  0362' EC00' F000'        	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10452                           
 10453                           ;lorawan.c: 1221: return MCAST_MSG_ERROR;
 10454                           ;	Return value of _LORAWAN_RxDone is never used
 10455  0366' 0012               	return	
 10456  0368'                    l1924:
 10457                           
 10458                           ;lorawan.c: 1222: }
 10459                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 10460  0368' 0100               	movlb	0	; () banked
 10461  036A' EE20 F006          	lfsr	2,6
 10462  036E' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10463  0370' 26D9               	addwf	fsr2l,f,c
 10464  0372' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10465  0374' 22DA               	addwfc	fsr2h,f,c
 10466  0376' 0102               	movlb	2	; () banked
 10467  0378' 5100'              	movf	(_loRa+14)& (0+255),w,b
 10468  037A' 5CDE               	subwf	postinc2,w,c
 10469  037C' 5100'              	movf	(_loRa+15)& (0+255),w,b
 10470  037E' 58DE               	subwfb	postinc2,w,c
 10471  0380' A0D8               	btfss	status,0,c
 10472  0382' D050               	goto	l1925
 10473                           
 10474                           ; BSR set to: 2
 10475                           ;lorawan.c: 1225: {
 10476                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 10477  0384' 0100               	movlb	0	; () banked
 10478  0386' EE20 F006          	lfsr	2,6
 10479  038A' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10480  038C' 26D9               	addwf	fsr2l,f,c
 10481  038E' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10482  0390' 22DA               	addwfc	fsr2h,f,c
 10483  0392' CFDE F07A'         	movff	postinc2,??_LORAWAN_RxDone
 10484  0396' CFDD F07B'         	movff	postdec2,??_LORAWAN_RxDone+1
 10485  039A' EE20' F000'        	lfsr	2,_loRa+14
 10486  039E' CFDE F07C'         	movff	postinc2,??_LORAWAN_RxDone+2
 10487  03A2' CFDD F07D'         	movff	postdec2,??_LORAWAN_RxDone+3
 10488  03A6' 1F00'              	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10489  03A8' 1F00'              	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10490  03AA' 4B00'              	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10491  03AC' 2B00'              	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10492  03AE' 5100'              	movf	??_LORAWAN_RxDone& (0+255),w,b
 10493  03B0' 2700'              	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10494  03B2' 5100'              	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10495  03B4' 2300'              	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10496  03B6' 5100'              	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 10497  03B8' 0102               	movlb	2	; () banked
 10498  03BA' 5D00'              	subwf	(_loRa+158)& (0+255),w,b
 10499  03BC' 0100               	movlb	0	; () banked
 10500  03BE' 5100'              	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 10501  03C0' 0102               	movlb	2	; () banked
 10502  03C2' 5900'              	subwfb	(_loRa+159)& (0+255),w,b
 10503  03C4' B0D8               	btfsc	status,0,c
 10504  03C6' D022               	goto	l1926
 10505                           
 10506                           ; BSR set to: 2
 10507                           ;lorawan.c: 1227: {
 10508                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 10509  03C8' 0101               	movlb	1	; () banked
 10510  03CA' 5100'              	movf	_rxPayload& (0+255),w,b
 10511  03CC' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
 10512  03CE' B4D8               	btfsc	status,2,c
 10513  03D0' D015               	goto	u17839
 10514                           
 10515                           ; BSR set to: 1
 10516                           ;lorawan.c: 1229: {
 10517                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10518  03D2' 0E00               	movlw	0
 10519  03D4' 0100               	movlb	0	; () banked
 10520  03D6' 6F00'              	movwf	RxData@pData& (0+255),b
 10521  03D8' 0E00               	movlw	0
 10522  03DA' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
 10523  03DC' 0E00               	movlw	0
 10524  03DE' 6F00'              	movwf	RxData@dataLength& (0+255),b
 10525  03E0' 0E05               	movlw	5
 10526  03E2' 6F00'              	movwf	RxData@status& (0+255),b
 10527  03E4' D801               	call	u17838
 10528  03E6' D00A               	goto	u17839
 10529  03E8'                    u17838:
 10530  03E8' 0005               	push	
 10531  03EA' 6EFA               	movwf	pclath,c
 10532  03EC' 0101               	movlb	1	; () banked
 10533  03EE' 5100'              	movf	_rxPayload& (0+255),w,b
 10534  03F0' 6EFD               	movwf	tosl,c
 10535  03F2' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
 10536  03F4' 6EFE               	movwf	tosh,c
 10537  03F6' 6AFF               	clrf	tosu,c
 10538  03F8' 50FA               	movf	pclath,w,c
 10539  03FA' 0012               	return		;indir
 10540  03FC'                    u17839:
 10541                           
 10542                           ;lorawan.c: 1231: }
 10543                           ;lorawan.c: 1233: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10544  03FC' 0102               	movlb	2	; () banked
 10545  03FE' 5100'              	movf	(_loRa+2)& (0+255),w,b
 10546  0400' 0BF0               	andlw	-16
 10547  0402' 0909               	iorlw	9
 10548  0404' 6F00'              	movwf	(_loRa+2)& (0+255),b
 10549                           
 10550                           ; BSR set to: 2
 10551                           ;lorawan.c: 1234: LORAWAN_EnterContinuousReceive();
 10552  0406' EC00' F000'        	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10553                           
 10554                           ;lorawan.c: 1235: return MCAST_MSG_ERROR;
 10555                           ;	Return value of _LORAWAN_RxDone is never used
 10556  040A' 0012               	return	
 10557  040C'                    l1926:
 10558                           
 10559                           ;lorawan.c: 1237: else
 10560                           ;lorawan.c: 1238: {
 10561                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 10562  040C' 0100               	movlb	0	; () banked
 10563  040E' EE20 F006          	lfsr	2,6
 10564  0412' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10565  0414' 26D9               	addwf	fsr2l,f,c
 10566  0416' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10567  0418' 22DA               	addwfc	fsr2h,f,c
 10568  041A' CFDE F00E'         	movff	postinc2,_loRa+14
 10569  041E' CFDD F00F'         	movff	postdec2,_loRa+15
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;lorawan.c: 1240: }
 10573                           ;lorawan.c: 1241: }
 10574  0422' D03A               	goto	l1931
 10575  0424'                    l1925:
 10576                           
 10577                           ;lorawan.c: 1242: else
 10578                           ;lorawan.c: 1243: {
 10579                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 10580                           
 10581                           ; BSR set to: 0
 10582  0424' 0100               	movlb	0	; () banked
 10583  0426' EE20 F006          	lfsr	2,6
 10584  042A' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10585  042C' 26D9               	addwf	fsr2l,f,c
 10586  042E' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10587  0430' 22DA               	addwfc	fsr2h,f,c
 10588  0432' 50DE               	movf	postinc2,w,c
 10589  0434' 10DE               	iorwf	postinc2,w,c
 10590  0436' A4D8               	btfss	status,2,c
 10591  0438' D00D               	goto	l1930
 10592                           
 10593                           ; BSR set to: 0
 10594  043A' 0102               	movlb	2	; () banked
 10595  043C' 2900'              	incf	(_loRa+14)& (0+255),w,b
 10596  043E' E10A               	bnz	l15128
 10597  0440' 2900'              	incf	(_loRa+15)& (0+255),w,b
 10598  0442' A4D8               	btfss	status,2,c
 10599  0444' D007               	goto	l1930
 10600                           
 10601                           ; BSR set to: 2
 10602                           ;lorawan.c: 1245: {
 10603                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 10604  0446' 0E00               	movlw	0
 10605  0448' 6F00'              	movwf	(_loRa+15)& (0+255),b
 10606  044A' 0E00               	movlw	0
 10607  044C' 6F00'              	movwf	(_loRa+14)& (0+255),b
 10608                           
 10609                           ; BSR set to: 2
 10610                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 10611  044E' 4B00'              	infsnz	(_loRa+16)& (0+255),f,b
 10612  0450' 2B00'              	incf	(_loRa+17)& (0+255),f,b
 10613                           
 10614                           ;lorawan.c: 1248: }
 10615  0452' D022               	goto	l1931
 10616  0454'                    l1930:
 10617  0454'                    l15128:
 10618                           
 10619                           ;lorawan.c: 1249: else
 10620                           ;lorawan.c: 1250: {
 10621                           ;lorawan.c: 1251: if (rxPayload.RxAppData != (0))
 10622  0454' 0101               	movlb	1	; () banked
 10623  0456' 5100'              	movf	_rxPayload& (0+255),w,b
 10624  0458' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
 10625  045A' B4D8               	btfsc	status,2,c
 10626  045C' D015               	goto	u17879
 10627                           
 10628                           ; BSR set to: 1
 10629                           ;lorawan.c: 1252: {
 10630                           ;lorawan.c: 1253: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10631  045E' 0E00               	movlw	0
 10632  0460' 0100               	movlb	0	; () banked
 10633  0462' 6F00'              	movwf	RxData@pData& (0+255),b
 10634  0464' 0E00               	movlw	0
 10635  0466' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
 10636  0468' 0E00               	movlw	0
 10637  046A' 6F00'              	movwf	RxData@dataLength& (0+255),b
 10638  046C' 0E05               	movlw	5
 10639  046E' 6F00'              	movwf	RxData@status& (0+255),b
 10640  0470' D801               	call	u17878
 10641  0472' D00A               	goto	u17879
 10642  0474'                    u17878:
 10643  0474' 0005               	push	
 10644  0476' 6EFA               	movwf	pclath,c
 10645  0478' 0101               	movlb	1	; () banked
 10646  047A' 5100'              	movf	_rxPayload& (0+255),w,b
 10647  047C' 6EFD               	movwf	tosl,c
 10648  047E' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
 10649  0480' 6EFE               	movwf	tosh,c
 10650  0482' 6AFF               	clrf	tosu,c
 10651  0484' 50FA               	movf	pclath,w,c
 10652  0486' 0012               	return		;indir
 10653  0488'                    u17879:
 10654                           
 10655                           ;lorawan.c: 1254: }
 10656                           ;lorawan.c: 1256: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10657  0488' 0102               	movlb	2	; () banked
 10658  048A' 5100'              	movf	(_loRa+2)& (0+255),w,b
 10659  048C' 0BF0               	andlw	-16
 10660  048E' 0909               	iorlw	9
 10661  0490' 6F00'              	movwf	(_loRa+2)& (0+255),b
 10662                           
 10663                           ; BSR set to: 2
 10664                           ;lorawan.c: 1257: LORAWAN_EnterContinuousReceive();
 10665  0492' EC00' F000'        	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10666                           
 10667                           ;lorawan.c: 1258: return MCAST_MSG_ERROR;
 10668                           ;	Return value of _LORAWAN_RxDone is never used
 10669  0496' 0012               	return	
 10670  0498'                    l1931:
 10671                           
 10672                           ;lorawan.c: 1259: }
 10673                           ;lorawan.c: 1260: }
 10674                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 10675  0498' 0102               	movlb	2	; () banked
 10676  049A' 2900'              	incf	(_loRa+14)& (0+255),w,b
 10677  049C' E129               	bnz	l15150
 10678  049E' 2900'              	incf	(_loRa+15)& (0+255),w,b
 10679  04A0' E127               	bnz	l15150
 10680  04A2' 2900'              	incf	(_loRa+16)& (0+255),w,b
 10681  04A4' E125               	bnz	l15150
 10682  04A6' 2900'              	incf	(_loRa+17)& (0+255),w,b
 10683  04A8' A4D8               	btfss	status,2,c
 10684  04AA' D022               	goto	l1933
 10685                           
 10686                           ; BSR set to: 2
 10687                           ;lorawan.c: 1263: {
 10688                           ;lorawan.c: 1264: if (rxPayload.RxAppData != (0))
 10689  04AC' 0101               	movlb	1	; () banked
 10690  04AE' 5100'              	movf	_rxPayload& (0+255),w,b
 10691  04B0' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
 10692  04B2' B4D8               	btfsc	status,2,c
 10693  04B4' D015               	goto	u17909
 10694                           
 10695                           ; BSR set to: 1
 10696                           ;lorawan.c: 1265: {
 10697                           ;lorawan.c: 1266: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10698  04B6' 0E00               	movlw	0
 10699  04B8' 0100               	movlb	0	; () banked
 10700  04BA' 6F00'              	movwf	RxData@pData& (0+255),b
 10701  04BC' 0E00               	movlw	0
 10702  04BE' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
 10703  04C0' 0E00               	movlw	0
 10704  04C2' 6F00'              	movwf	RxData@dataLength& (0+255),b
 10705  04C4' 0E05               	movlw	5
 10706  04C6' 6F00'              	movwf	RxData@status& (0+255),b
 10707  04C8' D801               	call	u17908
 10708  04CA' D00A               	goto	u17909
 10709  04CC'                    u17908:
 10710  04CC' 0005               	push	
 10711  04CE' 6EFA               	movwf	pclath,c
 10712  04D0' 0101               	movlb	1	; () banked
 10713  04D2' 5100'              	movf	_rxPayload& (0+255),w,b
 10714  04D4' 6EFD               	movwf	tosl,c
 10715  04D6' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
 10716  04D8' 6EFE               	movwf	tosh,c
 10717  04DA' 6AFF               	clrf	tosu,c
 10718  04DC' 50FA               	movf	pclath,w,c
 10719  04DE' 0012               	return		;indir
 10720  04E0'                    u17909:
 10721                           
 10722                           ;lorawan.c: 1267: }
 10723                           ;lorawan.c: 1269: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10724  04E0' 0102               	movlb	2	; () banked
 10725  04E2' 5100'              	movf	(_loRa+2)& (0+255),w,b
 10726  04E4' 0BF0               	andlw	-16
 10727  04E6' 0909               	iorlw	9
 10728  04E8' 6F00'              	movwf	(_loRa+2)& (0+255),b
 10729                           
 10730                           ; BSR set to: 2
 10731                           ;lorawan.c: 1270: LORAWAN_EnterContinuousReceive();
 10732  04EA' EC00' F000'        	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10733                           
 10734                           ;lorawan.c: 1271: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 10735                           ;	Return value of _LORAWAN_RxDone is never used
 10736  04EE' 0012               	return	
 10737  04F0'                    l1933:
 10738  04F0'                    l15150:
 10739                           
 10740                           ;lorawan.c: 1272: }
 10741                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 10742  04F0' 0102               	movlb	2	; () banked
 10743  04F2' 5100'              	movf	(_loRa+2)& (0+255),w,b
 10744  04F4' 0B0F               	andlw	15
 10745  04F6' 0A08               	xorlw	8
 10746  04F8' A4D8               	btfss	status,2,c
 10747  04FA' D008               	goto	l1935
 10748                           
 10749                           ; BSR set to: 2
 10750                           ;lorawan.c: 1275: {
 10751                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 10752  04FC' 5100'              	movf	(_loRa+228)& (0+255),w,b
 10753  04FE' EC00' F000'        	call	_SwTimerStop
 10754                           
 10755                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 10756  0502' 0102               	movlb	2	; () banked
 10757  0504' 5100'              	movf	(_loRa+229)& (0+255),w,b
 10758  0506' EC00' F000'        	call	_SwTimerStop
 10759                           
 10760                           ;lorawan.c: 1278: }
 10761  050A' D009               	goto	l1937
 10762  050C'                    l1935:
 10763                           
 10764                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 10765  050C' 0102               	movlb	2	; () banked
 10766  050E' 5100'              	movf	(_loRa+2)& (0+255),w,b
 10767  0510' 0B0F               	andlw	15
 10768  0512' 0A03               	xorlw	3
 10769  0514' A4D8               	btfss	status,2,c
 10770  0516' D003               	goto	l1937
 10771                           
 10772                           ; BSR set to: 2
 10773                           ;lorawan.c: 1280: {
 10774                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 10775  0518' 5100'              	movf	(_loRa+229)& (0+255),w,b
 10776  051A' EC00' F000'        	call	_SwTimerStop
 10777  051E'                    l1937:
 10778                           
 10779                           ;lorawan.c: 1282: }
 10780                           ;lorawan.c: 1284: buffer = buffer + 8;
 10781  051E' 0E08               	movlw	8
 10782  0520' 0101               	movlb	1	; () banked
 10783  0522' 2500'              	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10784  0524' 6F00'              	movwf	LORAWAN_RxDone@buffer& (0+255),b
 10785  0526' 0E00               	movlw	0
 10786  0528' 2100'              	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10787  052A' 6F00'              	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 10788                           
 10789                           ; BSR set to: 1
 10790                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 10791  052C' 5100'              	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10792  052E' 0100               	movlb	0	; () banked
 10793  0530' 6F00'              	movwf	??_LORAWAN_RxDone& (0+255),b
 10794  0532' 6B00'              	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 10795  0534' EE20 F005          	lfsr	2,5
 10796  0538' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10797  053A' 26D9               	addwf	fsr2l,f,c
 10798  053C' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10799  053E' 22DA               	addwfc	fsr2h,f,c
 10800  0540' 50DF               	movf	223,w,c
 10801  0542' 0B0F               	andlw	15
 10802  0544' 6F00'              	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 10803  0546' 6B00'              	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 10804  0548' 0E0C               	movlw	12
 10805  054A' 2700'              	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10806  054C' 0E00               	movlw	0
 10807  054E' 2300'              	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10808  0550' 5100'              	movf	??_LORAWAN_RxDone& (0+255),w,b
 10809  0552' 1900'              	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 10810  0554' E104               	bnz	u17930
 10811  0556' 5100'              	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10812  0558' 1900'              	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 10813  055A' B4D8               	btfsc	status,2,c
 10814  055C' D037               	goto	l1938
 10815  055E'                    u17930:
 10816                           
 10817                           ; BSR set to: 0
 10818                           ;lorawan.c: 1287: {
 10819                           ;lorawan.c: 1288: fPort = *(buffer++);
 10820  055E' C066' FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 10821  0562' C067' FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 10822  0566' 50DF               	movf	indf2,w,c
 10823  0568' 6F00'              	movwf	LORAWAN_RxDone@fPort& (0+255),b
 10824                           
 10825                           ; BSR set to: 0
 10826  056A' 0101               	movlb	1	; () banked
 10827  056C' 4B00'              	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 10828  056E' 2B00'              	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 10829                           
 10830                           ; BSR set to: 1
 10831                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 10832  0570' 5100'              	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10833  0572' 0FF4               	addlw	244
 10834  0574' 0100               	movlb	0	; () banked
 10835  0576' 6F00'              	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 10836                           
 10837                           ; BSR set to: 0
 10838                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 10839  0578' 0E19               	movlw	25
 10840  057A' 6F00'              	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 10841                           
 10842                           ; BSR set to: 0
 10843                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 10844  057C' C066' F031'        	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 10845  0580' C067' F032'        	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 10846  0584' 0500'              	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 10847  0586' 6F00'              	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 10848  0588' 0E01               	movlw	1
 10849  058A' 6F00'              	movwf	EncryptFRMPayload@dir& (0+255),b
 10850  058C' C00E' F035'        	movff	_loRa+14,EncryptFRMPayload@frameCounter
 10851  0590' C00F' F036'        	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 10852  0594' C010' F037'        	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 10853  0598' C011' F038'        	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 10854  059C' 0E00'              	movlw	low (_loRa+118)
 10855  059E' 6F00'              	movwf	EncryptFRMPayload@key& (0+255),b
 10856  05A0' 0E00'              	movlw	high (_loRa+118)
 10857  05A2' 6F00'              	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 10858  05A4' C086' F03B'        	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 10859  05A8' 0E00'              	movlw	low _radioBuffer
 10860  05AA' 6F00'              	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 10861  05AC' 0E00'              	movlw	high _radioBuffer
 10862  05AE' 6F00'              	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 10863  05B0' 0E01               	movlw	1
 10864  05B2' 6F00'              	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 10865  05B4' EC00' F000'        	call	_EncryptFRMPayload	;wreg free
 10866                           
 10867                           ;lorawan.c: 1294: packet = buffer - 1;
 10868  05B8' 0EFF               	movlw	255
 10869  05BA' 0101               	movlb	1	; () banked
 10870  05BC' 2500'              	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10871  05BE' 0100               	movlb	0	; () banked
 10872  05C0' 6F00'              	movwf	LORAWAN_RxDone@packet& (0+255),b
 10873  05C2' 0EFF               	movlw	255
 10874  05C4' 0101               	movlb	1	; () banked
 10875  05C6' 2100'              	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10876  05C8' 0100               	movlb	0	; () banked
 10877  05CA' D005               	goto	L7
 10878  05CC'                    l1938:
 10879                           
 10880                           ; BSR set to: 0
 10881                           ;lorawan.c: 1296: else
 10882                           ;lorawan.c: 1297: {
 10883                           ;lorawan.c: 1298: frmPayloadLength = 0;
 10884                           
 10885                           ; BSR set to: 0
 10886  05CC' 0E00               	movlw	0
 10887  05CE' 6F00'              	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 10888                           
 10889                           ; BSR set to: 0
 10890                           ;lorawan.c: 1299: packet = (0);
 10891  05D0' 0E00               	movlw	0
 10892  05D2' 6F00'              	movwf	LORAWAN_RxDone@packet& (0+255),b
 10893  05D4' 0E00               	movlw	0
 10894  05D6'                    L7:
 10895  05D6' 6F00'              	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;lorawan.c: 1300: }
 10899                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 10900                           
 10901                           ; BSR set to: 0
 10902  05D8' 0102               	movlb	2	; () banked
 10903  05DA' 8300'              	bsf	(_loRa+3)& (0+255),1,b
 10904                           
 10905                           ; BSR set to: 2
 10906                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 10907  05DC' 9100'              	bcf	(_loRa+2)& (0+255),0,b
 10908  05DE' 9300'              	bcf	(_loRa+2)& (0+255),1,b
 10909  05E0' 9500'              	bcf	(_loRa+2)& (0+255),2,b
 10910  05E2' 9700'              	bcf	(_loRa+2)& (0+255),3,b
 10911                           
 10912                           ; BSR set to: 2
 10913                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 10914  05E4' 0101               	movlb	1	; () banked
 10915  05E6' 5100'              	movf	_rxPayload& (0+255),w,b
 10916  05E8' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
 10917  05EA' B4D8               	btfsc	status,2,c
 10918  05EC' D015               	goto	u17959
 10919                           
 10920                           ; BSR set to: 1
 10921                           ;lorawan.c: 1306: {
 10922                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 10923  05EE' C088' F000'        	movff	LORAWAN_RxDone@packet,RxData@pData
 10924  05F2' C089' F001'        	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 10925  05F6' C090' F002'        	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 10926  05FA' 0E01               	movlw	1
 10927  05FC' 0100               	movlb	0	; () banked
 10928  05FE' 6F00'              	movwf	RxData@status& (0+255),b
 10929  0600' D801               	call	u17958
 10930  0602' D00A               	goto	u17959
 10931  0604'                    u17958:
 10932  0604' 0005               	push	
 10933  0606' 6EFA               	movwf	pclath,c
 10934  0608' 0101               	movlb	1	; () banked
 10935  060A' 5100'              	movf	_rxPayload& (0+255),w,b
 10936  060C' 6EFD               	movwf	tosl,c
 10937  060E' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
 10938  0610' 6EFE               	movwf	tosh,c
 10939  0612' 6AFF               	clrf	tosu,c
 10940  0614' 50FA               	movf	pclath,w,c
 10941  0616' 0012               	return		;indir
 10942  0618'                    u17959:
 10943                           
 10944                           ;lorawan.c: 1308: }
 10945                           ;lorawan.c: 1310: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10946  0618' 0102               	movlb	2	; () banked
 10947  061A' 5100'              	movf	(_loRa+2)& (0+255),w,b
 10948  061C' 0BF0               	andlw	-16
 10949  061E' 0909               	iorlw	9
 10950  0620' 6F00'              	movwf	(_loRa+2)& (0+255),b
 10951                           
 10952                           ; BSR set to: 2
 10953                           ;lorawan.c: 1311: LORAWAN_EnterContinuousReceive();
 10954  0622' EC00' F000'        	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10955                           
 10956                           ;lorawan.c: 1312: return MAC_OK;
 10957                           ;	Return value of _LORAWAN_RxDone is never used
 10958  0626' 0012               	return	
 10959  0628'                    l1922:
 10960                           
 10961                           ;lorawan.c: 1313: }
 10962                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 10963  0628' 0100               	movlb	0	; () banked
 10964  062A' EE20 F001          	lfsr	2,1
 10965  062E' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10966  0630' 26D9               	addwf	fsr2l,f,c
 10967  0632' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10968  0634' 22DA               	addwfc	fsr2h,f,c
 10969  0636' 0102               	movlb	2	; () banked
 10970  0638' 5100'              	movf	(_loRa+30)& (0+255),w,b
 10971  063A' 18DE               	xorwf	postinc2,w,c
 10972  063C' E10A               	bnz	u17960
 10973  063E' 5100'              	movf	(_loRa+31)& (0+255),w,b
 10974  0640' 18DE               	xorwf	postinc2,w,c
 10975  0642' E107               	bnz	u17960
 10976  0644' 5100'              	movf	(_loRa+32)& (0+255),w,b
 10977  0646' 18DE               	xorwf	postinc2,w,c
 10978  0648' E104               	bnz	u17960
 10979  064A' 5100'              	movf	(_loRa+33)& (0+255),w,b
 10980  064C' 18DE               	xorwf	postinc2,w,c
 10981  064E' B4D8               	btfsc	status,2,c
 10982  0650' D00E               	goto	l1941
 10983  0652'                    u17960:
 10984                           
 10985                           ; BSR set to: 2
 10986                           ;lorawan.c: 1317: {
 10987                           ;lorawan.c: 1318: SetReceptionNotOkState();
 10988  0652' EC00' F000'        	call	_SetReceptionNotOkState	;wreg free
 10989                           
 10990                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 10991  0656' 0E02               	movlw	2
 10992  0658' 0102               	movlb	2	; () banked
 10993  065A' 1900'              	xorwf	(_loRa+18)& (0+255),w,b
 10994  065C' A4D8               	btfss	status,2,c
 10995  065E' 0012               	return	
 10996                           
 10997                           ; BSR set to: 2
 10998                           ;lorawan.c: 1320: {
 10999                           ;lorawan.c: 1321: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11000  0660' 5100'              	movf	(_loRa+2)& (0+255),w,b
 11001  0662' 0BF0               	andlw	-16
 11002  0664' 0909               	iorlw	9
 11003  0666' 6F00'              	movwf	(_loRa+2)& (0+255),b
 11004                           
 11005                           ; BSR set to: 2
 11006                           ;lorawan.c: 1322: LORAWAN_EnterContinuousReceive();
 11007  0668' EC00' F000'        	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11008                           
 11009                           ;lorawan.c: 1323: }
 11010                           ;lorawan.c: 1324: return INVALID_PARAMETER;
 11011                           ;	Return value of _LORAWAN_RxDone is never used
 11012  066C' 0012               	return	
 11013  066E'                    l1941:
 11014                           
 11015                           ;lorawan.c: 1325: }
 11016                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 11017  066E' 0100               	movlb	0	; () banked
 11018  0670' EE20 F006          	lfsr	2,6
 11019  0674' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11020  0676' 26D9               	addwf	fsr2l,f,c
 11021  0678' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11022  067A' 22DA               	addwfc	fsr2h,f,c
 11023  067C' CFDE F07A'         	movff	postinc2,??_LORAWAN_RxDone
 11024  0680' CFDD F07B'         	movff	postdec2,??_LORAWAN_RxDone+1
 11025  0684' C07A' F00B'        	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 11026  0688' C07B' F00C'        	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 11027  068C' 6B00'              	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 11028  068E' 6B00'              	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 11029  0690' 0101               	movlb	1	; () banked
 11030  0692' 5100'              	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11031  0694' 0FFC               	addlw	252
 11032  0696' 0100               	movlb	0	; () banked
 11033  0698' 6F00'              	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 11034  069A' 0E49               	movlw	73
 11035  069C' 6F00'              	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 11036  069E' 0E00               	movlw	0
 11037  06A0' 6F00'              	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 11038  06A2' 0E01               	movlw	1
 11039  06A4' EC00' F000'        	call	_AssembleEncryptionBlock
 11040                           
 11041                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 11042  06A8' 0E00'              	movlw	low _radioBuffer
 11043  06AA' 0100               	movlb	0	; () banked
 11044  06AC' 6F00'              	movwf	memcpy@d1& (0+255),b
 11045  06AE' 0E00'              	movlw	high _radioBuffer
 11046  06B0' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 11047  06B2' 0E00'              	movlw	low _aesBuffer
 11048  06B4' 6F00'              	movwf	memcpy@s1& (0+255),b
 11049  06B6' 0E00'              	movlw	high _aesBuffer
 11050  06B8' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 11051  06BA' 0E00               	movlw	0
 11052  06BC' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 11053  06BE' 0E10               	movlw	16
 11054  06C0' 6F00'              	movwf	memcpy@n& (0+255),b
 11055  06C2' EC00' F000'        	call	_memcpy	;wreg free
 11056                           
 11057                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 11058  06C6' 0E00'              	movlw	low (_radioBuffer+16)
 11059  06C8' 0100               	movlb	0	; () banked
 11060  06CA' 6F00'              	movwf	memcpy@d1& (0+255),b
 11061  06CC' 0E00'              	movlw	high (_radioBuffer+16)
 11062  06CE' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 11063  06D0' C066' F002'        	movff	LORAWAN_RxDone@buffer,memcpy@s1
 11064  06D4' C067' F003'        	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 11065  06D8' 0EFC               	movlw	252
 11066  06DA' 0101               	movlb	1	; () banked
 11067  06DC' 2500'              	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11068  06DE' 0100               	movlb	0	; () banked
 11069  06E0' 6F00'              	movwf	memcpy@n& (0+255),b
 11070  06E2' 6B00'              	clrf	(memcpy@n+1)& (0+255),b
 11071  06E4' 0EFF               	movlw	255
 11072  06E6' 2300'              	addwfc	(memcpy@n+1)& (0+255),f,b
 11073  06E8' EC00' F000'        	call	_memcpy	;wreg free
 11074                           
 11075                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 11076  06EC' 0E00'              	movlw	low (_loRa+34)
 11077  06EE' 0100               	movlb	0	; () banked
 11078  06F0' 6F00'              	movwf	AESCmac@key& (0+255),b
 11079  06F2' 0E00'              	movlw	high (_loRa+34)
 11080  06F4' 6F00'              	movwf	(AESCmac@key+1)& (0+255),b
 11081  06F6' 0E00'              	movlw	low _aesBuffer
 11082  06F8' 6F00'              	movwf	AESCmac@output& (0+255),b
 11083  06FA' 0E00'              	movlw	high _aesBuffer
 11084  06FC' 6F00'              	movwf	(AESCmac@output+1)& (0+255),b
 11085  06FE' 0E00'              	movlw	low _radioBuffer
 11086  0700' 6F00'              	movwf	AESCmac@input& (0+255),b
 11087  0702' 0E00'              	movlw	high _radioBuffer
 11088  0704' 6F00'              	movwf	(AESCmac@input+1)& (0+255),b
 11089  0706' 0101               	movlb	1	; () banked
 11090  0708' 5100'              	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11091  070A' 0F0C               	addlw	12
 11092  070C' 0100               	movlb	0	; () banked
 11093  070E' 6F00'              	movwf	AESCmac@size& (0+255),b
 11094  0710' EC00' F000'        	call	_AESCmac	;wreg free
 11095                           
 11096                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 11097  0714' 0E00'              	movlw	low LORAWAN_RxDone@computedMic
 11098  0716' 0100               	movlb	0	; () banked
 11099  0718' 6F00'              	movwf	memcpy@d1& (0+255),b
 11100  071A' 0E00'              	movlw	high LORAWAN_RxDone@computedMic
 11101  071C' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 11102  071E' 0E00'              	movlw	low _aesBuffer
 11103  0720' 6F00'              	movwf	memcpy@s1& (0+255),b
 11104  0722' 0E00'              	movlw	high _aesBuffer
 11105  0724' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 11106  0726' 0E00               	movlw	0
 11107  0728' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 11108  072A' 0E04               	movlw	4
 11109  072C' 6F00'              	movwf	memcpy@n& (0+255),b
 11110  072E' EC00' F000'        	call	_memcpy	;wreg free
 11111                           
 11112                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 11113  0732' C066' F00B'        	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11114  0736' C067' F00C'        	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11115  073A' C068' F00D'        	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11116  073E' EC00' F000'        	call	_ExtractMic	;wreg free
 11117  0742' C00B' F082'        	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11118  0746' C00C' F083'        	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11119  074A' C00D' F084'        	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11120  074E' C00E' F085'        	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11121                           
 11122                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 11123  0752' 0100               	movlb	0	; () banked
 11124  0754' 5100'              	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11125  0756' 1900'              	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11126  0758' E10A               	bnz	u17980
 11127  075A' 5100'              	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11128  075C' 1900'              	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11129  075E' E107               	bnz	u17980
 11130  0760' 5100'              	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11131  0762' 1900'              	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11132  0764' E104               	bnz	u17980
 11133  0766' 5100'              	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11134  0768' 1900'              	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11135  076A' B4D8               	btfsc	status,2,c
 11136  076C' D00E               	goto	l1943
 11137  076E'                    u17980:
 11138                           
 11139                           ; BSR set to: 0
 11140                           ;lorawan.c: 1337: {
 11141                           ;lorawan.c: 1338: SetReceptionNotOkState();
 11142  076E' EC00' F000'        	call	_SetReceptionNotOkState	;wreg free
 11143                           
 11144                           ;lorawan.c: 1339: if (CLASS_C == loRa.deviceClass)
 11145  0772' 0E02               	movlw	2
 11146  0774' 0102               	movlb	2	; () banked
 11147  0776' 1900'              	xorwf	(_loRa+18)& (0+255),w,b
 11148  0778' A4D8               	btfss	status,2,c
 11149  077A' 0012               	return	
 11150                           
 11151                           ; BSR set to: 2
 11152                           ;lorawan.c: 1340: {
 11153                           ;lorawan.c: 1341: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11154  077C' 5100'              	movf	(_loRa+2)& (0+255),w,b
 11155  077E' 0BF0               	andlw	-16
 11156  0780' 0909               	iorlw	9
 11157  0782' 6F00'              	movwf	(_loRa+2)& (0+255),b
 11158                           
 11159                           ; BSR set to: 2
 11160                           ;lorawan.c: 1342: LORAWAN_EnterContinuousReceive();
 11161  0784' EC00' F000'        	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11162                           
 11163                           ;lorawan.c: 1343: }
 11164                           ;lorawan.c: 1344: return INVALID_PARAMETER;
 11165                           ;	Return value of _LORAWAN_RxDone is never used
 11166  0788' 0012               	return	
 11167  078A'                    l1943:
 11168                           
 11169                           ;lorawan.c: 1345: }
 11170                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 11171  078A' 0100               	movlb	0	; () banked
 11172  078C' EE20 F006          	lfsr	2,6
 11173  0790' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11174  0792' 26D9               	addwf	fsr2l,f,c
 11175  0794' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11176  0796' 22DA               	addwfc	fsr2h,f,c
 11177  0798' 0102               	movlb	2	; () banked
 11178  079A' 5100'              	movf	(_loRa+10)& (0+255),w,b
 11179  079C' 5CDE               	subwf	postinc2,w,c
 11180  079E' 5100'              	movf	(_loRa+11)& (0+255),w,b
 11181  07A0' 58DE               	subwfb	postinc2,w,c
 11182  07A2' A0D8               	btfss	status,0,c
 11183  07A4' D05D               	goto	l1945
 11184                           
 11185                           ; BSR set to: 2
 11186                           ;lorawan.c: 1349: {
 11187                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 11188  07A6' 0100               	movlb	0	; () banked
 11189  07A8' EE20 F006          	lfsr	2,6
 11190  07AC' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11191  07AE' 26D9               	addwf	fsr2l,f,c
 11192  07B0' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11193  07B2' 22DA               	addwfc	fsr2h,f,c
 11194  07B4' CFDE F07A'         	movff	postinc2,??_LORAWAN_RxDone
 11195  07B8' CFDD F07B'         	movff	postdec2,??_LORAWAN_RxDone+1
 11196  07BC' EE20' F000'        	lfsr	2,_loRa+10
 11197  07C0' CFDE F07C'         	movff	postinc2,??_LORAWAN_RxDone+2
 11198  07C4' CFDD F07D'         	movff	postdec2,??_LORAWAN_RxDone+3
 11199  07C8' 1F00'              	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11200  07CA' 1F00'              	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11201  07CC' 4B00'              	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11202  07CE' 2B00'              	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11203  07D0' 5100'              	movf	??_LORAWAN_RxDone& (0+255),w,b
 11204  07D2' 2700'              	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11205  07D4' 5100'              	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11206  07D6' 2300'              	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11207  07D8' 5100'              	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11208  07DA' 0102               	movlb	2	; () banked
 11209  07DC' 5D00'              	subwf	(_loRa+156)& (0+255),w,b
 11210  07DE' 0100               	movlb	0	; () banked
 11211  07E0' 5100'              	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11212  07E2' 0102               	movlb	2	; () banked
 11213  07E4' 5900'              	subwfb	(_loRa+157)& (0+255),w,b
 11214  07E6' B0D8               	btfsc	status,0,c
 11215  07E8' D02F               	goto	l1946
 11216                           
 11217                           ; BSR set to: 2
 11218                           ;lorawan.c: 1351: {
 11219                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11220  07EA' 9100'              	bcf	_loRa& (0+255),0,b
 11221                           
 11222                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 11223  07EC' 9100'              	bcf	(_loRa+2)& (0+255),0,b
 11224  07EE' 9300'              	bcf	(_loRa+2)& (0+255),1,b
 11225  07F0' 9500'              	bcf	(_loRa+2)& (0+255),2,b
 11226  07F2' 9700'              	bcf	(_loRa+2)& (0+255),3,b
 11227                           
 11228                           ; BSR set to: 2
 11229                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 11230  07F4' 0101               	movlb	1	; () banked
 11231  07F6' 5100'              	movf	_rxPayload& (0+255),w,b
 11232  07F8' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
 11233  07FA' B4D8               	btfsc	status,2,c
 11234  07FC' D017               	goto	u18039
 11235                           
 11236                           ; BSR set to: 1
 11237                           ;lorawan.c: 1355: {
 11238                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 11239  07FE' 0102               	movlb	2	; () banked
 11240  0800' 9B00'              	bcf	_loRa& (0+255),5,b
 11241                           
 11242                           ; BSR set to: 2
 11243                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 11244  0802' 0E00               	movlw	0
 11245  0804' 0100               	movlb	0	; () banked
 11246  0806' 6F00'              	movwf	RxData@pData& (0+255),b
 11247  0808' 0E00               	movlw	0
 11248  080A' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
 11249  080C' 0E00               	movlw	0
 11250  080E' 6F00'              	movwf	RxData@dataLength& (0+255),b
 11251  0810' 0E00               	movlw	0
 11252  0812' 6F00'              	movwf	RxData@status& (0+255),b
 11253  0814' D801               	call	u18038
 11254  0816' D00A               	goto	u18039
 11255  0818'                    u18038:
 11256  0818' 0005               	push	
 11257  081A' 6EFA               	movwf	pclath,c
 11258  081C' 0101               	movlb	1	; () banked
 11259  081E' 5100'              	movf	_rxPayload& (0+255),w,b
 11260  0820' 6EFD               	movwf	tosl,c
 11261  0822' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
 11262  0824' 6EFE               	movwf	tosh,c
 11263  0826' 6AFF               	clrf	tosu,c
 11264  0828' 50FA               	movf	pclath,w,c
 11265  082A' 0012               	return		;indir
 11266  082C'                    u18039:
 11267                           
 11268                           ;lorawan.c: 1358: }
 11269                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 11270  082C' 0102               	movlb	2	; () banked
 11271  082E' 9300'              	bcf	(_loRa+3)& (0+255),1,b
 11272                           
 11273                           ; BSR set to: 2
 11274                           ;lorawan.c: 1362: loRa.macStatus.rejoinNeeded = 1;
 11275  0830' 8300'              	bsf	(_loRa+4)& (0+255),1,b
 11276                           
 11277                           ; BSR set to: 2
 11278                           ;lorawan.c: 1363: if (CLASS_C == loRa.deviceClass)
 11279  0832' 0E02               	movlw	2
 11280  0834' 1900'              	xorwf	(_loRa+18)& (0+255),w,b
 11281  0836' A4D8               	btfss	status,2,c
 11282  0838' 0012               	return	
 11283                           
 11284                           ; BSR set to: 2
 11285                           ;lorawan.c: 1364: {
 11286                           ;lorawan.c: 1365: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11287  083A' 5100'              	movf	(_loRa+2)& (0+255),w,b
 11288  083C' 0BF0               	andlw	-16
 11289  083E' 0909               	iorlw	9
 11290  0840' 6F00'              	movwf	(_loRa+2)& (0+255),b
 11291                           
 11292                           ; BSR set to: 2
 11293                           ;lorawan.c: 1366: LORAWAN_EnterContinuousReceive();
 11294  0842' EC00' F000'        	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11295                           
 11296                           ;lorawan.c: 1367: }
 11297                           ;lorawan.c: 1368: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 11298                           ;	Return value of _LORAWAN_RxDone is never used
 11299  0846' 0012               	return	
 11300  0848'                    l1946:
 11301                           
 11302                           ;lorawan.c: 1370: else
 11303                           ;lorawan.c: 1371: {
 11304                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11305  0848' 0100               	movlb	0	; () banked
 11306  084A' EE20 F006          	lfsr	2,6
 11307  084E' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11308  0850' 26D9               	addwf	fsr2l,f,c
 11309  0852' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11310  0854' 22DA               	addwfc	fsr2h,f,c
 11311  0856' CFDE F00A'         	movff	postinc2,_loRa+10
 11312  085A' CFDD F00B'         	movff	postdec2,_loRa+11
 11313                           
 11314                           ; BSR set to: 0
 11315                           ;lorawan.c: 1373: }
 11316                           ;lorawan.c: 1374: }
 11317  085E' D02E               	goto	l1952
 11318  0860'                    l1945:
 11319                           
 11320                           ;lorawan.c: 1375: else
 11321                           ;lorawan.c: 1376: {
 11322                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 11323                           
 11324                           ; BSR set to: 0
 11325  0860' 0100               	movlb	0	; () banked
 11326  0862' EE20 F006          	lfsr	2,6
 11327  0866' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11328  0868' 26D9               	addwf	fsr2l,f,c
 11329  086A' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11330  086C' 22DA               	addwfc	fsr2h,f,c
 11331  086E' 50DE               	movf	postinc2,w,c
 11332  0870' 10DE               	iorwf	postinc2,w,c
 11333  0872' A4D8               	btfss	status,2,c
 11334  0874' D015               	goto	l1951
 11335                           
 11336                           ; BSR set to: 0
 11337  0876' 0102               	movlb	2	; () banked
 11338  0878' 2900'              	incf	(_loRa+10)& (0+255),w,b
 11339  087A' E112               	bnz	l15262
 11340  087C' 2900'              	incf	(_loRa+11)& (0+255),w,b
 11341  087E' A4D8               	btfss	status,2,c
 11342  0880' D00F               	goto	l1951
 11343                           
 11344                           ; BSR set to: 2
 11345                           ;lorawan.c: 1378: {
 11346                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11347  0882' 0100               	movlb	0	; () banked
 11348  0884' EE20 F006          	lfsr	2,6
 11349  0888' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11350  088A' 26D9               	addwf	fsr2l,f,c
 11351  088C' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11352  088E' 22DA               	addwfc	fsr2h,f,c
 11353  0890' CFDE F00A'         	movff	postinc2,_loRa+10
 11354  0894' CFDD F00B'         	movff	postdec2,_loRa+11
 11355                           
 11356                           ; BSR set to: 0
 11357                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 11358  0898' 0102               	movlb	2	; () banked
 11359  089A' 4B00'              	infsnz	(_loRa+12)& (0+255),f,b
 11360  089C' 2B00'              	incf	(_loRa+13)& (0+255),f,b
 11361                           
 11362                           ;lorawan.c: 1382: }
 11363  089E' D00E               	goto	l1952
 11364  08A0'                    l1951:
 11365  08A0'                    l15262:
 11366                           
 11367                           ;lorawan.c: 1383: else
 11368                           ;lorawan.c: 1384: {
 11369                           ;lorawan.c: 1385: SetReceptionNotOkState();
 11370  08A0' EC00' F000'        	call	_SetReceptionNotOkState	;wreg free
 11371                           
 11372                           ;lorawan.c: 1386: if (CLASS_C == loRa.deviceClass)
 11373  08A4' 0E02               	movlw	2
 11374  08A6' 0102               	movlb	2	; () banked
 11375  08A8' 1900'              	xorwf	(_loRa+18)& (0+255),w,b
 11376  08AA' A4D8               	btfss	status,2,c
 11377  08AC' 0012               	return	
 11378                           
 11379                           ; BSR set to: 2
 11380                           ;lorawan.c: 1387: {
 11381                           ;lorawan.c: 1388: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11382  08AE' 5100'              	movf	(_loRa+2)& (0+255),w,b
 11383  08B0' 0BF0               	andlw	-16
 11384  08B2' 0909               	iorlw	9
 11385  08B4' 6F00'              	movwf	(_loRa+2)& (0+255),b
 11386                           
 11387                           ; BSR set to: 2
 11388                           ;lorawan.c: 1389: LORAWAN_EnterContinuousReceive();
 11389  08B6' EC00' F000'        	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11390                           
 11391                           ;lorawan.c: 1390: }
 11392                           ;lorawan.c: 1392: return INVALID_PARAMETER;
 11393                           ;	Return value of _LORAWAN_RxDone is never used
 11394  08BA' 0012               	return	
 11395  08BC'                    l1952:
 11396                           
 11397                           ;lorawan.c: 1393: }
 11398                           ;lorawan.c: 1394: }
 11399                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 11400  08BC' 0102               	movlb	2	; () banked
 11401  08BE' 2900'              	incf	(_loRa+10)& (0+255),w,b
 11402  08C0' E113               	bnz	l15284
 11403  08C2' 2900'              	incf	(_loRa+11)& (0+255),w,b
 11404  08C4' E111               	bnz	l15284
 11405  08C6' 2900'              	incf	(_loRa+12)& (0+255),w,b
 11406  08C8' E10F               	bnz	l15284
 11407  08CA' 2900'              	incf	(_loRa+13)& (0+255),w,b
 11408  08CC' A4D8               	btfss	status,2,c
 11409  08CE' D00C               	goto	l1954
 11410                           
 11411                           ; BSR set to: 2
 11412                           ;lorawan.c: 1397: {
 11413                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 11414  08D0' 8300'              	bsf	(_loRa+4)& (0+255),1,b
 11415                           
 11416                           ; BSR set to: 2
 11417                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 11418  08D2' 0E02               	movlw	2
 11419  08D4' 1900'              	xorwf	(_loRa+18)& (0+255),w,b
 11420  08D6' A4D8               	btfss	status,2,c
 11421  08D8' 0012               	return	
 11422                           
 11423                           ; BSR set to: 2
 11424                           ;lorawan.c: 1402: {
 11425                           ;lorawan.c: 1403: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11426  08DA' 5100'              	movf	(_loRa+2)& (0+255),w,b
 11427  08DC' 0BF0               	andlw	-16
 11428  08DE' 0909               	iorlw	9
 11429  08E0' 6F00'              	movwf	(_loRa+2)& (0+255),b
 11430                           
 11431                           ; BSR set to: 2
 11432                           ;lorawan.c: 1404: LORAWAN_EnterContinuousReceive();
 11433  08E2' EC00' F000'        	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11434                           
 11435                           ;lorawan.c: 1405: }
 11436                           ;lorawan.c: 1406: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 11437                           ;	Return value of _LORAWAN_RxDone is never used
 11438  08E6' 0012               	return	
 11439  08E8'                    l1954:
 11440  08E8'                    l15284:
 11441                           
 11442                           ;lorawan.c: 1407: }
 11443                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 11444  08E8' 0102               	movlb	2	; () banked
 11445  08EA' 5100'              	movf	(_loRa+2)& (0+255),w,b
 11446  08EC' 0B0F               	andlw	15
 11447  08EE' 0A03               	xorlw	3
 11448  08F0' A4D8               	btfss	status,2,c
 11449  08F2' D003               	goto	l1956
 11450                           
 11451                           ; BSR set to: 2
 11452                           ;lorawan.c: 1411: {
 11453                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 11454  08F4' 5100'              	movf	(_loRa+229)& (0+255),w,b
 11455  08F6' EC00' F000'        	call	_SwTimerStop
 11456  08FA'                    l1956:
 11457                           
 11458                           ;lorawan.c: 1413: }
 11459                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11460  08FA' 0E01               	movlw	1
 11461  08FC' 0102               	movlb	2	; () banked
 11462  08FE' 6F00'              	movwf	(_loRa+216)& (0+255),b
 11463                           
 11464                           ; BSR set to: 2
 11465                           ;lorawan.c: 1417: CheckFlags (hdr);
 11466  0900' C091' F000'        	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 11467  0904' C092' F001'        	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 11468  0908' EC00' F000'        	call	_CheckFlags	;wreg free
 11469                           
 11470                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 11471  090C' 0100               	movlb	0	; () banked
 11472  090E' EE20 F005          	lfsr	2,5
 11473  0912' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11474  0914' 26D9               	addwf	fsr2l,f,c
 11475  0916' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11476  0918' 22DA               	addwfc	fsr2h,f,c
 11477  091A' 50DF               	movf	223,w,c
 11478  091C' 0B0F               	andlw	15
 11479  091E' 0900               	iorlw	0
 11480  0920' B4D8               	btfsc	status,2,c
 11481  0922' D016               	goto	l1957
 11482                           
 11483                           ; BSR set to: 0
 11484                           ;lorawan.c: 1420: {
 11485                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 11486  0924' 0E08               	movlw	8
 11487  0926' 2500'              	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 11488  0928' 6F00'              	movwf	MacExecuteCommands@buffer& (0+255),b
 11489  092A' 0E00               	movlw	0
 11490  092C' 2100'              	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11491  092E' 6F00'              	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 11492  0930' EE20 F005          	lfsr	2,5
 11493  0934' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11494  0936' 26D9               	addwf	fsr2l,f,c
 11495  0938' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11496  093A' 22DA               	addwfc	fsr2h,f,c
 11497  093C' 50DF               	movf	223,w,c
 11498  093E' 0B0F               	andlw	15
 11499  0940' 6F00'              	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11500  0942' EC00' F000'        	call	_MacExecuteCommands	;wreg free
 11501  0946' C050' F066'        	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11502  094A' C051' F067'        	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11503                           
 11504                           ;lorawan.c: 1422: }
 11505  094E' D007               	goto	l1958
 11506  0950'                    l1957:
 11507                           
 11508                           ;lorawan.c: 1423: else
 11509                           ;lorawan.c: 1424: {
 11510                           ;lorawan.c: 1425: buffer = buffer + 8;
 11511  0950' 0E08               	movlw	8
 11512  0952' 0101               	movlb	1	; () banked
 11513  0954' 2500'              	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11514  0956' 6F00'              	movwf	LORAWAN_RxDone@buffer& (0+255),b
 11515  0958' 0E00               	movlw	0
 11516  095A' 2100'              	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11517  095C' 6F00'              	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 11518  095E'                    l1958:
 11519                           
 11520                           ;lorawan.c: 1426: }
 11521                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11522                           
 11523                           ; BSR set to: 1
 11524  095E' 0101               	movlb	1	; () banked
 11525  0960' 5100'              	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11526  0962' 0100               	movlb	0	; () banked
 11527  0964' 6F00'              	movwf	??_LORAWAN_RxDone& (0+255),b
 11528  0966' 6B00'              	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11529  0968' EE20 F005          	lfsr	2,5
 11530  096C' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11531  096E' 26D9               	addwf	fsr2l,f,c
 11532  0970' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11533  0972' 22DA               	addwfc	fsr2h,f,c
 11534  0974' 50DF               	movf	223,w,c
 11535  0976' 0B0F               	andlw	15
 11536  0978' 6F00'              	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11537  097A' 6B00'              	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11538  097C' 0E0C               	movlw	12
 11539  097E' 2700'              	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11540  0980' 0E00               	movlw	0
 11541  0982' 2300'              	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11542  0984' 5100'              	movf	??_LORAWAN_RxDone& (0+255),w,b
 11543  0986' 1900'              	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11544  0988' E104               	bnz	u18120
 11545  098A' 5100'              	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11546  098C' 1900'              	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11547  098E' B4D8               	btfsc	status,2,c
 11548  0990' D098               	goto	l1959
 11549  0992'                    u18120:
 11550                           
 11551                           ; BSR set to: 0
 11552                           ;lorawan.c: 1428: {
 11553                           ;lorawan.c: 1429: fPort = *(buffer++);
 11554  0992' C066' FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11555  0996' C067' FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11556  099A' 50DF               	movf	indf2,w,c
 11557  099C' 6F00'              	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11558                           
 11559                           ; BSR set to: 0
 11560  099E' 0101               	movlb	1	; () banked
 11561  09A0' 4B00'              	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11562  09A2' 2B00'              	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11563                           
 11564                           ; BSR set to: 1
 11565                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 11566  09A4' 0100               	movlb	0	; () banked
 11567  09A6' EE20 F005          	lfsr	2,5
 11568  09AA' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11569  09AC' 26D9               	addwf	fsr2l,f,c
 11570  09AE' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11571  09B0' 22DA               	addwfc	fsr2h,f,c
 11572  09B2' 50DF               	movf	223,w,c
 11573  09B4' 0B0F               	andlw	15
 11574  09B6' 0800               	sublw	0
 11575  09B8' 0101               	movlb	1	; () banked
 11576  09BA' 2500'              	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11577  09BC' 0FF4               	addlw	244
 11578  09BE' 0100               	movlb	0	; () banked
 11579  09C0' 6F00'              	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11580                           
 11581                           ; BSR set to: 0
 11582                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 11583  09C2' EE20 F005          	lfsr	2,5
 11584  09C6' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11585  09C8' 26D9               	addwf	fsr2l,f,c
 11586  09CA' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11587  09CC' 22DA               	addwfc	fsr2h,f,c
 11588  09CE' 50DF               	movf	223,w,c
 11589  09D0' 0B0F               	andlw	15
 11590  09D2' 0F19               	addlw	25
 11591  09D4' 6F00'              	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11592                           
 11593                           ; BSR set to: 0
 11594                           ;lorawan.c: 1434: if (fPort != 0)
 11595  09D6' 5100'              	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 11596  09D8' B4D8               	btfsc	status,2,c
 11597  09DA' D028               	goto	l1960
 11598                           
 11599                           ; BSR set to: 0
 11600                           ;lorawan.c: 1435: {
 11601                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 11602  09DC' C066' F031'        	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11603  09E0' C067' F032'        	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11604  09E4' 0500'              	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11605  09E6' 6F00'              	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11606  09E8' 0E01               	movlw	1
 11607  09EA' 6F00'              	movwf	EncryptFRMPayload@dir& (0+255),b
 11608  09EC' C00A' F035'        	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11609  09F0' C00B' F036'        	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11610  09F4' C00C' F037'        	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11611  09F8' C00D' F038'        	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11612  09FC' 0E00'              	movlw	low (_loRa+50)
 11613  09FE' 6F00'              	movwf	EncryptFRMPayload@key& (0+255),b
 11614  0A00' 0E00'              	movlw	high (_loRa+50)
 11615  0A02' 6F00'              	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11616  0A04' C086' F03B'        	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11617  0A08' 0E00'              	movlw	low _radioBuffer
 11618  0A0A' 6F00'              	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11619  0A0C' 0E00'              	movlw	high _radioBuffer
 11620  0A0E' 6F00'              	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11621  0A10' 0E00               	movlw	0
 11622  0A12' 6F00'              	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11623  0A14' EC00' F000'        	call	_EncryptFRMPayload	;wreg free
 11624                           
 11625                           ;lorawan.c: 1437: packet = buffer - 1;
 11626  0A18' 0EFF               	movlw	255
 11627  0A1A' 0101               	movlb	1	; () banked
 11628  0A1C' 2500'              	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11629  0A1E' 0100               	movlb	0	; () banked
 11630  0A20' 6F00'              	movwf	LORAWAN_RxDone@packet& (0+255),b
 11631  0A22' 0EFF               	movlw	255
 11632  0A24' 0101               	movlb	1	; () banked
 11633  0A26' 2100'              	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11634  0A28' 0100               	movlb	0	; () banked
 11635  0A2A' D050               	goto	L29
 11636  0A2C'                    l1960:
 11637                           
 11638                           ; BSR set to: 0
 11639                           ;lorawan.c: 1439: else
 11640                           ;lorawan.c: 1440: {
 11641                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 11642                           
 11643                           ; BSR set to: 0
 11644  0A2C' 0101               	movlb	1	; () banked
 11645  0A2E' 5100'              	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11646  0A30' 0100               	movlb	0	; () banked
 11647  0A32' 6F00'              	movwf	??_LORAWAN_RxDone& (0+255),b
 11648  0A34' 6B00'              	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11649  0A36' EE20 F005          	lfsr	2,5
 11650  0A3A' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11651  0A3C' 26D9               	addwf	fsr2l,f,c
 11652  0A3E' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11653  0A40' 22DA               	addwfc	fsr2h,f,c
 11654  0A42' 50DF               	movf	223,w,c
 11655  0A44' 0B0F               	andlw	15
 11656  0A46' 6F00'              	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11657  0A48' 6B00'              	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11658  0A4A' 0E0D               	movlw	13
 11659  0A4C' 2700'              	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11660  0A4E' 0E00               	movlw	0
 11661  0A50' 2300'              	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11662  0A52' 5100'              	movf	??_LORAWAN_RxDone& (0+255),w,b
 11663  0A54' 5D00'              	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11664  0A56' 5100'              	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11665  0A58' 0A80               	xorlw	128
 11666  0A5A' 6F00'              	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 11667  0A5C' 5100'              	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11668  0A5E' 0A80               	xorlw	128
 11669  0A60' 5900'              	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 11670  0A62' B0D8               	btfsc	status,0,c
 11671  0A64' D02B               	goto	l1962
 11672                           
 11673                           ; BSR set to: 0
 11674                           ;lorawan.c: 1443: {
 11675                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 11676  0A66' C066' F031'        	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11677  0A6A' C067' F032'        	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11678  0A6E' 0500'              	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11679  0A70' 6F00'              	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11680  0A72' 0E01               	movlw	1
 11681  0A74' 6F00'              	movwf	EncryptFRMPayload@dir& (0+255),b
 11682  0A76' C00A' F035'        	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11683  0A7A' C00B' F036'        	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11684  0A7E' C00C' F037'        	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11685  0A82' C00D' F038'        	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11686  0A86' 0E00'              	movlw	low (_loRa+34)
 11687  0A88' 6F00'              	movwf	EncryptFRMPayload@key& (0+255),b
 11688  0A8A' 0E00'              	movlw	high (_loRa+34)
 11689  0A8C' 6F00'              	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11690  0A8E' C086' F03B'        	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11691  0A92' 0E00'              	movlw	low _radioBuffer
 11692  0A94' 6F00'              	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11693  0A96' 0E00'              	movlw	high _radioBuffer
 11694  0A98' 6F00'              	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11695  0A9A' 0E00               	movlw	0
 11696  0A9C' 6F00'              	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11697  0A9E' EC00' F000'        	call	_EncryptFRMPayload	;wreg free
 11698                           
 11699                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 11700  0AA2' C066' F050'        	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 11701  0AA6' C067' F051'        	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 11702  0AAA' 0100               	movlb	0	; () banked
 11703  0AAC' 0500'              	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11704  0AAE' 6F00'              	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11705  0AB0' EC00' F000'        	call	_MacExecuteCommands	;wreg free
 11706  0AB4' C050' F066'        	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11707  0AB8' C051' F067'        	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11708  0ABC'                    l1962:
 11709                           
 11710                           ;lorawan.c: 1447: }
 11711                           ;lorawan.c: 1449: frmPayloadLength = 0;
 11712  0ABC' 0E00               	movlw	0
 11713  0ABE' 0100               	movlb	0	; () banked
 11714  0AC0' D001               	goto	L9
 11715  0AC2'                    l1959:
 11716                           
 11717                           ; BSR set to: 0
 11718                           ;lorawan.c: 1453: else
 11719                           ;lorawan.c: 1454: {
 11720                           ;lorawan.c: 1455: frmPayloadLength = 0;
 11721                           
 11722                           ; BSR set to: 0
 11723  0AC2' 0E00               	movlw	0
 11724  0AC4'                    L9:
 11725  0AC4' 6F00'              	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11726                           
 11727                           ; BSR set to: 0
 11728                           ;lorawan.c: 1456: packet = (0);
 11729  0AC6' 0E00               	movlw	0
 11730  0AC8' 6F00'              	movwf	LORAWAN_RxDone@packet& (0+255),b
 11731  0ACA' 0E00               	movlw	0
 11732  0ACC'                    L29:
 11733  0ACC' 6F00'              	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11734                           
 11735                           ; BSR set to: 0
 11736                           ;lorawan.c: 1457: }
 11737                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11738                           
 11739                           ; BSR set to: 0
 11740  0ACE' 0E01               	movlw	1
 11741  0AD0' 0102               	movlb	2	; () banked
 11742  0AD2' 6F00'              	movwf	(_loRa+216)& (0+255),b
 11743                           
 11744                           ; BSR set to: 2
 11745                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 11746  0AD4' 0E00               	movlw	0
 11747  0AD6' 6F00'              	movwf	(_loRa+209)& (0+255),b
 11748  0AD8' 0E00               	movlw	0
 11749  0ADA' 6F00'              	movwf	(_loRa+208)& (0+255),b
 11750                           
 11751                           ; BSR set to: 2
 11752                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 11753  0ADC' 0E00               	movlw	0
 11754  0ADE' 6F00'              	movwf	(_loRa+238)& (0+255),b
 11755                           
 11756                           ; BSR set to: 2
 11757                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 11758  0AE0' 9900'              	bcf	_loRa& (0+255),4,b
 11759                           
 11760                           ; BSR set to: 2
 11761                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 11762  0AE2' 8300'              	bsf	(_loRa+3)& (0+255),1,b
 11763                           
 11764                           ; BSR set to: 2
 11765                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 11766  0AE4' A100'              	btfss	_loRa& (0+255),0,b
 11767  0AE6' D055               	goto	l1964
 11768                           
 11769                           ; BSR set to: 2
 11770                           ;lorawan.c: 1468: {
 11771                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 11772  0AE8' 0100               	movlb	0	; () banked
 11773  0AEA' EE20 F005          	lfsr	2,5
 11774  0AEE' 5100'              	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11775  0AF0' 26D9               	addwf	fsr2l,f,c
 11776  0AF2' 5100'              	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11777  0AF4' 22DA               	addwfc	fsr2h,f,c
 11778  0AF6' AADF               	btfss	indf2,5,c
 11779  0AF8' D049               	goto	l1965
 11780                           
 11781                           ; BSR set to: 0
 11782                           ;lorawan.c: 1470: {
 11783                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11784  0AFA' 0102               	movlb	2	; () banked
 11785  0AFC' 9100'              	bcf	_loRa& (0+255),0,b
 11786                           
 11787                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 11788  0AFE' 9100'              	bcf	(_loRa+2)& (0+255),0,b
 11789  0B00' 9300'              	bcf	(_loRa+2)& (0+255),1,b
 11790  0B02' 9500'              	bcf	(_loRa+2)& (0+255),2,b
 11791  0B04' 9700'              	bcf	(_loRa+2)& (0+255),3,b
 11792                           
 11793                           ; BSR set to: 2
 11794                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 11795  0B06' 0101               	movlb	1	; () banked
 11796  0B08' 5100'              	movf	_rxPayload& (0+255),w,b
 11797  0B0A' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
 11798  0B0C' B4D8               	btfsc	status,2,c
 11799  0B0E' D017               	goto	u18189
 11800                           
 11801                           ; BSR set to: 1
 11802                           ;lorawan.c: 1474: {
 11803                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 11804  0B10' 0102               	movlb	2	; () banked
 11805  0B12' 9B00'              	bcf	_loRa& (0+255),5,b
 11806                           
 11807                           ; BSR set to: 2
 11808                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11809  0B14' C088' F000'        	movff	LORAWAN_RxDone@packet,RxData@pData
 11810  0B18' C089' F001'        	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 11811  0B1C' C090' F002'        	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 11812  0B20' 0E01               	movlw	1
 11813  0B22' 0100               	movlb	0	; () banked
 11814  0B24' 6F00'              	movwf	RxData@status& (0+255),b
 11815  0B26' D801               	call	u18188
 11816  0B28' D00A               	goto	u18189
 11817  0B2A'                    u18188:
 11818  0B2A' 0005               	push	
 11819  0B2C' 6EFA               	movwf	pclath,c
 11820  0B2E' 0101               	movlb	1	; () banked
 11821  0B30' 5100'              	movf	_rxPayload& (0+255),w,b
 11822  0B32' 6EFD               	movwf	tosl,c
 11823  0B34' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
 11824  0B36' 6EFE               	movwf	tosh,c
 11825  0B38' 6AFF               	clrf	tosu,c
 11826  0B3A' 50FA               	movf	pclath,w,c
 11827  0B3C' 0012               	return		;indir
 11828  0B3E'                    u18189:
 11829                           
 11830                           ;lorawan.c: 1477: }
 11831                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 11832  0B3E' 0102               	movlb	2	; () banked
 11833  0B40' 9300'              	bcf	(_loRa+3)& (0+255),1,b
 11834                           
 11835                           ; BSR set to: 2
 11836                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 11837  0B42' BB00'              	btfsc	(_loRa+2)& (0+255),5,b
 11838                           
 11839                           ; BSR set to: 2
 11840  0B44' BB00'              	btfsc	_loRa& (0+255),5,b
 11841  0B46' D06C               	goto	l1979
 11842                           
 11843                           ; BSR set to: 2
 11844  0B48' B300'              	btfsc	_loRa& (0+255),1,b
 11845  0B4A' D002               	goto	u18220
 11846                           
 11847                           ; BSR set to: 2
 11848  0B4C' A700'              	btfss	_loRa& (0+255),3,b
 11849  0B4E' D068               	goto	l1979
 11850  0B50'                    u18220:
 11851                           
 11852                           ; BSR set to: 2
 11853                           ;lorawan.c: 1480: {
 11854                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 11855                           
 11856                           ; BSR set to: 2
 11857  0B50' 0E01               	movlw	1
 11858  0B52' 0100               	movlb	0	; () banked
 11859  0B54' 6F00'              	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 11860  0B56' 0E00'              	movlw	low LORAWAN_RxDone@channelIndex
 11861  0B58' 6F00'              	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 11862  0B5A' 0E00'              	movlw	high LORAWAN_RxDone@channelIndex
 11863  0B5C' 6F00'              	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 11864  0B5E' 0102               	movlb	2	; () banked
 11865  0B60' 5100'              	movf	(_loRa+237)& (0+255),w,b
 11866  0B62' EC00' F000'        	call	_SearchAvailableChannel
 11867  0B66' 0900               	iorlw	0
 11868  0B68' A4D8               	btfss	status,2,c
 11869  0B6A' D00D               	goto	l1970
 11870                           
 11871                           ;lorawan.c: 1482: {
 11872                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 11873  0B6C' 0E00               	movlw	0
 11874  0B6E' 0100               	movlb	0	; () banked
 11875  0B70' 6F00'              	movwf	LORAWAN_Send@port& (0+255),b
 11876  0B72' 0E00               	movlw	0
 11877  0B74' 6F00'              	movwf	LORAWAN_Send@buffer& (0+255),b
 11878  0B76' 0E00               	movlw	0
 11879  0B78' 6F00'              	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 11880  0B7A' 0E00               	movlw	0
 11881  0B7C' 6F00'              	movwf	LORAWAN_Send@bufferLength& (0+255),b
 11882  0B7E' 0E00               	movlw	0
 11883  0B80' EC00' F000'        	call	_LORAWAN_Send
 11884  0B84' D048               	goto	l15388
 11885  0B86'                    l1970:
 11886                           
 11887                           ;lorawan.c: 1486: else
 11888                           ;lorawan.c: 1487: {
 11889                           ;lorawan.c: 1489: StartReTxTimer();
 11890                           
 11891                           ; BSR set to: 2
 11892  0B86' EC00' F000'        	call	_StartReTxTimer	;wreg free
 11893                           
 11894                           ;lorawan.c: 1490: }
 11895                           ;lorawan.c: 1491: }
 11896                           ;lorawan.c: 1492: }
 11897  0B8A' D04A               	goto	l1979
 11898  0B8C'                    l1965:
 11899                           
 11900                           ;lorawan.c: 1494: else
 11901                           ;lorawan.c: 1495: {
 11902                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 11903  0B8C' EC00' F000'        	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 11904                           
 11905                           ;lorawan.c: 1497: }
 11906                           ;lorawan.c: 1498: }
 11907  0B90' D047               	goto	l1979
 11908  0B92'                    l1964:
 11909                           
 11910                           ; BSR set to: 2
 11911                           ;lorawan.c: 1499: else
 11912                           ;lorawan.c: 1500: {
 11913                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 11914  0B92' 9100'              	bcf	(_loRa+2)& (0+255),0,b
 11915  0B94' 9300'              	bcf	(_loRa+2)& (0+255),1,b
 11916  0B96' 9500'              	bcf	(_loRa+2)& (0+255),2,b
 11917  0B98' 9700'              	bcf	(_loRa+2)& (0+255),3,b
 11918                           
 11919                           ; BSR set to: 2
 11920                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 11921  0B9A' 0101               	movlb	1	; () banked
 11922  0B9C' 5100'              	movf	_rxPayload& (0+255),w,b
 11923  0B9E' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
 11924  0BA0' B4D8               	btfsc	status,2,c
 11925  0BA2' D017               	goto	u18259
 11926                           
 11927                           ; BSR set to: 1
 11928                           ;lorawan.c: 1504: {
 11929                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 11930  0BA4' 0102               	movlb	2	; () banked
 11931  0BA6' 9B00'              	bcf	_loRa& (0+255),5,b
 11932                           
 11933                           ; BSR set to: 2
 11934                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11935  0BA8' C088' F000'        	movff	LORAWAN_RxDone@packet,RxData@pData
 11936  0BAC' C089' F001'        	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 11937  0BB0' C090' F002'        	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 11938  0BB4' 0E01               	movlw	1
 11939  0BB6' 0100               	movlb	0	; () banked
 11940  0BB8' 6F00'              	movwf	RxData@status& (0+255),b
 11941  0BBA' D801               	call	u18258
 11942  0BBC' D00A               	goto	u18259
 11943  0BBE'                    u18258:
 11944  0BBE' 0005               	push	
 11945  0BC0' 6EFA               	movwf	pclath,c
 11946  0BC2' 0101               	movlb	1	; () banked
 11947  0BC4' 5100'              	movf	_rxPayload& (0+255),w,b
 11948  0BC6' 6EFD               	movwf	tosl,c
 11949  0BC8' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
 11950  0BCA' 6EFE               	movwf	tosh,c
 11951  0BCC' 6AFF               	clrf	tosu,c
 11952  0BCE' 50FA               	movf	pclath,w,c
 11953  0BD0' 0012               	return		;indir
 11954  0BD2'                    u18259:
 11955                           
 11956                           ;lorawan.c: 1507: }
 11957                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 11958  0BD2' 0102               	movlb	2	; () banked
 11959  0BD4' BB00'              	btfsc	(_loRa+2)& (0+255),5,b
 11960                           
 11961                           ; BSR set to: 2
 11962  0BD6' BB00'              	btfsc	_loRa& (0+255),5,b
 11963  0BD8' D023               	goto	l1979
 11964                           
 11965                           ; BSR set to: 2
 11966  0BDA' B300'              	btfsc	_loRa& (0+255),1,b
 11967  0BDC' D002               	goto	u18290
 11968                           
 11969                           ; BSR set to: 2
 11970  0BDE' A700'              	btfss	_loRa& (0+255),3,b
 11971  0BE0' D01F               	goto	l1979
 11972  0BE2'                    u18290:
 11973                           
 11974                           ; BSR set to: 2
 11975                           ;lorawan.c: 1510: {
 11976                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 11977                           
 11978                           ; BSR set to: 2
 11979  0BE2' 0E01               	movlw	1
 11980  0BE4' 0100               	movlb	0	; () banked
 11981  0BE6' 6F00'              	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 11982  0BE8' 0E00'              	movlw	low LORAWAN_RxDone@channelIndex
 11983  0BEA' 6F00'              	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 11984  0BEC' 0E00'              	movlw	high LORAWAN_RxDone@channelIndex
 11985  0BEE' 6F00'              	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 11986  0BF0' 0102               	movlb	2	; () banked
 11987  0BF2' 5100'              	movf	(_loRa+237)& (0+255),w,b
 11988  0BF4' EC00' F000'        	call	_SearchAvailableChannel
 11989  0BF8' 0900               	iorlw	0
 11990  0BFA' A4D8               	btfss	status,2,c
 11991  0BFC' D00F               	goto	l1978
 11992                           
 11993                           ;lorawan.c: 1512: {
 11994                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 11995  0BFE' 0E00               	movlw	0
 11996  0C00' 0100               	movlb	0	; () banked
 11997  0C02' 6F00'              	movwf	LORAWAN_Send@port& (0+255),b
 11998  0C04' 0E00               	movlw	0
 11999  0C06' 6F00'              	movwf	LORAWAN_Send@buffer& (0+255),b
 12000  0C08' 0E00               	movlw	0
 12001  0C0A' 6F00'              	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12002  0C0C' 0E00               	movlw	0
 12003  0C0E' 6F00'              	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12004  0C10' 0E00               	movlw	0
 12005  0C12' EC00' F000'        	call	_LORAWAN_Send
 12006  0C16'                    l15388:
 12007                           
 12008                           ;lorawan.c: 1514: loRa.lorawanMacStatus.fPending = 0;
 12009  0C16' 0102               	movlb	2	; () banked
 12010  0C18' 9700'              	bcf	_loRa& (0+255),3,b
 12011                           
 12012                           ;lorawan.c: 1515: }
 12013  0C1A' D002               	goto	l1979
 12014  0C1C'                    l1978:
 12015                           
 12016                           ;lorawan.c: 1516: else
 12017                           ;lorawan.c: 1517: {
 12018                           ;lorawan.c: 1519: StartReTxTimer();
 12019                           
 12020                           ; BSR set to: 2
 12021  0C1C' EC00' F000'        	call	_StartReTxTimer	;wreg free
 12022  0C20'                    l1979:
 12023                           
 12024                           ;lorawan.c: 1520: }
 12025                           ;lorawan.c: 1521: }
 12026                           ;lorawan.c: 1522: }
 12027                           ;lorawan.c: 1524: if (CLASS_C == loRa.deviceClass)
 12028  0C20' 0E02               	movlw	2
 12029  0C22' 0102               	movlb	2	; () banked
 12030  0C24' 1900'              	xorwf	(_loRa+18)& (0+255),w,b
 12031  0C26' A4D8               	btfss	status,2,c
 12032  0C28' 0012               	return	
 12033                           
 12034                           ; BSR set to: 2
 12035                           ;lorawan.c: 1525: {
 12036                           ;lorawan.c: 1526: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12037  0C2A' 5100'              	movf	(_loRa+2)& (0+255),w,b
 12038  0C2C' 0BF0               	andlw	-16
 12039  0C2E' 0909               	iorlw	9
 12040  0C30' 6F00'              	movwf	(_loRa+2)& (0+255),b
 12041                           
 12042                           ; BSR set to: 2
 12043                           ;lorawan.c: 1527: LORAWAN_EnterContinuousReceive();
 12044  0C32' EC00' F000'        	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12045                           
 12046                           ;lorawan.c: 1528: }
 12047                           ;lorawan.c: 1529: }
 12048  0C36' 0012               	return	
 12049  0C38'                    l1919:
 12050                           
 12051                           ;lorawan.c: 1530: else
 12052                           ;lorawan.c: 1531: {
 12053                           ;lorawan.c: 1533: SetReceptionNotOkState ();
 12054  0C38' EC00' F000'        	call	_SetReceptionNotOkState	;wreg free
 12055                           
 12056                           ;lorawan.c: 1535: }
 12057                           ;lorawan.c: 1536: }
 12058                           
 12059                           ;lorawan.c: 1534: return INVALID_PARAMETER;
 12060                           ;	Return value of _LORAWAN_RxDone is never used
 12061  0C3C' 0012               	return	
 12062  0C3E'                    l1905:
 12063                           
 12064                           ;lorawan.c: 1537: else
 12065                           ;lorawan.c: 1538: {
 12066                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 12067  0C3E' 0101               	movlb	1	; () banked
 12068  0C40' 5100'              	movf	_rxPayload& (0+255),w,b
 12069  0C42' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
 12070  0C44' B4D8               	btfsc	status,2,c
 12071  0C46' 0012               	return	
 12072                           
 12073                           ; BSR set to: 1
 12074                           ;lorawan.c: 1541: {
 12075                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 12076  0C48' EC00' F000'        	call	_RADIO_GetStatus	;wreg free
 12077  0C4C' 0100               	movlb	0	; () banked
 12078  0C4E' 6F00'              	movwf	??_LORAWAN_RxDone& (0+255),b
 12079  0C50' B700'              	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 12080  0C52' D014               	goto	l1984
 12081                           
 12082                           ; BSR set to: 0
 12083                           ;lorawan.c: 1543: {
 12084                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 12085  0C54' C066' F000'        	movff	LORAWAN_RxDone@buffer,RxData@pData
 12086  0C58' C067' F001'        	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 12087  0C5C' C068' F002'        	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 12088  0C60' 0E03               	movlw	3
 12089  0C62' 6F00'              	movwf	RxData@status& (0+255),b
 12090  0C64' D801               	call	u18348
 12091  0C66' 0012               	return	
 12092  0C68'                    u18348:
 12093  0C68' 0005               	push	
 12094  0C6A' 6EFA               	movwf	pclath,c
 12095  0C6C' 0101               	movlb	1	; () banked
 12096  0C6E' 5100'              	movf	_rxPayload& (0+255),w,b
 12097  0C70' 6EFD               	movwf	tosl,c
 12098  0C72' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
 12099  0C74' 6EFE               	movwf	tosh,c
 12100  0C76' 6AFF               	clrf	tosu,c
 12101  0C78' 50FA               	movf	pclath,w,c
 12102  0C7A' 0012               	return		;indir
 12103  0C7C'                    l1984:
 12104                           
 12105                           ;lorawan.c: 1546: else
 12106                           ;lorawan.c: 1547: {
 12107                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 12108  0C7C' C066' F000'        	movff	LORAWAN_RxDone@buffer,RxData@pData
 12109  0C80' C067' F001'        	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 12110  0C84' C068' F002'        	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 12111  0C88' 0E02               	movlw	2
 12112  0C8A' 0100               	movlb	0	; () banked
 12113  0C8C' 6F00'              	movwf	RxData@status& (0+255),b
 12114  0C8E' D801               	call	u18358
 12115  0C90' 0012               	return	
 12116  0C92'                    u18358:
 12117  0C92' 0005               	push	
 12118  0C94' 6EFA               	movwf	pclath,c
 12119  0C96' 0101               	movlb	1	; () banked
 12120  0C98' 5100'              	movf	_rxPayload& (0+255),w,b
 12121  0C9A' 6EFD               	movwf	tosl,c
 12122  0C9C' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
 12123  0C9E' 6EFE               	movwf	tosh,c
 12124  0CA0' 6AFF               	clrf	tosu,c
 12125  0CA2' 50FA               	movf	pclath,w,c
 12126  0CA4' 0012               	return		;indir
 12127  0CA6'                    __end_of_LORAWAN_RxDone:
 12128                           	opt stack 0
 12129                           tosu	equ	0xFFF
 12130                           tosh	equ	0xFFE
 12131                           tosl	equ	0xFFD
 12132                           pclath	equ	0xFFA
 12133                           tblptru	equ	0xFF8
 12134                           tblptrh	equ	0xFF7
 12135                           tblptrl	equ	0xFF6
 12136                           tablat	equ	0xFF5
 12137                           prodh	equ	0xFF4
 12138                           prodl	equ	0xFF3
 12139                           intcon	equ	0xFF2
 12140                           intcon2	equ	0xFF1
 12141                           intcon3	equ	0xFF0
 12142                           postinc0	equ	0xFEE
 12143                           wreg	equ	0xFE8
 12144                           postinc1	equ	0xFE6
 12145                           postdec1	equ	0xFE5
 12146                           plusw1	equ	0xFE3
 12147                           fsr1h	equ	0xFE2
 12148                           fsr1l	equ	0xFE1
 12149                           indf2	equ	0xFDF
 12150                           postinc2	equ	0xFDE
 12151                           postdec2	equ	0xFDD
 12152                           fsr2h	equ	0xFDA
 12153                           fsr2l	equ	0xFD9
 12154                           status	equ	0xFD8
 12155                           
 12156 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 12157 ;; Defined at:
 12158 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12159 ;; Parameters:    Size  Location     Type
 12160 ;;		None
 12161 ;; Auto vars:     Size  Location     Type
 12162 ;;		None
 12163 ;; Return value:  Size  Location     Type
 12164 ;;                  1    wreg      void 
 12165 ;; Registers used:
 12166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12167 ;; Tracked objects:
 12168 ;;		On entry : 0/0
 12169 ;;		On exit  : 0/0
 12170 ;;		Unchanged: 0/0
 12171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12174 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12175 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12176 ;;Total ram usage:        4 bytes
 12177 ;; Hardware stack levels used:    1
 12178 ;; Hardware stack levels required when called:   11
 12179 ;; This function calls:
 12180 ;;		_SwTimerSetTimeout
 12181 ;;		_SwTimerStart
 12182 ;;		___lldiv
 12183 ;; This function is called by:
 12184 ;;		_AckRetransmissionCallback
 12185 ;;		_LORAWAN_RxDone
 12186 ;; This function uses a non-reentrant model
 12187 ;;
 12188                           
 12189                           	psect	text53
 12190  0000'                    __ptext53:
 12191                           	opt stack 0
 12192  0000'                    _UpdateRetransmissionAckTimeoutState:
 12193                           	opt stack 16
 12194                           
 12195                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12196                           
 12197                           ;incstack = 0
 12198  0000' 0102               	movlb	2	; () banked
 12199  0002' 5100'              	movf	(_loRa+2)& (0+255),w,b
 12200  0004' 0BF0               	andlw	-16
 12201  0006' 0906               	iorlw	6
 12202  0008' 6F00'              	movwf	(_loRa+2)& (0+255),b
 12203                           
 12204                           ; BSR set to: 2
 12205                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 12206  000A' 5100'              	movf	(_loRa+160)& (0+255),w,b
 12207  000C' 0100               	movlb	0	; () banked
 12208  000E' 6F00'              	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 12209  0010' 0102               	movlb	2	; () banked
 12210  0012' 5100'              	movf	(_loRa+161)& (0+255),w,b
 12211  0014' 0100               	movlb	0	; () banked
 12212  0016' 6F00'              	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 12213  0018' 6B00'              	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 12214  001A' 6B00'              	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 12215  001C' 0E0C               	movlw	12
 12216  001E'                    u17355:
 12217  001E' 90D8               	bcf	status,0,c
 12218  0020' 3700'              	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 12219  0022' 3700'              	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 12220  0024' 3700'              	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 12221  0026' 3700'              	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 12222  0028' 2EE8               	decfsz	wreg,f,c
 12223  002A' D7F9               	goto	u17355
 12224  002C' C03A' F000'        	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 12225  0030' C03B' F001'        	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 12226  0034' C03C' F002'        	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 12227  0038' C03D' F003'        	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 12228  003C' 0E7D               	movlw	125
 12229  003E' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 12230  0040' 0E00               	movlw	0
 12231  0042' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 12232  0044' 0E00               	movlw	0
 12233  0046' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 12234  0048' 0E00               	movlw	0
 12235  004A' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 12236  004C' EC00' F000'        	call	___lldiv	;wreg free
 12237  0050' C000' F00D'        	movff	?___lldiv,SwTimerSetTimeout@timeout
 12238  0054' C001' F00E'        	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12239  0058' C002' F00F'        	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12240  005C' C003' F010'        	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12241  0060' 0102               	movlb	2	; () banked
 12242  0062' 5100'              	movf	(_loRa+232)& (0+255),w,b
 12243  0064' EC00' F000'        	call	_SwTimerSetTimeout
 12244                           
 12245                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 12246  0068' 0102               	movlb	2	; () banked
 12247  006A' 5100'              	movf	(_loRa+232)& (0+255),w,b
 12248  006C' EC00' F000'        	call	_SwTimerStart
 12249  0070' 0012               	return		;funcret
 12250  0072'                    __end_of_UpdateRetransmissionAckTimeoutState:
 12251                           	opt stack 0
 12252                           tosu	equ	0xFFF
 12253                           tosh	equ	0xFFE
 12254                           tosl	equ	0xFFD
 12255                           pclath	equ	0xFFA
 12256                           tblptru	equ	0xFF8
 12257                           tblptrh	equ	0xFF7
 12258                           tblptrl	equ	0xFF6
 12259                           tablat	equ	0xFF5
 12260                           prodh	equ	0xFF4
 12261                           prodl	equ	0xFF3
 12262                           intcon	equ	0xFF2
 12263                           intcon2	equ	0xFF1
 12264                           intcon3	equ	0xFF0
 12265                           postinc0	equ	0xFEE
 12266                           wreg	equ	0xFE8
 12267                           postinc1	equ	0xFE6
 12268                           postdec1	equ	0xFE5
 12269                           plusw1	equ	0xFE3
 12270                           fsr1h	equ	0xFE2
 12271                           fsr1l	equ	0xFE1
 12272                           indf2	equ	0xFDF
 12273                           postinc2	equ	0xFDE
 12274                           postdec2	equ	0xFDD
 12275                           fsr2h	equ	0xFDA
 12276                           fsr2l	equ	0xFD9
 12277                           status	equ	0xFD8
 12278                           
 12279 ;; *************** function _UpdateDLSettings *****************
 12280 ;; Defined at:
 12281 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12282 ;; Parameters:    Size  Location     Type
 12283 ;;  dlRx2Dr         1    wreg     unsigned char 
 12284 ;;  dlRx1DrOffse    1    0[BANK0 ] unsigned char 
 12285 ;; Auto vars:     Size  Location     Type
 12286 ;;  dlRx2Dr         1    1[BANK0 ] unsigned char 
 12287 ;; Return value:  Size  Location     Type
 12288 ;;                  1    wreg      void 
 12289 ;; Registers used:
 12290 ;;		wreg, status,2, status,0
 12291 ;; Tracked objects:
 12292 ;;		On entry : 0/0
 12293 ;;		On exit  : 0/0
 12294 ;;		Unchanged: 0/0
 12295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12296 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12297 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12299 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12300 ;;Total ram usage:        2 bytes
 12301 ;; Hardware stack levels used:    1
 12302 ;; Hardware stack levels required when called:    7
 12303 ;; This function calls:
 12304 ;;		Nothing
 12305 ;; This function is called by:
 12306 ;;		_LORAWAN_RxDone
 12307 ;; This function uses a non-reentrant model
 12308 ;;
 12309                           
 12310                           	psect	text54
 12311  0000'                    __ptext54:
 12312                           	opt stack 0
 12313  0000'                    _UpdateDLSettings:
 12314                           	opt stack 19
 12315                           
 12316                           ;incstack = 0
 12317                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 12318  0000' 0100               	movlb	0	; () banked
 12319  0002' 6F00'              	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 12320                           
 12321                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 12322  0004' 0E08               	movlw	8
 12323  0006' 0100               	movlb	0	; () banked
 12324  0008' 6100'              	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 12325  000A' D002               	goto	l1180
 12326                           
 12327                           ; BSR set to: 0
 12328                           ;lorawan_eu.c: 891: {
 12329                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 12330  000C' C001' F01C'        	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 12331  0010'                    l1180:
 12332                           
 12333                           ; BSR set to: 0
 12334                           ;lorawan_eu.c: 893: }
 12335                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 12336                           
 12337                           ; BSR set to: 0
 12338  0010' 0E06               	movlw	6
 12339  0012' 6100'              	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 12340  0014' 0012               	return	
 12341                           
 12342                           ; BSR set to: 0
 12343                           ;lorawan_eu.c: 896: {
 12344                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 12345  0016' C000' F0EF'        	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 12346  001A' 0012               	return	
 12347  001C'                    __end_of_UpdateDLSettings:
 12348                           	opt stack 0
 12349                           tosu	equ	0xFFF
 12350                           tosh	equ	0xFFE
 12351                           tosl	equ	0xFFD
 12352                           pclath	equ	0xFFA
 12353                           tblptru	equ	0xFF8
 12354                           tblptrh	equ	0xFF7
 12355                           tblptrl	equ	0xFF6
 12356                           tablat	equ	0xFF5
 12357                           prodh	equ	0xFF4
 12358                           prodl	equ	0xFF3
 12359                           intcon	equ	0xFF2
 12360                           intcon2	equ	0xFF1
 12361                           intcon3	equ	0xFF0
 12362                           postinc0	equ	0xFEE
 12363                           wreg	equ	0xFE8
 12364                           postinc1	equ	0xFE6
 12365                           postdec1	equ	0xFE5
 12366                           plusw1	equ	0xFE3
 12367                           fsr1h	equ	0xFE2
 12368                           fsr1l	equ	0xFE1
 12369                           indf2	equ	0xFDF
 12370                           postinc2	equ	0xFDE
 12371                           postdec2	equ	0xFDD
 12372                           fsr2h	equ	0xFDA
 12373                           fsr2l	equ	0xFD9
 12374                           status	equ	0xFD8
 12375                           
 12376 ;; *************** function _UpdateCfList *****************
 12377 ;; Defined at:
 12378 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12379 ;; Parameters:    Size  Location     Type
 12380 ;;  bufferLength    1    wreg     unsigned char 
 12381 ;;  joinAccept      2   70[BANK0 ] PTR struct .
 12382 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12383 ;; Auto vars:     Size  Location     Type
 12384 ;;  bufferLength    1   72[BANK0 ] unsigned char 
 12385 ;;  frequency       4   73[BANK0 ] unsigned long 
 12386 ;;  i               1   78[BANK0 ] unsigned char 
 12387 ;;  channelIndex    1   77[BANK0 ] unsigned char 
 12388 ;; Return value:  Size  Location     Type
 12389 ;;                  1    wreg      void 
 12390 ;; Registers used:
 12391 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12392 ;; Tracked objects:
 12393 ;;		On entry : 0/0
 12394 ;;		On exit  : 0/0
 12395 ;;		Unchanged: 0/0
 12396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12397 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12398 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12400 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12401 ;;Total ram usage:        9 bytes
 12402 ;; Hardware stack levels used:    1
 12403 ;; Hardware stack levels required when called:    9
 12404 ;; This function calls:
 12405 ;;		_LORAWAN_SetChannelIdStatus
 12406 ;;		_ValidateFrequency
 12407 ;;		___lmul
 12408 ;;		___wmul
 12409 ;;		_memcpy
 12410 ;; This function is called by:
 12411 ;;		_LORAWAN_RxDone
 12412 ;; This function uses a non-reentrant model
 12413 ;;
 12414                           
 12415                           	psect	text55
 12416  0000'                    __ptext55:
 12417                           	opt stack 0
 12418  0000'                    _UpdateCfList:
 12419                           	opt stack 17
 12420                           
 12421                           ; BSR set to: 0
 12422                           ;incstack = 0
 12423                           ;UpdateCfList@bufferLength stored from wreg
 12424  0000' 0100               	movlb	0	; () banked
 12425  0002' 6F00'              	movwf	UpdateCfList@bufferLength& (0+255),b
 12426                           
 12427                           ;lorawan_eu.c: 826: uint8_t i;
 12428                           ;lorawan_eu.c: 827: uint32_t frequency;
 12429                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 12430                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 12431  0004' 0E21               	movlw	33
 12432  0006' 0100               	movlb	0	; () banked
 12433  0008' 1900'              	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 12434  000A' A4D8               	btfss	status,2,c
 12435  000C' 0012               	return	
 12436                           
 12437                           ; BSR set to: 0
 12438                           ;lorawan_eu.c: 831: {
 12439                           ;lorawan_eu.c: 833: channelIndex = 3;
 12440  000E' 0E03               	movlw	3
 12441  0010' 6F00'              	movwf	UpdateCfList@channelIndex& (0+255),b
 12442                           
 12443                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 12444  0012' 0E00               	movlw	0
 12445  0014' 6F00'              	movwf	UpdateCfList@i& (0+255),b
 12446  0016'                    l14706:
 12447                           
 12448                           ; BSR set to: 0
 12449  0016' 0E04               	movlw	4
 12450  0018' 6500'              	cpfsgt	UpdateCfList@i& (0+255),b
 12451  001A' D001               	goto	l1164
 12452  001C' D0E5               	goto	u17120
 12453  001E'                    l1164:
 12454                           
 12455                           ; BSR set to: 0
 12456                           ;lorawan_eu.c: 836: {
 12457                           ;lorawan_eu.c: 837: frequency = 0;
 12458                           
 12459                           ; BSR set to: 0
 12460  001E' 0E00               	movlw	0
 12461  0020' 6F00'              	movwf	UpdateCfList@frequency& (0+255),b
 12462  0022' 0E00               	movlw	0
 12463  0024' 6F00'              	movwf	(UpdateCfList@frequency+1)& (0+255),b
 12464  0026' 0E00               	movlw	0
 12465  0028' 6F00'              	movwf	(UpdateCfList@frequency+2)& (0+255),b
 12466  002A' 0E00               	movlw	0
 12467  002C' 6F00'              	movwf	(UpdateCfList@frequency+3)& (0+255),b
 12468                           
 12469                           ; BSR set to: 0
 12470                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 12471  002E' 0E00'              	movlw	low UpdateCfList@frequency
 12472  0030' 6F00'              	movwf	memcpy@d1& (0+255),b
 12473  0032' 0E00'              	movlw	high UpdateCfList@frequency
 12474  0034' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 12475  0036' 5100'              	movf	UpdateCfList@i& (0+255),w,b
 12476  0038' 0D03               	mullw	3
 12477  003A' 0E0D               	movlw	13
 12478  003C' 26F3               	addwf	prodl,f,c
 12479  003E' 0E00               	movlw	0
 12480  0040' 22F4               	addwfc	prodh,f,c
 12481  0042' 50F3               	movf	prodl,w,c
 12482  0044' 2500'              	addwf	UpdateCfList@joinAccept& (0+255),w,b
 12483  0046' 6F00'              	movwf	memcpy@s1& (0+255),b
 12484  0048' 50F4               	movf	prodh,w,c
 12485  004A' 2100'              	addwfc	(UpdateCfList@joinAccept+1)& (0+255),w,b
 12486  004C' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 12487  004E' 0E00               	movlw	0
 12488  0050' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 12489  0052' 0E03               	movlw	3
 12490  0054' 6F00'              	movwf	memcpy@n& (0+255),b
 12491  0056' EC00' F000'        	call	_memcpy	;wreg free
 12492                           
 12493                           ;lorawan_eu.c: 839: frequency *= 100;
 12494  005A' C049' F03A'        	movff	UpdateCfList@frequency,___lmul@multiplier
 12495  005E' C04A' F03B'        	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 12496  0062' C04B' F03C'        	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 12497  0066' C04C' F03D'        	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 12498  006A' 0E64               	movlw	100
 12499  006C' 0100               	movlb	0	; () banked
 12500  006E' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 12501  0070' 0E00               	movlw	0
 12502  0072' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 12503  0074' 0E00               	movlw	0
 12504  0076' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 12505  0078' 0E00               	movlw	0
 12506  007A' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 12507  007C' EC00' F000'        	call	___lmul	;wreg free
 12508  0080' C03A' F049'        	movff	?___lmul,UpdateCfList@frequency
 12509  0084' C03B' F04A'        	movff	?___lmul+1,UpdateCfList@frequency+1
 12510  0088' C03C' F04B'        	movff	?___lmul+2,UpdateCfList@frequency+2
 12511  008C' C03D' F04C'        	movff	?___lmul+3,UpdateCfList@frequency+3
 12512                           
 12513                           ;lorawan_eu.c: 840: if (frequency != 0)
 12514  0090' 0100               	movlb	0	; () banked
 12515  0092' 5100'              	movf	UpdateCfList@frequency& (0+255),w,b
 12516  0094' 1100'              	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 12517  0096' 1100'              	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 12518  0098' 1100'              	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 12519  009A' B4D8               	btfsc	status,2,c
 12520  009C' D09B               	goto	l1166
 12521                           
 12522                           ; BSR set to: 0
 12523                           ;lorawan_eu.c: 841: {
 12524                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 12525  009E' C049' F000'        	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 12526  00A2' C04A' F001'        	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 12527  00A6' C04B' F002'        	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 12528  00AA' C04C' F003'        	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 12529  00AE' EC00' F000'        	call	_ValidateFrequency	;wreg free
 12530  00B2' 0900               	iorlw	0
 12531  00B4' A4D8               	btfss	status,2,c
 12532  00B6' D095               	goto	l1168
 12533                           
 12534                           ;lorawan_eu.c: 843: {
 12535                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 12536  00B8' 0100               	movlb	0	; () banked
 12537  00BA' 5100'              	movf	UpdateCfList@i& (0+255),w,b
 12538  00BC' 2500'              	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12539  00BE' 6F00'              	movwf	___wmul@multiplier& (0+255),b
 12540  00C0' 6B00'              	clrf	(___wmul@multiplier+1)& (0+255),b
 12541  00C2' 3700'              	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 12542  00C4' 0E00               	movlw	0
 12543  00C6' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
 12544  00C8' 0E0E               	movlw	14
 12545  00CA' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
 12546  00CC' EC00' F000'        	call	___wmul	;wreg free
 12547  00D0' 0E00'              	movlw	low _Channels
 12548  00D2' 0100               	movlb	0	; () banked
 12549  00D4' 2500'              	addwf	?___wmul& (0+255),w,b
 12550  00D6' 6ED9               	movwf	fsr2l,c
 12551  00D8' 0E00'              	movlw	high _Channels
 12552  00DA' 2100'              	addwfc	(?___wmul+1)& (0+255),w,b
 12553  00DC' 6EDA               	movwf	fsr2h,c
 12554  00DE' C049' FFDE         	movff	UpdateCfList@frequency,postinc2
 12555  00E2' C04A' FFDE         	movff	UpdateCfList@frequency+1,postinc2
 12556  00E6' C04B' FFDE         	movff	UpdateCfList@frequency+2,postinc2
 12557  00EA' C04C' FFDE         	movff	UpdateCfList@frequency+3,postinc2
 12558                           
 12559                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 12560  00EE' 5100'              	movf	UpdateCfList@i& (0+255),w,b
 12561  00F0' 2500'              	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12562  00F2' 6F00'              	movwf	___wmul@multiplier& (0+255),b
 12563  00F4' 6B00'              	clrf	(___wmul@multiplier+1)& (0+255),b
 12564  00F6' 3700'              	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 12565  00F8' 0E00               	movlw	0
 12566  00FA' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
 12567  00FC' 0E0E               	movlw	14
 12568  00FE' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
 12569  0100' EC00' F000'        	call	___wmul	;wreg free
 12570  0104' 0E05               	movlw	5
 12571  0106' 0100               	movlb	0	; () banked
 12572  0108' 2700'              	addwf	?___wmul& (0+255),f,b
 12573  010A' 0E00               	movlw	0
 12574  010C' 2300'              	addwfc	(?___wmul+1)& (0+255),f,b
 12575  010E' 0E00'              	movlw	low _Channels
 12576  0110' 2500'              	addwf	?___wmul& (0+255),w,b
 12577  0112' 6ED9               	movwf	fsr2l,c
 12578  0114' 0E00'              	movlw	high _Channels
 12579  0116' 2100'              	addwfc	(?___wmul+1)& (0+255),w,b
 12580  0118' 6EDA               	movwf	fsr2h,c
 12581  011A' 0104               	movlb	4	; () banked
 12582  011C' 50DF               	movf	223,w,c
 12583  011E' 0B0F               	andlw	-241
 12584  0120' 0950               	iorlw	80
 12585  0122' 6EDF               	movwf	223,c
 12586                           
 12587                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 12588  0124' 0100               	movlb	0	; () banked
 12589  0126' 5100'              	movf	UpdateCfList@i& (0+255),w,b
 12590  0128' 2500'              	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12591  012A' 6F00'              	movwf	___wmul@multiplier& (0+255),b
 12592  012C' 6B00'              	clrf	(___wmul@multiplier+1)& (0+255),b
 12593  012E' 3700'              	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 12594  0130' 0E00               	movlw	0
 12595  0132' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
 12596  0134' 0E0E               	movlw	14
 12597  0136' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
 12598  0138' EC00' F000'        	call	___wmul	;wreg free
 12599  013C' 0E05               	movlw	5
 12600  013E' 0100               	movlb	0	; () banked
 12601  0140' 2700'              	addwf	?___wmul& (0+255),f,b
 12602  0142' 0E00               	movlw	0
 12603  0144' 2300'              	addwfc	(?___wmul+1)& (0+255),f,b
 12604  0146' 0E00'              	movlw	low _Channels
 12605  0148' 2500'              	addwf	?___wmul& (0+255),w,b
 12606  014A' 6ED9               	movwf	fsr2l,c
 12607  014C' 0E00'              	movlw	high _Channels
 12608  014E' 2100'              	addwfc	(?___wmul+1)& (0+255),w,b
 12609  0150' 6EDA               	movwf	fsr2h,c
 12610  0152' 0104               	movlb	4	; () banked
 12611  0154' 90DF               	bcf	223,0,c
 12612  0156' 92DF               	bcf	223,1,c
 12613  0158' 94DF               	bcf	223,2,c
 12614  015A' 96DF               	bcf	223,3,c
 12615                           
 12616                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 12617  015C' 0100               	movlb	0	; () banked
 12618  015E' 5100'              	movf	UpdateCfList@i& (0+255),w,b
 12619  0160' 2500'              	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12620  0162' 6F00'              	movwf	___wmul@multiplier& (0+255),b
 12621  0164' 6B00'              	clrf	(___wmul@multiplier+1)& (0+255),b
 12622  0166' 3700'              	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 12623  0168' 0E00               	movlw	0
 12624  016A' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
 12625  016C' 0E0E               	movlw	14
 12626  016E' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
 12627  0170' EC00' F000'        	call	___wmul	;wreg free
 12628  0174' 0E06               	movlw	6
 12629  0176' 0100               	movlb	0	; () banked
 12630  0178' 2700'              	addwf	?___wmul& (0+255),f,b
 12631  017A' 0E00               	movlw	0
 12632  017C' 2300'              	addwfc	(?___wmul+1)& (0+255),f,b
 12633  017E' 0E00'              	movlw	low _Channels
 12634  0180' 2500'              	addwf	?___wmul& (0+255),w,b
 12635  0182' 6ED9               	movwf	fsr2l,c
 12636  0184' 0E00'              	movlw	high _Channels
 12637  0186' 2100'              	addwfc	(?___wmul+1)& (0+255),w,b
 12638  0188' 6EDA               	movwf	fsr2h,c
 12639  018A' 0EE7               	movlw	231
 12640  018C' 6EDE               	movwf	postinc2,c
 12641  018E' 0E03               	movlw	3
 12642  0190' 6EDD               	movwf	postdec2,c
 12643                           
 12644                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 12645  0192' 5100'              	movf	UpdateCfList@i& (0+255),w,b
 12646  0194' 2500'              	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12647  0196' 6F00'              	movwf	___wmul@multiplier& (0+255),b
 12648  0198' 6B00'              	clrf	(___wmul@multiplier+1)& (0+255),b
 12649  019A' 3700'              	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 12650  019C' 0E00               	movlw	0
 12651  019E' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
 12652  01A0' 0E0E               	movlw	14
 12653  01A2' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
 12654  01A4' EC00' F000'        	call	___wmul	;wreg free
 12655  01A8' 0E0D               	movlw	13
 12656  01AA' 0100               	movlb	0	; () banked
 12657  01AC' 2700'              	addwf	?___wmul& (0+255),f,b
 12658  01AE' 0E00               	movlw	0
 12659  01B0' 2300'              	addwfc	(?___wmul+1)& (0+255),f,b
 12660  01B2' 0E00'              	movlw	low _Channels
 12661  01B4' 2500'              	addwf	?___wmul& (0+255),w,b
 12662  01B6' 6ED9               	movwf	fsr2l,c
 12663  01B8' 0E00'              	movlw	high _Channels
 12664  01BA' 2100'              	addwfc	(?___wmul+1)& (0+255),w,b
 12665  01BC' 6EDA               	movwf	fsr2h,c
 12666  01BE' 0EFF               	movlw	255
 12667  01C0' 6EDF               	movwf	indf2,c
 12668                           
 12669                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 12670  01C2' 0E01               	movlw	1
 12671  01C4' 6F00'              	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12672  01C6' 5100'              	movf	UpdateCfList@i& (0+255),w,b
 12673  01C8' 2500'              	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12674  01CA' EC00' F000'        	call	_LORAWAN_SetChannelIdStatus
 12675                           
 12676                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 12677  01CE' 0102               	movlb	2	; () banked
 12678  01D0' 8700'              	bsf	(_loRa+3)& (0+255),3,b
 12679                           
 12680                           ; BSR set to: 2
 12681                           ;lorawan_eu.c: 851: }
 12682                           ;lorawan_eu.c: 852: }
 12683  01D2' D007               	goto	l1168
 12684  01D4'                    l1166:
 12685                           
 12686                           ;lorawan_eu.c: 853: else
 12687                           ;lorawan_eu.c: 854: {
 12688                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 12689                           
 12690                           ; BSR set to: 2
 12691  01D4' 0E00               	movlw	0
 12692  01D6' 0100               	movlb	0	; () banked
 12693  01D8' 6F00'              	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12694  01DA' 5100'              	movf	UpdateCfList@i& (0+255),w,b
 12695  01DC' 2500'              	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12696  01DE' EC00' F000'        	call	_LORAWAN_SetChannelIdStatus
 12697  01E2'                    l1168:
 12698  01E2' 0100               	movlb	0	; () banked
 12699  01E4' 2B00'              	incf	UpdateCfList@i& (0+255),f,b
 12700  01E6' D717               	goto	l14706
 12701  01E8'                    u17120:
 12702                           
 12703                           ; BSR set to: 0
 12704                           ;lorawan_eu.c: 856: }
 12705                           ;lorawan_eu.c: 857: }
 12706                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 12707  01E8' 0102               	movlb	2	; () banked
 12708  01EA' 8700'              	bsf	(_loRa+3)& (0+255),3,b
 12709  01EC' 0012               	return	
 12710  01EE'                    __end_of_UpdateCfList:
 12711                           	opt stack 0
 12712                           tosu	equ	0xFFF
 12713                           tosh	equ	0xFFE
 12714                           tosl	equ	0xFFD
 12715                           pclath	equ	0xFFA
 12716                           tblptru	equ	0xFF8
 12717                           tblptrh	equ	0xFF7
 12718                           tblptrl	equ	0xFF6
 12719                           tablat	equ	0xFF5
 12720                           prodh	equ	0xFF4
 12721                           prodl	equ	0xFF3
 12722                           intcon	equ	0xFF2
 12723                           intcon2	equ	0xFF1
 12724                           intcon3	equ	0xFF0
 12725                           postinc0	equ	0xFEE
 12726                           wreg	equ	0xFE8
 12727                           postinc1	equ	0xFE6
 12728                           postdec1	equ	0xFE5
 12729                           plusw1	equ	0xFE3
 12730                           fsr1h	equ	0xFE2
 12731                           fsr1l	equ	0xFE1
 12732                           indf2	equ	0xFDF
 12733                           postinc2	equ	0xFDE
 12734                           postdec2	equ	0xFDD
 12735                           fsr2h	equ	0xFDA
 12736                           fsr2l	equ	0xFD9
 12737                           status	equ	0xFD8
 12738                           
 12739 ;; *************** function _StartReTxTimer *****************
 12740 ;; Defined at:
 12741 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12742 ;; Parameters:    Size  Location     Type
 12743 ;;		None
 12744 ;; Auto vars:     Size  Location     Type
 12745 ;;  minim           4   62[BANK0 ] unsigned long 
 12746 ;;  i               1   66[BANK0 ] unsigned char 
 12747 ;; Return value:  Size  Location     Type
 12748 ;;                  1    wreg      void 
 12749 ;; Registers used:
 12750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12751 ;; Tracked objects:
 12752 ;;		On entry : 0/0
 12753 ;;		On exit  : 0/0
 12754 ;;		Unchanged: 0/0
 12755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12757 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12758 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12759 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12760 ;;Total ram usage:        9 bytes
 12761 ;; Hardware stack levels used:    1
 12762 ;; Hardware stack levels required when called:   11
 12763 ;; This function calls:
 12764 ;;		_SwTimerSetTimeout
 12765 ;;		_SwTimerStart
 12766 ;;		___lldiv
 12767 ;; This function is called by:
 12768 ;;		_LORAWAN_RxDone
 12769 ;; This function uses a non-reentrant model
 12770 ;;
 12771                           
 12772                           	psect	text56
 12773  0000'                    __ptext56:
 12774                           	opt stack 0
 12775  0000'                    _StartReTxTimer:
 12776                           	opt stack 15
 12777                           
 12778                           ;lorawan_eu.c: 904: uint8_t i;
 12779                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 12780                           
 12781                           ;incstack = 0
 12782  0000' 0100               	movlb	0	; () banked
 12783  0002' 6900'              	setf	StartReTxTimer@minim& (0+255),b
 12784  0004' 6900'              	setf	(StartReTxTimer@minim+1)& (0+255),b
 12785  0006' 6900'              	setf	(StartReTxTimer@minim+2)& (0+255),b
 12786  0008' 6900'              	setf	(StartReTxTimer@minim+3)& (0+255),b
 12787                           
 12788                           ; BSR set to: 0
 12789                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 12790  000A' 0E00               	movlw	0
 12791  000C' 6F00'              	movwf	StartReTxTimer@i& (0+255),b
 12792  000E' D07C               	goto	l1185
 12793  0010'                    
 12794                           ;lorawan_eu.c: 908: {
 12795                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 12796                           
 12797                           ; BSR set to: 0
 12798  0010' 0100               	movlb	0	; () banked
 12799  0012' 5100'              	movf	StartReTxTimer@i& (0+255),w,b
 12800  0014' 0D0E               	mullw	14
 12801  0016' 0E04               	movlw	4
 12802  0018' 26F3               	addwf	prodl,f,c
 12803  001A' 0E00               	movlw	0
 12804  001C' 22F4               	addwfc	prodh,f,c
 12805  001E' 0E00'              	movlw	low _Channels
 12806  0020' 24F3               	addwf	prodl,w,c
 12807  0022' 6ED9               	movwf	fsr2l,c
 12808  0024' 0E00'              	movlw	high _Channels
 12809  0026' 20F4               	addwfc	prodh,w,c
 12810  0028' 6EDA               	movwf	fsr2h,c
 12811  002A' 04DE               	decf	postinc2,w,c
 12812  002C' A4D8               	btfss	status,2,c
 12813  002E' D06A               	goto	l1187
 12814                           
 12815                           ; BSR set to: 0
 12816  0030' 5100'              	movf	StartReTxTimer@i& (0+255),w,b
 12817  0032' 0D0E               	mullw	14
 12818  0034' 0E08               	movlw	8
 12819  0036' 26F3               	addwf	prodl,f,c
 12820  0038' 0E00               	movlw	0
 12821  003A' 22F4               	addwfc	prodh,f,c
 12822  003C' 0E00'              	movlw	low _Channels
 12823  003E' 24F3               	addwf	prodl,w,c
 12824  0040' 6ED9               	movwf	fsr2l,c
 12825  0042' 0E00'              	movlw	high _Channels
 12826  0044' 20F4               	addwfc	prodh,w,c
 12827  0046' 6EDA               	movwf	fsr2h,c
 12828  0048' 50DE               	movf	postinc2,w,c
 12829  004A' 10DE               	iorwf	postinc2,w,c
 12830  004C' 10DE               	iorwf	postinc2,w,c
 12831  004E' 10DE               	iorwf	postinc2,w,c
 12832  0050' B4D8               	btfsc	status,2,c
 12833  0052' D058               	goto	l1187
 12834                           
 12835                           ; BSR set to: 0
 12836  0054' 5100'              	movf	StartReTxTimer@i& (0+255),w,b
 12837  0056' 0D0E               	mullw	14
 12838  0058' 0E08               	movlw	8
 12839  005A' 26F3               	addwf	prodl,f,c
 12840  005C' 0E00               	movlw	0
 12841  005E' 22F4               	addwfc	prodh,f,c
 12842  0060' 0E00'              	movlw	low _Channels
 12843  0062' 24F3               	addwf	prodl,w,c
 12844  0064' 6ED9               	movwf	fsr2l,c
 12845  0066' 0E00'              	movlw	high _Channels
 12846  0068' 20F4               	addwfc	prodh,w,c
 12847  006A' 6EDA               	movwf	fsr2h,c
 12848  006C' 50DE               	movf	postinc2,w,c
 12849  006E' 5D00'              	subwf	StartReTxTimer@minim& (0+255),w,b
 12850  0070' 50DE               	movf	postinc2,w,c
 12851  0072' 5900'              	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 12852  0074' 50DE               	movf	postinc2,w,c
 12853  0076' 5900'              	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 12854  0078' 50DE               	movf	postinc2,w,c
 12855  007A' 5900'              	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 12856  007C' A0D8               	btfss	status,0,c
 12857  007E' D042               	goto	l1187
 12858                           
 12859                           ; BSR set to: 0
 12860  0080' 5100'              	movf	StartReTxTimer@i& (0+255),w,b
 12861  0082' 0D0E               	mullw	14
 12862  0084' 0E05               	movlw	5
 12863  0086' 26F3               	addwf	prodl,f,c
 12864  0088' 0E00               	movlw	0
 12865  008A' 22F4               	addwfc	prodh,f,c
 12866  008C' 0E00'              	movlw	low _Channels
 12867  008E' 24F3               	addwf	prodl,w,c
 12868  0090' 6ED9               	movwf	fsr2l,c
 12869  0092' 0E00'              	movlw	high _Channels
 12870  0094' 20F4               	addwfc	prodh,w,c
 12871  0096' 6EDA               	movwf	fsr2h,c
 12872  0098' 0104               	movlb	4	; () banked
 12873  009A' 50DF               	movf	223,w,c
 12874  009C' 0B0F               	andlw	15
 12875  009E' 0100               	movlb	0	; () banked
 12876  00A0' 6F00'              	movwf	??_StartReTxTimer& (0+255),b
 12877  00A2' 5100'              	movf	??_StartReTxTimer& (0+255),w,b
 12878  00A4' 0102               	movlb	2	; () banked
 12879  00A6' 5D00'              	subwf	(_loRa+223)& (0+255),w,b
 12880  00A8' A0D8               	btfss	status,0,c
 12881  00AA' D02C               	goto	l1187
 12882                           
 12883                           ; BSR set to: 2
 12884  00AC' 0100               	movlb	0	; () banked
 12885  00AE' 5100'              	movf	StartReTxTimer@i& (0+255),w,b
 12886  00B0' 0D0E               	mullw	14
 12887  00B2' 0E05               	movlw	5
 12888  00B4' 26F3               	addwf	prodl,f,c
 12889  00B6' 0E00               	movlw	0
 12890  00B8' 22F4               	addwfc	prodh,f,c
 12891  00BA' 0E00'              	movlw	low _Channels
 12892  00BC' 24F3               	addwf	prodl,w,c
 12893  00BE' 6ED9               	movwf	fsr2l,c
 12894  00C0' 0E00'              	movlw	high _Channels
 12895  00C2' 20F4               	addwfc	prodh,w,c
 12896  00C4' 6EDA               	movwf	fsr2h,c
 12897  00C6' 0104               	movlb	4	; () banked
 12898  00C8' 38DF               	swapf	223,w,c
 12899  00CA' 0B0F               	andlw	15
 12900  00CC' 0100               	movlb	0	; () banked
 12901  00CE' 6F00'              	movwf	??_StartReTxTimer& (0+255),b
 12902  00D0' 0102               	movlb	2	; () banked
 12903  00D2' 5100'              	movf	(_loRa+223)& (0+255),w,b
 12904  00D4' 0100               	movlb	0	; () banked
 12905  00D6' 5D00'              	subwf	??_StartReTxTimer& (0+255),w,b
 12906  00D8' A0D8               	btfss	status,0,c
 12907  00DA' D014               	goto	l1187
 12908                           
 12909                           ; BSR set to: 0
 12910                           ;lorawan_eu.c: 910: {
 12911                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 12912  00DC' 5100'              	movf	StartReTxTimer@i& (0+255),w,b
 12913  00DE' 0D0E               	mullw	14
 12914  00E0' 0E08               	movlw	8
 12915  00E2' 26F3               	addwf	prodl,f,c
 12916  00E4' 0E00               	movlw	0
 12917  00E6' 22F4               	addwfc	prodh,f,c
 12918  00E8' 0E00'              	movlw	low _Channels
 12919  00EA' 24F3               	addwf	prodl,w,c
 12920  00EC' 6ED9               	movwf	fsr2l,c
 12921  00EE' 0E00'              	movlw	high _Channels
 12922  00F0' 20F4               	addwfc	prodh,w,c
 12923  00F2' 6EDA               	movwf	fsr2h,c
 12924  00F4' CFDE F03E'         	movff	postinc2,StartReTxTimer@minim
 12925  00F8' CFDE F03F'         	movff	postinc2,StartReTxTimer@minim+1
 12926  00FC' CFDE F040'         	movff	postinc2,StartReTxTimer@minim+2
 12927  0100' CFDE F041'         	movff	postinc2,StartReTxTimer@minim+3
 12928  0104'                    l1187:
 12929                           
 12930                           ; BSR set to: 0
 12931  0104' 0100               	movlb	0	; () banked
 12932  0106' 2B00'              	incf	StartReTxTimer@i& (0+255),f,b
 12933  0108'                    l1185:
 12934                           
 12935                           ; BSR set to: 0
 12936                           
 12937                           ; BSR set to: 0
 12938  0108' 5100'              	movf	StartReTxTimer@i& (0+255),w,b
 12939  010A' 0102               	movlb	2	; () banked
 12940  010C' 5D00'              	subwf	(_loRa+237)& (0+255),w,b
 12941  010E' B0D8               	btfsc	status,0,c
 12942  0110' D77F               	goto	l1186
 12943                           
 12944                           ; BSR set to: 2
 12945                           ;lorawan_eu.c: 912: }
 12946                           ;lorawan_eu.c: 913: }
 12947                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12948                           
 12949                           ; BSR set to: 2
 12950  0112' 5100'              	movf	(_loRa+2)& (0+255),w,b
 12951  0114' 0BF0               	andlw	-16
 12952  0116' 0906               	iorlw	6
 12953  0118' 6F00'              	movwf	(_loRa+2)& (0+255),b
 12954                           
 12955                           ; BSR set to: 2
 12956                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 12957  011A' C03E' F03A'        	movff	StartReTxTimer@minim,??_StartReTxTimer
 12958  011E' C03F' F03B'        	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 12959  0122' C040' F03C'        	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 12960  0126' C041' F03D'        	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 12961  012A' 0E0C               	movlw	12
 12962  012C'                    u17215:
 12963  012C' 90D8               	bcf	status,0,c
 12964  012E' 0100               	movlb	0	; () banked
 12965  0130' 3700'              	rlcf	??_StartReTxTimer& (0+255),f,b
 12966  0132' 3700'              	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 12967  0134' 3700'              	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 12968  0136' 3700'              	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 12969  0138' 2EE8               	decfsz	wreg,f,c
 12970  013A' D7F8               	goto	u17215
 12971  013C' C03A' F000'        	movff	??_StartReTxTimer,___lldiv@dividend
 12972  0140' C03B' F001'        	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 12973  0144' C03C' F002'        	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 12974  0148' C03D' F003'        	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 12975  014C' 0E7D               	movlw	125
 12976  014E' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 12977  0150' 0E00               	movlw	0
 12978  0152' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 12979  0154' 0E00               	movlw	0
 12980  0156' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 12981  0158' 0E00               	movlw	0
 12982  015A' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 12983  015C' EC00' F000'        	call	___lldiv	;wreg free
 12984  0160' C000' F00D'        	movff	?___lldiv,SwTimerSetTimeout@timeout
 12985  0164' C001' F00E'        	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12986  0168' C002' F00F'        	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12987  016C' C003' F010'        	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12988  0170' 0102               	movlb	2	; () banked
 12989  0172' 5100'              	movf	(_loRa+230)& (0+255),w,b
 12990  0174' EC00' F000'        	call	_SwTimerSetTimeout
 12991                           
 12992                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 12993  0178' 0102               	movlb	2	; () banked
 12994  017A' 5100'              	movf	(_loRa+230)& (0+255),w,b
 12995  017C' EC00' F000'        	call	_SwTimerStart
 12996  0180' 0012               	return		;funcret
 12997  0182'                    __end_of_StartReTxTimer:
 12998                           	opt stack 0
 12999                           tosu	equ	0xFFF
 13000                           tosh	equ	0xFFE
 13001                           tosl	equ	0xFFD
 13002                           pclath	equ	0xFFA
 13003                           tblptru	equ	0xFF8
 13004                           tblptrh	equ	0xFF7
 13005                           tblptrl	equ	0xFF6
 13006                           tablat	equ	0xFF5
 13007                           prodh	equ	0xFF4
 13008                           prodl	equ	0xFF3
 13009                           intcon	equ	0xFF2
 13010                           intcon2	equ	0xFF1
 13011                           intcon3	equ	0xFF0
 13012                           postinc0	equ	0xFEE
 13013                           wreg	equ	0xFE8
 13014                           postinc1	equ	0xFE6
 13015                           postdec1	equ	0xFE5
 13016                           plusw1	equ	0xFE3
 13017                           fsr1h	equ	0xFE2
 13018                           fsr1l	equ	0xFE1
 13019                           indf2	equ	0xFDF
 13020                           postinc2	equ	0xFDE
 13021                           postdec2	equ	0xFDD
 13022                           fsr2h	equ	0xFDA
 13023                           fsr2l	equ	0xFD9
 13024                           status	equ	0xFD8
 13025                           
 13026 ;; *************** function _SetReceptionNotOkState *****************
 13027 ;; Defined at:
 13028 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13029 ;; Parameters:    Size  Location     Type
 13030 ;;		None
 13031 ;; Auto vars:     Size  Location     Type
 13032 ;;		None
 13033 ;; Return value:  Size  Location     Type
 13034 ;;                  1    wreg      void 
 13035 ;; Registers used:
 13036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 13037 ;; Tracked objects:
 13038 ;;		On entry : 0/0
 13039 ;;		On exit  : 0/0
 13040 ;;		Unchanged: 0/0
 13041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13046 ;;Total ram usage:        0 bytes
 13047 ;; Hardware stack levels used:    1
 13048 ;; Hardware stack levels required when called:   14
 13049 ;; This function calls:
 13050 ;;		_LORAWAN_EnterContinuousReceive
 13051 ;;		_RxData
 13052 ;; This function is called by:
 13053 ;;		_LORAWAN_RxDone
 13054 ;; This function uses a non-reentrant model
 13055 ;;
 13056                           
 13057                           	psect	text57
 13058  0000'                    __ptext57:
 13059                           	opt stack 0
 13060  0000'                    _SetReceptionNotOkState:
 13061                           	opt stack 12
 13062                           
 13063                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 13064                           
 13065                           ;incstack = 0
 13066  0000' 0102               	movlb	2	; () banked
 13067  0002' 5100'              	movf	(_loRa+2)& (0+255),w,b
 13068  0004' 0B0F               	andlw	15
 13069  0006' 0A05               	xorlw	5
 13070  0008' B4D8               	btfsc	status,2,c
 13071  000A' D008               	goto	u17500
 13072                           
 13073                           ; BSR set to: 2
 13074  000C' 5100'              	movf	(_loRa+2)& (0+255),w,b
 13075  000E' 0B0F               	andlw	15
 13076  0010' 0A03               	xorlw	3
 13077  0012' A4D8               	btfss	status,2,c
 13078  0014' D029               	goto	l2093
 13079                           
 13080                           ; BSR set to: 2
 13081  0016' 5100'              	movf	(_loRa+241)& (0+255),w,b
 13082  0018' B4D8               	btfsc	status,2,c
 13083  001A' D026               	goto	l2093
 13084  001C'                    u17500:
 13085                           
 13086                           ; BSR set to: 2
 13087                           ;lorawan.c: 2000: {
 13088                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 13089  001C' 9100'              	bcf	_loRa& (0+255),0,b
 13090                           
 13091                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 13092  001E' 9100'              	bcf	(_loRa+2)& (0+255),0,b
 13093  0020' 9300'              	bcf	(_loRa+2)& (0+255),1,b
 13094  0022' 9500'              	bcf	(_loRa+2)& (0+255),2,b
 13095  0024' 9700'              	bcf	(_loRa+2)& (0+255),3,b
 13096                           
 13097                           ; BSR set to: 2
 13098                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 13099  0026' 5100'              	movf	(_loRa+18)& (0+255),w,b
 13100  0028' A4D8               	btfss	status,2,c
 13101  002A' D01C               	goto	u17539
 13102                           
 13103                           ; BSR set to: 2
 13104  002C' 0101               	movlb	1	; () banked
 13105  002E' 5100'              	movf	_rxPayload& (0+255),w,b
 13106  0030' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
 13107  0032' B4D8               	btfsc	status,2,c
 13108  0034' D017               	goto	u17539
 13109                           
 13110                           ; BSR set to: 1
 13111                           ;lorawan.c: 2005: {
 13112                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 13113  0036' 0102               	movlb	2	; () banked
 13114  0038' 9B00'              	bcf	_loRa& (0+255),5,b
 13115                           
 13116                           ; BSR set to: 2
 13117                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 13118  003A' 0E00               	movlw	0
 13119  003C' 0100               	movlb	0	; () banked
 13120  003E' 6F00'              	movwf	RxData@pData& (0+255),b
 13121  0040' 0E00               	movlw	0
 13122  0042' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
 13123  0044' 0E00               	movlw	0
 13124  0046' 6F00'              	movwf	RxData@dataLength& (0+255),b
 13125  0048' 0E00               	movlw	0
 13126  004A' 6F00'              	movwf	RxData@status& (0+255),b
 13127  004C' D801               	call	u17538
 13128  004E' D00A               	goto	u17539
 13129  0050'                    u17538:
 13130  0050' 0005               	push	
 13131  0052' 6EFA               	movwf	pclath,c
 13132  0054' 0101               	movlb	1	; () banked
 13133  0056' 5100'              	movf	_rxPayload& (0+255),w,b
 13134  0058' 6EFD               	movwf	tosl,c
 13135  005A' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
 13136  005C' 6EFE               	movwf	tosh,c
 13137  005E' 6AFF               	clrf	tosu,c
 13138  0060' 50FA               	movf	pclath,w,c
 13139  0062' 0012               	return		;indir
 13140  0064'                    u17539:
 13141                           
 13142                           ;lorawan.c: 2008: }
 13143                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 13144  0064' 0102               	movlb	2	; () banked
 13145  0066' 9300'              	bcf	(_loRa+3)& (0+255),1,b
 13146  0068'                    l2093:
 13147                           
 13148                           ; BSR set to: 2
 13149                           ;lorawan.c: 2010: }
 13150                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 13151                           
 13152                           ; BSR set to: 2
 13153  0068' 0E02               	movlw	2
 13154  006A' 1900'              	xorwf	(_loRa+18)& (0+255),w,b
 13155  006C' A4D8               	btfss	status,2,c
 13156  006E' 0012               	return	
 13157                           
 13158                           ; BSR set to: 2
 13159                           ;lorawan.c: 2013: {
 13160                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13161  0070' 5100'              	movf	(_loRa+2)& (0+255),w,b
 13162  0072' 0BF0               	andlw	-16
 13163  0074' 0909               	iorlw	9
 13164  0076' 6F00'              	movwf	(_loRa+2)& (0+255),b
 13165                           
 13166                           ; BSR set to: 2
 13167                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 13168  0078' EC00' F000'        	call	_LORAWAN_EnterContinuousReceive	;wreg free
 13169  007C' 0012               	return	
 13170  007E'                    __end_of_SetReceptionNotOkState:
 13171                           	opt stack 0
 13172                           tosu	equ	0xFFF
 13173                           tosh	equ	0xFFE
 13174                           tosl	equ	0xFFD
 13175                           pclath	equ	0xFFA
 13176                           tblptru	equ	0xFF8
 13177                           tblptrh	equ	0xFF7
 13178                           tblptrl	equ	0xFF6
 13179                           tablat	equ	0xFF5
 13180                           prodh	equ	0xFF4
 13181                           prodl	equ	0xFF3
 13182                           intcon	equ	0xFF2
 13183                           intcon2	equ	0xFF1
 13184                           intcon3	equ	0xFF0
 13185                           postinc0	equ	0xFEE
 13186                           wreg	equ	0xFE8
 13187                           postinc1	equ	0xFE6
 13188                           postdec1	equ	0xFE5
 13189                           plusw1	equ	0xFE3
 13190                           fsr1h	equ	0xFE2
 13191                           fsr1l	equ	0xFE1
 13192                           indf2	equ	0xFDF
 13193                           postinc2	equ	0xFDE
 13194                           postdec2	equ	0xFDD
 13195                           fsr2h	equ	0xFDA
 13196                           fsr2l	equ	0xFD9
 13197                           status	equ	0xFD8
 13198                           
 13199 ;; *************** function _SetJoinFailState *****************
 13200 ;; Defined at:
 13201 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13202 ;; Parameters:    Size  Location     Type
 13203 ;;		None
 13204 ;; Auto vars:     Size  Location     Type
 13205 ;;		None
 13206 ;; Return value:  Size  Location     Type
 13207 ;;                  1    wreg      void 
 13208 ;; Registers used:
 13209 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13210 ;; Tracked objects:
 13211 ;;		On entry : 0/0
 13212 ;;		On exit  : 0/0
 13213 ;;		Unchanged: 0/0
 13214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13219 ;;Total ram usage:        0 bytes
 13220 ;; Hardware stack levels used:    1
 13221 ;; Hardware stack levels required when called:    8
 13222 ;; This function calls:
 13223 ;;		_RxJoinResponse
 13224 ;; This function is called by:
 13225 ;;		_LORAWAN_RxTimeout
 13226 ;;		_LORAWAN_RxDone
 13227 ;; This function uses a non-reentrant model
 13228 ;;
 13229                           
 13230                           	psect	text58
 13231  0000'                    __ptext58:
 13232                           	opt stack 0
 13233  0000'                    _SetJoinFailState:
 13234                           	opt stack 18
 13235                           
 13236                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 13237                           
 13238                           ;incstack = 0
 13239  0000' 0102               	movlb	2	; () banked
 13240  0002' 9900'              	bcf	(_loRa+2)& (0+255),4,b
 13241                           
 13242                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 13243  0004' 9500'              	bcf	_loRa& (0+255),2,b
 13244                           
 13245                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 13246  0006' 9100'              	bcf	(_loRa+2)& (0+255),0,b
 13247  0008' 9300'              	bcf	(_loRa+2)& (0+255),1,b
 13248  000A' 9500'              	bcf	(_loRa+2)& (0+255),2,b
 13249  000C' 9700'              	bcf	(_loRa+2)& (0+255),3,b
 13250                           
 13251                           ; BSR set to: 2
 13252                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 13253  000E' 0101               	movlb	1	; () banked
 13254  0010' 5100'              	movf	(_rxPayload+2)& (0+255),w,b
 13255  0012' 1100'              	iorwf	(_rxPayload+3)& (0+255),w,b
 13256  0014' B4D8               	btfsc	status,2,c
 13257  0016' 0012               	return	
 13258                           
 13259                           ; BSR set to: 1
 13260                           ;lorawan.c: 1110: {
 13261                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 13262  0018' D801               	call	u17078
 13263  001A' 0012               	return	
 13264  001C'                    u17078:
 13265  001C' 0005               	push	
 13266  001E' 6EFA               	movwf	pclath,c
 13267  0020' 5100'              	movf	(_rxPayload+2)& (0+255),w,b
 13268  0022' 6EFD               	movwf	tosl,c
 13269  0024' 5100'              	movf	(_rxPayload+3)& (0+255),w,b
 13270  0026' 6EFE               	movwf	tosh,c
 13271  0028' 6AFF               	clrf	tosu,c
 13272  002A' 50FA               	movf	pclath,w,c
 13273  002C' 0E00               	movlw	0
 13274  002E' 0012               	return		;indir
 13275  0030'                    __end_of_SetJoinFailState:
 13276                           	opt stack 0
 13277                           tosu	equ	0xFFF
 13278                           tosh	equ	0xFFE
 13279                           tosl	equ	0xFFD
 13280                           pclath	equ	0xFFA
 13281                           tblptru	equ	0xFF8
 13282                           tblptrh	equ	0xFF7
 13283                           tblptrl	equ	0xFF6
 13284                           tablat	equ	0xFF5
 13285                           prodh	equ	0xFF4
 13286                           prodl	equ	0xFF3
 13287                           intcon	equ	0xFF2
 13288                           intcon2	equ	0xFF1
 13289                           intcon3	equ	0xFF0
 13290                           postinc0	equ	0xFEE
 13291                           wreg	equ	0xFE8
 13292                           postinc1	equ	0xFE6
 13293                           postdec1	equ	0xFE5
 13294                           plusw1	equ	0xFE3
 13295                           fsr1h	equ	0xFE2
 13296                           fsr1l	equ	0xFE1
 13297                           indf2	equ	0xFDF
 13298                           postinc2	equ	0xFDE
 13299                           postdec2	equ	0xFDD
 13300                           fsr2h	equ	0xFDA
 13301                           fsr2l	equ	0xFD9
 13302                           status	equ	0xFD8
 13303                           
 13304 ;; *************** function _RxJoinResponse *****************
 13305 ;; Defined at:
 13306 ;;		line 57 in file "main.c"
 13307 ;; Parameters:    Size  Location     Type
 13308 ;;  status          1    wreg     unsigned char 
 13309 ;; Auto vars:     Size  Location     Type
 13310 ;;  status          1    0[COMRAM] unsigned char 
 13311 ;; Return value:  Size  Location     Type
 13312 ;;                  1    wreg      void 
 13313 ;; Registers used:
 13314 ;;		wreg
 13315 ;; Tracked objects:
 13316 ;;		On entry : 0/0
 13317 ;;		On exit  : 0/0
 13318 ;;		Unchanged: 0/0
 13319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13324 ;;Total ram usage:        0 bytes
 13325 ;; Hardware stack levels used:    1
 13326 ;; Hardware stack levels required when called:    7
 13327 ;; This function calls:
 13328 ;;		Nothing
 13329 ;; This function is called by:
 13330 ;;		_main
 13331 ;;		_SetJoinFailState
 13332 ;;		_UpdateJoinSuccessState
 13333 ;; This function uses a non-reentrant model
 13334 ;;
 13335                           
 13336                           	psect	text59
 13337  0000'                    __ptext59:
 13338                           	opt stack 0
 13339  0000'                    _RxJoinResponse:
 13340                           	opt stack 20
 13341                           
 13342                           ;incstack = 0
 13343  0000' 0012               	return		;funcret
 13344  0002'                    __end_of_RxJoinResponse:
 13345                           	opt stack 0
 13346                           tosu	equ	0xFFF
 13347                           tosh	equ	0xFFE
 13348                           tosl	equ	0xFFD
 13349                           pclath	equ	0xFFA
 13350                           tblptru	equ	0xFF8
 13351                           tblptrh	equ	0xFF7
 13352                           tblptrl	equ	0xFF6
 13353                           tablat	equ	0xFF5
 13354                           prodh	equ	0xFF4
 13355                           prodl	equ	0xFF3
 13356                           intcon	equ	0xFF2
 13357                           intcon2	equ	0xFF1
 13358                           intcon3	equ	0xFF0
 13359                           postinc0	equ	0xFEE
 13360                           wreg	equ	0xFE8
 13361                           postinc1	equ	0xFE6
 13362                           postdec1	equ	0xFE5
 13363                           plusw1	equ	0xFE3
 13364                           fsr1h	equ	0xFE2
 13365                           fsr1l	equ	0xFE1
 13366                           indf2	equ	0xFDF
 13367                           postinc2	equ	0xFDE
 13368                           postdec2	equ	0xFDD
 13369                           fsr2h	equ	0xFDA
 13370                           fsr2l	equ	0xFD9
 13371                           status	equ	0xFD8
 13372                           
 13373 ;; *************** function _MacExecuteCommands *****************
 13374 ;; Defined at:
 13375 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13376 ;; Parameters:    Size  Location     Type
 13377 ;;  buffer          2   80[BANK0 ] PTR unsigned char 
 13378 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13379 ;;  fOptsLen        1   82[BANK0 ] unsigned char 
 13380 ;; Auto vars:     Size  Location     Type
 13381 ;;  ptr             2   86[BANK0 ] PTR unsigned char 
 13382 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13383 ;;  done            1   85[BANK0 ] unsigned char 
 13384 ;; Return value:  Size  Location     Type
 13385 ;;                  2   80[BANK0 ] PTR unsigned char 
 13386 ;; Registers used:
 13387 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13388 ;; Tracked objects:
 13389 ;;		On entry : 0/0
 13390 ;;		On exit  : 0/0
 13391 ;;		Unchanged: 0/0
 13392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13393 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13394 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13395 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13396 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13397 ;;Total ram usage:        8 bytes
 13398 ;; Hardware stack levels used:    1
 13399 ;; Hardware stack levels required when called:   11
 13400 ;; This function calls:
 13401 ;;		_ExecuteDevStatus
 13402 ;;		_ExecuteDutyCycle
 13403 ;;		_ExecuteLinkAdr
 13404 ;;		_ExecuteLinkCheck
 13405 ;;		_ExecuteNewChannel
 13406 ;;		_ExecuteRxParamSetupReq
 13407 ;;		_ExecuteRxTimingSetup
 13408 ;; This function is called by:
 13409 ;;		_LORAWAN_RxDone
 13410 ;; This function uses a non-reentrant model
 13411 ;;
 13412                           
 13413                           	psect	text60
 13414  0000'                    __ptext60:
 13415                           	opt stack 0
 13416  0000'                    _MacExecuteCommands:
 13417                           	opt stack 15
 13418                           
 13419                           ;lorawan.c: 1577: bool done = 0;
 13420                           
 13421                           ;incstack = 0
 13422  0000' 0E00               	movlw	0
 13423  0002' 0100               	movlb	0	; () banked
 13424  0004' 6F00'              	movwf	MacExecuteCommands@done& (0+255),b
 13425                           
 13426                           ; BSR set to: 0
 13427                           ;lorawan.c: 1578: uint8_t *ptr;
 13428                           ;lorawan.c: 1579: ptr = buffer;
 13429  0006' C050' F056'        	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 13430  000A' C051' F057'        	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 13431                           
 13432                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 13433  000E' D15A               	goto	l2005
 13434  0010'                    
 13435                           ; BSR set to: 0
 13436                           ;lorawan.c: 1581: {
 13437                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 13438                           
 13439                           ; BSR set to: 0
 13440  0010' 0102               	movlb	2	; () banked
 13441  0012' 5100'              	movf	(_loRa+167)& (0+255),w,b
 13442  0014' 0D02               	mullw	2
 13443  0016' 0E00'              	movlw	low _loRa
 13444  0018' 0100               	movlb	0	; () banked
 13445  001A' 6F00'              	movwf	??_MacExecuteCommands& (0+255),b
 13446  001C' 0E00'              	movlw	high _loRa
 13447  001E' 6F00'              	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13448  0020' 0EA8               	movlw	168
 13449  0022' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13450  0024' 0E00               	movlw	0
 13451  0026' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13452  0028' 50F3               	movf	prodl,w,c
 13453  002A' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13454  002C' 50F4               	movf	prodh,w,c
 13455  002E' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13456  0030' 0E01               	movlw	1
 13457  0032' 2500'              	addwf	??_MacExecuteCommands& (0+255),w,b
 13458  0034' 6ED9               	movwf	fsr2l,c
 13459  0036' 0E00               	movlw	0
 13460  0038' 2100'              	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13461  003A' 6EDA               	movwf	fsr2h,c
 13462  003C' 0102               	movlb	2	; () banked
 13463  003E' 90DF               	bcf	indf2,0,c
 13464                           
 13465                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 13466  0040' 5100'              	movf	(_loRa+167)& (0+255),w,b
 13467  0042' 0D02               	mullw	2
 13468  0044' 0E00'              	movlw	low _loRa
 13469  0046' 0100               	movlb	0	; () banked
 13470  0048' 6F00'              	movwf	??_MacExecuteCommands& (0+255),b
 13471  004A' 0E00'              	movlw	high _loRa
 13472  004C' 6F00'              	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13473  004E' 0EA8               	movlw	168
 13474  0050' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13475  0052' 0E00               	movlw	0
 13476  0054' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13477  0056' 50F3               	movf	prodl,w,c
 13478  0058' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13479  005A' 50F4               	movf	prodh,w,c
 13480  005C' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13481  005E' 0E01               	movlw	1
 13482  0060' 2500'              	addwf	??_MacExecuteCommands& (0+255),w,b
 13483  0062' 6ED9               	movwf	fsr2l,c
 13484  0064' 0E00               	movlw	0
 13485  0066' 2100'              	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13486  0068' 6EDA               	movwf	fsr2h,c
 13487  006A' 0102               	movlb	2	; () banked
 13488  006C' 92DF               	bcf	indf2,1,c
 13489                           
 13490                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 13491  006E' 5100'              	movf	(_loRa+167)& (0+255),w,b
 13492  0070' 0D02               	mullw	2
 13493  0072' 0E00'              	movlw	low _loRa
 13494  0074' 0100               	movlb	0	; () banked
 13495  0076' 6F00'              	movwf	??_MacExecuteCommands& (0+255),b
 13496  0078' 0E00'              	movlw	high _loRa
 13497  007A' 6F00'              	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13498  007C' 0EA8               	movlw	168
 13499  007E' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13500  0080' 0E00               	movlw	0
 13501  0082' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13502  0084' 50F3               	movf	prodl,w,c
 13503  0086' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13504  0088' 50F4               	movf	prodh,w,c
 13505  008A' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13506  008C' 0E01               	movlw	1
 13507  008E' 2500'              	addwf	??_MacExecuteCommands& (0+255),w,b
 13508  0090' 6ED9               	movwf	fsr2l,c
 13509  0092' 0E00               	movlw	0
 13510  0094' 2100'              	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13511  0096' 6EDA               	movwf	fsr2h,c
 13512  0098' 0102               	movlb	2	; () banked
 13513  009A' 94DF               	bcf	indf2,2,c
 13514                           
 13515                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 13516  009C' 5100'              	movf	(_loRa+167)& (0+255),w,b
 13517  009E' 0D02               	mullw	2
 13518  00A0' 0E00'              	movlw	low _loRa
 13519  00A2' 0100               	movlb	0	; () banked
 13520  00A4' 6F00'              	movwf	??_MacExecuteCommands& (0+255),b
 13521  00A6' 0E00'              	movlw	high _loRa
 13522  00A8' 6F00'              	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13523  00AA' 0EA8               	movlw	168
 13524  00AC' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13525  00AE' 0E00               	movlw	0
 13526  00B0' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13527  00B2' 50F3               	movf	prodl,w,c
 13528  00B4' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13529  00B6' 50F4               	movf	prodh,w,c
 13530  00B8' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13531  00BA' 0E01               	movlw	1
 13532  00BC' 2500'              	addwf	??_MacExecuteCommands& (0+255),w,b
 13533  00BE' 6ED9               	movwf	fsr2l,c
 13534  00C0' 0E00               	movlw	0
 13535  00C2' 2100'              	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13536  00C4' 6EDA               	movwf	fsr2h,c
 13537  00C6' 0102               	movlb	2	; () banked
 13538  00C8' 96DF               	bcf	indf2,3,c
 13539                           
 13540                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 13541  00CA' 5100'              	movf	(_loRa+167)& (0+255),w,b
 13542  00CC' 0D02               	mullw	2
 13543  00CE' 0E00'              	movlw	low _loRa
 13544  00D0' 0100               	movlb	0	; () banked
 13545  00D2' 6F00'              	movwf	??_MacExecuteCommands& (0+255),b
 13546  00D4' 0E00'              	movlw	high _loRa
 13547  00D6' 6F00'              	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13548  00D8' 0EA8               	movlw	168
 13549  00DA' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13550  00DC' 0E00               	movlw	0
 13551  00DE' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13552  00E0' 50F3               	movf	prodl,w,c
 13553  00E2' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13554  00E4' 50F4               	movf	prodh,w,c
 13555  00E6' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13556  00E8' 0E01               	movlw	1
 13557  00EA' 2500'              	addwf	??_MacExecuteCommands& (0+255),w,b
 13558  00EC' 6ED9               	movwf	fsr2l,c
 13559  00EE' 0E00               	movlw	0
 13560  00F0' 2100'              	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13561  00F2' 6EDA               	movwf	fsr2h,c
 13562  00F4' 0102               	movlb	2	; () banked
 13563  00F6' 98DF               	bcf	indf2,4,c
 13564                           
 13565                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 13566  00F8' 5100'              	movf	(_loRa+167)& (0+255),w,b
 13567  00FA' 0D02               	mullw	2
 13568  00FC' 0E00'              	movlw	low _loRa
 13569  00FE' 0100               	movlb	0	; () banked
 13570  0100' 6F00'              	movwf	??_MacExecuteCommands& (0+255),b
 13571  0102' 0E00'              	movlw	high _loRa
 13572  0104' 6F00'              	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13573  0106' 0EA8               	movlw	168
 13574  0108' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13575  010A' 0E00               	movlw	0
 13576  010C' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13577  010E' 50F3               	movf	prodl,w,c
 13578  0110' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13579  0112' 50F4               	movf	prodh,w,c
 13580  0114' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13581  0116' 0E01               	movlw	1
 13582  0118' 2500'              	addwf	??_MacExecuteCommands& (0+255),w,b
 13583  011A' 6ED9               	movwf	fsr2l,c
 13584  011C' 0E00               	movlw	0
 13585  011E' 2100'              	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13586  0120' 6EDA               	movwf	fsr2h,c
 13587  0122' 0102               	movlb	2	; () banked
 13588  0124' 9ADF               	bcf	indf2,5,c
 13589                           
 13590                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 13591  0126' 5100'              	movf	(_loRa+167)& (0+255),w,b
 13592  0128' 0D02               	mullw	2
 13593  012A' 0E00'              	movlw	low _loRa
 13594  012C' 0100               	movlb	0	; () banked
 13595  012E' 6F00'              	movwf	??_MacExecuteCommands& (0+255),b
 13596  0130' 0E00'              	movlw	high _loRa
 13597  0132' 6F00'              	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13598  0134' 0EA8               	movlw	168
 13599  0136' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13600  0138' 0E00               	movlw	0
 13601  013A' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13602  013C' 50F3               	movf	prodl,w,c
 13603  013E' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13604  0140' 50F4               	movf	prodh,w,c
 13605  0142' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13606  0144' 0E01               	movlw	1
 13607  0146' 2500'              	addwf	??_MacExecuteCommands& (0+255),w,b
 13608  0148' 6ED9               	movwf	fsr2l,c
 13609  014A' 0E00               	movlw	0
 13610  014C' 2100'              	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13611  014E' 6EDA               	movwf	fsr2h,c
 13612  0150' 0102               	movlb	2	; () banked
 13613  0152' 9CDF               	bcf	indf2,6,c
 13614                           
 13615                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 13616  0154' 5100'              	movf	(_loRa+167)& (0+255),w,b
 13617  0156' 0D02               	mullw	2
 13618  0158' 0E00'              	movlw	low _loRa
 13619  015A' 0100               	movlb	0	; () banked
 13620  015C' 6F00'              	movwf	??_MacExecuteCommands& (0+255),b
 13621  015E' 0E00'              	movlw	high _loRa
 13622  0160' 6F00'              	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13623  0162' 0EA8               	movlw	168
 13624  0164' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13625  0166' 0E00               	movlw	0
 13626  0168' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13627  016A' 50F3               	movf	prodl,w,c
 13628  016C' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13629  016E' 50F4               	movf	prodh,w,c
 13630  0170' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13631  0172' 0E01               	movlw	1
 13632  0174' 2500'              	addwf	??_MacExecuteCommands& (0+255),w,b
 13633  0176' 6ED9               	movwf	fsr2l,c
 13634  0178' 0E00               	movlw	0
 13635  017A' 2100'              	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13636  017C' 6EDA               	movwf	fsr2h,c
 13637  017E' 0102               	movlb	2	; () banked
 13638  0180' 9EDF               	bcf	indf2,7,c
 13639                           
 13640                           ; BSR set to: 2
 13641                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 13642  0182' C056' FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13643  0186' C057' FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13644  018A' 5100'              	movf	(_loRa+167)& (0+255),w,b
 13645  018C' 0D02               	mullw	2
 13646  018E' 0E00'              	movlw	low (_loRa+168)
 13647  0190' 24F3               	addwf	prodl,w,c
 13648  0192' 6EE9               	movwf	fsr0l,c
 13649  0194' 0E00'              	movlw	high (_loRa+168)
 13650  0196' 20F4               	addwfc	prodh,w,c
 13651  0198' 6EEA               	movwf	fsr0h,c
 13652  019A' CFDF FFEF          	movff	indf2,indf0
 13653                           
 13654                           ;lorawan.c: 1595: switch (*ptr ++)
 13655  019E' D064               	goto	l1995
 13656  01A0'                    
 13657                           ;lorawan.c: 1598: {
 13658                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 13659                           
 13660                           ; BSR set to: 2
 13661  01A0' C056' F000'        	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 13662  01A4' C057' F001'        	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 13663  01A8' EC00' F000'        	call	_ExecuteLinkCheck
 13664  01AC' C000' F056'        	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 13665  01B0' C001' F057'        	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 13666  01B4' D04D               	goto	l14970
 13667  01B6'                    
 13668                           ;lorawan.c: 1605: {
 13669                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 13670                           
 13671                           ; BSR set to: 2
 13672  01B6' C056' F00F'        	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 13673  01BA' C057' F010'        	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 13674  01BE' EC00' F000'        	call	_ExecuteLinkAdr	;wreg free
 13675  01C2' C00F' F056'        	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 13676  01C6' C010' F057'        	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 13677                           
 13678                           ;lorawan.c: 1607: } break;
 13679  01CA' D06C               	goto	l1997
 13680  01CC'                    
 13681                           ;lorawan.c: 1610: {
 13682                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 13683  01CC' C056' F000'        	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 13684  01D0' C057' F001'        	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 13685  01D4' EC00' F000'        	call	_ExecuteDutyCycle	;wreg free
 13686  01D8' C000' F056'        	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 13687  01DC' C001' F057'        	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 13688                           
 13689                           ;lorawan.c: 1612: } break;
 13690  01E0' D061               	goto	l1997
 13691  01E2'                    
 13692                           ;lorawan.c: 1615: {
 13693                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 13694  01E2' C056' F046'        	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 13695  01E6' C057' F047'        	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 13696  01EA' EC00' F000'        	call	_ExecuteRxParamSetupReq	;wreg free
 13697  01EE' C046' F056'        	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 13698  01F2' C047' F057'        	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 13699                           
 13700                           ;lorawan.c: 1617: } break;
 13701  01F6' D056               	goto	l1997
 13702  01F8'                    
 13703                           ;lorawan.c: 1620: {
 13704                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 13705  01F8' C056' F000'        	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 13706  01FC' C057' F001'        	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 13707  0200' EC00' F000'        	call	_ExecuteDevStatus	;wreg free
 13708  0204' C000' F056'        	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 13709  0208' C001' F057'        	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 13710                           
 13711                           ;lorawan.c: 1622: } break;
 13712  020C' D04B               	goto	l1997
 13713  020E'                    
 13714                           ;lorawan.c: 1625: {
 13715                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 13716  020E' C056' F046'        	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 13717  0212' C057' F047'        	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 13718  0216' EC00' F000'        	call	_ExecuteNewChannel	;wreg free
 13719  021A' C046' F056'        	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 13720  021E' C047' F057'        	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 13721                           
 13722                           ;lorawan.c: 1628: } break;
 13723  0222' D040               	goto	l1997
 13724  0224'                    
 13725                           ;lorawan.c: 1631: {
 13726                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 13727  0224' C056' F007'        	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 13728  0228' C057' F008'        	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 13729  022C' EC00' F000'        	call	_ExecuteRxTimingSetup	;wreg free
 13730  0230' C007' F056'        	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 13731  0234' C008' F057'        	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 13732                           
 13733                           ;lorawan.c: 1633: } break;
 13734  0238' D035               	goto	l1997
 13735  023A'                    
 13736                           ;lorawan.c: 1636: {
 13737                           ;lorawan.c: 1637: done = 1;
 13738  023A' 0E01               	movlw	1
 13739  023C' 0100               	movlb	0	; () banked
 13740  023E' 6F00'              	movwf	MacExecuteCommands@done& (0+255),b
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 13744  0240' 5100'              	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13745  0242' 0D01               	mullw	1
 13746  0244' 50F3               	movf	prodl,w,c
 13747  0246' 2500'              	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13748  0248' 6F00'              	movwf	MacExecuteCommands@ptr& (0+255),b
 13749  024A' 50F4               	movf	prodh,w,c
 13750  024C' 2100'              	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13751  024E' 6F00'              	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 13752  0250'                    l14970:
 13753                           
 13754                           ; BSR set to: 0
 13755                           ;lorawan.c: 1639: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 13756  0250' 0102               	movlb	2	; () banked
 13757  0252' 5100'              	movf	(_loRa+167)& (0+255),w,b
 13758  0254' 0D02               	mullw	2
 13759  0256' 0E00'              	movlw	low (_loRa+168)
 13760  0258' 24F3               	addwf	prodl,w,c
 13761  025A' 6ED9               	movwf	fsr2l,c
 13762  025C' 0E00'              	movlw	high (_loRa+168)
 13763  025E' 20F4               	addwfc	prodh,w,c
 13764  0260' 6EDA               	movwf	fsr2h,c
 13765  0262' 0EFF               	movlw	255
 13766  0264' 6EDF               	movwf	indf2,c
 13767                           
 13768                           ; BSR set to: 2
 13769                           ;lorawan.c: 1641: }
 13770                           
 13771                           ;lorawan.c: 1640: } break;
 13772  0266' D01E               	goto	l1997
 13773  0268'                    l1995:
 13774                           
 13775                           ; BSR set to: 2
 13776                           
 13777                           ; BSR set to: 2
 13778  0268' C056' FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13779  026C' C057' FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13780  0270' 0100               	movlb	0	; () banked
 13781  0272' 4B00'              	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 13782  0274' 2B00'              	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 13783  0276' 50DF               	movf	indf2,w,c
 13784                           
 13785                           ; Switch size 1, requested type "space"
 13786                           ; Number of cases is 7, Range of values is 2 to 8
 13787                           ; switch strategies available:
 13788                           ; Name         Instructions Cycles
 13789                           ; simple_byte           22    12 (average)
 13790                           ;	Chosen strategy is simple_byte
 13791  0278' 0A02               	xorlw	2	; case 2
 13792  027A' B4D8               	btfsc	status,2,c
 13793  027C' D791               	goto	l1996
 13794  027E' 0A01               	xorlw	1	; case 3
 13795  0280' B4D8               	btfsc	status,2,c
 13796  0282' D799               	goto	l1998
 13797  0284' 0A07               	xorlw	7	; case 4
 13798  0286' B4D8               	btfsc	status,2,c
 13799  0288' D7A1               	goto	l1999
 13800  028A' 0A01               	xorlw	1	; case 5
 13801  028C' B4D8               	btfsc	status,2,c
 13802  028E' D7A9               	goto	l2000
 13803  0290' 0A03               	xorlw	3	; case 6
 13804  0292' B4D8               	btfsc	status,2,c
 13805  0294' D7B1               	goto	l2001
 13806  0296' 0A01               	xorlw	1	; case 7
 13807  0298' B4D8               	btfsc	status,2,c
 13808  029A' D7B9               	goto	l2002
 13809  029C' 0A0F               	xorlw	15	; case 8
 13810  029E' B4D8               	btfsc	status,2,c
 13811  02A0' D7C1               	goto	l2003
 13812  02A2' D7CB               	goto	l2004
 13813  02A4'                    l1997:
 13814                           
 13815                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 13816                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 13817                           
 13818                           ; BSR set to: 0
 13819  02A4' 0102               	movlb	2	; () banked
 13820  02A6' 5100'              	movf	(_loRa+167)& (0+255),w,b
 13821  02A8' 0D02               	mullw	2
 13822  02AA' 0E00'              	movlw	low (_loRa+168)
 13823  02AC' 24F3               	addwf	prodl,w,c
 13824  02AE' 6ED9               	movwf	fsr2l,c
 13825  02B0' 0E00'              	movlw	high (_loRa+168)
 13826  02B2' 20F4               	addwfc	prodh,w,c
 13827  02B4' 6EDA               	movwf	fsr2h,c
 13828  02B6' 28DE               	incf	postinc2,w,c
 13829  02B8' B4D8               	btfsc	status,2,c
 13830  02BA' D004               	goto	l2005
 13831                           
 13832                           ; BSR set to: 2
 13833  02BC' 0E10               	movlw	16
 13834  02BE' 6100'              	cpfslt	(_loRa+167)& (0+255),b
 13835  02C0' D001               	goto	l2005
 13836                           
 13837                           ; BSR set to: 2
 13838                           ;lorawan.c: 1645: {
 13839                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 13840  02C2' 2B00'              	incf	(_loRa+167)& (0+255),f,b
 13841  02C4'                    l2005:
 13842                           
 13843                           ; BSR set to: 2
 13844                           
 13845                           ; BSR set to: 2
 13846  02C4' 0100               	movlb	0	; () banked
 13847  02C6' 5100'              	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13848  02C8' 0D01               	mullw	1
 13849  02CA' C050' F053'        	movff	MacExecuteCommands@buffer,??_MacExecuteCommands
 13850  02CE' C051' F054'        	movff	MacExecuteCommands@buffer+1,??_MacExecuteCommands+1
 13851  02D2' 50F3               	movf	prodl,w,c
 13852  02D4' 2700'              	addwf	??_MacExecuteCommands& (0+255),f,b
 13853  02D6' 50F4               	movf	prodh,w,c
 13854  02D8' 2300'              	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13855  02DA' 5100'              	movf	??_MacExecuteCommands& (0+255),w,b
 13856  02DC' 5D00'              	subwf	MacExecuteCommands@ptr& (0+255),w,b
 13857  02DE' 5100'              	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 13858  02E0' 5900'              	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 13859  02E2' B0D8               	btfsc	status,0,c
 13860  02E4' D003               	goto	u17620
 13861                           
 13862                           ; BSR set to: 0
 13863  02E6' 5100'              	movf	MacExecuteCommands@done& (0+255),w,b
 13864  02E8' B4D8               	btfsc	status,2,c
 13865  02EA' D692               	goto	l1994
 13866  02EC'                    u17620:
 13867                           
 13868                           ; BSR set to: 0
 13869                           ;lorawan.c: 1647: }
 13870                           ;lorawan.c: 1648: }
 13871                           ;lorawan.c: 1649: return ptr;
 13872                           
 13873                           ; BSR set to: 0
 13874                           
 13875                           ; BSR set to: 0
 13876  02EC' C056' F050'        	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 13877  02F0' C057' F051'        	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 13878  02F4' 0012               	return	
 13879  02F6'                    __end_of_MacExecuteCommands:
 13880                           	opt stack 0
 13881                           tosu	equ	0xFFF
 13882                           tosh	equ	0xFFE
 13883                           tosl	equ	0xFFD
 13884                           pclath	equ	0xFFA
 13885                           tblptru	equ	0xFF8
 13886                           tblptrh	equ	0xFF7
 13887                           tblptrl	equ	0xFF6
 13888                           tablat	equ	0xFF5
 13889                           prodh	equ	0xFF4
 13890                           prodl	equ	0xFF3
 13891                           intcon	equ	0xFF2
 13892                           intcon2	equ	0xFF1
 13893                           intcon3	equ	0xFF0
 13894                           indf0	equ	0xFEF
 13895                           postinc0	equ	0xFEE
 13896                           fsr0h	equ	0xFEA
 13897                           fsr0l	equ	0xFE9
 13898                           wreg	equ	0xFE8
 13899                           postinc1	equ	0xFE6
 13900                           postdec1	equ	0xFE5
 13901                           plusw1	equ	0xFE3
 13902                           fsr1h	equ	0xFE2
 13903                           fsr1l	equ	0xFE1
 13904                           indf2	equ	0xFDF
 13905                           postinc2	equ	0xFDE
 13906                           postdec2	equ	0xFDD
 13907                           fsr2h	equ	0xFDA
 13908                           fsr2l	equ	0xFD9
 13909                           status	equ	0xFD8
 13910                           
 13911 ;; *************** function _ExecuteRxTimingSetup *****************
 13912 ;; Defined at:
 13913 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13914 ;; Parameters:    Size  Location     Type
 13915 ;;  ptr             2    7[BANK0 ] PTR unsigned char 
 13916 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13917 ;; Auto vars:     Size  Location     Type
 13918 ;;  delay           1    9[BANK0 ] unsigned char 
 13919 ;; Return value:  Size  Location     Type
 13920 ;;                  2    7[BANK0 ] PTR unsigned char 
 13921 ;; Registers used:
 13922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13923 ;; Tracked objects:
 13924 ;;		On entry : 0/0
 13925 ;;		On exit  : 0/0
 13926 ;;		Unchanged: 0/0
 13927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13928 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13929 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13931 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13932 ;;Total ram usage:        3 bytes
 13933 ;; Hardware stack levels used:    1
 13934 ;; Hardware stack levels required when called:    9
 13935 ;; This function calls:
 13936 ;;		_UpdateReceiveDelays
 13937 ;; This function is called by:
 13938 ;;		_MacExecuteCommands
 13939 ;; This function uses a non-reentrant model
 13940 ;;
 13941                           
 13942                           	psect	text61
 13943  0000'                    __ptext61:
 13944                           	opt stack 0
 13945  0000'                    _ExecuteRxTimingSetup:
 13946                           	opt stack 16
 13947                           
 13948                           ;lorawan.c: 1661: uint8_t delay;
 13949                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 13950                           
 13951                           ; BSR set to: 0
 13952                           ;incstack = 0
 13953  0000' C007' FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 13954  0004' C008' FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 13955  0008' 50DF               	movf	indf2,w,c
 13956  000A' 0B0F               	andlw	15
 13957  000C' 0100               	movlb	0	; () banked
 13958  000E' 6F00'              	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 13959                           
 13960                           ; BSR set to: 0
 13961                           ;lorawan.c: 1664: ptr++;
 13962  0010' 4B00'              	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 13963  0012' 2B00'              	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 13964                           
 13965                           ; BSR set to: 0
 13966                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 13967  0014' 5100'              	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 13968  0016' EC00' F000'        	call	_UpdateReceiveDelays
 13969                           
 13970                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 13971  001A' 0102               	movlb	2	; () banked
 13972  001C' 8100'              	bsf	(_loRa+4)& (0+255),0,b
 13973                           
 13974                           ; BSR set to: 2
 13975                           ;lorawan.c: 1669: return ptr;
 13976  001E' C007' F007'        	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 13977  0022' C008' F008'        	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 13978  0026' 0012               	return	
 13979  0028'                    __end_of_ExecuteRxTimingSetup:
 13980                           	opt stack 0
 13981                           tosu	equ	0xFFF
 13982                           tosh	equ	0xFFE
 13983                           tosl	equ	0xFFD
 13984                           pclath	equ	0xFFA
 13985                           tblptru	equ	0xFF8
 13986                           tblptrh	equ	0xFF7
 13987                           tblptrl	equ	0xFF6
 13988                           tablat	equ	0xFF5
 13989                           prodh	equ	0xFF4
 13990                           prodl	equ	0xFF3
 13991                           intcon	equ	0xFF2
 13992                           intcon2	equ	0xFF1
 13993                           intcon3	equ	0xFF0
 13994                           indf0	equ	0xFEF
 13995                           postinc0	equ	0xFEE
 13996                           fsr0h	equ	0xFEA
 13997                           fsr0l	equ	0xFE9
 13998                           wreg	equ	0xFE8
 13999                           postinc1	equ	0xFE6
 14000                           postdec1	equ	0xFE5
 14001                           plusw1	equ	0xFE3
 14002                           fsr1h	equ	0xFE2
 14003                           fsr1l	equ	0xFE1
 14004                           indf2	equ	0xFDF
 14005                           postinc2	equ	0xFDE
 14006                           postdec2	equ	0xFDD
 14007                           fsr2h	equ	0xFDA
 14008                           fsr2l	equ	0xFD9
 14009                           status	equ	0xFD8
 14010                           
 14011 ;; *************** function _UpdateReceiveDelays *****************
 14012 ;; Defined at:
 14013 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14014 ;; Parameters:    Size  Location     Type
 14015 ;;  delay           1    wreg     unsigned char 
 14016 ;; Auto vars:     Size  Location     Type
 14017 ;;  delay           1    6[BANK0 ] unsigned char 
 14018 ;; Return value:  Size  Location     Type
 14019 ;;                  1    wreg      void 
 14020 ;; Registers used:
 14021 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14022 ;; Tracked objects:
 14023 ;;		On entry : 0/0
 14024 ;;		On exit  : 0/0
 14025 ;;		Unchanged: 0/0
 14026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14028 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14030 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14031 ;;Total ram usage:        1 bytes
 14032 ;; Hardware stack levels used:    1
 14033 ;; Hardware stack levels required when called:    8
 14034 ;; This function calls:
 14035 ;;		___wmul
 14036 ;; This function is called by:
 14037 ;;		_LORAWAN_RxDone
 14038 ;;		_ExecuteRxTimingSetup
 14039 ;; This function uses a non-reentrant model
 14040 ;;
 14041                           
 14042                           	psect	text62
 14043  0000'                    __ptext62:
 14044                           	opt stack 0
 14045  0000'                    _UpdateReceiveDelays:
 14046                           	opt stack 18
 14047                           
 14048                           ; BSR set to: 2
 14049                           ;incstack = 0
 14050                           ;UpdateReceiveDelays@delay stored from wreg
 14051  0000' 0100               	movlb	0	; () banked
 14052  0002' 6F00'              	movwf	UpdateReceiveDelays@delay& (0+255),b
 14053                           
 14054                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 14055  0004' C006' F000'        	movff	UpdateReceiveDelays@delay,___wmul@multiplier
 14056  0008' 0100               	movlb	0	; () banked
 14057  000A' 6B00'              	clrf	(___wmul@multiplier+1)& (0+255),b
 14058  000C' 0E03               	movlw	3
 14059  000E' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
 14060  0010' 0EE8               	movlw	232
 14061  0012' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
 14062  0014' EC00' F000'        	call	___wmul	;wreg free
 14063  0018' C000' F094'        	movff	?___wmul,_loRa+148
 14064  001C' C001' F095'        	movff	?___wmul+1,_loRa+149
 14065                           
 14066                           ;lorawan.c: 2029: if (delay == 0)
 14067  0020' 0100               	movlb	0	; () banked
 14068  0022' 5100'              	movf	UpdateReceiveDelays@delay& (0+255),w,b
 14069  0024' A4D8               	btfss	status,2,c
 14070  0026' D005               	goto	l2104
 14071                           
 14072                           ; BSR set to: 0
 14073                           ;lorawan.c: 2030: {
 14074                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 14075  0028' 0E03               	movlw	3
 14076  002A' 0102               	movlb	2	; () banked
 14077  002C' 6F00'              	movwf	(_loRa+149)& (0+255),b
 14078  002E' 0EE8               	movlw	232
 14079  0030' 6F00'              	movwf	(_loRa+148)& (0+255),b
 14080  0032'                    l2104:
 14081                           
 14082                           ;lorawan.c: 2032: }
 14083                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 14084                           
 14085                           ; BSR set to: 2
 14086  0032' 0EE8               	movlw	232
 14087  0034' 0102               	movlb	2	; () banked
 14088  0036' 2500'              	addwf	(_loRa+148)& (0+255),w,b
 14089  0038' 6F00'              	movwf	(_loRa+150)& (0+255),b
 14090  003A' 0E03               	movlw	3
 14091  003C' 2100'              	addwfc	(_loRa+149)& (0+255),w,b
 14092  003E' 6F00'              	movwf	(_loRa+151)& (0+255),b
 14093                           
 14094                           ; BSR set to: 2
 14095  0040' 0012               	return		;funcret
 14096  0042'                    __end_of_UpdateReceiveDelays:
 14097                           	opt stack 0
 14098                           tosu	equ	0xFFF
 14099                           tosh	equ	0xFFE
 14100                           tosl	equ	0xFFD
 14101                           pclath	equ	0xFFA
 14102                           tblptru	equ	0xFF8
 14103                           tblptrh	equ	0xFF7
 14104                           tblptrl	equ	0xFF6
 14105                           tablat	equ	0xFF5
 14106                           prodh	equ	0xFF4
 14107                           prodl	equ	0xFF3
 14108                           intcon	equ	0xFF2
 14109                           intcon2	equ	0xFF1
 14110                           intcon3	equ	0xFF0
 14111                           indf0	equ	0xFEF
 14112                           postinc0	equ	0xFEE
 14113                           fsr0h	equ	0xFEA
 14114                           fsr0l	equ	0xFE9
 14115                           wreg	equ	0xFE8
 14116                           postinc1	equ	0xFE6
 14117                           postdec1	equ	0xFE5
 14118                           plusw1	equ	0xFE3
 14119                           fsr1h	equ	0xFE2
 14120                           fsr1l	equ	0xFE1
 14121                           indf2	equ	0xFDF
 14122                           postinc2	equ	0xFDE
 14123                           postdec2	equ	0xFDD
 14124                           fsr2h	equ	0xFDA
 14125                           fsr2l	equ	0xFD9
 14126                           status	equ	0xFD8
 14127                           
 14128 ;; *************** function ___wmul *****************
 14129 ;; Defined at:
 14130 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 14131 ;; Parameters:    Size  Location     Type
 14132 ;;  multiplier      2    0[BANK0 ] unsigned int 
 14133 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 14134 ;; Auto vars:     Size  Location     Type
 14135 ;;  product         2    4[BANK0 ] unsigned int 
 14136 ;; Return value:  Size  Location     Type
 14137 ;;                  2    0[BANK0 ] unsigned int 
 14138 ;; Registers used:
 14139 ;;		wreg, status,2, status,0, prodl, prodh
 14140 ;; Tracked objects:
 14141 ;;		On entry : 0/0
 14142 ;;		On exit  : 0/0
 14143 ;;		Unchanged: 0/0
 14144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14145 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14146 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14148 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14149 ;;Total ram usage:        6 bytes
 14150 ;; Hardware stack levels used:    1
 14151 ;; Hardware stack levels required when called:    7
 14152 ;; This function calls:
 14153 ;;		Nothing
 14154 ;; This function is called by:
 14155 ;;		_UpdateCfList
 14156 ;;		_UpdateReceiveDelays
 14157 ;; This function uses a non-reentrant model
 14158 ;;
 14159                           
 14160                           	psect	text63
 14161  0000'                    __ptext63:
 14162                           	opt stack 0
 14163  0000'                    ___wmul:
 14164                           	opt stack 18
 14165                           
 14166                           ; BSR set to: 2
 14167                           ;incstack = 0
 14168  0000' 0100               	movlb	0	; () banked
 14169  0002' 5100'              	movf	___wmul@multiplier& (0+255),w,b
 14170  0004' 0300'              	mulwf	___wmul@multiplicand& (0+255),b
 14171  0006' CFF3 F004'         	movff	prodl,___wmul@product
 14172  000A' CFF4 F005'         	movff	prodh,___wmul@product+1
 14173  000E' 5100'              	movf	___wmul@multiplier& (0+255),w,b
 14174  0010' 0300'              	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14175  0012' 50F3               	movf	prodl,w,c
 14176  0014' 2700'              	addwf	(___wmul@product+1)& (0+255),f,b
 14177  0016' 5100'              	movf	(___wmul@multiplier+1)& (0+255),w,b
 14178  0018' 0300'              	mulwf	___wmul@multiplicand& (0+255),b
 14179  001A' 50F3               	movf	prodl,w,c
 14180  001C' 2700'              	addwf	(___wmul@product+1)& (0+255),f,b
 14181                           
 14182                           ; BSR set to: 0
 14183  001E' C004' F000'        	movff	___wmul@product,?___wmul
 14184  0022' C005' F001'        	movff	___wmul@product+1,?___wmul+1
 14185  0026' 0012               	return	
 14186  0028'                    __end_of___wmul:
 14187                           	opt stack 0
 14188                           tosu	equ	0xFFF
 14189                           tosh	equ	0xFFE
 14190                           tosl	equ	0xFFD
 14191                           pclath	equ	0xFFA
 14192                           tblptru	equ	0xFF8
 14193                           tblptrh	equ	0xFF7
 14194                           tblptrl	equ	0xFF6
 14195                           tablat	equ	0xFF5
 14196                           prodh	equ	0xFF4
 14197                           prodl	equ	0xFF3
 14198                           intcon	equ	0xFF2
 14199                           intcon2	equ	0xFF1
 14200                           intcon3	equ	0xFF0
 14201                           indf0	equ	0xFEF
 14202                           postinc0	equ	0xFEE
 14203                           fsr0h	equ	0xFEA
 14204                           fsr0l	equ	0xFE9
 14205                           wreg	equ	0xFE8
 14206                           postinc1	equ	0xFE6
 14207                           postdec1	equ	0xFE5
 14208                           plusw1	equ	0xFE3
 14209                           fsr1h	equ	0xFE2
 14210                           fsr1l	equ	0xFE1
 14211                           indf2	equ	0xFDF
 14212                           postinc2	equ	0xFDE
 14213                           postdec2	equ	0xFDD
 14214                           fsr2h	equ	0xFDA
 14215                           fsr2l	equ	0xFD9
 14216                           status	equ	0xFD8
 14217                           
 14218 ;; *************** function _ExecuteRxParamSetupReq *****************
 14219 ;; Defined at:
 14220 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14221 ;; Parameters:    Size  Location     Type
 14222 ;;  ptr             2   70[BANK0 ] PTR unsigned char 
 14223 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14224 ;; Auto vars:     Size  Location     Type
 14225 ;;  frequency       4   74[BANK0 ] unsigned long 
 14226 ;;  dlSettings      1   78[BANK0 ] struct .
 14227 ;; Return value:  Size  Location     Type
 14228 ;;                  2   70[BANK0 ] PTR unsigned char 
 14229 ;; Registers used:
 14230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14231 ;; Tracked objects:
 14232 ;;		On entry : 0/0
 14233 ;;		On exit  : 0/0
 14234 ;;		Unchanged: 0/0
 14235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14236 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14237 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14238 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14239 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14240 ;;Total ram usage:        9 bytes
 14241 ;; Hardware stack levels used:    1
 14242 ;; Hardware stack levels required when called:    8
 14243 ;; This function calls:
 14244 ;;		_UpdateReceiveWindow2Parameters
 14245 ;;		_ValidateDataRate
 14246 ;;		_ValidateFrequency
 14247 ;;		_ValidateRxOffset
 14248 ;;		___lmul
 14249 ;; This function is called by:
 14250 ;;		_MacExecuteCommands
 14251 ;; This function uses a non-reentrant model
 14252 ;;
 14253                           
 14254                           	psect	text64
 14255  0000'                    __ptext64:
 14256                           	opt stack 0
 14257  0000'                    _ExecuteRxParamSetupReq:
 14258                           	opt stack 17
 14259                           
 14260                           ;lorawan_eu.c: 742: DlSettings_t dlSettings;
 14261                           ;lorawan_eu.c: 743: uint32_t frequency = 0;
 14262                           
 14263                           ; BSR set to: 0
 14264                           ;incstack = 0
 14265  0000' 0E00               	movlw	0
 14266  0002' 0100               	movlb	0	; () banked
 14267  0004' 6F00'              	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 14268  0006' 0E00               	movlw	0
 14269  0008' 6F00'              	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 14270  000A' 0E00               	movlw	0
 14271  000C' 6F00'              	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 14272  000E' 0E00               	movlw	0
 14273  0010' 6F00'              	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 14274                           
 14275                           ; BSR set to: 0
 14276                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 14277  0012' C046' FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14278  0016' C047' FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14279  001A' 50DF               	movf	indf2,w,c
 14280  001C' 6F00'              	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 14281                           
 14282                           ; BSR set to: 0
 14283  001E' 4B00'              	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14284  0020' 2B00'              	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14285                           
 14286                           ; BSR set to: 0
 14287                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14288  0022' C046' FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14289  0026' C047' FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14290  002A' 0EFF               	movlw	255
 14291  002C' 14DE               	andwf	postinc2,w,c
 14292  002E' 6F00'              	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 14293  0030' 0EFF               	movlw	255
 14294  0032' 14DE               	andwf	postinc2,w,c
 14295  0034' 6F00'              	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 14296  0036' 0EFF               	movlw	255
 14297  0038' 14DE               	andwf	postinc2,w,c
 14298  003A' 6F00'              	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 14299  003C' 0E00               	movlw	0
 14300  003E' 14DE               	andwf	postinc2,w,c
 14301  0040' 6F00'              	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 14302                           
 14303                           ; BSR set to: 0
 14304                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 14305  0042' C04A' F03A'        	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 14306  0046' C04B' F03B'        	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 14307  004A' C04C' F03C'        	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 14308  004E' C04D' F03D'        	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 14309  0052' 0E64               	movlw	100
 14310  0054' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 14311  0056' 0E00               	movlw	0
 14312  0058' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 14313  005A' 0E00               	movlw	0
 14314  005C' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 14315  005E' 0E00               	movlw	0
 14316  0060' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 14317  0062' EC00' F000'        	call	___lmul	;wreg free
 14318  0066' C03A' F04A'        	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 14319  006A' C03B' F04B'        	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 14320  006E' C03C' F04C'        	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 14321  0072' C03D' F04D'        	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 14322                           
 14323                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 14324  0076' 0E03               	movlw	3
 14325  0078' 0100               	movlb	0	; () banked
 14326  007A' 2500'              	addwf	ExecuteRxParamSetupReq@ptr& (0+255),w,b
 14327  007C' 6F00'              	movwf	ExecuteRxParamSetupReq@ptr& (0+255),b
 14328  007E' 0E00               	movlw	0
 14329  0080' 2100'              	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),w,b
 14330  0082' 6F00'              	movwf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),b
 14331                           
 14332                           ; BSR set to: 0
 14333                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 14334  0084' C04A' F000'        	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 14335  0088' C04B' F001'        	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 14336  008C' C04C' F002'        	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 14337  0090' C04D' F003'        	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 14338  0094' EC00' F000'        	call	_ValidateFrequency	;wreg free
 14339  0098' 0900               	iorlw	0
 14340  009A' A4D8               	btfss	status,2,c
 14341  009C' D018               	goto	l1138
 14342                           
 14343                           ;lorawan_eu.c: 754: {
 14344                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 14345  009E' 0102               	movlb	2	; () banked
 14346  00A0' 5100'              	movf	(_loRa+167)& (0+255),w,b
 14347  00A2' 0D02               	mullw	2
 14348  00A4' 0E00'              	movlw	low _loRa
 14349  00A6' 0100               	movlb	0	; () banked
 14350  00A8' 6F00'              	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14351  00AA' 0E00'              	movlw	high _loRa
 14352  00AC' 6F00'              	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14353  00AE' 0EA8               	movlw	168
 14354  00B0' 2700'              	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14355  00B2' 0E00               	movlw	0
 14356  00B4' 2300'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14357  00B6' 50F3               	movf	prodl,w,c
 14358  00B8' 2700'              	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14359  00BA' 50F4               	movf	prodh,w,c
 14360  00BC' 2300'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14361  00BE' 0E01               	movlw	1
 14362  00C0' 2500'              	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14363  00C2' 6ED9               	movwf	fsr2l,c
 14364  00C4' 0E00               	movlw	0
 14365  00C6' 2100'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14366  00C8' 6EDA               	movwf	fsr2h,c
 14367  00CA' 0102               	movlb	2	; () banked
 14368  00CC' 86DF               	bsf	indf2,3,c
 14369  00CE'                    l1138:
 14370                           
 14371                           ;lorawan_eu.c: 756: }
 14372                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 14373                           
 14374                           ; BSR set to: 2
 14375  00CE' 0100               	movlb	0	; () banked
 14376  00D0' 5100'              	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14377  00D2' 0B0F               	andlw	15
 14378  00D4' EC00' F000'        	call	_ValidateDataRate
 14379  00D8' 0900               	iorlw	0
 14380  00DA' A4D8               	btfss	status,2,c
 14381  00DC' D018               	goto	l1139
 14382                           
 14383                           ;lorawan_eu.c: 759: {
 14384                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 14385  00DE' 0102               	movlb	2	; () banked
 14386  00E0' 5100'              	movf	(_loRa+167)& (0+255),w,b
 14387  00E2' 0D02               	mullw	2
 14388  00E4' 0E00'              	movlw	low _loRa
 14389  00E6' 0100               	movlb	0	; () banked
 14390  00E8' 6F00'              	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14391  00EA' 0E00'              	movlw	high _loRa
 14392  00EC' 6F00'              	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14393  00EE' 0EA8               	movlw	168
 14394  00F0' 2700'              	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14395  00F2' 0E00               	movlw	0
 14396  00F4' 2300'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14397  00F6' 50F3               	movf	prodl,w,c
 14398  00F8' 2700'              	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14399  00FA' 50F4               	movf	prodh,w,c
 14400  00FC' 2300'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14401  00FE' 0E01               	movlw	1
 14402  0100' 2500'              	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14403  0102' 6ED9               	movwf	fsr2l,c
 14404  0104' 0E00               	movlw	0
 14405  0106' 2100'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14406  0108' 6EDA               	movwf	fsr2h,c
 14407  010A' 0102               	movlb	2	; () banked
 14408  010C' 88DF               	bsf	indf2,4,c
 14409  010E'                    l1139:
 14410                           
 14411                           ;lorawan_eu.c: 761: }
 14412                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 14413                           
 14414                           ; BSR set to: 2
 14415  010E' 0100               	movlb	0	; () banked
 14416  0110' 3900'              	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14417  0112' 0B07               	andlw	7
 14418  0114' EC00' F000'        	call	_ValidateRxOffset
 14419  0118' 0900               	iorlw	0
 14420  011A' A4D8               	btfss	status,2,c
 14421  011C' D018               	goto	l1140
 14422                           
 14423                           ;lorawan_eu.c: 764: {
 14424                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 14425  011E' 0102               	movlb	2	; () banked
 14426  0120' 5100'              	movf	(_loRa+167)& (0+255),w,b
 14427  0122' 0D02               	mullw	2
 14428  0124' 0E00'              	movlw	low _loRa
 14429  0126' 0100               	movlb	0	; () banked
 14430  0128' 6F00'              	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14431  012A' 0E00'              	movlw	high _loRa
 14432  012C' 6F00'              	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14433  012E' 0EA8               	movlw	168
 14434  0130' 2700'              	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14435  0132' 0E00               	movlw	0
 14436  0134' 2300'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14437  0136' 50F3               	movf	prodl,w,c
 14438  0138' 2700'              	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14439  013A' 50F4               	movf	prodh,w,c
 14440  013C' 2300'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14441  013E' 0E01               	movlw	1
 14442  0140' 2500'              	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14443  0142' 6ED9               	movwf	fsr2l,c
 14444  0144' 0E00               	movlw	0
 14445  0146' 2100'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14446  0148' 6EDA               	movwf	fsr2h,c
 14447  014A' 0102               	movlb	2	; () banked
 14448  014C' 8ADF               	bsf	indf2,5,c
 14449  014E'                    l1140:
 14450                           
 14451                           ;lorawan_eu.c: 766: }
 14452                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 14453  014E' 0102               	movlb	2	; () banked
 14454  0150' 5100'              	movf	(_loRa+167)& (0+255),w,b
 14455  0152' 0D02               	mullw	2
 14456  0154' 0E00'              	movlw	low _loRa
 14457  0156' 0100               	movlb	0	; () banked
 14458  0158' 6F00'              	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14459  015A' 0E00'              	movlw	high _loRa
 14460  015C' 6F00'              	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14461  015E' 0EA8               	movlw	168
 14462  0160' 2700'              	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14463  0162' 0E00               	movlw	0
 14464  0164' 2300'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14465  0166' 50F3               	movf	prodl,w,c
 14466  0168' 2700'              	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14467  016A' 50F4               	movf	prodh,w,c
 14468  016C' 2300'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14469  016E' 0E01               	movlw	1
 14470  0170' 2500'              	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14471  0172' 6ED9               	movwf	fsr2l,c
 14472  0174' 0E00               	movlw	0
 14473  0176' 2100'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14474  0178' 6EDA               	movwf	fsr2h,c
 14475  017A' 0102               	movlb	2	; () banked
 14476  017C' A8DF               	btfss	indf2,4,c
 14477  017E' D045               	goto	l1141
 14478                           
 14479                           ; BSR set to: 2
 14480  0180' 5100'              	movf	(_loRa+167)& (0+255),w,b
 14481  0182' 0D02               	mullw	2
 14482  0184' 0E00'              	movlw	low _loRa
 14483  0186' 0100               	movlb	0	; () banked
 14484  0188' 6F00'              	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14485  018A' 0E00'              	movlw	high _loRa
 14486  018C' 6F00'              	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14487  018E' 0EA8               	movlw	168
 14488  0190' 2700'              	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14489  0192' 0E00               	movlw	0
 14490  0194' 2300'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14491  0196' 50F3               	movf	prodl,w,c
 14492  0198' 2700'              	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14493  019A' 50F4               	movf	prodh,w,c
 14494  019C' 2300'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14495  019E' 0E01               	movlw	1
 14496  01A0' 2500'              	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14497  01A2' 6ED9               	movwf	fsr2l,c
 14498  01A4' 0E00               	movlw	0
 14499  01A6' 2100'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14500  01A8' 6EDA               	movwf	fsr2h,c
 14501  01AA' 0102               	movlb	2	; () banked
 14502  01AC' A6DF               	btfss	indf2,3,c
 14503  01AE' D02D               	goto	l1141
 14504                           
 14505                           ; BSR set to: 2
 14506  01B0' 5100'              	movf	(_loRa+167)& (0+255),w,b
 14507  01B2' 0D02               	mullw	2
 14508  01B4' 0E00'              	movlw	low _loRa
 14509  01B6' 0100               	movlb	0	; () banked
 14510  01B8' 6F00'              	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14511  01BA' 0E00'              	movlw	high _loRa
 14512  01BC' 6F00'              	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14513  01BE' 0EA8               	movlw	168
 14514  01C0' 2700'              	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14515  01C2' 0E00               	movlw	0
 14516  01C4' 2300'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14517  01C6' 50F3               	movf	prodl,w,c
 14518  01C8' 2700'              	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14519  01CA' 50F4               	movf	prodh,w,c
 14520  01CC' 2300'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14521  01CE' 0E01               	movlw	1
 14522  01D0' 2500'              	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14523  01D2' 6ED9               	movwf	fsr2l,c
 14524  01D4' 0E00               	movlw	0
 14525  01D6' 2100'              	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14526  01D8' 6EDA               	movwf	fsr2h,c
 14527  01DA' 0102               	movlb	2	; () banked
 14528  01DC' AADF               	btfss	indf2,5,c
 14529  01DE' D015               	goto	l1141
 14530                           
 14531                           ; BSR set to: 2
 14532                           ;lorawan_eu.c: 769: {
 14533                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 14534  01E0' 0100               	movlb	0	; () banked
 14535  01E2' 3900'              	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14536  01E4' 0B07               	andlw	7
 14537  01E6' 0102               	movlb	2	; () banked
 14538  01E8' 6F00'              	movwf	(_loRa+239)& (0+255),b
 14539                           
 14540                           ; BSR set to: 2
 14541                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 14542  01EA' C04A' F000'        	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 14543  01EE' C04B' F001'        	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 14544  01F2' C04C' F002'        	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 14545  01F6' C04D' F003'        	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 14546  01FA' 0100               	movlb	0	; () banked
 14547  01FC' 5100'              	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14548  01FE' 0B0F               	andlw	15
 14549  0200' 6F00'              	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 14550  0202' EC00' F000'        	call	_UpdateReceiveWindow2Parameters	;wreg free
 14551                           
 14552                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 14553  0206' 0102               	movlb	2	; () banked
 14554  0208' 8F00'              	bsf	(_loRa+3)& (0+255),7,b
 14555  020A'                    l1141:
 14556                           
 14557                           ; BSR set to: 2
 14558                           ;lorawan_eu.c: 773: }
 14559                           ;lorawan_eu.c: 775: return ptr;
 14560                           
 14561                           ; BSR set to: 2
 14562  020A' C046' F046'        	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 14563  020E' C047' F047'        	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 14564  0212' 0012               	return	
 14565  0214'                    __end_of_ExecuteRxParamSetupReq:
 14566                           	opt stack 0
 14567                           tosu	equ	0xFFF
 14568                           tosh	equ	0xFFE
 14569                           tosl	equ	0xFFD
 14570                           pclath	equ	0xFFA
 14571                           tblptru	equ	0xFF8
 14572                           tblptrh	equ	0xFF7
 14573                           tblptrl	equ	0xFF6
 14574                           tablat	equ	0xFF5
 14575                           prodh	equ	0xFF4
 14576                           prodl	equ	0xFF3
 14577                           intcon	equ	0xFF2
 14578                           intcon2	equ	0xFF1
 14579                           intcon3	equ	0xFF0
 14580                           indf0	equ	0xFEF
 14581                           postinc0	equ	0xFEE
 14582                           fsr0h	equ	0xFEA
 14583                           fsr0l	equ	0xFE9
 14584                           wreg	equ	0xFE8
 14585                           postinc1	equ	0xFE6
 14586                           postdec1	equ	0xFE5
 14587                           plusw1	equ	0xFE3
 14588                           fsr1h	equ	0xFE2
 14589                           fsr1l	equ	0xFE1
 14590                           indf2	equ	0xFDF
 14591                           postinc2	equ	0xFDE
 14592                           postdec2	equ	0xFDD
 14593                           fsr2h	equ	0xFDA
 14594                           fsr2l	equ	0xFD9
 14595                           status	equ	0xFD8
 14596                           
 14597 ;; *************** function _ValidateRxOffset *****************
 14598 ;; Defined at:
 14599 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14600 ;; Parameters:    Size  Location     Type
 14601 ;;  rxOffset        1    wreg     unsigned char 
 14602 ;; Auto vars:     Size  Location     Type
 14603 ;;  rxOffset        1    0[BANK0 ] unsigned char 
 14604 ;;  result          1    1[BANK0 ] enum E7249
 14605 ;; Return value:  Size  Location     Type
 14606 ;;                  1    wreg      enum E7249
 14607 ;; Registers used:
 14608 ;;		wreg, status,2, status,0
 14609 ;; Tracked objects:
 14610 ;;		On entry : 0/0
 14611 ;;		On exit  : 0/0
 14612 ;;		Unchanged: 0/0
 14613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14615 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14617 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14618 ;;Total ram usage:        2 bytes
 14619 ;; Hardware stack levels used:    1
 14620 ;; Hardware stack levels required when called:    7
 14621 ;; This function calls:
 14622 ;;		Nothing
 14623 ;; This function is called by:
 14624 ;;		_ExecuteRxParamSetupReq
 14625 ;; This function uses a non-reentrant model
 14626 ;;
 14627                           
 14628                           	psect	text65
 14629  0000'                    __ptext65:
 14630                           	opt stack 0
 14631  0000'                    _ValidateRxOffset:
 14632                           	opt stack 17
 14633                           
 14634                           ; BSR set to: 2
 14635                           ;incstack = 0
 14636                           ;ValidateRxOffset@rxOffset stored from wreg
 14637  0000' 0100               	movlb	0	; () banked
 14638  0002' 6F00'              	movwf	ValidateRxOffset@rxOffset& (0+255),b
 14639                           
 14640                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 14641  0004' 0E00               	movlw	0
 14642  0006' 0100               	movlb	0	; () banked
 14643  0008' 6F00'              	movwf	ValidateRxOffset@result& (0+255),b
 14644                           
 14645                           ; BSR set to: 0
 14646                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 14647  000A' 0E05               	movlw	5
 14648  000C' 6500'              	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 14649  000E' D002               	goto	l1236
 14650                           
 14651                           ; BSR set to: 0
 14652                           ;lorawan_eu.c: 1081: {
 14653                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 14654  0010' 0E03               	movlw	3
 14655  0012' 6F00'              	movwf	ValidateRxOffset@result& (0+255),b
 14656  0014'                    l1236:
 14657                           
 14658                           ; BSR set to: 0
 14659                           ;lorawan_eu.c: 1083: }
 14660                           ;lorawan_eu.c: 1085: return result;
 14661  0014' 5100'              	movf	ValidateRxOffset@result& (0+255),w,b
 14662  0016' 0012               	return	
 14663  0018'                    __end_of_ValidateRxOffset:
 14664                           	opt stack 0
 14665                           tosu	equ	0xFFF
 14666                           tosh	equ	0xFFE
 14667                           tosl	equ	0xFFD
 14668                           pclath	equ	0xFFA
 14669                           tblptru	equ	0xFF8
 14670                           tblptrh	equ	0xFF7
 14671                           tblptrl	equ	0xFF6
 14672                           tablat	equ	0xFF5
 14673                           prodh	equ	0xFF4
 14674                           prodl	equ	0xFF3
 14675                           intcon	equ	0xFF2
 14676                           intcon2	equ	0xFF1
 14677                           intcon3	equ	0xFF0
 14678                           indf0	equ	0xFEF
 14679                           postinc0	equ	0xFEE
 14680                           fsr0h	equ	0xFEA
 14681                           fsr0l	equ	0xFE9
 14682                           wreg	equ	0xFE8
 14683                           postinc1	equ	0xFE6
 14684                           postdec1	equ	0xFE5
 14685                           plusw1	equ	0xFE3
 14686                           fsr1h	equ	0xFE2
 14687                           fsr1l	equ	0xFE1
 14688                           indf2	equ	0xFDF
 14689                           postinc2	equ	0xFDE
 14690                           postdec2	equ	0xFDD
 14691                           fsr2h	equ	0xFDA
 14692                           fsr2l	equ	0xFD9
 14693                           status	equ	0xFD8
 14694                           
 14695 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 14696 ;; Defined at:
 14697 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14698 ;; Parameters:    Size  Location     Type
 14699 ;;  frequency       4    0[BANK0 ] unsigned long 
 14700 ;;  dataRate        1    4[BANK0 ] unsigned char 
 14701 ;; Auto vars:     Size  Location     Type
 14702 ;;		None
 14703 ;; Return value:  Size  Location     Type
 14704 ;;                  1    wreg      void 
 14705 ;; Registers used:
 14706 ;;		None
 14707 ;; Tracked objects:
 14708 ;;		On entry : 0/0
 14709 ;;		On exit  : 0/0
 14710 ;;		Unchanged: 0/0
 14711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14712 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14715 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14716 ;;Total ram usage:        5 bytes
 14717 ;; Hardware stack levels used:    1
 14718 ;; Hardware stack levels required when called:    7
 14719 ;; This function calls:
 14720 ;;		Nothing
 14721 ;; This function is called by:
 14722 ;;		_ExecuteRxParamSetupReq
 14723 ;;		_LORAWAN_SetReceiveWindow2Parameters
 14724 ;; This function uses a non-reentrant model
 14725 ;;
 14726                           
 14727                           	psect	text66
 14728  0000'                    __ptext66:
 14729                           	opt stack 0
 14730  0000'                    _UpdateReceiveWindow2Parameters:
 14731                           	opt stack 17
 14732                           
 14733                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 14734                           
 14735                           ; BSR set to: 0
 14736                           ;incstack = 0
 14737  0000' C004' F01C'        	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 14738                           
 14739                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 14740  0004' C000' F018'        	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 14741  0008' C001' F019'        	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 14742  000C' C002' F01A'        	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 14743  0010' C003' F01B'        	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 14744  0014' 0012               	return		;funcret
 14745  0016'                    __end_of_UpdateReceiveWindow2Parameters:
 14746                           	opt stack 0
 14747                           tosu	equ	0xFFF
 14748                           tosh	equ	0xFFE
 14749                           tosl	equ	0xFFD
 14750                           pclath	equ	0xFFA
 14751                           tblptru	equ	0xFF8
 14752                           tblptrh	equ	0xFF7
 14753                           tblptrl	equ	0xFF6
 14754                           tablat	equ	0xFF5
 14755                           prodh	equ	0xFF4
 14756                           prodl	equ	0xFF3
 14757                           intcon	equ	0xFF2
 14758                           intcon2	equ	0xFF1
 14759                           intcon3	equ	0xFF0
 14760                           indf0	equ	0xFEF
 14761                           postinc0	equ	0xFEE
 14762                           fsr0h	equ	0xFEA
 14763                           fsr0l	equ	0xFE9
 14764                           wreg	equ	0xFE8
 14765                           postinc1	equ	0xFE6
 14766                           postdec1	equ	0xFE5
 14767                           plusw1	equ	0xFE3
 14768                           fsr1h	equ	0xFE2
 14769                           fsr1l	equ	0xFE1
 14770                           indf2	equ	0xFDF
 14771                           postinc2	equ	0xFDE
 14772                           postdec2	equ	0xFDD
 14773                           fsr2h	equ	0xFDA
 14774                           fsr2l	equ	0xFD9
 14775                           status	equ	0xFD8
 14776                           
 14777 ;; *************** function _ExecuteNewChannel *****************
 14778 ;; Defined at:
 14779 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14780 ;; Parameters:    Size  Location     Type
 14781 ;;  ptr             2   70[BANK0 ] PTR unsigned char 
 14782 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14783 ;; Auto vars:     Size  Location     Type
 14784 ;;  frequency       4   75[BANK0 ] unsigned long 
 14785 ;;  channelIndex    1   79[BANK0 ] unsigned char 
 14786 ;;  drRange         1   74[BANK0 ] struct .
 14787 ;; Return value:  Size  Location     Type
 14788 ;;                  2   70[BANK0 ] PTR unsigned char 
 14789 ;; Registers used:
 14790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14791 ;; Tracked objects:
 14792 ;;		On entry : 0/0
 14793 ;;		On exit  : 0/0
 14794 ;;		Unchanged: 0/0
 14795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14797 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14798 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14799 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14800 ;;Total ram usage:       10 bytes
 14801 ;; Hardware stack levels used:    1
 14802 ;; Hardware stack levels required when called:    9
 14803 ;; This function calls:
 14804 ;;		_LORAWAN_SetChannelIdStatus
 14805 ;;		_UpdateChannelIdStatus
 14806 ;;		_UpdateDataRange
 14807 ;;		_UpdateDutyCycle
 14808 ;;		_UpdateFrequency
 14809 ;;		_ValidateChannelId
 14810 ;;		_ValidateDataRange
 14811 ;;		_ValidateFrequency
 14812 ;;		___lmul
 14813 ;; This function is called by:
 14814 ;;		_MacExecuteCommands
 14815 ;; This function uses a non-reentrant model
 14816 ;;
 14817                           
 14818                           	psect	text67
 14819  0000'                    __ptext67:
 14820                           	opt stack 0
 14821  0000'                    _ExecuteNewChannel:
 14822                           	opt stack 16
 14823                           
 14824                           ;lorawan_eu.c: 679: uint8_t channelIndex;
 14825                           ;lorawan_eu.c: 680: DataRange_t drRange;
 14826                           ;lorawan_eu.c: 681: uint32_t frequency = 0;
 14827                           
 14828                           ;incstack = 0
 14829  0000' 0E00               	movlw	0
 14830  0002' 0100               	movlb	0	; () banked
 14831  0004' 6F00'              	movwf	ExecuteNewChannel@frequency& (0+255),b
 14832  0006' 0E00               	movlw	0
 14833  0008' 6F00'              	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 14834  000A' 0E00               	movlw	0
 14835  000C' 6F00'              	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 14836  000E' 0E00               	movlw	0
 14837  0010' 6F00'              	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 14838                           
 14839                           ; BSR set to: 0
 14840                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 14841  0012' C046' FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14842  0016' C047' FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14843  001A' 50DF               	movf	indf2,w,c
 14844  001C' 6F00'              	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 14845                           
 14846                           ; BSR set to: 0
 14847  001E' 4B00'              	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14848  0020' 2B00'              	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14849                           
 14850                           ; BSR set to: 0
 14851                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14852  0022' C046' FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14853  0026' C047' FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14854  002A' 0EFF               	movlw	255
 14855  002C' 14DE               	andwf	postinc2,w,c
 14856  002E' 6F00'              	movwf	ExecuteNewChannel@frequency& (0+255),b
 14857  0030' 0EFF               	movlw	255
 14858  0032' 14DE               	andwf	postinc2,w,c
 14859  0034' 6F00'              	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 14860  0036' 0EFF               	movlw	255
 14861  0038' 14DE               	andwf	postinc2,w,c
 14862  003A' 6F00'              	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 14863  003C' 0E00               	movlw	0
 14864  003E' 14DE               	andwf	postinc2,w,c
 14865  0040' 6F00'              	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 14866                           
 14867                           ; BSR set to: 0
 14868                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 14869  0042' C04B' F03A'        	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 14870  0046' C04C' F03B'        	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 14871  004A' C04D' F03C'        	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 14872  004E' C04E' F03D'        	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 14873  0052' 0E64               	movlw	100
 14874  0054' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 14875  0056' 0E00               	movlw	0
 14876  0058' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 14877  005A' 0E00               	movlw	0
 14878  005C' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 14879  005E' 0E00               	movlw	0
 14880  0060' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 14881  0062' EC00' F000'        	call	___lmul	;wreg free
 14882  0066' C03A' F04B'        	movff	?___lmul,ExecuteNewChannel@frequency
 14883  006A' C03B' F04C'        	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 14884  006E' C03C' F04D'        	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 14885  0072' C03D' F04E'        	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 14886                           
 14887                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 14888  0076' 0E03               	movlw	3
 14889  0078' 0100               	movlb	0	; () banked
 14890  007A' 2500'              	addwf	ExecuteNewChannel@ptr& (0+255),w,b
 14891  007C' 6F00'              	movwf	ExecuteNewChannel@ptr& (0+255),b
 14892  007E' 0E00               	movlw	0
 14893  0080' 2100'              	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),w,b
 14894  0082' 6F00'              	movwf	(ExecuteNewChannel@ptr+1)& (0+255),b
 14895                           
 14896                           ; BSR set to: 0
 14897                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 14898  0084' C046' FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14899  0088' C047' FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14900  008C' 50DF               	movf	indf2,w,c
 14901  008E' 6F00'              	movwf	ExecuteNewChannel@drRange& (0+255),b
 14902                           
 14903                           ; BSR set to: 0
 14904  0090' 4B00'              	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14905  0092' 2B00'              	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14906                           
 14907                           ; BSR set to: 0
 14908                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 14909  0094' 0E00               	movlw	0
 14910  0096' 6F00'              	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 14911  0098' 5100'              	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14912  009A' EC00' F000'        	call	_ValidateChannelId
 14913  009E' 0900               	iorlw	0
 14914  00A0' A4D8               	btfss	status,2,c
 14915  00A2' D04B               	goto	l1127
 14916                           
 14917                           ;lorawan_eu.c: 692: {
 14918                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 14919  00A4' C04B' F000'        	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 14920  00A8' C04C' F001'        	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 14921  00AC' C04D' F002'        	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 14922  00B0' C04E' F003'        	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 14923  00B4' EC00' F000'        	call	_ValidateFrequency	;wreg free
 14924  00B8' 0900               	iorlw	0
 14925  00BA' B4D8               	btfsc	status,2,c
 14926  00BC' D007               	goto	u16710
 14927  00BE' 0100               	movlb	0	; () banked
 14928  00C0' 5100'              	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14929  00C2' 1100'              	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14930  00C4' 1100'              	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14931  00C6' 1100'              	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14932  00C8' A4D8               	btfss	status,2,c
 14933  00CA' D018               	goto	l1124
 14934  00CC'                    u16710:
 14935                           
 14936                           ;lorawan_eu.c: 694: {
 14937                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 14938                           
 14939                           ; BSR set to: 0
 14940  00CC' 0102               	movlb	2	; () banked
 14941  00CE' 5100'              	movf	(_loRa+167)& (0+255),w,b
 14942  00D0' 0D02               	mullw	2
 14943  00D2' 0E00'              	movlw	low _loRa
 14944  00D4' 0100               	movlb	0	; () banked
 14945  00D6' 6F00'              	movwf	??_ExecuteNewChannel& (0+255),b
 14946  00D8' 0E00'              	movlw	high _loRa
 14947  00DA' 6F00'              	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 14948  00DC' 0EA8               	movlw	168
 14949  00DE' 2700'              	addwf	??_ExecuteNewChannel& (0+255),f,b
 14950  00E0' 0E00               	movlw	0
 14951  00E2' 2300'              	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 14952  00E4' 50F3               	movf	prodl,w,c
 14953  00E6' 2700'              	addwf	??_ExecuteNewChannel& (0+255),f,b
 14954  00E8' 50F4               	movf	prodh,w,c
 14955  00EA' 2300'              	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 14956  00EC' 0E01               	movlw	1
 14957  00EE' 2500'              	addwf	??_ExecuteNewChannel& (0+255),w,b
 14958  00F0' 6ED9               	movwf	fsr2l,c
 14959  00F2' 0E00               	movlw	0
 14960  00F4' 2100'              	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 14961  00F6' 6EDA               	movwf	fsr2h,c
 14962  00F8' 0102               	movlb	2	; () banked
 14963  00FA' 8EDF               	bsf	indf2,7,c
 14964  00FC'                    l1124:
 14965                           
 14966                           ;lorawan_eu.c: 696: }
 14967                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 14968                           
 14969                           ; BSR set to: 2
 14970  00FC' 0100               	movlb	0	; () banked
 14971  00FE' 5100'              	movf	ExecuteNewChannel@drRange& (0+255),w,b
 14972  0100' EC00' F000'        	call	_ValidateDataRange
 14973  0104' 0900               	iorlw	0
 14974  0106' A4D8               	btfss	status,2,c
 14975  0108' D018               	goto	l1127
 14976                           
 14977                           ;lorawan_eu.c: 699: {
 14978                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 14979  010A' 0102               	movlb	2	; () banked
 14980  010C' 5100'              	movf	(_loRa+167)& (0+255),w,b
 14981  010E' 0D02               	mullw	2
 14982  0110' 0E00'              	movlw	low _loRa
 14983  0112' 0100               	movlb	0	; () banked
 14984  0114' 6F00'              	movwf	??_ExecuteNewChannel& (0+255),b
 14985  0116' 0E00'              	movlw	high _loRa
 14986  0118' 6F00'              	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 14987  011A' 0EA8               	movlw	168
 14988  011C' 2700'              	addwf	??_ExecuteNewChannel& (0+255),f,b
 14989  011E' 0E00               	movlw	0
 14990  0120' 2300'              	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 14991  0122' 50F3               	movf	prodl,w,c
 14992  0124' 2700'              	addwf	??_ExecuteNewChannel& (0+255),f,b
 14993  0126' 50F4               	movf	prodh,w,c
 14994  0128' 2300'              	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 14995  012A' 0E01               	movlw	1
 14996  012C' 2500'              	addwf	??_ExecuteNewChannel& (0+255),w,b
 14997  012E' 6ED9               	movwf	fsr2l,c
 14998  0130' 0E00               	movlw	0
 14999  0132' 2100'              	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 15000  0134' 6EDA               	movwf	fsr2h,c
 15001  0136' 0102               	movlb	2	; () banked
 15002  0138' 8CDF               	bsf	indf2,6,c
 15003  013A'                    l1127:
 15004                           
 15005                           ;lorawan_eu.c: 701: }
 15006                           ;lorawan_eu.c: 702: }
 15007                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 15008                           
 15009                           ; BSR set to: 2
 15010  013A' 0102               	movlb	2	; () banked
 15011  013C' 5100'              	movf	(_loRa+167)& (0+255),w,b
 15012  013E' 0D02               	mullw	2
 15013  0140' 0E00'              	movlw	low _loRa
 15014  0142' 0100               	movlb	0	; () banked
 15015  0144' 6F00'              	movwf	??_ExecuteNewChannel& (0+255),b
 15016  0146' 0E00'              	movlw	high _loRa
 15017  0148' 6F00'              	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 15018  014A' 0EA8               	movlw	168
 15019  014C' 2700'              	addwf	??_ExecuteNewChannel& (0+255),f,b
 15020  014E' 0E00               	movlw	0
 15021  0150' 2300'              	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15022  0152' 50F3               	movf	prodl,w,c
 15023  0154' 2700'              	addwf	??_ExecuteNewChannel& (0+255),f,b
 15024  0156' 50F4               	movf	prodh,w,c
 15025  0158' 2300'              	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15026  015A' 0E01               	movlw	1
 15027  015C' 2500'              	addwf	??_ExecuteNewChannel& (0+255),w,b
 15028  015E' 6ED9               	movwf	fsr2l,c
 15029  0160' 0E00               	movlw	0
 15030  0162' 2100'              	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 15031  0164' 6EDA               	movwf	fsr2h,c
 15032  0166' 0102               	movlb	2	; () banked
 15033  0168' AEDF               	btfss	indf2,7,c
 15034  016A' D07D               	goto	l1128
 15035                           
 15036                           ; BSR set to: 2
 15037  016C' 5100'              	movf	(_loRa+167)& (0+255),w,b
 15038  016E' 0D02               	mullw	2
 15039  0170' 0E00'              	movlw	low _loRa
 15040  0172' 0100               	movlb	0	; () banked
 15041  0174' 6F00'              	movwf	??_ExecuteNewChannel& (0+255),b
 15042  0176' 0E00'              	movlw	high _loRa
 15043  0178' 6F00'              	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 15044  017A' 0EA8               	movlw	168
 15045  017C' 2700'              	addwf	??_ExecuteNewChannel& (0+255),f,b
 15046  017E' 0E00               	movlw	0
 15047  0180' 2300'              	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15048  0182' 50F3               	movf	prodl,w,c
 15049  0184' 2700'              	addwf	??_ExecuteNewChannel& (0+255),f,b
 15050  0186' 50F4               	movf	prodh,w,c
 15051  0188' 2300'              	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15052  018A' 0E01               	movlw	1
 15053  018C' 2500'              	addwf	??_ExecuteNewChannel& (0+255),w,b
 15054  018E' 6ED9               	movwf	fsr2l,c
 15055  0190' 0E00               	movlw	0
 15056  0192' 2100'              	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 15057  0194' 6EDA               	movwf	fsr2h,c
 15058  0196' 0102               	movlb	2	; () banked
 15059  0198' ACDF               	btfss	indf2,6,c
 15060  019A' D065               	goto	l1128
 15061                           
 15062                           ; BSR set to: 2
 15063                           ;lorawan_eu.c: 705: {
 15064                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 15065  019C' 0E10               	movlw	16
 15066  019E' 6100'              	cpfslt	(_loRa+218)& (0+255),b
 15067  01A0' D02E               	goto	l1129
 15068                           
 15069                           ; BSR set to: 2
 15070                           ;lorawan_eu.c: 707: {
 15071                           ;lorawan_eu.c: 708: if (frequency != 0)
 15072  01A2' 0100               	movlb	0	; () banked
 15073  01A4' 5100'              	movf	ExecuteNewChannel@frequency& (0+255),w,b
 15074  01A6' 1100'              	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 15075  01A8' 1100'              	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 15076  01AA' 1100'              	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 15077  01AC' B4D8               	btfsc	status,2,c
 15078  01AE' D020               	goto	l1130
 15079                           
 15080                           ; BSR set to: 0
 15081                           ;lorawan_eu.c: 709: {
 15082                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 15083  01B0' C04B' F000'        	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 15084  01B4' C04C' F001'        	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 15085  01B8' C04D' F002'        	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 15086  01BC' C04E' F003'        	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 15087  01C0' 5100'              	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15088  01C2' EC00' F000'        	call	_UpdateFrequency
 15089                           
 15090                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 15091  01C6' C04A' F000'        	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 15092  01CA' 0100               	movlb	0	; () banked
 15093  01CC' 5100'              	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15094  01CE' EC00' F000'        	call	_UpdateDataRange
 15095                           
 15096                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 15097  01D2' 0E01               	movlw	1
 15098  01D4' 0100               	movlb	0	; () banked
 15099  01D6' 6F00'              	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 15100  01D8' 0E2E               	movlw	46
 15101  01DA' 6F00'              	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 15102  01DC' 5100'              	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15103  01DE' EC00' F000'        	call	_UpdateDutyCycle
 15104                           
 15105                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 15106  01E2' 0E01               	movlw	1
 15107  01E4' 0100               	movlb	0	; () banked
 15108  01E6' 6F00'              	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 15109  01E8' 5100'              	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15110  01EA' EC00' F000'        	call	_UpdateChannelIdStatus
 15111                           
 15112                           ;lorawan_eu.c: 714: }
 15113  01EE' D039               	goto	l1134
 15114  01F0'                    l1130:
 15115                           
 15116                           ;lorawan_eu.c: 715: else
 15117                           ;lorawan_eu.c: 716: {
 15118                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 15119  01F0' 0E00               	movlw	0
 15120  01F2' 0100               	movlb	0	; () banked
 15121  01F4' 6F00'              	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 15122  01F6' 5100'              	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15123  01F8' EC00' F000'        	call	_LORAWAN_SetChannelIdStatus
 15124                           
 15125                           ;lorawan_eu.c: 718: }
 15126                           ;lorawan_eu.c: 719: }
 15127  01FC' D032               	goto	l1134
 15128  01FE'                    l1129:
 15129                           
 15130                           ;lorawan_eu.c: 720: else
 15131                           ;lorawan_eu.c: 721: {
 15132                           ;lorawan_eu.c: 722: if (frequency != 0)
 15133  01FE' 0100               	movlb	0	; () banked
 15134  0200' 5100'              	movf	ExecuteNewChannel@frequency& (0+255),w,b
 15135  0202' 1100'              	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 15136  0204' 1100'              	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 15137  0206' 1100'              	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 15138  0208' B4D8               	btfsc	status,2,c
 15139  020A' D024               	goto	l1133
 15140                           
 15141                           ; BSR set to: 0
 15142                           ;lorawan_eu.c: 723: {
 15143                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 15144  020C' C04B' F000'        	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 15145  0210' C04C' F001'        	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 15146  0214' C04D' F002'        	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 15147  0218' C04E' F003'        	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 15148  021C' 5100'              	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15149  021E' 0F10               	addlw	16
 15150  0220' EC00' F000'        	call	_UpdateFrequency
 15151                           
 15152                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 15153  0224' C04A' F000'        	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 15154  0228' 0100               	movlb	0	; () banked
 15155  022A' 5100'              	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15156  022C' 0F10               	addlw	16
 15157  022E' EC00' F000'        	call	_UpdateDataRange
 15158                           
 15159                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 15160  0232' 0E01               	movlw	1
 15161  0234' 0100               	movlb	0	; () banked
 15162  0236' 6F00'              	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 15163  0238' 0E2E               	movlw	46
 15164  023A' 6F00'              	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 15165  023C' 5100'              	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15166  023E' 0F10               	addlw	16
 15167  0240' EC00' F000'        	call	_UpdateDutyCycle
 15168                           
 15169                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 15170  0244' 0E01               	movlw	1
 15171  0246' 0100               	movlb	0	; () banked
 15172  0248' 6F00'              	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 15173  024A' 5100'              	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15174  024C' 0F10               	addlw	16
 15175  024E' EC00' F000'        	call	_UpdateChannelIdStatus
 15176                           
 15177                           ;lorawan_eu.c: 728: }
 15178  0252' D007               	goto	l1134
 15179  0254'                    l1133:
 15180                           
 15181                           ;lorawan_eu.c: 729: else
 15182                           ;lorawan_eu.c: 730: {
 15183                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 15184  0254' 0E00               	movlw	0
 15185  0256' 0100               	movlb	0	; () banked
 15186  0258' 6F00'              	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 15187  025A' 5100'              	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15188  025C' 0F10               	addlw	16
 15189  025E' EC00' F000'        	call	_LORAWAN_SetChannelIdStatus
 15190  0262'                    l1134:
 15191                           
 15192                           ;lorawan_eu.c: 732: }
 15193                           ;lorawan_eu.c: 733: }
 15194                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 15195  0262' 0102               	movlb	2	; () banked
 15196  0264' 8700'              	bsf	(_loRa+3)& (0+255),3,b
 15197  0266'                    l1128:
 15198                           
 15199                           ; BSR set to: 2
 15200                           ;lorawan_eu.c: 736: }
 15201                           ;lorawan_eu.c: 737: return ptr;
 15202                           
 15203                           ; BSR set to: 2
 15204  0266' C046' F046'        	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 15205  026A' C047' F047'        	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 15206  026E' 0012               	return	
 15207  0270'                    __end_of_ExecuteNewChannel:
 15208                           	opt stack 0
 15209                           tosu	equ	0xFFF
 15210                           tosh	equ	0xFFE
 15211                           tosl	equ	0xFFD
 15212                           pclath	equ	0xFFA
 15213                           tblptru	equ	0xFF8
 15214                           tblptrh	equ	0xFF7
 15215                           tblptrl	equ	0xFF6
 15216                           tablat	equ	0xFF5
 15217                           prodh	equ	0xFF4
 15218                           prodl	equ	0xFF3
 15219                           intcon	equ	0xFF2
 15220                           intcon2	equ	0xFF1
 15221                           intcon3	equ	0xFF0
 15222                           indf0	equ	0xFEF
 15223                           postinc0	equ	0xFEE
 15224                           fsr0h	equ	0xFEA
 15225                           fsr0l	equ	0xFE9
 15226                           wreg	equ	0xFE8
 15227                           postinc1	equ	0xFE6
 15228                           postdec1	equ	0xFE5
 15229                           plusw1	equ	0xFE3
 15230                           fsr1h	equ	0xFE2
 15231                           fsr1l	equ	0xFE1
 15232                           indf2	equ	0xFDF
 15233                           postinc2	equ	0xFDE
 15234                           postdec2	equ	0xFDD
 15235                           fsr2h	equ	0xFDA
 15236                           fsr2l	equ	0xFD9
 15237                           status	equ	0xFD8
 15238                           
 15239 ;; *************** function _ValidateFrequency *****************
 15240 ;; Defined at:
 15241 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15242 ;; Parameters:    Size  Location     Type
 15243 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 15244 ;; Auto vars:     Size  Location     Type
 15245 ;;  result          1    4[BANK0 ] enum E7249
 15246 ;; Return value:  Size  Location     Type
 15247 ;;                  1    wreg      enum E7249
 15248 ;; Registers used:
 15249 ;;		wreg, status,2, status,0
 15250 ;; Tracked objects:
 15251 ;;		On entry : 0/0
 15252 ;;		On exit  : 0/0
 15253 ;;		Unchanged: 0/0
 15254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15255 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15256 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15258 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15259 ;;Total ram usage:        5 bytes
 15260 ;; Hardware stack levels used:    1
 15261 ;; Hardware stack levels required when called:    7
 15262 ;; This function calls:
 15263 ;;		Nothing
 15264 ;; This function is called by:
 15265 ;;		_ExecuteNewChannel
 15266 ;;		_ExecuteRxParamSetupReq
 15267 ;;		_UpdateCfList
 15268 ;;		_LORAWAN_SetReceiveWindow2Parameters
 15269 ;;		_LORAWAN_SetFrequency
 15270 ;; This function uses a non-reentrant model
 15271 ;;
 15272                           
 15273                           	psect	text68
 15274  0000'                    __ptext68:
 15275                           	opt stack 0
 15276  0000'                    _ValidateFrequency:
 15277                           	opt stack 18
 15278                           
 15279                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 15280                           
 15281                           ; BSR set to: 2
 15282                           ;incstack = 0
 15283  0000' 0E00               	movlw	0
 15284  0002' 0100               	movlb	0	; () banked
 15285  0004' 6F00'              	movwf	ValidateFrequency@result& (0+255),b
 15286                           
 15287                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 15288  0006' 0102               	movlb	2	; () banked
 15289  0008' 5100'              	movf	(_loRa+164)& (0+255),w,b
 15290  000A' A4D8               	btfss	status,2,c
 15291  000C' D013               	goto	l1240
 15292                           
 15293                           ; BSR set to: 2
 15294                           ;lorawan_eu.c: 1093: {
 15295                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 15296  000E' 0E81               	movlw	129
 15297  0010' 0100               	movlb	0	; () banked
 15298  0012' 5D00'              	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15299  0014' 0E25               	movlw	37
 15300  0016' 5900'              	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15301  0018' 0EDB               	movlw	219
 15302  001A' 5900'              	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15303  001C' 0E33               	movlw	51
 15304  001E' 5900'              	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 15305  0020' B0D8               	btfsc	status,0,c
 15306  0022' D01D               	goto	u15690
 15307                           
 15308                           ; BSR set to: 0
 15309  0024' 0EC0               	movlw	192
 15310  0026' 5D00'              	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15311  0028' 0E55               	movlw	85
 15312  002A' 5900'              	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15313  002C' 0E70               	movlw	112
 15314  002E' 5900'              	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15315  0030' 0E33               	movlw	51
 15316  0032' D012               	goto	L30
 15317  0034'                    l1240:
 15318                           
 15319                           ;lorawan_eu.c: 1099: else
 15320                           ;lorawan_eu.c: 1100: {
 15321                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 15322                           
 15323                           ; BSR set to: 0
 15324  0034' 0E71               	movlw	113
 15325  0036' 0100               	movlb	0	; () banked
 15326  0038' 5D00'              	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15327  003A' 0E5E               	movlw	94
 15328  003C' 5900'              	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15329  003E' 0EEA               	movlw	234
 15330  0040' 5900'              	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15331  0042' 0E19               	movlw	25
 15332  0044' 5900'              	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 15333  0046' B0D8               	btfsc	status,0,c
 15334  0048' D00A               	goto	u15690
 15335                           
 15336                           ; BSR set to: 0
 15337  004A' 0E90               	movlw	144
 15338  004C' 5D00'              	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15339  004E' 0ED1               	movlw	209
 15340  0050' 5900'              	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15341  0052' 0ECF               	movlw	207
 15342  0054' 5900'              	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15343  0056' 0E19               	movlw	25
 15344  0058'                    L30:
 15345  0058' 5900'              	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 15346  005A' B0D8               	btfsc	status,0,c
 15347  005C' D002               	goto	l1245
 15348  005E'                    u15690:
 15349                           
 15350                           ; BSR set to: 0
 15351                           ;lorawan_eu.c: 1102: {
 15352                           ;lorawan_eu.c: 1103: result = INVALID_PARAMETER ;
 15353                           
 15354                           ; BSR set to: 0
 15355  005E' 0E03               	movlw	3
 15356  0060' 6F00'              	movwf	ValidateFrequency@result& (0+255),b
 15357  0062'                    l1245:
 15358                           
 15359                           ; BSR set to: 0
 15360                           ;lorawan_eu.c: 1104: }
 15361                           ;lorawan_eu.c: 1105: }
 15362                           ;lorawan_eu.c: 1107: return result;
 15363                           
 15364                           ; BSR set to: 0
 15365  0062' 5100'              	movf	ValidateFrequency@result& (0+255),w,b
 15366  0064' 0012               	return	
 15367  0066'                    __end_of_ValidateFrequency:
 15368                           	opt stack 0
 15369                           tosu	equ	0xFFF
 15370                           tosh	equ	0xFFE
 15371                           tosl	equ	0xFFD
 15372                           pclath	equ	0xFFA
 15373                           tblptru	equ	0xFF8
 15374                           tblptrh	equ	0xFF7
 15375                           tblptrl	equ	0xFF6
 15376                           tablat	equ	0xFF5
 15377                           prodh	equ	0xFF4
 15378                           prodl	equ	0xFF3
 15379                           intcon	equ	0xFF2
 15380                           intcon2	equ	0xFF1
 15381                           intcon3	equ	0xFF0
 15382                           indf0	equ	0xFEF
 15383                           postinc0	equ	0xFEE
 15384                           fsr0h	equ	0xFEA
 15385                           fsr0l	equ	0xFE9
 15386                           wreg	equ	0xFE8
 15387                           postinc1	equ	0xFE6
 15388                           postdec1	equ	0xFE5
 15389                           plusw1	equ	0xFE3
 15390                           fsr1h	equ	0xFE2
 15391                           fsr1l	equ	0xFE1
 15392                           indf2	equ	0xFDF
 15393                           postinc2	equ	0xFDE
 15394                           postdec2	equ	0xFDD
 15395                           fsr2h	equ	0xFDA
 15396                           fsr2l	equ	0xFD9
 15397                           status	equ	0xFD8
 15398                           
 15399 ;; *************** function _ValidateDataRange *****************
 15400 ;; Defined at:
 15401 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15402 ;; Parameters:    Size  Location     Type
 15403 ;;  dataRangeNew    1    wreg     unsigned char 
 15404 ;; Auto vars:     Size  Location     Type
 15405 ;;  dataRangeNew    1    3[BANK0 ] unsigned char 
 15406 ;;  dataRateMin     1    5[BANK0 ] unsigned char 
 15407 ;;  dataRateMax     1    4[BANK0 ] unsigned char 
 15408 ;;  result          1    2[BANK0 ] enum E7249
 15409 ;; Return value:  Size  Location     Type
 15410 ;;                  1    wreg      enum E7249
 15411 ;; Registers used:
 15412 ;;		wreg, status,2, status,0, cstack
 15413 ;; Tracked objects:
 15414 ;;		On entry : 0/0
 15415 ;;		On exit  : 0/0
 15416 ;;		Unchanged: 0/0
 15417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15419 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15421 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15422 ;;Total ram usage:        4 bytes
 15423 ;; Hardware stack levels used:    1
 15424 ;; Hardware stack levels required when called:    8
 15425 ;; This function calls:
 15426 ;;		_ValidateDataRate
 15427 ;; This function is called by:
 15428 ;;		_ExecuteNewChannel
 15429 ;;		_LORAWAN_SetDataRange
 15430 ;; This function uses a non-reentrant model
 15431 ;;
 15432                           
 15433                           	psect	text69
 15434  0000'                    __ptext69:
 15435                           	opt stack 0
 15436  0000'                    _ValidateDataRange:
 15437                           	opt stack 16
 15438                           
 15439                           ; BSR set to: 0
 15440                           ;incstack = 0
 15441                           ;ValidateDataRange@dataRangeNew stored from wreg
 15442  0000' 0100               	movlb	0	; () banked
 15443  0002' 6F00'              	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 15444                           
 15445                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 15446  0004' 0E00               	movlw	0
 15447  0006' 0100               	movlb	0	; () banked
 15448  0008' 6F00'              	movwf	ValidateDataRange@result& (0+255),b
 15449                           
 15450                           ; BSR set to: 0
 15451                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 15452                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 15453  000A' 5100'              	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15454  000C' 0B0F               	andlw	15
 15455  000E' 6F00'              	movwf	ValidateDataRange@dataRateMin& (0+255),b
 15456                           
 15457                           ; BSR set to: 0
 15458                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 15459  0010' 3900'              	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15460  0012' 0B0F               	andlw	15
 15461  0014' 0B0F               	andlw	15
 15462  0016' 6F00'              	movwf	ValidateDataRange@dataRateMax& (0+255),b
 15463                           
 15464                           ; BSR set to: 0
 15465                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 15466  0018' 5100'              	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 15467  001A' EC00' F000'        	call	_ValidateDataRate
 15468  001E' 0900               	iorlw	0
 15469  0020' A4D8               	btfss	status,2,c
 15470  0022' D00C               	goto	u15720
 15471  0024' 0100               	movlb	0	; () banked
 15472  0026' 5100'              	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15473  0028' EC00' F000'        	call	_ValidateDataRate
 15474  002C' 0900               	iorlw	0
 15475  002E' A4D8               	btfss	status,2,c
 15476  0030' D005               	goto	u15720
 15477  0032' 0100               	movlb	0	; () banked
 15478  0034' 5100'              	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15479  0036' 5D00'              	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 15480  0038' B0D8               	btfsc	status,0,c
 15481  003A' D003               	goto	l1251
 15482  003C'                    u15720:
 15483                           
 15484                           ;lorawan_eu.c: 1119: {
 15485                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 15486                           
 15487                           ; BSR set to: 0
 15488  003C' 0E03               	movlw	3
 15489  003E' 0100               	movlb	0	; () banked
 15490  0040' 6F00'              	movwf	ValidateDataRange@result& (0+255),b
 15491  0042'                    l1251:
 15492                           
 15493                           ; BSR set to: 0
 15494                           ;lorawan_eu.c: 1121: }
 15495                           ;lorawan_eu.c: 1122: return result;
 15496  0042' 5100'              	movf	ValidateDataRange@result& (0+255),w,b
 15497  0044' 0012               	return	
 15498  0046'                    __end_of_ValidateDataRange:
 15499                           	opt stack 0
 15500                           tosu	equ	0xFFF
 15501                           tosh	equ	0xFFE
 15502                           tosl	equ	0xFFD
 15503                           pclath	equ	0xFFA
 15504                           tblptru	equ	0xFF8
 15505                           tblptrh	equ	0xFF7
 15506                           tblptrl	equ	0xFF6
 15507                           tablat	equ	0xFF5
 15508                           prodh	equ	0xFF4
 15509                           prodl	equ	0xFF3
 15510                           intcon	equ	0xFF2
 15511                           intcon2	equ	0xFF1
 15512                           intcon3	equ	0xFF0
 15513                           indf0	equ	0xFEF
 15514                           postinc0	equ	0xFEE
 15515                           fsr0h	equ	0xFEA
 15516                           fsr0l	equ	0xFE9
 15517                           wreg	equ	0xFE8
 15518                           postinc1	equ	0xFE6
 15519                           postdec1	equ	0xFE5
 15520                           plusw1	equ	0xFE3
 15521                           fsr1h	equ	0xFE2
 15522                           fsr1l	equ	0xFE1
 15523                           indf2	equ	0xFDF
 15524                           postinc2	equ	0xFDE
 15525                           postdec2	equ	0xFDD
 15526                           fsr2h	equ	0xFDA
 15527                           fsr2l	equ	0xFD9
 15528                           status	equ	0xFD8
 15529                           
 15530 ;; *************** function _UpdateFrequency *****************
 15531 ;; Defined at:
 15532 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15533 ;; Parameters:    Size  Location     Type
 15534 ;;  channelId       1    wreg     unsigned char 
 15535 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 15536 ;; Auto vars:     Size  Location     Type
 15537 ;;  channelId       1    4[BANK0 ] unsigned char 
 15538 ;; Return value:  Size  Location     Type
 15539 ;;                  1    wreg      void 
 15540 ;; Registers used:
 15541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15542 ;; Tracked objects:
 15543 ;;		On entry : 0/0
 15544 ;;		On exit  : 0/0
 15545 ;;		Unchanged: 0/0
 15546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15547 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15548 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15550 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15551 ;;Total ram usage:        5 bytes
 15552 ;; Hardware stack levels used:    1
 15553 ;; Hardware stack levels required when called:    7
 15554 ;; This function calls:
 15555 ;;		Nothing
 15556 ;; This function is called by:
 15557 ;;		_ExecuteNewChannel
 15558 ;;		_LORAWAN_SetFrequency
 15559 ;; This function uses a non-reentrant model
 15560 ;;
 15561                           
 15562                           	psect	text70
 15563  0000'                    __ptext70:
 15564                           	opt stack 0
 15565  0000'                    _UpdateFrequency:
 15566                           	opt stack 17
 15567                           
 15568                           ; BSR set to: 0
 15569                           ;incstack = 0
 15570                           ;UpdateFrequency@channelId stored from wreg
 15571  0000' 0100               	movlb	0	; () banked
 15572  0002' 6F00'              	movwf	UpdateFrequency@channelId& (0+255),b
 15573                           
 15574                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 15575  0004' 0100               	movlb	0	; () banked
 15576  0006' 5100'              	movf	UpdateFrequency@channelId& (0+255),w,b
 15577  0008' 0D0E               	mullw	14
 15578  000A' 0E00'              	movlw	low _Channels
 15579  000C' 24F3               	addwf	prodl,w,c
 15580  000E' 6ED9               	movwf	fsr2l,c
 15581  0010' 0E00'              	movlw	high _Channels
 15582  0012' 20F4               	addwfc	prodh,w,c
 15583  0014' 6EDA               	movwf	fsr2h,c
 15584  0016' C000' FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 15585  001A' C001' FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 15586  001E' C002' FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 15587  0022' C003' FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 15588                           
 15589                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 15590  0026' 5100'              	movf	UpdateFrequency@channelId& (0+255),w,b
 15591  0028' 0D0E               	mullw	14
 15592  002A' 0E0D               	movlw	13
 15593  002C' 26F3               	addwf	prodl,f,c
 15594  002E' 0E00               	movlw	0
 15595  0030' 22F4               	addwfc	prodh,f,c
 15596  0032' 0E00'              	movlw	low _Channels
 15597  0034' 24F3               	addwf	prodl,w,c
 15598  0036' 6ED9               	movwf	fsr2l,c
 15599  0038' 0E00'              	movlw	high _Channels
 15600  003A' 20F4               	addwfc	prodh,w,c
 15601  003C' 6EDA               	movwf	fsr2h,c
 15602  003E' 0E00               	movlw	0
 15603  0040' 80DB               	bsf	plusw2,0,c
 15604                           
 15605                           ; BSR set to: 0
 15606  0042' 0012               	return		;funcret
 15607  0044'                    __end_of_UpdateFrequency:
 15608                           	opt stack 0
 15609                           tosu	equ	0xFFF
 15610                           tosh	equ	0xFFE
 15611                           tosl	equ	0xFFD
 15612                           pclath	equ	0xFFA
 15613                           tblptru	equ	0xFF8
 15614                           tblptrh	equ	0xFF7
 15615                           tblptrl	equ	0xFF6
 15616                           tablat	equ	0xFF5
 15617                           prodh	equ	0xFF4
 15618                           prodl	equ	0xFF3
 15619                           intcon	equ	0xFF2
 15620                           intcon2	equ	0xFF1
 15621                           intcon3	equ	0xFF0
 15622                           indf0	equ	0xFEF
 15623                           postinc0	equ	0xFEE
 15624                           fsr0h	equ	0xFEA
 15625                           fsr0l	equ	0xFE9
 15626                           wreg	equ	0xFE8
 15627                           postinc1	equ	0xFE6
 15628                           postdec1	equ	0xFE5
 15629                           plusw1	equ	0xFE3
 15630                           fsr1h	equ	0xFE2
 15631                           fsr1l	equ	0xFE1
 15632                           indf2	equ	0xFDF
 15633                           postinc2	equ	0xFDE
 15634                           postdec2	equ	0xFDD
 15635                           plusw2	equ	0xFDB
 15636                           fsr2h	equ	0xFDA
 15637                           fsr2l	equ	0xFD9
 15638                           status	equ	0xFD8
 15639                           
 15640 ;; *************** function _UpdateDutyCycle *****************
 15641 ;; Defined at:
 15642 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15643 ;; Parameters:    Size  Location     Type
 15644 ;;  channelId       1    wreg     unsigned char 
 15645 ;;  dutyCycleNew    2    0[BANK0 ] unsigned int 
 15646 ;; Auto vars:     Size  Location     Type
 15647 ;;  channelId       1    2[BANK0 ] unsigned char 
 15648 ;; Return value:  Size  Location     Type
 15649 ;;                  1    wreg      void 
 15650 ;; Registers used:
 15651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15652 ;; Tracked objects:
 15653 ;;		On entry : 0/0
 15654 ;;		On exit  : 0/0
 15655 ;;		Unchanged: 0/0
 15656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15657 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15658 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15660 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15661 ;;Total ram usage:        3 bytes
 15662 ;; Hardware stack levels used:    1
 15663 ;; Hardware stack levels required when called:    7
 15664 ;; This function calls:
 15665 ;;		Nothing
 15666 ;; This function is called by:
 15667 ;;		_ExecuteNewChannel
 15668 ;;		_LORAWAN_SetDutyCycle
 15669 ;; This function uses a non-reentrant model
 15670 ;;
 15671                           
 15672                           	psect	text71
 15673  0000'                    __ptext71:
 15674                           	opt stack 0
 15675  0000'                    _UpdateDutyCycle:
 15676                           	opt stack 17
 15677                           
 15678                           ; BSR set to: 0
 15679                           ;incstack = 0
 15680                           ;UpdateDutyCycle@channelId stored from wreg
 15681  0000' 0100               	movlb	0	; () banked
 15682  0002' 6F00'              	movwf	UpdateDutyCycle@channelId& (0+255),b
 15683                           
 15684                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 15685  0004' 0100               	movlb	0	; () banked
 15686  0006' 5100'              	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15687  0008' 0D0E               	mullw	14
 15688  000A' 0E06               	movlw	6
 15689  000C' 26F3               	addwf	prodl,f,c
 15690  000E' 0E00               	movlw	0
 15691  0010' 22F4               	addwfc	prodh,f,c
 15692  0012' 0E00'              	movlw	low _Channels
 15693  0014' 24F3               	addwf	prodl,w,c
 15694  0016' 6ED9               	movwf	fsr2l,c
 15695  0018' 0E00'              	movlw	high _Channels
 15696  001A' 20F4               	addwfc	prodh,w,c
 15697  001C' 6EDA               	movwf	fsr2h,c
 15698  001E' C000' FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 15699  0022' C001' FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 15700                           
 15701                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 15702  0026' 5100'              	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15703  0028' 0D0E               	mullw	14
 15704  002A' 0E0D               	movlw	13
 15705  002C' 26F3               	addwf	prodl,f,c
 15706  002E' 0E00               	movlw	0
 15707  0030' 22F4               	addwfc	prodh,f,c
 15708  0032' 0E00'              	movlw	low _Channels
 15709  0034' 24F3               	addwf	prodl,w,c
 15710  0036' 6ED9               	movwf	fsr2l,c
 15711  0038' 0E00'              	movlw	high _Channels
 15712  003A' 20F4               	addwfc	prodh,w,c
 15713  003C' 6EDA               	movwf	fsr2h,c
 15714  003E' 0E00               	movlw	0
 15715  0040' 84DB               	bsf	plusw2,2,c
 15716                           
 15717                           ; BSR set to: 0
 15718  0042' 0012               	return		;funcret
 15719  0044'                    __end_of_UpdateDutyCycle:
 15720                           	opt stack 0
 15721                           tosu	equ	0xFFF
 15722                           tosh	equ	0xFFE
 15723                           tosl	equ	0xFFD
 15724                           pclath	equ	0xFFA
 15725                           tblptru	equ	0xFF8
 15726                           tblptrh	equ	0xFF7
 15727                           tblptrl	equ	0xFF6
 15728                           tablat	equ	0xFF5
 15729                           prodh	equ	0xFF4
 15730                           prodl	equ	0xFF3
 15731                           intcon	equ	0xFF2
 15732                           intcon2	equ	0xFF1
 15733                           intcon3	equ	0xFF0
 15734                           indf0	equ	0xFEF
 15735                           postinc0	equ	0xFEE
 15736                           fsr0h	equ	0xFEA
 15737                           fsr0l	equ	0xFE9
 15738                           wreg	equ	0xFE8
 15739                           postinc1	equ	0xFE6
 15740                           postdec1	equ	0xFE5
 15741                           plusw1	equ	0xFE3
 15742                           fsr1h	equ	0xFE2
 15743                           fsr1l	equ	0xFE1
 15744                           indf2	equ	0xFDF
 15745                           postinc2	equ	0xFDE
 15746                           postdec2	equ	0xFDD
 15747                           plusw2	equ	0xFDB
 15748                           fsr2h	equ	0xFDA
 15749                           fsr2l	equ	0xFD9
 15750                           status	equ	0xFD8
 15751                           
 15752 ;; *************** function _UpdateDataRange *****************
 15753 ;; Defined at:
 15754 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15755 ;; Parameters:    Size  Location     Type
 15756 ;;  channelId       1    wreg     unsigned char 
 15757 ;;  dataRangeNew    1    0[BANK0 ] unsigned char 
 15758 ;; Auto vars:     Size  Location     Type
 15759 ;;  channelId       1    2[BANK0 ] unsigned char 
 15760 ;;  i               1    3[BANK0 ] unsigned char 
 15761 ;; Return value:  Size  Location     Type
 15762 ;;                  1    wreg      void 
 15763 ;; Registers used:
 15764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15765 ;; Tracked objects:
 15766 ;;		On entry : 0/0
 15767 ;;		On exit  : 0/0
 15768 ;;		Unchanged: 0/0
 15769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15770 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15771 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15772 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15773 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15774 ;;Total ram usage:        4 bytes
 15775 ;; Hardware stack levels used:    1
 15776 ;; Hardware stack levels required when called:    7
 15777 ;; This function calls:
 15778 ;;		Nothing
 15779 ;; This function is called by:
 15780 ;;		_ExecuteNewChannel
 15781 ;;		_LORAWAN_SetDataRange
 15782 ;; This function uses a non-reentrant model
 15783 ;;
 15784                           
 15785                           	psect	text72
 15786  0000'                    __ptext72:
 15787                           	opt stack 0
 15788  0000'                    _UpdateDataRange:
 15789                           	opt stack 17
 15790                           
 15791                           ; BSR set to: 0
 15792                           ;incstack = 0
 15793                           ;UpdateDataRange@channelId stored from wreg
 15794  0000' 0100               	movlb	0	; () banked
 15795  0002' 6F00'              	movwf	UpdateDataRange@channelId& (0+255),b
 15796                           
 15797                           ;lorawan_eu.c: 1011: uint8_t i;
 15798                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 15799  0004' 0E07               	movlw	7
 15800  0006' 0102               	movlb	2	; () banked
 15801  0008' 6F00'              	movwf	(_loRa+235)& (0+255),b
 15802                           
 15803                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 15804  000A' 0E00               	movlw	0
 15805  000C' 6F00'              	movwf	(_loRa+236)& (0+255),b
 15806                           
 15807                           ; BSR set to: 2
 15808                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 15809  000E' 0100               	movlb	0	; () banked
 15810  0010' 5100'              	movf	UpdateDataRange@channelId& (0+255),w,b
 15811  0012' 0D0E               	mullw	14
 15812  0014' 0E05               	movlw	5
 15813  0016' 26F3               	addwf	prodl,f,c
 15814  0018' 0E00               	movlw	0
 15815  001A' 22F4               	addwfc	prodh,f,c
 15816  001C' 0E00'              	movlw	low _Channels
 15817  001E' 24F3               	addwf	prodl,w,c
 15818  0020' 6ED9               	movwf	fsr2l,c
 15819  0022' 0E00'              	movlw	high _Channels
 15820  0024' 20F4               	addwfc	prodh,w,c
 15821  0026' 6EDA               	movwf	fsr2h,c
 15822  0028' C000' FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 15823                           
 15824                           ; BSR set to: 0
 15825                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 15826  002C' 5100'              	movf	UpdateDataRange@channelId& (0+255),w,b
 15827  002E' 0D0E               	mullw	14
 15828  0030' 0E0D               	movlw	13
 15829  0032' 26F3               	addwf	prodl,f,c
 15830  0034' 0E00               	movlw	0
 15831  0036' 22F4               	addwfc	prodh,f,c
 15832  0038' 0E00'              	movlw	low _Channels
 15833  003A' 24F3               	addwf	prodl,w,c
 15834  003C' 6ED9               	movwf	fsr2l,c
 15835  003E' 0E00'              	movlw	high _Channels
 15836  0040' 20F4               	addwfc	prodh,w,c
 15837  0042' 6EDA               	movwf	fsr2h,c
 15838  0044' 0E00               	movlw	0
 15839  0046' 82DB               	bsf	plusw2,1,c
 15840                           
 15841                           ; BSR set to: 0
 15842                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 15843  0048' 0E00               	movlw	0
 15844  004A' 6F00'              	movwf	UpdateDataRange@i& (0+255),b
 15845  004C' D06D               	goto	l1215
 15846  004E'                    
 15847                           ; BSR set to: 0
 15848                           ;lorawan_eu.c: 1020: {
 15849                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 15850                           
 15851                           ; BSR set to: 0
 15852  004E' 5100'              	movf	UpdateDataRange@i& (0+255),w,b
 15853  0050' 0D0E               	mullw	14
 15854  0052' 0E05               	movlw	5
 15855  0054' 26F3               	addwf	prodl,f,c
 15856  0056' 0E00               	movlw	0
 15857  0058' 22F4               	addwfc	prodh,f,c
 15858  005A' 0E00'              	movlw	low _Channels
 15859  005C' 24F3               	addwf	prodl,w,c
 15860  005E' 6ED9               	movwf	fsr2l,c
 15861  0060' 0E00'              	movlw	high _Channels
 15862  0062' 20F4               	addwfc	prodh,w,c
 15863  0064' 6EDA               	movwf	fsr2h,c
 15864  0066' 0104               	movlb	4	; () banked
 15865  0068' 50DF               	movf	223,w,c
 15866  006A' 0B0F               	andlw	15
 15867  006C' 0100               	movlb	0	; () banked
 15868  006E' 6F00'              	movwf	??_UpdateDataRange& (0+255),b
 15869  0070' 0102               	movlb	2	; () banked
 15870  0072' 5100'              	movf	(_loRa+235)& (0+255),w,b
 15871  0074' 0100               	movlb	0	; () banked
 15872  0076' 5D00'              	subwf	??_UpdateDataRange& (0+255),w,b
 15873  0078' B0D8               	btfsc	status,0,c
 15874  007A' D020               	goto	l1217
 15875                           
 15876                           ; BSR set to: 0
 15877  007C' 5100'              	movf	UpdateDataRange@i& (0+255),w,b
 15878  007E' 0D0E               	mullw	14
 15879  0080' 0E04               	movlw	4
 15880  0082' 26F3               	addwf	prodl,f,c
 15881  0084' 0E00               	movlw	0
 15882  0086' 22F4               	addwfc	prodh,f,c
 15883  0088' 0E00'              	movlw	low _Channels
 15884  008A' 24F3               	addwf	prodl,w,c
 15885  008C' 6ED9               	movwf	fsr2l,c
 15886  008E' 0E00'              	movlw	high _Channels
 15887  0090' 20F4               	addwfc	prodh,w,c
 15888  0092' 6EDA               	movwf	fsr2h,c
 15889  0094' 04DE               	decf	postinc2,w,c
 15890  0096' A4D8               	btfss	status,2,c
 15891  0098' D011               	goto	l1217
 15892                           
 15893                           ; BSR set to: 0
 15894                           ;lorawan_eu.c: 1022: {
 15895                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 15896  009A' 5100'              	movf	UpdateDataRange@i& (0+255),w,b
 15897  009C' 0D0E               	mullw	14
 15898  009E' 0E05               	movlw	5
 15899  00A0' 26F3               	addwf	prodl,f,c
 15900  00A2' 0E00               	movlw	0
 15901  00A4' 22F4               	addwfc	prodh,f,c
 15902  00A6' 0E00'              	movlw	low _Channels
 15903  00A8' 24F3               	addwf	prodl,w,c
 15904  00AA' 6ED9               	movwf	fsr2l,c
 15905  00AC' 0E00'              	movlw	high _Channels
 15906  00AE' 20F4               	addwfc	prodh,w,c
 15907  00B0' 6EDA               	movwf	fsr2h,c
 15908  00B2' 0104               	movlb	4	; () banked
 15909  00B4' 50DF               	movf	223,w,c
 15910  00B6' 0B0F               	andlw	15
 15911  00B8' 0102               	movlb	2	; () banked
 15912  00BA' 6F00'              	movwf	(_loRa+235)& (0+255),b
 15913  00BC'                    l1217:
 15914                           
 15915                           ;lorawan_eu.c: 1024: }
 15916                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 15917  00BC' 0100               	movlb	0	; () banked
 15918  00BE' 5100'              	movf	UpdateDataRange@i& (0+255),w,b
 15919  00C0' 0D0E               	mullw	14
 15920  00C2' 0E05               	movlw	5
 15921  00C4' 26F3               	addwf	prodl,f,c
 15922  00C6' 0E00               	movlw	0
 15923  00C8' 22F4               	addwfc	prodh,f,c
 15924  00CA' 0E00'              	movlw	low _Channels
 15925  00CC' 24F3               	addwf	prodl,w,c
 15926  00CE' 6ED9               	movwf	fsr2l,c
 15927  00D0' 0E00'              	movlw	high _Channels
 15928  00D2' 20F4               	addwfc	prodh,w,c
 15929  00D4' 6EDA               	movwf	fsr2h,c
 15930  00D6' 0104               	movlb	4	; () banked
 15931  00D8' 38DF               	swapf	223,w,c
 15932  00DA' 0B0F               	andlw	15
 15933  00DC' 0102               	movlb	2	; () banked
 15934  00DE' 6100'              	cpfslt	(_loRa+236)& (0+255),b
 15935  00E0' D021               	goto	l1218
 15936                           
 15937                           ; BSR set to: 2
 15938  00E2' 0100               	movlb	0	; () banked
 15939  00E4' 5100'              	movf	UpdateDataRange@i& (0+255),w,b
 15940  00E6' 0D0E               	mullw	14
 15941  00E8' 0E04               	movlw	4
 15942  00EA' 26F3               	addwf	prodl,f,c
 15943  00EC' 0E00               	movlw	0
 15944  00EE' 22F4               	addwfc	prodh,f,c
 15945  00F0' 0E00'              	movlw	low _Channels
 15946  00F2' 24F3               	addwf	prodl,w,c
 15947  00F4' 6ED9               	movwf	fsr2l,c
 15948  00F6' 0E00'              	movlw	high _Channels
 15949  00F8' 20F4               	addwfc	prodh,w,c
 15950  00FA' 6EDA               	movwf	fsr2h,c
 15951  00FC' 04DE               	decf	postinc2,w,c
 15952  00FE' A4D8               	btfss	status,2,c
 15953  0100' D011               	goto	l1218
 15954                           
 15955                           ; BSR set to: 0
 15956                           ;lorawan_eu.c: 1026: {
 15957                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 15958  0102' 5100'              	movf	UpdateDataRange@i& (0+255),w,b
 15959  0104' 0D0E               	mullw	14
 15960  0106' 0E05               	movlw	5
 15961  0108' 26F3               	addwf	prodl,f,c
 15962  010A' 0E00               	movlw	0
 15963  010C' 22F4               	addwfc	prodh,f,c
 15964  010E' 0E00'              	movlw	low _Channels
 15965  0110' 24F3               	addwf	prodl,w,c
 15966  0112' 6ED9               	movwf	fsr2l,c
 15967  0114' 0E00'              	movlw	high _Channels
 15968  0116' 20F4               	addwfc	prodh,w,c
 15969  0118' 6EDA               	movwf	fsr2h,c
 15970  011A' 0104               	movlb	4	; () banked
 15971  011C' 38DF               	swapf	223,w,c
 15972  011E' 0B0F               	andlw	15
 15973  0120' 0102               	movlb	2	; () banked
 15974  0122' 6F00'              	movwf	(_loRa+236)& (0+255),b
 15975  0124'                    l1218:
 15976                           
 15977                           ; BSR set to: 2
 15978  0124' 0100               	movlb	0	; () banked
 15979  0126' 2B00'              	incf	UpdateDataRange@i& (0+255),f,b
 15980  0128'                    l1215:
 15981                           
 15982                           ; BSR set to: 0
 15983                           
 15984                           ; BSR set to: 0
 15985  0128' 0102               	movlb	2	; () banked
 15986  012A' 5100'              	movf	(_loRa+237)& (0+255),w,b
 15987  012C' 0100               	movlb	0	; () banked
 15988  012E' 5D00'              	subwf	UpdateDataRange@i& (0+255),w,b
 15989  0130' A0D8               	btfss	status,0,c
 15990  0132' D78D               	goto	l1216
 15991                           
 15992                           ; BSR set to: 0
 15993                           ;lorawan_eu.c: 1028: }
 15994                           ;lorawan_eu.c: 1029: }
 15995                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 15996                           
 15997                           ; BSR set to: 0
 15998  0134' 0102               	movlb	2	; () banked
 15999  0136' 5100'              	movf	(_loRa+223)& (0+255),w,b
 16000  0138' 5D00'              	subwf	(_loRa+236)& (0+255),w,b
 16001  013A' A0D8               	btfss	status,0,c
 16002                           
 16003                           ; BSR set to: 2
 16004                           ;lorawan_eu.c: 1032: {
 16005                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 16006  013C' C0EC' F0DF'        	movff	_loRa+236,_loRa+223
 16007                           
 16008                           ; BSR set to: 2
 16009                           ;lorawan_eu.c: 1034: }
 16010                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 16011                           
 16012                           ; BSR set to: 2
 16013  0140' 5100'              	movf	(_loRa+235)& (0+255),w,b
 16014  0142' 5D00'              	subwf	(_loRa+223)& (0+255),w,b
 16015  0144' B0D8               	btfsc	status,0,c
 16016  0146' 0012               	return	
 16017                           
 16018                           ; BSR set to: 2
 16019                           ;lorawan_eu.c: 1037: {
 16020                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 16021  0148' C0EB' F0DF'        	movff	_loRa+235,_loRa+223
 16022  014C' 0012               	return	
 16023  014E'                    __end_of_UpdateDataRange:
 16024                           	opt stack 0
 16025                           tosu	equ	0xFFF
 16026                           tosh	equ	0xFFE
 16027                           tosl	equ	0xFFD
 16028                           pclath	equ	0xFFA
 16029                           tblptru	equ	0xFF8
 16030                           tblptrh	equ	0xFF7
 16031                           tblptrl	equ	0xFF6
 16032                           tablat	equ	0xFF5
 16033                           prodh	equ	0xFF4
 16034                           prodl	equ	0xFF3
 16035                           intcon	equ	0xFF2
 16036                           intcon2	equ	0xFF1
 16037                           intcon3	equ	0xFF0
 16038                           indf0	equ	0xFEF
 16039                           postinc0	equ	0xFEE
 16040                           fsr0h	equ	0xFEA
 16041                           fsr0l	equ	0xFE9
 16042                           wreg	equ	0xFE8
 16043                           postinc1	equ	0xFE6
 16044                           postdec1	equ	0xFE5
 16045                           plusw1	equ	0xFE3
 16046                           fsr1h	equ	0xFE2
 16047                           fsr1l	equ	0xFE1
 16048                           indf2	equ	0xFDF
 16049                           postinc2	equ	0xFDE
 16050                           postdec2	equ	0xFDD
 16051                           plusw2	equ	0xFDB
 16052                           fsr2h	equ	0xFDA
 16053                           fsr2l	equ	0xFD9
 16054                           status	equ	0xFD8
 16055                           
 16056 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 16057 ;; Defined at:
 16058 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16059 ;; Parameters:    Size  Location     Type
 16060 ;;  channelId       1    wreg     unsigned char 
 16061 ;;  statusNew       1    4[BANK0 ] unsigned char 
 16062 ;; Auto vars:     Size  Location     Type
 16063 ;;  channelId       1    6[BANK0 ] unsigned char 
 16064 ;;  result          1    5[BANK0 ] enum E7249
 16065 ;; Return value:  Size  Location     Type
 16066 ;;                  1    wreg      enum E7249
 16067 ;; Registers used:
 16068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16069 ;; Tracked objects:
 16070 ;;		On entry : 0/0
 16071 ;;		On exit  : 0/0
 16072 ;;		Unchanged: 0/0
 16073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16074 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16075 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16077 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16078 ;;Total ram usage:        3 bytes
 16079 ;; Hardware stack levels used:    1
 16080 ;; Hardware stack levels required when called:    8
 16081 ;; This function calls:
 16082 ;;		_UpdateChannelIdStatus
 16083 ;;		_ValidateChannelId
 16084 ;; This function is called by:
 16085 ;;		_ExecuteNewChannel
 16086 ;;		_UpdateCfList
 16087 ;; This function uses a non-reentrant model
 16088 ;;
 16089                           
 16090                           	psect	text73
 16091  0000'                    __ptext73:
 16092                           	opt stack 0
 16093  0000'                    _LORAWAN_SetChannelIdStatus:
 16094                           	opt stack 17
 16095                           
 16096                           ; BSR set to: 2
 16097                           ;incstack = 0
 16098                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 16099  0000' 0100               	movlb	0	; () banked
 16100  0002' 6F00'              	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 16101                           
 16102                           ;lorawan_eu.c: 284: LorawanError_t result = OK;
 16103  0004' 0E00               	movlw	0
 16104  0006' 0100               	movlb	0	; () banked
 16105  0008' 6F00'              	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 16106                           
 16107                           ; BSR set to: 0
 16108                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 16109  000A' 0E01               	movlw	1
 16110  000C' 6F00'              	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 16111  000E' 5100'              	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16112  0010' EC00' F000'        	call	_ValidateChannelId
 16113  0014' 0900               	iorlw	0
 16114  0016' B4D8               	btfsc	status,2,c
 16115  0018' D004               	goto	l1003
 16116                           
 16117                           ;lorawan_eu.c: 288: {
 16118                           ;lorawan_eu.c: 289: result = INVALID_PARAMETER;
 16119  001A' 0E03               	movlw	3
 16120  001C' 0100               	movlb	0	; () banked
 16121  001E' 6F00'              	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 16122                           
 16123                           ;lorawan_eu.c: 290: }
 16124  0020' 0012               	return	
 16125  0022'                    l1003:
 16126                           
 16127                           ;lorawan_eu.c: 292: else
 16128                           ;lorawan_eu.c: 293: {
 16129                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 16130                           
 16131                           ; BSR set to: 0
 16132  0022' 0100               	movlb	0	; () banked
 16133  0024' 5100'              	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16134  0026' 0D0E               	mullw	14
 16135  0028' 0E0D               	movlw	13
 16136  002A' 26F3               	addwf	prodl,f,c
 16137  002C' 0E00               	movlw	0
 16138  002E' 22F4               	addwfc	prodh,f,c
 16139  0030' 0E00'              	movlw	low _Channels
 16140  0032' 24F3               	addwf	prodl,w,c
 16141  0034' 6ED9               	movwf	fsr2l,c
 16142  0036' 0E00'              	movlw	high _Channels
 16143  0038' 20F4               	addwfc	prodh,w,c
 16144  003A' 6EDA               	movwf	fsr2h,c
 16145  003C' 50DF               	movf	indf2,w,c
 16146  003E' 0B07               	andlw	7
 16147  0040' 0A07               	xorlw	7
 16148  0042' A4D8               	btfss	status,2,c
 16149  0044' D006               	goto	l1005
 16150                           
 16151                           ; BSR set to: 0
 16152                           ;lorawan_eu.c: 295: {
 16153                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 16154  0046' C004' F000'        	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 16155  004A' 5100'              	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16156  004C' EC00' F000'        	call	_UpdateChannelIdStatus
 16157                           
 16158                           ;lorawan_eu.c: 297: }
 16159  0050' 0012               	return	
 16160  0052'                    l1005:
 16161                           
 16162                           ;lorawan_eu.c: 298: else
 16163                           ;lorawan_eu.c: 299: {
 16164                           ;lorawan_eu.c: 300: result = INVALID_PARAMETER;
 16165  0052' 0E03               	movlw	3
 16166  0054' 0100               	movlb	0	; () banked
 16167  0056' 6F00'              	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 16168                           
 16169                           ; BSR set to: 0
 16170                           
 16171                           ; BSR set to: 0
 16172  0058' 0012               	return	
 16173  005A'                    __end_of_LORAWAN_SetChannelIdStatus:
 16174                           	opt stack 0
 16175                           tosu	equ	0xFFF
 16176                           tosh	equ	0xFFE
 16177                           tosl	equ	0xFFD
 16178                           pclath	equ	0xFFA
 16179                           tblptru	equ	0xFF8
 16180                           tblptrh	equ	0xFF7
 16181                           tblptrl	equ	0xFF6
 16182                           tablat	equ	0xFF5
 16183                           prodh	equ	0xFF4
 16184                           prodl	equ	0xFF3
 16185                           intcon	equ	0xFF2
 16186                           intcon2	equ	0xFF1
 16187                           intcon3	equ	0xFF0
 16188                           indf0	equ	0xFEF
 16189                           postinc0	equ	0xFEE
 16190                           fsr0h	equ	0xFEA
 16191                           fsr0l	equ	0xFE9
 16192                           wreg	equ	0xFE8
 16193                           postinc1	equ	0xFE6
 16194                           postdec1	equ	0xFE5
 16195                           plusw1	equ	0xFE3
 16196                           fsr1h	equ	0xFE2
 16197                           fsr1l	equ	0xFE1
 16198                           indf2	equ	0xFDF
 16199                           postinc2	equ	0xFDE
 16200                           postdec2	equ	0xFDD
 16201                           plusw2	equ	0xFDB
 16202                           fsr2h	equ	0xFDA
 16203                           fsr2l	equ	0xFD9
 16204                           status	equ	0xFD8
 16205                           
 16206 ;; *************** function _ValidateChannelId *****************
 16207 ;; Defined at:
 16208 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16209 ;; Parameters:    Size  Location     Type
 16210 ;;  channelId       1    wreg     unsigned char 
 16211 ;;  allowedForDe    1    0[BANK0 ] unsigned char 
 16212 ;; Auto vars:     Size  Location     Type
 16213 ;;  channelId       1    2[BANK0 ] unsigned char 
 16214 ;;  result          1    1[BANK0 ] enum E7249
 16215 ;; Return value:  Size  Location     Type
 16216 ;;                  1    wreg      enum E7249
 16217 ;; Registers used:
 16218 ;;		wreg, status,2, status,0
 16219 ;; Tracked objects:
 16220 ;;		On entry : 0/0
 16221 ;;		On exit  : 0/0
 16222 ;;		Unchanged: 0/0
 16223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16224 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16225 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16227 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16228 ;;Total ram usage:        3 bytes
 16229 ;; Hardware stack levels used:    1
 16230 ;; Hardware stack levels required when called:    7
 16231 ;; This function calls:
 16232 ;;		Nothing
 16233 ;; This function is called by:
 16234 ;;		_LORAWAN_SetChannelIdStatus
 16235 ;;		_ExecuteNewChannel
 16236 ;;		_LORAWAN_SetDataRange
 16237 ;;		_LORAWAN_GetDataRange
 16238 ;;		_LORAWAN_GetChannelIdStatus
 16239 ;;		_LORAWAN_SetFrequency
 16240 ;;		_LORAWAN_SetDutyCycle
 16241 ;;		_LORAWAN_GetDutyCycle
 16242 ;; This function uses a non-reentrant model
 16243 ;;
 16244                           
 16245                           	psect	text74
 16246  0000'                    __ptext74:
 16247                           	opt stack 0
 16248  0000'                    _ValidateChannelId:
 16249                           	opt stack 17
 16250                           
 16251                           ;incstack = 0
 16252                           ;ValidateChannelId@channelId stored from wreg
 16253  0000' 0100               	movlb	0	; () banked
 16254  0002' 6F00'              	movwf	ValidateChannelId@channelId& (0+255),b
 16255                           
 16256                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 16257  0004' 0E00               	movlw	0
 16258  0006' 0100               	movlb	0	; () banked
 16259  0008' 6F00'              	movwf	ValidateChannelId@result& (0+255),b
 16260                           
 16261                           ; BSR set to: 0
 16262                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 16263  000A' 0E10               	movlw	16
 16264  000C' 6100'              	cpfslt	ValidateChannelId@channelId& (0+255),b
 16265  000E' D006               	goto	u15220
 16266                           
 16267                           ; BSR set to: 0
 16268  0010' 5100'              	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 16269  0012' A4D8               	btfss	status,2,c
 16270  0014' D005               	goto	l1257
 16271                           
 16272                           ; BSR set to: 0
 16273  0016' 0E03               	movlw	3
 16274  0018' 6100'              	cpfslt	ValidateChannelId@channelId& (0+255),b
 16275  001A' D002               	goto	l1257
 16276  001C'                    u15220:
 16277                           
 16278                           ; BSR set to: 0
 16279                           ;lorawan_eu.c: 1130: {
 16280                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 16281                           
 16282                           ; BSR set to: 0
 16283  001C' 0E03               	movlw	3
 16284  001E' 6F00'              	movwf	ValidateChannelId@result& (0+255),b
 16285  0020'                    l1257:
 16286                           
 16287                           ; BSR set to: 0
 16288                           ;lorawan_eu.c: 1132: }
 16289                           ;lorawan_eu.c: 1134: return result;
 16290  0020' 5100'              	movf	ValidateChannelId@result& (0+255),w,b
 16291  0022' 0012               	return	
 16292  0024'                    __end_of_ValidateChannelId:
 16293                           	opt stack 0
 16294                           tosu	equ	0xFFF
 16295                           tosh	equ	0xFFE
 16296                           tosl	equ	0xFFD
 16297                           pclath	equ	0xFFA
 16298                           tblptru	equ	0xFF8
 16299                           tblptrh	equ	0xFF7
 16300                           tblptrl	equ	0xFF6
 16301                           tablat	equ	0xFF5
 16302                           prodh	equ	0xFF4
 16303                           prodl	equ	0xFF3
 16304                           intcon	equ	0xFF2
 16305                           intcon2	equ	0xFF1
 16306                           intcon3	equ	0xFF0
 16307                           indf0	equ	0xFEF
 16308                           postinc0	equ	0xFEE
 16309                           fsr0h	equ	0xFEA
 16310                           fsr0l	equ	0xFE9
 16311                           wreg	equ	0xFE8
 16312                           postinc1	equ	0xFE6
 16313                           postdec1	equ	0xFE5
 16314                           plusw1	equ	0xFE3
 16315                           fsr1h	equ	0xFE2
 16316                           fsr1l	equ	0xFE1
 16317                           indf2	equ	0xFDF
 16318                           postinc2	equ	0xFDE
 16319                           postdec2	equ	0xFDD
 16320                           plusw2	equ	0xFDB
 16321                           fsr2h	equ	0xFDA
 16322                           fsr2l	equ	0xFD9
 16323                           status	equ	0xFD8
 16324                           
 16325 ;; *************** function _ExecuteLinkCheck *****************
 16326 ;; Defined at:
 16327 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16328 ;; Parameters:    Size  Location     Type
 16329 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 16330 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16331 ;; Auto vars:     Size  Location     Type
 16332 ;;		None
 16333 ;; Return value:  Size  Location     Type
 16334 ;;                  2    0[BANK0 ] PTR unsigned char 
 16335 ;; Registers used:
 16336 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16337 ;; Tracked objects:
 16338 ;;		On entry : 0/0
 16339 ;;		On exit  : 0/0
 16340 ;;		Unchanged: 0/0
 16341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16345 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16346 ;;Total ram usage:        2 bytes
 16347 ;; Hardware stack levels used:    1
 16348 ;; Hardware stack levels required when called:    7
 16349 ;; This function calls:
 16350 ;;		Nothing
 16351 ;; This function is called by:
 16352 ;;		_MacExecuteCommands
 16353 ;; This function uses a non-reentrant model
 16354 ;;
 16355                           
 16356                           	psect	text75
 16357  0000'                    __ptext75:
 16358                           	opt stack 0
 16359  0000'                    _ExecuteLinkCheck:
 16360                           	opt stack 18
 16361                           
 16362                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 16363                           
 16364                           ; BSR set to: 0
 16365                           ;incstack = 0
 16366  0000' C000' FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 16367  0004' C001' FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 16368  0008' 50DF               	movf	indf2,w,c
 16369  000A' 0102               	movlb	2	; () banked
 16370  000C' 6F00'              	movwf	(_loRa+221)& (0+255),b
 16371                           
 16372                           ; BSR set to: 2
 16373  000E' 0100               	movlb	0	; () banked
 16374  0010' 4B00'              	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 16375  0012' 2B00'              	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 16376                           
 16377                           ; BSR set to: 0
 16378                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 16379  0014' C000' FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 16380  0018' C001' FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 16381  001C' 50DF               	movf	indf2,w,c
 16382  001E' 0102               	movlb	2	; () banked
 16383  0020' 6F00'              	movwf	(_loRa+222)& (0+255),b
 16384  0022' 0100               	movlb	0	; () banked
 16385  0024' 4B00'              	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 16386  0026' 2B00'              	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 16387                           
 16388                           ; BSR set to: 0
 16389                           ;lorawan.c: 1656: return ptr;
 16390  0028' C000' F000'        	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 16391  002C' C001' F001'        	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 16392  0030' 0012               	return	
 16393  0032'                    __end_of_ExecuteLinkCheck:
 16394                           	opt stack 0
 16395                           tosu	equ	0xFFF
 16396                           tosh	equ	0xFFE
 16397                           tosl	equ	0xFFD
 16398                           pclath	equ	0xFFA
 16399                           tblptru	equ	0xFF8
 16400                           tblptrh	equ	0xFF7
 16401                           tblptrl	equ	0xFF6
 16402                           tablat	equ	0xFF5
 16403                           prodh	equ	0xFF4
 16404                           prodl	equ	0xFF3
 16405                           intcon	equ	0xFF2
 16406                           intcon2	equ	0xFF1
 16407                           intcon3	equ	0xFF0
 16408                           indf0	equ	0xFEF
 16409                           postinc0	equ	0xFEE
 16410                           fsr0h	equ	0xFEA
 16411                           fsr0l	equ	0xFE9
 16412                           wreg	equ	0xFE8
 16413                           postinc1	equ	0xFE6
 16414                           postdec1	equ	0xFE5
 16415                           plusw1	equ	0xFE3
 16416                           fsr1h	equ	0xFE2
 16417                           fsr1l	equ	0xFE1
 16418                           indf2	equ	0xFDF
 16419                           postinc2	equ	0xFDE
 16420                           postdec2	equ	0xFDD
 16421                           plusw2	equ	0xFDB
 16422                           fsr2h	equ	0xFDA
 16423                           fsr2l	equ	0xFD9
 16424                           status	equ	0xFD8
 16425                           
 16426 ;; *************** function _ExecuteLinkAdr *****************
 16427 ;; Defined at:
 16428 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16429 ;; Parameters:    Size  Location     Type
 16430 ;;  ptr             2   15[BANK0 ] PTR unsigned char 
 16431 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16432 ;; Auto vars:     Size  Location     Type
 16433 ;;  redundancy      2   22[BANK0 ] PTR struct .
 16434 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16435 ;;  channelMask     2   19[BANK0 ] unsigned int 
 16436 ;;  dataRate        1   24[BANK0 ] unsigned char 
 16437 ;;  txPower         1   21[BANK0 ] unsigned char 
 16438 ;; Return value:  Size  Location     Type
 16439 ;;                  2   15[BANK0 ] PTR unsigned char 
 16440 ;; Registers used:
 16441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16442 ;; Tracked objects:
 16443 ;;		On entry : 0/0
 16444 ;;		On exit  : 0/0
 16445 ;;		Unchanged: 0/0
 16446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16447 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16448 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16449 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16450 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16451 ;;Total ram usage:       10 bytes
 16452 ;; Hardware stack levels used:    1
 16453 ;; Hardware stack levels required when called:   10
 16454 ;; This function calls:
 16455 ;;		_EnableChannels
 16456 ;;		_UpdateCurrentDataRate
 16457 ;;		_UpdateTxPower
 16458 ;;		_ValidateChannelMask
 16459 ;;		_ValidateChannelMaskCntl
 16460 ;;		_ValidateDataRate
 16461 ;;		_ValidateTxPower
 16462 ;; This function is called by:
 16463 ;;		_MacExecuteCommands
 16464 ;; This function uses a non-reentrant model
 16465 ;;
 16466                           
 16467                           	psect	text76
 16468  0000'                    __ptext76:
 16469                           	opt stack 0
 16470  0000'                    _ExecuteLinkAdr:
 16471                           	opt stack 15
 16472                           
 16473                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 16474                           ;lorawan_eu.c: 616: uint16_t channelMask;
 16475                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 16476                           
 16477                           ; BSR set to: 0
 16478                           ;incstack = 0
 16479  0000' C00F' FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 16480  0004' C010' FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 16481  0008' 50DF               	movf	indf2,w,c
 16482  000A' 0B0F               	andlw	15
 16483  000C' 0100               	movlb	0	; () banked
 16484  000E' 6F00'              	movwf	ExecuteLinkAdr@txPower& (0+255),b
 16485                           
 16486                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 16487  0010' C00F' FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 16488  0014' C010' FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 16489  0018' 50DF               	movf	indf2,w,c
 16490  001A' 6F00'              	movwf	??_ExecuteLinkAdr& (0+255),b
 16491  001C' 3900'              	swapf	??_ExecuteLinkAdr& (0+255),w,b
 16492  001E' 0B0F               	andlw	15
 16493  0020' 0B0F               	andlw	15
 16494  0022' 6F00'              	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 16495                           
 16496                           ; BSR set to: 0
 16497                           ;lorawan_eu.c: 620: ptr++;
 16498  0024' 4B00'              	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 16499  0026' 2B00'              	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 16500                           
 16501                           ; BSR set to: 0
 16502                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 16503  0028' C00F' FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 16504  002C' C010' FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 16505  0030' CFDE F013'         	movff	postinc2,ExecuteLinkAdr@channelMask
 16506  0034' CFDD F014'         	movff	postdec2,ExecuteLinkAdr@channelMask+1
 16507                           
 16508                           ; BSR set to: 0
 16509                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 16510  0038' 0E02               	movlw	2
 16511  003A' 2500'              	addwf	ExecuteLinkAdr@ptr& (0+255),w,b
 16512  003C' 6F00'              	movwf	ExecuteLinkAdr@ptr& (0+255),b
 16513  003E' 0E00               	movlw	0
 16514  0040' 2100'              	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),w,b
 16515  0042' 6F00'              	movwf	(ExecuteLinkAdr@ptr+1)& (0+255),b
 16516                           
 16517                           ; BSR set to: 0
 16518                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 16519                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 16520  0044' C00F' F016'        	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 16521  0048' C010' F017'        	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 16522                           
 16523                           ; BSR set to: 0
 16524  004C' 4B00'              	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 16525  004E' 2B00'              	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 16526                           
 16527                           ; BSR set to: 0
 16528                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 16529  0050' 0102               	movlb	2	; () banked
 16530  0052' AD00'              	btfss	(_loRa+2)& (0+255),6,b
 16531  0054' D0EF               	goto	l1109
 16532                           
 16533                           ; BSR set to: 2
 16534                           ;lorawan_eu.c: 627: {
 16535                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 16536  0056' C016' FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16537  005A' C017' FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16538  005E' 0100               	movlb	0	; () banked
 16539  0060' 38DF               	swapf	223,w,c
 16540  0062' 0B07               	andlw	7
 16541  0064' EC00' F000'        	call	_ValidateChannelMaskCntl
 16542  0068' 0900               	iorlw	0
 16543  006A' A4D8               	btfss	status,2,c
 16544  006C' D021               	goto	l1110
 16545  006E' C013' F000'        	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 16546  0072' C014' F001'        	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 16547  0076' EC00' F000'        	call	_ValidateChannelMask	;wreg free
 16548  007A' 0900               	iorlw	0
 16549  007C' A4D8               	btfss	status,2,c
 16550  007E' D018               	goto	l1110
 16551                           
 16552                           ;lorawan_eu.c: 629: {
 16553                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 16554  0080' 0102               	movlb	2	; () banked
 16555  0082' 5100'              	movf	(_loRa+167)& (0+255),w,b
 16556  0084' 0D02               	mullw	2
 16557  0086' 0E00'              	movlw	low _loRa
 16558  0088' 0100               	movlb	0	; () banked
 16559  008A' 6F00'              	movwf	??_ExecuteLinkAdr& (0+255),b
 16560  008C' 0E00'              	movlw	high _loRa
 16561  008E' 6F00'              	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16562  0090' 0EA8               	movlw	168
 16563  0092' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16564  0094' 0E00               	movlw	0
 16565  0096' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16566  0098' 50F3               	movf	prodl,w,c
 16567  009A' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16568  009C' 50F4               	movf	prodh,w,c
 16569  009E' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16570  00A0' 0E01               	movlw	1
 16571  00A2' 2500'              	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16572  00A4' 6ED9               	movwf	fsr2l,c
 16573  00A6' 0E00               	movlw	0
 16574  00A8' 2100'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16575  00AA' 6EDA               	movwf	fsr2h,c
 16576  00AC' 0102               	movlb	2	; () banked
 16577  00AE' 80DF               	bsf	indf2,0,c
 16578  00B0'                    l1110:
 16579                           
 16580                           ;lorawan_eu.c: 631: }
 16581                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 16582                           
 16583                           ; BSR set to: 2
 16584  00B0' 0100               	movlb	0	; () banked
 16585  00B2' 5100'              	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16586  00B4' EC00' F000'        	call	_ValidateDataRate
 16587  00B8' 0900               	iorlw	0
 16588  00BA' A4D8               	btfss	status,2,c
 16589  00BC' D022               	goto	l1111
 16590  00BE' 0102               	movlb	2	; () banked
 16591  00C0' 5100'              	movf	(_loRa+235)& (0+255),w,b
 16592  00C2' 0100               	movlb	0	; () banked
 16593  00C4' 5D00'              	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16594  00C6' A0D8               	btfss	status,0,c
 16595  00C8' D01C               	goto	l1111
 16596                           
 16597                           ; BSR set to: 0
 16598  00CA' 5100'              	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16599  00CC' 0102               	movlb	2	; () banked
 16600  00CE' 5D00'              	subwf	(_loRa+236)& (0+255),w,b
 16601  00D0' A0D8               	btfss	status,0,c
 16602  00D2' D017               	goto	l1111
 16603                           
 16604                           ; BSR set to: 2
 16605                           ;lorawan_eu.c: 634: {
 16606                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 16607  00D4' 5100'              	movf	(_loRa+167)& (0+255),w,b
 16608  00D6' 0D02               	mullw	2
 16609  00D8' 0E00'              	movlw	low _loRa
 16610  00DA' 0100               	movlb	0	; () banked
 16611  00DC' 6F00'              	movwf	??_ExecuteLinkAdr& (0+255),b
 16612  00DE' 0E00'              	movlw	high _loRa
 16613  00E0' 6F00'              	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16614  00E2' 0EA8               	movlw	168
 16615  00E4' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16616  00E6' 0E00               	movlw	0
 16617  00E8' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16618  00EA' 50F3               	movf	prodl,w,c
 16619  00EC' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16620  00EE' 50F4               	movf	prodh,w,c
 16621  00F0' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16622  00F2' 0E01               	movlw	1
 16623  00F4' 2500'              	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16624  00F6' 6ED9               	movwf	fsr2l,c
 16625  00F8' 0E00               	movlw	0
 16626  00FA' 2100'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16627  00FC' 6EDA               	movwf	fsr2h,c
 16628  00FE' 0102               	movlb	2	; () banked
 16629  0100' 82DF               	bsf	indf2,1,c
 16630  0102'                    l1111:
 16631                           
 16632                           ;lorawan_eu.c: 636: }
 16633                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 16634                           
 16635                           ; BSR set to: 2
 16636  0102' 0100               	movlb	0	; () banked
 16637  0104' 5100'              	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16638  0106' EC00' F000'        	call	_ValidateTxPower
 16639  010A' 0900               	iorlw	0
 16640  010C' A4D8               	btfss	status,2,c
 16641  010E' D018               	goto	l1112
 16642                           
 16643                           ;lorawan_eu.c: 639: {
 16644                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 16645  0110' 0102               	movlb	2	; () banked
 16646  0112' 5100'              	movf	(_loRa+167)& (0+255),w,b
 16647  0114' 0D02               	mullw	2
 16648  0116' 0E00'              	movlw	low _loRa
 16649  0118' 0100               	movlb	0	; () banked
 16650  011A' 6F00'              	movwf	??_ExecuteLinkAdr& (0+255),b
 16651  011C' 0E00'              	movlw	high _loRa
 16652  011E' 6F00'              	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16653  0120' 0EA8               	movlw	168
 16654  0122' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16655  0124' 0E00               	movlw	0
 16656  0126' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16657  0128' 50F3               	movf	prodl,w,c
 16658  012A' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16659  012C' 50F4               	movf	prodh,w,c
 16660  012E' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16661  0130' 0E01               	movlw	1
 16662  0132' 2500'              	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16663  0134' 6ED9               	movwf	fsr2l,c
 16664  0136' 0E00               	movlw	0
 16665  0138' 2100'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16666  013A' 6EDA               	movwf	fsr2h,c
 16667  013C' 0102               	movlb	2	; () banked
 16668  013E' 84DF               	bsf	indf2,2,c
 16669  0140'                    l1112:
 16670                           
 16671                           ;lorawan_eu.c: 641: }
 16672                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 16673  0140' 0102               	movlb	2	; () banked
 16674  0142' 5100'              	movf	(_loRa+167)& (0+255),w,b
 16675  0144' 0D02               	mullw	2
 16676  0146' 0E00'              	movlw	low _loRa
 16677  0148' 0100               	movlb	0	; () banked
 16678  014A' 6F00'              	movwf	??_ExecuteLinkAdr& (0+255),b
 16679  014C' 0E00'              	movlw	high _loRa
 16680  014E' 6F00'              	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16681  0150' 0EA8               	movlw	168
 16682  0152' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16683  0154' 0E00               	movlw	0
 16684  0156' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16685  0158' 50F3               	movf	prodl,w,c
 16686  015A' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16687  015C' 50F4               	movf	prodh,w,c
 16688  015E' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16689  0160' 0E01               	movlw	1
 16690  0162' 2500'              	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16691  0164' 6ED9               	movwf	fsr2l,c
 16692  0166' 0E00               	movlw	0
 16693  0168' 2100'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16694  016A' 6EDA               	movwf	fsr2h,c
 16695  016C' 0102               	movlb	2	; () banked
 16696  016E' A4DF               	btfss	indf2,2,c
 16697  0170' D0A6               	goto	l1116
 16698                           
 16699                           ; BSR set to: 2
 16700  0172' 5100'              	movf	(_loRa+167)& (0+255),w,b
 16701  0174' 0D02               	mullw	2
 16702  0176' 0E00'              	movlw	low _loRa
 16703  0178' 0100               	movlb	0	; () banked
 16704  017A' 6F00'              	movwf	??_ExecuteLinkAdr& (0+255),b
 16705  017C' 0E00'              	movlw	high _loRa
 16706  017E' 6F00'              	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16707  0180' 0EA8               	movlw	168
 16708  0182' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16709  0184' 0E00               	movlw	0
 16710  0186' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16711  0188' 50F3               	movf	prodl,w,c
 16712  018A' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16713  018C' 50F4               	movf	prodh,w,c
 16714  018E' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16715  0190' 0E01               	movlw	1
 16716  0192' 2500'              	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16717  0194' 6ED9               	movwf	fsr2l,c
 16718  0196' 0E00               	movlw	0
 16719  0198' 2100'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16720  019A' 6EDA               	movwf	fsr2h,c
 16721  019C' 0102               	movlb	2	; () banked
 16722  019E' A2DF               	btfss	indf2,1,c
 16723  01A0' D08E               	goto	l1116
 16724                           
 16725                           ; BSR set to: 2
 16726  01A2' 5100'              	movf	(_loRa+167)& (0+255),w,b
 16727  01A4' 0D02               	mullw	2
 16728  01A6' 0E00'              	movlw	low _loRa
 16729  01A8' 0100               	movlb	0	; () banked
 16730  01AA' 6F00'              	movwf	??_ExecuteLinkAdr& (0+255),b
 16731  01AC' 0E00'              	movlw	high _loRa
 16732  01AE' 6F00'              	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16733  01B0' 0EA8               	movlw	168
 16734  01B2' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16735  01B4' 0E00               	movlw	0
 16736  01B6' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16737  01B8' 50F3               	movf	prodl,w,c
 16738  01BA' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16739  01BC' 50F4               	movf	prodh,w,c
 16740  01BE' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16741  01C0' 0E01               	movlw	1
 16742  01C2' 2500'              	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16743  01C4' 6ED9               	movwf	fsr2l,c
 16744  01C6' 0E00               	movlw	0
 16745  01C8' 2100'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16746  01CA' 6EDA               	movwf	fsr2h,c
 16747  01CC' 0102               	movlb	2	; () banked
 16748  01CE' A0DF               	btfss	indf2,0,c
 16749  01D0' D076               	goto	l1116
 16750                           
 16751                           ; BSR set to: 2
 16752                           ;lorawan_eu.c: 644: {
 16753                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 16754  01D2' C013' F00C'        	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 16755  01D6' C014' F00D'        	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 16756  01DA' C016' FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16757  01DE' C017' FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16758  01E2' 0100               	movlb	0	; () banked
 16759  01E4' 38DF               	swapf	223,w,c
 16760  01E6' 0B07               	andlw	7
 16761  01E8' 6F00'              	movwf	EnableChannels@channelMaskCntl& (0+255),b
 16762  01EA' EC00' F000'        	call	_EnableChannels	;wreg free
 16763                           
 16764                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 16765  01EE' 0100               	movlb	0	; () banked
 16766  01F0' 5100'              	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16767  01F2' EC00' F000'        	call	_UpdateTxPower
 16768                           
 16769                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 16770  01F6' 0102               	movlb	2	; () banked
 16771  01F8' 8900'              	bsf	(_loRa+3)& (0+255),4,b
 16772                           
 16773                           ; BSR set to: 2
 16774                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 16775  01FA' 0100               	movlb	0	; () banked
 16776  01FC' 5100'              	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16777  01FE' EC00' F000'        	call	_UpdateCurrentDataRate
 16778                           
 16779                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 16780  0202' C016' FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16781  0206' C017' FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16782  020A' 0100               	movlb	0	; () banked
 16783  020C' 50DF               	movf	223,w,c
 16784  020E' 0B0F               	andlw	15
 16785  0210' 0900               	iorlw	0
 16786  0212' A4D8               	btfss	status,2,c
 16787  0214' D002               	goto	l1114
 16788                           
 16789                           ; BSR set to: 0
 16790                           ;lorawan_eu.c: 652: {
 16791                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 16792  0216' 0E00               	movlw	0
 16793  0218' D009               	goto	L10
 16794  021A'                    l1114:
 16795                           
 16796                           ;lorawan_eu.c: 655: else
 16797                           ;lorawan_eu.c: 656: {
 16798                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 16799                           
 16800                           ; BSR set to: 2
 16801  021A' C016' FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16802  021E' C017' FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16803  0222' 0100               	movlb	0	; () banked
 16804  0224' 50DF               	movf	223,w,c
 16805  0226' 0B0F               	andlw	15
 16806  0228' 6F00'              	movwf	??_ExecuteLinkAdr& (0+255),b
 16807  022A' 0500'              	decf	??_ExecuteLinkAdr& (0+255),w,b
 16808  022C'                    L10:
 16809  022C' 0102               	movlb	2	; () banked
 16810  022E' 6F00'              	movwf	(_loRa+214)& (0+255),b
 16811                           
 16812                           ; BSR set to: 2
 16813                           ;lorawan_eu.c: 658: }
 16814                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 16815                           
 16816                           ; BSR set to: 2
 16817  0230' 8B00'              	bsf	(_loRa+3)& (0+255),5,b
 16818                           
 16819                           ; BSR set to: 2
 16820                           ;lorawan_eu.c: 660: }
 16821                           ;lorawan_eu.c: 661: }
 16822  0232' D045               	goto	l1116
 16823  0234'                    l1109:
 16824                           
 16825                           ; BSR set to: 2
 16826                           ;lorawan_eu.c: 662: else
 16827                           ;lorawan_eu.c: 663: {
 16828                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 16829                           
 16830                           ; BSR set to: 2
 16831  0234' 5100'              	movf	(_loRa+167)& (0+255),w,b
 16832  0236' 0D02               	mullw	2
 16833  0238' 0E00'              	movlw	low _loRa
 16834  023A' 0100               	movlb	0	; () banked
 16835  023C' 6F00'              	movwf	??_ExecuteLinkAdr& (0+255),b
 16836  023E' 0E00'              	movlw	high _loRa
 16837  0240' 6F00'              	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16838  0242' 0EA8               	movlw	168
 16839  0244' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16840  0246' 0E00               	movlw	0
 16841  0248' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16842  024A' 50F3               	movf	prodl,w,c
 16843  024C' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16844  024E' 50F4               	movf	prodh,w,c
 16845  0250' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16846  0252' 0E01               	movlw	1
 16847  0254' 2500'              	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16848  0256' 6ED9               	movwf	fsr2l,c
 16849  0258' 0E00               	movlw	0
 16850  025A' 2100'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16851  025C' 6EDA               	movwf	fsr2h,c
 16852  025E' 0102               	movlb	2	; () banked
 16853  0260' 90DF               	bcf	indf2,0,c
 16854                           
 16855                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 16856  0262' 5100'              	movf	(_loRa+167)& (0+255),w,b
 16857  0264' 0D02               	mullw	2
 16858  0266' 0E00'              	movlw	low _loRa
 16859  0268' 0100               	movlb	0	; () banked
 16860  026A' 6F00'              	movwf	??_ExecuteLinkAdr& (0+255),b
 16861  026C' 0E00'              	movlw	high _loRa
 16862  026E' 6F00'              	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16863  0270' 0EA8               	movlw	168
 16864  0272' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16865  0274' 0E00               	movlw	0
 16866  0276' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16867  0278' 50F3               	movf	prodl,w,c
 16868  027A' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16869  027C' 50F4               	movf	prodh,w,c
 16870  027E' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16871  0280' 0E01               	movlw	1
 16872  0282' 2500'              	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16873  0284' 6ED9               	movwf	fsr2l,c
 16874  0286' 0E00               	movlw	0
 16875  0288' 2100'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16876  028A' 6EDA               	movwf	fsr2h,c
 16877  028C' 0102               	movlb	2	; () banked
 16878  028E' 92DF               	bcf	indf2,1,c
 16879                           
 16880                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 16881  0290' 5100'              	movf	(_loRa+167)& (0+255),w,b
 16882  0292' 0D02               	mullw	2
 16883  0294' 0E00'              	movlw	low _loRa
 16884  0296' 0100               	movlb	0	; () banked
 16885  0298' 6F00'              	movwf	??_ExecuteLinkAdr& (0+255),b
 16886  029A' 0E00'              	movlw	high _loRa
 16887  029C' 6F00'              	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16888  029E' 0EA8               	movlw	168
 16889  02A0' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16890  02A2' 0E00               	movlw	0
 16891  02A4' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16892  02A6' 50F3               	movf	prodl,w,c
 16893  02A8' 2700'              	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16894  02AA' 50F4               	movf	prodh,w,c
 16895  02AC' 2300'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16896  02AE' 0E01               	movlw	1
 16897  02B0' 2500'              	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16898  02B2' 6ED9               	movwf	fsr2l,c
 16899  02B4' 0E00               	movlw	0
 16900  02B6' 2100'              	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16901  02B8' 6EDA               	movwf	fsr2h,c
 16902  02BA' 0102               	movlb	2	; () banked
 16903  02BC' 94DF               	bcf	indf2,2,c
 16904  02BE'                    l1116:
 16905                           
 16906                           ; BSR set to: 2
 16907                           ;lorawan_eu.c: 667: }
 16908                           ;lorawan_eu.c: 669: return ptr;
 16909                           
 16910                           ; BSR set to: 2
 16911  02BE' C00F' F00F'        	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 16912  02C2' C010' F010'        	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 16913  02C6' 0012               	return	
 16914  02C8'                    __end_of_ExecuteLinkAdr:
 16915                           	opt stack 0
 16916                           tosu	equ	0xFFF
 16917                           tosh	equ	0xFFE
 16918                           tosl	equ	0xFFD
 16919                           pclath	equ	0xFFA
 16920                           tblptru	equ	0xFF8
 16921                           tblptrh	equ	0xFF7
 16922                           tblptrl	equ	0xFF6
 16923                           tablat	equ	0xFF5
 16924                           prodh	equ	0xFF4
 16925                           prodl	equ	0xFF3
 16926                           intcon	equ	0xFF2
 16927                           intcon2	equ	0xFF1
 16928                           intcon3	equ	0xFF0
 16929                           indf0	equ	0xFEF
 16930                           postinc0	equ	0xFEE
 16931                           fsr0h	equ	0xFEA
 16932                           fsr0l	equ	0xFE9
 16933                           wreg	equ	0xFE8
 16934                           postinc1	equ	0xFE6
 16935                           postdec1	equ	0xFE5
 16936                           plusw1	equ	0xFE3
 16937                           fsr1h	equ	0xFE2
 16938                           fsr1l	equ	0xFE1
 16939                           indf2	equ	0xFDF
 16940                           postinc2	equ	0xFDE
 16941                           postdec2	equ	0xFDD
 16942                           plusw2	equ	0xFDB
 16943                           fsr2h	equ	0xFDA
 16944                           fsr2l	equ	0xFD9
 16945                           status	equ	0xFD8
 16946                           
 16947 ;; *************** function _ValidateTxPower *****************
 16948 ;; Defined at:
 16949 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16950 ;; Parameters:    Size  Location     Type
 16951 ;;  txPowerNew      1    wreg     unsigned char 
 16952 ;; Auto vars:     Size  Location     Type
 16953 ;;  txPowerNew      1    1[BANK0 ] unsigned char 
 16954 ;;  result          1    0[BANK0 ] enum E7249
 16955 ;; Return value:  Size  Location     Type
 16956 ;;                  1    wreg      enum E7249
 16957 ;; Registers used:
 16958 ;;		wreg, status,2, status,0
 16959 ;; Tracked objects:
 16960 ;;		On entry : 0/0
 16961 ;;		On exit  : 0/0
 16962 ;;		Unchanged: 0/0
 16963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16965 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16967 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16968 ;;Total ram usage:        2 bytes
 16969 ;; Hardware stack levels used:    1
 16970 ;; Hardware stack levels required when called:    7
 16971 ;; This function calls:
 16972 ;;		Nothing
 16973 ;; This function is called by:
 16974 ;;		_ExecuteLinkAdr
 16975 ;;		_LORAWAN_SetTxPower
 16976 ;; This function uses a non-reentrant model
 16977 ;;
 16978                           
 16979                           	psect	text77
 16980  0000'                    __ptext77:
 16981                           	opt stack 0
 16982  0000'                    _ValidateTxPower:
 16983                           	opt stack 17
 16984                           
 16985                           ; BSR set to: 2
 16986                           ;incstack = 0
 16987                           ;ValidateTxPower@txPowerNew stored from wreg
 16988  0000' 0100               	movlb	0	; () banked
 16989  0002' 6F00'              	movwf	ValidateTxPower@txPowerNew& (0+255),b
 16990                           
 16991                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 16992  0004' 0E00               	movlw	0
 16993  0006' 0100               	movlb	0	; () banked
 16994  0008' 6F00'              	movwf	ValidateTxPower@result& (0+255),b
 16995                           
 16996                           ; BSR set to: 0
 16997                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 16998  000A' 0102               	movlb	2	; () banked
 16999  000C' 5100'              	movf	(_loRa+164)& (0+255),w,b
 17000  000E' A4D8               	btfss	status,2,c
 17001  0010' D004               	goto	u15830
 17002                           
 17003                           ; BSR set to: 2
 17004  0012' 0100               	movlb	0	; () banked
 17005  0014' 5100'              	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 17006  0016' B4D8               	btfsc	status,2,c
 17007  0018' D004               	goto	u15840
 17008  001A'                    u15830:
 17009                           
 17010                           ; BSR set to: 0
 17011  001A' 0E05               	movlw	5
 17012  001C' 0100               	movlb	0	; () banked
 17013  001E' 6500'              	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 17014  0020' D002               	goto	l1096
 17015  0022'                    u15840:
 17016                           
 17017                           ; BSR set to: 0
 17018                           ;lorawan_eu.c: 587: {
 17019                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 17020                           
 17021                           ; BSR set to: 0
 17022  0022' 0E03               	movlw	3
 17023  0024' 6F00'              	movwf	ValidateTxPower@result& (0+255),b
 17024  0026'                    l1096:
 17025                           
 17026                           ; BSR set to: 0
 17027                           ;lorawan_eu.c: 589: }
 17028                           ;lorawan_eu.c: 591: return result;
 17029  0026' 5100'              	movf	ValidateTxPower@result& (0+255),w,b
 17030  0028' 0012               	return	
 17031  002A'                    __end_of_ValidateTxPower:
 17032                           	opt stack 0
 17033                           tosu	equ	0xFFF
 17034                           tosh	equ	0xFFE
 17035                           tosl	equ	0xFFD
 17036                           pclath	equ	0xFFA
 17037                           tblptru	equ	0xFF8
 17038                           tblptrh	equ	0xFF7
 17039                           tblptrl	equ	0xFF6
 17040                           tablat	equ	0xFF5
 17041                           prodh	equ	0xFF4
 17042                           prodl	equ	0xFF3
 17043                           intcon	equ	0xFF2
 17044                           intcon2	equ	0xFF1
 17045                           intcon3	equ	0xFF0
 17046                           indf0	equ	0xFEF
 17047                           postinc0	equ	0xFEE
 17048                           fsr0h	equ	0xFEA
 17049                           fsr0l	equ	0xFE9
 17050                           wreg	equ	0xFE8
 17051                           postinc1	equ	0xFE6
 17052                           postdec1	equ	0xFE5
 17053                           plusw1	equ	0xFE3
 17054                           fsr1h	equ	0xFE2
 17055                           fsr1l	equ	0xFE1
 17056                           indf2	equ	0xFDF
 17057                           postinc2	equ	0xFDE
 17058                           postdec2	equ	0xFDD
 17059                           plusw2	equ	0xFDB
 17060                           fsr2h	equ	0xFDA
 17061                           fsr2l	equ	0xFD9
 17062                           status	equ	0xFD8
 17063                           
 17064 ;; *************** function _ValidateDataRate *****************
 17065 ;; Defined at:
 17066 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17067 ;; Parameters:    Size  Location     Type
 17068 ;;  dataRate        1    wreg     unsigned char 
 17069 ;; Auto vars:     Size  Location     Type
 17070 ;;  dataRate        1    0[BANK0 ] unsigned char 
 17071 ;;  result          1    1[BANK0 ] enum E7249
 17072 ;; Return value:  Size  Location     Type
 17073 ;;                  1    wreg      enum E7249
 17074 ;; Registers used:
 17075 ;;		wreg, status,2, status,0
 17076 ;; Tracked objects:
 17077 ;;		On entry : 0/0
 17078 ;;		On exit  : 0/0
 17079 ;;		Unchanged: 0/0
 17080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17082 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17084 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17085 ;;Total ram usage:        2 bytes
 17086 ;; Hardware stack levels used:    1
 17087 ;; Hardware stack levels required when called:    7
 17088 ;; This function calls:
 17089 ;;		Nothing
 17090 ;; This function is called by:
 17091 ;;		_ExecuteLinkAdr
 17092 ;;		_ExecuteRxParamSetupReq
 17093 ;;		_ValidateDataRange
 17094 ;;		_LORAWAN_SetReceiveWindow2Parameters
 17095 ;;		_LORAWAN_SetCurrentDataRate
 17096 ;; This function uses a non-reentrant model
 17097 ;;
 17098                           
 17099                           	psect	text78
 17100  0000'                    __ptext78:
 17101                           	opt stack 0
 17102  0000'                    _ValidateDataRate:
 17103                           	opt stack 17
 17104                           
 17105                           ; BSR set to: 0
 17106                           ;incstack = 0
 17107                           ;ValidateDataRate@dataRate stored from wreg
 17108  0000' 0100               	movlb	0	; () banked
 17109  0002' 6F00'              	movwf	ValidateDataRate@dataRate& (0+255),b
 17110                           
 17111                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 17112  0004' 0E00               	movlw	0
 17113  0006' 0100               	movlb	0	; () banked
 17114  0008' 6F00'              	movwf	ValidateDataRate@result& (0+255),b
 17115                           
 17116                           ; BSR set to: 0
 17117                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 17118  000A' 0E07               	movlw	7
 17119  000C' 6500'              	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 17120  000E' D002               	goto	l1092
 17121                           
 17122                           ; BSR set to: 0
 17123                           ;lorawan_eu.c: 575: {
 17124                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 17125  0010' 0E03               	movlw	3
 17126  0012' 6F00'              	movwf	ValidateDataRate@result& (0+255),b
 17127  0014'                    l1092:
 17128                           
 17129                           ; BSR set to: 0
 17130                           ;lorawan_eu.c: 577: }
 17131                           ;lorawan_eu.c: 579: return result;
 17132  0014' 5100'              	movf	ValidateDataRate@result& (0+255),w,b
 17133  0016' 0012               	return	
 17134  0018'                    __end_of_ValidateDataRate:
 17135                           	opt stack 0
 17136                           tosu	equ	0xFFF
 17137                           tosh	equ	0xFFE
 17138                           tosl	equ	0xFFD
 17139                           pclath	equ	0xFFA
 17140                           tblptru	equ	0xFF8
 17141                           tblptrh	equ	0xFF7
 17142                           tblptrl	equ	0xFF6
 17143                           tablat	equ	0xFF5
 17144                           prodh	equ	0xFF4
 17145                           prodl	equ	0xFF3
 17146                           intcon	equ	0xFF2
 17147                           intcon2	equ	0xFF1
 17148                           intcon3	equ	0xFF0
 17149                           indf0	equ	0xFEF
 17150                           postinc0	equ	0xFEE
 17151                           fsr0h	equ	0xFEA
 17152                           fsr0l	equ	0xFE9
 17153                           wreg	equ	0xFE8
 17154                           postinc1	equ	0xFE6
 17155                           postdec1	equ	0xFE5
 17156                           plusw1	equ	0xFE3
 17157                           fsr1h	equ	0xFE2
 17158                           fsr1l	equ	0xFE1
 17159                           indf2	equ	0xFDF
 17160                           postinc2	equ	0xFDE
 17161                           postdec2	equ	0xFDD
 17162                           plusw2	equ	0xFDB
 17163                           fsr2h	equ	0xFDA
 17164                           fsr2l	equ	0xFD9
 17165                           status	equ	0xFD8
 17166                           
 17167 ;; *************** function _ValidateChannelMaskCntl *****************
 17168 ;; Defined at:
 17169 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17170 ;; Parameters:    Size  Location     Type
 17171 ;;  channelMaskC    1    wreg     unsigned char 
 17172 ;; Auto vars:     Size  Location     Type
 17173 ;;  channelMaskC    1    1[BANK0 ] unsigned char 
 17174 ;;  result          1    0[BANK0 ] enum E7249
 17175 ;; Return value:  Size  Location     Type
 17176 ;;                  1    wreg      enum E7249
 17177 ;; Registers used:
 17178 ;;		wreg, status,2, status,0
 17179 ;; Tracked objects:
 17180 ;;		On entry : 0/0
 17181 ;;		On exit  : 0/0
 17182 ;;		Unchanged: 0/0
 17183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17185 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17187 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17188 ;;Total ram usage:        2 bytes
 17189 ;; Hardware stack levels used:    1
 17190 ;; Hardware stack levels required when called:    7
 17191 ;; This function calls:
 17192 ;;		Nothing
 17193 ;; This function is called by:
 17194 ;;		_ExecuteLinkAdr
 17195 ;; This function uses a non-reentrant model
 17196 ;;
 17197                           
 17198                           	psect	text79
 17199  0000'                    __ptext79:
 17200                           	opt stack 0
 17201  0000'                    _ValidateChannelMaskCntl:
 17202                           	opt stack 17
 17203                           
 17204                           ; BSR set to: 0
 17205                           ;incstack = 0
 17206                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 17207  0000' 0100               	movlb	0	; () banked
 17208  0002' 6F00'              	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 17209                           
 17210                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 17211  0004' 0E00               	movlw	0
 17212  0006' 0100               	movlb	0	; () banked
 17213  0008' 6F00'              	movwf	ValidateChannelMaskCntl@result& (0+255),b
 17214                           
 17215                           ; BSR set to: 0
 17216                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 17217  000A' 5100'              	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 17218  000C' B4D8               	btfsc	status,2,c
 17219  000E' D006               	goto	l1263
 17220                           
 17221                           ; BSR set to: 0
 17222  0010' 0E06               	movlw	6
 17223  0012' 1900'              	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 17224  0014' B4D8               	btfsc	status,2,c
 17225  0016' D002               	goto	l1263
 17226                           
 17227                           ; BSR set to: 0
 17228                           ;lorawan_eu.c: 1142: {
 17229                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 17230  0018' 0E03               	movlw	3
 17231  001A' 6F00'              	movwf	ValidateChannelMaskCntl@result& (0+255),b
 17232  001C'                    l1263:
 17233                           
 17234                           ; BSR set to: 0
 17235                           ;lorawan_eu.c: 1144: }
 17236                           ;lorawan_eu.c: 1146: return result;
 17237  001C' 5100'              	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 17238  001E' 0012               	return	
 17239  0020'                    __end_of_ValidateChannelMaskCntl:
 17240                           	opt stack 0
 17241                           tosu	equ	0xFFF
 17242                           tosh	equ	0xFFE
 17243                           tosl	equ	0xFFD
 17244                           pclath	equ	0xFFA
 17245                           tblptru	equ	0xFF8
 17246                           tblptrh	equ	0xFF7
 17247                           tblptrl	equ	0xFF6
 17248                           tablat	equ	0xFF5
 17249                           prodh	equ	0xFF4
 17250                           prodl	equ	0xFF3
 17251                           intcon	equ	0xFF2
 17252                           intcon2	equ	0xFF1
 17253                           intcon3	equ	0xFF0
 17254                           indf0	equ	0xFEF
 17255                           postinc0	equ	0xFEE
 17256                           fsr0h	equ	0xFEA
 17257                           fsr0l	equ	0xFE9
 17258                           wreg	equ	0xFE8
 17259                           postinc1	equ	0xFE6
 17260                           postdec1	equ	0xFE5
 17261                           plusw1	equ	0xFE3
 17262                           fsr1h	equ	0xFE2
 17263                           fsr1l	equ	0xFE1
 17264                           indf2	equ	0xFDF
 17265                           postinc2	equ	0xFDE
 17266                           postdec2	equ	0xFDD
 17267                           plusw2	equ	0xFDB
 17268                           fsr2h	equ	0xFDA
 17269                           fsr2l	equ	0xFD9
 17270                           status	equ	0xFD8
 17271                           
 17272 ;; *************** function _ValidateChannelMask *****************
 17273 ;; Defined at:
 17274 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17275 ;; Parameters:    Size  Location     Type
 17276 ;;  channelMask     2    0[BANK0 ] unsigned int 
 17277 ;; Auto vars:     Size  Location     Type
 17278 ;;  i               1    4[BANK0 ] unsigned char 
 17279 ;; Return value:  Size  Location     Type
 17280 ;;                  1    wreg      enum E7249
 17281 ;; Registers used:
 17282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17283 ;; Tracked objects:
 17284 ;;		On entry : 0/0
 17285 ;;		On exit  : 0/0
 17286 ;;		Unchanged: 0/0
 17287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17289 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17290 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17291 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17292 ;;Total ram usage:        5 bytes
 17293 ;; Hardware stack levels used:    1
 17294 ;; Hardware stack levels required when called:    7
 17295 ;; This function calls:
 17296 ;;		Nothing
 17297 ;; This function is called by:
 17298 ;;		_ExecuteLinkAdr
 17299 ;; This function uses a non-reentrant model
 17300 ;;
 17301                           
 17302                           	psect	text80
 17303  0000'                    __ptext80:
 17304                           	opt stack 0
 17305  0000'                    _ValidateChannelMask:
 17306                           	opt stack 17
 17307                           
 17308                           ;lorawan_eu.c: 1168: uint8_t i = 0;
 17309                           
 17310                           ; BSR set to: 0
 17311                           ;incstack = 0
 17312  0000' 0E00               	movlw	0
 17313  0002' 0100               	movlb	0	; () banked
 17314  0004' 6F00'              	movwf	ValidateChannelMask@i& (0+255),b
 17315                           
 17316                           ; BSR set to: 0
 17317                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 17318  0006' 5100'              	movf	ValidateChannelMask@channelMask& (0+255),w,b
 17319  0008' 1100'              	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 17320  000A' B4D8               	btfsc	status,2,c
 17321  000C' D026               	goto	l1276
 17322                           
 17323                           ; BSR set to: 0
 17324                           ;lorawan_eu.c: 1171: {
 17325                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 17326  000E' 0E00               	movlw	0
 17327  0010' 6F00'              	movwf	ValidateChannelMask@i& (0+255),b
 17328  0012'                    l13880:
 17329                           
 17330                           ; BSR set to: 0
 17331  0012' 0E0F               	movlw	15
 17332  0014' 6500'              	cpfsgt	ValidateChannelMask@i& (0+255),b
 17333  0016' D001               	goto	l1277
 17334  0018' D01E               	goto	u15910
 17335  001A'                    l1277:
 17336                           
 17337                           ; BSR set to: 0
 17338                           ;lorawan_eu.c: 1173: {
 17339                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 17340  001A' A100'              	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 17341  001C' D013               	goto	l1279
 17342                           
 17343                           ; BSR set to: 0
 17344  001E' 5100'              	movf	ValidateChannelMask@i& (0+255),w,b
 17345  0020' 0D0E               	mullw	14
 17346  0022' 0E0D               	movlw	13
 17347  0024' 26F3               	addwf	prodl,f,c
 17348  0026' 0E00               	movlw	0
 17349  0028' 22F4               	addwfc	prodh,f,c
 17350  002A' 0E00'              	movlw	low _Channels
 17351  002C' 24F3               	addwf	prodl,w,c
 17352  002E' 6ED9               	movwf	fsr2l,c
 17353  0030' 0E00'              	movlw	high _Channels
 17354  0032' 20F4               	addwfc	prodh,w,c
 17355  0034' 6EDA               	movwf	fsr2h,c
 17356  0036' 50DF               	movf	indf2,w,c
 17357  0038' 0B07               	andlw	7
 17358  003A' 0A07               	xorlw	7
 17359  003C' B4D8               	btfsc	status,2,c
 17360  003E' D002               	goto	l1279
 17361                           
 17362                           ; BSR set to: 0
 17363                           ;lorawan_eu.c: 1175: {
 17364                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 17365  0040' 0E03               	movlw	3
 17366                           
 17367                           ; BSR set to: 0
 17368  0042' 0012               	return	
 17369  0044'                    l1279:
 17370                           
 17371                           ; BSR set to: 0
 17372                           ;lorawan_eu.c: 1178: else
 17373                           ;lorawan_eu.c: 1179: {
 17374                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 17375                           
 17376                           ; BSR set to: 0
 17377  0044' 90D8               	bcf	status,0,c
 17378  0046' 3100'              	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 17379  0048' 6F00'              	movwf	??_ValidateChannelMask& (0+255),b
 17380  004A' 3100'              	rrcf	ValidateChannelMask@channelMask& (0+255),w,b
 17381  004C' 6F00'              	movwf	ValidateChannelMask@channelMask& (0+255),b
 17382  004E' C002' F001'        	movff	??_ValidateChannelMask,ValidateChannelMask@channelMask+1
 17383                           
 17384                           ; BSR set to: 0
 17385                           
 17386                           ; BSR set to: 0
 17387  0052' 2B00'              	incf	ValidateChannelMask@i& (0+255),f,b
 17388  0054' D7DE               	goto	l13880
 17389  0056'                    u15910:
 17390                           
 17391                           ; BSR set to: 0
 17392                           ;lorawan_eu.c: 1181: }
 17393                           ;lorawan_eu.c: 1182: }
 17394                           ;lorawan_eu.c: 1184: return OK;
 17395                           
 17396                           ; BSR set to: 0
 17397  0056' 0E00               	movlw	0
 17398                           
 17399                           ; BSR set to: 0
 17400                           ;lorawan_eu.c: 1185: }
 17401                           
 17402                           ; BSR set to: 0
 17403  0058' 0012               	return	
 17404  005A'                    l1276:
 17405                           
 17406                           ; BSR set to: 0
 17407                           ;lorawan_eu.c: 1186: else
 17408                           ;lorawan_eu.c: 1187: {
 17409                           ;lorawan_eu.c: 1189: return INVALID_PARAMETER;
 17410                           
 17411                           ; BSR set to: 0
 17412  005A' 0E03               	movlw	3
 17413                           
 17414                           ; BSR set to: 0
 17415  005C' 0012               	return	
 17416  005E'                    __end_of_ValidateChannelMask:
 17417                           	opt stack 0
 17418                           tosu	equ	0xFFF
 17419                           tosh	equ	0xFFE
 17420                           tosl	equ	0xFFD
 17421                           pclath	equ	0xFFA
 17422                           tblptru	equ	0xFF8
 17423                           tblptrh	equ	0xFF7
 17424                           tblptrl	equ	0xFF6
 17425                           tablat	equ	0xFF5
 17426                           prodh	equ	0xFF4
 17427                           prodl	equ	0xFF3
 17428                           intcon	equ	0xFF2
 17429                           intcon2	equ	0xFF1
 17430                           intcon3	equ	0xFF0
 17431                           indf0	equ	0xFEF
 17432                           postinc0	equ	0xFEE
 17433                           fsr0h	equ	0xFEA
 17434                           fsr0l	equ	0xFE9
 17435                           wreg	equ	0xFE8
 17436                           postinc1	equ	0xFE6
 17437                           postdec1	equ	0xFE5
 17438                           plusw1	equ	0xFE3
 17439                           fsr1h	equ	0xFE2
 17440                           fsr1l	equ	0xFE1
 17441                           indf2	equ	0xFDF
 17442                           postinc2	equ	0xFDE
 17443                           postdec2	equ	0xFDD
 17444                           plusw2	equ	0xFDB
 17445                           fsr2h	equ	0xFDA
 17446                           fsr2l	equ	0xFD9
 17447                           status	equ	0xFD8
 17448                           
 17449 ;; *************** function _UpdateTxPower *****************
 17450 ;; Defined at:
 17451 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17452 ;; Parameters:    Size  Location     Type
 17453 ;;  txPowerNew      1    wreg     unsigned char 
 17454 ;; Auto vars:     Size  Location     Type
 17455 ;;  txPowerNew      1    0[BANK0 ] unsigned char 
 17456 ;; Return value:  Size  Location     Type
 17457 ;;                  1    wreg      void 
 17458 ;; Registers used:
 17459 ;;		wreg
 17460 ;; Tracked objects:
 17461 ;;		On entry : 0/0
 17462 ;;		On exit  : 0/0
 17463 ;;		Unchanged: 0/0
 17464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17466 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17468 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17469 ;;Total ram usage:        1 bytes
 17470 ;; Hardware stack levels used:    1
 17471 ;; Hardware stack levels required when called:    7
 17472 ;; This function calls:
 17473 ;;		Nothing
 17474 ;; This function is called by:
 17475 ;;		_ExecuteLinkAdr
 17476 ;;		_LORAWAN_SetTxPower
 17477 ;; This function uses a non-reentrant model
 17478 ;;
 17479                           
 17480                           	psect	text81
 17481  0000'                    __ptext81:
 17482                           	opt stack 0
 17483  0000'                    _UpdateTxPower:
 17484                           	opt stack 17
 17485                           
 17486                           ; BSR set to: 0
 17487                           ;incstack = 0
 17488                           ;UpdateTxPower@txPowerNew stored from wreg
 17489  0000' 0100               	movlb	0	; () banked
 17490  0002' 6F00'              	movwf	UpdateTxPower@txPowerNew& (0+255),b
 17491                           
 17492                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 17493  0004' C000' F0E1'        	movff	UpdateTxPower@txPowerNew,_loRa+225
 17494  0008' 0012               	return		;funcret
 17495  000A'                    __end_of_UpdateTxPower:
 17496                           	opt stack 0
 17497                           tosu	equ	0xFFF
 17498                           tosh	equ	0xFFE
 17499                           tosl	equ	0xFFD
 17500                           pclath	equ	0xFFA
 17501                           tblptru	equ	0xFF8
 17502                           tblptrh	equ	0xFF7
 17503                           tblptrl	equ	0xFF6
 17504                           tablat	equ	0xFF5
 17505                           prodh	equ	0xFF4
 17506                           prodl	equ	0xFF3
 17507                           intcon	equ	0xFF2
 17508                           intcon2	equ	0xFF1
 17509                           intcon3	equ	0xFF0
 17510                           indf0	equ	0xFEF
 17511                           postinc0	equ	0xFEE
 17512                           fsr0h	equ	0xFEA
 17513                           fsr0l	equ	0xFE9
 17514                           wreg	equ	0xFE8
 17515                           postinc1	equ	0xFE6
 17516                           postdec1	equ	0xFE5
 17517                           plusw1	equ	0xFE3
 17518                           fsr1h	equ	0xFE2
 17519                           fsr1l	equ	0xFE1
 17520                           indf2	equ	0xFDF
 17521                           postinc2	equ	0xFDE
 17522                           postdec2	equ	0xFDD
 17523                           plusw2	equ	0xFDB
 17524                           fsr2h	equ	0xFDA
 17525                           fsr2l	equ	0xFD9
 17526                           status	equ	0xFD8
 17527                           
 17528 ;; *************** function _UpdateCurrentDataRate *****************
 17529 ;; Defined at:
 17530 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17531 ;; Parameters:    Size  Location     Type
 17532 ;;  valueNew        1    wreg     unsigned char 
 17533 ;; Auto vars:     Size  Location     Type
 17534 ;;  valueNew        1    0[BANK0 ] unsigned char 
 17535 ;; Return value:  Size  Location     Type
 17536 ;;                  1    wreg      void 
 17537 ;; Registers used:
 17538 ;;		wreg
 17539 ;; Tracked objects:
 17540 ;;		On entry : 0/0
 17541 ;;		On exit  : 0/0
 17542 ;;		Unchanged: 0/0
 17543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17545 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17547 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17548 ;;Total ram usage:        1 bytes
 17549 ;; Hardware stack levels used:    1
 17550 ;; Hardware stack levels required when called:    7
 17551 ;; This function calls:
 17552 ;;		Nothing
 17553 ;; This function is called by:
 17554 ;;		_ExecuteLinkAdr
 17555 ;;		_LORAWAN_SetCurrentDataRate
 17556 ;; This function uses a non-reentrant model
 17557 ;;
 17558                           
 17559                           	psect	text82
 17560  0000'                    __ptext82:
 17561                           	opt stack 0
 17562  0000'                    _UpdateCurrentDataRate:
 17563                           	opt stack 17
 17564                           
 17565                           ;incstack = 0
 17566                           ;UpdateCurrentDataRate@valueNew stored from wreg
 17567  0000' 0100               	movlb	0	; () banked
 17568  0002' 6F00'              	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 17569                           
 17570                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 17571  0004' C000' F0DF'        	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 17572  0008' 0012               	return		;funcret
 17573  000A'                    __end_of_UpdateCurrentDataRate:
 17574                           	opt stack 0
 17575                           tosu	equ	0xFFF
 17576                           tosh	equ	0xFFE
 17577                           tosl	equ	0xFFD
 17578                           pclath	equ	0xFFA
 17579                           tblptru	equ	0xFF8
 17580                           tblptrh	equ	0xFF7
 17581                           tblptrl	equ	0xFF6
 17582                           tablat	equ	0xFF5
 17583                           prodh	equ	0xFF4
 17584                           prodl	equ	0xFF3
 17585                           intcon	equ	0xFF2
 17586                           intcon2	equ	0xFF1
 17587                           intcon3	equ	0xFF0
 17588                           indf0	equ	0xFEF
 17589                           postinc0	equ	0xFEE
 17590                           fsr0h	equ	0xFEA
 17591                           fsr0l	equ	0xFE9
 17592                           wreg	equ	0xFE8
 17593                           postinc1	equ	0xFE6
 17594                           postdec1	equ	0xFE5
 17595                           plusw1	equ	0xFE3
 17596                           fsr1h	equ	0xFE2
 17597                           fsr1l	equ	0xFE1
 17598                           indf2	equ	0xFDF
 17599                           postinc2	equ	0xFDE
 17600                           postdec2	equ	0xFDD
 17601                           plusw2	equ	0xFDB
 17602                           fsr2h	equ	0xFDA
 17603                           fsr2l	equ	0xFD9
 17604                           status	equ	0xFD8
 17605                           
 17606 ;; *************** function _EnableChannels *****************
 17607 ;; Defined at:
 17608 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17609 ;; Parameters:    Size  Location     Type
 17610 ;;  channelMask     2   12[BANK0 ] unsigned int 
 17611 ;;  channelMaskC    1   14[BANK0 ] unsigned char 
 17612 ;; Auto vars:     Size  Location     Type
 17613 ;;		None
 17614 ;; Return value:  Size  Location     Type
 17615 ;;                  1    wreg      void 
 17616 ;; Registers used:
 17617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17618 ;; Tracked objects:
 17619 ;;		On entry : 0/0
 17620 ;;		On exit  : 0/0
 17621 ;;		Unchanged: 0/0
 17622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17623 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17626 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17627 ;;Total ram usage:        3 bytes
 17628 ;; Hardware stack levels used:    1
 17629 ;; Hardware stack levels required when called:    9
 17630 ;; This function calls:
 17631 ;;		_EnableChannels1
 17632 ;; This function is called by:
 17633 ;;		_ExecuteLinkAdr
 17634 ;; This function uses a non-reentrant model
 17635 ;;
 17636                           
 17637                           	psect	text83
 17638  0000'                    __ptext83:
 17639                           	opt stack 0
 17640  0000'                    _EnableChannels:
 17641                           	opt stack 15
 17642                           
 17643                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 17644                           
 17645                           ;incstack = 0
 17646  0000' C00C' F004'        	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 17647  0004' C00D' F005'        	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 17648  0008' C00E' F006'        	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 17649  000C' 0E00               	movlw	0
 17650  000E' 0100               	movlb	0	; () banked
 17651  0010' 6F00'              	movwf	EnableChannels1@channelIndexMin& (0+255),b
 17652  0012' 0E10               	movlw	16
 17653  0014' 6F00'              	movwf	EnableChannels1@channelIndexMax& (0+255),b
 17654  0016' EC00' F000'        	call	_EnableChannels1	;wreg free
 17655  001A' 0012               	return		;funcret
 17656  001C'                    __end_of_EnableChannels:
 17657                           	opt stack 0
 17658                           tosu	equ	0xFFF
 17659                           tosh	equ	0xFFE
 17660                           tosl	equ	0xFFD
 17661                           pclath	equ	0xFFA
 17662                           tblptru	equ	0xFF8
 17663                           tblptrh	equ	0xFF7
 17664                           tblptrl	equ	0xFF6
 17665                           tablat	equ	0xFF5
 17666                           prodh	equ	0xFF4
 17667                           prodl	equ	0xFF3
 17668                           intcon	equ	0xFF2
 17669                           intcon2	equ	0xFF1
 17670                           intcon3	equ	0xFF0
 17671                           indf0	equ	0xFEF
 17672                           postinc0	equ	0xFEE
 17673                           fsr0h	equ	0xFEA
 17674                           fsr0l	equ	0xFE9
 17675                           wreg	equ	0xFE8
 17676                           postinc1	equ	0xFE6
 17677                           postdec1	equ	0xFE5
 17678                           plusw1	equ	0xFE3
 17679                           fsr1h	equ	0xFE2
 17680                           fsr1l	equ	0xFE1
 17681                           indf2	equ	0xFDF
 17682                           postinc2	equ	0xFDE
 17683                           postdec2	equ	0xFDD
 17684                           plusw2	equ	0xFDB
 17685                           fsr2h	equ	0xFDA
 17686                           fsr2l	equ	0xFD9
 17687                           status	equ	0xFD8
 17688                           
 17689 ;; *************** function _EnableChannels1 *****************
 17690 ;; Defined at:
 17691 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17692 ;; Parameters:    Size  Location     Type
 17693 ;;  channelMask     2    4[BANK0 ] unsigned int 
 17694 ;;  channelMaskC    1    6[BANK0 ] unsigned char 
 17695 ;;  channelIndex    1    7[BANK0 ] unsigned char 
 17696 ;;  channelIndex    1    8[BANK0 ] unsigned char 
 17697 ;; Auto vars:     Size  Location     Type
 17698 ;;  i               1   11[BANK0 ] unsigned char 
 17699 ;; Return value:  Size  Location     Type
 17700 ;;                  1    wreg      void 
 17701 ;; Registers used:
 17702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17703 ;; Tracked objects:
 17704 ;;		On entry : 0/0
 17705 ;;		On exit  : 0/0
 17706 ;;		Unchanged: 0/0
 17707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17708 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17710 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17711 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17712 ;;Total ram usage:        8 bytes
 17713 ;; Hardware stack levels used:    1
 17714 ;; Hardware stack levels required when called:    8
 17715 ;; This function calls:
 17716 ;;		_UpdateChannelIdStatus
 17717 ;; This function is called by:
 17718 ;;		_EnableChannels
 17719 ;; This function uses a non-reentrant model
 17720 ;;
 17721                           
 17722                           	psect	text84
 17723  0000'                    __ptext84:
 17724                           	opt stack 0
 17725  0000'                    _EnableChannels1:
 17726                           	opt stack 15
 17727                           
 17728                           ;lorawan_eu.c: 1195: uint8_t i;
 17729                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 17730                           
 17731                           ;incstack = 0
 17732  0000' 0E06               	movlw	6
 17733  0002' 0100               	movlb	0	; () banked
 17734  0004' 1900'              	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 17735  0006' A4D8               	btfss	status,2,c
 17736  0008' D00F               	goto	l1285
 17737                           
 17738                           ; BSR set to: 0
 17739                           ;lorawan_eu.c: 1198: {
 17740                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 17741  000A' C007' F00B'        	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 17742  000E' D007               	goto	l1286
 17743  0010'                    
 17744                           ; BSR set to: 0
 17745                           ;lorawan_eu.c: 1200: {
 17746                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 17747                           
 17748                           ; BSR set to: 0
 17749  0010' 0E01               	movlw	1
 17750  0012' 6F00'              	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17751  0014' 5100'              	movf	EnableChannels1@i& (0+255),w,b
 17752  0016' EC00' F000'        	call	_UpdateChannelIdStatus
 17753  001A' 0100               	movlb	0	; () banked
 17754  001C' 2B00'              	incf	EnableChannels1@i& (0+255),f,b
 17755  001E'                    l1286:
 17756                           
 17757                           ; BSR set to: 0
 17758                           
 17759                           ; BSR set to: 0
 17760  001E' 5100'              	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 17761  0020' 5D00'              	subwf	EnableChannels1@i& (0+255),w,b
 17762  0022' B0D8               	btfsc	status,0,c
 17763  0024' 0012               	return	
 17764  0026' D7F4               	goto	l1287
 17765  0028'                    l1285:
 17766                           
 17767                           ; BSR set to: 0
 17768                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 17769                           
 17770                           ; BSR set to: 0
 17771  0028' 5100'              	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 17772  002A' A4D8               	btfss	status,2,c
 17773  002C' 0012               	return	
 17774                           
 17775                           ; BSR set to: 0
 17776                           ;lorawan_eu.c: 1205: {
 17777                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 17778  002E' C007' F00B'        	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 17779  0032' D017               	goto	l1291
 17780  0034'                    l1292:
 17781                           
 17782                           ; BSR set to: 0
 17783                           ;lorawan_eu.c: 1207: {
 17784                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 17785  0034' A100'              	btfss	EnableChannels1@channelMask& (0+255),0,b
 17786  0036' D006               	goto	l1293
 17787                           
 17788                           ; BSR set to: 0
 17789                           ;lorawan_eu.c: 1209: {
 17790                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 17791  0038' 0E01               	movlw	1
 17792  003A' 6F00'              	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17793  003C' 5100'              	movf	EnableChannels1@i& (0+255),w,b
 17794  003E' EC00' F000'        	call	_UpdateChannelIdStatus
 17795                           
 17796                           ;lorawan_eu.c: 1211: }
 17797  0042' D006               	goto	l1294
 17798  0044'                    l1293:
 17799                           
 17800                           ;lorawan_eu.c: 1212: else
 17801                           ;lorawan_eu.c: 1213: {
 17802                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 17803  0044' 0E00               	movlw	0
 17804  0046' 0100               	movlb	0	; () banked
 17805  0048' 6F00'              	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17806  004A' 5100'              	movf	EnableChannels1@i& (0+255),w,b
 17807  004C' EC00' F000'        	call	_UpdateChannelIdStatus
 17808  0050'                    l1294:
 17809                           
 17810                           ;lorawan_eu.c: 1215: }
 17811                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 17812  0050' 90D8               	bcf	status,0,c
 17813  0052' 0100               	movlb	0	; () banked
 17814  0054' 3100'              	rrcf	(EnableChannels1@channelMask+1)& (0+255),w,b
 17815  0056' 6F00'              	movwf	??_EnableChannels1& (0+255),b
 17816  0058' 3100'              	rrcf	EnableChannels1@channelMask& (0+255),w,b
 17817  005A' 6F00'              	movwf	EnableChannels1@channelMask& (0+255),b
 17818  005C' C009' F005'        	movff	??_EnableChannels1,EnableChannels1@channelMask+1
 17819                           
 17820                           ; BSR set to: 0
 17821  0060' 2B00'              	incf	EnableChannels1@i& (0+255),f,b
 17822  0062'                    l1291:
 17823                           
 17824                           ; BSR set to: 0
 17825                           
 17826                           ; BSR set to: 0
 17827  0062' 5100'              	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 17828  0064' 5D00'              	subwf	EnableChannels1@i& (0+255),w,b
 17829  0066' B0D8               	btfsc	status,0,c
 17830  0068' 0012               	return	
 17831  006A' D7E4               	goto	l1292
 17832  006C'                    __end_of_EnableChannels1:
 17833                           	opt stack 0
 17834                           tosu	equ	0xFFF
 17835                           tosh	equ	0xFFE
 17836                           tosl	equ	0xFFD
 17837                           pclath	equ	0xFFA
 17838                           tblptru	equ	0xFF8
 17839                           tblptrh	equ	0xFF7
 17840                           tblptrl	equ	0xFF6
 17841                           tablat	equ	0xFF5
 17842                           prodh	equ	0xFF4
 17843                           prodl	equ	0xFF3
 17844                           intcon	equ	0xFF2
 17845                           intcon2	equ	0xFF1
 17846                           intcon3	equ	0xFF0
 17847                           indf0	equ	0xFEF
 17848                           postinc0	equ	0xFEE
 17849                           fsr0h	equ	0xFEA
 17850                           fsr0l	equ	0xFE9
 17851                           wreg	equ	0xFE8
 17852                           postinc1	equ	0xFE6
 17853                           postdec1	equ	0xFE5
 17854                           plusw1	equ	0xFE3
 17855                           fsr1h	equ	0xFE2
 17856                           fsr1l	equ	0xFE1
 17857                           indf2	equ	0xFDF
 17858                           postinc2	equ	0xFDE
 17859                           postdec2	equ	0xFDD
 17860                           plusw2	equ	0xFDB
 17861                           fsr2h	equ	0xFDA
 17862                           fsr2l	equ	0xFD9
 17863                           status	equ	0xFD8
 17864                           
 17865 ;; *************** function _UpdateChannelIdStatus *****************
 17866 ;; Defined at:
 17867 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17868 ;; Parameters:    Size  Location     Type
 17869 ;;  channelId       1    wreg     unsigned char 
 17870 ;;  statusNew       1    0[BANK0 ] unsigned char 
 17871 ;; Auto vars:     Size  Location     Type
 17872 ;;  channelId       1    2[BANK0 ] unsigned char 
 17873 ;;  i               1    3[BANK0 ] unsigned char 
 17874 ;; Return value:  Size  Location     Type
 17875 ;;                  1    wreg      void 
 17876 ;; Registers used:
 17877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17878 ;; Tracked objects:
 17879 ;;		On entry : 0/0
 17880 ;;		On exit  : 0/0
 17881 ;;		Unchanged: 0/0
 17882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17883 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17884 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17885 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17886 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17887 ;;Total ram usage:        4 bytes
 17888 ;; Hardware stack levels used:    1
 17889 ;; Hardware stack levels required when called:    7
 17890 ;; This function calls:
 17891 ;;		Nothing
 17892 ;; This function is called by:
 17893 ;;		_LORAWAN_SetChannelIdStatus
 17894 ;;		_ExecuteNewChannel
 17895 ;;		_EnableChannels1
 17896 ;; This function uses a non-reentrant model
 17897 ;;
 17898                           
 17899                           	psect	text85
 17900  0000'                    __ptext85:
 17901                           	opt stack 0
 17902  0000'                    _UpdateChannelIdStatus:
 17903                           	opt stack 17
 17904                           
 17905                           ; BSR set to: 0
 17906                           ;incstack = 0
 17907                           ;UpdateChannelIdStatus@channelId stored from wreg
 17908  0000' 0100               	movlb	0	; () banked
 17909  0002' 6F00'              	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 17910                           
 17911                           ;lorawan_eu.c: 1044: uint8_t i;
 17912                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 17913  0004' 0100               	movlb	0	; () banked
 17914  0006' 5100'              	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17915  0008' 0D0E               	mullw	14
 17916  000A' 0E04               	movlw	4
 17917  000C' 26F3               	addwf	prodl,f,c
 17918  000E' 0E00               	movlw	0
 17919  0010' 22F4               	addwfc	prodh,f,c
 17920  0012' 0E00'              	movlw	low _Channels
 17921  0014' 24F3               	addwf	prodl,w,c
 17922  0016' 6ED9               	movwf	fsr2l,c
 17923  0018' 0E00'              	movlw	high _Channels
 17924  001A' 20F4               	addwfc	prodh,w,c
 17925  001C' 6EDA               	movwf	fsr2h,c
 17926  001E' C000' FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 17927                           
 17928                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 17929  0022' 5100'              	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17930  0024' 0D0E               	mullw	14
 17931  0026' 0E04               	movlw	4
 17932  0028' 26F3               	addwf	prodl,f,c
 17933  002A' 0E00               	movlw	0
 17934  002C' 22F4               	addwfc	prodh,f,c
 17935  002E' 0E00'              	movlw	low _Channels
 17936  0030' 24F3               	addwf	prodl,w,c
 17937  0032' 6ED9               	movwf	fsr2l,c
 17938  0034' 0E00'              	movlw	high _Channels
 17939  0036' 20F4               	addwfc	prodh,w,c
 17940  0038' 6EDA               	movwf	fsr2h,c
 17941  003A' 50DF               	movf	indf2,w,c
 17942  003C' A4D8               	btfss	status,2,c
 17943  003E' D010               	goto	l1225
 17944                           
 17945                           ; BSR set to: 0
 17946                           ;lorawan_eu.c: 1048: {
 17947                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 17948  0040' 5100'              	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17949  0042' 0D0E               	mullw	14
 17950  0044' 0E08               	movlw	8
 17951  0046' 26F3               	addwf	prodl,f,c
 17952  0048' 0E00               	movlw	0
 17953  004A' 22F4               	addwfc	prodh,f,c
 17954  004C' 0E00'              	movlw	low _Channels
 17955  004E' 24F3               	addwf	prodl,w,c
 17956  0050' 6ED9               	movwf	fsr2l,c
 17957  0052' 0E00'              	movlw	high _Channels
 17958  0054' 20F4               	addwfc	prodh,w,c
 17959  0056' 6EDA               	movwf	fsr2h,c
 17960  0058' 6ADE               	clrf	postinc2,c
 17961  005A' 6ADE               	clrf	postinc2,c
 17962  005C' 6ADE               	clrf	postinc2,c
 17963  005E' 6ADD               	clrf	postdec2,c
 17964  0060'                    l1225:
 17965                           
 17966                           ; BSR set to: 0
 17967                           ;lorawan_eu.c: 1051: }
 17968                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 17969                           
 17970                           ; BSR set to: 0
 17971  0060' 0E00               	movlw	0
 17972  0062' 6F00'              	movwf	UpdateChannelIdStatus@i& (0+255),b
 17973  0064' D06D               	goto	l1226
 17974  0066'                    
 17975                           ; BSR set to: 0
 17976                           ;lorawan_eu.c: 1054: {
 17977                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 17978                           
 17979                           ; BSR set to: 0
 17980  0066' 5100'              	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17981  0068' 0D0E               	mullw	14
 17982  006A' 0E05               	movlw	5
 17983  006C' 26F3               	addwf	prodl,f,c
 17984  006E' 0E00               	movlw	0
 17985  0070' 22F4               	addwfc	prodh,f,c
 17986  0072' 0E00'              	movlw	low _Channels
 17987  0074' 24F3               	addwf	prodl,w,c
 17988  0076' 6ED9               	movwf	fsr2l,c
 17989  0078' 0E00'              	movlw	high _Channels
 17990  007A' 20F4               	addwfc	prodh,w,c
 17991  007C' 6EDA               	movwf	fsr2h,c
 17992  007E' 0104               	movlb	4	; () banked
 17993  0080' 50DF               	movf	223,w,c
 17994  0082' 0B0F               	andlw	15
 17995  0084' 0100               	movlb	0	; () banked
 17996  0086' 6F00'              	movwf	??_UpdateChannelIdStatus& (0+255),b
 17997  0088' 0102               	movlb	2	; () banked
 17998  008A' 5100'              	movf	(_loRa+235)& (0+255),w,b
 17999  008C' 0100               	movlb	0	; () banked
 18000  008E' 5D00'              	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 18001  0090' B0D8               	btfsc	status,0,c
 18002  0092' D020               	goto	l1228
 18003                           
 18004                           ; BSR set to: 0
 18005  0094' 5100'              	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18006  0096' 0D0E               	mullw	14
 18007  0098' 0E04               	movlw	4
 18008  009A' 26F3               	addwf	prodl,f,c
 18009  009C' 0E00               	movlw	0
 18010  009E' 22F4               	addwfc	prodh,f,c
 18011  00A0' 0E00'              	movlw	low _Channels
 18012  00A2' 24F3               	addwf	prodl,w,c
 18013  00A4' 6ED9               	movwf	fsr2l,c
 18014  00A6' 0E00'              	movlw	high _Channels
 18015  00A8' 20F4               	addwfc	prodh,w,c
 18016  00AA' 6EDA               	movwf	fsr2h,c
 18017  00AC' 04DE               	decf	postinc2,w,c
 18018  00AE' A4D8               	btfss	status,2,c
 18019  00B0' D011               	goto	l1228
 18020                           
 18021                           ; BSR set to: 0
 18022                           ;lorawan_eu.c: 1056: {
 18023                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 18024  00B2' 5100'              	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18025  00B4' 0D0E               	mullw	14
 18026  00B6' 0E05               	movlw	5
 18027  00B8' 26F3               	addwf	prodl,f,c
 18028  00BA' 0E00               	movlw	0
 18029  00BC' 22F4               	addwfc	prodh,f,c
 18030  00BE' 0E00'              	movlw	low _Channels
 18031  00C0' 24F3               	addwf	prodl,w,c
 18032  00C2' 6ED9               	movwf	fsr2l,c
 18033  00C4' 0E00'              	movlw	high _Channels
 18034  00C6' 20F4               	addwfc	prodh,w,c
 18035  00C8' 6EDA               	movwf	fsr2h,c
 18036  00CA' 0104               	movlb	4	; () banked
 18037  00CC' 50DF               	movf	223,w,c
 18038  00CE' 0B0F               	andlw	15
 18039  00D0' 0102               	movlb	2	; () banked
 18040  00D2' 6F00'              	movwf	(_loRa+235)& (0+255),b
 18041  00D4'                    l1228:
 18042                           
 18043                           ;lorawan_eu.c: 1058: }
 18044                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 18045  00D4' 0100               	movlb	0	; () banked
 18046  00D6' 5100'              	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18047  00D8' 0D0E               	mullw	14
 18048  00DA' 0E05               	movlw	5
 18049  00DC' 26F3               	addwf	prodl,f,c
 18050  00DE' 0E00               	movlw	0
 18051  00E0' 22F4               	addwfc	prodh,f,c
 18052  00E2' 0E00'              	movlw	low _Channels
 18053  00E4' 24F3               	addwf	prodl,w,c
 18054  00E6' 6ED9               	movwf	fsr2l,c
 18055  00E8' 0E00'              	movlw	high _Channels
 18056  00EA' 20F4               	addwfc	prodh,w,c
 18057  00EC' 6EDA               	movwf	fsr2h,c
 18058  00EE' 0104               	movlb	4	; () banked
 18059  00F0' 38DF               	swapf	223,w,c
 18060  00F2' 0B0F               	andlw	15
 18061  00F4' 0102               	movlb	2	; () banked
 18062  00F6' 6100'              	cpfslt	(_loRa+236)& (0+255),b
 18063  00F8' D021               	goto	l1229
 18064                           
 18065                           ; BSR set to: 2
 18066  00FA' 0100               	movlb	0	; () banked
 18067  00FC' 5100'              	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18068  00FE' 0D0E               	mullw	14
 18069  0100' 0E04               	movlw	4
 18070  0102' 26F3               	addwf	prodl,f,c
 18071  0104' 0E00               	movlw	0
 18072  0106' 22F4               	addwfc	prodh,f,c
 18073  0108' 0E00'              	movlw	low _Channels
 18074  010A' 24F3               	addwf	prodl,w,c
 18075  010C' 6ED9               	movwf	fsr2l,c
 18076  010E' 0E00'              	movlw	high _Channels
 18077  0110' 20F4               	addwfc	prodh,w,c
 18078  0112' 6EDA               	movwf	fsr2h,c
 18079  0114' 04DE               	decf	postinc2,w,c
 18080  0116' A4D8               	btfss	status,2,c
 18081  0118' D011               	goto	l1229
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;lorawan_eu.c: 1060: {
 18085                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 18086  011A' 5100'              	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18087  011C' 0D0E               	mullw	14
 18088  011E' 0E05               	movlw	5
 18089  0120' 26F3               	addwf	prodl,f,c
 18090  0122' 0E00               	movlw	0
 18091  0124' 22F4               	addwfc	prodh,f,c
 18092  0126' 0E00'              	movlw	low _Channels
 18093  0128' 24F3               	addwf	prodl,w,c
 18094  012A' 6ED9               	movwf	fsr2l,c
 18095  012C' 0E00'              	movlw	high _Channels
 18096  012E' 20F4               	addwfc	prodh,w,c
 18097  0130' 6EDA               	movwf	fsr2h,c
 18098  0132' 0104               	movlb	4	; () banked
 18099  0134' 38DF               	swapf	223,w,c
 18100  0136' 0B0F               	andlw	15
 18101  0138' 0102               	movlb	2	; () banked
 18102  013A' 6F00'              	movwf	(_loRa+236)& (0+255),b
 18103  013C'                    l1229:
 18104                           
 18105                           ; BSR set to: 2
 18106  013C' 0100               	movlb	0	; () banked
 18107  013E' 2B00'              	incf	UpdateChannelIdStatus@i& (0+255),f,b
 18108  0140'                    l1226:
 18109                           
 18110                           ; BSR set to: 0
 18111                           
 18112                           ; BSR set to: 0
 18113  0140' 0102               	movlb	2	; () banked
 18114  0142' 5100'              	movf	(_loRa+237)& (0+255),w,b
 18115  0144' 0100               	movlb	0	; () banked
 18116  0146' 5D00'              	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 18117  0148' A0D8               	btfss	status,0,c
 18118  014A' D78D               	goto	l1227
 18119                           
 18120                           ; BSR set to: 0
 18121                           ;lorawan_eu.c: 1062: }
 18122                           ;lorawan_eu.c: 1063: }
 18123                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 18124                           
 18125                           ; BSR set to: 0
 18126  014C' 0102               	movlb	2	; () banked
 18127  014E' 5100'              	movf	(_loRa+223)& (0+255),w,b
 18128  0150' 5D00'              	subwf	(_loRa+236)& (0+255),w,b
 18129  0152' A0D8               	btfss	status,0,c
 18130                           
 18131                           ; BSR set to: 2
 18132                           ;lorawan_eu.c: 1066: {
 18133                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 18134  0154' C0EC' F0DF'        	movff	_loRa+236,_loRa+223
 18135                           
 18136                           ; BSR set to: 2
 18137                           ;lorawan_eu.c: 1068: }
 18138                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 18139                           
 18140                           ; BSR set to: 2
 18141  0158' 5100'              	movf	(_loRa+235)& (0+255),w,b
 18142  015A' 5D00'              	subwf	(_loRa+223)& (0+255),w,b
 18143  015C' B0D8               	btfsc	status,0,c
 18144  015E' 0012               	return	
 18145                           
 18146                           ; BSR set to: 2
 18147                           ;lorawan_eu.c: 1071: {
 18148                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 18149  0160' C0EB' F0DF'        	movff	_loRa+235,_loRa+223
 18150  0164' 0012               	return	
 18151  0166'                    __end_of_UpdateChannelIdStatus:
 18152                           	opt stack 0
 18153                           tosu	equ	0xFFF
 18154                           tosh	equ	0xFFE
 18155                           tosl	equ	0xFFD
 18156                           pclath	equ	0xFFA
 18157                           tblptru	equ	0xFF8
 18158                           tblptrh	equ	0xFF7
 18159                           tblptrl	equ	0xFF6
 18160                           tablat	equ	0xFF5
 18161                           prodh	equ	0xFF4
 18162                           prodl	equ	0xFF3
 18163                           intcon	equ	0xFF2
 18164                           intcon2	equ	0xFF1
 18165                           intcon3	equ	0xFF0
 18166                           indf0	equ	0xFEF
 18167                           postinc0	equ	0xFEE
 18168                           fsr0h	equ	0xFEA
 18169                           fsr0l	equ	0xFE9
 18170                           wreg	equ	0xFE8
 18171                           postinc1	equ	0xFE6
 18172                           postdec1	equ	0xFE5
 18173                           plusw1	equ	0xFE3
 18174                           fsr1h	equ	0xFE2
 18175                           fsr1l	equ	0xFE1
 18176                           indf2	equ	0xFDF
 18177                           postinc2	equ	0xFDE
 18178                           postdec2	equ	0xFDD
 18179                           plusw2	equ	0xFDB
 18180                           fsr2h	equ	0xFDA
 18181                           fsr2l	equ	0xFD9
 18182                           status	equ	0xFD8
 18183                           
 18184 ;; *************** function _ExecuteDutyCycle *****************
 18185 ;; Defined at:
 18186 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18187 ;; Parameters:    Size  Location     Type
 18188 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 18189 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18190 ;; Auto vars:     Size  Location     Type
 18191 ;;  maxDCycle       1    5[BANK0 ] unsigned char 
 18192 ;; Return value:  Size  Location     Type
 18193 ;;                  2    0[BANK0 ] PTR unsigned char 
 18194 ;; Registers used:
 18195 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18196 ;; Tracked objects:
 18197 ;;		On entry : 0/0
 18198 ;;		On exit  : 0/0
 18199 ;;		Unchanged: 0/0
 18200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18201 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18202 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18203 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18204 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18205 ;;Total ram usage:        6 bytes
 18206 ;; Hardware stack levels used:    1
 18207 ;; Hardware stack levels required when called:    7
 18208 ;; This function calls:
 18209 ;;		Nothing
 18210 ;; This function is called by:
 18211 ;;		_MacExecuteCommands
 18212 ;; This function uses a non-reentrant model
 18213 ;;
 18214                           
 18215                           	psect	text86
 18216  0000'                    __ptext86:
 18217                           	opt stack 0
 18218  0000'                    _ExecuteDutyCycle:
 18219                           	opt stack 18
 18220                           
 18221                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 18222                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 18223                           
 18224                           ; BSR set to: 2
 18225                           ;incstack = 0
 18226  0000' C000' FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 18227  0004' C001' FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 18228  0008' 50DF               	movf	indf2,w,c
 18229  000A' 0100               	movlb	0	; () banked
 18230  000C' 6F00'              	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 18231                           
 18232                           ; BSR set to: 0
 18233  000E' 4B00'              	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 18234  0010' 2B00'              	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 18235                           
 18236                           ; BSR set to: 0
 18237                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 18238  0012' 0E0F               	movlw	15
 18239  0014' 6100'              	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 18240  0016' D013               	goto	l1104
 18241                           
 18242                           ; BSR set to: 0
 18243                           ;lorawan_eu.c: 600: {
 18244                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 18245  0018' C005' F002'        	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 18246  001C' 0E01               	movlw	1
 18247  001E' 6F00'              	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 18248  0020' 0E00               	movlw	0
 18249  0022' 6F00'              	movwf	(??_ExecuteDutyCycle+2)& (0+255),b
 18250  0024' 2B00'              	incf	??_ExecuteDutyCycle& (0+255),f,b
 18251  0026' D003               	goto	u16564
 18252  0028'                    u16565:
 18253  0028' 90D8               	bcf	status,0,c
 18254  002A' 3700'              	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 18255  002C' 3700'              	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 18256  002E'                    u16564:
 18257  002E' 2F00'              	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 18258  0030' D7FB               	goto	u16565
 18259  0032' C003' F0DB'        	movff	??_ExecuteDutyCycle+1,_loRa+219
 18260  0036' C004' F0DC'        	movff	??_ExecuteDutyCycle+2,_loRa+220
 18261                           
 18262                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 18263  003A' 0102               	movlb	2	; () banked
 18264  003C' 8D00'              	bsf	(_loRa+3)& (0+255),6,b
 18265  003E'                    l1104:
 18266                           
 18267                           ;lorawan_eu.c: 603: }
 18268                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 18269  003E' 0100               	movlb	0	; () banked
 18270  0040' 2900'              	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 18271  0042' A4D8               	btfss	status,2,c
 18272  0044' D002               	goto	l1105
 18273                           
 18274                           ; BSR set to: 0
 18275                           ;lorawan_eu.c: 606: {
 18276                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 18277  0046' 0102               	movlb	2	; () banked
 18278  0048' 8F00'              	bsf	(_loRa+2)& (0+255),7,b
 18279  004A'                    l1105:
 18280                           
 18281                           ;lorawan_eu.c: 608: }
 18282                           ;lorawan_eu.c: 610: return ptr;
 18283                           
 18284                           ; BSR set to: 2
 18285  004A' C000' F000'        	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 18286  004E' C001' F001'        	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 18287  0052' 0012               	return	
 18288  0054'                    __end_of_ExecuteDutyCycle:
 18289                           	opt stack 0
 18290                           tosu	equ	0xFFF
 18291                           tosh	equ	0xFFE
 18292                           tosl	equ	0xFFD
 18293                           pclath	equ	0xFFA
 18294                           tblptru	equ	0xFF8
 18295                           tblptrh	equ	0xFF7
 18296                           tblptrl	equ	0xFF6
 18297                           tablat	equ	0xFF5
 18298                           prodh	equ	0xFF4
 18299                           prodl	equ	0xFF3
 18300                           intcon	equ	0xFF2
 18301                           intcon2	equ	0xFF1
 18302                           intcon3	equ	0xFF0
 18303                           indf0	equ	0xFEF
 18304                           postinc0	equ	0xFEE
 18305                           fsr0h	equ	0xFEA
 18306                           fsr0l	equ	0xFE9
 18307                           wreg	equ	0xFE8
 18308                           postinc1	equ	0xFE6
 18309                           postdec1	equ	0xFE5
 18310                           plusw1	equ	0xFE3
 18311                           fsr1h	equ	0xFE2
 18312                           fsr1l	equ	0xFE1
 18313                           indf2	equ	0xFDF
 18314                           postinc2	equ	0xFDE
 18315                           postdec2	equ	0xFDD
 18316                           plusw2	equ	0xFDB
 18317                           fsr2h	equ	0xFDA
 18318                           fsr2l	equ	0xFD9
 18319                           status	equ	0xFD8
 18320                           
 18321 ;; *************** function _ExecuteDevStatus *****************
 18322 ;; Defined at:
 18323 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18324 ;; Parameters:    Size  Location     Type
 18325 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 18326 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18327 ;; Auto vars:     Size  Location     Type
 18328 ;;		None
 18329 ;; Return value:  Size  Location     Type
 18330 ;;                  2    0[BANK0 ] PTR unsigned char 
 18331 ;; Registers used:
 18332 ;;		wreg, status,2, status,0
 18333 ;; Tracked objects:
 18334 ;;		On entry : 0/0
 18335 ;;		On exit  : 0/0
 18336 ;;		Unchanged: 0/0
 18337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18338 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18341 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18342 ;;Total ram usage:        2 bytes
 18343 ;; Hardware stack levels used:    1
 18344 ;; Hardware stack levels required when called:    7
 18345 ;; This function calls:
 18346 ;;		Nothing
 18347 ;; This function is called by:
 18348 ;;		_MacExecuteCommands
 18349 ;; This function uses a non-reentrant model
 18350 ;;
 18351                           
 18352                           	psect	text87
 18353  0000'                    __ptext87:
 18354                           	opt stack 0
 18355  0000'                    _ExecuteDevStatus:
 18356                           	opt stack 18
 18357                           
 18358                           ;lorawan_eu.c: 674: return ptr;
 18359                           
 18360                           ;incstack = 0
 18361  0000' C000' F000'        	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 18362  0004' C001' F001'        	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 18363  0008' 0012               	return	
 18364  000A'                    __end_of_ExecuteDevStatus:
 18365                           	opt stack 0
 18366                           tosu	equ	0xFFF
 18367                           tosh	equ	0xFFE
 18368                           tosl	equ	0xFFD
 18369                           pclath	equ	0xFFA
 18370                           tblptru	equ	0xFF8
 18371                           tblptrh	equ	0xFF7
 18372                           tblptrl	equ	0xFF6
 18373                           tablat	equ	0xFF5
 18374                           prodh	equ	0xFF4
 18375                           prodl	equ	0xFF3
 18376                           intcon	equ	0xFF2
 18377                           intcon2	equ	0xFF1
 18378                           intcon3	equ	0xFF0
 18379                           indf0	equ	0xFEF
 18380                           postinc0	equ	0xFEE
 18381                           fsr0h	equ	0xFEA
 18382                           fsr0l	equ	0xFE9
 18383                           wreg	equ	0xFE8
 18384                           postinc1	equ	0xFE6
 18385                           postdec1	equ	0xFE5
 18386                           plusw1	equ	0xFE3
 18387                           fsr1h	equ	0xFE2
 18388                           fsr1l	equ	0xFE1
 18389                           indf2	equ	0xFDF
 18390                           postinc2	equ	0xFDE
 18391                           postdec2	equ	0xFDD
 18392                           plusw2	equ	0xFDB
 18393                           fsr2h	equ	0xFDA
 18394                           fsr2l	equ	0xFD9
 18395                           status	equ	0xFD8
 18396                           
 18397 ;; *************** function _LORAWAN_Send *****************
 18398 ;; Defined at:
 18399 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18400 ;; Parameters:    Size  Location     Type
 18401 ;;  confirmed       1    wreg     enum E7217
 18402 ;;  port            1  115[BANK0 ] unsigned char 
 18403 ;;  buffer          2  116[BANK0 ] PTR void 
 18404 ;;		 -> STR_1(5), NULL(0), 
 18405 ;;  bufferLength    1  118[BANK0 ] unsigned char 
 18406 ;; Auto vars:     Size  Location     Type
 18407 ;;  confirmed       1  121[BANK0 ] enum E7217
 18408 ;;  result          1  120[BANK0 ] enum E7190
 18409 ;; Return value:  Size  Location     Type
 18410 ;;                  1    wreg      enum E7190
 18411 ;; Registers used:
 18412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 18413 ;; Tracked objects:
 18414 ;;		On entry : 0/0
 18415 ;;		On exit  : 0/0
 18416 ;;		Unchanged: 0/0
 18417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18418 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18419 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18420 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18421 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18422 ;;Total ram usage:        7 bytes
 18423 ;; Hardware stack levels used:    1
 18424 ;; Hardware stack levels required when called:   13
 18425 ;; This function calls:
 18426 ;;		_AssemblePacket
 18427 ;;		_LORAWAN_GetMaxPayloadSize
 18428 ;;		_RADIO_ReceiveStop
 18429 ;;		_RADIO_Transmit
 18430 ;;		_SelectChannelForTransmission
 18431 ;; This function is called by:
 18432 ;;		_AutomaticReplyCallback
 18433 ;;		_LORAWAN_RxDone
 18434 ;;		_main
 18435 ;; This function uses a non-reentrant model
 18436 ;;
 18437                           
 18438                           	psect	text88
 18439  0000'                    __ptext88:
 18440                           	opt stack 0
 18441  0000'                    _LORAWAN_Send:
 18442                           	opt stack 17
 18443                           
 18444                           ;incstack = 0
 18445                           ;LORAWAN_Send@confirmed stored from wreg
 18446  0000' 0100               	movlb	0	; () banked
 18447  0002' 6F00'              	movwf	LORAWAN_Send@confirmed& (0+255),b
 18448                           
 18449                           ;lorawan.c: 187: LorawanError_t result;
 18450                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 18451  0004' 0102               	movlb	2	; () banked
 18452  0006' B100'              	btfsc	(_loRa+3)& (0+255),0,b
 18453  0008' 0012               	return	
 18454                           
 18455                           ; BSR set to: 2
 18456                           ;lorawan.c: 192: }
 18457                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 18458                           
 18459                           ; BSR set to: 2
 18460                           ;lorawan.c: 190: {
 18461                           ;lorawan.c: 191: return MAC_PAUSED;
 18462                           ;	Return value of _LORAWAN_Send is never used
 18463  000A' BF00'              	btfsc	(_loRa+2)& (0+255),7,b
 18464  000C' 0012               	return	
 18465                           
 18466                           ; BSR set to: 2
 18467                           ;lorawan.c: 197: }
 18468                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 18469                           
 18470                           ; BSR set to: 2
 18471                           ;lorawan.c: 195: {
 18472                           ;lorawan.c: 196: return SILENT_IMMEDIATELY_ACTIVE;
 18473                           ;	Return value of _LORAWAN_Send is never used
 18474  000E' A900'              	btfss	(_loRa+2)& (0+255),4,b
 18475  0010' 0012               	return	
 18476                           
 18477                           ; BSR set to: 2
 18478                           ;lorawan.c: 202: }
 18479                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 18480                           
 18481                           ; BSR set to: 2
 18482                           
 18483                           ; BSR set to: 2
 18484                           ;lorawan.c: 200: {
 18485                           ;lorawan.c: 201: return NETWORK_NOT_JOINED;
 18486                           ;	Return value of _LORAWAN_Send is never used
 18487  0012' 0100               	movlb	0	; () banked
 18488  0014' 5100'              	movf	LORAWAN_Send@port& (0+255),w,b
 18489  0016' A4D8               	btfss	status,2,c
 18490  0018' D003               	goto	l1526
 18491                           
 18492                           ; BSR set to: 0
 18493  001A' 5100'              	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18494  001C' A4D8               	btfss	status,2,c
 18495  001E' 0012               	return	
 18496  0020'                    l1526:
 18497                           
 18498                           ; BSR set to: 0
 18499                           ;lorawan.c: 207: }
 18500                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 18501                           
 18502                           ; BSR set to: 0
 18503  0020' EC00' F000'        	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 18504  0024' 0100               	movlb	0	; () banked
 18505  0026' 6F00'              	movwf	??_LORAWAN_Send& (0+255),b
 18506  0028' 5100'              	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18507  002A' 5D00'              	subwf	??_LORAWAN_Send& (0+255),w,b
 18508  002C' A0D8               	btfss	status,0,c
 18509  002E' 0012               	return	
 18510                           
 18511                           ; BSR set to: 0
 18512                           ;lorawan.c: 213: }
 18513                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 18514                           
 18515                           ; BSR set to: 0
 18516                           
 18517                           ; BSR set to: 0
 18518                           ;lorawan.c: 211: {
 18519                           ;lorawan.c: 212: return INVALID_BUFFER_LENGTH;
 18520                           ;	Return value of _LORAWAN_Send is never used
 18521  0030' 0102               	movlb	2	; () banked
 18522  0032' 2900'              	incf	(_loRa+6)& (0+255),w,b
 18523  0034' E109               	bnz	l14786
 18524  0036' 2900'              	incf	(_loRa+7)& (0+255),w,b
 18525  0038' E107               	bnz	l14786
 18526  003A' 2900'              	incf	(_loRa+8)& (0+255),w,b
 18527  003C' E105               	bnz	l14786
 18528  003E' 2900'              	incf	(_loRa+9)& (0+255),w,b
 18529  0040' A4D8               	btfss	status,2,c
 18530  0042' D002               	goto	l1528
 18531                           
 18532                           ; BSR set to: 2
 18533                           ;lorawan.c: 216: {
 18534                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 18535  0044' 8300'              	bsf	(_loRa+4)& (0+255),1,b
 18536                           
 18537                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 18538                           ;	Return value of _LORAWAN_Send is never used
 18539  0046' 0012               	return	
 18540  0048'                    l1528:
 18541  0048'                    l14786:
 18542                           
 18543                           ; BSR set to: 2
 18544                           ;lorawan.c: 220: }
 18545                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 18546  0048' 5100'              	movf	(_loRa+2)& (0+255),w,b
 18547  004A' 0B0F               	andlw	15
 18548  004C' 0900               	iorlw	0
 18549  004E' B4D8               	btfsc	status,2,c
 18550  0050' D003               	goto	l1529
 18551                           
 18552                           ; BSR set to: 2
 18553  0052' 5100'              	movf	(_loRa+18)& (0+255),w,b
 18554  0054' B4D8               	btfsc	status,2,c
 18555  0056' 0012               	return	
 18556  0058'                    l1529:
 18557                           
 18558                           ; BSR set to: 2
 18559                           ;lorawan.c: 225: }
 18560                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 18561                           
 18562                           ; BSR set to: 2
 18563  0058' 0E01               	movlw	1
 18564  005A' EC00' F000'        	call	_SelectChannelForTransmission
 18565  005E' 0100               	movlb	0	; () banked
 18566  0060' 6F00'              	movwf	LORAWAN_Send@result& (0+255),b
 18567                           
 18568                           ; BSR set to: 0
 18569                           ;lorawan.c: 228: if (result != OK)
 18570  0062' 5100'              	movf	LORAWAN_Send@result& (0+255),w,b
 18571  0064' A4D8               	btfss	status,2,c
 18572  0066' 0012               	return	
 18573                           
 18574                           ; BSR set to: 0
 18575                           ;lorawan.c: 232: else
 18576                           ;lorawan.c: 233: {
 18577                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 18578                           
 18579                           ; BSR set to: 0
 18580                           
 18581                           ; BSR set to: 0
 18582                           ;lorawan.c: 231: }
 18583                           
 18584                           ; BSR set to: 0
 18585                           ;lorawan.c: 229: {
 18586                           ;lorawan.c: 230: return result;
 18587                           ;	Return value of _LORAWAN_Send is never used
 18588  0068' 0E02               	movlw	2
 18589  006A' 0102               	movlb	2	; () banked
 18590  006C' 1900'              	xorwf	(_loRa+18)& (0+255),w,b
 18591  006E' B4D8               	btfsc	status,2,c
 18592                           
 18593                           ; BSR set to: 2
 18594                           ;lorawan.c: 235: {
 18595                           ;lorawan.c: 236: RADIO_ReceiveStop();
 18596  0070' EC00' F000'        	call	_RADIO_ReceiveStop	;wreg free
 18597                           
 18598                           ;lorawan.c: 237: }
 18599                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 18600  0074' C073' F067'        	movff	LORAWAN_Send@port,AssemblePacket@port
 18601  0078' C074' F068'        	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 18602  007C' C075' F069'        	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 18603  0080' C076' F06A'        	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 18604  0084' 0100               	movlb	0	; () banked
 18605  0086' 6B00'              	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 18606  0088' 5100'              	movf	LORAWAN_Send@confirmed& (0+255),w,b
 18607  008A' EC00' F000'        	call	_AssemblePacket
 18608                           
 18609                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 18610  008E' 0E00'              	movlw	low (_macBuffer+16)
 18611  0090' 0100               	movlb	0	; () banked
 18612  0092' 6F00'              	movwf	RADIO_Transmit@buffer& (0+255),b
 18613  0094' 0E00'              	movlw	high (_macBuffer+16)
 18614  0096' 6F00'              	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 18615  0098' C0D4' F053'        	movff	_loRa+212,RADIO_Transmit@bufferLen
 18616  009C' EC00' F000'        	call	_RADIO_Transmit	;wreg free
 18617  00A0' 0100               	movlb	0	; () banked
 18618  00A2' 5100'              	movf	?_RADIO_Transmit& (0+255),w,b
 18619  00A4' 1100'              	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 18620  00A6' A4D8               	btfss	status,2,c
 18621  00A8' 0012               	return	
 18622                           
 18623                           ; BSR set to: 0
 18624                           ;lorawan.c: 242: {
 18625                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 18626  00AA' 0E01               	movlw	1
 18627  00AC' 0102               	movlb	2	; () banked
 18628  00AE' 2700'              	addwf	(_loRa+6)& (0+255),f,b
 18629  00B0' 0E00               	movlw	0
 18630  00B2' 2300'              	addwfc	(_loRa+7)& (0+255),f,b
 18631  00B4' 2300'              	addwfc	(_loRa+8)& (0+255),f,b
 18632  00B6' 2300'              	addwfc	(_loRa+9)& (0+255),f,b
 18633                           
 18634                           ;lorawan.c: 245: if (CNF == confirmed)
 18635  00B8' 0100               	movlb	0	; () banked
 18636  00BA' 0500'              	decf	LORAWAN_Send@confirmed& (0+255),w,b
 18637  00BC' A4D8               	btfss	status,2,c
 18638  00BE' D002               	goto	l1534
 18639                           
 18640                           ; BSR set to: 0
 18641                           ;lorawan.c: 246: {
 18642                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 18643  00C0' 0102               	movlb	2	; () banked
 18644  00C2' 8100'              	bsf	_loRa& (0+255),0,b
 18645  00C4'                    l1534:
 18646                           
 18647                           ;lorawan.c: 248: }
 18648                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 18649  00C4' 0102               	movlb	2	; () banked
 18650  00C6' 8B00'              	bsf	_loRa& (0+255),5,b
 18651                           
 18652                           ; BSR set to: 2
 18653                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 18654  00C8' 5100'              	movf	(_loRa+2)& (0+255),w,b
 18655  00CA' 0BF0               	andlw	-16
 18656  00CC' 0901               	iorlw	1
 18657  00CE' 6F00'              	movwf	(_loRa+2)& (0+255),b
 18658                           
 18659                           ; BSR set to: 2
 18660                           
 18661                           ; BSR set to: 2
 18662                           ;lorawan.c: 252: else
 18663                           ;lorawan.c: 253: {
 18664                           ;lorawan.c: 254: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 18665                           ;	Return value of _LORAWAN_Send is never used
 18666                           
 18667                           ;lorawan.c: 251: }
 18668  00D0' 0012               	return	
 18669  00D2'                    __end_of_LORAWAN_Send:
 18670                           	opt stack 0
 18671                           tosu	equ	0xFFF
 18672                           tosh	equ	0xFFE
 18673                           tosl	equ	0xFFD
 18674                           pclath	equ	0xFFA
 18675                           tblptru	equ	0xFF8
 18676                           tblptrh	equ	0xFF7
 18677                           tblptrl	equ	0xFF6
 18678                           tablat	equ	0xFF5
 18679                           prodh	equ	0xFF4
 18680                           prodl	equ	0xFF3
 18681                           intcon	equ	0xFF2
 18682                           intcon2	equ	0xFF1
 18683                           intcon3	equ	0xFF0
 18684                           indf0	equ	0xFEF
 18685                           postinc0	equ	0xFEE
 18686                           fsr0h	equ	0xFEA
 18687                           fsr0l	equ	0xFE9
 18688                           wreg	equ	0xFE8
 18689                           postinc1	equ	0xFE6
 18690                           postdec1	equ	0xFE5
 18691                           plusw1	equ	0xFE3
 18692                           fsr1h	equ	0xFE2
 18693                           fsr1l	equ	0xFE1
 18694                           indf2	equ	0xFDF
 18695                           postinc2	equ	0xFDE
 18696                           postdec2	equ	0xFDD
 18697                           plusw2	equ	0xFDB
 18698                           fsr2h	equ	0xFDA
 18699                           fsr2l	equ	0xFD9
 18700                           status	equ	0xFD8
 18701                           
 18702 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 18703 ;; Defined at:
 18704 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18705 ;; Parameters:    Size  Location     Type
 18706 ;;		None
 18707 ;; Auto vars:     Size  Location     Type
 18708 ;;  result          1   10[BANK0 ] unsigned char 
 18709 ;;  macCommandsL    1    9[BANK0 ] unsigned char 
 18710 ;; Return value:  Size  Location     Type
 18711 ;;                  1    wreg      unsigned char 
 18712 ;; Registers used:
 18713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18714 ;; Tracked objects:
 18715 ;;		On entry : 0/0
 18716 ;;		On exit  : 0/0
 18717 ;;		Unchanged: 0/0
 18718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18720 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18722 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18723 ;;Total ram usage:        3 bytes
 18724 ;; Hardware stack levels used:    1
 18725 ;; Hardware stack levels required when called:    8
 18726 ;; This function calls:
 18727 ;;		_CountfOptsLength
 18728 ;; This function is called by:
 18729 ;;		_LORAWAN_Send
 18730 ;;		_AckRetransmissionCallback
 18731 ;; This function uses a non-reentrant model
 18732 ;;
 18733                           
 18734                           	psect	text89
 18735  0000'                    __ptext89:
 18736                           	opt stack 0
 18737  0000'                    _LORAWAN_GetMaxPayloadSize:
 18738                           	opt stack 21
 18739                           
 18740                           ;lorawan.c: 1558: uint8_t result = 0;
 18741                           
 18742                           ;incstack = 0
 18743  0000' 0E00               	movlw	0
 18744  0002' 0100               	movlb	0	; () banked
 18745  0004' 6F00'              	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 18746                           
 18747                           ; BSR set to: 0
 18748                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 18749                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 18750  0006' EC00' F000'        	call	_CountfOptsLength	;wreg free
 18751  000A' 0100               	movlb	0	; () banked
 18752  000C' 6F00'              	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 18753                           
 18754                           ; BSR set to: 0
 18755                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 18756  000E' 0102               	movlb	2	; () banked
 18757  0010' 5100'              	movf	(_loRa+167)& (0+255),w,b
 18758  0012' A4D8               	btfss	status,2,c
 18759  0014' D00F               	goto	l1988
 18760                           
 18761                           ; BSR set to: 2
 18762                           ;lorawan.c: 1564: {
 18763                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 18764  0016' 5100'              	movf	(_loRa+223)& (0+255),w,b
 18765  0018' 0D01               	mullw	1
 18766  001A' 0E00'              	movlw	low _maxPayloadSize
 18767  001C' 24F3               	addwf	prodl,w,c
 18768  001E' 6EF6               	movwf	tblptrl,c
 18769  0020' 0E00'              	movlw	high _maxPayloadSize
 18770  0022' 20F4               	addwfc	prodh,w,c
 18771  0024' 6EF7               	movwf	tblptrh,c
 18772  0026'                    	if	1	;There are 3 active tblptr bytes
 18773  0026' 6AF8               	clrf	tblptru,c
 18774  0028' 0E00'              	movlw	low (__mediumconst shr (0+16))
 18775  002A' 22F8               	addwfc	tblptru,f,c
 18776  002C'                    	endif
 18777  002C' 0008               	tblrd		*
 18778  002E' CFF5 F00A'         	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 18779                           
 18780                           ;lorawan.c: 1566: }
 18781  0032' D013               	goto	l1989
 18782  0034'                    l1988:
 18783                           
 18784                           ; BSR set to: 2
 18785                           ;lorawan.c: 1567: else
 18786                           ;lorawan.c: 1568: {
 18787                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 18788                           
 18789                           ; BSR set to: 2
 18790  0034' 5100'              	movf	(_loRa+223)& (0+255),w,b
 18791  0036' 0D01               	mullw	1
 18792  0038' 0E00'              	movlw	low _maxPayloadSize
 18793  003A' 24F3               	addwf	prodl,w,c
 18794  003C' 6EF6               	movwf	tblptrl,c
 18795  003E' 0E00'              	movlw	high _maxPayloadSize
 18796  0040' 20F4               	addwfc	prodh,w,c
 18797  0042' 6EF7               	movwf	tblptrh,c
 18798  0044'                    	if	1	;There are 3 active tblptr bytes
 18799  0044' 6AF8               	clrf	tblptru,c
 18800  0046' 0E00'              	movlw	low (__mediumconst shr (0+16))
 18801  0048' 22F8               	addwfc	tblptru,f,c
 18802  004A'                    	endif
 18803  004A' 0008               	tblrd		*
 18804  004C' CFF5 F008'         	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 18805  0050' 0100               	movlb	0	; () banked
 18806  0052' 5100'              	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 18807  0054' 0800               	sublw	0
 18808  0056' 2500'              	addwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 18809  0058' 6F00'              	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 18810  005A'                    l1989:
 18811                           
 18812                           ;lorawan.c: 1570: }
 18813                           ;lorawan.c: 1572: return result;
 18814                           
 18815                           ; BSR set to: 0
 18816  005A' 0100               	movlb	0	; () banked
 18817  005C' 5100'              	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 18818  005E' 0012               	return	
 18819  0060'                    __end_of_LORAWAN_GetMaxPayloadSize:
 18820                           	opt stack 0
 18821                           tosu	equ	0xFFF
 18822                           tosh	equ	0xFFE
 18823                           tosl	equ	0xFFD
 18824                           pclath	equ	0xFFA
 18825                           tblptru	equ	0xFF8
 18826                           tblptrh	equ	0xFF7
 18827                           tblptrl	equ	0xFF6
 18828                           tablat	equ	0xFF5
 18829                           prodh	equ	0xFF4
 18830                           prodl	equ	0xFF3
 18831                           intcon	equ	0xFF2
 18832                           intcon2	equ	0xFF1
 18833                           intcon3	equ	0xFF0
 18834                           indf0	equ	0xFEF
 18835                           postinc0	equ	0xFEE
 18836                           fsr0h	equ	0xFEA
 18837                           fsr0l	equ	0xFE9
 18838                           wreg	equ	0xFE8
 18839                           postinc1	equ	0xFE6
 18840                           postdec1	equ	0xFE5
 18841                           plusw1	equ	0xFE3
 18842                           fsr1h	equ	0xFE2
 18843                           fsr1l	equ	0xFE1
 18844                           indf2	equ	0xFDF
 18845                           postinc2	equ	0xFDE
 18846                           postdec2	equ	0xFDD
 18847                           plusw2	equ	0xFDB
 18848                           fsr2h	equ	0xFDA
 18849                           fsr2l	equ	0xFD9
 18850                           status	equ	0xFD8
 18851                           
 18852 ;; *************** function _AssemblePacket *****************
 18853 ;; Defined at:
 18854 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18855 ;; Parameters:    Size  Location     Type
 18856 ;;  confirmed       1    wreg     unsigned char 
 18857 ;;  port            1  103[BANK0 ] unsigned char 
 18858 ;;  buffer          2  104[BANK0 ] PTR unsigned char 
 18859 ;;		 -> STR_1(5), NULL(0), 
 18860 ;;  bufferLength    2  106[BANK0 ] unsigned int 
 18861 ;; Auto vars:     Size  Location     Type
 18862 ;;  confirmed       1  110[BANK0 ] unsigned char 
 18863 ;;  bufferIndex     1  114[BANK0 ] unsigned char 
 18864 ;;  macCmdIdx       1  113[BANK0 ] unsigned char 
 18865 ;;  fCtrl           1  112[BANK0 ] struct .
 18866 ;;  mhdr            1  111[BANK0 ] struct .
 18867 ;; Return value:  Size  Location     Type
 18868 ;;                  1    wreg      void 
 18869 ;; Registers used:
 18870 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18871 ;; Tracked objects:
 18872 ;;		On entry : 0/0
 18873 ;;		On exit  : 0/0
 18874 ;;		Unchanged: 0/0
 18875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18876 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18877 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18878 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18879 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18880 ;;Total ram usage:       12 bytes
 18881 ;; Hardware stack levels used:    1
 18882 ;; Hardware stack levels required when called:   12
 18883 ;; This function calls:
 18884 ;;		_AESCmac
 18885 ;;		_AssembleEncryptionBlock
 18886 ;;		_CountfOptsLength
 18887 ;;		_EncryptFRMPayload
 18888 ;;		_FindSmallestDataRate
 18889 ;;		_IncludeMacCommandsResponse
 18890 ;;		_memcpy
 18891 ;;		_memset
 18892 ;; This function is called by:
 18893 ;;		_LORAWAN_Send
 18894 ;; This function uses a non-reentrant model
 18895 ;;
 18896                           
 18897                           	psect	text90
 18898  0000'                    __ptext90:
 18899                           	opt stack 0
 18900  0000'                    _AssemblePacket:
 18901                           	opt stack 17
 18902                           
 18903                           ; BSR set to: 0
 18904                           ;incstack = 0
 18905                           ;AssemblePacket@confirmed stored from wreg
 18906  0000' 0100               	movlb	0	; () banked
 18907  0002' 6F00'              	movwf	AssemblePacket@confirmed& (0+255),b
 18908                           
 18909                           ;lorawan.c: 1674: Mhdr_t mhdr;
 18910                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 18911  0004' 0E10               	movlw	16
 18912  0006' 0100               	movlb	0	; () banked
 18913  0008' 6F00'              	movwf	AssemblePacket@bufferIndex& (0+255),b
 18914                           
 18915                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 18916                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 18917  000A' 0E00               	movlw	0
 18918  000C' 6F00'              	movwf	AssemblePacket@macCmdIdx& (0+255),b
 18919                           
 18920                           ; BSR set to: 0
 18921                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 18922  000E' 0E00'              	movlw	low AssemblePacket@mhdr
 18923  0010' 6F00'              	movwf	memset@p1& (0+255),b
 18924  0012' 0E00'              	movlw	high AssemblePacket@mhdr
 18925  0014' 6F00'              	movwf	(memset@p1+1)& (0+255),b
 18926  0016' 0E00               	movlw	0
 18927  0018' 6F00'              	movwf	(memset@c+1)& (0+255),b
 18928  001A' 0E00               	movlw	0
 18929  001C' 6F00'              	movwf	memset@c& (0+255),b
 18930  001E' 0E00               	movlw	0
 18931  0020' 6F00'              	movwf	(memset@n+1)& (0+255),b
 18932  0022' 0E01               	movlw	1
 18933  0024' 6F00'              	movwf	memset@n& (0+255),b
 18934  0026' EC00' F000'        	call	_memset	;wreg free
 18935                           
 18936                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 18937  002A' 0E00'              	movlw	low _macBuffer
 18938  002C' 0100               	movlb	0	; () banked
 18939  002E' 6F00'              	movwf	memset@p1& (0+255),b
 18940  0030' 0E00'              	movlw	high _macBuffer
 18941  0032' 6F00'              	movwf	(memset@p1+1)& (0+255),b
 18942  0034' 0E00               	movlw	0
 18943  0036' 6F00'              	movwf	(memset@c+1)& (0+255),b
 18944  0038' 0E00               	movlw	0
 18945  003A' 6F00'              	movwf	memset@c& (0+255),b
 18946  003C' 0E01               	movlw	1
 18947  003E' 6F00'              	movwf	(memset@n+1)& (0+255),b
 18948  0040' 0E0F               	movlw	15
 18949  0042' 6F00'              	movwf	memset@n& (0+255),b
 18950  0044' EC00' F000'        	call	_memset	;wreg free
 18951                           
 18952                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 18953  0048' 0E00'              	movlw	low _aesBuffer
 18954  004A' 0100               	movlb	0	; () banked
 18955  004C' 6F00'              	movwf	memset@p1& (0+255),b
 18956  004E' 0E00'              	movlw	high _aesBuffer
 18957  0050' 6F00'              	movwf	(memset@p1+1)& (0+255),b
 18958  0052' 0E00               	movlw	0
 18959  0054' 6F00'              	movwf	(memset@c+1)& (0+255),b
 18960  0056' 0E00               	movlw	0
 18961  0058' 6F00'              	movwf	memset@c& (0+255),b
 18962  005A' 0E00               	movlw	0
 18963  005C' 6F00'              	movwf	(memset@n+1)& (0+255),b
 18964  005E' 0E10               	movlw	16
 18965  0060' 6F00'              	movwf	memset@n& (0+255),b
 18966  0062' EC00' F000'        	call	_memset	;wreg free
 18967                           
 18968                           ;lorawan.c: 1683: if (confirmed == 1)
 18969  0066' 0100               	movlb	0	; () banked
 18970  0068' 0500'              	decf	AssemblePacket@confirmed& (0+255),w,b
 18971  006A' A4D8               	btfss	status,2,c
 18972  006C' D007               	goto	l2018
 18973                           
 18974                           ; BSR set to: 0
 18975                           ;lorawan.c: 1684: {
 18976                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 18977  006E' 5100'              	movf	AssemblePacket@mhdr& (0+255),w,b
 18978  0070' 0B1F               	andlw	-225
 18979  0072' 0980               	iorlw	128
 18980  0074' 6F00'              	movwf	AssemblePacket@mhdr& (0+255),b
 18981                           
 18982                           ; BSR set to: 0
 18983                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 18984  0076' 0102               	movlb	2	; () banked
 18985  0078' 8100'              	bsf	_loRa& (0+255),0,b
 18986                           
 18987                           ;lorawan.c: 1687: }
 18988  007A' D005               	goto	l2019
 18989  007C'                    l2018:
 18990                           
 18991                           ;lorawan.c: 1688: else
 18992                           ;lorawan.c: 1689: {
 18993                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 18994                           
 18995                           ; BSR set to: 2
 18996  007C' 0100               	movlb	0	; () banked
 18997  007E' 5100'              	movf	AssemblePacket@mhdr& (0+255),w,b
 18998  0080' 0B1F               	andlw	-225
 18999  0082' 0940               	iorlw	64
 19000  0084' 6F00'              	movwf	AssemblePacket@mhdr& (0+255),b
 19001  0086'                    l2019:
 19002                           
 19003                           ;lorawan.c: 1691: }
 19004                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 19005  0086' 0EFC               	movlw	-4
 19006  0088' 0100               	movlb	0	; () banked
 19007  008A' 1700'              	andwf	AssemblePacket@mhdr& (0+255),f,b
 19008                           
 19009                           ; BSR set to: 0
 19010                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 19011  008C' 9500'              	bcf	AssemblePacket@mhdr& (0+255),2,b
 19012  008E' 9700'              	bcf	AssemblePacket@mhdr& (0+255),3,b
 19013  0090' 9900'              	bcf	AssemblePacket@mhdr& (0+255),4,b
 19014                           
 19015                           ; BSR set to: 0
 19016                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 19017  0092' 5100'              	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19018  0094' 0D01               	mullw	1
 19019  0096' 0E00'              	movlw	low _macBuffer
 19020  0098' 24F3               	addwf	prodl,w,c
 19021  009A' 6ED9               	movwf	fsr2l,c
 19022  009C' 0E00'              	movlw	high _macBuffer
 19023  009E' 20F4               	addwfc	prodh,w,c
 19024  00A0' 6EDA               	movwf	fsr2h,c
 19025  00A2' C06F' FFDF         	movff	AssemblePacket@mhdr,indf2
 19026                           
 19027                           ; BSR set to: 0
 19028  00A6' 2B00'              	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19029                           
 19030                           ; BSR set to: 0
 19031                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 19032  00A8' 5100'              	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19033  00AA' 0D01               	mullw	1
 19034  00AC' 0E00'              	movlw	low _macBuffer
 19035  00AE' 24F3               	addwf	prodl,w,c
 19036  00B0' 6F00'              	movwf	memcpy@d1& (0+255),b
 19037  00B2' 0E00'              	movlw	high _macBuffer
 19038  00B4' 20F4               	addwfc	prodh,w,c
 19039  00B6' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 19040  00B8' 0E00'              	movlw	low (_loRa+30)
 19041  00BA' 6F00'              	movwf	memcpy@s1& (0+255),b
 19042  00BC' 0E00'              	movlw	high (_loRa+30)
 19043  00BE' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 19044  00C0' 0E00               	movlw	0
 19045  00C2' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 19046  00C4' 0E04               	movlw	4
 19047  00C6' 6F00'              	movwf	memcpy@n& (0+255),b
 19048  00C8' EC00' F000'        	call	_memcpy	;wreg free
 19049                           
 19050                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 19051  00CC' 0100               	movlb	0	; () banked
 19052  00CE' 5100'              	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19053  00D0' 0F04               	addlw	4
 19054  00D2' 6F00'              	movwf	AssemblePacket@bufferIndex& (0+255),b
 19055                           
 19056                           ; BSR set to: 0
 19057                           ;lorawan.c: 1699: fCtrl.value = 0;
 19058  00D4' 0E00               	movlw	0
 19059  00D6' 6F00'              	movwf	AssemblePacket@fCtrl& (0+255),b
 19060                           
 19061                           ; BSR set to: 0
 19062                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 19063  00D8' 0102               	movlb	2	; () banked
 19064  00DA' AD00'              	btfss	(_loRa+2)& (0+255),6,b
 19065  00DC' D047               	goto	l2028
 19066                           
 19067                           ; BSR set to: 2
 19068                           ;lorawan.c: 1702: {
 19069                           ;lorawan.c: 1703: fCtrl.adr = 1;
 19070  00DE' 0100               	movlb	0	; () banked
 19071  00E0' 8F00'              	bsf	AssemblePacket@fCtrl& (0+255),7,b
 19072                           
 19073                           ; BSR set to: 0
 19074                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 19075  00E2' 0102               	movlb	2	; () banked
 19076  00E4' 5100'              	movf	(_loRa+223)& (0+255),w,b
 19077  00E6' 5D00'              	subwf	(_loRa+235)& (0+255),w,b
 19078  00E8' B0D8               	btfsc	status,0,c
 19079  00EA' D03F               	goto	l2021
 19080                           
 19081                           ; BSR set to: 2
 19082                           ;lorawan.c: 1705: {
 19083                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 19084  00EC' 0100               	movlb	0	; () banked
 19085  00EE' 8D00'              	bsf	AssemblePacket@fCtrl& (0+255),6,b
 19086                           
 19087                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 19088  00F0' 0102               	movlb	2	; () banked
 19089  00F2' 8900'              	bsf	_loRa& (0+255),4,b
 19090                           
 19091                           ; BSR set to: 2
 19092                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 19093  00F4' 4B00'              	infsnz	(_loRa+208)& (0+255),f,b
 19094  00F6' 2B00'              	incf	(_loRa+209)& (0+255),f,b
 19095                           
 19096                           ; BSR set to: 2
 19097                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 19098  00F8' 5100'              	movf	(_loRa+162)& (0+255),w,b
 19099  00FA' 0100               	movlb	0	; () banked
 19100  00FC' 6F00'              	movwf	??_AssemblePacket& (0+255),b
 19101  00FE' 6B00'              	clrf	(??_AssemblePacket+1)& (0+255),b
 19102  0100' 0102               	movlb	2	; () banked
 19103  0102' 5100'              	movf	(_loRa+208)& (0+255),w,b
 19104  0104' 0100               	movlb	0	; () banked
 19105  0106' 1900'              	xorwf	??_AssemblePacket& (0+255),w,b
 19106  0108' E10C               	bnz	l14538
 19107  010A' 0102               	movlb	2	; () banked
 19108  010C' 5100'              	movf	(_loRa+209)& (0+255),w,b
 19109  010E' 0100               	movlb	0	; () banked
 19110  0110' 1900'              	xorwf	(??_AssemblePacket+1)& (0+255),w,b
 19111  0112' A4D8               	btfss	status,2,c
 19112  0114' D006               	goto	l2022
 19113                           
 19114                           ; BSR set to: 0
 19115                           ;lorawan.c: 1711: {
 19116                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 19117  0116' 0E00               	movlw	0
 19118  0118' 0102               	movlb	2	; () banked
 19119  011A' 6F00'              	movwf	(_loRa+238)& (0+255),b
 19120  011C' D023               	goto	l14550
 19121  011E'                    l14536:
 19122                           
 19123                           ; BSR set to: 0
 19124                           ;lorawan.c: 1714: loRa.lorawanMacStatus.adrAckRequest = 0;
 19125  011E' 0102               	movlb	2	; () banked
 19126  0120' D024               	goto	l2021
 19127  0122'                    l2022:
 19128  0122'                    l14538:
 19129                           
 19130                           ;lorawan.c: 1716: else
 19131                           ;lorawan.c: 1717: {
 19132                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 19133  0122' 0102               	movlb	2	; () banked
 19134  0124' 5100'              	movf	(_loRa+162)& (0+255),w,b
 19135  0126' 0100               	movlb	0	; () banked
 19136  0128' 6F00'              	movwf	??_AssemblePacket& (0+255),b
 19137  012A' 6B00'              	clrf	(??_AssemblePacket+1)& (0+255),b
 19138  012C' 0102               	movlb	2	; () banked
 19139  012E' 5100'              	movf	(_loRa+208)& (0+255),w,b
 19140  0130' 0100               	movlb	0	; () banked
 19141  0132' 5D00'              	subwf	??_AssemblePacket& (0+255),w,b
 19142  0134' 0102               	movlb	2	; () banked
 19143  0136' 5100'              	movf	(_loRa+209)& (0+255),w,b
 19144  0138' 0100               	movlb	0	; () banked
 19145  013A' 5900'              	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 19146  013C' B0D8               	btfsc	status,0,c
 19147  013E' D013               	goto	l2024
 19148                           
 19149                           ; BSR set to: 0
 19150                           ;lorawan.c: 1719: {
 19151                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 19152  0140' 0102               	movlb	2	; () banked
 19153  0142' 2B00'              	incf	(_loRa+238)& (0+255),f,b
 19154                           
 19155                           ; BSR set to: 2
 19156                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 19157  0144' 5100'              	movf	(_loRa+238)& (0+255),w,b
 19158  0146' 5D00'              	subwf	(_loRa+163)& (0+255),w,b
 19159  0148' B0D8               	btfsc	status,0,c
 19160  014A' D010               	goto	l2028
 19161                           
 19162                           ; BSR set to: 2
 19163                           ;lorawan.c: 1725: {
 19164                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 19165  014C' 0E00               	movlw	0
 19166  014E' 6F00'              	movwf	(_loRa+238)& (0+255),b
 19167                           
 19168                           ; BSR set to: 2
 19169                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 19170  0150' EC00' F000'        	call	_FindSmallestDataRate	;wreg free
 19171  0154' 0900               	iorlw	0
 19172  0156' A4D8               	btfss	status,2,c
 19173  0158' D009               	goto	l2028
 19174                           
 19175                           ;lorawan.c: 1729: {
 19176                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 19177  015A' 0E00               	movlw	0
 19178  015C' 0102               	movlb	2	; () banked
 19179  015E' 6F00'              	movwf	(_loRa+209)& (0+255),b
 19180  0160' 0E00               	movlw	0
 19181  0162' 6F00'              	movwf	(_loRa+208)& (0+255),b
 19182  0164'                    l14550:
 19183                           
 19184                           ; BSR set to: 2
 19185                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 19186  0164' 0100               	movlb	0	; () banked
 19187  0166'                    l2024:
 19188                           
 19189                           ; BSR set to: 0
 19190                           ;lorawan.c: 1737: else
 19191                           ;lorawan.c: 1738: {
 19192                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 19193  0166' 9D00'              	bcf	AssemblePacket@fCtrl& (0+255),6,b
 19194  0168' D7DA               	goto	l14536
 19195  016A'                    l2021:
 19196                           
 19197                           ; BSR set to: 2
 19198                           ;lorawan.c: 1744: else
 19199                           ;lorawan.c: 1745: {
 19200                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 19201  016A' 9900'              	bcf	_loRa& (0+255),4,b
 19202  016C'                    l2028:
 19203                           
 19204                           ;lorawan.c: 1747: }
 19205                           ;lorawan.c: 1748: }
 19206                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 19207                           
 19208                           ; BSR set to: 2
 19209  016C' 0102               	movlb	2	; () banked
 19210  016E' A300'              	btfss	_loRa& (0+255),1,b
 19211  0170' D004               	goto	l2029
 19212                           
 19213                           ; BSR set to: 2
 19214                           ;lorawan.c: 1751: {
 19215                           ;lorawan.c: 1752: fCtrl.ack = 1;
 19216  0172' 0100               	movlb	0	; () banked
 19217  0174' 8B00'              	bsf	AssemblePacket@fCtrl& (0+255),5,b
 19218                           
 19219                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 19220  0176' 0102               	movlb	2	; () banked
 19221  0178' 9300'              	bcf	_loRa& (0+255),1,b
 19222  017A'                    l2029:
 19223                           
 19224                           ; BSR set to: 2
 19225                           ;lorawan.c: 1754: }
 19226                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 19227  017A' 0100               	movlb	0	; () banked
 19228  017C' 9900'              	bcf	AssemblePacket@fCtrl& (0+255),4,b
 19229                           
 19230                           ; BSR set to: 0
 19231                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 19232  017E' 0102               	movlb	2	; () banked
 19233  0180' 5100'              	movf	(_loRa+167)& (0+255),w,b
 19234  0182' B4D8               	btfsc	status,2,c
 19235  0184' D005               	goto	u16940
 19236                           
 19237                           ; BSR set to: 2
 19238  0186' 0100               	movlb	0	; () banked
 19239  0188' 5100'              	movf	AssemblePacket@bufferLength& (0+255),w,b
 19240  018A' 1100'              	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19241  018C' A4D8               	btfss	status,2,c
 19242  018E' D006               	goto	l2030
 19243  0190'                    u16940:
 19244                           
 19245                           ;lorawan.c: 1759: {
 19246                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 19247  0190' 0100               	movlb	0	; () banked
 19248  0192' 9100'              	bcf	AssemblePacket@fCtrl& (0+255),0,b
 19249  0194' 9300'              	bcf	AssemblePacket@fCtrl& (0+255),1,b
 19250  0196' 9500'              	bcf	AssemblePacket@fCtrl& (0+255),2,b
 19251  0198' 9700'              	bcf	AssemblePacket@fCtrl& (0+255),3,b
 19252                           
 19253                           ;lorawan.c: 1761: }
 19254  019A' D009               	goto	l2033
 19255  019C'                    l2030:
 19256                           
 19257                           ; BSR set to: 0
 19258                           ;lorawan.c: 1763: else
 19259                           ;lorawan.c: 1764: {
 19260                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 19261                           
 19262                           ; BSR set to: 0
 19263  019C' EC00' F000'        	call	_CountfOptsLength	;wreg free
 19264  01A0' 0100               	movlb	0	; () banked
 19265  01A2' 6F00'              	movwf	??_AssemblePacket& (0+255),b
 19266  01A4' 5100'              	movf	AssemblePacket@fCtrl& (0+255),w,b
 19267  01A6' 1900'              	xorwf	??_AssemblePacket& (0+255),w,b
 19268  01A8' 0BF0               	andlw	-16
 19269  01AA' 1900'              	xorwf	??_AssemblePacket& (0+255),w,b
 19270  01AC' 6F00'              	movwf	AssemblePacket@fCtrl& (0+255),b
 19271  01AE'                    l2033:
 19272                           
 19273                           ; BSR set to: 0
 19274                           ;lorawan.c: 1766: }
 19275                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 19276                           
 19277                           ; BSR set to: 0
 19278  01AE' 5100'              	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19279  01B0' 0D01               	mullw	1
 19280  01B2' 0E00'              	movlw	low _macBuffer
 19281  01B4' 24F3               	addwf	prodl,w,c
 19282  01B6' 6ED9               	movwf	fsr2l,c
 19283  01B8' 0E00'              	movlw	high _macBuffer
 19284  01BA' 20F4               	addwfc	prodh,w,c
 19285  01BC' 6EDA               	movwf	fsr2h,c
 19286  01BE' C070' FFDF         	movff	AssemblePacket@fCtrl,indf2
 19287                           
 19288                           ; BSR set to: 0
 19289  01C2' 2B00'              	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19290                           
 19291                           ; BSR set to: 0
 19292                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 19293  01C4' 5100'              	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19294  01C6' 0D01               	mullw	1
 19295  01C8' 0E00'              	movlw	low _macBuffer
 19296  01CA' 24F3               	addwf	prodl,w,c
 19297  01CC' 6F00'              	movwf	memcpy@d1& (0+255),b
 19298  01CE' 0E00'              	movlw	high _macBuffer
 19299  01D0' 20F4               	addwfc	prodh,w,c
 19300  01D2' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 19301  01D4' 0E00'              	movlw	low (_loRa+6)
 19302  01D6' 6F00'              	movwf	memcpy@s1& (0+255),b
 19303  01D8' 0E00'              	movlw	high (_loRa+6)
 19304  01DA' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 19305  01DC' 0E00               	movlw	0
 19306  01DE' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 19307  01E0' 0E02               	movlw	2
 19308  01E2' 6F00'              	movwf	memcpy@n& (0+255),b
 19309  01E4' EC00' F000'        	call	_memcpy	;wreg free
 19310                           
 19311                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 19312  01E8' 0100               	movlb	0	; () banked
 19313  01EA' 5100'              	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19314  01EC' 0F02               	addlw	2
 19315  01EE' 6F00'              	movwf	AssemblePacket@bufferIndex& (0+255),b
 19316                           
 19317                           ; BSR set to: 0
 19318                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 19319  01F0' 0102               	movlb	2	; () banked
 19320  01F2' 5100'              	movf	(_loRa+167)& (0+255),w,b
 19321  01F4' B4D8               	btfsc	status,2,c
 19322  01F6' D011               	goto	l2034
 19323                           
 19324                           ; BSR set to: 2
 19325  01F8' 0100               	movlb	0	; () banked
 19326  01FA' 5100'              	movf	AssemblePacket@bufferLength& (0+255),w,b
 19327  01FC' 1100'              	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19328  01FE' B4D8               	btfsc	status,2,c
 19329  0200' D00C               	goto	l2034
 19330                           
 19331                           ; BSR set to: 0
 19332                           ;lorawan.c: 1774: {
 19333                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 19334  0202' 0E00'              	movlw	low _macBuffer
 19335  0204' 6F00'              	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19336  0206' 0E00'              	movlw	high _macBuffer
 19337  0208' 6F00'              	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19338  020A' 0E00'              	movlw	low AssemblePacket@bufferIndex
 19339  020C' 6F00'              	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19340  020E' 0E00'              	movlw	high AssemblePacket@bufferIndex
 19341  0210' 6F00'              	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 19342  0212' 0E01               	movlw	1
 19343  0214' 6F00'              	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19344  0216' EC00' F000'        	call	_IncludeMacCommandsResponse	;wreg free
 19345  021A'                    l2034:
 19346                           
 19347                           ;lorawan.c: 1776: }
 19348                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 19349  021A' 0100               	movlb	0	; () banked
 19350  021C' 5100'              	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19351  021E' 0D01               	mullw	1
 19352  0220' 0E00'              	movlw	low _macBuffer
 19353  0222' 24F3               	addwf	prodl,w,c
 19354  0224' 6ED9               	movwf	fsr2l,c
 19355  0226' 0E00'              	movlw	high _macBuffer
 19356  0228' 20F4               	addwfc	prodh,w,c
 19357  022A' 6EDA               	movwf	fsr2h,c
 19358  022C' C067' FFDF         	movff	AssemblePacket@port,indf2
 19359                           
 19360                           ; BSR set to: 0
 19361  0230' 2B00'              	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19362                           
 19363                           ; BSR set to: 0
 19364                           ;lorawan.c: 1780: if (bufferLength != 0)
 19365  0232' 5100'              	movf	AssemblePacket@bufferLength& (0+255),w,b
 19366  0234' 1100'              	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19367  0236' B4D8               	btfsc	status,2,c
 19368  0238' D035               	goto	l2035
 19369                           
 19370                           ; BSR set to: 0
 19371                           ;lorawan.c: 1781: {
 19372                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 19373  023A' 5100'              	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19374  023C' 0D01               	mullw	1
 19375  023E' 0E00'              	movlw	low _macBuffer
 19376  0240' 24F3               	addwf	prodl,w,c
 19377  0242' 6F00'              	movwf	memcpy@d1& (0+255),b
 19378  0244' 0E00'              	movlw	high _macBuffer
 19379  0246' 20F4               	addwfc	prodh,w,c
 19380  0248' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 19381  024A' C068' F002'        	movff	AssemblePacket@buffer,memcpy@s1
 19382  024E' C069' F003'        	movff	AssemblePacket@buffer+1,memcpy@s1+1
 19383  0252' C06A' F004'        	movff	AssemblePacket@bufferLength,memcpy@n
 19384  0256' C06B' F005'        	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 19385  025A' EC00' F000'        	call	_memcpy	;wreg free
 19386                           
 19387                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 19388  025E' C068' F031'        	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 19389  0262' C069' F032'        	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 19390  0266' C06A' F033'        	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 19391  026A' 0E00               	movlw	0
 19392  026C' 0100               	movlb	0	; () banked
 19393  026E' 6F00'              	movwf	EncryptFRMPayload@dir& (0+255),b
 19394  0270' C006' F035'        	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19395  0274' C007' F036'        	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19396  0278' C008' F037'        	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19397  027C' C009' F038'        	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19398  0280' 0E00'              	movlw	low (_loRa+50)
 19399  0282' 6F00'              	movwf	EncryptFRMPayload@key& (0+255),b
 19400  0284' 0E00'              	movlw	high (_loRa+50)
 19401  0286' 6F00'              	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19402  0288' C072' F03B'        	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19403  028C' 0E00'              	movlw	low _macBuffer
 19404  028E' 6F00'              	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19405  0290' 0E00'              	movlw	high _macBuffer
 19406  0292' 6F00'              	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19407  0294' 0E00               	movlw	0
 19408  0296' 6F00'              	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 19409  0298' EC00' F000'        	call	_EncryptFRMPayload	;wreg free
 19410                           
 19411                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 19412  029C' 0100               	movlb	0	; () banked
 19413  029E' 5100'              	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19414  02A0' 2500'              	addwf	AssemblePacket@bufferLength& (0+255),w,b
 19415  02A2' D033               	goto	L11
 19416  02A4'                    l2035:
 19417                           
 19418                           ; BSR set to: 0
 19419                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 19420                           
 19421                           ; BSR set to: 0
 19422  02A4' 0102               	movlb	2	; () banked
 19423  02A6' 5100'              	movf	(_loRa+167)& (0+255),w,b
 19424  02A8' B4D8               	btfsc	status,2,c
 19425  02AA' D030               	goto	l2037
 19426                           
 19427                           ; BSR set to: 2
 19428                           ;lorawan.c: 1787: {
 19429                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 19430  02AC' 0E00'              	movlw	low _radioBuffer
 19431  02AE' 0100               	movlb	0	; () banked
 19432  02B0' 6F00'              	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19433  02B2' 0E00'              	movlw	high _radioBuffer
 19434  02B4' 6F00'              	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19435  02B6' 0E00'              	movlw	low AssemblePacket@macCmdIdx
 19436  02B8' 6F00'              	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19437  02BA' 0E00'              	movlw	high AssemblePacket@macCmdIdx
 19438  02BC' 6F00'              	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 19439  02BE' 0E00               	movlw	0
 19440  02C0' 6F00'              	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19441  02C2' EC00' F000'        	call	_IncludeMacCommandsResponse	;wreg free
 19442                           
 19443                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 19444  02C6' 0E00'              	movlw	low _radioBuffer
 19445  02C8' 0100               	movlb	0	; () banked
 19446  02CA' 6F00'              	movwf	EncryptFRMPayload@buffer& (0+255),b
 19447  02CC' 0E00'              	movlw	high _radioBuffer
 19448  02CE' 6F00'              	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 19449  02D0' C071' F033'        	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 19450  02D4' 0E00               	movlw	0
 19451  02D6' 6F00'              	movwf	EncryptFRMPayload@dir& (0+255),b
 19452  02D8' C006' F035'        	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19453  02DC' C007' F036'        	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19454  02E0' C008' F037'        	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19455  02E4' C009' F038'        	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19456  02E8' 0E00'              	movlw	low (_loRa+34)
 19457  02EA' 6F00'              	movwf	EncryptFRMPayload@key& (0+255),b
 19458  02EC' 0E00'              	movlw	high (_loRa+34)
 19459  02EE' 6F00'              	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19460  02F0' C072' F03B'        	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19461  02F4' 0E00'              	movlw	low _macBuffer
 19462  02F6' 6F00'              	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19463  02F8' 0E00'              	movlw	high _macBuffer
 19464  02FA' 6F00'              	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19465  02FC' 0E00               	movlw	0
 19466  02FE' 6F00'              	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 19467  0300' EC00' F000'        	call	_EncryptFRMPayload	;wreg free
 19468                           
 19469                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 19470  0304' 0100               	movlb	0	; () banked
 19471  0306' 5100'              	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19472  0308' 2500'              	addwf	AssemblePacket@macCmdIdx& (0+255),w,b
 19473  030A'                    L11:
 19474  030A' 6F00'              	movwf	AssemblePacket@bufferIndex& (0+255),b
 19475  030C'                    l2037:
 19476                           
 19477                           ;lorawan.c: 1793: }
 19478                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 19479                           
 19480                           ; BSR set to: 0
 19481                           
 19482                           ; BSR set to: 0
 19483  030C' C006' F00B'        	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 19484  0310' C007' F00C'        	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 19485  0314' C008' F00D'        	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 19486  0318' C009' F00E'        	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 19487  031C' 0100               	movlb	0	; () banked
 19488  031E' 5100'              	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19489  0320' 0FF0               	addlw	240
 19490  0322' 6F00'              	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 19491  0324' 0E49               	movlw	73
 19492  0326' 6F00'              	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19493  0328' 0E00               	movlw	0
 19494  032A' 6F00'              	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 19495  032C' 0E00               	movlw	0
 19496  032E' EC00' F000'        	call	_AssembleEncryptionBlock
 19497                           
 19498                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 19499  0332' 0E00'              	movlw	low _macBuffer
 19500  0334' 0100               	movlb	0	; () banked
 19501  0336' 6F00'              	movwf	memcpy@d1& (0+255),b
 19502  0338' 0E00'              	movlw	high _macBuffer
 19503  033A' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 19504  033C' 0E00'              	movlw	low _aesBuffer
 19505  033E' 6F00'              	movwf	memcpy@s1& (0+255),b
 19506  0340' 0E00'              	movlw	high _aesBuffer
 19507  0342' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 19508  0344' 0E00               	movlw	0
 19509  0346' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 19510  0348' 0E10               	movlw	16
 19511  034A' 6F00'              	movwf	memcpy@n& (0+255),b
 19512  034C' EC00' F000'        	call	_memcpy	;wreg free
 19513                           
 19514                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 19515  0350' 0E00'              	movlw	low (_loRa+34)
 19516  0352' 0100               	movlb	0	; () banked
 19517  0354' 6F00'              	movwf	AESCmac@key& (0+255),b
 19518  0356' 0E00'              	movlw	high (_loRa+34)
 19519  0358' 6F00'              	movwf	(AESCmac@key+1)& (0+255),b
 19520  035A' 0E00'              	movlw	low _aesBuffer
 19521  035C' 6F00'              	movwf	AESCmac@output& (0+255),b
 19522  035E' 0E00'              	movlw	high _aesBuffer
 19523  0360' 6F00'              	movwf	(AESCmac@output+1)& (0+255),b
 19524  0362' 0E00'              	movlw	low _macBuffer
 19525  0364' 6F00'              	movwf	AESCmac@input& (0+255),b
 19526  0366' 0E00'              	movlw	high _macBuffer
 19527  0368' 6F00'              	movwf	(AESCmac@input+1)& (0+255),b
 19528  036A' C072' F05F'        	movff	AssemblePacket@bufferIndex,AESCmac@size
 19529  036E' EC00' F000'        	call	_AESCmac	;wreg free
 19530                           
 19531                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 19532  0372' 0100               	movlb	0	; () banked
 19533  0374' 5100'              	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19534  0376' 0D01               	mullw	1
 19535  0378' 0E00'              	movlw	low _macBuffer
 19536  037A' 24F3               	addwf	prodl,w,c
 19537  037C' 6F00'              	movwf	memcpy@d1& (0+255),b
 19538  037E' 0E00'              	movlw	high _macBuffer
 19539  0380' 20F4               	addwfc	prodh,w,c
 19540  0382' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 19541  0384' 0E00'              	movlw	low _aesBuffer
 19542  0386' 6F00'              	movwf	memcpy@s1& (0+255),b
 19543  0388' 0E00'              	movlw	high _aesBuffer
 19544  038A' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 19545  038C' 0E00               	movlw	0
 19546  038E' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 19547  0390' 0E04               	movlw	4
 19548  0392' 6F00'              	movwf	memcpy@n& (0+255),b
 19549  0394' EC00' F000'        	call	_memcpy	;wreg free
 19550                           
 19551                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 19552  0398' 0100               	movlb	0	; () banked
 19553  039A' 5100'              	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19554  039C' 0F04               	addlw	4
 19555  039E' 6F00'              	movwf	AssemblePacket@bufferIndex& (0+255),b
 19556                           
 19557                           ; BSR set to: 0
 19558                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 19559  03A0' 0EF0               	movlw	240
 19560  03A2' 2500'              	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19561  03A4' 0102               	movlb	2	; () banked
 19562  03A6' 6F00'              	movwf	(_loRa+212)& (0+255),b
 19563  03A8' 6B00'              	clrf	(_loRa+213)& (0+255),b
 19564  03AA' 0EFF               	movlw	255
 19565  03AC' 2300'              	addwfc	(_loRa+213)& (0+255),f,b
 19566                           
 19567                           ; BSR set to: 2
 19568  03AE' 0012               	return		;funcret
 19569  03B0'                    __end_of_AssemblePacket:
 19570                           	opt stack 0
 19571                           tosu	equ	0xFFF
 19572                           tosh	equ	0xFFE
 19573                           tosl	equ	0xFFD
 19574                           pclath	equ	0xFFA
 19575                           tblptru	equ	0xFF8
 19576                           tblptrh	equ	0xFF7
 19577                           tblptrl	equ	0xFF6
 19578                           tablat	equ	0xFF5
 19579                           prodh	equ	0xFF4
 19580                           prodl	equ	0xFF3
 19581                           intcon	equ	0xFF2
 19582                           intcon2	equ	0xFF1
 19583                           intcon3	equ	0xFF0
 19584                           indf0	equ	0xFEF
 19585                           postinc0	equ	0xFEE
 19586                           fsr0h	equ	0xFEA
 19587                           fsr0l	equ	0xFE9
 19588                           wreg	equ	0xFE8
 19589                           postinc1	equ	0xFE6
 19590                           postdec1	equ	0xFE5
 19591                           plusw1	equ	0xFE3
 19592                           fsr1h	equ	0xFE2
 19593                           fsr1l	equ	0xFE1
 19594                           indf2	equ	0xFDF
 19595                           postinc2	equ	0xFDE
 19596                           postdec2	equ	0xFDD
 19597                           plusw2	equ	0xFDB
 19598                           fsr2h	equ	0xFDA
 19599                           fsr2l	equ	0xFD9
 19600                           status	equ	0xFD8
 19601                           
 19602 ;; *************** function _IncludeMacCommandsResponse *****************
 19603 ;; Defined at:
 19604 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19605 ;; Parameters:    Size  Location     Type
 19606 ;;  macBuffer       2    0[BANK0 ] PTR unsigned char 
 19607 ;;		 -> macBuffer(271), radioBuffer(271), 
 19608 ;;  pBufferIndex    2    2[BANK0 ] PTR unsigned char 
 19609 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 19610 ;;  bIncludeInFo    1    4[BANK0 ] unsigned char 
 19611 ;; Auto vars:     Size  Location     Type
 19612 ;;  bufferIndex     1   14[BANK0 ] unsigned char 
 19613 ;;  i               1   13[BANK0 ] unsigned char 
 19614 ;; Return value:  Size  Location     Type
 19615 ;;                  1    wreg      void 
 19616 ;; Registers used:
 19617 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19618 ;; Tracked objects:
 19619 ;;		On entry : 0/0
 19620 ;;		On exit  : 0/0
 19621 ;;		Unchanged: 0/0
 19622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19623 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19624 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19625 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19626 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19627 ;;Total ram usage:       15 bytes
 19628 ;; Hardware stack levels used:    1
 19629 ;; Hardware stack levels required when called:    8
 19630 ;; This function calls:
 19631 ;;		_RADIO_GetPacketSnr
 19632 ;; This function is called by:
 19633 ;;		_AssemblePacket
 19634 ;; This function uses a non-reentrant model
 19635 ;;
 19636                           
 19637                           	psect	text91
 19638  0000'                    __ptext91:
 19639                           	opt stack 0
 19640  0000'                    _IncludeMacCommandsResponse:
 19641                           	opt stack 20
 19642                           
 19643                           ;lorawan.c: 1847: uint8_t i = 0;
 19644                           
 19645                           ; BSR set to: 2
 19646                           ;incstack = 0
 19647  0000' 0E00               	movlw	0
 19648  0002' 0100               	movlb	0	; () banked
 19649  0004' 6F00'              	movwf	IncludeMacCommandsResponse@i& (0+255),b
 19650                           
 19651                           ; BSR set to: 0
 19652                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 19653  0006' C002' FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 19654  000A' C003' FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 19655  000E' 50DF               	movf	indf2,w,c
 19656  0010' 6F00'              	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 19657                           
 19658                           ; BSR set to: 0
 19659                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 19660  0012' 0E00               	movlw	0
 19661  0014' 6F00'              	movwf	IncludeMacCommandsResponse@i& (0+255),b
 19662  0016' D218               	goto	l2048
 19663  0018'                    
 19664                           ; BSR set to: 0
 19665                           ;lorawan.c: 1851: {
 19666                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 19667                           
 19668                           ; BSR set to: 0
 19669  0018' 5100'              	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 19670  001A' B4D8               	btfsc	status,2,c
 19671  001C' D1F6               	goto	l2053
 19672                           
 19673                           ; BSR set to: 0
 19674  001E' 5100'              	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19675  0020' 0D02               	mullw	2
 19676  0022' 0E00'              	movlw	low (_loRa+168)
 19677  0024' 24F3               	addwf	prodl,w,c
 19678  0026' 6ED9               	movwf	fsr2l,c
 19679  0028' 0E00'              	movlw	high (_loRa+168)
 19680  002A' 20F4               	addwfc	prodh,w,c
 19681  002C' 6EDA               	movwf	fsr2h,c
 19682  002E' 28DE               	incf	postinc2,w,c
 19683  0030' B4D8               	btfsc	status,2,c
 19684  0032' D1EB               	goto	l2053
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;lorawan.c: 1853: {
 19688                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 19689  0034' C002' FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 19690  0038' C003' FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 19691  003C' 50DF               	movf	indf2,w,c
 19692  003E' 6F00'              	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19693  0040' 6B00'              	clrf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19694  0042' 1F00'              	comf	??_IncludeMacCommandsResponse& (0+255),f,b
 19695  0044' 1F00'              	comf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19696  0046' 4B00'              	infsnz	??_IncludeMacCommandsResponse& (0+255),f,b
 19697  0048' 2B00'              	incf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19698  004A' 0EFE               	movlw	254
 19699  004C' 6F00'              	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 19700  004E' 0EFF               	movlw	255
 19701  0050' 6F00'              	movwf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 19702  0052' 5100'              	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19703  0054' 0D02               	mullw	2
 19704  0056' 0E00'              	movlw	low (_loRa+168)
 19705  0058' 24F3               	addwf	prodl,w,c
 19706  005A' 6ED9               	movwf	fsr2l,c
 19707  005C' 0E00'              	movlw	high (_loRa+168)
 19708  005E' 20F4               	addwfc	prodh,w,c
 19709  0060' 6EDA               	movwf	fsr2h,c
 19710  0062' 50DF               	movf	indf2,w,c
 19711  0064' 6F00'              	movwf	(??_IncludeMacCommandsResponse+4)& (0+255),b
 19712  0066' 6B00'              	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 19713  0068' 5100'              	movf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 19714  006A' 2700'              	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 19715  006C' 5100'              	movf	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 19716  006E' 2300'              	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 19717  0070' 0E00'              	movlw	low _macEndDevCmdReplyLen
 19718  0072' 2500'              	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 19719  0074' 6EF6               	movwf	tblptrl,c
 19720  0076' 0E00'              	movlw	high _macEndDevCmdReplyLen
 19721  0078' 2100'              	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 19722  007A' 6EF7               	movwf	tblptrh,c
 19723  007C'                    	if	1	;There are 3 active tblptr bytes
 19724  007C' 6AF8               	clrf	tblptru,c
 19725  007E' 0E00'              	movlw	low (__mediumconst shr (0+16))
 19726  0080' 22F8               	addwfc	tblptru,f,c
 19727  0082'                    	endif
 19728  0082' 0008               	tblrd		*
 19729  0084' 50F5               	movf	tablat,w,c
 19730  0086' C00E' F00B'        	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+6
 19731  008A' 6B00'              	clrf	(??_IncludeMacCommandsResponse+7)& (0+255),b
 19732  008C' 2700'              	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 19733  008E' 0E00               	movlw	0
 19734  0090' 2300'              	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 19735  0092' 5100'              	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 19736  0094' 2700'              	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 19737  0096' 5100'              	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19738  0098' 2300'              	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 19739  009A' BF00'              	btfsc	(??_IncludeMacCommandsResponse+7)& (0+255),7,b
 19740  009C' D1B6               	goto	l2053
 19741  009E' 5100'              	movf	(??_IncludeMacCommandsResponse+7)& (0+255),w,b
 19742  00A0' E105               	bnz	u16280
 19743  00A2' 0E10               	movlw	16
 19744  00A4' 5D00'              	subwf	(??_IncludeMacCommandsResponse+6)& (0+255),w,b
 19745  00A6' B0D8               	btfsc	status,0,c
 19746  00A8' D1D5               	goto	u16390
 19747  00AA' D1AF               	goto	l2053
 19748  00AC'                    u16280:
 19749                           
 19750                           ; BSR set to: 0
 19751                           ;lorawan.c: 1855: {
 19752                           ;lorawan.c: 1856: break;
 19753  00AC' D1D3               	goto	u16390
 19754  00AE'                    
 19755                           ; BSR set to: 0
 19756                           ;lorawan.c: 1862: {
 19757                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 19758                           
 19759                           ; BSR set to: 0
 19760  00AE' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19761  00B0' 0D01               	mullw	1
 19762  00B2' 50F3               	movf	prodl,w,c
 19763  00B4' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19764  00B6' 6ED9               	movwf	fsr2l,c
 19765  00B8' 50F4               	movf	prodh,w,c
 19766  00BA' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19767  00BC' 6EDA               	movwf	fsr2h,c
 19768  00BE' 0E03               	movlw	3
 19769  00C0' 6EDF               	movwf	indf2,c
 19770                           
 19771                           ; BSR set to: 0
 19772  00C2' 2B00'              	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19773                           
 19774                           ; BSR set to: 0
 19775                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 19776  00C4' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19777  00C6' 0D01               	mullw	1
 19778  00C8' 50F3               	movf	prodl,w,c
 19779  00CA' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19780  00CC' 6ED9               	movwf	fsr2l,c
 19781  00CE' 50F4               	movf	prodh,w,c
 19782  00D0' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19783  00D2' 6EDA               	movwf	fsr2h,c
 19784  00D4' 0E00               	movlw	0
 19785  00D6' 6EDF               	movwf	indf2,c
 19786                           
 19787                           ; BSR set to: 0
 19788                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 19789  00D8' 5100'              	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19790  00DA' 0D02               	mullw	2
 19791  00DC' 0E00'              	movlw	low _loRa
 19792  00DE' 6F00'              	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19793  00E0' 0E00'              	movlw	high _loRa
 19794  00E2' 6F00'              	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19795  00E4' 0EA8               	movlw	168
 19796  00E6' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19797  00E8' 0E00               	movlw	0
 19798  00EA' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19799  00EC' 50F3               	movf	prodl,w,c
 19800  00EE' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19801  00F0' 50F4               	movf	prodh,w,c
 19802  00F2' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19803  00F4' 0E01               	movlw	1
 19804  00F6' 2500'              	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 19805  00F8' 6ED9               	movwf	fsr2l,c
 19806  00FA' 0E00               	movlw	0
 19807  00FC' 2100'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19808  00FE' 6EDA               	movwf	fsr2h,c
 19809  0100' 0102               	movlb	2	; () banked
 19810  0102' A0DF               	btfss	indf2,0,c
 19811  0104' D00B               	goto	l2055
 19812                           
 19813                           ; BSR set to: 2
 19814                           ;lorawan.c: 1866: {
 19815                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 19816  0106' 0100               	movlb	0	; () banked
 19817  0108' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19818  010A' 0D01               	mullw	1
 19819  010C' 50F3               	movf	prodl,w,c
 19820  010E' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19821  0110' 6ED9               	movwf	fsr2l,c
 19822  0112' 50F4               	movf	prodh,w,c
 19823  0114' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19824  0116' 6EDA               	movwf	fsr2h,c
 19825  0118' 0E00               	movlw	0
 19826  011A' 80DB               	bsf	plusw2,0,c
 19827  011C'                    l2055:
 19828                           
 19829                           ;lorawan.c: 1868: }
 19830                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 19831  011C' 0100               	movlb	0	; () banked
 19832  011E' 5100'              	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19833  0120' 0D02               	mullw	2
 19834  0122' 0E00'              	movlw	low _loRa
 19835  0124' 6F00'              	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19836  0126' 0E00'              	movlw	high _loRa
 19837  0128' 6F00'              	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19838  012A' 0EA8               	movlw	168
 19839  012C' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19840  012E' 0E00               	movlw	0
 19841  0130' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19842  0132' 50F3               	movf	prodl,w,c
 19843  0134' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19844  0136' 50F4               	movf	prodh,w,c
 19845  0138' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19846  013A' 0E01               	movlw	1
 19847  013C' 2500'              	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 19848  013E' 6ED9               	movwf	fsr2l,c
 19849  0140' 0E00               	movlw	0
 19850  0142' 2100'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19851  0144' 6EDA               	movwf	fsr2h,c
 19852  0146' 0102               	movlb	2	; () banked
 19853  0148' A2DF               	btfss	indf2,1,c
 19854  014A' D00B               	goto	l2056
 19855                           
 19856                           ; BSR set to: 2
 19857                           ;lorawan.c: 1871: {
 19858                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 19859  014C' 0100               	movlb	0	; () banked
 19860  014E' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19861  0150' 0D01               	mullw	1
 19862  0152' 50F3               	movf	prodl,w,c
 19863  0154' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19864  0156' 6ED9               	movwf	fsr2l,c
 19865  0158' 50F4               	movf	prodh,w,c
 19866  015A' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19867  015C' 6EDA               	movwf	fsr2h,c
 19868  015E' 0E00               	movlw	0
 19869  0160' 82DB               	bsf	plusw2,1,c
 19870  0162'                    l2056:
 19871                           
 19872                           ;lorawan.c: 1873: }
 19873                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 19874  0162' 0100               	movlb	0	; () banked
 19875  0164' 5100'              	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19876  0166' 0D02               	mullw	2
 19877  0168' 0E00'              	movlw	low _loRa
 19878  016A' 6F00'              	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19879  016C' 0E00'              	movlw	high _loRa
 19880  016E' 6F00'              	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19881  0170' 0EA8               	movlw	168
 19882  0172' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19883  0174' 0E00               	movlw	0
 19884  0176' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19885  0178' 50F3               	movf	prodl,w,c
 19886  017A' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19887  017C' 50F4               	movf	prodh,w,c
 19888  017E' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19889  0180' 0E01               	movlw	1
 19890  0182' 2500'              	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 19891  0184' 6ED9               	movwf	fsr2l,c
 19892  0186' 0E00               	movlw	0
 19893  0188' 2100'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19894  018A' 6EDA               	movwf	fsr2h,c
 19895  018C' 0102               	movlb	2	; () banked
 19896  018E' A4DF               	btfss	indf2,2,c
 19897  0190' D089               	goto	l2062
 19898                           
 19899                           ; BSR set to: 2
 19900                           ;lorawan.c: 1876: {
 19901                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 19902  0192' 0100               	movlb	0	; () banked
 19903  0194' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19904  0196' 0D01               	mullw	1
 19905  0198' 50F3               	movf	prodl,w,c
 19906  019A' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19907  019C' 6ED9               	movwf	fsr2l,c
 19908  019E' 50F4               	movf	prodh,w,c
 19909  01A0' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19910  01A2' 6EDA               	movwf	fsr2h,c
 19911  01A4' 0E00               	movlw	0
 19912  01A6' 84DB               	bsf	plusw2,2,c
 19913                           
 19914                           ; BSR set to: 0
 19915  01A8' D07D               	goto	l2062
 19916  01AA'                    
 19917                           ; BSR set to: 0
 19918                           ;lorawan.c: 1884: {
 19919                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 19920                           
 19921                           ; BSR set to: 0
 19922  01AA' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19923  01AC' 0D01               	mullw	1
 19924  01AE' 50F3               	movf	prodl,w,c
 19925  01B0' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19926  01B2' 6ED9               	movwf	fsr2l,c
 19927  01B4' 50F4               	movf	prodh,w,c
 19928  01B6' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19929  01B8' 6EDA               	movwf	fsr2h,c
 19930  01BA' 0E05               	movlw	5
 19931  01BC' 6EDF               	movwf	indf2,c
 19932                           
 19933                           ; BSR set to: 0
 19934  01BE' 2B00'              	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19935                           
 19936                           ; BSR set to: 0
 19937                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 19938  01C0' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19939  01C2' 0D01               	mullw	1
 19940  01C4' 50F3               	movf	prodl,w,c
 19941  01C6' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19942  01C8' 6ED9               	movwf	fsr2l,c
 19943  01CA' 50F4               	movf	prodh,w,c
 19944  01CC' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19945  01CE' 6EDA               	movwf	fsr2h,c
 19946  01D0' 0E00               	movlw	0
 19947  01D2' 6EDF               	movwf	indf2,c
 19948                           
 19949                           ; BSR set to: 0
 19950                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 19951  01D4' 5100'              	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19952  01D6' 0D02               	mullw	2
 19953  01D8' 0E00'              	movlw	low _loRa
 19954  01DA' 6F00'              	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19955  01DC' 0E00'              	movlw	high _loRa
 19956  01DE' 6F00'              	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19957  01E0' 0EA8               	movlw	168
 19958  01E2' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19959  01E4' 0E00               	movlw	0
 19960  01E6' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19961  01E8' 50F3               	movf	prodl,w,c
 19962  01EA' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19963  01EC' 50F4               	movf	prodh,w,c
 19964  01EE' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19965  01F0' 0E01               	movlw	1
 19966  01F2' 2500'              	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 19967  01F4' 6ED9               	movwf	fsr2l,c
 19968  01F6' 0E00               	movlw	0
 19969  01F8' 2100'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19970  01FA' 6EDA               	movwf	fsr2h,c
 19971  01FC' 0102               	movlb	2	; () banked
 19972  01FE' A6DF               	btfss	indf2,3,c
 19973  0200' D00B               	goto	l2060
 19974                           
 19975                           ; BSR set to: 2
 19976                           ;lorawan.c: 1888: {
 19977                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 19978  0202' 0100               	movlb	0	; () banked
 19979  0204' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19980  0206' 0D01               	mullw	1
 19981  0208' 50F3               	movf	prodl,w,c
 19982  020A' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19983  020C' 6ED9               	movwf	fsr2l,c
 19984  020E' 50F4               	movf	prodh,w,c
 19985  0210' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19986  0212' 6EDA               	movwf	fsr2h,c
 19987  0214' 0E00               	movlw	0
 19988  0216' 80DB               	bsf	plusw2,0,c
 19989  0218'                    l2060:
 19990                           
 19991                           ;lorawan.c: 1890: }
 19992                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 19993  0218' 0100               	movlb	0	; () banked
 19994  021A' 5100'              	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19995  021C' 0D02               	mullw	2
 19996  021E' 0E00'              	movlw	low _loRa
 19997  0220' 6F00'              	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19998  0222' 0E00'              	movlw	high _loRa
 19999  0224' 6F00'              	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20000  0226' 0EA8               	movlw	168
 20001  0228' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20002  022A' 0E00               	movlw	0
 20003  022C' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20004  022E' 50F3               	movf	prodl,w,c
 20005  0230' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20006  0232' 50F4               	movf	prodh,w,c
 20007  0234' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20008  0236' 0E01               	movlw	1
 20009  0238' 2500'              	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20010  023A' 6ED9               	movwf	fsr2l,c
 20011  023C' 0E00               	movlw	0
 20012  023E' 2100'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20013  0240' 6EDA               	movwf	fsr2h,c
 20014  0242' 0102               	movlb	2	; () banked
 20015  0244' A8DF               	btfss	indf2,4,c
 20016  0246' D00B               	goto	l2061
 20017                           
 20018                           ; BSR set to: 2
 20019                           ;lorawan.c: 1893: {
 20020                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 20021  0248' 0100               	movlb	0	; () banked
 20022  024A' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20023  024C' 0D01               	mullw	1
 20024  024E' 50F3               	movf	prodl,w,c
 20025  0250' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20026  0252' 6ED9               	movwf	fsr2l,c
 20027  0254' 50F4               	movf	prodh,w,c
 20028  0256' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20029  0258' 6EDA               	movwf	fsr2h,c
 20030  025A' 0E00               	movlw	0
 20031  025C' 82DB               	bsf	plusw2,1,c
 20032  025E'                    l2061:
 20033                           
 20034                           ;lorawan.c: 1895: }
 20035                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 20036  025E' 0100               	movlb	0	; () banked
 20037  0260' 5100'              	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20038  0262' 0D02               	mullw	2
 20039  0264' 0E00'              	movlw	low _loRa
 20040  0266' 6F00'              	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20041  0268' 0E00'              	movlw	high _loRa
 20042  026A' 6F00'              	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20043  026C' 0EA8               	movlw	168
 20044  026E' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20045  0270' 0E00               	movlw	0
 20046  0272' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20047  0274' 50F3               	movf	prodl,w,c
 20048  0276' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20049  0278' 50F4               	movf	prodh,w,c
 20050  027A' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20051  027C' 0E01               	movlw	1
 20052  027E' 2500'              	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20053  0280' 6ED9               	movwf	fsr2l,c
 20054  0282' 0E00               	movlw	0
 20055  0284' 2100'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20056  0286' 6EDA               	movwf	fsr2h,c
 20057  0288' 0102               	movlb	2	; () banked
 20058  028A' AADF               	btfss	indf2,5,c
 20059  028C' D00B               	goto	l2062
 20060                           
 20061                           ; BSR set to: 2
 20062                           ;lorawan.c: 1898: {
 20063                           ;lorawan.c: 1899: macBuffer[bufferIndex] |= 0x04;
 20064  028E' 0100               	movlb	0	; () banked
 20065  0290' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20066  0292' 0D01               	mullw	1
 20067  0294' 50F3               	movf	prodl,w,c
 20068  0296' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20069  0298' 6ED9               	movwf	fsr2l,c
 20070  029A' 50F4               	movf	prodh,w,c
 20071  029C' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20072  029E' 6EDA               	movwf	fsr2h,c
 20073  02A0' 0E00               	movlw	0
 20074  02A2' 84DB               	bsf	plusw2,2,c
 20075  02A4'                    l2062:
 20076                           
 20077                           ;lorawan.c: 1900: }
 20078                           ;lorawan.c: 1902: bufferIndex ++;
 20079                           
 20080                           ; BSR set to: 0
 20081  02A4' 0100               	movlb	0	; () banked
 20082  02A6' D03C               	goto	L12
 20083  02A8'                    
 20084                           ; BSR set to: 0
 20085                           ;lorawan.c: 1907: {
 20086                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 20087                           
 20088                           ; BSR set to: 0
 20089  02A8' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20090  02AA' 0D01               	mullw	1
 20091  02AC' 50F3               	movf	prodl,w,c
 20092  02AE' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20093  02B0' 6ED9               	movwf	fsr2l,c
 20094  02B2' 50F4               	movf	prodh,w,c
 20095  02B4' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20096  02B6' 6EDA               	movwf	fsr2h,c
 20097  02B8' 0E06               	movlw	6
 20098  02BA' 6EDF               	movwf	indf2,c
 20099                           
 20100                           ; BSR set to: 0
 20101  02BC' 2B00'              	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20102                           
 20103                           ; BSR set to: 0
 20104                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 20105  02BE' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20106  02C0' 0D01               	mullw	1
 20107  02C2' 50F3               	movf	prodl,w,c
 20108  02C4' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20109  02C6' 6ED9               	movwf	fsr2l,c
 20110  02C8' 50F4               	movf	prodh,w,c
 20111  02CA' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20112  02CC' 6EDA               	movwf	fsr2h,c
 20113  02CE' C0E0' FFDF         	movff	_loRa+224,indf2
 20114  02D2' 2B00'              	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20115                           
 20116                           ; BSR set to: 0
 20117                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 20118  02D4' EC00' F000'        	call	_RADIO_GetPacketSnr	;wreg free
 20119  02D8' 0A80               	xorlw	128
 20120  02DA' 0FA0               	addlw	160
 20121  02DC' A0D8               	btfss	status,0,c
 20122  02DE' D006               	goto	u16360
 20123  02E0' EC00' F000'        	call	_RADIO_GetPacketSnr	;wreg free
 20124  02E4' 0A80               	xorlw	128
 20125  02E6' 0F60               	addlw	-160
 20126  02E8' A0D8               	btfss	status,0,c
 20127  02EA' D00C               	goto	l2064
 20128  02EC'                    u16360:
 20129                           
 20130                           ;lorawan.c: 1911: {
 20131                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 20132  02EC' 0100               	movlb	0	; () banked
 20133  02EE' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20134  02F0' 0D01               	mullw	1
 20135  02F2' 50F3               	movf	prodl,w,c
 20136  02F4' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20137  02F6' 6ED9               	movwf	fsr2l,c
 20138  02F8' 50F4               	movf	prodh,w,c
 20139  02FA' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20140  02FC' 6EDA               	movwf	fsr2h,c
 20141  02FE' 0E20               	movlw	32
 20142  0300' 6EDF               	movwf	indf2,c
 20143  0302' D00E               	goto	L12
 20144  0304'                    l2064:
 20145                           
 20146                           ;lorawan.c: 1914: else
 20147                           ;lorawan.c: 1915: {
 20148                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 20149                           
 20150                           ; BSR set to: 0
 20151  0304' 0100               	movlb	0	; () banked
 20152  0306' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20153  0308' 0D01               	mullw	1
 20154  030A' 50F3               	movf	prodl,w,c
 20155  030C' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20156  030E' 6ED9               	movwf	fsr2l,c
 20157  0310' 50F4               	movf	prodh,w,c
 20158  0312' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20159  0314' 6EDA               	movwf	fsr2h,c
 20160  0316' EC00' F000'        	call	_RADIO_GetPacketSnr	;wreg free
 20161  031A' 0B3F               	andlw	63
 20162  031C' 6EDF               	movwf	indf2,c
 20163  031E' D7C2               	goto	l2062
 20164  0320'                    L12:
 20165  0320' 2B00'              	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20166                           
 20167                           ; BSR set to: 0
 20168                           ;lorawan.c: 1917: }
 20169                           ;lorawan.c: 1918: }
 20170                           ;lorawan.c: 1919: break;
 20171  0322' D091               	goto	l2058
 20172  0324'                    
 20173                           ; BSR set to: 0
 20174                           ;lorawan.c: 1922: {
 20175                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 20176                           
 20177                           ; BSR set to: 0
 20178  0324' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20179  0326' 0D01               	mullw	1
 20180  0328' 50F3               	movf	prodl,w,c
 20181  032A' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20182  032C' 6ED9               	movwf	fsr2l,c
 20183  032E' 50F4               	movf	prodh,w,c
 20184  0330' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20185  0332' 6EDA               	movwf	fsr2h,c
 20186  0334' 0E07               	movlw	7
 20187  0336' 6EDF               	movwf	indf2,c
 20188                           
 20189                           ; BSR set to: 0
 20190  0338' 2B00'              	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20191                           
 20192                           ; BSR set to: 0
 20193                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 20194  033A' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20195  033C' 0D01               	mullw	1
 20196  033E' 50F3               	movf	prodl,w,c
 20197  0340' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20198  0342' 6ED9               	movwf	fsr2l,c
 20199  0344' 50F4               	movf	prodh,w,c
 20200  0346' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20201  0348' 6EDA               	movwf	fsr2h,c
 20202  034A' 0E00               	movlw	0
 20203  034C' 6EDF               	movwf	indf2,c
 20204                           
 20205                           ; BSR set to: 0
 20206                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 20207  034E' 5100'              	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20208  0350' 0D02               	mullw	2
 20209  0352' 0E00'              	movlw	low _loRa
 20210  0354' 6F00'              	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20211  0356' 0E00'              	movlw	high _loRa
 20212  0358' 6F00'              	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20213  035A' 0EA8               	movlw	168
 20214  035C' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20215  035E' 0E00               	movlw	0
 20216  0360' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20217  0362' 50F3               	movf	prodl,w,c
 20218  0364' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20219  0366' 50F4               	movf	prodh,w,c
 20220  0368' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20221  036A' 0E01               	movlw	1
 20222  036C' 2500'              	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20223  036E' 6ED9               	movwf	fsr2l,c
 20224  0370' 0E00               	movlw	0
 20225  0372' 2100'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20226  0374' 6EDA               	movwf	fsr2h,c
 20227  0376' 0102               	movlb	2	; () banked
 20228  0378' AEDF               	btfss	indf2,7,c
 20229  037A' D00B               	goto	l2069
 20230                           
 20231                           ; BSR set to: 2
 20232                           ;lorawan.c: 1926: {
 20233                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 20234  037C' 0100               	movlb	0	; () banked
 20235  037E' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20236  0380' 0D01               	mullw	1
 20237  0382' 50F3               	movf	prodl,w,c
 20238  0384' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20239  0386' 6ED9               	movwf	fsr2l,c
 20240  0388' 50F4               	movf	prodh,w,c
 20241  038A' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20242  038C' 6EDA               	movwf	fsr2h,c
 20243  038E' 0E00               	movlw	0
 20244  0390' 80DB               	bsf	plusw2,0,c
 20245  0392'                    l2069:
 20246                           
 20247                           ;lorawan.c: 1928: }
 20248                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 20249  0392' 0100               	movlb	0	; () banked
 20250  0394' 5100'              	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20251  0396' 0D02               	mullw	2
 20252  0398' 0E00'              	movlw	low _loRa
 20253  039A' 6F00'              	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20254  039C' 0E00'              	movlw	high _loRa
 20255  039E' 6F00'              	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20256  03A0' 0EA8               	movlw	168
 20257  03A2' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20258  03A4' 0E00               	movlw	0
 20259  03A6' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20260  03A8' 50F3               	movf	prodl,w,c
 20261  03AA' 2700'              	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20262  03AC' 50F4               	movf	prodh,w,c
 20263  03AE' 2300'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20264  03B0' 0E01               	movlw	1
 20265  03B2' 2500'              	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20266  03B4' 6ED9               	movwf	fsr2l,c
 20267  03B6' 0E00               	movlw	0
 20268  03B8' 2100'              	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20269  03BA' 6EDA               	movwf	fsr2h,c
 20270  03BC' 0102               	movlb	2	; () banked
 20271  03BE' ACDF               	btfss	indf2,6,c
 20272  03C0' D771               	goto	l2062
 20273                           
 20274                           ; BSR set to: 2
 20275                           ;lorawan.c: 1931: {
 20276                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 20277  03C2' 0100               	movlb	0	; () banked
 20278  03C4' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20279  03C6' 0D01               	mullw	1
 20280  03C8' 50F3               	movf	prodl,w,c
 20281  03CA' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20282  03CC' 6ED9               	movwf	fsr2l,c
 20283  03CE' 50F4               	movf	prodh,w,c
 20284  03D0' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20285  03D2' 6EDA               	movwf	fsr2h,c
 20286  03D4' 0E00               	movlw	0
 20287  03D6' 82DB               	bsf	plusw2,1,c
 20288                           
 20289                           ; BSR set to: 0
 20290  03D8' D765               	goto	l2062
 20291  03DA'                    l2071:
 20292                           
 20293                           ; BSR set to: 0
 20294                           ;lorawan.c: 1939: {
 20295                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 20296  03DA' 0102               	movlb	2	; () banked
 20297  03DC' 6900'              	setf	(_loRa+221)& (0+255),b
 20298                           
 20299                           ; BSR set to: 2
 20300                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 20301  03DE' 0E00               	movlw	0
 20302  03E0' 6F00'              	movwf	(_loRa+222)& (0+255),b
 20303                           
 20304                           ; BSR set to: 2
 20305                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 20306  03E2' 0100               	movlb	0	; () banked
 20307  03E4'                    
 20308                           ; BSR set to: 0
 20309                           ;lorawan.c: 1947: case DUTY_CYCLE_CID:
 20310                           ;lorawan.c: 1948: {
 20311                           ;lorawan.c: 1949: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 20312                           
 20313                           ; BSR set to: 0
 20314                           
 20315                           ; BSR set to: 0
 20316  03E4' 5100'              	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20317  03E6' 0D02               	mullw	2
 20318  03E8' 0E00'              	movlw	low (_loRa+168)
 20319  03EA' 24F3               	addwf	prodl,w,c
 20320  03EC' 6ED9               	movwf	fsr2l,c
 20321  03EE' 0E00'              	movlw	high (_loRa+168)
 20322  03F0' 20F4               	addwfc	prodh,w,c
 20323  03F2' 6EDA               	movwf	fsr2h,c
 20324  03F4' 5100'              	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20325  03F6' 0D01               	mullw	1
 20326  03F8' 50F3               	movf	prodl,w,c
 20327  03FA' 2500'              	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20328  03FC' 6EE9               	movwf	fsr0l,c
 20329  03FE' 50F4               	movf	prodh,w,c
 20330  0400' 2100'              	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20331  0402' 6EEA               	movwf	fsr0h,c
 20332  0404' CFDF FFEF          	movff	indf2,indf0
 20333  0408' D78B               	goto	L12
 20334  040A'                    l2053:
 20335                           
 20336                           ; BSR set to: 0
 20337                           
 20338                           ; BSR set to: 0
 20339  040A' 5100'              	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20340  040C' 0D02               	mullw	2
 20341  040E' 0E00'              	movlw	low (_loRa+168)
 20342  0410' 24F3               	addwf	prodl,w,c
 20343  0412' 6ED9               	movwf	fsr2l,c
 20344  0414' 0E00'              	movlw	high (_loRa+168)
 20345  0416' 20F4               	addwfc	prodh,w,c
 20346  0418' 6EDA               	movwf	fsr2h,c
 20347  041A' 50DF               	movf	indf2,w,c
 20348                           
 20349                           ; Switch size 1, requested type "space"
 20350                           ; Number of cases is 7, Range of values is 2 to 8
 20351                           ; switch strategies available:
 20352                           ; Name         Instructions Cycles
 20353                           ; simple_byte           22    12 (average)
 20354                           ;	Chosen strategy is simple_byte
 20355  041C' 0A02               	xorlw	2	; case 2
 20356  041E' B4D8               	btfsc	status,2,c
 20357  0420' D7DC               	goto	l2071
 20358  0422' 0A01               	xorlw	1	; case 3
 20359  0424' B4D8               	btfsc	status,2,c
 20360  0426' D643               	goto	l2054
 20361  0428' 0A07               	xorlw	7	; case 4
 20362  042A' B4D8               	btfsc	status,2,c
 20363  042C' D7DB               	goto	l2072
 20364  042E' 0A01               	xorlw	1	; case 5
 20365  0430' B4D8               	btfsc	status,2,c
 20366  0432' D6BB               	goto	l2059
 20367  0434' 0A03               	xorlw	3	; case 6
 20368  0436' B4D8               	btfsc	status,2,c
 20369  0438' D737               	goto	l2063
 20370  043A' 0A01               	xorlw	1	; case 7
 20371  043C' B4D8               	btfsc	status,2,c
 20372  043E' D772               	goto	l2068
 20373  0440' 0A0F               	xorlw	15	; case 8
 20374  0442' B4D8               	btfsc	status,2,c
 20375  0444' D7CF               	goto	l2072
 20376  0446'                    l2058:
 20377                           
 20378                           ; BSR set to: 0
 20379                           
 20380                           ; BSR set to: 0
 20381  0446' 2B00'              	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 20382  0448'                    l2048:
 20383                           
 20384                           ; BSR set to: 0
 20385                           
 20386                           ; BSR set to: 0
 20387  0448' 0102               	movlb	2	; () banked
 20388  044A' 5100'              	movf	(_loRa+167)& (0+255),w,b
 20389  044C' 0100               	movlb	0	; () banked
 20390  044E' 5D00'              	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 20391  0450' A0D8               	btfss	status,0,c
 20392  0452' D5E2               	goto	l2049
 20393  0454'                    u16390:
 20394                           
 20395                           ; BSR set to: 0
 20396                           ;lorawan.c: 1957: }
 20397                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 20398                           
 20399                           ; BSR set to: 0
 20400  0454' C002' FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 20401  0458' C003' FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 20402  045C' C00E' FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 20403                           
 20404                           ; BSR set to: 0
 20405  0460' 0012               	return		;funcret
 20406  0462'                    __end_of_IncludeMacCommandsResponse:
 20407                           	opt stack 0
 20408                           tosu	equ	0xFFF
 20409                           tosh	equ	0xFFE
 20410                           tosl	equ	0xFFD
 20411                           pclath	equ	0xFFA
 20412                           tblptru	equ	0xFF8
 20413                           tblptrh	equ	0xFF7
 20414                           tblptrl	equ	0xFF6
 20415                           tablat	equ	0xFF5
 20416                           prodh	equ	0xFF4
 20417                           prodl	equ	0xFF3
 20418                           intcon	equ	0xFF2
 20419                           intcon2	equ	0xFF1
 20420                           intcon3	equ	0xFF0
 20421                           indf0	equ	0xFEF
 20422                           postinc0	equ	0xFEE
 20423                           fsr0h	equ	0xFEA
 20424                           fsr0l	equ	0xFE9
 20425                           wreg	equ	0xFE8
 20426                           postinc1	equ	0xFE6
 20427                           postdec1	equ	0xFE5
 20428                           plusw1	equ	0xFE3
 20429                           fsr1h	equ	0xFE2
 20430                           fsr1l	equ	0xFE1
 20431                           indf2	equ	0xFDF
 20432                           postinc2	equ	0xFDE
 20433                           postdec2	equ	0xFDD
 20434                           plusw2	equ	0xFDB
 20435                           fsr2h	equ	0xFDA
 20436                           fsr2l	equ	0xFD9
 20437                           status	equ	0xFD8
 20438                           
 20439 ;; *************** function _RADIO_GetPacketSnr *****************
 20440 ;; Defined at:
 20441 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20442 ;; Parameters:    Size  Location     Type
 20443 ;;		None
 20444 ;; Auto vars:     Size  Location     Type
 20445 ;;		None
 20446 ;; Return value:  Size  Location     Type
 20447 ;;                  1    wreg      char 
 20448 ;; Registers used:
 20449 ;;		wreg, status,2
 20450 ;; Tracked objects:
 20451 ;;		On entry : 0/0
 20452 ;;		On exit  : 0/0
 20453 ;;		Unchanged: 0/0
 20454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20459 ;;Total ram usage:        0 bytes
 20460 ;; Hardware stack levels used:    1
 20461 ;; Hardware stack levels required when called:    7
 20462 ;; This function calls:
 20463 ;;		Nothing
 20464 ;; This function is called by:
 20465 ;;		_IncludeMacCommandsResponse
 20466 ;; This function uses a non-reentrant model
 20467 ;;
 20468                           
 20469                           	psect	text92
 20470  0000'                    __ptext92:
 20471                           	opt stack 0
 20472  0000'                    _RADIO_GetPacketSnr:
 20473                           	opt stack 20
 20474                           
 20475                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 20476                           
 20477                           ; BSR set to: 0
 20478                           ;incstack = 0
 20479  0000' 0101               	movlb	1	; () banked
 20480  0002' 5100'              	movf	(_RadioConfiguration+50)& (0+255),w,b
 20481  0004' 0012               	return	
 20482  0006'                    __end_of_RADIO_GetPacketSnr:
 20483                           	opt stack 0
 20484                           tosu	equ	0xFFF
 20485                           tosh	equ	0xFFE
 20486                           tosl	equ	0xFFD
 20487                           pclath	equ	0xFFA
 20488                           tblptru	equ	0xFF8
 20489                           tblptrh	equ	0xFF7
 20490                           tblptrl	equ	0xFF6
 20491                           tablat	equ	0xFF5
 20492                           prodh	equ	0xFF4
 20493                           prodl	equ	0xFF3
 20494                           intcon	equ	0xFF2
 20495                           intcon2	equ	0xFF1
 20496                           intcon3	equ	0xFF0
 20497                           indf0	equ	0xFEF
 20498                           postinc0	equ	0xFEE
 20499                           fsr0h	equ	0xFEA
 20500                           fsr0l	equ	0xFE9
 20501                           wreg	equ	0xFE8
 20502                           postinc1	equ	0xFE6
 20503                           postdec1	equ	0xFE5
 20504                           plusw1	equ	0xFE3
 20505                           fsr1h	equ	0xFE2
 20506                           fsr1l	equ	0xFE1
 20507                           indf2	equ	0xFDF
 20508                           postinc2	equ	0xFDE
 20509                           postdec2	equ	0xFDD
 20510                           plusw2	equ	0xFDB
 20511                           fsr2h	equ	0xFDA
 20512                           fsr2l	equ	0xFD9
 20513                           status	equ	0xFD8
 20514                           
 20515 ;; *************** function _FindSmallestDataRate *****************
 20516 ;; Defined at:
 20517 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20518 ;; Parameters:    Size  Location     Type
 20519 ;;		None
 20520 ;; Auto vars:     Size  Location     Type
 20521 ;;  dataRate        1    3[BANK0 ] unsigned char 
 20522 ;;  i               1    2[BANK0 ] unsigned char 
 20523 ;;  found           1    1[BANK0 ] unsigned char 
 20524 ;; Return value:  Size  Location     Type
 20525 ;;                  1    wreg      unsigned char 
 20526 ;; Registers used:
 20527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20528 ;; Tracked objects:
 20529 ;;		On entry : 0/0
 20530 ;;		On exit  : 0/0
 20531 ;;		Unchanged: 0/0
 20532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20534 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20535 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20536 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20537 ;;Total ram usage:        4 bytes
 20538 ;; Hardware stack levels used:    1
 20539 ;; Hardware stack levels required when called:    7
 20540 ;; This function calls:
 20541 ;;		Nothing
 20542 ;; This function is called by:
 20543 ;;		_AckRetransmissionCallback
 20544 ;;		_AssemblePacket
 20545 ;; This function uses a non-reentrant model
 20546 ;;
 20547                           
 20548                           	psect	text93
 20549  0000'                    __ptext93:
 20550                           	opt stack 0
 20551  0000'                    _FindSmallestDataRate:
 20552                           	opt stack 21
 20553                           
 20554                           ;lorawan.c: 1965: uint8_t i = 0, dataRate;
 20555                           
 20556                           ; BSR set to: 1
 20557                           ;incstack = 0
 20558  0000' 0E00               	movlw	0
 20559  0002' 0100               	movlb	0	; () banked
 20560  0004' 6F00'              	movwf	FindSmallestDataRate@i& (0+255),b
 20561                           
 20562                           ;lorawan.c: 1966: bool found = 0;
 20563  0006' 0E00               	movlw	0
 20564  0008' 6F00'              	movwf	FindSmallestDataRate@found& (0+255),b
 20565                           
 20566                           ; BSR set to: 0
 20567                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 20568  000A' 0102               	movlb	2	; () banked
 20569  000C' 5100'              	movf	(_loRa+223)& (0+255),w,b
 20570  000E' 5D00'              	subwf	(_loRa+235)& (0+255),w,b
 20571  0010' B0D8               	btfsc	status,0,c
 20572  0012' D062               	goto	l2089
 20573                           
 20574                           ; BSR set to: 2
 20575                           ;lorawan.c: 1969: {
 20576                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 20577  0014' 0500'              	decf	(_loRa+223)& (0+255),w,b
 20578  0016' 0100               	movlb	0	; () banked
 20579  0018' D050               	goto	L13
 20580  001A'                    
 20581                           ; BSR set to: 0
 20582                           ;lorawan.c: 1973: {
 20583                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 20584                           
 20585                           ; BSR set to: 0
 20586  001A' 0E00               	movlw	0
 20587  001C' 6F00'              	movwf	FindSmallestDataRate@i& (0+255),b
 20588  001E' D03D               	goto	l2081
 20589  0020'                    
 20590                           ; BSR set to: 0
 20591                           ;lorawan.c: 1975: {
 20592                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 20593                           
 20594                           ; BSR set to: 0
 20595  0020' 5100'              	movf	FindSmallestDataRate@i& (0+255),w,b
 20596  0022' 0D0E               	mullw	14
 20597  0024' 0E05               	movlw	5
 20598  0026' 26F3               	addwf	prodl,f,c
 20599  0028' 0E00               	movlw	0
 20600  002A' 22F4               	addwfc	prodh,f,c
 20601  002C' 0E00'              	movlw	low _Channels
 20602  002E' 24F3               	addwf	prodl,w,c
 20603  0030' 6ED9               	movwf	fsr2l,c
 20604  0032' 0E00'              	movlw	high _Channels
 20605  0034' 20F4               	addwfc	prodh,w,c
 20606  0036' 6EDA               	movwf	fsr2h,c
 20607  0038' 0104               	movlb	4	; () banked
 20608  003A' 50DF               	movf	223,w,c
 20609  003C' 0B0F               	andlw	15
 20610  003E' 0100               	movlb	0	; () banked
 20611  0040' 6F00'              	movwf	??_FindSmallestDataRate& (0+255),b
 20612  0042' 5100'              	movf	??_FindSmallestDataRate& (0+255),w,b
 20613  0044' 5D00'              	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20614  0046' A0D8               	btfss	status,0,c
 20615  0048' D027               	goto	l2083
 20616                           
 20617                           ; BSR set to: 0
 20618  004A' 5100'              	movf	FindSmallestDataRate@i& (0+255),w,b
 20619  004C' 0D0E               	mullw	14
 20620  004E' 0E05               	movlw	5
 20621  0050' 26F3               	addwf	prodl,f,c
 20622  0052' 0E00               	movlw	0
 20623  0054' 22F4               	addwfc	prodh,f,c
 20624  0056' 0E00'              	movlw	low _Channels
 20625  0058' 24F3               	addwf	prodl,w,c
 20626  005A' 6ED9               	movwf	fsr2l,c
 20627  005C' 0E00'              	movlw	high _Channels
 20628  005E' 20F4               	addwfc	prodh,w,c
 20629  0060' 6EDA               	movwf	fsr2h,c
 20630  0062' 0104               	movlb	4	; () banked
 20631  0064' 38DF               	swapf	223,w,c
 20632  0066' 0B0F               	andlw	15
 20633  0068' 0100               	movlb	0	; () banked
 20634  006A' 6F00'              	movwf	??_FindSmallestDataRate& (0+255),b
 20635  006C' 5100'              	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20636  006E' 5D00'              	subwf	??_FindSmallestDataRate& (0+255),w,b
 20637  0070' A0D8               	btfss	status,0,c
 20638  0072' D012               	goto	l2083
 20639                           
 20640                           ; BSR set to: 0
 20641  0074' 5100'              	movf	FindSmallestDataRate@i& (0+255),w,b
 20642  0076' 0D0E               	mullw	14
 20643  0078' 0E04               	movlw	4
 20644  007A' 26F3               	addwf	prodl,f,c
 20645  007C' 0E00               	movlw	0
 20646  007E' 22F4               	addwfc	prodh,f,c
 20647  0080' 0E00'              	movlw	low _Channels
 20648  0082' 24F3               	addwf	prodl,w,c
 20649  0084' 6ED9               	movwf	fsr2l,c
 20650  0086' 0E00'              	movlw	high _Channels
 20651  0088' 20F4               	addwfc	prodh,w,c
 20652  008A' 6EDA               	movwf	fsr2h,c
 20653  008C' 04DE               	decf	postinc2,w,c
 20654  008E' A4D8               	btfss	status,2,c
 20655  0090' D003               	goto	l2083
 20656                           
 20657                           ; BSR set to: 0
 20658                           ;lorawan.c: 1977: {
 20659                           ;lorawan.c: 1978: found = 1;
 20660  0092' 0E01               	movlw	1
 20661  0094' 6F00'              	movwf	FindSmallestDataRate@found& (0+255),b
 20662                           
 20663                           ;lorawan.c: 1979: break;
 20664  0096' D007               	goto	u16090
 20665  0098'                    l2083:
 20666                           
 20667                           ; BSR set to: 0
 20668                           
 20669                           ; BSR set to: 0
 20670  0098' 2B00'              	incf	FindSmallestDataRate@i& (0+255),f,b
 20671  009A'                    l2081:
 20672                           
 20673                           ; BSR set to: 0
 20674                           
 20675                           ; BSR set to: 0
 20676  009A' 0102               	movlb	2	; () banked
 20677  009C' 5100'              	movf	(_loRa+237)& (0+255),w,b
 20678  009E' 0100               	movlb	0	; () banked
 20679  00A0' 5D00'              	subwf	FindSmallestDataRate@i& (0+255),w,b
 20680  00A2' A0D8               	btfss	status,0,c
 20681  00A4' D7BD               	goto	l2082
 20682  00A6'                    u16090:
 20683                           
 20684                           ; BSR set to: 0
 20685                           ;lorawan.c: 1980: }
 20686                           ;lorawan.c: 1981: }
 20687                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 20688                           
 20689                           ; BSR set to: 0
 20690  00A6' 5100'              	movf	FindSmallestDataRate@found& (0+255),w,b
 20691  00A8' A4D8               	btfss	status,2,c
 20692  00AA' D008               	goto	l2085
 20693                           
 20694                           ; BSR set to: 0
 20695  00AC' 5100'              	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20696  00AE' 0102               	movlb	2	; () banked
 20697  00B0' 5D00'              	subwf	(_loRa+235)& (0+255),w,b
 20698  00B2' B0D8               	btfsc	status,0,c
 20699  00B4' D003               	goto	l2085
 20700                           
 20701                           ; BSR set to: 2
 20702                           ;lorawan.c: 1983: {
 20703                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 20704  00B6' 0100               	movlb	0	; () banked
 20705  00B8' 0500'              	decf	FindSmallestDataRate@dataRate& (0+255),w,b
 20706  00BA'                    L13:
 20707  00BA' 6F00'              	movwf	FindSmallestDataRate@dataRate& (0+255),b
 20708  00BC'                    l2085:
 20709                           
 20710                           ; BSR set to: 0
 20711                           
 20712                           ; BSR set to: 0
 20713  00BC' 0100               	movlb	0	; () banked
 20714  00BE' 5100'              	movf	FindSmallestDataRate@found& (0+255),w,b
 20715  00C0' A4D8               	btfss	status,2,c
 20716  00C2' D006               	goto	u16130
 20717                           
 20718                           ; BSR set to: 0
 20719  00C4' 0102               	movlb	2	; () banked
 20720  00C6' 5100'              	movf	(_loRa+235)& (0+255),w,b
 20721  00C8' 0100               	movlb	0	; () banked
 20722  00CA' 5D00'              	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20723  00CC' B0D8               	btfsc	status,0,c
 20724  00CE' D7A5               	goto	l2080
 20725  00D0'                    u16130:
 20726                           
 20727                           ; BSR set to: 0
 20728                           ;lorawan.c: 1985: }
 20729                           ;lorawan.c: 1986: }
 20730                           ;lorawan.c: 1988: if (found == 1)
 20731                           
 20732                           ; BSR set to: 0
 20733                           
 20734                           ; BSR set to: 0
 20735  00D0' 0500'              	decf	FindSmallestDataRate@found& (0+255),w,b
 20736  00D2' B4D8               	btfsc	status,2,c
 20737                           
 20738                           ; BSR set to: 0
 20739                           ;lorawan.c: 1989: {
 20740                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 20741  00D4' C003' F0DF'        	movff	FindSmallestDataRate@dataRate,_loRa+223
 20742  00D8'                    l2089:
 20743                           
 20744                           ;lorawan.c: 1991: }
 20745                           ;lorawan.c: 1992: }
 20746                           ;lorawan.c: 1994: return found;
 20747                           
 20748                           ; BSR set to: 0
 20749                           
 20750                           ; BSR set to: 0
 20751  00D8' 0100               	movlb	0	; () banked
 20752  00DA' 5100'              	movf	FindSmallestDataRate@found& (0+255),w,b
 20753  00DC' 0012               	return	
 20754  00DE'                    __end_of_FindSmallestDataRate:
 20755                           	opt stack 0
 20756                           tosu	equ	0xFFF
 20757                           tosh	equ	0xFFE
 20758                           tosl	equ	0xFFD
 20759                           pclath	equ	0xFFA
 20760                           tblptru	equ	0xFF8
 20761                           tblptrh	equ	0xFF7
 20762                           tblptrl	equ	0xFF6
 20763                           tablat	equ	0xFF5
 20764                           prodh	equ	0xFF4
 20765                           prodl	equ	0xFF3
 20766                           intcon	equ	0xFF2
 20767                           intcon2	equ	0xFF1
 20768                           intcon3	equ	0xFF0
 20769                           indf0	equ	0xFEF
 20770                           postinc0	equ	0xFEE
 20771                           fsr0h	equ	0xFEA
 20772                           fsr0l	equ	0xFE9
 20773                           wreg	equ	0xFE8
 20774                           postinc1	equ	0xFE6
 20775                           postdec1	equ	0xFE5
 20776                           plusw1	equ	0xFE3
 20777                           fsr1h	equ	0xFE2
 20778                           fsr1l	equ	0xFE1
 20779                           indf2	equ	0xFDF
 20780                           postinc2	equ	0xFDE
 20781                           postdec2	equ	0xFDD
 20782                           plusw2	equ	0xFDB
 20783                           fsr2h	equ	0xFDA
 20784                           fsr2l	equ	0xFD9
 20785                           status	equ	0xFD8
 20786                           
 20787 ;; *************** function _EncryptFRMPayload *****************
 20788 ;; Defined at:
 20789 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20790 ;; Parameters:    Size  Location     Type
 20791 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 20792 ;;		 -> STR_1(5), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 20793 ;;  bufferLength    1   51[BANK0 ] unsigned char 
 20794 ;;  dir             1   52[BANK0 ] unsigned char 
 20795 ;;  frameCounter    4   53[BANK0 ] unsigned long 
 20796 ;;  key             2   57[BANK0 ] PTR unsigned char 
 20797 ;;		 -> loRa.activationParameters(105), loRa(245), 
 20798 ;;  macBufferInd    1   59[BANK0 ] unsigned char 
 20799 ;;  bufferToBeEn    2   60[BANK0 ] PTR unsigned char 
 20800 ;;		 -> macBuffer(271), radioBuffer(271), 
 20801 ;;  multicastSta    1   62[BANK0 ] unsigned char 
 20802 ;; Auto vars:     Size  Location     Type
 20803 ;;  j               1   72[BANK0 ] unsigned char 
 20804 ;;  i               1   71[BANK0 ] unsigned char 
 20805 ;;  k               1   70[BANK0 ] unsigned char 
 20806 ;; Return value:  Size  Location     Type
 20807 ;;                  1    wreg      void 
 20808 ;; Registers used:
 20809 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20810 ;; Tracked objects:
 20811 ;;		On entry : 0/0
 20812 ;;		On exit  : 0/0
 20813 ;;		Unchanged: 0/0
 20814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20815 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20816 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20817 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20818 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20819 ;;Total ram usage:       24 bytes
 20820 ;; Hardware stack levels used:    1
 20821 ;; Hardware stack levels required when called:   10
 20822 ;; This function calls:
 20823 ;;		_AESEncodeLoRa
 20824 ;;		_AssembleEncryptionBlock
 20825 ;;		___awdiv
 20826 ;; This function is called by:
 20827 ;;		_LORAWAN_RxDone
 20828 ;;		_AssemblePacket
 20829 ;; This function uses a non-reentrant model
 20830 ;;
 20831                           
 20832                           	psect	text94
 20833  0000'                    __ptext94:
 20834                           	opt stack 0
 20835  0000'                    _EncryptFRMPayload:
 20836                           	opt stack 18
 20837                           
 20838                           ;lorawan.c: 2207: uint8_t k = 0, i = 0, j = 0;
 20839                           
 20840                           ; BSR set to: 0
 20841                           ;incstack = 0
 20842  0000' 0E00               	movlw	0
 20843  0002' 0100               	movlb	0	; () banked
 20844  0004' 6F00'              	movwf	EncryptFRMPayload@k& (0+255),b
 20845  0006' 0E00               	movlw	0
 20846  0008' 6F00'              	movwf	EncryptFRMPayload@i& (0+255),b
 20847  000A' 0E00               	movlw	0
 20848  000C' 6F00'              	movwf	EncryptFRMPayload@j& (0+255),b
 20849                           
 20850                           ; BSR set to: 0
 20851                           ;lorawan.c: 2209: k = bufferLength / 16;
 20852  000E' C033' F000'        	movff	EncryptFRMPayload@bufferLength,___awdiv@dividend
 20853  0012' 6B00'              	clrf	(___awdiv@dividend+1)& (0+255),b
 20854  0014' 0E00               	movlw	0
 20855  0016' 6F00'              	movwf	(___awdiv@divisor+1)& (0+255),b
 20856  0018' 0E10               	movlw	16
 20857  001A' 6F00'              	movwf	___awdiv@divisor& (0+255),b
 20858  001C' EC00' F000'        	call	___awdiv	;wreg free
 20859  0020' 0100               	movlb	0	; () banked
 20860  0022' 5100'              	movf	?___awdiv& (0+255),w,b
 20861  0024' 6F00'              	movwf	EncryptFRMPayload@k& (0+255),b
 20862                           
 20863                           ; BSR set to: 0
 20864                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 20865  0026' 0E01               	movlw	1
 20866  0028' 6F00'              	movwf	EncryptFRMPayload@i& (0+255),b
 20867  002A' D06D               	goto	l2154
 20868  002C'                    
 20869                           ; BSR set to: 0
 20870                           ;lorawan.c: 2211: {
 20871                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 20872                           
 20873                           ; BSR set to: 0
 20874  002C' C035' F00B'        	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 20875  0030' C036' F00C'        	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 20876  0034' C037' F00D'        	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 20877  0038' C038' F00E'        	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 20878  003C' C047' F00F'        	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 20879  0040' 0E01               	movlw	1
 20880  0042' 6F00'              	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 20881  0044' C03E' F011'        	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 20882  0048' 5100'              	movf	EncryptFRMPayload@dir& (0+255),w,b
 20883  004A' EC00' F000'        	call	_AssembleEncryptionBlock
 20884                           
 20885                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 20886  004E' 0E00'              	movlw	low _aesBuffer
 20887  0050' 0100               	movlb	0	; () banked
 20888  0052' 6F00'              	movwf	AESEncodeLoRa@block& (0+255),b
 20889  0054' 0E00'              	movlw	high _aesBuffer
 20890  0056' 6F00'              	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20891  0058' C039' F01F'        	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 20892  005C' C03A' F020'        	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 20893  0060' EC00' F000'        	call	_AESEncodeLoRa	;wreg free
 20894                           
 20895                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 20896  0064' 0E00               	movlw	0
 20897  0066' 0100               	movlb	0	; () banked
 20898  0068' 6F00'              	movwf	EncryptFRMPayload@j& (0+255),b
 20899  006A'                    l14040:
 20900                           
 20901                           ; BSR set to: 0
 20902  006A' 0E0F               	movlw	15
 20903  006C' 6500'              	cpfsgt	EncryptFRMPayload@j& (0+255),b
 20904  006E' D001               	goto	l2156
 20905  0070' D049               	goto	u16180
 20906  0072'                    l2156:
 20907                           
 20908                           ; BSR set to: 0
 20909                           ;lorawan.c: 2216: {
 20910                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 20911                           
 20912                           ; BSR set to: 0
 20913  0072' 5100'              	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 20914  0074' 0D01               	mullw	1
 20915  0076' 50F3               	movf	prodl,w,c
 20916  0078' 2500'              	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 20917  007A' 6ED9               	movwf	fsr2l,c
 20918  007C' 50F4               	movf	prodh,w,c
 20919  007E' 2100'              	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 20920  0080' 6EDA               	movwf	fsr2h,c
 20921  0082' 0EF0               	movlw	240
 20922  0084' 6F00'              	movwf	??_EncryptFRMPayload& (0+255),b
 20923  0086' 0EFF               	movlw	255
 20924  0088' 6F00'              	movwf	(??_EncryptFRMPayload+1)& (0+255),b
 20925  008A' 5100'              	movf	EncryptFRMPayload@i& (0+255),w,b
 20926  008C' 6F00'              	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 20927  008E' 6B00'              	clrf	(??_EncryptFRMPayload+3)& (0+255),b
 20928  0090' 3B00'              	swapf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20929  0092' 3B00'              	swapf	(??_EncryptFRMPayload+3)& (0+255),f,b
 20930  0094' 0EF0               	movlw	240
 20931  0096' 1700'              	andwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 20932  0098' 5100'              	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 20933  009A' 0B0F               	andlw	15
 20934  009C' 1300'              	iorwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 20935  009E' 0EF0               	movlw	240
 20936  00A0' 1700'              	andwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20937  00A2' 5100'              	movf	EncryptFRMPayload@j& (0+255),w,b
 20938  00A4' 2700'              	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20939  00A6' 0E00               	movlw	0
 20940  00A8' 2300'              	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 20941  00AA' 5100'              	movf	??_EncryptFRMPayload& (0+255),w,b
 20942  00AC' 2700'              	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20943  00AE' 5100'              	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 20944  00B0' 2300'              	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 20945  00B2' C031' F043'        	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+4
 20946  00B6' C032' F044'        	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+5
 20947  00BA' 5100'              	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 20948  00BC' 2700'              	addwf	(??_EncryptFRMPayload+4)& (0+255),f,b
 20949  00BE' 5100'              	movf	(??_EncryptFRMPayload+3)& (0+255),w,b
 20950  00C0' 2300'              	addwfc	(??_EncryptFRMPayload+5)& (0+255),f,b
 20951  00C2' C043' FFF6         	movff	??_EncryptFRMPayload+4,tblptrl
 20952  00C6' C044' FFF7         	movff	??_EncryptFRMPayload+5,tblptrh
 20953  00CA' 0E00'              	movlw	low (__mediumconst shr (0+16))
 20954  00CC' 6EF8               	movwf	tblptru,c
 20955  00CE' 0EFF'              	movlw	(high __ramtop+-1)
 20956  00D0' 64F7               	cpfsgt	tblptrh,c
 20957  00D2' D003               	bra	u16177
 20958  00D4' 0008               	tblrd		*
 20959  00D6' 50F5               	movf	tablat,w,c
 20960  00D8' D005               	bra	u16170
 20961  00DA'                    u16177:
 20962  00DA' CFF6 FFE9          	movff	tblptrl,fsr0l
 20963  00DE' CFF7 FFEA          	movff	tblptrh,fsr0h
 20964  00E2' 50EF               	movf	indf0,w,c
 20965  00E4'                    u16170:
 20966  00E4' 0100               	movlb	0	; () banked
 20967  00E6' 6F00'              	movwf	(??_EncryptFRMPayload+6)& (0+255),b
 20968  00E8' 5100'              	movf	EncryptFRMPayload@j& (0+255),w,b
 20969  00EA' 0D01               	mullw	1
 20970  00EC' 0E00'              	movlw	low _aesBuffer
 20971  00EE' 24F3               	addwf	prodl,w,c
 20972  00F0' 6EE9               	movwf	fsr0l,c
 20973  00F2' 0E00'              	movlw	high _aesBuffer
 20974  00F4' 20F4               	addwfc	prodh,w,c
 20975  00F6' 6EEA               	movwf	fsr0h,c
 20976  00F8' 50EF               	movf	indf0,w,c
 20977  00FA' 1900'              	xorwf	(??_EncryptFRMPayload+6)& (0+255),w,b
 20978  00FC' 6EDF               	movwf	indf2,c
 20979                           
 20980                           ; BSR set to: 0
 20981  00FE' 2B00'              	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 20982                           
 20983                           ; BSR set to: 0
 20984  0100' 2B00'              	incf	EncryptFRMPayload@j& (0+255),f,b
 20985  0102' D7B3               	goto	l14040
 20986  0104'                    u16180:
 20987                           
 20988                           ; BSR set to: 0
 20989                           
 20990                           ; BSR set to: 0
 20991  0104' 2B00'              	incf	EncryptFRMPayload@i& (0+255),f,b
 20992  0106'                    l2154:
 20993                           
 20994                           ; BSR set to: 0
 20995                           
 20996                           ; BSR set to: 0
 20997  0106' 5100'              	movf	EncryptFRMPayload@i& (0+255),w,b
 20998  0108' 5D00'              	subwf	EncryptFRMPayload@k& (0+255),w,b
 20999  010A' B0D8               	btfsc	status,0,c
 21000  010C' D78F               	goto	l2155
 21001                           
 21002                           ; BSR set to: 0
 21003                           ;lorawan.c: 2218: }
 21004                           ;lorawan.c: 2219: }
 21005                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 21006                           
 21007                           ; BSR set to: 0
 21008  010E' C033' F03F'        	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 21009  0112' 0E0F               	movlw	15
 21010  0114' 1700'              	andwf	??_EncryptFRMPayload& (0+255),f,b
 21011  0116' B4D8               	btfsc	status,2,c
 21012  0118' 0012               	return	
 21013                           
 21014                           ; BSR set to: 0
 21015                           ;lorawan.c: 2222: {
 21016                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 21017  011A' C035' F00B'        	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 21018  011E' C036' F00C'        	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 21019  0122' C037' F00D'        	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 21020  0126' C038' F00E'        	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 21021  012A' C047' F00F'        	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 21022  012E' 0E01               	movlw	1
 21023  0130' 6F00'              	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 21024  0132' C03E' F011'        	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 21025  0136' 5100'              	movf	EncryptFRMPayload@dir& (0+255),w,b
 21026  0138' EC00' F000'        	call	_AssembleEncryptionBlock
 21027                           
 21028                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 21029  013C' 0E00'              	movlw	low _aesBuffer
 21030  013E' 0100               	movlb	0	; () banked
 21031  0140' 6F00'              	movwf	AESEncodeLoRa@block& (0+255),b
 21032  0142' 0E00'              	movlw	high _aesBuffer
 21033  0144' 6F00'              	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21034  0146' C039' F01F'        	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 21035  014A' C03A' F020'        	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 21036  014E' EC00' F000'        	call	_AESEncodeLoRa	;wreg free
 21037                           
 21038                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 21039  0152' 0E00               	movlw	0
 21040  0154' 0100               	movlb	0	; () banked
 21041  0156' 6F00'              	movwf	EncryptFRMPayload@j& (0+255),b
 21042  0158' D036               	goto	l2160
 21043  015A'                    
 21044                           ; BSR set to: 0
 21045                           ;lorawan.c: 2227: {
 21046                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 21047                           
 21048                           ; BSR set to: 0
 21049  015A' 5100'              	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 21050  015C' 0D01               	mullw	1
 21051  015E' 50F3               	movf	prodl,w,c
 21052  0160' 2500'              	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 21053  0162' 6ED9               	movwf	fsr2l,c
 21054  0164' 50F4               	movf	prodh,w,c
 21055  0166' 2100'              	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 21056  0168' 6EDA               	movwf	fsr2h,c
 21057  016A' 5100'              	movf	EncryptFRMPayload@k& (0+255),w,b
 21058  016C' 0D10               	mullw	16
 21059  016E' 5100'              	movf	EncryptFRMPayload@j& (0+255),w,b
 21060  0170' 26F3               	addwf	prodl,f,c
 21061  0172' 0E00               	movlw	0
 21062  0174' 22F4               	addwfc	prodh,f,c
 21063  0176' C031' F03F'        	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 21064  017A' C032' F040'        	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 21065  017E' 50F3               	movf	prodl,w,c
 21066  0180' 2700'              	addwf	??_EncryptFRMPayload& (0+255),f,b
 21067  0182' 50F4               	movf	prodh,w,c
 21068  0184' 2300'              	addwfc	(??_EncryptFRMPayload+1)& (0+255),f,b
 21069  0186' C03F' FFF6         	movff	??_EncryptFRMPayload,tblptrl
 21070  018A' C040' FFF7         	movff	??_EncryptFRMPayload+1,tblptrh
 21071  018E' 0E00'              	movlw	low (__mediumconst shr (0+16))
 21072  0190' 6EF8               	movwf	tblptru,c
 21073  0192' 0EFF'              	movlw	(high __ramtop+-1)
 21074  0194' 64F7               	cpfsgt	tblptrh,c
 21075  0196' D003               	bra	u16217
 21076  0198' 0008               	tblrd		*
 21077  019A' 50F5               	movf	tablat,w,c
 21078  019C' D005               	bra	u16210
 21079  019E'                    u16217:
 21080  019E' CFF6 FFE9          	movff	tblptrl,fsr0l
 21081  01A2' CFF7 FFEA          	movff	tblptrh,fsr0h
 21082  01A6' 50EF               	movf	indf0,w,c
 21083  01A8'                    u16210:
 21084  01A8' 0100               	movlb	0	; () banked
 21085  01AA' 6F00'              	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 21086  01AC' 5100'              	movf	EncryptFRMPayload@j& (0+255),w,b
 21087  01AE' 0D01               	mullw	1
 21088  01B0' 0E00'              	movlw	low _aesBuffer
 21089  01B2' 24F3               	addwf	prodl,w,c
 21090  01B4' 6EE9               	movwf	fsr0l,c
 21091  01B6' 0E00'              	movlw	high _aesBuffer
 21092  01B8' 20F4               	addwfc	prodh,w,c
 21093  01BA' 6EEA               	movwf	fsr0h,c
 21094  01BC' 50EF               	movf	indf0,w,c
 21095  01BE' 1900'              	xorwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 21096  01C0' 6EDF               	movwf	indf2,c
 21097                           
 21098                           ; BSR set to: 0
 21099  01C2' 2B00'              	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 21100                           
 21101                           ; BSR set to: 0
 21102  01C4' 2B00'              	incf	EncryptFRMPayload@j& (0+255),f,b
 21103  01C6'                    l2160:
 21104                           
 21105                           ; BSR set to: 0
 21106                           
 21107                           ; BSR set to: 0
 21108  01C6' C033' F03F'        	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 21109  01CA' 0E0F               	movlw	15
 21110  01CC' 1700'              	andwf	??_EncryptFRMPayload& (0+255),f,b
 21111  01CE' 5100'              	movf	??_EncryptFRMPayload& (0+255),w,b
 21112  01D0' 5D00'              	subwf	EncryptFRMPayload@j& (0+255),w,b
 21113  01D2' B0D8               	btfsc	status,0,c
 21114  01D4' 0012               	return	
 21115  01D6' D7C1               	goto	l2161
 21116  01D8'                    __end_of_EncryptFRMPayload:
 21117                           	opt stack 0
 21118                           tosu	equ	0xFFF
 21119                           tosh	equ	0xFFE
 21120                           tosl	equ	0xFFD
 21121                           pclath	equ	0xFFA
 21122                           tblptru	equ	0xFF8
 21123                           tblptrh	equ	0xFF7
 21124                           tblptrl	equ	0xFF6
 21125                           tablat	equ	0xFF5
 21126                           prodh	equ	0xFF4
 21127                           prodl	equ	0xFF3
 21128                           intcon	equ	0xFF2
 21129                           intcon2	equ	0xFF1
 21130                           intcon3	equ	0xFF0
 21131                           indf0	equ	0xFEF
 21132                           postinc0	equ	0xFEE
 21133                           fsr0h	equ	0xFEA
 21134                           fsr0l	equ	0xFE9
 21135                           wreg	equ	0xFE8
 21136                           postinc1	equ	0xFE6
 21137                           postdec1	equ	0xFE5
 21138                           plusw1	equ	0xFE3
 21139                           fsr1h	equ	0xFE2
 21140                           fsr1l	equ	0xFE1
 21141                           indf2	equ	0xFDF
 21142                           postinc2	equ	0xFDE
 21143                           postdec2	equ	0xFDD
 21144                           plusw2	equ	0xFDB
 21145                           fsr2h	equ	0xFDA
 21146                           fsr2l	equ	0xFD9
 21147                           status	equ	0xFD8
 21148                           
 21149 ;; *************** function ___awdiv *****************
 21150 ;; Defined at:
 21151 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 21152 ;; Parameters:    Size  Location     Type
 21153 ;;  dividend        2    0[BANK0 ] int 
 21154 ;;  divisor         2    2[BANK0 ] int 
 21155 ;; Auto vars:     Size  Location     Type
 21156 ;;  quotient        2    6[BANK0 ] int 
 21157 ;;  sign            1    5[BANK0 ] unsigned char 
 21158 ;;  counter         1    4[BANK0 ] unsigned char 
 21159 ;; Return value:  Size  Location     Type
 21160 ;;                  2    0[BANK0 ] int 
 21161 ;; Registers used:
 21162 ;;		wreg, status,2, status,0
 21163 ;; Tracked objects:
 21164 ;;		On entry : 0/0
 21165 ;;		On exit  : 0/0
 21166 ;;		Unchanged: 0/0
 21167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21168 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21169 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21171 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21172 ;;Total ram usage:        8 bytes
 21173 ;; Hardware stack levels used:    1
 21174 ;; Hardware stack levels required when called:    7
 21175 ;; This function calls:
 21176 ;;		Nothing
 21177 ;; This function is called by:
 21178 ;;		_EncryptFRMPayload
 21179 ;; This function uses a non-reentrant model
 21180 ;;
 21181                           
 21182                           	psect	text95
 21183  0000'                    __ptext95:
 21184                           	opt stack 0
 21185  0000'                    ___awdiv:
 21186                           	opt stack 20
 21187                           
 21188                           ; BSR set to: 0
 21189                           ;incstack = 0
 21190  0000' 0E00               	movlw	0
 21191  0002' 0100               	movlb	0	; () banked
 21192  0004' 6F00'              	movwf	___awdiv@sign& (0+255),b
 21193                           
 21194                           ; BSR set to: 0
 21195  0006' AF00'              	btfss	(___awdiv@divisor+1)& (0+255),7,b
 21196  0008' D006               	goto	l2740
 21197                           
 21198                           ; BSR set to: 0
 21199  000A' 6D00'              	negf	___awdiv@divisor& (0+255),b
 21200  000C' 1F00'              	comf	(___awdiv@divisor+1)& (0+255),f,b
 21201  000E' B0D8               	btfsc	status,0,c
 21202  0010' 2B00'              	incf	(___awdiv@divisor+1)& (0+255),f,b
 21203                           
 21204                           ; BSR set to: 0
 21205  0012' 0E01               	movlw	1
 21206  0014' 6F00'              	movwf	___awdiv@sign& (0+255),b
 21207  0016'                    l2740:
 21208                           
 21209                           ; BSR set to: 0
 21210                           
 21211                           ; BSR set to: 0
 21212  0016' AF00'              	btfss	(___awdiv@dividend+1)& (0+255),7,b
 21213  0018' D006               	goto	l2741
 21214                           
 21215                           ; BSR set to: 0
 21216  001A' 6D00'              	negf	___awdiv@dividend& (0+255),b
 21217  001C' 1F00'              	comf	(___awdiv@dividend+1)& (0+255),f,b
 21218  001E' B0D8               	btfsc	status,0,c
 21219  0020' 2B00'              	incf	(___awdiv@dividend+1)& (0+255),f,b
 21220                           
 21221                           ; BSR set to: 0
 21222  0022' 0E01               	movlw	1
 21223  0024' 1B00'              	xorwf	___awdiv@sign& (0+255),f,b
 21224  0026'                    l2741:
 21225                           
 21226                           ; BSR set to: 0
 21227                           
 21228                           ; BSR set to: 0
 21229  0026' 0E00               	movlw	0
 21230  0028' 6F00'              	movwf	(___awdiv@quotient+1)& (0+255),b
 21231  002A' 0E00               	movlw	0
 21232  002C' 6F00'              	movwf	___awdiv@quotient& (0+255),b
 21233                           
 21234                           ; BSR set to: 0
 21235  002E' 5100'              	movf	___awdiv@divisor& (0+255),w,b
 21236  0030' 1100'              	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 21237  0032' B4D8               	btfsc	status,2,c
 21238  0034' D01C               	goto	l2748
 21239                           
 21240                           ; BSR set to: 0
 21241  0036' 0E01               	movlw	1
 21242  0038' 6F00'              	movwf	___awdiv@counter& (0+255),b
 21243  003A' D004               	goto	l2743
 21244  003C'                    
 21245                           ; BSR set to: 0
 21246                           
 21247                           ; BSR set to: 0
 21248  003C' 90D8               	bcf	status,0,c
 21249  003E' 3700'              	rlcf	___awdiv@divisor& (0+255),f,b
 21250  0040' 3700'              	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 21251  0042' 2B00'              	incf	___awdiv@counter& (0+255),f,b
 21252  0044'                    l2743:
 21253                           
 21254                           ; BSR set to: 0
 21255                           
 21256                           ; BSR set to: 0
 21257  0044' AF00'              	btfss	(___awdiv@divisor+1)& (0+255),7,b
 21258  0046' D7FA               	goto	l2744
 21259  0048'                    u15330:
 21260                           
 21261                           ; BSR set to: 0
 21262                           
 21263                           ; BSR set to: 0
 21264                           
 21265                           ; BSR set to: 0
 21266  0048' 90D8               	bcf	status,0,c
 21267  004A' 3700'              	rlcf	___awdiv@quotient& (0+255),f,b
 21268  004C' 3700'              	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 21269                           
 21270                           ; BSR set to: 0
 21271  004E' 5100'              	movf	___awdiv@divisor& (0+255),w,b
 21272  0050' 5D00'              	subwf	___awdiv@dividend& (0+255),w,b
 21273  0052' 5100'              	movf	(___awdiv@divisor+1)& (0+255),w,b
 21274  0054' 5900'              	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 21275  0056' A0D8               	btfss	status,0,c
 21276  0058' D005               	goto	l2747
 21277                           
 21278                           ; BSR set to: 0
 21279  005A' 5100'              	movf	___awdiv@divisor& (0+255),w,b
 21280  005C' 5F00'              	subwf	___awdiv@dividend& (0+255),f,b
 21281  005E' 5100'              	movf	(___awdiv@divisor+1)& (0+255),w,b
 21282  0060' 5B00'              	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 21283                           
 21284                           ; BSR set to: 0
 21285  0062' 8100'              	bsf	___awdiv@quotient& (0+255),0,b
 21286  0064'                    l2747:
 21287                           
 21288                           ; BSR set to: 0
 21289                           
 21290                           ; BSR set to: 0
 21291  0064' 90D8               	bcf	status,0,c
 21292  0066' 3300'              	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 21293  0068' 3300'              	rrcf	___awdiv@divisor& (0+255),f,b
 21294                           
 21295                           ; BSR set to: 0
 21296  006A' 2F00'              	decfsz	___awdiv@counter& (0+255),f,b
 21297  006C' D7ED               	goto	u15330
 21298  006E'                    l2748:
 21299                           
 21300                           ; BSR set to: 0
 21301                           
 21302                           ; BSR set to: 0
 21303                           
 21304                           ; BSR set to: 0
 21305  006E' 5100'              	movf	___awdiv@sign& (0+255),w,b
 21306  0070' B4D8               	btfsc	status,2,c
 21307  0072' D004               	goto	l2749
 21308                           
 21309                           ; BSR set to: 0
 21310  0074' 6D00'              	negf	___awdiv@quotient& (0+255),b
 21311  0076' 1F00'              	comf	(___awdiv@quotient+1)& (0+255),f,b
 21312  0078' B0D8               	btfsc	status,0,c
 21313  007A' 2B00'              	incf	(___awdiv@quotient+1)& (0+255),f,b
 21314  007C'                    l2749:
 21315                           
 21316                           ; BSR set to: 0
 21317                           
 21318                           ; BSR set to: 0
 21319  007C' C006' F000'        	movff	___awdiv@quotient,?___awdiv
 21320  0080' C007' F001'        	movff	___awdiv@quotient+1,?___awdiv+1
 21321  0084' 0012               	return	
 21322  0086'                    __end_of___awdiv:
 21323                           	opt stack 0
 21324                           tosu	equ	0xFFF
 21325                           tosh	equ	0xFFE
 21326                           tosl	equ	0xFFD
 21327                           pclath	equ	0xFFA
 21328                           tblptru	equ	0xFF8
 21329                           tblptrh	equ	0xFF7
 21330                           tblptrl	equ	0xFF6
 21331                           tablat	equ	0xFF5
 21332                           prodh	equ	0xFF4
 21333                           prodl	equ	0xFF3
 21334                           intcon	equ	0xFF2
 21335                           intcon2	equ	0xFF1
 21336                           intcon3	equ	0xFF0
 21337                           indf0	equ	0xFEF
 21338                           postinc0	equ	0xFEE
 21339                           fsr0h	equ	0xFEA
 21340                           fsr0l	equ	0xFE9
 21341                           wreg	equ	0xFE8
 21342                           postinc1	equ	0xFE6
 21343                           postdec1	equ	0xFE5
 21344                           plusw1	equ	0xFE3
 21345                           fsr1h	equ	0xFE2
 21346                           fsr1l	equ	0xFE1
 21347                           indf2	equ	0xFDF
 21348                           postinc2	equ	0xFDE
 21349                           postdec2	equ	0xFDD
 21350                           plusw2	equ	0xFDB
 21351                           fsr2h	equ	0xFDA
 21352                           fsr2l	equ	0xFD9
 21353                           status	equ	0xFD8
 21354                           
 21355 ;; *************** function _AssembleEncryptionBlock *****************
 21356 ;; Defined at:
 21357 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21358 ;; Parameters:    Size  Location     Type
 21359 ;;  dir             1    wreg     unsigned char 
 21360 ;;  frameCounter    4   11[BANK0 ] unsigned long 
 21361 ;;  blockId         1   15[BANK0 ] unsigned char 
 21362 ;;  firstByte       1   16[BANK0 ] unsigned char 
 21363 ;;  multicastSta    1   17[BANK0 ] unsigned char 
 21364 ;; Auto vars:     Size  Location     Type
 21365 ;;  dir             1   18[BANK0 ] unsigned char 
 21366 ;;  bufferIndex     1   19[BANK0 ] unsigned char 
 21367 ;; Return value:  Size  Location     Type
 21368 ;;                  1    wreg      void 
 21369 ;; Registers used:
 21370 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21371 ;; Tracked objects:
 21372 ;;		On entry : 0/0
 21373 ;;		On exit  : 0/0
 21374 ;;		Unchanged: 0/0
 21375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21376 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21377 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21379 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21380 ;;Total ram usage:        9 bytes
 21381 ;; Hardware stack levels used:    1
 21382 ;; Hardware stack levels required when called:    8
 21383 ;; This function calls:
 21384 ;;		_memcpy
 21385 ;;		_memset
 21386 ;; This function is called by:
 21387 ;;		_LORAWAN_RxDone
 21388 ;;		_AssemblePacket
 21389 ;;		_EncryptFRMPayload
 21390 ;; This function uses a non-reentrant model
 21391 ;;
 21392                           
 21393                           	psect	text96
 21394  0000'                    __ptext96:
 21395                           	opt stack 0
 21396  0000'                    _AssembleEncryptionBlock:
 21397                           	opt stack 19
 21398                           
 21399                           ; BSR set to: 0
 21400                           ;incstack = 0
 21401                           ;AssembleEncryptionBlock@dir stored from wreg
 21402  0000' 0100               	movlb	0	; () banked
 21403  0002' 6F00'              	movwf	AssembleEncryptionBlock@dir& (0+255),b
 21404                           
 21405                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 21406  0004' 0E00               	movlw	0
 21407  0006' 0100               	movlb	0	; () banked
 21408  0008' 6F00'              	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21409                           
 21410                           ; BSR set to: 0
 21411                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 21412  000A' 0E00'              	movlw	low _aesBuffer
 21413  000C' 6F00'              	movwf	memset@p1& (0+255),b
 21414  000E' 0E00'              	movlw	high _aesBuffer
 21415  0010' 6F00'              	movwf	(memset@p1+1)& (0+255),b
 21416  0012' 0E00               	movlw	0
 21417  0014' 6F00'              	movwf	(memset@c+1)& (0+255),b
 21418  0016' 0E00               	movlw	0
 21419  0018' 6F00'              	movwf	memset@c& (0+255),b
 21420  001A' 0E00               	movlw	0
 21421  001C' 6F00'              	movwf	(memset@n+1)& (0+255),b
 21422  001E' 0E10               	movlw	16
 21423  0020' 6F00'              	movwf	memset@n& (0+255),b
 21424  0022' EC00' F000'        	call	_memset	;wreg free
 21425                           
 21426                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 21427  0026' 0100               	movlb	0	; () banked
 21428  0028' 5100'              	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21429  002A' 0D01               	mullw	1
 21430  002C' 0E00'              	movlw	low _aesBuffer
 21431  002E' 24F3               	addwf	prodl,w,c
 21432  0030' 6ED9               	movwf	fsr2l,c
 21433  0032' 0E00'              	movlw	high _aesBuffer
 21434  0034' 20F4               	addwfc	prodh,w,c
 21435  0036' 6EDA               	movwf	fsr2h,c
 21436  0038' C010' FFDF         	movff	AssembleEncryptionBlock@firstByte,indf2
 21437                           
 21438                           ; BSR set to: 0
 21439                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 21440  003C' 5100'              	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21441  003E' 0F05               	addlw	5
 21442  0040' 6F00'              	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21443                           
 21444                           ; BSR set to: 0
 21445                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 21446  0042' 5100'              	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21447  0044' 0D01               	mullw	1
 21448  0046' 0E00'              	movlw	low _aesBuffer
 21449  0048' 24F3               	addwf	prodl,w,c
 21450  004A' 6ED9               	movwf	fsr2l,c
 21451  004C' 0E00'              	movlw	high _aesBuffer
 21452  004E' 20F4               	addwfc	prodh,w,c
 21453  0050' 6EDA               	movwf	fsr2h,c
 21454  0052' C012' FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 21455                           
 21456                           ; BSR set to: 0
 21457  0056' 2B00'              	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 21458                           
 21459                           ; BSR set to: 0
 21460                           ;lorawan.c: 2168: if (0 == multicastStatus)
 21461  0058' 5100'              	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 21462  005A' A4D8               	btfss	status,2,c
 21463  005C' D013               	goto	l2143
 21464                           
 21465                           ; BSR set to: 0
 21466                           ;lorawan.c: 2169: {
 21467                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 21468  005E' 5100'              	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21469  0060' 0D01               	mullw	1
 21470  0062' 0E00'              	movlw	low _aesBuffer
 21471  0064' 24F3               	addwf	prodl,w,c
 21472  0066' 6F00'              	movwf	memcpy@d1& (0+255),b
 21473  0068' 0E00'              	movlw	high _aesBuffer
 21474  006A' 20F4               	addwfc	prodh,w,c
 21475  006C' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 21476  006E' 0E00'              	movlw	low (_loRa+30)
 21477  0070' 6F00'              	movwf	memcpy@s1& (0+255),b
 21478  0072' 0E00'              	movlw	high (_loRa+30)
 21479  0074' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 21480  0076' 0E00               	movlw	0
 21481  0078' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 21482  007A' 0E04               	movlw	4
 21483  007C' 6F00'              	movwf	memcpy@n& (0+255),b
 21484  007E' EC00' F000'        	call	_memcpy	;wreg free
 21485  0082' D012               	goto	l13530
 21486  0084'                    l2143:
 21487                           
 21488                           ; BSR set to: 0
 21489                           ;lorawan.c: 2173: else
 21490                           ;lorawan.c: 2174: {
 21491                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 21492                           
 21493                           ; BSR set to: 0
 21494  0084' 5100'              	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21495  0086' 0D01               	mullw	1
 21496  0088' 0E00'              	movlw	low _aesBuffer
 21497  008A' 24F3               	addwf	prodl,w,c
 21498  008C' 6F00'              	movwf	memcpy@d1& (0+255),b
 21499  008E' 0E00'              	movlw	high _aesBuffer
 21500  0090' 20F4               	addwfc	prodh,w,c
 21501  0092' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 21502  0094' 0E00'              	movlw	low (_loRa+98)
 21503  0096' 6F00'              	movwf	memcpy@s1& (0+255),b
 21504  0098' 0E00'              	movlw	high (_loRa+98)
 21505  009A' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 21506  009C' 0E00               	movlw	0
 21507  009E' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 21508  00A0' 0E04               	movlw	4
 21509  00A2' 6F00'              	movwf	memcpy@n& (0+255),b
 21510  00A4' EC00' F000'        	call	_memcpy	;wreg free
 21511  00A8'                    l13530:
 21512                           
 21513                           ;lorawan.c: 2176: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.mcastDev
      +                          iceAddress);
 21514  00A8' 0100               	movlb	0	; () banked
 21515  00AA' 5100'              	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21516  00AC' 0F04               	addlw	4
 21517  00AE' 6F00'              	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21518                           
 21519                           ; BSR set to: 0
 21520                           ;lorawan.c: 2177: }
 21521                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 21522                           
 21523                           ; BSR set to: 0
 21524  00B0' 5100'              	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21525  00B2' 0D01               	mullw	1
 21526  00B4' 0E00'              	movlw	low _aesBuffer
 21527  00B6' 24F3               	addwf	prodl,w,c
 21528  00B8' 6F00'              	movwf	memcpy@d1& (0+255),b
 21529  00BA' 0E00'              	movlw	high _aesBuffer
 21530  00BC' 20F4               	addwfc	prodh,w,c
 21531  00BE' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 21532  00C0' 0E00'              	movlw	low AssembleEncryptionBlock@frameCounter
 21533  00C2' 6F00'              	movwf	memcpy@s1& (0+255),b
 21534  00C4' 0E00'              	movlw	high AssembleEncryptionBlock@frameCounter
 21535  00C6' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 21536  00C8' 0E00               	movlw	0
 21537  00CA' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 21538  00CC' 0E04               	movlw	4
 21539  00CE' 6F00'              	movwf	memcpy@n& (0+255),b
 21540  00D0' EC00' F000'        	call	_memcpy	;wreg free
 21541                           
 21542                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 21543  00D4' 0100               	movlb	0	; () banked
 21544  00D6' 5100'              	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21545  00D8' 0F04               	addlw	4
 21546  00DA' 6F00'              	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21547                           
 21548                           ; BSR set to: 0
 21549                           ;lorawan.c: 2182: bufferIndex ++;
 21550  00DC' 2B00'              	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 21551                           
 21552                           ; BSR set to: 0
 21553                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 21554  00DE' 5100'              	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21555  00E0' 0D01               	mullw	1
 21556  00E2' 0E00'              	movlw	low _aesBuffer
 21557  00E4' 24F3               	addwf	prodl,w,c
 21558  00E6' 6ED9               	movwf	fsr2l,c
 21559  00E8' 0E00'              	movlw	high _aesBuffer
 21560  00EA' 20F4               	addwfc	prodh,w,c
 21561  00EC' 6EDA               	movwf	fsr2h,c
 21562  00EE' C00F' FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 21563                           
 21564                           ; BSR set to: 0
 21565  00F2' 0012               	return		;funcret
 21566  00F4'                    __end_of_AssembleEncryptionBlock:
 21567                           	opt stack 0
 21568                           tosu	equ	0xFFF
 21569                           tosh	equ	0xFFE
 21570                           tosl	equ	0xFFD
 21571                           pclath	equ	0xFFA
 21572                           tblptru	equ	0xFF8
 21573                           tblptrh	equ	0xFF7
 21574                           tblptrl	equ	0xFF6
 21575                           tablat	equ	0xFF5
 21576                           prodh	equ	0xFF4
 21577                           prodl	equ	0xFF3
 21578                           intcon	equ	0xFF2
 21579                           intcon2	equ	0xFF1
 21580                           intcon3	equ	0xFF0
 21581                           indf0	equ	0xFEF
 21582                           postinc0	equ	0xFEE
 21583                           fsr0h	equ	0xFEA
 21584                           fsr0l	equ	0xFE9
 21585                           wreg	equ	0xFE8
 21586                           postinc1	equ	0xFE6
 21587                           postdec1	equ	0xFE5
 21588                           plusw1	equ	0xFE3
 21589                           fsr1h	equ	0xFE2
 21590                           fsr1l	equ	0xFE1
 21591                           indf2	equ	0xFDF
 21592                           postinc2	equ	0xFDE
 21593                           postdec2	equ	0xFDD
 21594                           plusw2	equ	0xFDB
 21595                           fsr2h	equ	0xFDA
 21596                           fsr2l	equ	0xFD9
 21597                           status	equ	0xFD8
 21598                           
 21599 ;; *************** function _CountfOptsLength *****************
 21600 ;; Defined at:
 21601 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21602 ;; Parameters:    Size  Location     Type
 21603 ;;		None
 21604 ;; Auto vars:     Size  Location     Type
 21605 ;;  i               1    7[BANK0 ] unsigned char 
 21606 ;;  macCommandLe    1    6[BANK0 ] unsigned char 
 21607 ;; Return value:  Size  Location     Type
 21608 ;;                  1    wreg      unsigned char 
 21609 ;; Registers used:
 21610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21611 ;; Tracked objects:
 21612 ;;		On entry : 0/0
 21613 ;;		On exit  : 0/0
 21614 ;;		Unchanged: 0/0
 21615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21617 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21618 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21619 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21620 ;;Total ram usage:        8 bytes
 21621 ;; Hardware stack levels used:    1
 21622 ;; Hardware stack levels required when called:    7
 21623 ;; This function calls:
 21624 ;;		Nothing
 21625 ;; This function is called by:
 21626 ;;		_LORAWAN_GetMaxPayloadSize
 21627 ;;		_AssemblePacket
 21628 ;; This function uses a non-reentrant model
 21629 ;;
 21630                           
 21631                           	psect	text97
 21632  0000'                    __ptext97:
 21633                           	opt stack 0
 21634  0000'                    _CountfOptsLength:
 21635                           	opt stack 21
 21636                           
 21637                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 21638                           
 21639                           ; BSR set to: 0
 21640                           ;incstack = 0
 21641  0000' 0E00               	movlw	0
 21642  0002' 0100               	movlb	0	; () banked
 21643  0004' 6F00'              	movwf	CountfOptsLength@macCommandLength& (0+255),b
 21644                           
 21645                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 21646  0006' 0E00               	movlw	0
 21647  0008' 6F00'              	movwf	CountfOptsLength@i& (0+255),b
 21648  000A' D057               	goto	l2134
 21649  000C'                    
 21650                           ; BSR set to: 0
 21651                           ;lorawan.c: 2139: {
 21652                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 21653                           
 21654                           ; BSR set to: 0
 21655  000C' 5100'              	movf	CountfOptsLength@i& (0+255),w,b
 21656  000E' 0D02               	mullw	2
 21657  0010' 0E00'              	movlw	low (_loRa+168)
 21658  0012' 24F3               	addwf	prodl,w,c
 21659  0014' 6ED9               	movwf	fsr2l,c
 21660  0016' 0E00'              	movlw	high (_loRa+168)
 21661  0018' 20F4               	addwfc	prodh,w,c
 21662  001A' 6EDA               	movwf	fsr2h,c
 21663  001C' 28DE               	incf	postinc2,w,c
 21664  001E' B4D8               	btfsc	status,2,c
 21665  0020' D04B               	goto	l2138
 21666                           
 21667                           ; BSR set to: 0
 21668                           ;lorawan.c: 2141: {
 21669                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 21670  0022' 0EFE               	movlw	254
 21671  0024' 6F00'              	movwf	??_CountfOptsLength& (0+255),b
 21672  0026' 0EFF               	movlw	255
 21673  0028' 6F00'              	movwf	(??_CountfOptsLength+1)& (0+255),b
 21674  002A' 5100'              	movf	CountfOptsLength@i& (0+255),w,b
 21675  002C' 0D02               	mullw	2
 21676  002E' 0E00'              	movlw	low (_loRa+168)
 21677  0030' 24F3               	addwf	prodl,w,c
 21678  0032' 6ED9               	movwf	fsr2l,c
 21679  0034' 0E00'              	movlw	high (_loRa+168)
 21680  0036' 20F4               	addwfc	prodh,w,c
 21681  0038' 6EDA               	movwf	fsr2h,c
 21682  003A' 50DF               	movf	indf2,w,c
 21683  003C' 6F00'              	movwf	(??_CountfOptsLength+2)& (0+255),b
 21684  003E' 6B00'              	clrf	(??_CountfOptsLength+3)& (0+255),b
 21685  0040' 5100'              	movf	??_CountfOptsLength& (0+255),w,b
 21686  0042' 2700'              	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 21687  0044' 5100'              	movf	(??_CountfOptsLength+1)& (0+255),w,b
 21688  0046' 2300'              	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 21689  0048' 0E00'              	movlw	low _macEndDevCmdReplyLen
 21690  004A' 2500'              	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 21691  004C' 6EF6               	movwf	tblptrl,c
 21692  004E' 0E00'              	movlw	high _macEndDevCmdReplyLen
 21693  0050' 2100'              	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 21694  0052' 6EF7               	movwf	tblptrh,c
 21695  0054'                    	if	1	;There are 3 active tblptr bytes
 21696  0054' 6AF8               	clrf	tblptru,c
 21697  0056' 0E00'              	movlw	low (__mediumconst shr (0+16))
 21698  0058' 22F8               	addwfc	tblptru,f,c
 21699  005A'                    	endif
 21700  005A' 0008               	tblrd		*
 21701  005C' 50F5               	movf	tablat,w,c
 21702  005E' C006' F004'        	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 21703  0062' 6B00'              	clrf	(??_CountfOptsLength+5)& (0+255),b
 21704  0064' 2700'              	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 21705  0066' 0E00               	movlw	0
 21706  0068' 2300'              	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 21707  006A' BF00'              	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 21708  006C' D006               	goto	u16240
 21709  006E' 5100'              	movf	(??_CountfOptsLength+5)& (0+255),w,b
 21710  0070' E12A               	bnz	l14082
 21711  0072' 0E10               	movlw	16
 21712  0074' 5D00'              	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 21713  0076' B0D8               	btfsc	status,0,c
 21714  0078' D026               	goto	u16250
 21715  007A'                    u16240:
 21716                           
 21717                           ; BSR set to: 0
 21718                           ;lorawan.c: 2143: {
 21719                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 21720  007A' 0EFE               	movlw	254
 21721  007C' 6F00'              	movwf	??_CountfOptsLength& (0+255),b
 21722  007E' 0EFF               	movlw	255
 21723  0080' 6F00'              	movwf	(??_CountfOptsLength+1)& (0+255),b
 21724  0082' 5100'              	movf	CountfOptsLength@i& (0+255),w,b
 21725  0084' 0D02               	mullw	2
 21726  0086' 0E00'              	movlw	low (_loRa+168)
 21727  0088' 24F3               	addwf	prodl,w,c
 21728  008A' 6ED9               	movwf	fsr2l,c
 21729  008C' 0E00'              	movlw	high (_loRa+168)
 21730  008E' 20F4               	addwfc	prodh,w,c
 21731  0090' 6EDA               	movwf	fsr2h,c
 21732  0092' 50DF               	movf	indf2,w,c
 21733  0094' 6F00'              	movwf	(??_CountfOptsLength+2)& (0+255),b
 21734  0096' 6B00'              	clrf	(??_CountfOptsLength+3)& (0+255),b
 21735  0098' 5100'              	movf	??_CountfOptsLength& (0+255),w,b
 21736  009A' 2700'              	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 21737  009C' 5100'              	movf	(??_CountfOptsLength+1)& (0+255),w,b
 21738  009E' 2300'              	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 21739  00A0' 0E00'              	movlw	low _macEndDevCmdReplyLen
 21740  00A2' 2500'              	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 21741  00A4' 6EF6               	movwf	tblptrl,c
 21742  00A6' 0E00'              	movlw	high _macEndDevCmdReplyLen
 21743  00A8' 2100'              	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 21744  00AA' 6EF7               	movwf	tblptrh,c
 21745  00AC'                    	if	1	;There are 3 active tblptr bytes
 21746  00AC' 6AF8               	clrf	tblptru,c
 21747  00AE' 0E00'              	movlw	low (__mediumconst shr (0+16))
 21748  00B0' 22F8               	addwfc	tblptru,f,c
 21749  00B2'                    	endif
 21750  00B2' 0008               	tblrd		*
 21751  00B4' 50F5               	movf	tablat,w,c
 21752  00B6' 2700'              	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 21753  00B8'                    l2138:
 21754                           
 21755                           ; BSR set to: 0
 21756                           
 21757                           ; BSR set to: 0
 21758                           
 21759                           ; BSR set to: 0
 21760  00B8' 2B00'              	incf	CountfOptsLength@i& (0+255),f,b
 21761  00BA'                    l2134:
 21762                           
 21763                           ; BSR set to: 0
 21764                           
 21765                           ; BSR set to: 0
 21766  00BA' 0102               	movlb	2	; () banked
 21767  00BC' 5100'              	movf	(_loRa+167)& (0+255),w,b
 21768  00BE' 0100               	movlb	0	; () banked
 21769  00C0' 5D00'              	subwf	CountfOptsLength@i& (0+255),w,b
 21770  00C2' A0D8               	btfss	status,0,c
 21771  00C4' D7A3               	goto	l2135
 21772  00C6'                    u16250:
 21773  00C6'                    l14082:
 21774                           
 21775                           ; BSR set to: 0
 21776                           ;lorawan.c: 2149: }
 21777                           ;lorawan.c: 2150: }
 21778                           ;lorawan.c: 2151: }
 21779                           ;lorawan.c: 2153: return macCommandLength;
 21780  00C6' 5100'              	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 21781  00C8' 0012               	return	
 21782  00CA'                    __end_of_CountfOptsLength:
 21783                           	opt stack 0
 21784                           tosu	equ	0xFFF
 21785                           tosh	equ	0xFFE
 21786                           tosl	equ	0xFFD
 21787                           pclath	equ	0xFFA
 21788                           tblptru	equ	0xFF8
 21789                           tblptrh	equ	0xFF7
 21790                           tblptrl	equ	0xFF6
 21791                           tablat	equ	0xFF5
 21792                           prodh	equ	0xFF4
 21793                           prodl	equ	0xFF3
 21794                           intcon	equ	0xFF2
 21795                           intcon2	equ	0xFF1
 21796                           intcon3	equ	0xFF0
 21797                           indf0	equ	0xFEF
 21798                           postinc0	equ	0xFEE
 21799                           fsr0h	equ	0xFEA
 21800                           fsr0l	equ	0xFE9
 21801                           wreg	equ	0xFE8
 21802                           postinc1	equ	0xFE6
 21803                           postdec1	equ	0xFE5
 21804                           plusw1	equ	0xFE3
 21805                           fsr1h	equ	0xFE2
 21806                           fsr1l	equ	0xFE1
 21807                           indf2	equ	0xFDF
 21808                           postinc2	equ	0xFDE
 21809                           postdec2	equ	0xFDD
 21810                           plusw2	equ	0xFDB
 21811                           fsr2h	equ	0xFDA
 21812                           fsr2l	equ	0xFD9
 21813                           status	equ	0xFD8
 21814                           
 21815 ;; *************** function _ExtractMic *****************
 21816 ;; Defined at:
 21817 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21818 ;; Parameters:    Size  Location     Type
 21819 ;;  buffer          2   11[BANK0 ] PTR unsigned char 
 21820 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21821 ;;  bufferLength    1   13[BANK0 ] unsigned char 
 21822 ;; Auto vars:     Size  Location     Type
 21823 ;;  mic             4   19[BANK0 ] unsigned long 
 21824 ;; Return value:  Size  Location     Type
 21825 ;;                  4   11[BANK0 ] unsigned long 
 21826 ;; Registers used:
 21827 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21828 ;; Tracked objects:
 21829 ;;		On entry : 0/0
 21830 ;;		On exit  : 0/0
 21831 ;;		Unchanged: 0/0
 21832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21833 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21834 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21835 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21836 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21837 ;;Total ram usage:       12 bytes
 21838 ;; Hardware stack levels used:    1
 21839 ;; Hardware stack levels required when called:    8
 21840 ;; This function calls:
 21841 ;;		_memcpy
 21842 ;; This function is called by:
 21843 ;;		_LORAWAN_RxDone
 21844 ;; This function uses a non-reentrant model
 21845 ;;
 21846                           
 21847                           	psect	text98
 21848  0000'                    __ptext98:
 21849                           	opt stack 0
 21850  0000'                    _ExtractMic:
 21851                           	opt stack 18
 21852                           
 21853                           ;lorawan.c: 2189: uint32_t mic = 0;
 21854                           
 21855                           ; BSR set to: 0
 21856                           ;incstack = 0
 21857  0000' 0E00               	movlw	0
 21858  0002' 0100               	movlb	0	; () banked
 21859  0004' 6F00'              	movwf	ExtractMic@mic& (0+255),b
 21860  0006' 0E00               	movlw	0
 21861  0008' 6F00'              	movwf	(ExtractMic@mic+1)& (0+255),b
 21862  000A' 0E00               	movlw	0
 21863  000C' 6F00'              	movwf	(ExtractMic@mic+2)& (0+255),b
 21864  000E' 0E00               	movlw	0
 21865  0010' 6F00'              	movwf	(ExtractMic@mic+3)& (0+255),b
 21866                           
 21867                           ; BSR set to: 0
 21868                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 21869  0012' 0E00'              	movlw	low ExtractMic@mic
 21870  0014' 6F00'              	movwf	memcpy@d1& (0+255),b
 21871  0016' 0E00'              	movlw	high ExtractMic@mic
 21872  0018' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 21873  001A' 0EFC               	movlw	252
 21874  001C' 6F00'              	movwf	??_ExtractMic& (0+255),b
 21875  001E' 0EFF               	movlw	255
 21876  0020' 6F00'              	movwf	(??_ExtractMic+1)& (0+255),b
 21877  0022' 5100'              	movf	ExtractMic@bufferLength& (0+255),w,b
 21878  0024' 6F00'              	movwf	(??_ExtractMic+2)& (0+255),b
 21879  0026' 6B00'              	clrf	(??_ExtractMic+3)& (0+255),b
 21880  0028' 5100'              	movf	??_ExtractMic& (0+255),w,b
 21881  002A' 2700'              	addwf	(??_ExtractMic+2)& (0+255),f,b
 21882  002C' 5100'              	movf	(??_ExtractMic+1)& (0+255),w,b
 21883  002E' 2300'              	addwfc	(??_ExtractMic+3)& (0+255),f,b
 21884  0030' 5100'              	movf	(??_ExtractMic+2)& (0+255),w,b
 21885  0032' 2500'              	addwf	ExtractMic@buffer& (0+255),w,b
 21886  0034' 6F00'              	movwf	memcpy@s1& (0+255),b
 21887  0036' 5100'              	movf	(??_ExtractMic+3)& (0+255),w,b
 21888  0038' 2100'              	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 21889  003A' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 21890  003C' 0E00               	movlw	0
 21891  003E' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 21892  0040' 0E04               	movlw	4
 21893  0042' 6F00'              	movwf	memcpy@n& (0+255),b
 21894  0044' EC00' F000'        	call	_memcpy	;wreg free
 21895                           
 21896                           ;lorawan.c: 2191: return mic;
 21897  0048' C013' F00B'        	movff	ExtractMic@mic,?_ExtractMic
 21898  004C' C014' F00C'        	movff	ExtractMic@mic+1,?_ExtractMic+1
 21899  0050' C015' F00D'        	movff	ExtractMic@mic+2,?_ExtractMic+2
 21900  0054' C016' F00E'        	movff	ExtractMic@mic+3,?_ExtractMic+3
 21901  0058' 0012               	return	
 21902  005A'                    __end_of_ExtractMic:
 21903                           	opt stack 0
 21904                           tosu	equ	0xFFF
 21905                           tosh	equ	0xFFE
 21906                           tosl	equ	0xFFD
 21907                           pclath	equ	0xFFA
 21908                           tblptru	equ	0xFF8
 21909                           tblptrh	equ	0xFF7
 21910                           tblptrl	equ	0xFF6
 21911                           tablat	equ	0xFF5
 21912                           prodh	equ	0xFF4
 21913                           prodl	equ	0xFF3
 21914                           intcon	equ	0xFF2
 21915                           intcon2	equ	0xFF1
 21916                           intcon3	equ	0xFF0
 21917                           indf0	equ	0xFEF
 21918                           postinc0	equ	0xFEE
 21919                           fsr0h	equ	0xFEA
 21920                           fsr0l	equ	0xFE9
 21921                           wreg	equ	0xFE8
 21922                           postinc1	equ	0xFE6
 21923                           postdec1	equ	0xFE5
 21924                           plusw1	equ	0xFE3
 21925                           fsr1h	equ	0xFE2
 21926                           fsr1l	equ	0xFE1
 21927                           indf2	equ	0xFDF
 21928                           postinc2	equ	0xFDE
 21929                           postdec2	equ	0xFDD
 21930                           plusw2	equ	0xFDB
 21931                           fsr2h	equ	0xFDA
 21932                           fsr2l	equ	0xFD9
 21933                           status	equ	0xFD8
 21934                           
 21935 ;; *************** function _ComputeSessionKeys *****************
 21936 ;; Defined at:
 21937 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21938 ;; Parameters:    Size  Location     Type
 21939 ;;  joinAcceptBu    2   49[BANK0 ] PTR struct .
 21940 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21941 ;; Auto vars:     Size  Location     Type
 21942 ;;		None
 21943 ;; Return value:  Size  Location     Type
 21944 ;;                  1    wreg      void 
 21945 ;; Registers used:
 21946 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21947 ;; Tracked objects:
 21948 ;;		On entry : 0/0
 21949 ;;		On exit  : 0/0
 21950 ;;		Unchanged: 0/0
 21951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21952 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21955 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21956 ;;Total ram usage:        2 bytes
 21957 ;; Hardware stack levels used:    1
 21958 ;; Hardware stack levels required when called:   10
 21959 ;; This function calls:
 21960 ;;		_AESEncodeLoRa
 21961 ;;		_PrepareSessionKeys
 21962 ;; This function is called by:
 21963 ;;		_LORAWAN_RxDone
 21964 ;; This function uses a non-reentrant model
 21965 ;;
 21966                           
 21967                           	psect	text99
 21968  0000'                    __ptext99:
 21969                           	opt stack 0
 21970  0000'                    _ComputeSessionKeys:
 21971                           	opt stack 16
 21972                           
 21973                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 21974                           
 21975                           ;incstack = 0
 21976  0000' 0E00'              	movlw	low (_loRa+50)
 21977  0002' 0100               	movlb	0	; () banked
 21978  0004' 6F00'              	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 21979  0006' 0E00'              	movlw	high (_loRa+50)
 21980  0008' 6F00'              	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 21981  000A' 0E01               	movlw	1
 21982  000C' 2500'              	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21983  000E' 6F00'              	movwf	PrepareSessionKeys@appNonce& (0+255),b
 21984  0010' 0E00               	movlw	0
 21985  0012' 2100'              	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21986  0014' 6F00'              	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 21987  0016' 0E04               	movlw	4
 21988  0018' 2500'              	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21989  001A' 6F00'              	movwf	PrepareSessionKeys@networkId& (0+255),b
 21990  001C' 0E00               	movlw	0
 21991  001E' 2100'              	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21992  0020' 6F00'              	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 21993  0022' EC00' F000'        	call	_PrepareSessionKeys	;wreg free
 21994                           
 21995                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 21996  0026' 0E02               	movlw	2
 21997  0028' 0102               	movlb	2	; () banked
 21998  002A' 6F00'              	movwf	(_loRa+50)& (0+255),b
 21999                           
 22000                           ; BSR set to: 2
 22001                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 22002  002C' 0E00'              	movlw	low (_loRa+50)
 22003  002E' 0100               	movlb	0	; () banked
 22004  0030' 6F00'              	movwf	AESEncodeLoRa@block& (0+255),b
 22005  0032' 0E00'              	movlw	high (_loRa+50)
 22006  0034' 6F00'              	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 22007  0036' 0E00'              	movlw	low (_loRa+66)
 22008  0038' 6F00'              	movwf	AESEncodeLoRa@key& (0+255),b
 22009  003A' 0E00'              	movlw	high (_loRa+66)
 22010  003C' 6F00'              	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 22011  003E' EC00' F000'        	call	_AESEncodeLoRa	;wreg free
 22012                           
 22013                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 22014  0042' 0E00'              	movlw	low (_loRa+34)
 22015  0044' 0100               	movlb	0	; () banked
 22016  0046' 6F00'              	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 22017  0048' 0E00'              	movlw	high (_loRa+34)
 22018  004A' 6F00'              	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 22019  004C' 0E01               	movlw	1
 22020  004E' 2500'              	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 22021  0050' 6F00'              	movwf	PrepareSessionKeys@appNonce& (0+255),b
 22022  0052' 0E00               	movlw	0
 22023  0054' 2100'              	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 22024  0056' 6F00'              	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 22025  0058' 0E04               	movlw	4
 22026  005A' 2500'              	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 22027  005C' 6F00'              	movwf	PrepareSessionKeys@networkId& (0+255),b
 22028  005E' 0E00               	movlw	0
 22029  0060' 2100'              	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 22030  0062' 6F00'              	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 22031  0064' EC00' F000'        	call	_PrepareSessionKeys	;wreg free
 22032                           
 22033                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 22034  0068' 0E01               	movlw	1
 22035  006A' 0102               	movlb	2	; () banked
 22036  006C' 6F00'              	movwf	(_loRa+34)& (0+255),b
 22037                           
 22038                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 22039  006E' 0E00'              	movlw	low (_loRa+34)
 22040  0070' 0100               	movlb	0	; () banked
 22041  0072' 6F00'              	movwf	AESEncodeLoRa@block& (0+255),b
 22042  0074' 0E00'              	movlw	high (_loRa+34)
 22043  0076' 6F00'              	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 22044  0078' 0E00'              	movlw	low (_loRa+66)
 22045  007A' 6F00'              	movwf	AESEncodeLoRa@key& (0+255),b
 22046  007C' 0E00'              	movlw	high (_loRa+66)
 22047  007E' 6F00'              	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 22048  0080' EC00' F000'        	call	_AESEncodeLoRa	;wreg free
 22049  0084' 0012               	return		;funcret
 22050  0086'                    __end_of_ComputeSessionKeys:
 22051                           	opt stack 0
 22052                           tosu	equ	0xFFF
 22053                           tosh	equ	0xFFE
 22054                           tosl	equ	0xFFD
 22055                           pclath	equ	0xFFA
 22056                           tblptru	equ	0xFF8
 22057                           tblptrh	equ	0xFF7
 22058                           tblptrl	equ	0xFF6
 22059                           tablat	equ	0xFF5
 22060                           prodh	equ	0xFF4
 22061                           prodl	equ	0xFF3
 22062                           intcon	equ	0xFF2
 22063                           intcon2	equ	0xFF1
 22064                           intcon3	equ	0xFF0
 22065                           indf0	equ	0xFEF
 22066                           postinc0	equ	0xFEE
 22067                           fsr0h	equ	0xFEA
 22068                           fsr0l	equ	0xFE9
 22069                           wreg	equ	0xFE8
 22070                           postinc1	equ	0xFE6
 22071                           postdec1	equ	0xFE5
 22072                           plusw1	equ	0xFE3
 22073                           fsr1h	equ	0xFE2
 22074                           fsr1l	equ	0xFE1
 22075                           indf2	equ	0xFDF
 22076                           postinc2	equ	0xFDE
 22077                           postdec2	equ	0xFDD
 22078                           plusw2	equ	0xFDB
 22079                           fsr2h	equ	0xFDA
 22080                           fsr2l	equ	0xFD9
 22081                           status	equ	0xFD8
 22082                           
 22083 ;; *************** function _PrepareSessionKeys *****************
 22084 ;; Defined at:
 22085 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22086 ;; Parameters:    Size  Location     Type
 22087 ;;  sessionKey      2   11[BANK0 ] PTR unsigned char 
 22088 ;;		 -> loRa.activationParameters(105), loRa(245), 
 22089 ;;  appNonce        2   13[BANK0 ] PTR unsigned char 
 22090 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22091 ;;  networkId       2   15[BANK0 ] PTR unsigned char 
 22092 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22093 ;; Auto vars:     Size  Location     Type
 22094 ;;  index           1   17[BANK0 ] unsigned char 
 22095 ;; Return value:  Size  Location     Type
 22096 ;;                  1    wreg      void 
 22097 ;; Registers used:
 22098 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22099 ;; Tracked objects:
 22100 ;;		On entry : 0/0
 22101 ;;		On exit  : 0/0
 22102 ;;		Unchanged: 0/0
 22103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22104 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22107 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22108 ;;Total ram usage:        7 bytes
 22109 ;; Hardware stack levels used:    1
 22110 ;; Hardware stack levels required when called:    8
 22111 ;; This function calls:
 22112 ;;		_memcpy
 22113 ;;		_memset
 22114 ;; This function is called by:
 22115 ;;		_ComputeSessionKeys
 22116 ;; This function uses a non-reentrant model
 22117 ;;
 22118                           
 22119                           	psect	text100
 22120  0000'                    __ptext100:
 22121                           	opt stack 0
 22122  0000'                    _PrepareSessionKeys:
 22123                           	opt stack 17
 22124                           
 22125                           ;lorawan.c: 2047: uint8_t index = 0;
 22126                           
 22127                           ;incstack = 0
 22128  0000' 0E00               	movlw	0
 22129  0002' 0100               	movlb	0	; () banked
 22130  0004' 6F00'              	movwf	PrepareSessionKeys@index& (0+255),b
 22131                           
 22132                           ; BSR set to: 0
 22133                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 22134  0006' 5100'              	movf	PrepareSessionKeys@index& (0+255),w,b
 22135  0008' 0D01               	mullw	1
 22136  000A' 50F3               	movf	prodl,w,c
 22137  000C' 2500'              	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22138  000E' 6F00'              	movwf	memset@p1& (0+255),b
 22139  0010' 50F4               	movf	prodh,w,c
 22140  0012' 2100'              	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22141  0014' 6F00'              	movwf	(memset@p1+1)& (0+255),b
 22142  0016' 0E00               	movlw	0
 22143  0018' 6F00'              	movwf	(memset@c+1)& (0+255),b
 22144  001A' 0E00               	movlw	0
 22145  001C' 6F00'              	movwf	memset@c& (0+255),b
 22146  001E' 0E00               	movlw	0
 22147  0020' 6F00'              	movwf	(memset@n+1)& (0+255),b
 22148  0022' 0E10               	movlw	16
 22149  0024' 6F00'              	movwf	memset@n& (0+255),b
 22150  0026' EC00' F000'        	call	_memset	;wreg free
 22151                           
 22152                           ;lorawan.c: 2050: index ++;
 22153  002A' 0100               	movlb	0	; () banked
 22154  002C' 2B00'              	incf	PrepareSessionKeys@index& (0+255),f,b
 22155                           
 22156                           ; BSR set to: 0
 22157                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 22158  002E' 5100'              	movf	PrepareSessionKeys@index& (0+255),w,b
 22159  0030' 0D01               	mullw	1
 22160  0032' 50F3               	movf	prodl,w,c
 22161  0034' 2500'              	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22162  0036' 6F00'              	movwf	memcpy@d1& (0+255),b
 22163  0038' 50F4               	movf	prodh,w,c
 22164  003A' 2100'              	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22165  003C' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 22166  003E' C00D' F002'        	movff	PrepareSessionKeys@appNonce,memcpy@s1
 22167  0042' C00E' F003'        	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 22168  0046' 0E00               	movlw	0
 22169  0048' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 22170  004A' 0E03               	movlw	3
 22171  004C' 6F00'              	movwf	memcpy@n& (0+255),b
 22172  004E' EC00' F000'        	call	_memcpy	;wreg free
 22173                           
 22174                           ;lorawan.c: 2053: index = index + 3;
 22175  0052' 0100               	movlb	0	; () banked
 22176  0054' 5100'              	movf	PrepareSessionKeys@index& (0+255),w,b
 22177  0056' 0F03               	addlw	3
 22178  0058' 6F00'              	movwf	PrepareSessionKeys@index& (0+255),b
 22179                           
 22180                           ; BSR set to: 0
 22181                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 22182  005A' 5100'              	movf	PrepareSessionKeys@index& (0+255),w,b
 22183  005C' 0D01               	mullw	1
 22184  005E' 50F3               	movf	prodl,w,c
 22185  0060' 2500'              	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22186  0062' 6F00'              	movwf	memcpy@d1& (0+255),b
 22187  0064' 50F4               	movf	prodh,w,c
 22188  0066' 2100'              	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22189  0068' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 22190  006A' C00F' F002'        	movff	PrepareSessionKeys@networkId,memcpy@s1
 22191  006E' C010' F003'        	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 22192  0072' 0E00               	movlw	0
 22193  0074' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 22194  0076' 0E03               	movlw	3
 22195  0078' 6F00'              	movwf	memcpy@n& (0+255),b
 22196  007A' EC00' F000'        	call	_memcpy	;wreg free
 22197                           
 22198                           ;lorawan.c: 2056: index = index + 3;
 22199  007E' 0100               	movlb	0	; () banked
 22200  0080' 5100'              	movf	PrepareSessionKeys@index& (0+255),w,b
 22201  0082' 0F03               	addlw	3
 22202  0084' 6F00'              	movwf	PrepareSessionKeys@index& (0+255),b
 22203                           
 22204                           ; BSR set to: 0
 22205                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 22206  0086' 5100'              	movf	PrepareSessionKeys@index& (0+255),w,b
 22207  0088' 0D01               	mullw	1
 22208  008A' 50F3               	movf	prodl,w,c
 22209  008C' 2500'              	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22210  008E' 6F00'              	movwf	memcpy@d1& (0+255),b
 22211  0090' 50F4               	movf	prodh,w,c
 22212  0092' 2100'              	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22213  0094' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 22214  0096' 0E00'              	movlw	low (_loRa+210)
 22215  0098' 6F00'              	movwf	memcpy@s1& (0+255),b
 22216  009A' 0E00'              	movlw	high (_loRa+210)
 22217  009C' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 22218  009E' 0E00               	movlw	0
 22219  00A0' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 22220  00A2' 0E02               	movlw	2
 22221  00A4' 6F00'              	movwf	memcpy@n& (0+255),b
 22222  00A6' EC00' F000'        	call	_memcpy	;wreg free
 22223  00AA' 0012               	return		;funcret
 22224  00AC'                    __end_of_PrepareSessionKeys:
 22225                           	opt stack 0
 22226                           tosu	equ	0xFFF
 22227                           tosh	equ	0xFFE
 22228                           tosl	equ	0xFFD
 22229                           pclath	equ	0xFFA
 22230                           tblptru	equ	0xFF8
 22231                           tblptrh	equ	0xFF7
 22232                           tblptrl	equ	0xFF6
 22233                           tablat	equ	0xFF5
 22234                           prodh	equ	0xFF4
 22235                           prodl	equ	0xFF3
 22236                           intcon	equ	0xFF2
 22237                           intcon2	equ	0xFF1
 22238                           intcon3	equ	0xFF0
 22239                           indf0	equ	0xFEF
 22240                           postinc0	equ	0xFEE
 22241                           fsr0h	equ	0xFEA
 22242                           fsr0l	equ	0xFE9
 22243                           wreg	equ	0xFE8
 22244                           postinc1	equ	0xFE6
 22245                           postdec1	equ	0xFE5
 22246                           plusw1	equ	0xFE3
 22247                           fsr1h	equ	0xFE2
 22248                           fsr1l	equ	0xFE1
 22249                           indf2	equ	0xFDF
 22250                           postinc2	equ	0xFDE
 22251                           postdec2	equ	0xFDD
 22252                           plusw2	equ	0xFDB
 22253                           fsr2h	equ	0xFDA
 22254                           fsr2l	equ	0xFD9
 22255                           status	equ	0xFD8
 22256                           
 22257 ;; *************** function _CheckMcastFlags *****************
 22258 ;; Defined at:
 22259 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22260 ;; Parameters:    Size  Location     Type
 22261 ;;  hdr             2    0[BANK0 ] PTR struct .
 22262 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22263 ;; Auto vars:     Size  Location     Type
 22264 ;;		None
 22265 ;; Return value:  Size  Location     Type
 22266 ;;                  1    wreg      unsigned char 
 22267 ;; Registers used:
 22268 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22269 ;; Tracked objects:
 22270 ;;		On entry : 0/0
 22271 ;;		On exit  : 0/0
 22272 ;;		Unchanged: 0/0
 22273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22274 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22277 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22278 ;;Total ram usage:        2 bytes
 22279 ;; Hardware stack levels used:    1
 22280 ;; Hardware stack levels required when called:    7
 22281 ;; This function calls:
 22282 ;;		Nothing
 22283 ;; This function is called by:
 22284 ;;		_LORAWAN_RxDone
 22285 ;; This function uses a non-reentrant model
 22286 ;;
 22287                           
 22288                           	psect	text101
 22289  0000'                    __ptext101:
 22290                           	opt stack 0
 22291  0000'                    _CheckMcastFlags:
 22292                           	opt stack 19
 22293                           
 22294                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 22295                           
 22296                           ;incstack = 0
 22297  0000' 0100               	movlb	0	; () banked
 22298  0002' EE20 F005          	lfsr	2,5
 22299  0006' 5100'              	movf	CheckMcastFlags@hdr& (0+255),w,b
 22300  0008' 26D9               	addwf	fsr2l,f,c
 22301  000A' 5100'              	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22302  000C' 22DA               	addwfc	fsr2h,f,c
 22303  000E' BADF               	btfsc	indf2,5,c
 22304  0010' D012               	goto	u17440
 22305                           
 22306                           ; BSR set to: 0
 22307  0012' EE20 F005          	lfsr	2,5
 22308  0016' 5100'              	movf	CheckMcastFlags@hdr& (0+255),w,b
 22309  0018' 26D9               	addwf	fsr2l,f,c
 22310  001A' 5100'              	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22311  001C' 22DA               	addwfc	fsr2h,f,c
 22312  001E' BCDF               	btfsc	indf2,6,c
 22313  0020' D00A               	goto	u17440
 22314                           
 22315                           ; BSR set to: 0
 22316  0022' C000' FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 22317  0026' C001' FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 22318  002A' 38DF               	swapf	223,w,c
 22319  002C' 32E8               	rrcf	wreg,f,c
 22320  002E' 0B07               	andlw	7
 22321  0030' 0A03               	xorlw	3
 22322  0032' B4D8               	btfsc	status,2,c
 22323  0034' D002               	goto	l2124
 22324  0036'                    u17440:
 22325                           
 22326                           ; BSR set to: 0
 22327                           ;lorawan.c: 2110: {
 22328                           ;lorawan.c: 2111: return 0;
 22329                           
 22330                           ; BSR set to: 0
 22331  0036' 0E00               	movlw	0
 22332                           
 22333                           ; BSR set to: 0
 22334  0038' 0012               	return	
 22335  003A'                    l2124:
 22336                           
 22337                           ; BSR set to: 0
 22338                           ;lorawan.c: 2112: }
 22339                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 22340                           
 22341                           ; BSR set to: 0
 22342  003A' EE20 F005          	lfsr	2,5
 22343  003E' 5100'              	movf	CheckMcastFlags@hdr& (0+255),w,b
 22344  0040' 26D9               	addwf	fsr2l,f,c
 22345  0042' 5100'              	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22346  0044' 22DA               	addwfc	fsr2h,f,c
 22347  0046' 50DF               	movf	223,w,c
 22348  0048' 0B0F               	andlw	15
 22349  004A' 0900               	iorlw	0
 22350  004C' B4D8               	btfsc	status,2,c
 22351  004E' D002               	goto	l2128
 22352                           
 22353                           ; BSR set to: 0
 22354                           ;lorawan.c: 2115: {
 22355                           ;lorawan.c: 2116: return 0;
 22356  0050' 0E00               	movlw	0
 22357                           
 22358                           ; BSR set to: 0
 22359  0052' 0012               	return	
 22360  0054'                    l2128:
 22361                           
 22362                           ; BSR set to: 0
 22363                           ;lorawan.c: 2118: else
 22364                           ;lorawan.c: 2119: {
 22365                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 22366                           
 22367                           ; BSR set to: 0
 22368  0054' EE20 F008          	lfsr	2,8
 22369  0058' 5100'              	movf	CheckMcastFlags@hdr& (0+255),w,b
 22370  005A' 26D9               	addwf	fsr2l,f,c
 22371  005C' 5100'              	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22372  005E' 22DA               	addwfc	fsr2h,f,c
 22373  0060' 50DF               	movf	indf2,w,c
 22374  0062' A4D8               	btfss	status,2,c
 22375  0064' D002               	goto	l2130
 22376                           
 22377                           ; BSR set to: 0
 22378                           ;lorawan.c: 2121: {
 22379                           ;lorawan.c: 2122: return 0;
 22380  0066' 0E00               	movlw	0
 22381                           
 22382                           ; BSR set to: 0
 22383  0068' 0012               	return	
 22384  006A'                    l2130:
 22385                           
 22386                           ; BSR set to: 0
 22387                           ;lorawan.c: 2123: }
 22388                           ;lorawan.c: 2124: }
 22389                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 22390                           
 22391                           ; BSR set to: 0
 22392                           
 22393                           ; BSR set to: 0
 22394  006A' EE20 F005          	lfsr	2,5
 22395  006E' 5100'              	movf	CheckMcastFlags@hdr& (0+255),w,b
 22396  0070' 26D9               	addwf	fsr2l,f,c
 22397  0072' 5100'              	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22398  0074' 22DA               	addwfc	fsr2h,f,c
 22399  0076' A8DF               	btfss	indf2,4,c
 22400  0078' D002               	goto	l2131
 22401                           
 22402                           ; BSR set to: 0
 22403                           ;lorawan.c: 2127: {
 22404                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 22405  007A' 0102               	movlb	2	; () banked
 22406  007C' 8700'              	bsf	_loRa& (0+255),3,b
 22407  007E'                    l2131:
 22408                           
 22409                           ;lorawan.c: 2129: }
 22410                           ;lorawan.c: 2131: return 1;
 22411                           
 22412                           ; BSR set to: 2
 22413  007E' 0E01               	movlw	1
 22414  0080' 0012               	return	
 22415  0082'                    __end_of_CheckMcastFlags:
 22416                           	opt stack 0
 22417                           tosu	equ	0xFFF
 22418                           tosh	equ	0xFFE
 22419                           tosl	equ	0xFFD
 22420                           pclath	equ	0xFFA
 22421                           tblptru	equ	0xFF8
 22422                           tblptrh	equ	0xFF7
 22423                           tblptrl	equ	0xFF6
 22424                           tablat	equ	0xFF5
 22425                           prodh	equ	0xFF4
 22426                           prodl	equ	0xFF3
 22427                           intcon	equ	0xFF2
 22428                           intcon2	equ	0xFF1
 22429                           intcon3	equ	0xFF0
 22430                           indf0	equ	0xFEF
 22431                           postinc0	equ	0xFEE
 22432                           fsr0h	equ	0xFEA
 22433                           fsr0l	equ	0xFE9
 22434                           wreg	equ	0xFE8
 22435                           postinc1	equ	0xFE6
 22436                           postdec1	equ	0xFE5
 22437                           plusw1	equ	0xFE3
 22438                           fsr1h	equ	0xFE2
 22439                           fsr1l	equ	0xFE1
 22440                           indf2	equ	0xFDF
 22441                           postinc2	equ	0xFDE
 22442                           postdec2	equ	0xFDD
 22443                           plusw2	equ	0xFDB
 22444                           fsr2h	equ	0xFDA
 22445                           fsr2l	equ	0xFD9
 22446                           status	equ	0xFD8
 22447                           
 22448 ;; *************** function _CheckFlags *****************
 22449 ;; Defined at:
 22450 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22451 ;; Parameters:    Size  Location     Type
 22452 ;;  hdr             2    0[BANK0 ] PTR struct .
 22453 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22454 ;; Auto vars:     Size  Location     Type
 22455 ;;		None
 22456 ;; Return value:  Size  Location     Type
 22457 ;;                  1    wreg      void 
 22458 ;; Registers used:
 22459 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22460 ;; Tracked objects:
 22461 ;;		On entry : 0/0
 22462 ;;		On exit  : 0/0
 22463 ;;		Unchanged: 0/0
 22464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22465 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22468 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22469 ;;Total ram usage:        2 bytes
 22470 ;; Hardware stack levels used:    1
 22471 ;; Hardware stack levels required when called:    7
 22472 ;; This function calls:
 22473 ;;		Nothing
 22474 ;; This function is called by:
 22475 ;;		_LORAWAN_RxDone
 22476 ;; This function uses a non-reentrant model
 22477 ;;
 22478                           
 22479                           	psect	text102
 22480  0000'                    __ptext102:
 22481                           	opt stack 0
 22482  0000'                    _CheckFlags:
 22483                           	opt stack 19
 22484                           
 22485                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 22486                           
 22487                           ;incstack = 0
 22488  0000' 0100               	movlb	0	; () banked
 22489  0002' EE20 F005          	lfsr	2,5
 22490  0006' 5100'              	movf	CheckFlags@hdr& (0+255),w,b
 22491  0008' 26D9               	addwf	fsr2l,f,c
 22492  000A' 5100'              	movf	(CheckFlags@hdr+1)& (0+255),w,b
 22493  000C' 22DA               	addwfc	fsr2h,f,c
 22494  000E' AEDF               	btfss	indf2,7,c
 22495  0010' D002               	goto	l2117
 22496                           
 22497                           ; BSR set to: 0
 22498                           ;lorawan.c: 2077: {
 22499                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 22500  0012' 0102               	movlb	2	; () banked
 22501  0014' 8D00'              	bsf	(_loRa+2)& (0+255),6,b
 22502  0016'                    l2117:
 22503                           
 22504                           ;lorawan.c: 2079: }
 22505                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 22506                           
 22507                           ; BSR set to: 2
 22508  0016' 0100               	movlb	0	; () banked
 22509  0018' EE20 F005          	lfsr	2,5
 22510  001C' 5100'              	movf	CheckFlags@hdr& (0+255),w,b
 22511  001E' 26D9               	addwf	fsr2l,f,c
 22512  0020' 5100'              	movf	(CheckFlags@hdr+1)& (0+255),w,b
 22513  0022' 22DA               	addwfc	fsr2h,f,c
 22514  0024' A8DF               	btfss	indf2,4,c
 22515  0026' D002               	goto	l2118
 22516                           
 22517                           ; BSR set to: 0
 22518                           ;lorawan.c: 2082: {
 22519                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 22520  0028' 0102               	movlb	2	; () banked
 22521  002A' 8700'              	bsf	_loRa& (0+255),3,b
 22522  002C'                    l2118:
 22523                           
 22524                           ;lorawan.c: 2084: }
 22525                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 22526                           
 22527                           ; BSR set to: 2
 22528  002C' 0100               	movlb	0	; () banked
 22529  002E' EE20 F005          	lfsr	2,5
 22530  0032' 5100'              	movf	CheckFlags@hdr& (0+255),w,b
 22531  0034' 26D9               	addwf	fsr2l,f,c
 22532  0036' 5100'              	movf	(CheckFlags@hdr+1)& (0+255),w,b
 22533  0038' 22DA               	addwfc	fsr2h,f,c
 22534  003A' ACDF               	btfss	indf2,6,c
 22535  003C' D002               	goto	l2119
 22536                           
 22537                           ; BSR set to: 0
 22538                           ;lorawan.c: 2087: {
 22539                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 22540  003E' 0102               	movlb	2	; () banked
 22541  0040' 8900'              	bsf	_loRa& (0+255),4,b
 22542  0042'                    l2119:
 22543                           
 22544                           ;lorawan.c: 2089: }
 22545                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 22546                           
 22547                           ; BSR set to: 2
 22548  0042' C000' FFD9         	movff	CheckFlags@hdr,fsr2l
 22549  0046' C001' FFDA         	movff	CheckFlags@hdr+1,fsr2h
 22550  004A' 0100               	movlb	0	; () banked
 22551  004C' 38DF               	swapf	223,w,c
 22552  004E' 32E8               	rrcf	wreg,f,c
 22553  0050' 0B07               	andlw	7
 22554  0052' 0A05               	xorlw	5
 22555  0054' A4D8               	btfss	status,2,c
 22556  0056' 0012               	return	
 22557                           
 22558                           ; BSR set to: 0
 22559                           ;lorawan.c: 2092: {
 22560                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 22561  0058' 0102               	movlb	2	; () banked
 22562  005A' 8300'              	bsf	_loRa& (0+255),1,b
 22563  005C' 0012               	return	
 22564  005E'                    __end_of_CheckFlags:
 22565                           	opt stack 0
 22566                           tosu	equ	0xFFF
 22567                           tosh	equ	0xFFE
 22568                           tosl	equ	0xFFD
 22569                           pclath	equ	0xFFA
 22570                           tblptru	equ	0xFF8
 22571                           tblptrh	equ	0xFF7
 22572                           tblptrl	equ	0xFF6
 22573                           tablat	equ	0xFF5
 22574                           prodh	equ	0xFF4
 22575                           prodl	equ	0xFF3
 22576                           intcon	equ	0xFF2
 22577                           intcon2	equ	0xFF1
 22578                           intcon3	equ	0xFF0
 22579                           indf0	equ	0xFEF
 22580                           postinc0	equ	0xFEE
 22581                           fsr0h	equ	0xFEA
 22582                           fsr0l	equ	0xFE9
 22583                           wreg	equ	0xFE8
 22584                           postinc1	equ	0xFE6
 22585                           postdec1	equ	0xFE5
 22586                           plusw1	equ	0xFE3
 22587                           fsr1h	equ	0xFE2
 22588                           fsr1l	equ	0xFE1
 22589                           indf2	equ	0xFDF
 22590                           postinc2	equ	0xFDE
 22591                           postdec2	equ	0xFDD
 22592                           plusw2	equ	0xFDB
 22593                           fsr2h	equ	0xFDA
 22594                           fsr2l	equ	0xFD9
 22595                           status	equ	0xFD8
 22596                           
 22597 ;; *************** function _RADIO_FSKPacketSent *****************
 22598 ;; Defined at:
 22599 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22600 ;; Parameters:    Size  Location     Type
 22601 ;;		None
 22602 ;; Auto vars:     Size  Location     Type
 22603 ;;  timeOnAir       4  135[BANK0 ] unsigned long 
 22604 ;;  irqFlags        1  143[BANK0 ] unsigned char 
 22605 ;; Return value:  Size  Location     Type
 22606 ;;                  1    wreg      void 
 22607 ;; Registers used:
 22608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 22609 ;; Tracked objects:
 22610 ;;		On entry : 0/0
 22611 ;;		On exit  : 0/0
 22612 ;;		Unchanged: 0/0
 22613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22615 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22616 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22617 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22618 ;;Total ram usage:       13 bytes
 22619 ;; Hardware stack levels used:    1
 22620 ;; Hardware stack levels required when called:   15
 22621 ;; This function calls:
 22622 ;;		_LORAWAN_TxDone
 22623 ;;		_RADIO_RegisterRead
 22624 ;;		_RADIO_WriteMode
 22625 ;;		_SwTimerReadValue
 22626 ;;		_SwTimerStop
 22627 ;;		___lmul
 22628 ;; This function is called by:
 22629 ;;		_RADIO_DIO0
 22630 ;; This function uses a non-reentrant model
 22631 ;;
 22632                           
 22633                           	psect	text103
 22634  0000'                    __ptext103:
 22635                           	opt stack 0
 22636  0000'                    _RADIO_FSKPacketSent:
 22637                           	opt stack 13
 22638                           
 22639                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 22640                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 22641                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 22642                           
 22643                           ;incstack = 0
 22644  0000' 0E3F               	movlw	63
 22645  0002' EC00' F000'        	call	_RADIO_RegisterRead
 22646  0006' 0100               	movlb	0	; () banked
 22647  0008' 6F00'              	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 22648                           
 22649                           ; BSR set to: 0
 22650                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 22651  000A' A700'              	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 22652  000C' 0012               	return	
 22653                           
 22654                           ; BSR set to: 0
 22655                           ;radio_driver_SX1276.c: 1100: {
 22656                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 22657  000E' C02A' F005'        	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 22658  0012' 0E00               	movlw	0
 22659  0014' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
 22660  0016' 0E00               	movlw	0
 22661  0018' EC00' F000'        	call	_RADIO_WriteMode
 22662                           
 22663                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 22664  001C' 0101               	movlb	1	; () banked
 22665  001E' 9100'              	bcf	(_RadioConfiguration+35)& (0+255),0,b
 22666                           
 22667                           ; BSR set to: 1
 22668                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 22669  0020' 5100'              	movf	(_RadioConfiguration+41)& (0+255),w,b
 22670  0022' EC00' F000'        	call	_SwTimerStop
 22671                           
 22672                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 22673  0026' 0101               	movlb	1	; () banked
 22674  0028' B900'              	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 22675  002A' 0012               	return	
 22676                           
 22677                           ; BSR set to: 1
 22678                           ;radio_driver_SX1276.c: 1107: {
 22679                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 22680  002C' 5100'              	movf	(_RadioConfiguration+39)& (0+255),w,b
 22681  002E' EC00' F000'        	call	_SwTimerReadValue
 22682  0032' 0100               	movlb	0	; () banked
 22683  0034' 5100'              	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 22684  0036' E108               	bnz	u19150
 22685  0038' 0E1F               	movlw	31
 22686  003A' 5D00'              	subwf	?_SwTimerReadValue& (0+255),w,b
 22687  003C' 0EAC               	movlw	172
 22688  003E' 5900'              	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 22689  0040' 0EDF               	movlw	223
 22690  0042' 5900'              	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 22691  0044' A0D8               	btfss	status,0,c
 22692  0046' D021               	goto	l584
 22693  0048'                    u19150:
 22694                           
 22695                           ; BSR set to: 0
 22696  0048' 0101               	movlb	1	; () banked
 22697  004A' 5100'              	movf	(_RadioConfiguration+39)& (0+255),w,b
 22698  004C' EC00' F000'        	call	_SwTimerReadValue
 22699  0050' 0E0D               	movlw	13
 22700  0052' D006               	goto	u19160
 22701  0054'                    u19165:
 22702  0054' 0100               	movlb	0	; () banked
 22703  0056' 90D8               	bcf	status,0,c
 22704  0058' 3300'              	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 22705  005A' 3300'              	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 22706  005C' 3300'              	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 22707  005E' 3300'              	rrcf	?_SwTimerReadValue& (0+255),f,b
 22708  0060'                    u19160:
 22709  0060' 2EE8               	decfsz	wreg,f,c
 22710  0062' D7F8               	goto	u19165
 22711  0064' C031' F03A'        	movff	?_SwTimerReadValue,___lmul@multiplier
 22712  0068' C032' F03B'        	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 22713  006C' C033' F03C'        	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 22714  0070' C034' F03D'        	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 22715  0074' 0E7D               	movlw	125
 22716  0076' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 22717  0078' 0E00               	movlw	0
 22718  007A' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 22719  007C' 0E00               	movlw	0
 22720  007E' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 22721  0080' 0E00               	movlw	0
 22722  0082' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 22723  0084' EC00' F000'        	call	___lmul	;wreg free
 22724  0088' D021               	goto	L14
 22725  008A'                    l584:
 22726  008A' 0101               	movlb	1	; () banked
 22727  008C' 5100'              	movf	(_RadioConfiguration+39)& (0+255),w,b
 22728  008E' EC00' F000'        	call	_SwTimerReadValue
 22729  0092' C031' F03A'        	movff	?_SwTimerReadValue,___lmul@multiplier
 22730  0096' C032' F03B'        	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 22731  009A' C033' F03C'        	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 22732  009E' C034' F03D'        	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 22733  00A2' 0E7D               	movlw	125
 22734  00A4' 0100               	movlb	0	; () banked
 22735  00A6' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 22736  00A8' 0E00               	movlw	0
 22737  00AA' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 22738  00AC' 0E00               	movlw	0
 22739  00AE' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 22740  00B0' 0E00               	movlw	0
 22741  00B2' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 22742  00B4' EC00' F000'        	call	___lmul	;wreg free
 22743  00B8' 0E0D               	movlw	13
 22744  00BA' D006               	goto	u19170
 22745  00BC'                    u19175:
 22746  00BC' 0100               	movlb	0	; () banked
 22747  00BE' 90D8               	bcf	status,0,c
 22748  00C0' 3300'              	rrcf	(?___lmul+3)& (0+255),f,b
 22749  00C2' 3300'              	rrcf	(?___lmul+2)& (0+255),f,b
 22750  00C4' 3300'              	rrcf	(?___lmul+1)& (0+255),f,b
 22751  00C6' 3300'              	rrcf	?___lmul& (0+255),f,b
 22752  00C8'                    u19170:
 22753  00C8' 2EE8               	decfsz	wreg,f,c
 22754  00CA' D7F8               	goto	u19175
 22755  00CC'                    L14:
 22756  00CC' C03A' F08B'        	movff	?___lmul,_RADIO_FSKPacketSent$797
 22757  00D0' C03B' F08C'        	movff	?___lmul+1,_RADIO_FSKPacketSent$797+1
 22758  00D4' C03C' F08D'        	movff	?___lmul+2,_RADIO_FSKPacketSent$797+2
 22759  00D8' C03D' F08E'        	movff	?___lmul+3,_RADIO_FSKPacketSent$797+3
 22760                           
 22761                           ; BSR set to: 0
 22762  00DC' C08B' F083'        	movff	_RADIO_FSKPacketSent$797,??_RADIO_FSKPacketSent
 22763  00E0' C08C' F084'        	movff	_RADIO_FSKPacketSent$797+1,??_RADIO_FSKPacketSent+1
 22764  00E4' C08D' F085'        	movff	_RADIO_FSKPacketSent$797+2,??_RADIO_FSKPacketSent+2
 22765  00E8' C08E' F086'        	movff	_RADIO_FSKPacketSent$797+3,??_RADIO_FSKPacketSent+3
 22766  00EC' 0100               	movlb	0	; () banked
 22767  00EE' 1F00'              	comf	??_RADIO_FSKPacketSent& (0+255),f,b
 22768  00F0' 1F00'              	comf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 22769  00F2' 1F00'              	comf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22770  00F4' 1F00'              	comf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22771  00F6' 2B00'              	incf	??_RADIO_FSKPacketSent& (0+255),f,b
 22772  00F8' 0E00               	movlw	0
 22773  00FA' 2300'              	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 22774  00FC' 2300'              	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22775  00FE' 2300'              	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22776  0100' 0E20               	movlw	32
 22777  0102' 2500'              	addwf	??_RADIO_FSKPacketSent& (0+255),w,b
 22778  0104' 6F00'              	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 22779  0106' 0E4E               	movlw	78
 22780  0108' 2100'              	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),w,b
 22781  010A' 6F00'              	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 22782  010C' 0E00               	movlw	0
 22783  010E' 2100'              	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),w,b
 22784  0110' 6F00'              	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 22785  0112' 0E00               	movlw	0
 22786  0114' 2100'              	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),w,b
 22787  0116' 6F00'              	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 22788                           
 22789                           ; BSR set to: 0
 22790                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 22791  0118' 0101               	movlb	1	; () banked
 22792  011A' 5100'              	movf	(_RadioConfiguration+39)& (0+255),w,b
 22793  011C' EC00' F000'        	call	_SwTimerStop
 22794                           
 22795                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 22796  0120' C087' F05B'        	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 22797  0124' C088' F05C'        	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 22798  0128' EC00' F000'        	call	_LORAWAN_TxDone	;wreg free
 22799  012C' 0012               	return	
 22800  012E'                    __end_of_RADIO_FSKPacketSent:
 22801                           	opt stack 0
 22802                           tosu	equ	0xFFF
 22803                           tosh	equ	0xFFE
 22804                           tosl	equ	0xFFD
 22805                           pclath	equ	0xFFA
 22806                           tblptru	equ	0xFF8
 22807                           tblptrh	equ	0xFF7
 22808                           tblptrl	equ	0xFF6
 22809                           tablat	equ	0xFF5
 22810                           prodh	equ	0xFF4
 22811                           prodl	equ	0xFF3
 22812                           intcon	equ	0xFF2
 22813                           intcon2	equ	0xFF1
 22814                           intcon3	equ	0xFF0
 22815                           indf0	equ	0xFEF
 22816                           postinc0	equ	0xFEE
 22817                           fsr0h	equ	0xFEA
 22818                           fsr0l	equ	0xFE9
 22819                           wreg	equ	0xFE8
 22820                           postinc1	equ	0xFE6
 22821                           postdec1	equ	0xFE5
 22822                           plusw1	equ	0xFE3
 22823                           fsr1h	equ	0xFE2
 22824                           fsr1l	equ	0xFE1
 22825                           indf2	equ	0xFDF
 22826                           postinc2	equ	0xFDE
 22827                           postdec2	equ	0xFDD
 22828                           plusw2	equ	0xFDB
 22829                           fsr2h	equ	0xFDA
 22830                           fsr2l	equ	0xFD9
 22831                           status	equ	0xFD8
 22832                           
 22833 ;; *************** function _LORAWAN_TxDone *****************
 22834 ;; Defined at:
 22835 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 22836 ;; Parameters:    Size  Location     Type
 22837 ;;  timeOnAir       2   91[BANK0 ] unsigned int 
 22838 ;; Auto vars:     Size  Location     Type
 22839 ;;  minim           4  126[BANK0 ] unsigned long 
 22840 ;;  ticks           4  122[BANK0 ] unsigned long 
 22841 ;;  delta           4  114[BANK0 ] unsigned long 
 22842 ;;  i               1  130[BANK0 ] unsigned char 
 22843 ;;  found           1  113[BANK0 ] unsigned char 
 22844 ;; Return value:  Size  Location     Type
 22845 ;;                  1    wreg      void 
 22846 ;; Registers used:
 22847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 22848 ;; Tracked objects:
 22849 ;;		On entry : 0/0
 22850 ;;		On exit  : 0/0
 22851 ;;		Unchanged: 0/0
 22852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22853 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22854 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22855 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22856 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22857 ;;Total ram usage:       40 bytes
 22858 ;; Hardware stack levels used:    1
 22859 ;; Hardware stack levels required when called:   14
 22860 ;; This function calls:
 22861 ;;		_LORAWAN_EnterContinuousReceive
 22862 ;;		_RADIO_GetStatus
 22863 ;;		_RxData
 22864 ;;		_SwTimerIsRunning
 22865 ;;		_SwTimerReadValue
 22866 ;;		_SwTimerSetTimeout
 22867 ;;		_SwTimerStart
 22868 ;;		_SwTimerStop
 22869 ;;		___lldiv
 22870 ;;		___lmul
 22871 ;; This function is called by:
 22872 ;;		_RADIO_TxDone
 22873 ;;		_RADIO_FSKPacketSent
 22874 ;;		_RADIO_WatchdogTimeout
 22875 ;; This function uses a non-reentrant model
 22876 ;;
 22877                           
 22878                           	psect	text104
 22879  0000'                    __ptext104:
 22880                           	opt stack 0
 22881  0000'                    _LORAWAN_TxDone:
 22882                           	opt stack 13
 22883                           
 22884                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 22885                           
 22886                           ;incstack = 0
 22887  0000' 0102               	movlb	2	; () banked
 22888  0002' B100'              	btfsc	(_loRa+3)& (0+255),0,b
 22889  0004' D3A2               	goto	l1032
 22890                           
 22891                           ; BSR set to: 2
 22892                           ;lorawan_eu.c: 368: {
 22893                           ;lorawan_eu.c: 369: bool found = 0;
 22894  0006' 0E00               	movlw	0
 22895  0008' 0100               	movlb	0	; () banked
 22896  000A' 6F00'              	movwf	LORAWAN_TxDone@found& (0+255),b
 22897                           
 22898                           ;lorawan_eu.c: 370: uint8_t i;
 22899                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 22900  000C' 0E00               	movlw	0
 22901  000E' 6F00'              	movwf	LORAWAN_TxDone@delta& (0+255),b
 22902  0010' 0E00               	movlw	0
 22903  0012' 6F00'              	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 22904  0014' 0E00               	movlw	0
 22905  0016' 6F00'              	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 22906  0018' 0E00               	movlw	0
 22907  001A' 6F00'              	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 22908                           
 22909                           ; BSR set to: 0
 22910  001C' 6900'              	setf	LORAWAN_TxDone@minim& (0+255),b
 22911  001E' 6900'              	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 22912  0020' 6900'              	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 22913  0022' 6900'              	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 22914                           
 22915                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 22916  0024' 0E00               	movlw	0
 22917  0026' 0102               	movlb	2	; () banked
 22918  0028' 6F00'              	movwf	(_loRa+241)& (0+255),b
 22919                           
 22920                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 22921  002A' 5100'              	movf	(_loRa+2)& (0+255),w,b
 22922  002C' 0BF0               	andlw	-16
 22923  002E' 0902               	iorlw	2
 22924  0030' 6F00'              	movwf	(_loRa+2)& (0+255),b
 22925                           
 22926                           ; BSR set to: 2
 22927                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 22928  0032' C0DA' F082'        	movff	_loRa+218,LORAWAN_TxDone@i
 22929                           
 22930                           ; BSR set to: 2
 22931                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 22932  0036' A500'              	btfss	_loRa& (0+255),2,b
 22933  0038' D0BA               	goto	l1033
 22934                           
 22935                           ; BSR set to: 2
 22936                           ;lorawan_eu.c: 382: {
 22937                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 22938  003A' 5100'              	movf	(_loRa+23)& (0+255),w,b
 22939  003C' 0D01               	mullw	1
 22940  003E' 0E00'              	movlw	low _rxWindowOffset
 22941  0040' 24F3               	addwf	prodl,w,c
 22942  0042' 6EF6               	movwf	tblptrl,c
 22943  0044' 0E00'              	movlw	high _rxWindowOffset
 22944  0046' 20F4               	addwfc	prodh,w,c
 22945  0048' 6EF7               	movwf	tblptrh,c
 22946  004A'                    	if	1	;There are 3 active tblptr bytes
 22947  004A' 6AF8               	clrf	tblptru,c
 22948  004C' 0E00'              	movlw	low (__mediumconst shr (0+16))
 22949  004E' 22F8               	addwfc	tblptru,f,c
 22950  0050'                    	endif
 22951  0050' 0008               	tblrd		*
 22952  0052' CFF5 F05D'         	movff	tablat,??_LORAWAN_TxDone
 22953  0056' 5100'              	movf	(_loRa+152)& (0+255),w,b
 22954  0058' 0100               	movlb	0	; () banked
 22955  005A' 2500'              	addwf	??_LORAWAN_TxDone& (0+255),w,b
 22956  005C' 6F00'              	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22957  005E' 0E00               	movlw	0
 22958  0060' BF00'              	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22959  0062' 0EFF               	movlw	255
 22960  0064' 0102               	movlb	2	; () banked
 22961  0066' 2100'              	addwfc	(_loRa+153)& (0+255),w,b
 22962  0068' 0100               	movlb	0	; () banked
 22963  006A' 6F00'              	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22964  006C' 6B00'              	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22965  006E' 6B00'              	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22966  0070' 0E0C               	movlw	12
 22967  0072'                    u18655:
 22968  0072' 90D8               	bcf	status,0,c
 22969  0074' 3700'              	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22970  0076' 3700'              	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22971  0078' 3700'              	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22972  007A' 3700'              	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22973  007C' 2EE8               	decfsz	wreg,f,c
 22974  007E' D7F9               	goto	u18655
 22975  0080' C05E' F000'        	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22976  0084' C05F' F001'        	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22977  0088' C060' F002'        	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22978  008C' C061' F003'        	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22979  0090' 0E7D               	movlw	125
 22980  0092' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 22981  0094' 0E00               	movlw	0
 22982  0096' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 22983  0098' 0E00               	movlw	0
 22984  009A' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 22985  009C' 0E00               	movlw	0
 22986  009E' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 22987  00A0' EC00' F000'        	call	___lldiv	;wreg free
 22988  00A4' C000' F00D'        	movff	?___lldiv,SwTimerSetTimeout@timeout
 22989  00A8' C001' F00E'        	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22990  00AC' C002' F00F'        	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22991  00B0' C003' F010'        	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22992  00B4' 0102               	movlb	2	; () banked
 22993  00B6' 5100'              	movf	(_loRa+226)& (0+255),w,b
 22994  00B8' EC00' F000'        	call	_SwTimerSetTimeout
 22995                           
 22996                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 22997  00BC' 0102               	movlb	2	; () banked
 22998  00BE' 5100'              	movf	(_loRa+28)& (0+255),w,b
 22999  00C0' 0D01               	mullw	1
 23000  00C2' 0E00'              	movlw	low _rxWindowOffset
 23001  00C4' 24F3               	addwf	prodl,w,c
 23002  00C6' 6EF6               	movwf	tblptrl,c
 23003  00C8' 0E00'              	movlw	high _rxWindowOffset
 23004  00CA' 20F4               	addwfc	prodh,w,c
 23005  00CC' 6EF7               	movwf	tblptrh,c
 23006  00CE'                    	if	1	;There are 3 active tblptr bytes
 23007  00CE' 6AF8               	clrf	tblptru,c
 23008  00D0' 0E00'              	movlw	low (__mediumconst shr (0+16))
 23009  00D2' 22F8               	addwfc	tblptru,f,c
 23010  00D4'                    	endif
 23011  00D4' 0008               	tblrd		*
 23012  00D6' CFF5 F05D'         	movff	tablat,??_LORAWAN_TxDone
 23013  00DA' 5100'              	movf	(_loRa+154)& (0+255),w,b
 23014  00DC' 0100               	movlb	0	; () banked
 23015  00DE' 2500'              	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23016  00E0' 6F00'              	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23017  00E2' 0E00               	movlw	0
 23018  00E4' BF00'              	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 23019  00E6' 0EFF               	movlw	255
 23020  00E8' 0102               	movlb	2	; () banked
 23021  00EA' 2100'              	addwfc	(_loRa+155)& (0+255),w,b
 23022  00EC' 0100               	movlb	0	; () banked
 23023  00EE' 6F00'              	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23024  00F0' 6B00'              	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 23025  00F2' 6B00'              	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23026  00F4' 0E0C               	movlw	12
 23027  00F6'                    u18665:
 23028  00F6' 90D8               	bcf	status,0,c
 23029  00F8' 3700'              	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23030  00FA' 3700'              	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23031  00FC' 3700'              	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23032  00FE' 3700'              	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23033  0100' 2EE8               	decfsz	wreg,f,c
 23034  0102' D7F9               	goto	u18665
 23035  0104' C05E' F000'        	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 23036  0108' C05F' F001'        	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 23037  010C' C060' F002'        	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 23038  0110' C061' F003'        	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 23039  0114' 0E7D               	movlw	125
 23040  0116' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 23041  0118' 0E00               	movlw	0
 23042  011A' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 23043  011C' 0E00               	movlw	0
 23044  011E' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 23045  0120' 0E00               	movlw	0
 23046  0122' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 23047  0124' EC00' F000'        	call	___lldiv	;wreg free
 23048  0128' C000' F00D'        	movff	?___lldiv,SwTimerSetTimeout@timeout
 23049  012C' C001' F00E'        	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23050  0130' C002' F00F'        	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23051  0134' C003' F010'        	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23052  0138' 0102               	movlb	2	; () banked
 23053  013A' 5100'              	movf	(_loRa+227)& (0+255),w,b
 23054  013C' EC00' F000'        	call	_SwTimerSetTimeout
 23055                           
 23056                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 23057  0140' 0102               	movlb	2	; () banked
 23058  0142' 5100'              	movf	(_loRa+226)& (0+255),w,b
 23059  0144' EC00' F000'        	call	_SwTimerStart
 23060                           
 23061                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 23062  0148' 0102               	movlb	2	; () banked
 23063  014A' 5100'              	movf	(_loRa+227)& (0+255),w,b
 23064  014C' EC00' F000'        	call	_SwTimerStart
 23065                           
 23066                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 23067  0150' C0DB' F03A'        	movff	_loRa+219,___lmul@multiplier
 23068  0154' C0DC' F03B'        	movff	_loRa+220,___lmul@multiplier+1
 23069  0158' 0100               	movlb	0	; () banked
 23070  015A' 6B00'              	clrf	(___lmul@multiplier+2)& (0+255),b
 23071  015C' 6B00'              	clrf	(___lmul@multiplier+3)& (0+255),b
 23072  015E' 0ED6               	movlw	214
 23073  0160' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 23074  0162' 0E0B               	movlw	11
 23075  0164' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 23076  0166' 0E00               	movlw	0
 23077  0168' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 23078  016A' 0E00               	movlw	0
 23079  016C' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 23080  016E' EC00' F000'        	call	___lmul	;wreg free
 23081  0172' 0EFF               	movlw	255
 23082  0174' 0100               	movlb	0	; () banked
 23083  0176' 2500'              	addwf	?___lmul& (0+255),w,b
 23084  0178' 6F00'              	movwf	_LORAWAN_TxDone$5065& (0+255),b
 23085  017A' 0EFF               	movlw	255
 23086  017C' 2100'              	addwfc	(?___lmul+1)& (0+255),w,b
 23087  017E' 6F00'              	movwf	(_LORAWAN_TxDone$5065+1)& (0+255),b
 23088  0180' 0EFF               	movlw	255
 23089  0182' 2100'              	addwfc	(?___lmul+2)& (0+255),w,b
 23090  0184' 6F00'              	movwf	(_LORAWAN_TxDone$5065+2)& (0+255),b
 23091  0186' 0EFF               	movlw	255
 23092  0188' 2100'              	addwfc	(?___lmul+3)& (0+255),w,b
 23093  018A' 6F00'              	movwf	(_LORAWAN_TxDone$5065+3)& (0+255),b
 23094                           
 23095                           ; BSR set to: 0
 23096                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 23097  018C' C076' F03A'        	movff	_LORAWAN_TxDone$5065,___lmul@multiplier
 23098  0190' C077' F03B'        	movff	_LORAWAN_TxDone$5065+1,___lmul@multiplier+1
 23099  0194' C078' F03C'        	movff	_LORAWAN_TxDone$5065+2,___lmul@multiplier+2
 23100  0198' C079' F03D'        	movff	_LORAWAN_TxDone$5065+3,___lmul@multiplier+3
 23101  019C' C05B' F03E'        	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 23102  01A0' C05C' F03F'        	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 23103  01A4' 6B00'              	clrf	(___lmul@multiplicand+2)& (0+255),b
 23104  01A6' 6B00'              	clrf	(___lmul@multiplicand+3)& (0+255),b
 23105  01A8' EC00' F000'        	call	___lmul	;wreg free
 23106  01AC' D0D7               	goto	L15
 23107  01AE'                    l1033:
 23108                           
 23109                           ;lorawan_eu.c: 390: else
 23110                           ;lorawan_eu.c: 391: {
 23111                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 23112                           
 23113                           ; BSR set to: 0
 23114  01AE' 0102               	movlb	2	; () banked
 23115  01B0' 5100'              	movf	(_loRa+23)& (0+255),w,b
 23116  01B2' 0D01               	mullw	1
 23117  01B4' 0E00'              	movlw	low _rxWindowOffset
 23118  01B6' 24F3               	addwf	prodl,w,c
 23119  01B8' 6EF6               	movwf	tblptrl,c
 23120  01BA' 0E00'              	movlw	high _rxWindowOffset
 23121  01BC' 20F4               	addwfc	prodh,w,c
 23122  01BE' 6EF7               	movwf	tblptrh,c
 23123  01C0'                    	if	1	;There are 3 active tblptr bytes
 23124  01C0' 6AF8               	clrf	tblptru,c
 23125  01C2' 0E00'              	movlw	low (__mediumconst shr (0+16))
 23126  01C4' 22F8               	addwfc	tblptru,f,c
 23127  01C6'                    	endif
 23128  01C6' 0008               	tblrd		*
 23129  01C8' CFF5 F05D'         	movff	tablat,??_LORAWAN_TxDone
 23130  01CC' 5100'              	movf	(_loRa+148)& (0+255),w,b
 23131  01CE' 0100               	movlb	0	; () banked
 23132  01D0' 2500'              	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23133  01D2' 6F00'              	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23134  01D4' 0E00               	movlw	0
 23135  01D6' BF00'              	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 23136  01D8' 0EFF               	movlw	255
 23137  01DA' 0102               	movlb	2	; () banked
 23138  01DC' 2100'              	addwfc	(_loRa+149)& (0+255),w,b
 23139  01DE' 0100               	movlb	0	; () banked
 23140  01E0' 6F00'              	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23141  01E2' 6B00'              	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 23142  01E4' 6B00'              	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23143  01E6' 0E0C               	movlw	12
 23144  01E8'                    u18675:
 23145  01E8' 90D8               	bcf	status,0,c
 23146  01EA' 3700'              	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23147  01EC' 3700'              	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23148  01EE' 3700'              	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23149  01F0' 3700'              	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23150  01F2' 2EE8               	decfsz	wreg,f,c
 23151  01F4' D7F9               	goto	u18675
 23152  01F6' C05E' F000'        	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 23153  01FA' C05F' F001'        	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 23154  01FE' C060' F002'        	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 23155  0202' C061' F003'        	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 23156  0206' 0E7D               	movlw	125
 23157  0208' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 23158  020A' 0E00               	movlw	0
 23159  020C' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 23160  020E' 0E00               	movlw	0
 23161  0210' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 23162  0212' 0E00               	movlw	0
 23163  0214' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 23164  0216' EC00' F000'        	call	___lldiv	;wreg free
 23165  021A' C000' F00D'        	movff	?___lldiv,SwTimerSetTimeout@timeout
 23166  021E' C001' F00E'        	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23167  0222' C002' F00F'        	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23168  0226' C003' F010'        	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23169  022A' 0102               	movlb	2	; () banked
 23170  022C' 5100'              	movf	(_loRa+228)& (0+255),w,b
 23171  022E' EC00' F000'        	call	_SwTimerSetTimeout
 23172                           
 23173                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 23174  0232' 0102               	movlb	2	; () banked
 23175  0234' 5100'              	movf	(_loRa+28)& (0+255),w,b
 23176  0236' 0D01               	mullw	1
 23177  0238' 0E00'              	movlw	low _rxWindowOffset
 23178  023A' 24F3               	addwf	prodl,w,c
 23179  023C' 6EF6               	movwf	tblptrl,c
 23180  023E' 0E00'              	movlw	high _rxWindowOffset
 23181  0240' 20F4               	addwfc	prodh,w,c
 23182  0242' 6EF7               	movwf	tblptrh,c
 23183  0244'                    	if	1	;There are 3 active tblptr bytes
 23184  0244' 6AF8               	clrf	tblptru,c
 23185  0246' 0E00'              	movlw	low (__mediumconst shr (0+16))
 23186  0248' 22F8               	addwfc	tblptru,f,c
 23187  024A'                    	endif
 23188  024A' 0008               	tblrd		*
 23189  024C' CFF5 F05D'         	movff	tablat,??_LORAWAN_TxDone
 23190  0250' 5100'              	movf	(_loRa+150)& (0+255),w,b
 23191  0252' 0100               	movlb	0	; () banked
 23192  0254' 2500'              	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23193  0256' 6F00'              	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23194  0258' 0E00               	movlw	0
 23195  025A' BF00'              	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 23196  025C' 0EFF               	movlw	255
 23197  025E' 0102               	movlb	2	; () banked
 23198  0260' 2100'              	addwfc	(_loRa+151)& (0+255),w,b
 23199  0262' 0100               	movlb	0	; () banked
 23200  0264' 6F00'              	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23201  0266' 6B00'              	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 23202  0268' 6B00'              	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23203  026A' 0E0C               	movlw	12
 23204  026C'                    u18685:
 23205  026C' 90D8               	bcf	status,0,c
 23206  026E' 3700'              	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23207  0270' 3700'              	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23208  0272' 3700'              	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23209  0274' 3700'              	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23210  0276' 2EE8               	decfsz	wreg,f,c
 23211  0278' D7F9               	goto	u18685
 23212  027A' C05E' F000'        	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 23213  027E' C05F' F001'        	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 23214  0282' C060' F002'        	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 23215  0286' C061' F003'        	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 23216  028A' 0E7D               	movlw	125
 23217  028C' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 23218  028E' 0E00               	movlw	0
 23219  0290' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 23220  0292' 0E00               	movlw	0
 23221  0294' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 23222  0296' 0E00               	movlw	0
 23223  0298' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 23224  029A' EC00' F000'        	call	___lldiv	;wreg free
 23225  029E' C000' F00D'        	movff	?___lldiv,SwTimerSetTimeout@timeout
 23226  02A2' C001' F00E'        	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23227  02A6' C002' F00F'        	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23228  02AA' C003' F010'        	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23229  02AE' 0102               	movlb	2	; () banked
 23230  02B0' 5100'              	movf	(_loRa+229)& (0+255),w,b
 23231  02B2' EC00' F000'        	call	_SwTimerSetTimeout
 23232                           
 23233                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 23234  02B6' 0102               	movlb	2	; () banked
 23235  02B8' 5100'              	movf	(_loRa+228)& (0+255),w,b
 23236  02BA' EC00' F000'        	call	_SwTimerStart
 23237                           
 23238                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 23239  02BE' 0102               	movlb	2	; () banked
 23240  02C0' 5100'              	movf	(_loRa+18)& (0+255),w,b
 23241  02C2' A4D8               	btfss	status,2,c
 23242  02C4' D003               	goto	l1035
 23243                           
 23244                           ; BSR set to: 2
 23245                           ;lorawan_eu.c: 396: {
 23246                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 23247  02C6' 5100'              	movf	(_loRa+229)& (0+255),w,b
 23248  02C8' EC00' F000'        	call	_SwTimerStart
 23249  02CC'                    l1035:
 23250                           
 23251                           ;lorawan_eu.c: 398: }
 23252                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 23253  02CC' 0100               	movlb	0	; () banked
 23254  02CE' 5100'              	movf	LORAWAN_TxDone@i& (0+255),w,b
 23255  02D0' 0D0E               	mullw	14
 23256  02D2' 0E06               	movlw	6
 23257  02D4' 26F3               	addwf	prodl,f,c
 23258  02D6' 0E00               	movlw	0
 23259  02D8' 22F4               	addwfc	prodh,f,c
 23260  02DA' 0E00'              	movlw	low _Channels
 23261  02DC' 24F3               	addwf	prodl,w,c
 23262  02DE' 6ED9               	movwf	fsr2l,c
 23263  02E0' 0E00'              	movlw	high _Channels
 23264  02E2' 20F4               	addwfc	prodh,w,c
 23265  02E4' 6EDA               	movwf	fsr2h,c
 23266  02E6' CFDE F05D'         	movff	postinc2,??_LORAWAN_TxDone
 23267  02EA' CFDD F05E'         	movff	postdec2,??_LORAWAN_TxDone+1
 23268  02EE' 5100'              	movf	??_LORAWAN_TxDone& (0+255),w,b
 23269  02F0' 6F00'              	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23270  02F2' 5100'              	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 23271  02F4' 6F00'              	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 23272  02F6' 6B00'              	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23273  02F8' 6B00'              	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 23274  02FA' 0E01               	movlw	1
 23275  02FC' 2500'              	addwf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 23276  02FE' 6F00'              	movwf	___lmul@multiplier& (0+255),b
 23277  0300' 0E00               	movlw	0
 23278  0302' 2100'              	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 23279  0304' 6F00'              	movwf	(___lmul@multiplier+1)& (0+255),b
 23280  0306' 0E00               	movlw	0
 23281  0308' 2100'              	addwfc	(??_LORAWAN_TxDone+4)& (0+255),w,b
 23282  030A' 6F00'              	movwf	(___lmul@multiplier+2)& (0+255),b
 23283  030C' 0E00               	movlw	0
 23284  030E' 2100'              	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 23285  0310' 6F00'              	movwf	(___lmul@multiplier+3)& (0+255),b
 23286  0312' C0DB' F03E'        	movff	_loRa+219,___lmul@multiplicand
 23287  0316' C0DC' F03F'        	movff	_loRa+220,___lmul@multiplicand+1
 23288  031A' 6B00'              	clrf	(___lmul@multiplicand+2)& (0+255),b
 23289  031C' 6B00'              	clrf	(___lmul@multiplicand+3)& (0+255),b
 23290  031E' EC00' F000'        	call	___lmul	;wreg free
 23291  0322' 0EFF               	movlw	255
 23292  0324' 0100               	movlb	0	; () banked
 23293  0326' 2500'              	addwf	?___lmul& (0+255),w,b
 23294  0328' 6F00'              	movwf	_LORAWAN_TxDone$5065& (0+255),b
 23295  032A' 0EFF               	movlw	255
 23296  032C' 2100'              	addwfc	(?___lmul+1)& (0+255),w,b
 23297  032E' 6F00'              	movwf	(_LORAWAN_TxDone$5065+1)& (0+255),b
 23298  0330' 0EFF               	movlw	255
 23299  0332' 2100'              	addwfc	(?___lmul+2)& (0+255),w,b
 23300  0334' 6F00'              	movwf	(_LORAWAN_TxDone$5065+2)& (0+255),b
 23301  0336' 0EFF               	movlw	255
 23302  0338' 2100'              	addwfc	(?___lmul+3)& (0+255),w,b
 23303  033A' 6F00'              	movwf	(_LORAWAN_TxDone$5065+3)& (0+255),b
 23304                           
 23305                           ;lorawan_eu.c: 398: }
 23306                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 23307  033C' C076' F03A'        	movff	_LORAWAN_TxDone$5065,___lmul@multiplier
 23308  0340' C077' F03B'        	movff	_LORAWAN_TxDone$5065+1,___lmul@multiplier+1
 23309  0344' C078' F03C'        	movff	_LORAWAN_TxDone$5065+2,___lmul@multiplier+2
 23310  0348' C079' F03D'        	movff	_LORAWAN_TxDone$5065+3,___lmul@multiplier+3
 23311  034C' C05B' F03E'        	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 23312  0350' C05C' F03F'        	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 23313  0354' 6B00'              	clrf	(___lmul@multiplicand+2)& (0+255),b
 23314  0356' 6B00'              	clrf	(___lmul@multiplicand+3)& (0+255),b
 23315  0358' EC00' F000'        	call	___lmul	;wreg free
 23316  035C'                    L15:
 23317  035C' 0100               	movlb	0	; () banked
 23318  035E' 5100'              	movf	LORAWAN_TxDone@i& (0+255),w,b
 23319  0360' 0D0E               	mullw	14
 23320  0362' 0E08               	movlw	8
 23321  0364' 26F3               	addwf	prodl,f,c
 23322  0366' 0E00               	movlw	0
 23323  0368' 22F4               	addwfc	prodh,f,c
 23324  036A' 0E00'              	movlw	low _Channels
 23325  036C' 24F3               	addwf	prodl,w,c
 23326  036E' 6ED9               	movwf	fsr2l,c
 23327  0370' 0E00'              	movlw	high _Channels
 23328  0372' 20F4               	addwfc	prodh,w,c
 23329  0374' 6EDA               	movwf	fsr2h,c
 23330  0376' C03A' FFDE         	movff	?___lmul,postinc2
 23331  037A' C03B' FFDE         	movff	?___lmul+1,postinc2
 23332  037E' C03C' FFDE         	movff	?___lmul+2,postinc2
 23333  0382' C03D' FFDE         	movff	?___lmul+3,postinc2
 23334                           
 23335                           ; BSR set to: 0
 23336                           ;lorawan_eu.c: 401: }
 23337                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 23338  0386' 0102               	movlb	2	; () banked
 23339  0388' 5100'              	movf	(_loRa+233)& (0+255),w,b
 23340  038A' EC00' F000'        	call	_SwTimerIsRunning
 23341  038E' 0900               	iorlw	0
 23342  0390' B4D8               	btfsc	status,2,c
 23343  0392' D08A               	goto	l1036
 23344                           
 23345                           ;lorawan_eu.c: 404: {
 23346                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 23347  0394' 0102               	movlb	2	; () banked
 23348  0396' 5100'              	movf	(_loRa+233)& (0+255),w,b
 23349  0398' EC00' F000'        	call	_SwTimerStop
 23350                           
 23351                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 23352  039C' 0102               	movlb	2	; () banked
 23353  039E' 5100'              	movf	(_loRa+233)& (0+255),w,b
 23354  03A0' EC00' F000'        	call	_SwTimerReadValue
 23355  03A4' C031' F07A'        	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 23356  03A8' C032' F07B'        	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 23357  03AC' C033' F07C'        	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 23358  03B0' C034' F07D'        	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 23359                           
 23360                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 23361  03B4' 0100               	movlb	0	; () banked
 23362  03B6' 5100'              	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 23363  03B8' E108               	bnz	u18710
 23364  03BA' 0E1F               	movlw	31
 23365  03BC' 5D00'              	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 23366  03BE' 0EAC               	movlw	172
 23367  03C0' 5900'              	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 23368  03C2' 0EDF               	movlw	223
 23369  03C4' 5900'              	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 23370  03C6' A0D8               	btfss	status,0,c
 23371  03C8' D024               	goto	l1038
 23372  03CA'                    u18710:
 23373                           
 23374                           ; BSR set to: 0
 23375  03CA' C07A' F05D'        	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 23376  03CE' C07B' F05E'        	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 23377  03D2' C07C' F05F'        	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 23378  03D6' C07D' F060'        	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 23379  03DA' 0E0D               	movlw	13
 23380  03DC' D005               	goto	u18720
 23381  03DE'                    u18725:
 23382  03DE' 90D8               	bcf	status,0,c
 23383  03E0' 3300'              	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23384  03E2' 3300'              	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23385  03E4' 3300'              	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23386  03E6' 3300'              	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 23387  03E8'                    u18720:
 23388  03E8' 2EE8               	decfsz	wreg,f,c
 23389  03EA' D7F9               	goto	u18725
 23390  03EC' C05D' F03A'        	movff	??_LORAWAN_TxDone,___lmul@multiplier
 23391  03F0' C05E' F03B'        	movff	??_LORAWAN_TxDone+1,___lmul@multiplier+1
 23392  03F4' C05F' F03C'        	movff	??_LORAWAN_TxDone+2,___lmul@multiplier+2
 23393  03F8' C060' F03D'        	movff	??_LORAWAN_TxDone+3,___lmul@multiplier+3
 23394  03FC' 0E7D               	movlw	125
 23395  03FE' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 23396  0400' 0E00               	movlw	0
 23397  0402' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 23398  0404' 0E00               	movlw	0
 23399  0406' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 23400  0408' 0E00               	movlw	0
 23401  040A' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 23402  040C' EC00' F000'        	call	___lmul	;wreg free
 23403  0410' D01D               	goto	L16
 23404  0412'                    l1038:
 23405  0412' C07A' F03A'        	movff	LORAWAN_TxDone@ticks,___lmul@multiplier
 23406  0416' C07B' F03B'        	movff	LORAWAN_TxDone@ticks+1,___lmul@multiplier+1
 23407  041A' C07C' F03C'        	movff	LORAWAN_TxDone@ticks+2,___lmul@multiplier+2
 23408  041E' C07D' F03D'        	movff	LORAWAN_TxDone@ticks+3,___lmul@multiplier+3
 23409  0422' 0E7D               	movlw	125
 23410  0424' 0100               	movlb	0	; () banked
 23411  0426' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 23412  0428' 0E00               	movlw	0
 23413  042A' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 23414  042C' 0E00               	movlw	0
 23415  042E' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 23416  0430' 0E00               	movlw	0
 23417  0432' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 23418  0434' EC00' F000'        	call	___lmul	;wreg free
 23419  0438' 0E0D               	movlw	13
 23420  043A' D006               	goto	u18730
 23421  043C'                    u18735:
 23422  043C' 0100               	movlb	0	; () banked
 23423  043E' 90D8               	bcf	status,0,c
 23424  0440' 3300'              	rrcf	(?___lmul+3)& (0+255),f,b
 23425  0442' 3300'              	rrcf	(?___lmul+2)& (0+255),f,b
 23426  0444' 3300'              	rrcf	(?___lmul+1)& (0+255),f,b
 23427  0446' 3300'              	rrcf	?___lmul& (0+255),f,b
 23428  0448'                    u18730:
 23429  0448' 2EE8               	decfsz	wreg,f,c
 23430  044A' D7F8               	goto	u18735
 23431  044C'                    L16:
 23432  044C' C03A' F069'        	movff	?___lmul,_LORAWAN_TxDone$1670
 23433  0450' C03B' F06A'        	movff	?___lmul+1,_LORAWAN_TxDone$1670+1
 23434  0454' C03C' F06B'        	movff	?___lmul+2,_LORAWAN_TxDone$1670+2
 23435  0458' C03D' F06C'        	movff	?___lmul+3,_LORAWAN_TxDone$1670+3
 23436                           
 23437                           ; BSR set to: 0
 23438  045C' C069' F05D'        	movff	_LORAWAN_TxDone$1670,??_LORAWAN_TxDone
 23439  0460' C06A' F05E'        	movff	_LORAWAN_TxDone$1670+1,??_LORAWAN_TxDone+1
 23440  0464' C06B' F05F'        	movff	_LORAWAN_TxDone$1670+2,??_LORAWAN_TxDone+2
 23441  0468' C06C' F060'        	movff	_LORAWAN_TxDone$1670+3,??_LORAWAN_TxDone+3
 23442  046C' 0100               	movlb	0	; () banked
 23443  046E' 1F00'              	comf	??_LORAWAN_TxDone& (0+255),f,b
 23444  0470' 1F00'              	comf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23445  0472' 1F00'              	comf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23446  0474' 1F00'              	comf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23447  0476' 2B00'              	incf	??_LORAWAN_TxDone& (0+255),f,b
 23448  0478' 0E00               	movlw	0
 23449  047A' 2300'              	addwfc	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23450  047C' 2300'              	addwfc	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23451  047E' 2300'              	addwfc	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23452  0480' 0102               	movlb	2	; () banked
 23453  0482' 5100'              	movf	(_loRa+200)& (0+255),w,b
 23454  0484' 0100               	movlb	0	; () banked
 23455  0486' 2500'              	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23456  0488' 6F00'              	movwf	LORAWAN_TxDone@delta& (0+255),b
 23457  048A' 0102               	movlb	2	; () banked
 23458  048C' 5100'              	movf	(_loRa+201)& (0+255),w,b
 23459  048E' 0100               	movlb	0	; () banked
 23460  0490' 2100'              	addwfc	(??_LORAWAN_TxDone+1)& (0+255),w,b
 23461  0492' 6F00'              	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 23462  0494' 0102               	movlb	2	; () banked
 23463  0496' 5100'              	movf	(_loRa+202)& (0+255),w,b
 23464  0498' 0100               	movlb	0	; () banked
 23465  049A' 2100'              	addwfc	(??_LORAWAN_TxDone+2)& (0+255),w,b
 23466  049C' 6F00'              	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 23467  049E' 0102               	movlb	2	; () banked
 23468  04A0' 5100'              	movf	(_loRa+203)& (0+255),w,b
 23469  04A2' 0100               	movlb	0	; () banked
 23470  04A4' 2100'              	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 23471  04A6' 6F00'              	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 23472  04A8'                    l1036:
 23473                           
 23474                           ;lorawan_eu.c: 409: }
 23475                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 23476                           
 23477                           ; BSR set to: 0
 23478  04A8' 0E00               	movlw	0
 23479  04AA' 0100               	movlb	0	; () banked
 23480  04AC' 6F00'              	movwf	LORAWAN_TxDone@i& (0+255),b
 23481  04AE'                    l15530:
 23482                           
 23483                           ; BSR set to: 0
 23484  04AE' 0E0F               	movlw	15
 23485  04B0' 6500'              	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 23486  04B2' D001               	goto	l1041
 23487  04B4' D0D4               	goto	u18810
 23488  04B6'                    l1041:
 23489                           
 23490                           ; BSR set to: 0
 23491                           ;lorawan_eu.c: 412: {
 23492                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 23493                           
 23494                           ; BSR set to: 0
 23495  04B6' 5100'              	movf	LORAWAN_TxDone@i& (0+255),w,b
 23496  04B8' 0D0E               	mullw	14
 23497  04BA' 0E04               	movlw	4
 23498  04BC' 26F3               	addwf	prodl,f,c
 23499  04BE' 0E00               	movlw	0
 23500  04C0' 22F4               	addwfc	prodh,f,c
 23501  04C2' 0E00'              	movlw	low _Channels
 23502  04C4' 24F3               	addwf	prodl,w,c
 23503  04C6' 6ED9               	movwf	fsr2l,c
 23504  04C8' 0E00'              	movlw	high _Channels
 23505  04CA' 20F4               	addwfc	prodh,w,c
 23506  04CC' 6EDA               	movwf	fsr2h,c
 23507  04CE' 04DE               	decf	postinc2,w,c
 23508  04D0' A4D8               	btfss	status,2,c
 23509  04D2' D0C3               	goto	l1047
 23510                           
 23511                           ; BSR set to: 0
 23512  04D4' 5100'              	movf	LORAWAN_TxDone@i& (0+255),w,b
 23513  04D6' 0D0E               	mullw	14
 23514  04D8' 0E08               	movlw	8
 23515  04DA' 26F3               	addwf	prodl,f,c
 23516  04DC' 0E00               	movlw	0
 23517  04DE' 22F4               	addwfc	prodh,f,c
 23518  04E0' 0E00'              	movlw	low _Channels
 23519  04E2' 24F3               	addwf	prodl,w,c
 23520  04E4' 6ED9               	movwf	fsr2l,c
 23521  04E6' 0E00'              	movlw	high _Channels
 23522  04E8' 20F4               	addwfc	prodh,w,c
 23523  04EA' 6EDA               	movwf	fsr2h,c
 23524  04EC' 50DE               	movf	postinc2,w,c
 23525  04EE' 10DE               	iorwf	postinc2,w,c
 23526  04F0' 10DE               	iorwf	postinc2,w,c
 23527  04F2' 10DE               	iorwf	postinc2,w,c
 23528  04F4' B4D8               	btfsc	status,2,c
 23529  04F6' D0B1               	goto	l1047
 23530                           
 23531                           ; BSR set to: 0
 23532                           ;lorawan_eu.c: 414: {
 23533                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 23534  04F8' 5100'              	movf	LORAWAN_TxDone@i& (0+255),w,b
 23535  04FA' 0102               	movlb	2	; () banked
 23536  04FC' 1900'              	xorwf	(_loRa+218)& (0+255),w,b
 23537  04FE' B4D8               	btfsc	status,2,c
 23538  0500' D06D               	goto	l1046
 23539                           
 23540                           ; BSR set to: 2
 23541                           ;lorawan_eu.c: 416: {
 23542                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 23543  0502' 0100               	movlb	0	; () banked
 23544  0504' 5100'              	movf	LORAWAN_TxDone@i& (0+255),w,b
 23545  0506' 0D0E               	mullw	14
 23546  0508' 0E08               	movlw	8
 23547  050A' 26F3               	addwf	prodl,f,c
 23548  050C' 0E00               	movlw	0
 23549  050E' 22F4               	addwfc	prodh,f,c
 23550  0510' 0E00'              	movlw	low _Channels
 23551  0512' 24F3               	addwf	prodl,w,c
 23552  0514' 6ED9               	movwf	fsr2l,c
 23553  0516' 0E00'              	movlw	high _Channels
 23554  0518' 20F4               	addwfc	prodh,w,c
 23555  051A' 6EDA               	movwf	fsr2h,c
 23556  051C' 50DE               	movf	postinc2,w,c
 23557  051E' 5D00'              	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 23558  0520' 50DE               	movf	postinc2,w,c
 23559  0522' 5900'              	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 23560  0524' 50DE               	movf	postinc2,w,c
 23561  0526' 5900'              	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 23562  0528' 50DE               	movf	postinc2,w,c
 23563  052A' 5900'              	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 23564  052C' B0D8               	btfsc	status,0,c
 23565  052E' D046               	goto	l1045
 23566                           
 23567                           ; BSR set to: 0
 23568                           ;lorawan_eu.c: 418: {
 23569                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 23570  0530' 5100'              	movf	LORAWAN_TxDone@i& (0+255),w,b
 23571  0532' 0D0E               	mullw	14
 23572  0534' 0E08               	movlw	8
 23573  0536' 26F3               	addwf	prodl,f,c
 23574  0538' 0E00               	movlw	0
 23575  053A' 22F4               	addwfc	prodh,f,c
 23576  053C' 0E00'              	movlw	low _Channels
 23577  053E' 24F3               	addwf	prodl,w,c
 23578  0540' 6ED9               	movwf	fsr2l,c
 23579  0542' 0E00'              	movlw	high _Channels
 23580  0544' 20F4               	addwfc	prodh,w,c
 23581  0546' 6EDA               	movwf	fsr2h,c
 23582  0548' CFDE F05D'         	movff	postinc2,??_LORAWAN_TxDone
 23583  054C' CFDE F05E'         	movff	postinc2,??_LORAWAN_TxDone+1
 23584  0550' CFDE F05F'         	movff	postinc2,??_LORAWAN_TxDone+2
 23585  0554' CFDE F060'         	movff	postinc2,??_LORAWAN_TxDone+3
 23586  0558' C072' F061'        	movff	LORAWAN_TxDone@delta,??_LORAWAN_TxDone+4
 23587  055C' C073' F062'        	movff	LORAWAN_TxDone@delta+1,??_LORAWAN_TxDone+5
 23588  0560' C074' F063'        	movff	LORAWAN_TxDone@delta+2,??_LORAWAN_TxDone+6
 23589  0564' C075' F064'        	movff	LORAWAN_TxDone@delta+3,??_LORAWAN_TxDone+7
 23590  0568' 1F00'              	comf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23591  056A' 1F00'              	comf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 23592  056C' 1F00'              	comf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 23593  056E' 1F00'              	comf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23594  0570' 2B00'              	incf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23595  0572' 0E00               	movlw	0
 23596  0574' 2300'              	addwfc	(??_LORAWAN_TxDone+5)& (0+255),f,b
 23597  0576' 2300'              	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 23598  0578' 2300'              	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23599  057A' 5100'              	movf	??_LORAWAN_TxDone& (0+255),w,b
 23600  057C' 2500'              	addwf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 23601  057E' 6F00'              	movwf	(??_LORAWAN_TxDone+8)& (0+255),b
 23602  0580' 5100'              	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 23603  0582' 2100'              	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 23604  0584' 6F00'              	movwf	(??_LORAWAN_TxDone+9)& (0+255),b
 23605  0586' 5100'              	movf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 23606  0588' 2100'              	addwfc	(??_LORAWAN_TxDone+6)& (0+255),w,b
 23607  058A' 6F00'              	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 23608  058C' 5100'              	movf	(??_LORAWAN_TxDone+3)& (0+255),w,b
 23609  058E' 2100'              	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 23610  0590' 6F00'              	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 23611  0592' 5100'              	movf	LORAWAN_TxDone@i& (0+255),w,b
 23612  0594' 0D0E               	mullw	14
 23613  0596' 0E08               	movlw	8
 23614  0598' 26F3               	addwf	prodl,f,c
 23615  059A' 0E00               	movlw	0
 23616  059C' 22F4               	addwfc	prodh,f,c
 23617  059E' 0E00'              	movlw	low _Channels
 23618  05A0' 24F3               	addwf	prodl,w,c
 23619  05A2' 6ED9               	movwf	fsr2l,c
 23620  05A4' 0E00'              	movlw	high _Channels
 23621  05A6' 20F4               	addwfc	prodh,w,c
 23622  05A8' 6EDA               	movwf	fsr2h,c
 23623  05AA' C065' FFDE         	movff	??_LORAWAN_TxDone+8,postinc2
 23624  05AE' C066' FFDE         	movff	??_LORAWAN_TxDone+9,postinc2
 23625  05B2' C067' FFDE         	movff	??_LORAWAN_TxDone+10,postinc2
 23626  05B6' C068' FFDE         	movff	??_LORAWAN_TxDone+11,postinc2
 23627                           
 23628                           ;lorawan_eu.c: 420: }
 23629  05BA' D010               	goto	l1046
 23630  05BC'                    l1045:
 23631                           
 23632                           ; BSR set to: 0
 23633                           ;lorawan_eu.c: 421: else
 23634                           ;lorawan_eu.c: 422: {
 23635                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 23636                           
 23637                           ; BSR set to: 0
 23638  05BC' 5100'              	movf	LORAWAN_TxDone@i& (0+255),w,b
 23639  05BE' 0D0E               	mullw	14
 23640  05C0' 0E08               	movlw	8
 23641  05C2' 26F3               	addwf	prodl,f,c
 23642  05C4' 0E00               	movlw	0
 23643  05C6' 22F4               	addwfc	prodh,f,c
 23644  05C8' 0E00'              	movlw	low _Channels
 23645  05CA' 24F3               	addwf	prodl,w,c
 23646  05CC' 6ED9               	movwf	fsr2l,c
 23647  05CE' 0E00'              	movlw	high _Channels
 23648  05D0' 20F4               	addwfc	prodh,w,c
 23649  05D2' 6EDA               	movwf	fsr2h,c
 23650  05D4' 6ADE               	clrf	postinc2,c
 23651  05D6' 6ADE               	clrf	postinc2,c
 23652  05D8' 6ADE               	clrf	postinc2,c
 23653  05DA' 6ADD               	clrf	postdec2,c
 23654  05DC'                    l1046:
 23655                           
 23656                           ;lorawan_eu.c: 424: }
 23657                           ;lorawan_eu.c: 425: }
 23658                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 23659                           
 23660                           ; BSR set to: 0
 23661  05DC' 0100               	movlb	0	; () banked
 23662  05DE' 5100'              	movf	LORAWAN_TxDone@i& (0+255),w,b
 23663  05E0' 0D0E               	mullw	14
 23664  05E2' 0E08               	movlw	8
 23665  05E4' 26F3               	addwf	prodl,f,c
 23666  05E6' 0E00               	movlw	0
 23667  05E8' 22F4               	addwfc	prodh,f,c
 23668  05EA' 0E00'              	movlw	low _Channels
 23669  05EC' 24F3               	addwf	prodl,w,c
 23670  05EE' 6ED9               	movwf	fsr2l,c
 23671  05F0' 0E00'              	movlw	high _Channels
 23672  05F2' 20F4               	addwfc	prodh,w,c
 23673  05F4' 6EDA               	movwf	fsr2h,c
 23674  05F6' 50DE               	movf	postinc2,w,c
 23675  05F8' 5D00'              	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 23676  05FA' 50DE               	movf	postinc2,w,c
 23677  05FC' 5900'              	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 23678  05FE' 50DE               	movf	postinc2,w,c
 23679  0600' 5900'              	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 23680  0602' 50DE               	movf	postinc2,w,c
 23681  0604' 5900'              	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 23682  0606' A0D8               	btfss	status,0,c
 23683  0608' D028               	goto	l1047
 23684                           
 23685                           ; BSR set to: 0
 23686  060A' 5100'              	movf	LORAWAN_TxDone@i& (0+255),w,b
 23687  060C' 0D0E               	mullw	14
 23688  060E' 0E08               	movlw	8
 23689  0610' 26F3               	addwf	prodl,f,c
 23690  0612' 0E00               	movlw	0
 23691  0614' 22F4               	addwfc	prodh,f,c
 23692  0616' 0E00'              	movlw	low _Channels
 23693  0618' 24F3               	addwf	prodl,w,c
 23694  061A' 6ED9               	movwf	fsr2l,c
 23695  061C' 0E00'              	movlw	high _Channels
 23696  061E' 20F4               	addwfc	prodh,w,c
 23697  0620' 6EDA               	movwf	fsr2h,c
 23698  0622' 50DE               	movf	postinc2,w,c
 23699  0624' 10DE               	iorwf	postinc2,w,c
 23700  0626' 10DE               	iorwf	postinc2,w,c
 23701  0628' 10DE               	iorwf	postinc2,w,c
 23702  062A' B4D8               	btfsc	status,2,c
 23703  062C' D016               	goto	l1047
 23704                           
 23705                           ; BSR set to: 0
 23706                           ;lorawan_eu.c: 427: {
 23707                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 23708  062E' 5100'              	movf	LORAWAN_TxDone@i& (0+255),w,b
 23709  0630' 0D0E               	mullw	14
 23710  0632' 0E08               	movlw	8
 23711  0634' 26F3               	addwf	prodl,f,c
 23712  0636' 0E00               	movlw	0
 23713  0638' 22F4               	addwfc	prodh,f,c
 23714  063A' 0E00'              	movlw	low _Channels
 23715  063C' 24F3               	addwf	prodl,w,c
 23716  063E' 6ED9               	movwf	fsr2l,c
 23717  0640' 0E00'              	movlw	high _Channels
 23718  0642' 20F4               	addwfc	prodh,w,c
 23719  0644' 6EDA               	movwf	fsr2h,c
 23720  0646' CFDE F07E'         	movff	postinc2,LORAWAN_TxDone@minim
 23721  064A' CFDE F07F'         	movff	postinc2,LORAWAN_TxDone@minim+1
 23722  064E' CFDE F080'         	movff	postinc2,LORAWAN_TxDone@minim+2
 23723  0652' CFDE F081'         	movff	postinc2,LORAWAN_TxDone@minim+3
 23724                           
 23725                           ; BSR set to: 0
 23726                           ;lorawan_eu.c: 429: found = 1;
 23727  0656' 0E01               	movlw	1
 23728  0658' 6F00'              	movwf	LORAWAN_TxDone@found& (0+255),b
 23729  065A'                    l1047:
 23730                           
 23731                           ; BSR set to: 0
 23732                           
 23733                           ; BSR set to: 0
 23734                           
 23735                           ; BSR set to: 0
 23736  065A' 2B00'              	incf	LORAWAN_TxDone@i& (0+255),f,b
 23737  065C' D728               	goto	l15530
 23738  065E'                    u18810:
 23739                           
 23740                           ; BSR set to: 0
 23741                           ;lorawan_eu.c: 430: }
 23742                           ;lorawan_eu.c: 431: }
 23743                           ;lorawan_eu.c: 432: }
 23744                           ;lorawan_eu.c: 433: if (found == 1)
 23745                           
 23746                           ; BSR set to: 0
 23747  065E' 0500'              	decf	LORAWAN_TxDone@found& (0+255),w,b
 23748  0660' A4D8               	btfss	status,2,c
 23749  0662' D067               	goto	l1048
 23750                           
 23751                           ; BSR set to: 0
 23752                           ;lorawan_eu.c: 434: {
 23753                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 23754  0664' C07E' F0C8'        	movff	LORAWAN_TxDone@minim,_loRa+200
 23755  0668' C07F' F0C9'        	movff	LORAWAN_TxDone@minim+1,_loRa+201
 23756  066C' C080' F0CA'        	movff	LORAWAN_TxDone@minim+2,_loRa+202
 23757  0670' C081' F0CB'        	movff	LORAWAN_TxDone@minim+3,_loRa+203
 23758                           
 23759                           ; BSR set to: 0
 23760                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 23761  0674' 5100'              	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 23762  0676' E107               	bnz	u18830
 23763  0678' 2900'              	incf	LORAWAN_TxDone@minim& (0+255),w,b
 23764  067A' 0EFF               	movlw	255
 23765  067C' 5900'              	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 23766  067E' 0E0F               	movlw	15
 23767  0680' 5900'              	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 23768  0682' A0D8               	btfss	status,0,c
 23769  0684' D01C               	goto	l1050
 23770  0686'                    u18830:
 23771                           
 23772                           ; BSR set to: 0
 23773  0686' C07E' F000'        	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 23774  068A' C07F' F001'        	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 23775  068E' C080' F002'        	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 23776  0692' C081' F003'        	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 23777  0696' 0E7D               	movlw	125
 23778  0698' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 23779  069A' 0E00               	movlw	0
 23780  069C' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 23781  069E' 0E00               	movlw	0
 23782  06A0' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 23783  06A2' 0E00               	movlw	0
 23784  06A4' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 23785  06A6' EC00' F000'        	call	___lldiv	;wreg free
 23786  06AA' 0E0C               	movlw	12
 23787  06AC'                    u18845:
 23788  06AC' 90D8               	bcf	status,0,c
 23789  06AE' 0100               	movlb	0	; () banked
 23790  06B0' 3700'              	rlcf	?___lldiv& (0+255),f,b
 23791  06B2' 3700'              	rlcf	(?___lldiv+1)& (0+255),f,b
 23792  06B4' 3700'              	rlcf	(?___lldiv+2)& (0+255),f,b
 23793  06B6' 3700'              	rlcf	(?___lldiv+3)& (0+255),f,b
 23794  06B8' 2EE8               	decfsz	wreg,f,c
 23795  06BA' D7F8               	goto	u18845
 23796  06BC' D022               	goto	L17
 23797  06BE'                    l1050:
 23798                           
 23799                           ; BSR set to: 0
 23800                           
 23801                           ; BSR set to: 0
 23802  06BE' C07E' F05D'        	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 23803  06C2' C07F' F05E'        	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 23804  06C6' C080' F05F'        	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 23805  06CA' C081' F060'        	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 23806  06CE' 0E0C               	movlw	12
 23807  06D0'                    u18855:
 23808  06D0' 90D8               	bcf	status,0,c
 23809  06D2' 3700'              	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 23810  06D4' 3700'              	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23811  06D6' 3700'              	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23812  06D8' 3700'              	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23813  06DA' 2EE8               	decfsz	wreg,f,c
 23814  06DC' D7F9               	goto	u18855
 23815  06DE' C05D' F000'        	movff	??_LORAWAN_TxDone,___lldiv@dividend
 23816  06E2' C05E' F001'        	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 23817  06E6' C05F' F002'        	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 23818  06EA' C060' F003'        	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 23819  06EE' 0E7D               	movlw	125
 23820  06F0' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 23821  06F2' 0E00               	movlw	0
 23822  06F4' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 23823  06F6' 0E00               	movlw	0
 23824  06F8' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 23825  06FA' 0E00               	movlw	0
 23826  06FC' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 23827  06FE' EC00' F000'        	call	___lldiv	;wreg free
 23828  0702'                    L17:
 23829  0702' C000' F06D'        	movff	?___lldiv,_LORAWAN_TxDone$1671
 23830  0706' C001' F06E'        	movff	?___lldiv+1,_LORAWAN_TxDone$1671+1
 23831  070A' C002' F06F'        	movff	?___lldiv+2,_LORAWAN_TxDone$1671+2
 23832  070E' C003' F070'        	movff	?___lldiv+3,_LORAWAN_TxDone$1671+3
 23833  0712' C06D' F00D'        	movff	_LORAWAN_TxDone$1671,SwTimerSetTimeout@timeout
 23834  0716' C06E' F00E'        	movff	_LORAWAN_TxDone$1671+1,SwTimerSetTimeout@timeout+1
 23835  071A' C06F' F00F'        	movff	_LORAWAN_TxDone$1671+2,SwTimerSetTimeout@timeout+2
 23836  071E' C070' F010'        	movff	_LORAWAN_TxDone$1671+3,SwTimerSetTimeout@timeout+3
 23837  0722' 0102               	movlb	2	; () banked
 23838  0724' 5100'              	movf	(_loRa+233)& (0+255),w,b
 23839  0726' EC00' F000'        	call	_SwTimerSetTimeout
 23840                           
 23841                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 23842  072A' 0102               	movlb	2	; () banked
 23843  072C' 5100'              	movf	(_loRa+233)& (0+255),w,b
 23844  072E' EC00' F000'        	call	_SwTimerStart
 23845  0732'                    l1048:
 23846                           
 23847                           ;lorawan_eu.c: 438: }
 23848                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 23849  0732' 0E02               	movlw	2
 23850  0734' 0102               	movlb	2	; () banked
 23851  0736' 1900'              	xorwf	(_loRa+18)& (0+255),w,b
 23852  0738' A4D8               	btfss	status,2,c
 23853  073A' 0012               	return	
 23854                           
 23855                           ; BSR set to: 2
 23856                           ;lorawan_eu.c: 440: {
 23857                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 23858  073C' 5100'              	movf	(_loRa+2)& (0+255),w,b
 23859  073E' 0BF0               	andlw	-16
 23860  0740' 0908               	iorlw	8
 23861  0742' 6F00'              	movwf	(_loRa+2)& (0+255),b
 23862                           
 23863                           ; BSR set to: 2
 23864                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 23865  0744' EC00' F000'        	call	_LORAWAN_EnterContinuousReceive	;wreg free
 23866                           
 23867                           ;lorawan_eu.c: 443: }
 23868                           ;lorawan_eu.c: 444: }
 23869  0748' 0012               	return	
 23870  074A'                    l1032:
 23871                           
 23872                           ;lorawan_eu.c: 445: else
 23873                           ;lorawan_eu.c: 446: {
 23874                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 23875  074A' EC00' F000'        	call	_RADIO_GetStatus	;wreg free
 23876  074E' 0100               	movlb	0	; () banked
 23877  0750' 6F00'              	movwf	??_LORAWAN_TxDone& (0+255),b
 23878  0752' A900'              	btfss	??_LORAWAN_TxDone& (0+255),4,b
 23879  0754' D014               	goto	l1055
 23880                           
 23881                           ; BSR set to: 0
 23882                           ;lorawan_eu.c: 448: {
 23883                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 23884  0756' 0E00               	movlw	0
 23885  0758' 6F00'              	movwf	RxData@pData& (0+255),b
 23886  075A' 0E00               	movlw	0
 23887  075C' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
 23888  075E' 0E00               	movlw	0
 23889  0760' 6F00'              	movwf	RxData@dataLength& (0+255),b
 23890  0762' 0E02               	movlw	2
 23891  0764' 6F00'              	movwf	RxData@status& (0+255),b
 23892  0766' D801               	call	u18888
 23893  0768' 0012               	return	
 23894  076A'                    u18888:
 23895  076A' 0005               	push	
 23896  076C' 6EFA               	movwf	pclath,c
 23897  076E' 0101               	movlb	1	; () banked
 23898  0770' 5100'              	movf	_rxPayload& (0+255),w,b
 23899  0772' 6EFD               	movwf	tosl,c
 23900  0774' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
 23901  0776' 6EFE               	movwf	tosh,c
 23902  0778' 6AFF               	clrf	tosu,c
 23903  077A' 50FA               	movf	pclath,w,c
 23904  077C' 0012               	return		;indir
 23905  077E'                    l1055:
 23906                           
 23907                           ;lorawan_eu.c: 452: else
 23908                           ;lorawan_eu.c: 453: {
 23909                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 23910  077E' 0101               	movlb	1	; () banked
 23911  0780' 5100'              	movf	_rxPayload& (0+255),w,b
 23912  0782' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
 23913  0784' B4D8               	btfsc	status,2,c
 23914  0786' 0012               	return	
 23915                           
 23916                           ; BSR set to: 1
 23917                           ;lorawan_eu.c: 456: {
 23918                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 23919  0788' 0E00               	movlw	0
 23920  078A' 0100               	movlb	0	; () banked
 23921  078C' 6F00'              	movwf	RxData@pData& (0+255),b
 23922  078E' 0E00               	movlw	0
 23923  0790' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
 23924  0792' 0E00               	movlw	0
 23925  0794' 6F00'              	movwf	RxData@dataLength& (0+255),b
 23926  0796' 0E03               	movlw	3
 23927  0798' 6F00'              	movwf	RxData@status& (0+255),b
 23928  079A' D801               	call	u18908
 23929  079C' 0012               	return	
 23930  079E'                    u18908:
 23931  079E' 0005               	push	
 23932  07A0' 6EFA               	movwf	pclath,c
 23933  07A2' 0101               	movlb	1	; () banked
 23934  07A4' 5100'              	movf	_rxPayload& (0+255),w,b
 23935  07A6' 6EFD               	movwf	tosl,c
 23936  07A8' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
 23937  07AA' 6EFE               	movwf	tosh,c
 23938  07AC' 6AFF               	clrf	tosu,c
 23939  07AE' 50FA               	movf	pclath,w,c
 23940  07B0' 0012               	return		;indir
 23941  07B2'                    __end_of_LORAWAN_TxDone:
 23942                           	opt stack 0
 23943                           tosu	equ	0xFFF
 23944                           tosh	equ	0xFFE
 23945                           tosl	equ	0xFFD
 23946                           pclath	equ	0xFFA
 23947                           tblptru	equ	0xFF8
 23948                           tblptrh	equ	0xFF7
 23949                           tblptrl	equ	0xFF6
 23950                           tablat	equ	0xFF5
 23951                           prodh	equ	0xFF4
 23952                           prodl	equ	0xFF3
 23953                           intcon	equ	0xFF2
 23954                           intcon2	equ	0xFF1
 23955                           intcon3	equ	0xFF0
 23956                           indf0	equ	0xFEF
 23957                           postinc0	equ	0xFEE
 23958                           fsr0h	equ	0xFEA
 23959                           fsr0l	equ	0xFE9
 23960                           wreg	equ	0xFE8
 23961                           postinc1	equ	0xFE6
 23962                           postdec1	equ	0xFE5
 23963                           plusw1	equ	0xFE3
 23964                           fsr1h	equ	0xFE2
 23965                           fsr1l	equ	0xFE1
 23966                           indf2	equ	0xFDF
 23967                           postinc2	equ	0xFDE
 23968                           postdec2	equ	0xFDD
 23969                           plusw2	equ	0xFDB
 23970                           fsr2h	equ	0xFDA
 23971                           fsr2l	equ	0xFD9
 23972                           status	equ	0xFD8
 23973                           
 23974 ;; *************** function _SwTimerReadValue *****************
 23975 ;; Defined at:
 23976 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 23977 ;; Parameters:    Size  Location     Type
 23978 ;;  timerId         1    wreg     unsigned char 
 23979 ;; Auto vars:     Size  Location     Type
 23980 ;;  timerId         1   57[BANK0 ] unsigned char 
 23981 ;;  ticksCount      4   53[BANK0 ] unsigned long 
 23982 ;; Return value:  Size  Location     Type
 23983 ;;                  4   49[BANK0 ] unsigned long 
 23984 ;; Registers used:
 23985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23986 ;; Tracked objects:
 23987 ;;		On entry : 0/0
 23988 ;;		On exit  : 0/0
 23989 ;;		Unchanged: 0/0
 23990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23991 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23992 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23994 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23995 ;;Total ram usage:        9 bytes
 23996 ;; Hardware stack levels used:    1
 23997 ;; Hardware stack levels required when called:   10
 23998 ;; This function calls:
 23999 ;;		_SwTimersInterrupt
 24000 ;; This function is called by:
 24001 ;;		_RADIO_TxDone
 24002 ;;		_RADIO_FSKPacketSent
 24003 ;;		_LORAWAN_TxDone
 24004 ;;		_LORAWAN_Pause
 24005 ;; This function uses a non-reentrant model
 24006 ;;
 24007                           
 24008                           	psect	text105
 24009  0000'                    __ptext105:
 24010                           	opt stack 0
 24011  0000'                    _SwTimerReadValue:
 24012                           	opt stack 16
 24013                           
 24014                           ;incstack = 0
 24015                           ;SwTimerReadValue@timerId stored from wreg
 24016  0000' 0100               	movlb	0	; () banked
 24017  0002' 6F00'              	movwf	SwTimerReadValue@timerId& (0+255),b
 24018                           
 24019                           ;sw_timer.c: 195: uint32_t ticksCount;
 24020                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 24021  0004' 9EF2               	bcf	intcon,7,c	;volatile
 24022                           
 24023                           ;sw_timer.c: 200: SwTimersInterrupt();
 24024  0006' EC00' F000'        	call	_SwTimersInterrupt	;wreg free
 24025                           
 24026                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 24027  000A' 0100               	movlb	0	; () banked
 24028  000C' 5100'              	movf	SwTimerReadValue@timerId& (0+255),w,b
 24029  000E' 0D08               	mullw	8
 24030  0010' 0E00'              	movlw	low _swTimers
 24031  0012' 24F3               	addwf	prodl,w,c
 24032  0014' 6ED9               	movwf	fsr2l,c
 24033  0016' 0E00'              	movlw	high _swTimers
 24034  0018' 20F4               	addwfc	prodh,w,c
 24035  001A' 6EDA               	movwf	fsr2h,c
 24036  001C' CFDE F035'         	movff	postinc2,SwTimerReadValue@ticksCount
 24037  0020' CFDE F036'         	movff	postinc2,SwTimerReadValue@ticksCount+1
 24038  0024' CFDE F037'         	movff	postinc2,SwTimerReadValue@ticksCount+2
 24039  0028' CFDE F038'         	movff	postinc2,SwTimerReadValue@ticksCount+3
 24040                           
 24041                           ; BSR set to: 0
 24042                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 24043  002C' 8EF2               	bsf	intcon,7,c	;volatile
 24044                           
 24045                           ; BSR set to: 0
 24046                           ;sw_timer.c: 204: return ticksCount;
 24047  002E' C035' F031'        	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 24048  0032' C036' F032'        	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 24049  0036' C037' F033'        	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 24050  003A' C038' F034'        	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 24051  003E' 0012               	return	
 24052  0040'                    __end_of_SwTimerReadValue:
 24053                           	opt stack 0
 24054                           tosu	equ	0xFFF
 24055                           tosh	equ	0xFFE
 24056                           tosl	equ	0xFFD
 24057                           pclath	equ	0xFFA
 24058                           tblptru	equ	0xFF8
 24059                           tblptrh	equ	0xFF7
 24060                           tblptrl	equ	0xFF6
 24061                           tablat	equ	0xFF5
 24062                           prodh	equ	0xFF4
 24063                           prodl	equ	0xFF3
 24064                           intcon	equ	0xFF2
 24065                           intcon2	equ	0xFF1
 24066                           intcon3	equ	0xFF0
 24067                           indf0	equ	0xFEF
 24068                           postinc0	equ	0xFEE
 24069                           fsr0h	equ	0xFEA
 24070                           fsr0l	equ	0xFE9
 24071                           wreg	equ	0xFE8
 24072                           postinc1	equ	0xFE6
 24073                           postdec1	equ	0xFE5
 24074                           plusw1	equ	0xFE3
 24075                           fsr1h	equ	0xFE2
 24076                           fsr1l	equ	0xFE1
 24077                           indf2	equ	0xFDF
 24078                           postinc2	equ	0xFDE
 24079                           postdec2	equ	0xFDD
 24080                           plusw2	equ	0xFDB
 24081                           fsr2h	equ	0xFDA
 24082                           fsr2l	equ	0xFD9
 24083                           status	equ	0xFD8
 24084                           
 24085 ;; *************** function _SwTimerIsRunning *****************
 24086 ;; Defined at:
 24087 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 24088 ;; Parameters:    Size  Location     Type
 24089 ;;  timerId         1    wreg     unsigned char 
 24090 ;; Auto vars:     Size  Location     Type
 24091 ;;  timerId         1    0[BANK0 ] unsigned char 
 24092 ;;  isRunning       1    1[BANK0 ] unsigned char 
 24093 ;; Return value:  Size  Location     Type
 24094 ;;                  1    wreg      unsigned char 
 24095 ;; Registers used:
 24096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24097 ;; Tracked objects:
 24098 ;;		On entry : 0/0
 24099 ;;		On exit  : 0/0
 24100 ;;		Unchanged: 0/0
 24101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24103 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24105 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24106 ;;Total ram usage:        2 bytes
 24107 ;; Hardware stack levels used:    1
 24108 ;; Hardware stack levels required when called:    7
 24109 ;; This function calls:
 24110 ;;		Nothing
 24111 ;; This function is called by:
 24112 ;;		_LORAWAN_TxDone
 24113 ;; This function uses a non-reentrant model
 24114 ;;
 24115                           
 24116                           	psect	text106
 24117  0000'                    __ptext106:
 24118                           	opt stack 0
 24119  0000'                    _SwTimerIsRunning:
 24120                           	opt stack 19
 24121                           
 24122                           ; BSR set to: 0
 24123                           ;incstack = 0
 24124                           ;SwTimerIsRunning@timerId stored from wreg
 24125  0000' 0100               	movlb	0	; () banked
 24126  0002' 6F00'              	movwf	SwTimerIsRunning@timerId& (0+255),b
 24127                           
 24128                           ;sw_timer.c: 209: uint8_t isRunning;
 24129                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 24130  0004' 9EF2               	bcf	intcon,7,c	;volatile
 24131                           
 24132                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 24133  0006' 0100               	movlb	0	; () banked
 24134  0008' 5100'              	movf	SwTimerIsRunning@timerId& (0+255),w,b
 24135  000A' 0D08               	mullw	8
 24136  000C' 0E04               	movlw	4
 24137  000E' 26F3               	addwf	prodl,f,c
 24138  0010' 0E00               	movlw	0
 24139  0012' 22F4               	addwfc	prodh,f,c
 24140  0014' 0E00'              	movlw	low _swTimers
 24141  0016' 24F3               	addwf	prodl,w,c
 24142  0018' 6ED9               	movwf	fsr2l,c
 24143  001A' 0E00'              	movlw	high _swTimers
 24144  001C' 20F4               	addwfc	prodh,w,c
 24145  001E' 6EDA               	movwf	fsr2h,c
 24146  0020' 50DF               	movf	indf2,w,c
 24147  0022' 6F00'              	movwf	SwTimerIsRunning@isRunning& (0+255),b
 24148                           
 24149                           ; BSR set to: 0
 24150                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 24151  0024' 8EF2               	bsf	intcon,7,c	;volatile
 24152                           
 24153                           ; BSR set to: 0
 24154                           ;sw_timer.c: 215: return isRunning;
 24155  0026' 5100'              	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 24156  0028' 0012               	return	
 24157  002A'                    __end_of_SwTimerIsRunning:
 24158                           	opt stack 0
 24159                           tosu	equ	0xFFF
 24160                           tosh	equ	0xFFE
 24161                           tosl	equ	0xFFD
 24162                           pclath	equ	0xFFA
 24163                           tblptru	equ	0xFF8
 24164                           tblptrh	equ	0xFF7
 24165                           tblptrl	equ	0xFF6
 24166                           tablat	equ	0xFF5
 24167                           prodh	equ	0xFF4
 24168                           prodl	equ	0xFF3
 24169                           intcon	equ	0xFF2
 24170                           intcon2	equ	0xFF1
 24171                           intcon3	equ	0xFF0
 24172                           indf0	equ	0xFEF
 24173                           postinc0	equ	0xFEE
 24174                           fsr0h	equ	0xFEA
 24175                           fsr0l	equ	0xFE9
 24176                           wreg	equ	0xFE8
 24177                           postinc1	equ	0xFE6
 24178                           postdec1	equ	0xFE5
 24179                           plusw1	equ	0xFE3
 24180                           fsr1h	equ	0xFE2
 24181                           fsr1l	equ	0xFE1
 24182                           indf2	equ	0xFDF
 24183                           postinc2	equ	0xFDE
 24184                           postdec2	equ	0xFDD
 24185                           plusw2	equ	0xFDB
 24186                           fsr2h	equ	0xFDA
 24187                           fsr2l	equ	0xFD9
 24188                           status	equ	0xFD8
 24189                           
 24190 ;; *************** function _RADIO_GetStatus *****************
 24191 ;; Defined at:
 24192 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24193 ;; Parameters:    Size  Location     Type
 24194 ;;		None
 24195 ;; Auto vars:     Size  Location     Type
 24196 ;;		None
 24197 ;; Return value:  Size  Location     Type
 24198 ;;                  1    wreg      unsigned char 
 24199 ;; Registers used:
 24200 ;;		wreg, status,2
 24201 ;; Tracked objects:
 24202 ;;		On entry : 0/0
 24203 ;;		On exit  : 0/0
 24204 ;;		Unchanged: 0/0
 24205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24210 ;;Total ram usage:        0 bytes
 24211 ;; Hardware stack levels used:    1
 24212 ;; Hardware stack levels required when called:    7
 24213 ;; This function calls:
 24214 ;;		Nothing
 24215 ;; This function is called by:
 24216 ;;		_LORAWAN_TxDone
 24217 ;;		_LORAWAN_ReceiveWindow2Callback
 24218 ;;		_LORAWAN_RxDone
 24219 ;; This function uses a non-reentrant model
 24220 ;;
 24221                           
 24222                           	psect	text107
 24223  0000'                    __ptext107:
 24224                           	opt stack 0
 24225  0000'                    _RADIO_GetStatus:
 24226                           	opt stack 19
 24227                           
 24228                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 24229                           
 24230                           ; BSR set to: 0
 24231                           ;incstack = 0
 24232  0000' 0101               	movlb	1	; () banked
 24233  0002' 5100'              	movf	(_RadioConfiguration+35)& (0+255),w,b
 24234  0004' 0012               	return	
 24235  0006'                    __end_of_RADIO_GetStatus:
 24236                           	opt stack 0
 24237                           tosu	equ	0xFFF
 24238                           tosh	equ	0xFFE
 24239                           tosl	equ	0xFFD
 24240                           pclath	equ	0xFFA
 24241                           tblptru	equ	0xFF8
 24242                           tblptrh	equ	0xFF7
 24243                           tblptrl	equ	0xFF6
 24244                           tablat	equ	0xFF5
 24245                           prodh	equ	0xFF4
 24246                           prodl	equ	0xFF3
 24247                           intcon	equ	0xFF2
 24248                           intcon2	equ	0xFF1
 24249                           intcon3	equ	0xFF0
 24250                           indf0	equ	0xFEF
 24251                           postinc0	equ	0xFEE
 24252                           fsr0h	equ	0xFEA
 24253                           fsr0l	equ	0xFE9
 24254                           wreg	equ	0xFE8
 24255                           postinc1	equ	0xFE6
 24256                           postdec1	equ	0xFE5
 24257                           plusw1	equ	0xFE3
 24258                           fsr1h	equ	0xFE2
 24259                           fsr1l	equ	0xFE1
 24260                           indf2	equ	0xFDF
 24261                           postinc2	equ	0xFDE
 24262                           postdec2	equ	0xFDD
 24263                           plusw2	equ	0xFDB
 24264                           fsr2h	equ	0xFDA
 24265                           fsr2l	equ	0xFD9
 24266                           status	equ	0xFD8
 24267                           
 24268 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 24269 ;; Defined at:
 24270 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24271 ;; Parameters:    Size  Location     Type
 24272 ;;		None
 24273 ;; Auto vars:     Size  Location     Type
 24274 ;;		None
 24275 ;; Return value:  Size  Location     Type
 24276 ;;                  1    wreg      void 
 24277 ;; Registers used:
 24278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 24279 ;; Tracked objects:
 24280 ;;		On entry : 0/0
 24281 ;;		On exit  : 0/0
 24282 ;;		Unchanged: 0/0
 24283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24288 ;;Total ram usage:        0 bytes
 24289 ;; Hardware stack levels used:    1
 24290 ;; Hardware stack levels required when called:   13
 24291 ;; This function calls:
 24292 ;;		_ConfigureRadioRx
 24293 ;;		_RADIO_ReceiveStart
 24294 ;;		_RADIO_ReceiveStop
 24295 ;;		_RADIO_ReleaseData
 24296 ;;		_ResetParametersForConfirmedTransmission
 24297 ;;		_ResetParametersForUnconfirmedTransmission
 24298 ;;		_RxData
 24299 ;; This function is called by:
 24300 ;;		_LORAWAN_TxDone
 24301 ;;		_LORAWAN_ReceiveWindow2Callback
 24302 ;;		_LORAWAN_RxDone
 24303 ;;		_SetReceptionNotOkState
 24304 ;; This function uses a non-reentrant model
 24305 ;;
 24306                           
 24307                           	psect	text108
 24308  0000'                    __ptext108:
 24309                           	opt stack 0
 24310  0000'                    _LORAWAN_EnterContinuousReceive:
 24311                           	opt stack 13
 24312                           
 24313                           ;lorawan.c: 917: RADIO_ReceiveStop();
 24314                           
 24315                           ; BSR set to: 1
 24316                           ;incstack = 0
 24317  0000' EC00' F000'        	call	_RADIO_ReceiveStop	;wreg free
 24318                           
 24319                           ;lorawan.c: 918: RADIO_ReleaseData();
 24320  0004' EC00' F000'        	call	_RADIO_ReleaseData	;wreg free
 24321                           
 24322                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 24323  0008' C018' F013'        	movff	_loRa+24,ConfigureRadioRx@freq
 24324  000C' C019' F014'        	movff	_loRa+25,ConfigureRadioRx@freq+1
 24325  0010' C01A' F015'        	movff	_loRa+26,ConfigureRadioRx@freq+2
 24326  0014' C01B' F016'        	movff	_loRa+27,ConfigureRadioRx@freq+3
 24327  0018' 0102               	movlb	2	; () banked
 24328  001A' 5100'              	movf	(_loRa+28)& (0+255),w,b
 24329  001C' EC00' F000'        	call	_ConfigureRadioRx
 24330                           
 24331                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 24332  0020' 0E00               	movlw	0
 24333  0022' 0100               	movlb	0	; () banked
 24334  0024' 6F00'              	movwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 24335  0026' 0E00               	movlw	0
 24336  0028' 6F00'              	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 24337  002A' EC00' F000'        	call	_RADIO_ReceiveStart	;wreg free
 24338  002E' 0100               	movlb	0	; () banked
 24339  0030' 5100'              	movf	?_RADIO_ReceiveStart& (0+255),w,b
 24340  0032' 1100'              	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 24341  0034' B4D8               	btfsc	status,2,c
 24342  0036' 0012               	return	
 24343                           
 24344                           ; BSR set to: 0
 24345                           ;lorawan.c: 923: {
 24346                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 24347  0038' EC00' F000'        	call	_ResetParametersForConfirmedTransmission	;wreg free
 24348                           
 24349                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 24350  003C' EC00' F000'        	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 24351                           
 24352                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 24353  0040' 0102               	movlb	2	; () banked
 24354  0042' 9100'              	bcf	(_loRa+2)& (0+255),0,b
 24355  0044' 9300'              	bcf	(_loRa+2)& (0+255),1,b
 24356  0046' 9500'              	bcf	(_loRa+2)& (0+255),2,b
 24357  0048' 9700'              	bcf	(_loRa+2)& (0+255),3,b
 24358                           
 24359                           ; BSR set to: 2
 24360                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 24361  004A' 0101               	movlb	1	; () banked
 24362  004C' 5100'              	movf	_rxPayload& (0+255),w,b
 24363  004E' 1100'              	iorwf	(_rxPayload+1)& (0+255),w,b
 24364  0050' B4D8               	btfsc	status,2,c
 24365  0052' 0012               	return	
 24366                           
 24367                           ; BSR set to: 1
 24368                           ;lorawan.c: 928: {
 24369                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 24370  0054' 0E00               	movlw	0
 24371  0056' 0100               	movlb	0	; () banked
 24372  0058' 6F00'              	movwf	RxData@pData& (0+255),b
 24373  005A' 0E00               	movlw	0
 24374  005C' 6F00'              	movwf	(RxData@pData+1)& (0+255),b
 24375  005E' 0E00               	movlw	0
 24376  0060' 6F00'              	movwf	RxData@dataLength& (0+255),b
 24377  0062' 0E00               	movlw	0
 24378  0064' 6F00'              	movwf	RxData@status& (0+255),b
 24379  0066' D801               	call	u16538
 24380  0068' 0012               	return	
 24381  006A'                    u16538:
 24382  006A' 0005               	push	
 24383  006C' 6EFA               	movwf	pclath,c
 24384  006E' 0101               	movlb	1	; () banked
 24385  0070' 5100'              	movf	_rxPayload& (0+255),w,b
 24386  0072' 6EFD               	movwf	tosl,c
 24387  0074' 5100'              	movf	(_rxPayload+1)& (0+255),w,b
 24388  0076' 6EFE               	movwf	tosh,c
 24389  0078' 6AFF               	clrf	tosu,c
 24390  007A' 50FA               	movf	pclath,w,c
 24391  007C' 0012               	return		;indir
 24392  007E'                    __end_of_LORAWAN_EnterContinuousReceive:
 24393                           	opt stack 0
 24394                           tosu	equ	0xFFF
 24395                           tosh	equ	0xFFE
 24396                           tosl	equ	0xFFD
 24397                           pclath	equ	0xFFA
 24398                           tblptru	equ	0xFF8
 24399                           tblptrh	equ	0xFF7
 24400                           tblptrl	equ	0xFF6
 24401                           tablat	equ	0xFF5
 24402                           prodh	equ	0xFF4
 24403                           prodl	equ	0xFF3
 24404                           intcon	equ	0xFF2
 24405                           intcon2	equ	0xFF1
 24406                           intcon3	equ	0xFF0
 24407                           indf0	equ	0xFEF
 24408                           postinc0	equ	0xFEE
 24409                           fsr0h	equ	0xFEA
 24410                           fsr0l	equ	0xFE9
 24411                           wreg	equ	0xFE8
 24412                           postinc1	equ	0xFE6
 24413                           postdec1	equ	0xFE5
 24414                           plusw1	equ	0xFE3
 24415                           fsr1h	equ	0xFE2
 24416                           fsr1l	equ	0xFE1
 24417                           indf2	equ	0xFDF
 24418                           postinc2	equ	0xFDE
 24419                           postdec2	equ	0xFDD
 24420                           plusw2	equ	0xFDB
 24421                           fsr2h	equ	0xFDA
 24422                           fsr2l	equ	0xFD9
 24423                           status	equ	0xFD8
 24424                           
 24425 ;; *************** function _RxData *****************
 24426 ;; Defined at:
 24427 ;;		line 55 in file "main.c"
 24428 ;; Parameters:    Size  Location     Type
 24429 ;;  pData           2    0[BANK0 ] PTR unsigned char 
 24430 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 24431 ;;  dataLength      1    2[BANK0 ] unsigned char 
 24432 ;;  status          1    3[BANK0 ] enum E7398
 24433 ;; Auto vars:     Size  Location     Type
 24434 ;;		None
 24435 ;; Return value:  Size  Location     Type
 24436 ;;                  1    wreg      void 
 24437 ;; Registers used:
 24438 ;;		None
 24439 ;; Tracked objects:
 24440 ;;		On entry : 0/0
 24441 ;;		On exit  : 0/0
 24442 ;;		Unchanged: 0/0
 24443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24444 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24447 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24448 ;;Total ram usage:        4 bytes
 24449 ;; Hardware stack levels used:    1
 24450 ;; Hardware stack levels required when called:    7
 24451 ;; This function calls:
 24452 ;;		Nothing
 24453 ;; This function is called by:
 24454 ;;		_main
 24455 ;;		_LORAWAN_EnterContinuousReceive
 24456 ;;		_LORAWAN_ReceiveWindow2Callback
 24457 ;;		_SetReceptionNotOkState
 24458 ;;		_LORAWAN_RxDone
 24459 ;;		_LORAWAN_RxTimeout
 24460 ;;		_LORAWAN_TxDone
 24461 ;;		_AckRetransmissionCallback
 24462 ;;		_UnconfirmedTransmissionCallback
 24463 ;; This function uses a non-reentrant model
 24464 ;;
 24465                           
 24466                           	psect	text109
 24467  0000'                    __ptext109:
 24468                           	opt stack 0
 24469  0000'                    _RxData:
 24470                           	opt stack 20
 24471                           
 24472                           ;incstack = 0
 24473  0000' 0012               	return		;funcret
 24474  0002'                    __end_of_RxData:
 24475                           	opt stack 0
 24476                           tosu	equ	0xFFF
 24477                           tosh	equ	0xFFE
 24478                           tosl	equ	0xFFD
 24479                           pclath	equ	0xFFA
 24480                           tblptru	equ	0xFF8
 24481                           tblptrh	equ	0xFF7
 24482                           tblptrl	equ	0xFF6
 24483                           tablat	equ	0xFF5
 24484                           prodh	equ	0xFF4
 24485                           prodl	equ	0xFF3
 24486                           intcon	equ	0xFF2
 24487                           intcon2	equ	0xFF1
 24488                           intcon3	equ	0xFF0
 24489                           indf0	equ	0xFEF
 24490                           postinc0	equ	0xFEE
 24491                           fsr0h	equ	0xFEA
 24492                           fsr0l	equ	0xFE9
 24493                           wreg	equ	0xFE8
 24494                           postinc1	equ	0xFE6
 24495                           postdec1	equ	0xFE5
 24496                           plusw1	equ	0xFE3
 24497                           fsr1h	equ	0xFE2
 24498                           fsr1l	equ	0xFE1
 24499                           indf2	equ	0xFDF
 24500                           postinc2	equ	0xFDE
 24501                           postdec2	equ	0xFDD
 24502                           plusw2	equ	0xFDB
 24503                           fsr2h	equ	0xFDA
 24504                           fsr2l	equ	0xFD9
 24505                           status	equ	0xFD8
 24506                           
 24507 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 24508 ;; Defined at:
 24509 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24510 ;; Parameters:    Size  Location     Type
 24511 ;;		None
 24512 ;; Auto vars:     Size  Location     Type
 24513 ;;		None
 24514 ;; Return value:  Size  Location     Type
 24515 ;;                  1    wreg      void 
 24516 ;; Registers used:
 24517 ;;		wreg, status,2
 24518 ;; Tracked objects:
 24519 ;;		On entry : 0/0
 24520 ;;		On exit  : 0/0
 24521 ;;		Unchanged: 0/0
 24522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24527 ;;Total ram usage:        0 bytes
 24528 ;; Hardware stack levels used:    1
 24529 ;; Hardware stack levels required when called:    7
 24530 ;; This function calls:
 24531 ;;		Nothing
 24532 ;; This function is called by:
 24533 ;;		_LORAWAN_RxTimeout
 24534 ;;		_LORAWAN_ReceiveWindow2Callback
 24535 ;;		_LORAWAN_EnterContinuousReceive
 24536 ;;		_UnconfirmedTransmissionCallback
 24537 ;; This function uses a non-reentrant model
 24538 ;;
 24539                           
 24540                           	psect	text110
 24541  0000'                    __ptext110:
 24542                           	opt stack 0
 24543  0000'                    _ResetParametersForUnconfirmedTransmission:
 24544                           	opt stack 20
 24545                           
 24546                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 24547                           
 24548                           ;incstack = 0
 24549  0000' 0102               	movlb	2	; () banked
 24550  0002' 9100'              	bcf	(_loRa+2)& (0+255),0,b
 24551  0004' 9300'              	bcf	(_loRa+2)& (0+255),1,b
 24552  0006' 9500'              	bcf	(_loRa+2)& (0+255),2,b
 24553  0008' 9700'              	bcf	(_loRa+2)& (0+255),3,b
 24554                           
 24555                           ; BSR set to: 2
 24556                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 24557  000A' 0E01               	movlw	1
 24558  000C' 6F00'              	movwf	(_loRa+216)& (0+255),b
 24559                           
 24560                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 24561  000E' 0E00               	movlw	0
 24562  0010' 6F00'              	movwf	(_loRa+167)& (0+255),b
 24563                           
 24564                           ; BSR set to: 2
 24565  0012' 0012               	return		;funcret
 24566  0014'                    __end_of_ResetParametersForUnconfirmedTransmission:
 24567                           	opt stack 0
 24568                           tosu	equ	0xFFF
 24569                           tosh	equ	0xFFE
 24570                           tosl	equ	0xFFD
 24571                           pclath	equ	0xFFA
 24572                           tblptru	equ	0xFF8
 24573                           tblptrh	equ	0xFF7
 24574                           tblptrl	equ	0xFF6
 24575                           tablat	equ	0xFF5
 24576                           prodh	equ	0xFF4
 24577                           prodl	equ	0xFF3
 24578                           intcon	equ	0xFF2
 24579                           intcon2	equ	0xFF1
 24580                           intcon3	equ	0xFF0
 24581                           indf0	equ	0xFEF
 24582                           postinc0	equ	0xFEE
 24583                           fsr0h	equ	0xFEA
 24584                           fsr0l	equ	0xFE9
 24585                           wreg	equ	0xFE8
 24586                           postinc1	equ	0xFE6
 24587                           postdec1	equ	0xFE5
 24588                           plusw1	equ	0xFE3
 24589                           fsr1h	equ	0xFE2
 24590                           fsr1l	equ	0xFE1
 24591                           indf2	equ	0xFDF
 24592                           postinc2	equ	0xFDE
 24593                           postdec2	equ	0xFDD
 24594                           plusw2	equ	0xFDB
 24595                           fsr2h	equ	0xFDA
 24596                           fsr2l	equ	0xFD9
 24597                           status	equ	0xFD8
 24598                           
 24599 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 24600 ;; Defined at:
 24601 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24602 ;; Parameters:    Size  Location     Type
 24603 ;;		None
 24604 ;; Auto vars:     Size  Location     Type
 24605 ;;		None
 24606 ;; Return value:  Size  Location     Type
 24607 ;;                  1    wreg      void 
 24608 ;; Registers used:
 24609 ;;		wreg, status,2
 24610 ;; Tracked objects:
 24611 ;;		On entry : 0/0
 24612 ;;		On exit  : 0/0
 24613 ;;		Unchanged: 0/0
 24614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24619 ;;Total ram usage:        0 bytes
 24620 ;; Hardware stack levels used:    1
 24621 ;; Hardware stack levels required when called:    7
 24622 ;; This function calls:
 24623 ;;		Nothing
 24624 ;; This function is called by:
 24625 ;;		_LORAWAN_RxTimeout
 24626 ;;		_LORAWAN_ReceiveWindow2Callback
 24627 ;;		_LORAWAN_EnterContinuousReceive
 24628 ;;		_AckRetransmissionCallback
 24629 ;; This function uses a non-reentrant model
 24630 ;;
 24631                           
 24632                           	psect	text111
 24633  0000'                    __ptext111:
 24634                           	opt stack 0
 24635  0000'                    _ResetParametersForConfirmedTransmission:
 24636                           	opt stack 18
 24637                           
 24638                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 24639                           
 24640                           ; BSR set to: 2
 24641                           ;incstack = 0
 24642  0000' 0102               	movlb	2	; () banked
 24643  0002' 9100'              	bcf	(_loRa+2)& (0+255),0,b
 24644  0004' 9300'              	bcf	(_loRa+2)& (0+255),1,b
 24645  0006' 9500'              	bcf	(_loRa+2)& (0+255),2,b
 24646  0008' 9700'              	bcf	(_loRa+2)& (0+255),3,b
 24647                           
 24648                           ; BSR set to: 2
 24649                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 24650  000A' 0E01               	movlw	1
 24651  000C' 6F00'              	movwf	(_loRa+217)& (0+255),b
 24652                           
 24653                           ; BSR set to: 2
 24654                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 24655  000E' 9100'              	bcf	_loRa& (0+255),0,b
 24656                           
 24657                           ; BSR set to: 2
 24658  0010' 0012               	return		;funcret
 24659  0012'                    __end_of_ResetParametersForConfirmedTransmission:
 24660                           	opt stack 0
 24661                           tosu	equ	0xFFF
 24662                           tosh	equ	0xFFE
 24663                           tosl	equ	0xFFD
 24664                           pclath	equ	0xFFA
 24665                           tblptru	equ	0xFF8
 24666                           tblptrh	equ	0xFF7
 24667                           tblptrl	equ	0xFF6
 24668                           tablat	equ	0xFF5
 24669                           prodh	equ	0xFF4
 24670                           prodl	equ	0xFF3
 24671                           intcon	equ	0xFF2
 24672                           intcon2	equ	0xFF1
 24673                           intcon3	equ	0xFF0
 24674                           indf0	equ	0xFEF
 24675                           postinc0	equ	0xFEE
 24676                           fsr0h	equ	0xFEA
 24677                           fsr0l	equ	0xFE9
 24678                           wreg	equ	0xFE8
 24679                           postinc1	equ	0xFE6
 24680                           postdec1	equ	0xFE5
 24681                           plusw1	equ	0xFE3
 24682                           fsr1h	equ	0xFE2
 24683                           fsr1l	equ	0xFE1
 24684                           indf2	equ	0xFDF
 24685                           postinc2	equ	0xFDE
 24686                           postdec2	equ	0xFDD
 24687                           plusw2	equ	0xFDB
 24688                           fsr2h	equ	0xFDA
 24689                           fsr2l	equ	0xFD9
 24690                           status	equ	0xFD8
 24691                           
 24692 ;; *************** function _RADIO_ReleaseData *****************
 24693 ;; Defined at:
 24694 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24695 ;; Parameters:    Size  Location     Type
 24696 ;;		None
 24697 ;; Auto vars:     Size  Location     Type
 24698 ;;		None
 24699 ;; Return value:  Size  Location     Type
 24700 ;;                  1    wreg      void 
 24701 ;; Registers used:
 24702 ;;		status,2, status,0
 24703 ;; Tracked objects:
 24704 ;;		On entry : 0/0
 24705 ;;		On exit  : 0/0
 24706 ;;		Unchanged: 0/0
 24707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24712 ;;Total ram usage:        0 bytes
 24713 ;; Hardware stack levels used:    1
 24714 ;; Hardware stack levels required when called:    7
 24715 ;; This function calls:
 24716 ;;		Nothing
 24717 ;; This function is called by:
 24718 ;;		_LORAWAN_ReceiveWindow1Callback
 24719 ;;		_LORAWAN_ReceiveWindow2Callback
 24720 ;;		_LORAWAN_EnterContinuousReceive
 24721 ;;		_LORAWAN_RxDone
 24722 ;; This function uses a non-reentrant model
 24723 ;;
 24724                           
 24725                           	psect	text112
 24726  0000'                    __ptext112:
 24727                           	opt stack 0
 24728  0000'                    _RADIO_ReleaseData:
 24729                           	opt stack 18
 24730                           
 24731                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 24732                           
 24733                           ; BSR set to: 2
 24734                           ;incstack = 0
 24735  0000' 0101               	movlb	1	; () banked
 24736  0002' 9500'              	bcf	(_RadioConfiguration+35)& (0+255),2,b
 24737                           
 24738                           ; BSR set to: 1
 24739  0004' 0012               	return		;funcret
 24740  0006'                    __end_of_RADIO_ReleaseData:
 24741                           	opt stack 0
 24742                           tosu	equ	0xFFF
 24743                           tosh	equ	0xFFE
 24744                           tosl	equ	0xFFD
 24745                           pclath	equ	0xFFA
 24746                           tblptru	equ	0xFF8
 24747                           tblptrh	equ	0xFF7
 24748                           tblptrl	equ	0xFF6
 24749                           tablat	equ	0xFF5
 24750                           prodh	equ	0xFF4
 24751                           prodl	equ	0xFF3
 24752                           intcon	equ	0xFF2
 24753                           intcon2	equ	0xFF1
 24754                           intcon3	equ	0xFF0
 24755                           indf0	equ	0xFEF
 24756                           postinc0	equ	0xFEE
 24757                           fsr0h	equ	0xFEA
 24758                           fsr0l	equ	0xFE9
 24759                           wreg	equ	0xFE8
 24760                           postinc1	equ	0xFE6
 24761                           postdec1	equ	0xFE5
 24762                           plusw1	equ	0xFE3
 24763                           fsr1h	equ	0xFE2
 24764                           fsr1l	equ	0xFE1
 24765                           indf2	equ	0xFDF
 24766                           postinc2	equ	0xFDE
 24767                           postdec2	equ	0xFDD
 24768                           plusw2	equ	0xFDB
 24769                           fsr2h	equ	0xFDA
 24770                           fsr2l	equ	0xFD9
 24771                           status	equ	0xFD8
 24772                           
 24773 ;; *************** function _RADIO_ReceiveStop *****************
 24774 ;; Defined at:
 24775 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24776 ;; Parameters:    Size  Location     Type
 24777 ;;		None
 24778 ;; Auto vars:     Size  Location     Type
 24779 ;;		None
 24780 ;; Return value:  Size  Location     Type
 24781 ;;                  1    wreg      void 
 24782 ;; Registers used:
 24783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 24784 ;; Tracked objects:
 24785 ;;		On entry : 0/0
 24786 ;;		On exit  : 0/0
 24787 ;;		Unchanged: 0/0
 24788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24793 ;;Total ram usage:        0 bytes
 24794 ;; Hardware stack levels used:    1
 24795 ;; Hardware stack levels required when called:   11
 24796 ;; This function calls:
 24797 ;;		_RADIO_WriteMode
 24798 ;; This function is called by:
 24799 ;;		_LORAWAN_Send
 24800 ;;		_LORAWAN_ReceiveWindow1Callback
 24801 ;;		_LORAWAN_ReceiveWindow2Callback
 24802 ;;		_LORAWAN_EnterContinuousReceive
 24803 ;;		_LORAWAN_SetClass
 24804 ;; This function uses a non-reentrant model
 24805 ;;
 24806                           
 24807                           	psect	text113
 24808  0000'                    __ptext113:
 24809                           	opt stack 0
 24810  0000'                    _RADIO_ReceiveStop:
 24811                           	opt stack 18
 24812                           
 24813                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 24814                           
 24815                           ; BSR set to: 1
 24816                           ;incstack = 0
 24817  0000' 0E02               	movlw	2
 24818  0002' 0101               	movlb	1	; () banked
 24819  0004' 1900'              	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 24820  0006' A4D8               	btfss	status,2,c
 24821  0008' 0012               	return	
 24822                           
 24823                           ; BSR set to: 1
 24824                           ;radio_driver_SX1276.c: 954: {
 24825                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 24826  000A' C02A' F005'        	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 24827  000E' 0E00               	movlw	0
 24828  0010' 0100               	movlb	0	; () banked
 24829  0012' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
 24830  0014' 0E00               	movlw	0
 24831  0016' EC00' F000'        	call	_RADIO_WriteMode
 24832                           
 24833                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 24834  001A' 0101               	movlb	1	; () banked
 24835  001C' 9300'              	bcf	(_RadioConfiguration+35)& (0+255),1,b
 24836  001E' 0012               	return	
 24837  0020'                    __end_of_RADIO_ReceiveStop:
 24838                           	opt stack 0
 24839                           tosu	equ	0xFFF
 24840                           tosh	equ	0xFFE
 24841                           tosl	equ	0xFFD
 24842                           pclath	equ	0xFFA
 24843                           tblptru	equ	0xFF8
 24844                           tblptrh	equ	0xFF7
 24845                           tblptrl	equ	0xFF6
 24846                           tablat	equ	0xFF5
 24847                           prodh	equ	0xFF4
 24848                           prodl	equ	0xFF3
 24849                           intcon	equ	0xFF2
 24850                           intcon2	equ	0xFF1
 24851                           intcon3	equ	0xFF0
 24852                           indf0	equ	0xFEF
 24853                           postinc0	equ	0xFEE
 24854                           fsr0h	equ	0xFEA
 24855                           fsr0l	equ	0xFE9
 24856                           wreg	equ	0xFE8
 24857                           postinc1	equ	0xFE6
 24858                           postdec1	equ	0xFE5
 24859                           plusw1	equ	0xFE3
 24860                           fsr1h	equ	0xFE2
 24861                           fsr1l	equ	0xFE1
 24862                           indf2	equ	0xFDF
 24863                           postinc2	equ	0xFDE
 24864                           postdec2	equ	0xFDD
 24865                           plusw2	equ	0xFDB
 24866                           fsr2h	equ	0xFDA
 24867                           fsr2l	equ	0xFD9
 24868                           status	equ	0xFD8
 24869                           
 24870 ;; *************** function _RADIO_ReceiveStart *****************
 24871 ;; Defined at:
 24872 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24873 ;; Parameters:    Size  Location     Type
 24874 ;;  rxWindowSize    2   81[BANK0 ] unsigned int 
 24875 ;; Auto vars:     Size  Location     Type
 24876 ;;		None
 24877 ;; Return value:  Size  Location     Type
 24878 ;;                  2   81[BANK0 ] enum E7038
 24879 ;; Registers used:
 24880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 24881 ;; Tracked objects:
 24882 ;;		On entry : 0/0
 24883 ;;		On exit  : 0/0
 24884 ;;		Unchanged: 0/0
 24885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24886 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24887 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24888 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24889 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24890 ;;Total ram usage:       10 bytes
 24891 ;; Hardware stack levels used:    1
 24892 ;; Hardware stack levels required when called:   12
 24893 ;; This function calls:
 24894 ;;		_RADIO_RegisterWrite
 24895 ;;		_RADIO_WriteConfiguration
 24896 ;;		_RADIO_WriteMode
 24897 ;;		_SwTimerSetTimeout
 24898 ;;		_SwTimerStart
 24899 ;;		___lldiv
 24900 ;; This function is called by:
 24901 ;;		_LORAWAN_ReceiveWindow1Callback
 24902 ;;		_LORAWAN_ReceiveWindow2Callback
 24903 ;;		_LORAWAN_EnterContinuousReceive
 24904 ;; This function uses a non-reentrant model
 24905 ;;
 24906                           
 24907                           	psect	text114
 24908  0000'                    __ptext114:
 24909                           	opt stack 0
 24910  0000'                    _RADIO_ReceiveStart:
 24911                           	opt stack 13
 24912                           
 24913                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 24914                           
 24915                           ; BSR set to: 1
 24916                           ;incstack = 0
 24917  0000' 0101               	movlb	1	; () banked
 24918  0002' A500'              	btfss	(_RadioConfiguration+35)& (0+255),2,b
 24919  0004' D006               	goto	l524
 24920                           
 24921                           ; BSR set to: 1
 24922                           ;radio_driver_SX1276.c: 878: {
 24923                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 24924  0006' 0E80               	movlw	128
 24925  0008' 0100               	movlb	0	; () banked
 24926  000A' 6F00'              	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 24927  000C' 0E03               	movlw	3
 24928  000E' 6F00'              	movwf	?_RADIO_ReceiveStart& (0+255),b
 24929                           
 24930                           ; BSR set to: 0
 24931  0010' 0012               	return	
 24932  0012'                    l524:
 24933                           
 24934                           ;radio_driver_SX1276.c: 880: }
 24935                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 24936                           
 24937                           ; BSR set to: 0
 24938  0012' C035' F053'        	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 24939  0016' 0E03               	movlw	3
 24940  0018' 0100               	movlb	0	; () banked
 24941  001A' 1700'              	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 24942  001C' B4D8               	btfsc	status,2,c
 24943  001E' D005               	goto	l526
 24944                           
 24945                           ; BSR set to: 0
 24946                           ;radio_driver_SX1276.c: 883: {
 24947                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 24948  0020' 0E80               	movlw	128
 24949  0022' 6F00'              	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 24950  0024' 0E04               	movlw	4
 24951  0026' 6F00'              	movwf	?_RADIO_ReceiveStart& (0+255),b
 24952                           
 24953                           ; BSR set to: 0
 24954  0028' 0012               	return	
 24955  002A'                    l526:
 24956                           
 24957                           ; BSR set to: 0
 24958                           ;radio_driver_SX1276.c: 885: }
 24959                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 24960                           
 24961                           ; BSR set to: 0
 24962  002A' 5100'              	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 24963  002C' 1100'              	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 24964  002E' A4D8               	btfss	status,2,c
 24965  0030' D007               	goto	l527
 24966                           
 24967                           ; BSR set to: 0
 24968                           ;radio_driver_SX1276.c: 888: {
 24969                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 24970  0032' 0E00               	movlw	0
 24971  0034' 6F00'              	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 24972  0036' 0E04               	movlw	4
 24973  0038' 6F00'              	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 24974  003A' EC00' F000'        	call	_RADIO_WriteConfiguration	;wreg free
 24975                           
 24976                           ;radio_driver_SX1276.c: 890: }
 24977  003E' D006               	goto	l528
 24978  0040'                    l527:
 24979                           
 24980                           ;radio_driver_SX1276.c: 891: else
 24981                           ;radio_driver_SX1276.c: 892: {
 24982                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 24983  0040' C051' F046'        	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 24984  0044' C052' F047'        	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 24985  0048' EC00' F000'        	call	_RADIO_WriteConfiguration	;wreg free
 24986  004C'                    l528:
 24987                           
 24988                           ;radio_driver_SX1276.c: 894: }
 24989                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 24990  004C' 0101               	movlb	1	; () banked
 24991  004E' 0500'              	decf	(_RadioConfiguration+24)& (0+255),w,b
 24992  0050' A4D8               	btfss	status,2,c
 24993  0052' D013               	goto	l529
 24994                           
 24995                           ; BSR set to: 1
 24996                           ;radio_driver_SX1276.c: 897: {
 24997                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 24998  0054' 0E01               	movlw	1
 24999  0056' 0100               	movlb	0	; () banked
 25000  0058' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 25001  005A' 0E22               	movlw	34
 25002  005C' EC00' F000'        	call	_RADIO_RegisterWrite
 25003                           
 25004                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 25005  0060' 0E00               	movlw	0
 25006  0062' 0100               	movlb	0	; () banked
 25007  0064' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 25008  0066' 0E40               	movlw	64
 25009  0068' EC00' F000'        	call	_RADIO_RegisterWrite
 25010                           
 25011                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 25012  006C' 0E00               	movlw	0
 25013  006E' 0100               	movlb	0	; () banked
 25014  0070' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 25015  0072' 0E41               	movlw	65
 25016  0074' EC00' F000'        	call	_RADIO_RegisterWrite
 25017                           
 25018                           ;radio_driver_SX1276.c: 908: }
 25019  0078' D016               	goto	l530
 25020  007A'                    l529:
 25021                           
 25022                           ;radio_driver_SX1276.c: 909: else
 25023                           ;radio_driver_SX1276.c: 910: {
 25024                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 25025  007A' C046' F001'        	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 25026  007E' 0E12               	movlw	18
 25027  0080' EC00' F000'        	call	_RADIO_RegisterWrite
 25028                           
 25029                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 25030  0084' C047' F001'        	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 25031  0088' 0E13               	movlw	19
 25032  008A' EC00' F000'        	call	_RADIO_RegisterWrite
 25033                           
 25034                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 25035  008E' 0E00               	movlw	0
 25036  0090' 0100               	movlb	0	; () banked
 25037  0092' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 25038  0094' 0E40               	movlw	64
 25039  0096' EC00' F000'        	call	_RADIO_RegisterWrite
 25040                           
 25041                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 25042  009A' 0E00               	movlw	0
 25043  009C' 0100               	movlb	0	; () banked
 25044  009E' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 25045  00A0' 0E41               	movlw	65
 25046  00A2' EC00' F000'        	call	_RADIO_RegisterWrite
 25047  00A6'                    l530:
 25048                           
 25049                           ;radio_driver_SX1276.c: 917: }
 25050                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 25051  00A6' 0101               	movlb	1	; () banked
 25052  00A8' 8300'              	bsf	(_RadioConfiguration+35)& (0+255),1,b
 25053                           
 25054                           ; BSR set to: 1
 25055                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 25056  00AA' 0EE7               	movlw	231
 25057  00AC' 1700'              	andwf	(_RadioConfiguration+35)& (0+255),f,b
 25058                           
 25059                           ; BSR set to: 1
 25060                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 25061  00AE' 0100               	movlb	0	; () banked
 25062  00B0' 5100'              	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 25063  00B2' 1100'              	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 25064  00B4' A4D8               	btfss	status,2,c
 25065  00B6' D008               	goto	l531
 25066                           
 25067                           ; BSR set to: 0
 25068                           ;radio_driver_SX1276.c: 925: {
 25069                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 25070  00B8' C02A' F005'        	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 25071  00BC' 0E00               	movlw	0
 25072  00BE' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
 25073  00C0' 0E05               	movlw	5
 25074  00C2' EC00' F000'        	call	_RADIO_WriteMode
 25075                           
 25076                           ;radio_driver_SX1276.c: 927: }
 25077  00C6' D046               	goto	l534
 25078  00C8'                    l531:
 25079                           
 25080                           ;radio_driver_SX1276.c: 928: else
 25081                           ;radio_driver_SX1276.c: 929: {
 25082                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 25083  00C8' 0101               	movlb	1	; () banked
 25084  00CA' 0500'              	decf	(_RadioConfiguration+24)& (0+255),w,b
 25085  00CC' A4D8               	btfss	status,2,c
 25086  00CE' D009               	goto	l533
 25087                           
 25088                           ; BSR set to: 1
 25089                           ;radio_driver_SX1276.c: 931: {
 25090                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 25091  00D0' 0E01               	movlw	1
 25092  00D2' 0100               	movlb	0	; () banked
 25093  00D4' 6F00'              	movwf	RADIO_WriteMode@newModulation& (0+255),b
 25094  00D6' 0E00               	movlw	0
 25095  00D8' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
 25096  00DA' 0E06               	movlw	6
 25097  00DC' EC00' F000'        	call	_RADIO_WriteMode
 25098                           
 25099                           ;radio_driver_SX1276.c: 933: }
 25100  00E0' D039               	goto	l534
 25101  00E2'                    l533:
 25102                           
 25103                           ;radio_driver_SX1276.c: 934: else
 25104                           ;radio_driver_SX1276.c: 935: {
 25105                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 25106  00E2' 0E00               	movlw	0
 25107  00E4' 0100               	movlb	0	; () banked
 25108  00E6' 6F00'              	movwf	RADIO_WriteMode@newModulation& (0+255),b
 25109  00E8' 0E00               	movlw	0
 25110  00EA' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
 25111  00EC' 0E05               	movlw	5
 25112  00EE' EC00' F000'        	call	_RADIO_WriteMode
 25113                           
 25114                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 25115  00F2' 0100               	movlb	0	; () banked
 25116  00F4' 5100'              	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 25117  00F6' 6F00'              	movwf	??_RADIO_ReceiveStart& (0+255),b
 25118  00F8' 5100'              	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 25119  00FA' 6F00'              	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 25120  00FC' 6B00'              	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 25121  00FE' 6B00'              	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 25122  0100' 0E0C               	movlw	12
 25123  0102'                    u15595:
 25124  0102' 90D8               	bcf	status,0,c
 25125  0104' 3700'              	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 25126  0106' 3700'              	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 25127  0108' 3700'              	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 25128  010A' 3700'              	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 25129  010C' 2EE8               	decfsz	wreg,f,c
 25130  010E' D7F9               	goto	u15595
 25131  0110' C053' F000'        	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 25132  0114' C054' F001'        	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 25133  0118' C055' F002'        	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 25134  011C' C056' F003'        	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 25135  0120' 0E7D               	movlw	125
 25136  0122' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 25137  0124' 0E00               	movlw	0
 25138  0126' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 25139  0128' 0E00               	movlw	0
 25140  012A' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 25141  012C' 0E00               	movlw	0
 25142  012E' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 25143  0130' EC00' F000'        	call	___lldiv	;wreg free
 25144  0134' C000' F00D'        	movff	?___lldiv,SwTimerSetTimeout@timeout
 25145  0138' C001' F00E'        	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 25146  013C' C002' F00F'        	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 25147  0140' C003' F010'        	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 25148  0144' 0101               	movlb	1	; () banked
 25149  0146' 5100'              	movf	(_RadioConfiguration+40)& (0+255),w,b
 25150  0148' EC00' F000'        	call	_SwTimerSetTimeout
 25151                           
 25152                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 25153  014C' 0101               	movlb	1	; () banked
 25154  014E' 5100'              	movf	(_RadioConfiguration+40)& (0+255),w,b
 25155  0150' EC00' F000'        	call	_SwTimerStart
 25156  0154'                    l534:
 25157                           
 25158                           ;radio_driver_SX1276.c: 939: }
 25159                           ;radio_driver_SX1276.c: 940: }
 25160                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 25161  0154' 0101               	movlb	1	; () banked
 25162  0156' 5100'              	movf	(_RadioConfiguration+42)& (0+255),w,b
 25163  0158' 1100'              	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 25164  015A' 1100'              	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 25165  015C' 1100'              	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 25166  015E' B4D8               	btfsc	status,2,c
 25167  0160' D061               	goto	l535
 25168                           
 25169                           ; BSR set to: 1
 25170                           ;radio_driver_SX1276.c: 943: {
 25171                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 25172  0162' 5100'              	movf	(_RadioConfiguration+45)& (0+255),w,b
 25173  0164' E107               	bnz	u15610
 25174  0166' 2900'              	incf	(_RadioConfiguration+42)& (0+255),w,b
 25175  0168' 0EFF               	movlw	255
 25176  016A' 5900'              	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 25177  016C' 0E0F               	movlw	15
 25178  016E' 5900'              	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 25179  0170' A0D8               	btfss	status,0,c
 25180  0172' D01D               	goto	l537
 25181  0174'                    u15610:
 25182                           
 25183                           ; BSR set to: 1
 25184  0174' C03C' F000'        	movff	_RadioConfiguration+42,___lldiv@dividend
 25185  0178' C03D' F001'        	movff	_RadioConfiguration+43,___lldiv@dividend+1
 25186  017C' C03E' F002'        	movff	_RadioConfiguration+44,___lldiv@dividend+2
 25187  0180' C03F' F003'        	movff	_RadioConfiguration+45,___lldiv@dividend+3
 25188  0184' 0E7D               	movlw	125
 25189  0186' 0100               	movlb	0	; () banked
 25190  0188' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 25191  018A' 0E00               	movlw	0
 25192  018C' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 25193  018E' 0E00               	movlw	0
 25194  0190' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 25195  0192' 0E00               	movlw	0
 25196  0194' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 25197  0196' EC00' F000'        	call	___lldiv	;wreg free
 25198  019A' 0E0C               	movlw	12
 25199  019C'                    u15625:
 25200  019C' 90D8               	bcf	status,0,c
 25201  019E' 0100               	movlb	0	; () banked
 25202  01A0' 3700'              	rlcf	?___lldiv& (0+255),f,b
 25203  01A2' 3700'              	rlcf	(?___lldiv+1)& (0+255),f,b
 25204  01A4' 3700'              	rlcf	(?___lldiv+2)& (0+255),f,b
 25205  01A6' 3700'              	rlcf	(?___lldiv+3)& (0+255),f,b
 25206  01A8' 2EE8               	decfsz	wreg,f,c
 25207  01AA' D7F8               	goto	u15625
 25208  01AC' D023               	goto	L18
 25209  01AE'                    l537:
 25210                           
 25211                           ; BSR set to: 0
 25212  01AE' C03C' F053'        	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 25213  01B2' C03D' F054'        	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 25214  01B6' C03E' F055'        	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 25215  01BA' C03F' F056'        	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 25216  01BE' 0E0C               	movlw	12
 25217  01C0'                    u15635:
 25218  01C0' 90D8               	bcf	status,0,c
 25219  01C2' 0100               	movlb	0	; () banked
 25220  01C4' 3700'              	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 25221  01C6' 3700'              	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 25222  01C8' 3700'              	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 25223  01CA' 3700'              	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 25224  01CC' 2EE8               	decfsz	wreg,f,c
 25225  01CE' D7F8               	goto	u15635
 25226  01D0' C053' F000'        	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 25227  01D4' C054' F001'        	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 25228  01D8' C055' F002'        	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 25229  01DC' C056' F003'        	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 25230  01E0' 0E7D               	movlw	125
 25231  01E2' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 25232  01E4' 0E00               	movlw	0
 25233  01E6' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 25234  01E8' 0E00               	movlw	0
 25235  01EA' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 25236  01EC' 0E00               	movlw	0
 25237  01EE' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 25238  01F0' EC00' F000'        	call	___lldiv	;wreg free
 25239  01F4'                    L18:
 25240  01F4' C000' F057'        	movff	?___lldiv,_RADIO_ReceiveStart$781
 25241  01F8' C001' F058'        	movff	?___lldiv+1,_RADIO_ReceiveStart$781+1
 25242  01FC' C002' F059'        	movff	?___lldiv+2,_RADIO_ReceiveStart$781+2
 25243  0200' C003' F05A'        	movff	?___lldiv+3,_RADIO_ReceiveStart$781+3
 25244  0204' C057' F00D'        	movff	_RADIO_ReceiveStart$781,SwTimerSetTimeout@timeout
 25245  0208' C058' F00E'        	movff	_RADIO_ReceiveStart$781+1,SwTimerSetTimeout@timeout+1
 25246  020C' C059' F00F'        	movff	_RADIO_ReceiveStart$781+2,SwTimerSetTimeout@timeout+2
 25247  0210' C05A' F010'        	movff	_RADIO_ReceiveStart$781+3,SwTimerSetTimeout@timeout+3
 25248  0214' 0101               	movlb	1	; () banked
 25249  0216' 5100'              	movf	(_RadioConfiguration+41)& (0+255),w,b
 25250  0218' EC00' F000'        	call	_SwTimerSetTimeout
 25251                           
 25252                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 25253  021C' 0101               	movlb	1	; () banked
 25254  021E' 5100'              	movf	(_RadioConfiguration+41)& (0+255),w,b
 25255  0220' EC00' F000'        	call	_SwTimerStart
 25256  0224'                    l535:
 25257                           
 25258                           ;radio_driver_SX1276.c: 946: }
 25259                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 25260  0224' 0E00               	movlw	0
 25261  0226' 0100               	movlb	0	; () banked
 25262  0228' 6F00'              	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 25263  022A' 0E00               	movlw	0
 25264  022C' 6F00'              	movwf	?_RADIO_ReceiveStart& (0+255),b
 25265  022E' 0012               	return	
 25266  0230'                    __end_of_RADIO_ReceiveStart:
 25267                           	opt stack 0
 25268                           tosu	equ	0xFFF
 25269                           tosh	equ	0xFFE
 25270                           tosl	equ	0xFFD
 25271                           pclath	equ	0xFFA
 25272                           tblptru	equ	0xFF8
 25273                           tblptrh	equ	0xFF7
 25274                           tblptrl	equ	0xFF6
 25275                           tablat	equ	0xFF5
 25276                           prodh	equ	0xFF4
 25277                           prodl	equ	0xFF3
 25278                           intcon	equ	0xFF2
 25279                           intcon2	equ	0xFF1
 25280                           intcon3	equ	0xFF0
 25281                           indf0	equ	0xFEF
 25282                           postinc0	equ	0xFEE
 25283                           fsr0h	equ	0xFEA
 25284                           fsr0l	equ	0xFE9
 25285                           wreg	equ	0xFE8
 25286                           postinc1	equ	0xFE6
 25287                           postdec1	equ	0xFE5
 25288                           plusw1	equ	0xFE3
 25289                           fsr1h	equ	0xFE2
 25290                           fsr1l	equ	0xFE1
 25291                           indf2	equ	0xFDF
 25292                           postinc2	equ	0xFDE
 25293                           postdec2	equ	0xFDD
 25294                           plusw2	equ	0xFDB
 25295                           fsr2h	equ	0xFDA
 25296                           fsr2l	equ	0xFD9
 25297                           status	equ	0xFD8
 25298                           
 25299 ;; *************** function _ConfigureRadioRx *****************
 25300 ;; Defined at:
 25301 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 25302 ;; Parameters:    Size  Location     Type
 25303 ;;  dataRate        1    wreg     unsigned char 
 25304 ;;  freq            4   19[BANK0 ] unsigned long 
 25305 ;; Auto vars:     Size  Location     Type
 25306 ;;  dataRate        1   23[BANK0 ] unsigned char 
 25307 ;; Return value:  Size  Location     Type
 25308 ;;                  1    wreg      void 
 25309 ;; Registers used:
 25310 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25311 ;; Tracked objects:
 25312 ;;		On entry : 0/0
 25313 ;;		On exit  : 0/0
 25314 ;;		Unchanged: 0/0
 25315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25316 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25317 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25319 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25320 ;;Total ram usage:        5 bytes
 25321 ;; Hardware stack levels used:    1
 25322 ;; Hardware stack levels required when called:   10
 25323 ;; This function calls:
 25324 ;;		_ConfigureRadio
 25325 ;;		_RADIO_SetCRC
 25326 ;;		_RADIO_SetIQInverted
 25327 ;; This function is called by:
 25328 ;;		_LORAWAN_ReceiveWindow1Callback
 25329 ;;		_LORAWAN_ReceiveWindow2Callback
 25330 ;;		_LORAWAN_EnterContinuousReceive
 25331 ;; This function uses a non-reentrant model
 25332 ;;
 25333                           
 25334                           	psect	text115
 25335  0000'                    __ptext115:
 25336                           	opt stack 0
 25337  0000'                    _ConfigureRadioRx:
 25338                           	opt stack 15
 25339                           
 25340                           ; BSR set to: 0
 25341                           ;incstack = 0
 25342                           ;ConfigureRadioRx@dataRate stored from wreg
 25343  0000' 0100               	movlb	0	; () banked
 25344  0002' 6F00'              	movwf	ConfigureRadioRx@dataRate& (0+255),b
 25345                           
 25346                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 25347  0004' C013' F00E'        	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 25348  0008' C014' F00F'        	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 25349  000C' C015' F010'        	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 25350  0010' C016' F011'        	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 25351  0014' 0100               	movlb	0	; () banked
 25352  0016' 5100'              	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 25353  0018' EC00' F000'        	call	_ConfigureRadio
 25354                           
 25355                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 25356  001C' 0E00               	movlw	0
 25357  001E' EC00' F000'        	call	_RADIO_SetCRC
 25358                           
 25359                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 25360  0022' 0E01               	movlw	1
 25361  0024' EC00' F000'        	call	_RADIO_SetIQInverted
 25362  0028' 0012               	return		;funcret
 25363  002A'                    __end_of_ConfigureRadioRx:
 25364                           	opt stack 0
 25365                           tosu	equ	0xFFF
 25366                           tosh	equ	0xFFE
 25367                           tosl	equ	0xFFD
 25368                           pclath	equ	0xFFA
 25369                           tblptru	equ	0xFF8
 25370                           tblptrh	equ	0xFF7
 25371                           tblptrl	equ	0xFF6
 25372                           tablat	equ	0xFF5
 25373                           prodh	equ	0xFF4
 25374                           prodl	equ	0xFF3
 25375                           intcon	equ	0xFF2
 25376                           intcon2	equ	0xFF1
 25377                           intcon3	equ	0xFF0
 25378                           indf0	equ	0xFEF
 25379                           postinc0	equ	0xFEE
 25380                           fsr0h	equ	0xFEA
 25381                           fsr0l	equ	0xFE9
 25382                           wreg	equ	0xFE8
 25383                           postinc1	equ	0xFE6
 25384                           postdec1	equ	0xFE5
 25385                           plusw1	equ	0xFE3
 25386                           fsr1h	equ	0xFE2
 25387                           fsr1l	equ	0xFE1
 25388                           indf2	equ	0xFDF
 25389                           postinc2	equ	0xFDE
 25390                           postdec2	equ	0xFDD
 25391                           plusw2	equ	0xFDB
 25392                           fsr2h	equ	0xFDA
 25393                           fsr2l	equ	0xFD9
 25394                           status	equ	0xFD8
 25395                           
 25396 ;; *************** function _INTERRUPT_GetDioStatus *****************
 25397 ;; Defined at:
 25398 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 25399 ;; Parameters:    Size  Location     Type
 25400 ;;		None
 25401 ;; Auto vars:     Size  Location     Type
 25402 ;;  a               1    0[BANK0 ] unsigned char 
 25403 ;; Return value:  Size  Location     Type
 25404 ;;                  1    wreg      unsigned char 
 25405 ;; Registers used:
 25406 ;;		wreg, status,2
 25407 ;; Tracked objects:
 25408 ;;		On entry : 0/0
 25409 ;;		On exit  : 0/0
 25410 ;;		Unchanged: 0/0
 25411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25413 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25415 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25416 ;;Total ram usage:        1 bytes
 25417 ;; Hardware stack levels used:    1
 25418 ;; Hardware stack levels required when called:    7
 25419 ;; This function calls:
 25420 ;;		Nothing
 25421 ;; This function is called by:
 25422 ;;		_LORAWAN_Mainloop
 25423 ;; This function uses a non-reentrant model
 25424 ;;
 25425                           
 25426                           	psect	text116
 25427  0000'                    __ptext116:
 25428                           	opt stack 0
 25429  0000'                    _INTERRUPT_GetDioStatus:
 25430                           	opt stack 22
 25431                           
 25432                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 25433                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 25434                           
 25435                           ;incstack = 0
 25436  0000' 9EF2               	bcf	intcon,7,c	;volatile
 25437                           
 25438                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 25439  0002' C011' F000'        	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 25440                           
 25441                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 25442  0006' 0E00               	movlw	0
 25443  0008' 0101               	movlb	1	; () banked
 25444  000A' 6F00'              	movwf	_dioStatus& (0+255),b	;volatile
 25445                           
 25446                           ; BSR set to: 1
 25447                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 25448  000C' 8EF2               	bsf	intcon,7,c	;volatile
 25449                           
 25450                           ;interrupt_manager_lora_addons.c: 55: return a;
 25451  000E' 0100               	movlb	0	; () banked
 25452  0010' 5100'              	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 25453  0012' 0012               	return	
 25454  0014'                    __end_of_INTERRUPT_GetDioStatus:
 25455                           	opt stack 0
 25456                           tosu	equ	0xFFF
 25457                           tosh	equ	0xFFE
 25458                           tosl	equ	0xFFD
 25459                           pclath	equ	0xFFA
 25460                           tblptru	equ	0xFF8
 25461                           tblptrh	equ	0xFF7
 25462                           tblptrl	equ	0xFF6
 25463                           tablat	equ	0xFF5
 25464                           prodh	equ	0xFF4
 25465                           prodl	equ	0xFF3
 25466                           intcon	equ	0xFF2
 25467                           intcon2	equ	0xFF1
 25468                           intcon3	equ	0xFF0
 25469                           indf0	equ	0xFEF
 25470                           postinc0	equ	0xFEE
 25471                           fsr0h	equ	0xFEA
 25472                           fsr0l	equ	0xFE9
 25473                           wreg	equ	0xFE8
 25474                           postinc1	equ	0xFE6
 25475                           postdec1	equ	0xFE5
 25476                           plusw1	equ	0xFE3
 25477                           fsr1h	equ	0xFE2
 25478                           fsr1l	equ	0xFE1
 25479                           indf2	equ	0xFDF
 25480                           postinc2	equ	0xFDE
 25481                           postdec2	equ	0xFDD
 25482                           plusw2	equ	0xFDB
 25483                           fsr2h	equ	0xFDA
 25484                           fsr2l	equ	0xFD9
 25485                           status	equ	0xFD8
 25486                           
 25487 ;; *************** function _LORAWAN_Join *****************
 25488 ;; Defined at:
 25489 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 25490 ;; Parameters:    Size  Location     Type
 25491 ;;  activationTy    1    wreg     enum E7213
 25492 ;; Auto vars:     Size  Location     Type
 25493 ;;  activationTy    1  125[BANK0 ] enum E7213
 25494 ;;  result          1  124[BANK0 ] enum E7190
 25495 ;;  bufferIndex     1  123[BANK0 ] unsigned char 
 25496 ;; Return value:  Size  Location     Type
 25497 ;;                  1    wreg      enum E7190
 25498 ;; Registers used:
 25499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 25500 ;; Tracked objects:
 25501 ;;		On entry : 0/0
 25502 ;;		On exit  : 0/0
 25503 ;;		Unchanged: 0/0
 25504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25506 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25508 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25509 ;;Total ram usage:        3 bytes
 25510 ;; Hardware stack levels used:    1
 25511 ;; Hardware stack levels required when called:   14
 25512 ;; This function calls:
 25513 ;;		_PrepareJoinRequestFrame
 25514 ;;		_RADIO_Transmit
 25515 ;;		_SelectChannelForTransmission
 25516 ;;		_SwTimerSetTimeout
 25517 ;;		_SwTimerStart
 25518 ;;		_UpdateJoinInProgress
 25519 ;; This function is called by:
 25520 ;;		_main
 25521 ;; This function uses a non-reentrant model
 25522 ;;
 25523                           
 25524                           	psect	text117
 25525  0000'                    __ptext117:
 25526                           	opt stack 0
 25527  0000'                    _LORAWAN_Join:
 25528                           	opt stack 16
 25529                           
 25530                           ; BSR set to: 0
 25531                           ;incstack = 0
 25532                           ;LORAWAN_Join@activationTypeNew stored from wreg
 25533  0000' 0100               	movlb	0	; () banked
 25534  0002' 6F00'              	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 25535                           
 25536                           ;lorawan.c: 117: uint8_t bufferIndex;
 25537                           ;lorawan.c: 118: LorawanError_t result;
 25538                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 25539  0004' 0102               	movlb	2	; () banked
 25540  0006' B100'              	btfsc	(_loRa+3)& (0+255),0,b
 25541  0008' 0012               	return	
 25542                           
 25543                           ; BSR set to: 2
 25544                           ;lorawan.c: 123: }
 25545                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 25546                           
 25547                           ; BSR set to: 2
 25548                           ;lorawan.c: 121: {
 25549                           ;lorawan.c: 122: return MAC_PAUSED;
 25550                           ;	Return value of _LORAWAN_Join is never used
 25551  000A' BF00'              	btfsc	(_loRa+2)& (0+255),7,b
 25552  000C' 0012               	return	
 25553                           
 25554                           ; BSR set to: 2
 25555                           ;lorawan.c: 128: }
 25556                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 25557                           
 25558                           ; BSR set to: 2
 25559                           
 25560                           ; BSR set to: 2
 25561                           ;lorawan.c: 126: {
 25562                           ;lorawan.c: 127: return SILENT_IMMEDIATELY_ACTIVE;
 25563                           ;	Return value of _LORAWAN_Join is never used
 25564  000E' 5100'              	movf	(_loRa+2)& (0+255),w,b
 25565  0010' 0B0F               	andlw	15
 25566  0012' 0900               	iorlw	0
 25567  0014' A4D8               	btfss	status,2,c
 25568  0016' 0012               	return	
 25569                           
 25570                           ; BSR set to: 2
 25571                           ;lorawan.c: 133: }
 25572                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 25573                           
 25574                           ; BSR set to: 2
 25575                           ;lorawan.c: 131: {
 25576                           ;lorawan.c: 132: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 25577                           ;	Return value of _LORAWAN_Join is never used
 25578  0018' C07D' F01D'        	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 25579                           
 25580                           ; BSR set to: 2
 25581                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 25582  001C' 0100               	movlb	0	; () banked
 25583  001E' 5100'              	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 25584  0020' A4D8               	btfss	status,2,c
 25585  0022' D024               	goto	l1506
 25586                           
 25587                           ; BSR set to: 0
 25588                           ;lorawan.c: 138: {
 25589                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 25590  0024' 0102               	movlb	2	; () banked
 25591  0026' A100'              	btfss	(_loRa+165)& (0+255),0,b
 25592  0028' 0012               	return	
 25593                           
 25594                           ; BSR set to: 2
 25595  002A' A300'              	btfss	(_loRa+165)& (0+255),1,b
 25596  002C' 0012               	return	
 25597                           
 25598                           ; BSR set to: 2
 25599  002E' A700'              	btfss	(_loRa+165)& (0+255),3,b
 25600  0030' 0012               	return	
 25601                           
 25602                           ; BSR set to: 2
 25603                           ;lorawan.c: 144: else
 25604                           ;lorawan.c: 145: {
 25605                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 25606                           
 25607                           ; BSR set to: 2
 25608                           
 25609                           ; BSR set to: 2
 25610                           ;lorawan.c: 143: }
 25611                           
 25612                           ; BSR set to: 2
 25613                           ;lorawan.c: 141: {
 25614                           ;lorawan.c: 142: return KEYS_NOT_INITIALIZED;
 25615                           ;	Return value of _LORAWAN_Join is never used
 25616  0032' EC00' F000'        	call	_PrepareJoinRequestFrame	;wreg free
 25617  0036' 0100               	movlb	0	; () banked
 25618  0038' 6F00'              	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 25619                           
 25620                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 25621  003A' 0E00               	movlw	0
 25622  003C' EC00' F000'        	call	_SelectChannelForTransmission
 25623  0040' 0100               	movlb	0	; () banked
 25624  0042' 6F00'              	movwf	LORAWAN_Join@result& (0+255),b
 25625                           
 25626                           ; BSR set to: 0
 25627                           ;lorawan.c: 149: if (result == OK)
 25628  0044' 5100'              	movf	LORAWAN_Join@result& (0+255),w,b
 25629  0046' A4D8               	btfss	status,2,c
 25630  0048' 0012               	return	
 25631                           
 25632                           ; BSR set to: 0
 25633                           ;lorawan.c: 150: {
 25634                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 25635  004A' 0E00'              	movlw	low _macBuffer
 25636  004C' 6F00'              	movwf	RADIO_Transmit@buffer& (0+255),b
 25637  004E' 0E00'              	movlw	high _macBuffer
 25638  0050' 6F00'              	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 25639  0052' C07B' F053'        	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 25640  0056' EC00' F000'        	call	_RADIO_Transmit	;wreg free
 25641  005A' 0100               	movlb	0	; () banked
 25642  005C' 5100'              	movf	?_RADIO_Transmit& (0+255),w,b
 25643  005E' 1100'              	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 25644  0060' A4D8               	btfss	status,2,c
 25645  0062' 0012               	return	
 25646                           
 25647                           ; BSR set to: 0
 25648                           ;lorawan.c: 152: {
 25649                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 25650  0064' 0E01               	movlw	1
 25651  0066' EC00' F000'        	call	_UpdateJoinInProgress
 25652                           
 25653                           ;lorawan.c: 164: }
 25654                           ;lorawan.c: 165: }
 25655                           ;lorawan.c: 166: }
 25656                           
 25657                           ;lorawan.c: 161: else
 25658                           ;lorawan.c: 162: {
 25659                           ;lorawan.c: 163: return result;
 25660                           ;	Return value of _LORAWAN_Join is never used
 25661                           
 25662                           ;lorawan.c: 159: }
 25663                           ;lorawan.c: 160: }
 25664                           
 25665                           ;lorawan.c: 156: else
 25666                           ;lorawan.c: 157: {
 25667                           ;lorawan.c: 158: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 25668                           ;	Return value of _LORAWAN_Join is never used
 25669                           
 25670                           ;lorawan.c: 155: }
 25671                           
 25672                           ;lorawan.c: 154: return OK;
 25673                           ;	Return value of _LORAWAN_Join is never used
 25674  006A' 0012               	return	
 25675  006C'                    l1506:
 25676                           
 25677                           ; BSR set to: 0
 25678                           ;lorawan.c: 167: else
 25679                           ;lorawan.c: 168: {
 25680                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 25681  006C' 0102               	movlb	2	; () banked
 25682  006E' AB00'              	btfss	(_loRa+165)& (0+255),5,b
 25683  0070' 0012               	return	
 25684                           
 25685                           ; BSR set to: 2
 25686  0072' A900'              	btfss	(_loRa+165)& (0+255),4,b
 25687  0074' 0012               	return	
 25688                           
 25689                           ; BSR set to: 2
 25690  0076' A500'              	btfss	(_loRa+165)& (0+255),2,b
 25691  0078' 0012               	return	
 25692                           
 25693                           ; BSR set to: 2
 25694                           ;lorawan.c: 174: else
 25695                           ;lorawan.c: 175: {
 25696                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 25697                           
 25698                           ; BSR set to: 2
 25699                           
 25700                           ; BSR set to: 2
 25701                           ;lorawan.c: 173: }
 25702                           
 25703                           ; BSR set to: 2
 25704                           ;lorawan.c: 171: {
 25705                           ;lorawan.c: 172: return KEYS_NOT_INITIALIZED;
 25706                           ;	Return value of _LORAWAN_Join is never used
 25707  007A' 0E07               	movlw	7
 25708  007C' EC00' F000'        	call	_UpdateJoinInProgress
 25709                           
 25710                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 25711  0080' 0E8F               	movlw	143
 25712  0082' 0100               	movlb	0	; () banked
 25713  0084' 6F00'              	movwf	SwTimerSetTimeout@timeout& (0+255),b
 25714  0086' 0E02               	movlw	2
 25715  0088' 6F00'              	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 25716  008A' 0E00               	movlw	0
 25717  008C' 6F00'              	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 25718  008E' 0E00               	movlw	0
 25719  0090' 6F00'              	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 25720  0092' 0102               	movlb	2	; () banked
 25721  0094' 5100'              	movf	(_loRa+243)& (0+255),w,b
 25722  0096' EC00' F000'        	call	_SwTimerSetTimeout
 25723                           
 25724                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 25725  009A' 0102               	movlb	2	; () banked
 25726  009C' 5100'              	movf	(_loRa+243)& (0+255),w,b
 25727  009E' EC00' F000'        	call	_SwTimerStart
 25728                           
 25729                           ;lorawan.c: 180: return OK;
 25730                           ;	Return value of _LORAWAN_Join is never used
 25731  00A2' 0012               	return	
 25732  00A4'                    __end_of_LORAWAN_Join:
 25733                           	opt stack 0
 25734                           tosu	equ	0xFFF
 25735                           tosh	equ	0xFFE
 25736                           tosl	equ	0xFFD
 25737                           pclath	equ	0xFFA
 25738                           tblptru	equ	0xFF8
 25739                           tblptrh	equ	0xFF7
 25740                           tblptrl	equ	0xFF6
 25741                           tablat	equ	0xFF5
 25742                           prodh	equ	0xFF4
 25743                           prodl	equ	0xFF3
 25744                           intcon	equ	0xFF2
 25745                           intcon2	equ	0xFF1
 25746                           intcon3	equ	0xFF0
 25747                           indf0	equ	0xFEF
 25748                           postinc0	equ	0xFEE
 25749                           fsr0h	equ	0xFEA
 25750                           fsr0l	equ	0xFE9
 25751                           wreg	equ	0xFE8
 25752                           postinc1	equ	0xFE6
 25753                           postdec1	equ	0xFE5
 25754                           plusw1	equ	0xFE3
 25755                           fsr1h	equ	0xFE2
 25756                           fsr1l	equ	0xFE1
 25757                           indf2	equ	0xFDF
 25758                           postinc2	equ	0xFDE
 25759                           postdec2	equ	0xFDD
 25760                           plusw2	equ	0xFDB
 25761                           fsr2h	equ	0xFDA
 25762                           fsr2l	equ	0xFD9
 25763                           status	equ	0xFD8
 25764                           
 25765 ;; *************** function _UpdateJoinInProgress *****************
 25766 ;; Defined at:
 25767 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 25768 ;; Parameters:    Size  Location     Type
 25769 ;;  state           1    wreg     unsigned char 
 25770 ;; Auto vars:     Size  Location     Type
 25771 ;;  state           1    0[BANK0 ] unsigned char 
 25772 ;; Return value:  Size  Location     Type
 25773 ;;                  1    wreg      void 
 25774 ;; Registers used:
 25775 ;;		wreg, status,2, status,0
 25776 ;; Tracked objects:
 25777 ;;		On entry : 0/0
 25778 ;;		On exit  : 0/0
 25779 ;;		Unchanged: 0/0
 25780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25782 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25784 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25785 ;;Total ram usage:        1 bytes
 25786 ;; Hardware stack levels used:    1
 25787 ;; Hardware stack levels required when called:    7
 25788 ;; This function calls:
 25789 ;;		Nothing
 25790 ;; This function is called by:
 25791 ;;		_LORAWAN_Join
 25792 ;; This function uses a non-reentrant model
 25793 ;;
 25794                           
 25795                           	psect	text118
 25796  0000'                    __ptext118:
 25797                           	opt stack 0
 25798  0000'                    _UpdateJoinInProgress:
 25799                           	opt stack 22
 25800                           
 25801                           ;incstack = 0
 25802                           ;UpdateJoinInProgress@state stored from wreg
 25803  0000' 0100               	movlb	0	; () banked
 25804  0002' 6F00'              	movwf	UpdateJoinInProgress@state& (0+255),b
 25805                           
 25806                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 25807  0004' 0102               	movlb	2	; () banked
 25808  0006' 9900'              	bcf	(_loRa+2)& (0+255),4,b
 25809                           
 25810                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 25811  0008' 8500'              	bsf	_loRa& (0+255),2,b
 25812                           
 25813                           ; BSR set to: 2
 25814                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 25815  000A' 5100'              	movf	(_loRa+2)& (0+255),w,b
 25816  000C' 0100               	movlb	0	; () banked
 25817  000E' 1900'              	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 25818  0010' 0BF0               	andlw	-16
 25819  0012' 1900'              	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 25820  0014' 0102               	movlb	2	; () banked
 25821  0016' 6F00'              	movwf	(_loRa+2)& (0+255),b
 25822                           
 25823                           ; BSR set to: 2
 25824  0018' 0012               	return		;funcret
 25825  001A'                    __end_of_UpdateJoinInProgress:
 25826                           	opt stack 0
 25827                           tosu	equ	0xFFF
 25828                           tosh	equ	0xFFE
 25829                           tosl	equ	0xFFD
 25830                           pclath	equ	0xFFA
 25831                           tblptru	equ	0xFF8
 25832                           tblptrh	equ	0xFF7
 25833                           tblptrl	equ	0xFF6
 25834                           tablat	equ	0xFF5
 25835                           prodh	equ	0xFF4
 25836                           prodl	equ	0xFF3
 25837                           intcon	equ	0xFF2
 25838                           intcon2	equ	0xFF1
 25839                           intcon3	equ	0xFF0
 25840                           indf0	equ	0xFEF
 25841                           postinc0	equ	0xFEE
 25842                           fsr0h	equ	0xFEA
 25843                           fsr0l	equ	0xFE9
 25844                           wreg	equ	0xFE8
 25845                           postinc1	equ	0xFE6
 25846                           postdec1	equ	0xFE5
 25847                           plusw1	equ	0xFE3
 25848                           fsr1h	equ	0xFE2
 25849                           fsr1l	equ	0xFE1
 25850                           indf2	equ	0xFDF
 25851                           postinc2	equ	0xFDE
 25852                           postdec2	equ	0xFDD
 25853                           plusw2	equ	0xFDB
 25854                           fsr2h	equ	0xFDA
 25855                           fsr2l	equ	0xFD9
 25856                           status	equ	0xFD8
 25857                           
 25858 ;; *************** function _SelectChannelForTransmission *****************
 25859 ;; Defined at:
 25860 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 25861 ;; Parameters:    Size  Location     Type
 25862 ;;  transmission    1    wreg     unsigned char 
 25863 ;; Auto vars:     Size  Location     Type
 25864 ;;  transmission    1   91[BANK0 ] unsigned char 
 25865 ;;  channelIndex    1   93[BANK0 ] unsigned char 
 25866 ;;  result          1   92[BANK0 ] enum E7249
 25867 ;; Return value:  Size  Location     Type
 25868 ;;                  1    wreg      enum E7249
 25869 ;; Registers used:
 25870 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25871 ;; Tracked objects:
 25872 ;;		On entry : 0/0
 25873 ;;		On exit  : 0/0
 25874 ;;		Unchanged: 0/0
 25875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25877 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25879 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25880 ;;Total ram usage:        3 bytes
 25881 ;; Hardware stack levels used:    1
 25882 ;; Hardware stack levels required when called:   11
 25883 ;; This function calls:
 25884 ;;		_ConfigureRadioTx
 25885 ;;		_SearchAvailableChannel
 25886 ;; This function is called by:
 25887 ;;		_LORAWAN_RxTimeout
 25888 ;;		_LORAWAN_Join
 25889 ;;		_LORAWAN_Send
 25890 ;;		_AckRetransmissionCallback
 25891 ;;		_UnconfirmedTransmissionCallback
 25892 ;; This function uses a non-reentrant model
 25893 ;;
 25894                           
 25895                           	psect	text119
 25896  0000'                    __ptext119:
 25897                           	opt stack 0
 25898  0000'                    _SelectChannelForTransmission:
 25899                           	opt stack 18
 25900                           
 25901                           ; BSR set to: 2
 25902                           ;incstack = 0
 25903                           ;SelectChannelForTransmission@transmissionType stored from wreg
 25904  0000' 0100               	movlb	0	; () banked
 25905  0002' 6F00'              	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 25906                           
 25907                           ;lorawan_eu.c: 921: LorawanError_t result = OK;
 25908  0004' 0E00               	movlw	0
 25909  0006' 0100               	movlb	0	; () banked
 25910  0008' 6F00'              	movwf	SelectChannelForTransmission@result& (0+255),b
 25911                           
 25912                           ; BSR set to: 0
 25913                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 25914                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 25915  000A' C05B' F04F'        	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 25916  000E' 0E00'              	movlw	low SelectChannelForTransmission@channelIndex
 25917  0010' 6F00'              	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 25918  0012' 0E00'              	movlw	high SelectChannelForTransmission@channelIndex
 25919  0014' 6F00'              	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 25920  0016' 0E10               	movlw	16
 25921  0018' EC00' F000'        	call	_SearchAvailableChannel
 25922  001C' 0100               	movlb	0	; () banked
 25923  001E' 6F00'              	movwf	SelectChannelForTransmission@result& (0+255),b
 25924                           
 25925                           ; BSR set to: 0
 25926                           ;lorawan_eu.c: 926: if (result == OK)
 25927  0020' 5100'              	movf	SelectChannelForTransmission@result& (0+255),w,b
 25928  0022' A4D8               	btfss	status,2,c
 25929  0024' D020               	goto	l1192
 25930                           
 25931                           ; BSR set to: 0
 25932                           ;lorawan_eu.c: 927: {
 25933                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 25934  0026' C05D' F0DA'        	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 25935                           
 25936                           ; BSR set to: 0
 25937                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 25938  002A' 5100'              	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 25939  002C' 0D0E               	mullw	14
 25940  002E' 0E00'              	movlw	low _Channels
 25941  0030' 24F3               	addwf	prodl,w,c
 25942  0032' 6ED9               	movwf	fsr2l,c
 25943  0034' 0E00'              	movlw	high _Channels
 25944  0036' 20F4               	addwfc	prodh,w,c
 25945  0038' 6EDA               	movwf	fsr2h,c
 25946  003A' CFDE F013'         	movff	postinc2,_loRa+19
 25947  003E' CFDE F014'         	movff	postinc2,_loRa+20
 25948  0042' CFDE F015'         	movff	postinc2,_loRa+21
 25949  0046' CFDE F016'         	movff	postinc2,_loRa+22
 25950                           
 25951                           ; BSR set to: 0
 25952                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 25953  004A' C0DF' F017'        	movff	_loRa+223,_loRa+23
 25954                           
 25955                           ; BSR set to: 0
 25956                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 25957  004E' C013' F013'        	movff	_loRa+19,ConfigureRadioTx@freq
 25958  0052' C014' F014'        	movff	_loRa+20,ConfigureRadioTx@freq+1
 25959  0056' C015' F015'        	movff	_loRa+21,ConfigureRadioTx@freq+2
 25960  005A' C016' F016'        	movff	_loRa+22,ConfigureRadioTx@freq+3
 25961  005E' 0102               	movlb	2	; () banked
 25962  0060' 5100'              	movf	(_loRa+23)& (0+255),w,b
 25963  0062' EC00' F000'        	call	_ConfigureRadioTx
 25964  0066'                    l1192:
 25965                           
 25966                           ;lorawan_eu.c: 933: }
 25967                           ;lorawan_eu.c: 934: return result;
 25968  0066' 0100               	movlb	0	; () banked
 25969  0068' 5100'              	movf	SelectChannelForTransmission@result& (0+255),w,b
 25970  006A' 0012               	return	
 25971  006C'                    __end_of_SelectChannelForTransmission:
 25972                           	opt stack 0
 25973                           tosu	equ	0xFFF
 25974                           tosh	equ	0xFFE
 25975                           tosl	equ	0xFFD
 25976                           pclath	equ	0xFFA
 25977                           tblptru	equ	0xFF8
 25978                           tblptrh	equ	0xFF7
 25979                           tblptrl	equ	0xFF6
 25980                           tablat	equ	0xFF5
 25981                           prodh	equ	0xFF4
 25982                           prodl	equ	0xFF3
 25983                           intcon	equ	0xFF2
 25984                           intcon2	equ	0xFF1
 25985                           intcon3	equ	0xFF0
 25986                           indf0	equ	0xFEF
 25987                           postinc0	equ	0xFEE
 25988                           fsr0h	equ	0xFEA
 25989                           fsr0l	equ	0xFE9
 25990                           wreg	equ	0xFE8
 25991                           postinc1	equ	0xFE6
 25992                           postdec1	equ	0xFE5
 25993                           plusw1	equ	0xFE3
 25994                           fsr1h	equ	0xFE2
 25995                           fsr1l	equ	0xFE1
 25996                           indf2	equ	0xFDF
 25997                           postinc2	equ	0xFDE
 25998                           postdec2	equ	0xFDD
 25999                           plusw2	equ	0xFDB
 26000                           fsr2h	equ	0xFDA
 26001                           fsr2l	equ	0xFD9
 26002                           status	equ	0xFD8
 26003                           
 26004 ;; *************** function _SearchAvailableChannel *****************
 26005 ;; Defined at:
 26006 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26007 ;; Parameters:    Size  Location     Type
 26008 ;;  maxChannels     1    wreg     unsigned char 
 26009 ;;  transmission    1   79[BANK0 ] unsigned char 
 26010 ;;  channelIndex    2   80[BANK0 ] PTR unsigned char 
 26011 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 26012 ;; Auto vars:     Size  Location     Type
 26013 ;;  maxChannels     1   88[BANK0 ] unsigned char 
 26014 ;;  i               1   90[BANK0 ] unsigned char 
 26015 ;;  randomNumber    1   89[BANK0 ] unsigned char 
 26016 ;;  result          1   87[BANK0 ] enum E7249
 26017 ;;  randomNumber    1   86[BANK0 ] unsigned char 
 26018 ;; Return value:  Size  Location     Type
 26019 ;;                  1    wreg      enum E7249
 26020 ;; Registers used:
 26021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26022 ;; Tracked objects:
 26023 ;;		On entry : 0/0
 26024 ;;		On exit  : 0/0
 26025 ;;		Unchanged: 0/0
 26026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26027 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26028 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26029 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26030 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26031 ;;Total ram usage:       12 bytes
 26032 ;; Hardware stack levels used:    1
 26033 ;; Hardware stack levels required when called:   10
 26034 ;; This function calls:
 26035 ;;		_Random
 26036 ;; This function is called by:
 26037 ;;		_SelectChannelForTransmission
 26038 ;;		_LORAWAN_RxDone
 26039 ;; This function uses a non-reentrant model
 26040 ;;
 26041                           
 26042                           	psect	text120
 26043  0000'                    __ptext120:
 26044                           	opt stack 0
 26045  0000'                    _SearchAvailableChannel:
 26046                           	opt stack 18
 26047                           
 26048                           ; BSR set to: 0
 26049                           ;incstack = 0
 26050                           ;SearchAvailableChannel@maxChannels stored from wreg
 26051  0000' 0100               	movlb	0	; () banked
 26052  0002' 6F00'              	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 26053                           
 26054                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 26055                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 26056  0004' 0E00               	movlw	0
 26057  0006' 0100               	movlb	0	; () banked
 26058  0008' 6F00'              	movwf	SearchAvailableChannel@result& (0+255),b
 26059                           
 26060                           ; BSR set to: 0
 26061                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 26062  000A' C058' F04D'        	movff	SearchAvailableChannel@maxChannels,Random@max
 26063  000E' 6B00'              	clrf	(Random@max+1)& (0+255),b
 26064  0010' EC00' F000'        	call	_Random	;wreg free
 26065  0014' 0100               	movlb	0	; () banked
 26066  0016' 2900'              	incf	?_Random& (0+255),w,b
 26067  0018' 6F00'              	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 26068                           
 26069                           ; BSR set to: 0
 26070                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 26071  001A' C059' F056'        	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 26072                           
 26073                           ;lorawan_eu.c: 786: while (randomNumber)
 26074  001E' D074               	goto	l1156
 26075  0020'                    
 26076                           ; BSR set to: 0
 26077                           ;lorawan_eu.c: 787: {
 26078                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 26079                           
 26080                           ; BSR set to: 0
 26081  0020' 0E00               	movlw	0
 26082  0022' 6F00'              	movwf	SearchAvailableChannel@i& (0+255),b
 26083  0024' D063               	goto	l1147
 26084  0026'                    
 26085                           ; BSR set to: 0
 26086                           ;lorawan_eu.c: 789: {
 26087                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 26088                           
 26089                           ; BSR set to: 0
 26090  0026' 5100'              	movf	SearchAvailableChannel@i& (0+255),w,b
 26091  0028' 0D0E               	mullw	14
 26092  002A' 0E04               	movlw	4
 26093  002C' 26F3               	addwf	prodl,f,c
 26094  002E' 0E00               	movlw	0
 26095  0030' 22F4               	addwfc	prodh,f,c
 26096  0032' 0E00'              	movlw	low _Channels
 26097  0034' 24F3               	addwf	prodl,w,c
 26098  0036' 6ED9               	movwf	fsr2l,c
 26099  0038' 0E00'              	movlw	high _Channels
 26100  003A' 20F4               	addwfc	prodh,w,c
 26101  003C' 6EDA               	movwf	fsr2h,c
 26102  003E' 04DE               	decf	postinc2,w,c
 26103  0040' A4D8               	btfss	status,2,c
 26104  0042' D052               	goto	l1152
 26105                           
 26106                           ; BSR set to: 0
 26107  0044' 5100'              	movf	SearchAvailableChannel@i& (0+255),w,b
 26108  0046' 0D0E               	mullw	14
 26109  0048' 0E08               	movlw	8
 26110  004A' 26F3               	addwf	prodl,f,c
 26111  004C' 0E00               	movlw	0
 26112  004E' 22F4               	addwfc	prodh,f,c
 26113  0050' 0E00'              	movlw	low _Channels
 26114  0052' 24F3               	addwf	prodl,w,c
 26115  0054' 6ED9               	movwf	fsr2l,c
 26116  0056' 0E00'              	movlw	high _Channels
 26117  0058' 20F4               	addwfc	prodh,w,c
 26118  005A' 6EDA               	movwf	fsr2h,c
 26119  005C' 50DE               	movf	postinc2,w,c
 26120  005E' 10DE               	iorwf	postinc2,w,c
 26121  0060' 10DE               	iorwf	postinc2,w,c
 26122  0062' 10DE               	iorwf	postinc2,w,c
 26123  0064' A4D8               	btfss	status,2,c
 26124  0066' D040               	goto	l1152
 26125                           
 26126                           ; BSR set to: 0
 26127  0068' 5100'              	movf	SearchAvailableChannel@i& (0+255),w,b
 26128  006A' 0D0E               	mullw	14
 26129  006C' 0E05               	movlw	5
 26130  006E' 26F3               	addwf	prodl,f,c
 26131  0070' 0E00               	movlw	0
 26132  0072' 22F4               	addwfc	prodh,f,c
 26133  0074' 0E00'              	movlw	low _Channels
 26134  0076' 24F3               	addwf	prodl,w,c
 26135  0078' 6ED9               	movwf	fsr2l,c
 26136  007A' 0E00'              	movlw	high _Channels
 26137  007C' 20F4               	addwfc	prodh,w,c
 26138  007E' 6EDA               	movwf	fsr2h,c
 26139  0080' 0104               	movlb	4	; () banked
 26140  0082' 50DF               	movf	223,w,c
 26141  0084' 0B0F               	andlw	15
 26142  0086' 0100               	movlb	0	; () banked
 26143  0088' 6F00'              	movwf	??_SearchAvailableChannel& (0+255),b
 26144  008A' 5100'              	movf	??_SearchAvailableChannel& (0+255),w,b
 26145  008C' 0102               	movlb	2	; () banked
 26146  008E' 5D00'              	subwf	(_loRa+223)& (0+255),w,b
 26147  0090' A0D8               	btfss	status,0,c
 26148  0092' D02A               	goto	l1152
 26149                           
 26150                           ; BSR set to: 2
 26151  0094' 0100               	movlb	0	; () banked
 26152  0096' 5100'              	movf	SearchAvailableChannel@i& (0+255),w,b
 26153  0098' 0D0E               	mullw	14
 26154  009A' 0E05               	movlw	5
 26155  009C' 26F3               	addwf	prodl,f,c
 26156  009E' 0E00               	movlw	0
 26157  00A0' 22F4               	addwfc	prodh,f,c
 26158  00A2' 0E00'              	movlw	low _Channels
 26159  00A4' 24F3               	addwf	prodl,w,c
 26160  00A6' 6ED9               	movwf	fsr2l,c
 26161  00A8' 0E00'              	movlw	high _Channels
 26162  00AA' 20F4               	addwfc	prodh,w,c
 26163  00AC' 6EDA               	movwf	fsr2h,c
 26164  00AE' 0104               	movlb	4	; () banked
 26165  00B0' 38DF               	swapf	223,w,c
 26166  00B2' 0B0F               	andlw	15
 26167  00B4' 0100               	movlb	0	; () banked
 26168  00B6' 6F00'              	movwf	??_SearchAvailableChannel& (0+255),b
 26169  00B8' 0102               	movlb	2	; () banked
 26170  00BA' 5100'              	movf	(_loRa+223)& (0+255),w,b
 26171  00BC' 0100               	movlb	0	; () banked
 26172  00BE' 5D00'              	subwf	??_SearchAvailableChannel& (0+255),w,b
 26173  00C0' A0D8               	btfss	status,0,c
 26174  00C2' D012               	goto	l1152
 26175                           
 26176                           ; BSR set to: 0
 26177                           ;lorawan_eu.c: 791: {
 26178                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 26179  00C4' 5100'              	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 26180  00C6' A4D8               	btfss	status,2,c
 26181  00C8' D00E               	goto	l1150
 26182                           
 26183                           ; BSR set to: 0
 26184                           ;lorawan_eu.c: 793: {
 26185                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 26186  00CA' 5100'              	movf	SearchAvailableChannel@i& (0+255),w,b
 26187  00CC' 0D0E               	mullw	14
 26188  00CE' 0E0C               	movlw	12
 26189  00D0' 26F3               	addwf	prodl,f,c
 26190  00D2' 0E00               	movlw	0
 26191  00D4' 22F4               	addwfc	prodh,f,c
 26192  00D6' 0E00'              	movlw	low _Channels
 26193  00D8' 24F3               	addwf	prodl,w,c
 26194  00DA' 6ED9               	movwf	fsr2l,c
 26195  00DC' 0E00'              	movlw	high _Channels
 26196  00DE' 20F4               	addwfc	prodh,w,c
 26197  00E0' 6EDA               	movwf	fsr2h,c
 26198  00E2' 04DE               	decf	postinc2,w,c
 26199  00E4' B4D8               	btfsc	status,2,c
 26200  00E6'                    l1150:
 26201                           
 26202                           ; BSR set to: 0
 26203                           ;lorawan_eu.c: 799: else
 26204                           ;lorawan_eu.c: 800: {
 26205                           ;lorawan_eu.c: 801: randomNumber --;
 26206                           
 26207                           ; BSR set to: 0
 26208  00E6' 0700'              	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 26209  00E8'                    l1152:
 26210                           
 26211                           ; BSR set to: 0
 26212  00E8' 0100               	movlb	0	; () banked
 26213  00EA' 2B00'              	incf	SearchAvailableChannel@i& (0+255),f,b
 26214  00EC'                    l1147:
 26215                           
 26216                           ; BSR set to: 0
 26217                           
 26218                           ; BSR set to: 0
 26219  00EC' 5100'              	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 26220  00EE' 5D00'              	subwf	SearchAvailableChannel@i& (0+255),w,b
 26221  00F0' B0D8               	btfsc	status,0,c
 26222  00F2' D003               	goto	u16000
 26223                           
 26224                           ; BSR set to: 0
 26225  00F4' 5100'              	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 26226  00F6' A4D8               	btfss	status,2,c
 26227  00F8' D796               	goto	l1148
 26228  00FA'                    u16000:
 26229                           
 26230                           ; BSR set to: 0
 26231                           ;lorawan_eu.c: 802: }
 26232                           ;lorawan_eu.c: 803: }
 26233                           ;lorawan_eu.c: 804: }
 26234                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 26235                           
 26236                           ; BSR set to: 0
 26237                           
 26238                           ; BSR set to: 0
 26239  00FA' 5100'              	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 26240  00FC' 1900'              	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 26241  00FE' A4D8               	btfss	status,2,c
 26242  0100' D003               	goto	l1156
 26243                           
 26244                           ; BSR set to: 0
 26245                           ;lorawan_eu.c: 807: {
 26246                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 26247  0102' 0E09               	movlw	9
 26248  0104' 6F00'              	movwf	SearchAvailableChannel@result& (0+255),b
 26249                           
 26250                           ;lorawan_eu.c: 809: break;
 26251  0106' D003               	goto	u16020
 26252  0108'                    l1156:
 26253                           
 26254                           ; BSR set to: 0
 26255                           
 26256                           ; BSR set to: 0
 26257                           
 26258                           ; BSR set to: 0
 26259  0108' 5100'              	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 26260  010A' A4D8               	btfss	status,2,c
 26261  010C' D789               	goto	l1146
 26262  010E'                    u16020:
 26263                           
 26264                           ; BSR set to: 0
 26265                           ;lorawan_eu.c: 810: }
 26266                           ;lorawan_eu.c: 811: }
 26267                           ;lorawan_eu.c: 813: if ( i != 0)
 26268                           
 26269                           ; BSR set to: 0
 26270  010E' 5100'              	movf	SearchAvailableChannel@i& (0+255),w,b
 26271  0110' B4D8               	btfsc	status,2,c
 26272  0112' D007               	goto	l1158
 26273                           
 26274                           ; BSR set to: 0
 26275                           ;lorawan_eu.c: 814: {
 26276                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 26277  0114' 0500'              	decf	SearchAvailableChannel@i& (0+255),w,b
 26278  0116' C050' FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 26279  011A' C051' FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 26280  011E' 6EDF               	movwf	indf2,c
 26281                           
 26282                           ;lorawan_eu.c: 816: }
 26283  0120' D002               	goto	l1159
 26284  0122'                    l1158:
 26285                           
 26286                           ; BSR set to: 0
 26287                           ;lorawan_eu.c: 817: else
 26288                           ;lorawan_eu.c: 818: {
 26289                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 26290                           
 26291                           ; BSR set to: 0
 26292  0122' 0E09               	movlw	9
 26293  0124' 6F00'              	movwf	SearchAvailableChannel@result& (0+255),b
 26294  0126'                    l1159:
 26295                           
 26296                           ; BSR set to: 0
 26297                           ;lorawan_eu.c: 820: }
 26298                           ;lorawan_eu.c: 821: return result;
 26299  0126' 5100'              	movf	SearchAvailableChannel@result& (0+255),w,b
 26300  0128' 0012               	return	
 26301  012A'                    __end_of_SearchAvailableChannel:
 26302                           	opt stack 0
 26303                           tosu	equ	0xFFF
 26304                           tosh	equ	0xFFE
 26305                           tosl	equ	0xFFD
 26306                           pclath	equ	0xFFA
 26307                           tblptru	equ	0xFF8
 26308                           tblptrh	equ	0xFF7
 26309                           tblptrl	equ	0xFF6
 26310                           tablat	equ	0xFF5
 26311                           prodh	equ	0xFF4
 26312                           prodl	equ	0xFF3
 26313                           intcon	equ	0xFF2
 26314                           intcon2	equ	0xFF1
 26315                           intcon3	equ	0xFF0
 26316                           indf0	equ	0xFEF
 26317                           postinc0	equ	0xFEE
 26318                           fsr0h	equ	0xFEA
 26319                           fsr0l	equ	0xFE9
 26320                           wreg	equ	0xFE8
 26321                           postinc1	equ	0xFE6
 26322                           postdec1	equ	0xFE5
 26323                           plusw1	equ	0xFE3
 26324                           fsr1h	equ	0xFE2
 26325                           fsr1l	equ	0xFE1
 26326                           indf2	equ	0xFDF
 26327                           postinc2	equ	0xFDE
 26328                           postdec2	equ	0xFDD
 26329                           plusw2	equ	0xFDB
 26330                           fsr2h	equ	0xFDA
 26331                           fsr2l	equ	0xFD9
 26332                           status	equ	0xFD8
 26333                           
 26334 ;; *************** function _ConfigureRadioTx *****************
 26335 ;; Defined at:
 26336 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26337 ;; Parameters:    Size  Location     Type
 26338 ;;  dataRate        1    wreg     unsigned char 
 26339 ;;  freq            4   19[BANK0 ] unsigned long 
 26340 ;; Auto vars:     Size  Location     Type
 26341 ;;  dataRate        1   23[BANK0 ] unsigned char 
 26342 ;;  txPower         1   24[BANK0 ] char 
 26343 ;; Return value:  Size  Location     Type
 26344 ;;                  1    wreg      void 
 26345 ;; Registers used:
 26346 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26347 ;; Tracked objects:
 26348 ;;		On entry : 0/0
 26349 ;;		On exit  : 0/0
 26350 ;;		Unchanged: 0/0
 26351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26352 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26353 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26355 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26356 ;;Total ram usage:        6 bytes
 26357 ;; Hardware stack levels used:    1
 26358 ;; Hardware stack levels required when called:   10
 26359 ;; This function calls:
 26360 ;;		_ConfigureRadio
 26361 ;;		_RADIO_SetCRC
 26362 ;;		_RADIO_SetIQInverted
 26363 ;;		_RADIO_SetOutputPower
 26364 ;; This function is called by:
 26365 ;;		_SelectChannelForTransmission
 26366 ;; This function uses a non-reentrant model
 26367 ;;
 26368                           
 26369                           	psect	text121
 26370  0000'                    __ptext121:
 26371                           	opt stack 0
 26372  0000'                    _ConfigureRadioTx:
 26373                           	opt stack 18
 26374                           
 26375                           ; BSR set to: 0
 26376                           ;incstack = 0
 26377                           ;ConfigureRadioTx@dataRate stored from wreg
 26378  0000' 0100               	movlb	0	; () banked
 26379  0002' 6F00'              	movwf	ConfigureRadioTx@dataRate& (0+255),b
 26380                           
 26381                           ;lorawan_eu.c: 1257: int8_t txPower;
 26382                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 26383  0004' C013' F00E'        	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 26384  0008' C014' F00F'        	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 26385  000C' C015' F010'        	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 26386  0010' C016' F011'        	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 26387  0014' 0100               	movlb	0	; () banked
 26388  0016' 5100'              	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 26389  0018' EC00' F000'        	call	_ConfigureRadio
 26390                           
 26391                           ;lorawan_eu.c: 1261: if (ISM_EU868 == loRa.ismBand)
 26392  001C' 0102               	movlb	2	; () banked
 26393  001E' 5100'              	movf	(_loRa+164)& (0+255),w,b
 26394                           
 26395                           ; BSR set to: 2
 26396                           ;lorawan_eu.c: 1265: else
 26397                           ;lorawan_eu.c: 1266: {
 26398                           ;lorawan_eu.c: 1267: txPower = txPower868[loRa.txPower];
 26399                           
 26400                           ; BSR set to: 2
 26401                           
 26402                           ;lorawan_eu.c: 1264: }
 26403                           
 26404                           ; BSR set to: 2
 26405                           ;lorawan_eu.c: 1262: {
 26406                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 26407  0020' 5100'              	movf	(_loRa+225)& (0+255),w,b
 26408  0022' 0D01               	mullw	1
 26409  0024' 0E00'              	movlw	low _txPower868
 26410  0026' 24F3               	addwf	prodl,w,c
 26411  0028' 6EF6               	movwf	tblptrl,c
 26412  002A' 0E00'              	movlw	high _txPower868
 26413  002C' 20F4               	addwfc	prodh,w,c
 26414  002E' 6EF7               	movwf	tblptrh,c
 26415  0030'                    	if	1	;There are 3 active tblptr bytes
 26416  0030' 6AF8               	clrf	tblptru,c
 26417  0032' 0E00'              	movlw	low (__mediumconst shr (0+16))
 26418  0034' 22F8               	addwfc	tblptru,f,c
 26419  0036'                    	endif
 26420  0036' 0008               	tblrd		*
 26421  0038' CFF5 F018'         	movff	tablat,ConfigureRadioTx@txPower
 26422                           
 26423                           ; BSR set to: 2
 26424                           ;lorawan_eu.c: 1268: }
 26425                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 26426                           
 26427                           ; BSR set to: 2
 26428  003C' 0100               	movlb	0	; () banked
 26429  003E' 5100'              	movf	ConfigureRadioTx@txPower& (0+255),w,b
 26430  0040' EC00' F000'        	call	_RADIO_SetOutputPower
 26431                           
 26432                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 26433  0044' 0E01               	movlw	1
 26434  0046' EC00' F000'        	call	_RADIO_SetCRC
 26435                           
 26436                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 26437  004A' 0E00               	movlw	0
 26438  004C' EC00' F000'        	call	_RADIO_SetIQInverted
 26439  0050' 0012               	return		;funcret
 26440  0052'                    __end_of_ConfigureRadioTx:
 26441                           	opt stack 0
 26442                           tosu	equ	0xFFF
 26443                           tosh	equ	0xFFE
 26444                           tosl	equ	0xFFD
 26445                           pclath	equ	0xFFA
 26446                           tblptru	equ	0xFF8
 26447                           tblptrh	equ	0xFF7
 26448                           tblptrl	equ	0xFF6
 26449                           tablat	equ	0xFF5
 26450                           prodh	equ	0xFF4
 26451                           prodl	equ	0xFF3
 26452                           intcon	equ	0xFF2
 26453                           intcon2	equ	0xFF1
 26454                           intcon3	equ	0xFF0
 26455                           indf0	equ	0xFEF
 26456                           postinc0	equ	0xFEE
 26457                           fsr0h	equ	0xFEA
 26458                           fsr0l	equ	0xFE9
 26459                           wreg	equ	0xFE8
 26460                           postinc1	equ	0xFE6
 26461                           postdec1	equ	0xFE5
 26462                           plusw1	equ	0xFE3
 26463                           fsr1h	equ	0xFE2
 26464                           fsr1l	equ	0xFE1
 26465                           indf2	equ	0xFDF
 26466                           postinc2	equ	0xFDE
 26467                           postdec2	equ	0xFDD
 26468                           plusw2	equ	0xFDB
 26469                           fsr2h	equ	0xFDA
 26470                           fsr2l	equ	0xFD9
 26471                           status	equ	0xFD8
 26472                           
 26473 ;; *************** function _RADIO_SetOutputPower *****************
 26474 ;; Defined at:
 26475 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26476 ;; Parameters:    Size  Location     Type
 26477 ;;  power           1    wreg     char 
 26478 ;; Auto vars:     Size  Location     Type
 26479 ;;  power           1    0[BANK0 ] char 
 26480 ;; Return value:  Size  Location     Type
 26481 ;;                  1    wreg      void 
 26482 ;; Registers used:
 26483 ;;		wreg
 26484 ;; Tracked objects:
 26485 ;;		On entry : 0/0
 26486 ;;		On exit  : 0/0
 26487 ;;		Unchanged: 0/0
 26488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26490 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26492 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26493 ;;Total ram usage:        1 bytes
 26494 ;; Hardware stack levels used:    1
 26495 ;; Hardware stack levels required when called:    7
 26496 ;; This function calls:
 26497 ;;		Nothing
 26498 ;; This function is called by:
 26499 ;;		_ConfigureRadioTx
 26500 ;; This function uses a non-reentrant model
 26501 ;;
 26502                           
 26503                           	psect	text122
 26504  0000'                    __ptext122:
 26505                           	opt stack 0
 26506  0000'                    _RADIO_SetOutputPower:
 26507                           	opt stack 20
 26508                           
 26509                           ;incstack = 0
 26510                           ;RADIO_SetOutputPower@power stored from wreg
 26511  0000' 0100               	movlb	0	; () banked
 26512  0002' 6F00'              	movwf	RADIO_SetOutputPower@power& (0+255),b
 26513                           
 26514                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 26515  0004' C000' F02D'        	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 26516  0008' 0012               	return		;funcret
 26517  000A'                    __end_of_RADIO_SetOutputPower:
 26518                           	opt stack 0
 26519                           tosu	equ	0xFFF
 26520                           tosh	equ	0xFFE
 26521                           tosl	equ	0xFFD
 26522                           pclath	equ	0xFFA
 26523                           tblptru	equ	0xFF8
 26524                           tblptrh	equ	0xFF7
 26525                           tblptrl	equ	0xFF6
 26526                           tablat	equ	0xFF5
 26527                           prodh	equ	0xFF4
 26528                           prodl	equ	0xFF3
 26529                           intcon	equ	0xFF2
 26530                           intcon2	equ	0xFF1
 26531                           intcon3	equ	0xFF0
 26532                           indf0	equ	0xFEF
 26533                           postinc0	equ	0xFEE
 26534                           fsr0h	equ	0xFEA
 26535                           fsr0l	equ	0xFE9
 26536                           wreg	equ	0xFE8
 26537                           postinc1	equ	0xFE6
 26538                           postdec1	equ	0xFE5
 26539                           plusw1	equ	0xFE3
 26540                           fsr1h	equ	0xFE2
 26541                           fsr1l	equ	0xFE1
 26542                           indf2	equ	0xFDF
 26543                           postinc2	equ	0xFDE
 26544                           postdec2	equ	0xFDD
 26545                           plusw2	equ	0xFDB
 26546                           fsr2h	equ	0xFDA
 26547                           fsr2l	equ	0xFD9
 26548                           status	equ	0xFD8
 26549                           
 26550 ;; *************** function _RADIO_SetIQInverted *****************
 26551 ;; Defined at:
 26552 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26553 ;; Parameters:    Size  Location     Type
 26554 ;;  iqInverted      1    wreg     unsigned char 
 26555 ;; Auto vars:     Size  Location     Type
 26556 ;;  iqInverted      1    0[BANK0 ] unsigned char 
 26557 ;; Return value:  Size  Location     Type
 26558 ;;                  1    wreg      void 
 26559 ;; Registers used:
 26560 ;;		wreg
 26561 ;; Tracked objects:
 26562 ;;		On entry : 0/0
 26563 ;;		On exit  : 0/0
 26564 ;;		Unchanged: 0/0
 26565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26569 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26570 ;;Total ram usage:        1 bytes
 26571 ;; Hardware stack levels used:    1
 26572 ;; Hardware stack levels required when called:    7
 26573 ;; This function calls:
 26574 ;;		Nothing
 26575 ;; This function is called by:
 26576 ;;		_ConfigureRadioTx
 26577 ;;		_ConfigureRadioRx
 26578 ;; This function uses a non-reentrant model
 26579 ;;
 26580                           
 26581                           	psect	text123
 26582  0000'                    __ptext123:
 26583                           	opt stack 0
 26584  0000'                    _RADIO_SetIQInverted:
 26585                           	opt stack 20
 26586                           
 26587                           ;incstack = 0
 26588                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 26589  0000' 0100               	movlb	0	; () banked
 26590  0002' 6F00'              	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 26591                           
 26592                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 26593  0004' C000' F032'        	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 26594  0008' 0012               	return		;funcret
 26595  000A'                    __end_of_RADIO_SetIQInverted:
 26596                           	opt stack 0
 26597                           tosu	equ	0xFFF
 26598                           tosh	equ	0xFFE
 26599                           tosl	equ	0xFFD
 26600                           pclath	equ	0xFFA
 26601                           tblptru	equ	0xFF8
 26602                           tblptrh	equ	0xFF7
 26603                           tblptrl	equ	0xFF6
 26604                           tablat	equ	0xFF5
 26605                           prodh	equ	0xFF4
 26606                           prodl	equ	0xFF3
 26607                           intcon	equ	0xFF2
 26608                           intcon2	equ	0xFF1
 26609                           intcon3	equ	0xFF0
 26610                           indf0	equ	0xFEF
 26611                           postinc0	equ	0xFEE
 26612                           fsr0h	equ	0xFEA
 26613                           fsr0l	equ	0xFE9
 26614                           wreg	equ	0xFE8
 26615                           postinc1	equ	0xFE6
 26616                           postdec1	equ	0xFE5
 26617                           plusw1	equ	0xFE3
 26618                           fsr1h	equ	0xFE2
 26619                           fsr1l	equ	0xFE1
 26620                           indf2	equ	0xFDF
 26621                           postinc2	equ	0xFDE
 26622                           postdec2	equ	0xFDD
 26623                           plusw2	equ	0xFDB
 26624                           fsr2h	equ	0xFDA
 26625                           fsr2l	equ	0xFD9
 26626                           status	equ	0xFD8
 26627                           
 26628 ;; *************** function _RADIO_SetCRC *****************
 26629 ;; Defined at:
 26630 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26631 ;; Parameters:    Size  Location     Type
 26632 ;;  crc             1    wreg     unsigned char 
 26633 ;; Auto vars:     Size  Location     Type
 26634 ;;  crc             1    0[BANK0 ] unsigned char 
 26635 ;; Return value:  Size  Location     Type
 26636 ;;                  1    wreg      void 
 26637 ;; Registers used:
 26638 ;;		wreg
 26639 ;; Tracked objects:
 26640 ;;		On entry : 0/0
 26641 ;;		On exit  : 0/0
 26642 ;;		Unchanged: 0/0
 26643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26645 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26647 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26648 ;;Total ram usage:        1 bytes
 26649 ;; Hardware stack levels used:    1
 26650 ;; Hardware stack levels required when called:    7
 26651 ;; This function calls:
 26652 ;;		Nothing
 26653 ;; This function is called by:
 26654 ;;		_ConfigureRadioTx
 26655 ;;		_ConfigureRadioRx
 26656 ;; This function uses a non-reentrant model
 26657 ;;
 26658                           
 26659                           	psect	text124
 26660  0000'                    __ptext124:
 26661                           	opt stack 0
 26662  0000'                    _RADIO_SetCRC:
 26663                           	opt stack 20
 26664                           
 26665                           ;incstack = 0
 26666                           ;RADIO_SetCRC@crc stored from wreg
 26667  0000' 0100               	movlb	0	; () banked
 26668  0002' 6F00'              	movwf	RADIO_SetCRC@crc& (0+255),b
 26669                           
 26670                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 26671  0004' C000' F02E'        	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 26672  0008' 0012               	return		;funcret
 26673  000A'                    __end_of_RADIO_SetCRC:
 26674                           	opt stack 0
 26675                           tosu	equ	0xFFF
 26676                           tosh	equ	0xFFE
 26677                           tosl	equ	0xFFD
 26678                           pclath	equ	0xFFA
 26679                           tblptru	equ	0xFF8
 26680                           tblptrh	equ	0xFF7
 26681                           tblptrl	equ	0xFF6
 26682                           tablat	equ	0xFF5
 26683                           prodh	equ	0xFF4
 26684                           prodl	equ	0xFF3
 26685                           intcon	equ	0xFF2
 26686                           intcon2	equ	0xFF1
 26687                           intcon3	equ	0xFF0
 26688                           indf0	equ	0xFEF
 26689                           postinc0	equ	0xFEE
 26690                           fsr0h	equ	0xFEA
 26691                           fsr0l	equ	0xFE9
 26692                           wreg	equ	0xFE8
 26693                           postinc1	equ	0xFE6
 26694                           postdec1	equ	0xFE5
 26695                           plusw1	equ	0xFE3
 26696                           fsr1h	equ	0xFE2
 26697                           fsr1l	equ	0xFE1
 26698                           indf2	equ	0xFDF
 26699                           postinc2	equ	0xFDE
 26700                           postdec2	equ	0xFDD
 26701                           plusw2	equ	0xFDB
 26702                           fsr2h	equ	0xFDA
 26703                           fsr2l	equ	0xFD9
 26704                           status	equ	0xFD8
 26705                           
 26706 ;; *************** function _ConfigureRadio *****************
 26707 ;; Defined at:
 26708 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26709 ;; Parameters:    Size  Location     Type
 26710 ;;  dataRate        1    wreg     unsigned char 
 26711 ;;  freq            4   14[BANK0 ] unsigned long 
 26712 ;; Auto vars:     Size  Location     Type
 26713 ;;  dataRate        1   18[BANK0 ] unsigned char 
 26714 ;; Return value:  Size  Location     Type
 26715 ;;                  1    wreg      void 
 26716 ;; Registers used:
 26717 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26718 ;; Tracked objects:
 26719 ;;		On entry : 0/0
 26720 ;;		On exit  : 0/0
 26721 ;;		Unchanged: 0/0
 26722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26723 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26726 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26727 ;;Total ram usage:        5 bytes
 26728 ;; Hardware stack levels used:    1
 26729 ;; Hardware stack levels required when called:    9
 26730 ;; This function calls:
 26731 ;;		_RADIO_SetBandwidth
 26732 ;;		_RADIO_SetChannelFrequency
 26733 ;;		_RADIO_SetFSKSyncWord
 26734 ;;		_RADIO_SetFrequencyHopPeriod
 26735 ;;		_RADIO_SetLoRaSyncWord
 26736 ;;		_RADIO_SetModulation
 26737 ;;		_RADIO_SetSpreadingFactor
 26738 ;; This function is called by:
 26739 ;;		_ConfigureRadioTx
 26740 ;;		_ConfigureRadioRx
 26741 ;; This function uses a non-reentrant model
 26742 ;;
 26743                           
 26744                           	psect	text125
 26745  0000'                    __ptext125:
 26746                           	opt stack 0
 26747  0000'                    _ConfigureRadio:
 26748                           	opt stack 18
 26749                           
 26750                           ;incstack = 0
 26751                           ;ConfigureRadio@dataRate stored from wreg
 26752  0000' 0100               	movlb	0	; () banked
 26753  0002' 6F00'              	movwf	ConfigureRadio@dataRate& (0+255),b
 26754                           
 26755                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 26756  0004' 0100               	movlb	0	; () banked
 26757  0006' 5100'              	movf	ConfigureRadio@dataRate& (0+255),w,b
 26758  0008' 0D01               	mullw	1
 26759  000A' 0E00'              	movlw	low _modulation
 26760  000C' 24F3               	addwf	prodl,w,c
 26761  000E' 6EF6               	movwf	tblptrl,c
 26762  0010' 0E00'              	movlw	high _modulation
 26763  0012' 20F4               	addwfc	prodh,w,c
 26764  0014' 6EF7               	movwf	tblptrh,c
 26765  0016'                    	if	1	;There are 3 active tblptr bytes
 26766  0016' 6AF8               	clrf	tblptru,c
 26767  0018' 0E00'              	movlw	low (__mediumconst shr (0+16))
 26768  001A' 22F8               	addwfc	tblptru,f,c
 26769  001C'                    	endif
 26770  001C' 0008               	tblrd		*
 26771  001E' 50F5               	movf	tablat,w,c
 26772  0020' EC00' F000'        	call	_RADIO_SetModulation
 26773                           
 26774                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 26775  0024' C00E' F000'        	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 26776  0028' C00F' F001'        	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 26777  002C' C010' F002'        	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 26778  0030' C011' F003'        	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 26779  0034' EC00' F000'        	call	_RADIO_SetChannelFrequency	;wreg free
 26780                           
 26781                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 26782  0038' 0E00               	movlw	0
 26783  003A' 0100               	movlb	0	; () banked
 26784  003C' 6F00'              	movwf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 26785  003E' 0E00               	movlw	0
 26786  0040' 6F00'              	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 26787  0042' EC00' F000'        	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 26788                           
 26789                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 26790  0046' 0E07               	movlw	7
 26791  0048' 0100               	movlb	0	; () banked
 26792  004A' 6100'              	cpfslt	ConfigureRadio@dataRate& (0+255),b
 26793  004C' D024               	goto	l1172
 26794                           
 26795                           ; BSR set to: 0
 26796                           ;lorawan_eu.c: 870: {
 26797                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 26798  004E' 5100'              	movf	ConfigureRadio@dataRate& (0+255),w,b
 26799  0050' 0D01               	mullw	1
 26800  0052' 0E00'              	movlw	low _spreadingFactor
 26801  0054' 24F3               	addwf	prodl,w,c
 26802  0056' 6EF6               	movwf	tblptrl,c
 26803  0058' 0E00'              	movlw	high _spreadingFactor
 26804  005A' 20F4               	addwfc	prodh,w,c
 26805  005C' 6EF7               	movwf	tblptrh,c
 26806  005E'                    	if	1	;There are 3 active tblptr bytes
 26807  005E' 6AF8               	clrf	tblptru,c
 26808  0060' 0E00'              	movlw	low (__mediumconst shr (0+16))
 26809  0062' 22F8               	addwfc	tblptru,f,c
 26810  0064'                    	endif
 26811  0064' 0008               	tblrd		*
 26812  0066' 50F5               	movf	tablat,w,c
 26813  0068' EC00' F000'        	call	_RADIO_SetSpreadingFactor
 26814                           
 26815                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 26816  006C' 0100               	movlb	0	; () banked
 26817  006E' 5100'              	movf	ConfigureRadio@dataRate& (0+255),w,b
 26818  0070' 0D01               	mullw	1
 26819  0072' 0E00'              	movlw	low _bandwidth
 26820  0074' 24F3               	addwf	prodl,w,c
 26821  0076' 6EF6               	movwf	tblptrl,c
 26822  0078' 0E00'              	movlw	high _bandwidth
 26823  007A' 20F4               	addwfc	prodh,w,c
 26824  007C' 6EF7               	movwf	tblptrh,c
 26825  007E'                    	if	1	;There are 3 active tblptr bytes
 26826  007E' 6AF8               	clrf	tblptru,c
 26827  0080' 0E00'              	movlw	low (__mediumconst shr (0+16))
 26828  0082' 22F8               	addwfc	tblptru,f,c
 26829  0084'                    	endif
 26830  0084' 0008               	tblrd		*
 26831  0086' 50F5               	movf	tablat,w,c
 26832  0088' EC00' F000'        	call	_RADIO_SetBandwidth
 26833                           
 26834                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 26835  008C' 0102               	movlb	2	; () banked
 26836  008E' 5100'              	movf	(_loRa+244)& (0+255),w,b
 26837  0090' EC00' F000'        	call	_RADIO_SetLoRaSyncWord
 26838                           
 26839                           ;lorawan_eu.c: 875: }
 26840  0094' 0012               	return	
 26841  0096'                    l1172:
 26842                           
 26843                           ;lorawan_eu.c: 876: else
 26844                           ;lorawan_eu.c: 877: {
 26845                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 26846  0096' 0E00'              	movlw	low _FskSyncWordBuff
 26847  0098' 0100               	movlb	0	; () banked
 26848  009A' 6F00'              	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 26849  009C' 0E00'              	movlw	high _FskSyncWordBuff
 26850  009E' 6F00'              	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 26851  00A0' 0E03               	movlw	3
 26852  00A2' EC00' F000'        	call	_RADIO_SetFSKSyncWord
 26853  00A6' 0012               	return	
 26854  00A8'                    __end_of_ConfigureRadio:
 26855                           	opt stack 0
 26856                           tosu	equ	0xFFF
 26857                           tosh	equ	0xFFE
 26858                           tosl	equ	0xFFD
 26859                           pclath	equ	0xFFA
 26860                           tblptru	equ	0xFF8
 26861                           tblptrh	equ	0xFF7
 26862                           tblptrl	equ	0xFF6
 26863                           tablat	equ	0xFF5
 26864                           prodh	equ	0xFF4
 26865                           prodl	equ	0xFF3
 26866                           intcon	equ	0xFF2
 26867                           intcon2	equ	0xFF1
 26868                           intcon3	equ	0xFF0
 26869                           indf0	equ	0xFEF
 26870                           postinc0	equ	0xFEE
 26871                           fsr0h	equ	0xFEA
 26872                           fsr0l	equ	0xFE9
 26873                           wreg	equ	0xFE8
 26874                           postinc1	equ	0xFE6
 26875                           postdec1	equ	0xFE5
 26876                           plusw1	equ	0xFE3
 26877                           fsr1h	equ	0xFE2
 26878                           fsr1l	equ	0xFE1
 26879                           indf2	equ	0xFDF
 26880                           postinc2	equ	0xFDE
 26881                           postdec2	equ	0xFDD
 26882                           plusw2	equ	0xFDB
 26883                           fsr2h	equ	0xFDA
 26884                           fsr2l	equ	0xFD9
 26885                           status	equ	0xFD8
 26886                           
 26887 ;; *************** function _RADIO_SetSpreadingFactor *****************
 26888 ;; Defined at:
 26889 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26890 ;; Parameters:    Size  Location     Type
 26891 ;;  spreadingFac    1    wreg     enum E6994
 26892 ;; Auto vars:     Size  Location     Type
 26893 ;;  spreadingFac    1    0[BANK0 ] enum E6994
 26894 ;; Return value:  Size  Location     Type
 26895 ;;                  1    wreg      void 
 26896 ;; Registers used:
 26897 ;;		wreg
 26898 ;; Tracked objects:
 26899 ;;		On entry : 0/0
 26900 ;;		On exit  : 0/0
 26901 ;;		Unchanged: 0/0
 26902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26906 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26907 ;;Total ram usage:        1 bytes
 26908 ;; Hardware stack levels used:    1
 26909 ;; Hardware stack levels required when called:    7
 26910 ;; This function calls:
 26911 ;;		Nothing
 26912 ;; This function is called by:
 26913 ;;		_ConfigureRadio
 26914 ;; This function uses a non-reentrant model
 26915 ;;
 26916                           
 26917                           	psect	text126
 26918  0000'                    __ptext126:
 26919                           	opt stack 0
 26920  0000'                    _RADIO_SetSpreadingFactor:
 26921                           	opt stack 19
 26922                           
 26923                           ;incstack = 0
 26924                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 26925  0000' 0100               	movlb	0	; () banked
 26926  0002' 6F00'              	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 26927                           
 26928                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 26929  0004' C000' F02B'        	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 26930  0008' 0012               	return		;funcret
 26931  000A'                    __end_of_RADIO_SetSpreadingFactor:
 26932                           	opt stack 0
 26933                           tosu	equ	0xFFF
 26934                           tosh	equ	0xFFE
 26935                           tosl	equ	0xFFD
 26936                           pclath	equ	0xFFA
 26937                           tblptru	equ	0xFF8
 26938                           tblptrh	equ	0xFF7
 26939                           tblptrl	equ	0xFF6
 26940                           tablat	equ	0xFF5
 26941                           prodh	equ	0xFF4
 26942                           prodl	equ	0xFF3
 26943                           intcon	equ	0xFF2
 26944                           intcon2	equ	0xFF1
 26945                           intcon3	equ	0xFF0
 26946                           indf0	equ	0xFEF
 26947                           postinc0	equ	0xFEE
 26948                           fsr0h	equ	0xFEA
 26949                           fsr0l	equ	0xFE9
 26950                           wreg	equ	0xFE8
 26951                           postinc1	equ	0xFE6
 26952                           postdec1	equ	0xFE5
 26953                           plusw1	equ	0xFE3
 26954                           fsr1h	equ	0xFE2
 26955                           fsr1l	equ	0xFE1
 26956                           indf2	equ	0xFDF
 26957                           postinc2	equ	0xFDE
 26958                           postdec2	equ	0xFDD
 26959                           plusw2	equ	0xFDB
 26960                           fsr2h	equ	0xFDA
 26961                           fsr2l	equ	0xFD9
 26962                           status	equ	0xFD8
 26963                           
 26964 ;; *************** function _RADIO_SetModulation *****************
 26965 ;; Defined at:
 26966 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26967 ;; Parameters:    Size  Location     Type
 26968 ;;  modulation      1    wreg     enum E6984
 26969 ;; Auto vars:     Size  Location     Type
 26970 ;;  modulation      1    0[BANK0 ] enum E6984
 26971 ;; Return value:  Size  Location     Type
 26972 ;;                  1    wreg      void 
 26973 ;; Registers used:
 26974 ;;		wreg
 26975 ;; Tracked objects:
 26976 ;;		On entry : 0/0
 26977 ;;		On exit  : 0/0
 26978 ;;		Unchanged: 0/0
 26979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26981 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26983 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26984 ;;Total ram usage:        1 bytes
 26985 ;; Hardware stack levels used:    1
 26986 ;; Hardware stack levels required when called:    7
 26987 ;; This function calls:
 26988 ;;		Nothing
 26989 ;; This function is called by:
 26990 ;;		_ConfigureRadio
 26991 ;; This function uses a non-reentrant model
 26992 ;;
 26993                           
 26994                           	psect	text127
 26995  0000'                    __ptext127:
 26996                           	opt stack 0
 26997  0000'                    _RADIO_SetModulation:
 26998                           	opt stack 19
 26999                           
 27000                           ;incstack = 0
 27001                           ;RADIO_SetModulation@modulation stored from wreg
 27002  0000' 0100               	movlb	0	; () banked
 27003  0002' 6F00'              	movwf	RADIO_SetModulation@modulation& (0+255),b
 27004                           
 27005                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 27006  0004' C000' F02A'        	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 27007  0008' 0012               	return		;funcret
 27008  000A'                    __end_of_RADIO_SetModulation:
 27009                           	opt stack 0
 27010                           tosu	equ	0xFFF
 27011                           tosh	equ	0xFFE
 27012                           tosl	equ	0xFFD
 27013                           pclath	equ	0xFFA
 27014                           tblptru	equ	0xFF8
 27015                           tblptrh	equ	0xFF7
 27016                           tblptrl	equ	0xFF6
 27017                           tablat	equ	0xFF5
 27018                           prodh	equ	0xFF4
 27019                           prodl	equ	0xFF3
 27020                           intcon	equ	0xFF2
 27021                           intcon2	equ	0xFF1
 27022                           intcon3	equ	0xFF0
 27023                           indf0	equ	0xFEF
 27024                           postinc0	equ	0xFEE
 27025                           fsr0h	equ	0xFEA
 27026                           fsr0l	equ	0xFE9
 27027                           wreg	equ	0xFE8
 27028                           postinc1	equ	0xFE6
 27029                           postdec1	equ	0xFE5
 27030                           plusw1	equ	0xFE3
 27031                           fsr1h	equ	0xFE2
 27032                           fsr1l	equ	0xFE1
 27033                           indf2	equ	0xFDF
 27034                           postinc2	equ	0xFDE
 27035                           postdec2	equ	0xFDD
 27036                           plusw2	equ	0xFDB
 27037                           fsr2h	equ	0xFDA
 27038                           fsr2l	equ	0xFD9
 27039                           status	equ	0xFD8
 27040                           
 27041 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 27042 ;; Defined at:
 27043 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27044 ;; Parameters:    Size  Location     Type
 27045 ;;  frequencyHop    2    0[BANK0 ] unsigned int 
 27046 ;; Auto vars:     Size  Location     Type
 27047 ;;		None
 27048 ;; Return value:  Size  Location     Type
 27049 ;;                  1    wreg      void 
 27050 ;; Registers used:
 27051 ;;		None
 27052 ;; Tracked objects:
 27053 ;;		On entry : 0/0
 27054 ;;		On exit  : 0/0
 27055 ;;		Unchanged: 0/0
 27056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27057 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27060 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27061 ;;Total ram usage:        2 bytes
 27062 ;; Hardware stack levels used:    1
 27063 ;; Hardware stack levels required when called:    7
 27064 ;; This function calls:
 27065 ;;		Nothing
 27066 ;; This function is called by:
 27067 ;;		_ConfigureRadio
 27068 ;; This function uses a non-reentrant model
 27069 ;;
 27070                           
 27071                           	psect	text128
 27072  0000'                    __ptext128:
 27073                           	opt stack 0
 27074  0000'                    _RADIO_SetFrequencyHopPeriod:
 27075                           	opt stack 19
 27076                           
 27077                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 27078                           
 27079                           ;incstack = 0
 27080  0000' C000' F030'        	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 27081  0004' C001' F031'        	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 27082  0008' 0012               	return		;funcret
 27083  000A'                    __end_of_RADIO_SetFrequencyHopPeriod:
 27084                           	opt stack 0
 27085                           tosu	equ	0xFFF
 27086                           tosh	equ	0xFFE
 27087                           tosl	equ	0xFFD
 27088                           pclath	equ	0xFFA
 27089                           tblptru	equ	0xFF8
 27090                           tblptrh	equ	0xFF7
 27091                           tblptrl	equ	0xFF6
 27092                           tablat	equ	0xFF5
 27093                           prodh	equ	0xFF4
 27094                           prodl	equ	0xFF3
 27095                           intcon	equ	0xFF2
 27096                           intcon2	equ	0xFF1
 27097                           intcon3	equ	0xFF0
 27098                           indf0	equ	0xFEF
 27099                           postinc0	equ	0xFEE
 27100                           fsr0h	equ	0xFEA
 27101                           fsr0l	equ	0xFE9
 27102                           wreg	equ	0xFE8
 27103                           postinc1	equ	0xFE6
 27104                           postdec1	equ	0xFE5
 27105                           plusw1	equ	0xFE3
 27106                           fsr1h	equ	0xFE2
 27107                           fsr1l	equ	0xFE1
 27108                           indf2	equ	0xFDF
 27109                           postinc2	equ	0xFDE
 27110                           postdec2	equ	0xFDD
 27111                           plusw2	equ	0xFDB
 27112                           fsr2h	equ	0xFDA
 27113                           fsr2l	equ	0xFD9
 27114                           status	equ	0xFD8
 27115                           
 27116 ;; *************** function _RADIO_SetFSKSyncWord *****************
 27117 ;; Defined at:
 27118 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27119 ;; Parameters:    Size  Location     Type
 27120 ;;  syncWordLen     1    wreg     unsigned char 
 27121 ;;  syncWord        2   11[BANK0 ] PTR unsigned char 
 27122 ;;		 -> FskSyncWordBuff(3), 
 27123 ;; Auto vars:     Size  Location     Type
 27124 ;;  syncWordLen     1   13[BANK0 ] unsigned char 
 27125 ;; Return value:  Size  Location     Type
 27126 ;;                  1    wreg      void 
 27127 ;; Registers used:
 27128 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27129 ;; Tracked objects:
 27130 ;;		On entry : 0/0
 27131 ;;		On exit  : 0/0
 27132 ;;		Unchanged: 0/0
 27133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27134 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27137 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27138 ;;Total ram usage:        3 bytes
 27139 ;; Hardware stack levels used:    1
 27140 ;; Hardware stack levels required when called:    8
 27141 ;; This function calls:
 27142 ;;		_memcpy
 27143 ;; This function is called by:
 27144 ;;		_ConfigureRadio
 27145 ;; This function uses a non-reentrant model
 27146 ;;
 27147                           
 27148                           	psect	text129
 27149  0000'                    __ptext129:
 27150                           	opt stack 0
 27151  0000'                    _RADIO_SetFSKSyncWord:
 27152                           	opt stack 18
 27153                           
 27154                           ;incstack = 0
 27155                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 27156  0000' 0100               	movlb	0	; () banked
 27157  0002' 6F00'              	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 27158                           
 27159                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 27160  0004' 0E08               	movlw	8
 27161  0006' 0100               	movlb	0	; () banked
 27162  0008' 6500'              	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 27163  000A' D002               	goto	l808
 27164                           
 27165                           ; BSR set to: 0
 27166                           ;radio_driver_SX1276.c: 1627: {
 27167                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 27168  000C' 0E08               	movlw	8
 27169  000E' 6F00'              	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 27170  0010'                    l808:
 27171                           
 27172                           ; BSR set to: 0
 27173                           ;radio_driver_SX1276.c: 1629: }
 27174                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 27175                           
 27176                           ; BSR set to: 0
 27177  0010' 0E00'              	movlw	low (_RadioConfiguration+15)
 27178  0012' 6F00'              	movwf	memcpy@d1& (0+255),b
 27179  0014' 0E00'              	movlw	high (_RadioConfiguration+15)
 27180  0016' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 27181  0018' C00B' F002'        	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 27182  001C' C00C' F003'        	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 27183  0020' C00D' F004'        	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 27184  0024' 6B00'              	clrf	(memcpy@n+1)& (0+255),b
 27185  0026' EC00' F000'        	call	_memcpy	;wreg free
 27186                           
 27187                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 27188  002A' C00D' F029'        	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 27189  002E' 0012               	return		;funcret
 27190  0030'                    __end_of_RADIO_SetFSKSyncWord:
 27191                           	opt stack 0
 27192                           tosu	equ	0xFFF
 27193                           tosh	equ	0xFFE
 27194                           tosl	equ	0xFFD
 27195                           pclath	equ	0xFFA
 27196                           tblptru	equ	0xFF8
 27197                           tblptrh	equ	0xFF7
 27198                           tblptrl	equ	0xFF6
 27199                           tablat	equ	0xFF5
 27200                           prodh	equ	0xFF4
 27201                           prodl	equ	0xFF3
 27202                           intcon	equ	0xFF2
 27203                           intcon2	equ	0xFF1
 27204                           intcon3	equ	0xFF0
 27205                           indf0	equ	0xFEF
 27206                           postinc0	equ	0xFEE
 27207                           fsr0h	equ	0xFEA
 27208                           fsr0l	equ	0xFE9
 27209                           wreg	equ	0xFE8
 27210                           postinc1	equ	0xFE6
 27211                           postdec1	equ	0xFE5
 27212                           plusw1	equ	0xFE3
 27213                           fsr1h	equ	0xFE2
 27214                           fsr1l	equ	0xFE1
 27215                           indf2	equ	0xFDF
 27216                           postinc2	equ	0xFDE
 27217                           postdec2	equ	0xFDD
 27218                           plusw2	equ	0xFDB
 27219                           fsr2h	equ	0xFDA
 27220                           fsr2l	equ	0xFD9
 27221                           status	equ	0xFD8
 27222                           
 27223 ;; *************** function _RADIO_SetChannelFrequency *****************
 27224 ;; Defined at:
 27225 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27226 ;; Parameters:    Size  Location     Type
 27227 ;;  frequency       4    0[BANK0 ] unsigned long 
 27228 ;; Auto vars:     Size  Location     Type
 27229 ;;		None
 27230 ;; Return value:  Size  Location     Type
 27231 ;;                  2    0[BANK0 ] enum E7038
 27232 ;; Registers used:
 27233 ;;		wreg, status,2, status,0
 27234 ;; Tracked objects:
 27235 ;;		On entry : 0/0
 27236 ;;		On exit  : 0/0
 27237 ;;		Unchanged: 0/0
 27238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27239 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27242 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27243 ;;Total ram usage:        4 bytes
 27244 ;; Hardware stack levels used:    1
 27245 ;; Hardware stack levels required when called:    7
 27246 ;; This function calls:
 27247 ;;		Nothing
 27248 ;; This function is called by:
 27249 ;;		_ConfigureRadio
 27250 ;; This function uses a non-reentrant model
 27251 ;;
 27252                           
 27253                           	psect	text130
 27254  0000'                    __ptext130:
 27255                           	opt stack 0
 27256  0000'                    _RADIO_SetChannelFrequency:
 27257                           	opt stack 19
 27258                           
 27259                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 27260                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 27261                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 27262                           
 27263                           ;incstack = 0
 27264  0000' 0E40               	movlw	64
 27265  0002' 0100               	movlb	0	; () banked
 27266  0004' 5D00'              	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27267  0006' 0E74               	movlw	116
 27268  0008' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27269  000A' 0E2A               	movlw	42
 27270  000C' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27271  000E' 0E08               	movlw	8
 27272  0010' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27273  0012' A0D8               	btfss	status,0,c
 27274  0014' D00A               	goto	u14690
 27275                           
 27276                           ; BSR set to: 0
 27277  0016' 0EC1               	movlw	193
 27278  0018' 5D00'              	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27279  001A' 0E49               	movlw	73
 27280  001C' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27281  001E' 0E6E               	movlw	110
 27282  0020' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27283  0022' 0E0A               	movlw	10
 27284  0024' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27285  0026' A0D8               	btfss	status,0,c
 27286  0028' D027               	goto	u14730
 27287  002A'                    u14690:
 27288                           
 27289                           ; BSR set to: 0
 27290                           
 27291                           ; BSR set to: 0
 27292  002A' 0E80               	movlw	128
 27293  002C' 5D00'              	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27294  002E' 0E1A               	movlw	26
 27295  0030' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27296  0032' 0E70               	movlw	112
 27297  0034' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27298  0036' 0E18               	movlw	24
 27299  0038' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27300  003A' A0D8               	btfss	status,0,c
 27301  003C' D00A               	goto	u14710
 27302                           
 27303                           ; BSR set to: 0
 27304  003E' 0E41               	movlw	65
 27305  0040' 5D00'              	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27306  0042' 0EDD               	movlw	221
 27307  0044' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27308  0046' 0E4A               	movlw	74
 27309  0048' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27310  004A' 0E1F               	movlw	31
 27311  004C' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27312  004E' A0D8               	btfss	status,0,c
 27313  0050' D013               	goto	u14730
 27314  0052'                    u14710:
 27315                           
 27316                           ; BSR set to: 0
 27317                           
 27318                           ; BSR set to: 0
 27319  0052' 0E80               	movlw	128
 27320  0054' 5D00'              	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27321  0056' 0E13               	movlw	19
 27322  0058' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27323  005A' 0E61               	movlw	97
 27324  005C' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27325  005E' 0E33               	movlw	51
 27326  0060' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27327  0062' A0D8               	btfss	status,0,c
 27328  0064' 0012               	return	
 27329                           
 27330                           ; BSR set to: 0
 27331  0066' 0500'              	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27332  0068' 0EF7               	movlw	247
 27333  006A' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27334  006C' 0ECB               	movlw	203
 27335  006E' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27336  0070' 0E3C               	movlw	60
 27337  0072' 5900'              	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27338  0074' B0D8               	btfsc	status,0,c
 27339  0076' 0012               	return	
 27340  0078'                    u14730:
 27341                           
 27342                           ; BSR set to: 0
 27343                           ;radio_driver_SX1276.c: 1449: {
 27344                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 27345  0078' C000' F012'        	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 27346  007C' C001' F013'        	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 27347  0080' C002' F014'        	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 27348  0084' C003' F015'        	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 27349                           
 27350                           ; BSR set to: 0
 27351                           ;radio_driver_SX1276.c: 1453: else
 27352                           ;radio_driver_SX1276.c: 1454: {
 27353                           ;radio_driver_SX1276.c: 1455: return ERR_OUT_OF_RANGE;
 27354                           ;	Return value of _RADIO_SetChannelFrequency is never used
 27355                           
 27356                           ; BSR set to: 0
 27357                           ;radio_driver_SX1276.c: 1452: }
 27358                           
 27359                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 27360                           ;	Return value of _RADIO_SetChannelFrequency is never used
 27361  0088' 0012               	return	
 27362  008A'                    __end_of_RADIO_SetChannelFrequency:
 27363                           	opt stack 0
 27364                           tosu	equ	0xFFF
 27365                           tosh	equ	0xFFE
 27366                           tosl	equ	0xFFD
 27367                           pclath	equ	0xFFA
 27368                           tblptru	equ	0xFF8
 27369                           tblptrh	equ	0xFF7
 27370                           tblptrl	equ	0xFF6
 27371                           tablat	equ	0xFF5
 27372                           prodh	equ	0xFF4
 27373                           prodl	equ	0xFF3
 27374                           intcon	equ	0xFF2
 27375                           intcon2	equ	0xFF1
 27376                           intcon3	equ	0xFF0
 27377                           indf0	equ	0xFEF
 27378                           postinc0	equ	0xFEE
 27379                           fsr0h	equ	0xFEA
 27380                           fsr0l	equ	0xFE9
 27381                           wreg	equ	0xFE8
 27382                           postinc1	equ	0xFE6
 27383                           postdec1	equ	0xFE5
 27384                           plusw1	equ	0xFE3
 27385                           fsr1h	equ	0xFE2
 27386                           fsr1l	equ	0xFE1
 27387                           indf2	equ	0xFDF
 27388                           postinc2	equ	0xFDE
 27389                           postdec2	equ	0xFDD
 27390                           plusw2	equ	0xFDB
 27391                           fsr2h	equ	0xFDA
 27392                           fsr2l	equ	0xFD9
 27393                           status	equ	0xFD8
 27394                           
 27395 ;; *************** function _RADIO_SetBandwidth *****************
 27396 ;; Defined at:
 27397 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27398 ;; Parameters:    Size  Location     Type
 27399 ;;  bandwidth       1    wreg     enum E7002
 27400 ;; Auto vars:     Size  Location     Type
 27401 ;;  bandwidth       1    0[BANK0 ] enum E7002
 27402 ;; Return value:  Size  Location     Type
 27403 ;;                  1    wreg      void 
 27404 ;; Registers used:
 27405 ;;		wreg
 27406 ;; Tracked objects:
 27407 ;;		On entry : 0/0
 27408 ;;		On exit  : 0/0
 27409 ;;		Unchanged: 0/0
 27410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27412 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27414 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27415 ;;Total ram usage:        1 bytes
 27416 ;; Hardware stack levels used:    1
 27417 ;; Hardware stack levels required when called:    7
 27418 ;; This function calls:
 27419 ;;		Nothing
 27420 ;; This function is called by:
 27421 ;;		_ConfigureRadio
 27422 ;; This function uses a non-reentrant model
 27423 ;;
 27424                           
 27425                           	psect	text131
 27426  0000'                    __ptext131:
 27427                           	opt stack 0
 27428  0000'                    _RADIO_SetBandwidth:
 27429                           	opt stack 19
 27430                           
 27431                           ; BSR set to: 0
 27432                           ;incstack = 0
 27433                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 27434  0000' 0100               	movlb	0	; () banked
 27435  0002' 6F00'              	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 27436                           
 27437                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 27438  0004' C000' F02C'        	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 27439  0008' 0012               	return		;funcret
 27440  000A'                    __end_of_RADIO_SetBandwidth:
 27441                           	opt stack 0
 27442                           tosu	equ	0xFFF
 27443                           tosh	equ	0xFFE
 27444                           tosl	equ	0xFFD
 27445                           pclath	equ	0xFFA
 27446                           tblptru	equ	0xFF8
 27447                           tblptrh	equ	0xFF7
 27448                           tblptrl	equ	0xFF6
 27449                           tablat	equ	0xFF5
 27450                           prodh	equ	0xFF4
 27451                           prodl	equ	0xFF3
 27452                           intcon	equ	0xFF2
 27453                           intcon2	equ	0xFF1
 27454                           intcon3	equ	0xFF0
 27455                           indf0	equ	0xFEF
 27456                           postinc0	equ	0xFEE
 27457                           fsr0h	equ	0xFEA
 27458                           fsr0l	equ	0xFE9
 27459                           wreg	equ	0xFE8
 27460                           postinc1	equ	0xFE6
 27461                           postdec1	equ	0xFE5
 27462                           plusw1	equ	0xFE3
 27463                           fsr1h	equ	0xFE2
 27464                           fsr1l	equ	0xFE1
 27465                           indf2	equ	0xFDF
 27466                           postinc2	equ	0xFDE
 27467                           postdec2	equ	0xFDD
 27468                           plusw2	equ	0xFDB
 27469                           fsr2h	equ	0xFDA
 27470                           fsr2l	equ	0xFD9
 27471                           status	equ	0xFD8
 27472                           
 27473 ;; *************** function _RADIO_Transmit *****************
 27474 ;; Defined at:
 27475 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27476 ;; Parameters:    Size  Location     Type
 27477 ;;  buffer          2   81[BANK0 ] PTR unsigned char 
 27478 ;;		 -> macBuffer(271), 
 27479 ;;  bufferLen       1   83[BANK0 ] unsigned char 
 27480 ;; Auto vars:     Size  Location     Type
 27481 ;;  i               1   97[BANK0 ] unsigned char 
 27482 ;;  regValue        1   96[BANK0 ] unsigned char 
 27483 ;; Return value:  Size  Location     Type
 27484 ;;                  2   81[BANK0 ] enum E7038
 27485 ;; Registers used:
 27486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 27487 ;; Tracked objects:
 27488 ;;		On entry : 0/0
 27489 ;;		On exit  : 0/0
 27490 ;;		Unchanged: 0/0
 27491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27492 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27493 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27494 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27495 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27496 ;;Total ram usage:       17 bytes
 27497 ;; Hardware stack levels used:    1
 27498 ;; Hardware stack levels required when called:   12
 27499 ;; This function calls:
 27500 ;;		_HALSPICSAssert
 27501 ;;		_HALSPICSDeassert
 27502 ;;		_HALSPISend
 27503 ;;		_RADIO_RegisterRead
 27504 ;;		_RADIO_RegisterWrite
 27505 ;;		_RADIO_WriteConfiguration
 27506 ;;		_RADIO_WriteMode
 27507 ;;		_SwTimerSetTimeout
 27508 ;;		_SwTimerStart
 27509 ;;		_SwTimerStop
 27510 ;;		___lldiv
 27511 ;; This function is called by:
 27512 ;;		_LORAWAN_RxTimeout
 27513 ;;		_LORAWAN_Join
 27514 ;;		_LORAWAN_Send
 27515 ;;		_AckRetransmissionCallback
 27516 ;;		_UnconfirmedTransmissionCallback
 27517 ;; This function uses a non-reentrant model
 27518 ;;
 27519                           
 27520                           	psect	text132
 27521  0000'                    __ptext132:
 27522                           	opt stack 0
 27523  0000'                    _RADIO_Transmit:
 27524                           	opt stack 17
 27525                           
 27526                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 27527                           ;radio_driver_SX1276.c: 789: uint8_t i;
 27528                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 27529                           
 27530                           ;incstack = 0
 27531  0000' 0101               	movlb	1	; () banked
 27532  0002' A500'              	btfss	(_RadioConfiguration+35)& (0+255),2,b
 27533  0004' D006               	goto	l503
 27534                           
 27535                           ; BSR set to: 1
 27536                           ;radio_driver_SX1276.c: 792: {
 27537                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 27538  0006' 0E80               	movlw	128
 27539  0008' 0100               	movlb	0	; () banked
 27540  000A' 6F00'              	movwf	(?_RADIO_Transmit+1)& (0+255),b
 27541  000C' 0E03               	movlw	3
 27542  000E' 6F00'              	movwf	?_RADIO_Transmit& (0+255),b
 27543                           
 27544                           ; BSR set to: 0
 27545  0010' 0012               	return	
 27546  0012'                    l503:
 27547                           
 27548                           ;radio_driver_SX1276.c: 794: }
 27549                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 27550                           
 27551                           ; BSR set to: 0
 27552  0012' C035' F054'        	movff	_RadioConfiguration+35,??_RADIO_Transmit
 27553  0016' 0E03               	movlw	3
 27554  0018' 0100               	movlb	0	; () banked
 27555  001A' 1700'              	andwf	??_RADIO_Transmit& (0+255),f,b
 27556  001C' B4D8               	btfsc	status,2,c
 27557  001E' D005               	goto	l505
 27558                           
 27559                           ; BSR set to: 0
 27560                           ;radio_driver_SX1276.c: 797: {
 27561                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 27562  0020' 0E80               	movlw	128
 27563  0022' 6F00'              	movwf	(?_RADIO_Transmit+1)& (0+255),b
 27564  0024' 0E04               	movlw	4
 27565  0026' 6F00'              	movwf	?_RADIO_Transmit& (0+255),b
 27566                           
 27567                           ; BSR set to: 0
 27568  0028' 0012               	return	
 27569  002A'                    l505:
 27570                           
 27571                           ; BSR set to: 0
 27572                           ;radio_driver_SX1276.c: 799: }
 27573                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 27574                           
 27575                           ; BSR set to: 0
 27576  002A' 0101               	movlb	1	; () banked
 27577  002C' 5100'              	movf	(_RadioConfiguration+24)& (0+255),w,b
 27578  002E' A4D8               	btfss	status,2,c
 27579  0030' D009               	goto	l506
 27580                           
 27581                           ; BSR set to: 1
 27582  0032' 0E40               	movlw	64
 27583  0034' 0100               	movlb	0	; () banked
 27584  0036' 6500'              	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 27585  0038' D005               	goto	l506
 27586                           
 27587                           ; BSR set to: 0
 27588                           ;radio_driver_SX1276.c: 802: {
 27589                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 27590  003A' 0E80               	movlw	128
 27591  003C' 6F00'              	movwf	(?_RADIO_Transmit+1)& (0+255),b
 27592  003E' 0E02               	movlw	2
 27593  0040' 6F00'              	movwf	?_RADIO_Transmit& (0+255),b
 27594                           
 27595                           ; BSR set to: 0
 27596  0042' 0012               	return	
 27597  0044'                    l506:
 27598                           
 27599                           ;radio_driver_SX1276.c: 804: }
 27600                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 27601                           
 27602                           ; BSR set to: 0
 27603  0044' 0101               	movlb	1	; () banked
 27604  0046' 5100'              	movf	(_RadioConfiguration+39)& (0+255),w,b
 27605  0048' EC00' F000'        	call	_SwTimerStop
 27606                           
 27607                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 27608  004C' 0E00               	movlw	0
 27609  004E' 0100               	movlb	0	; () banked
 27610  0050' 6F00'              	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 27611  0052' 0E04               	movlw	4
 27612  0054' 6F00'              	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 27613  0056' EC00' F000'        	call	_RADIO_WriteConfiguration	;wreg free
 27614                           
 27615                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 27616  005A' 0101               	movlb	1	; () banked
 27617  005C' 0500'              	decf	(_RadioConfiguration+24)& (0+255),w,b
 27618  005E' A4D8               	btfss	status,2,c
 27619  0060' D027               	goto	l507
 27620                           
 27621                           ; BSR set to: 1
 27622                           ;radio_driver_SX1276.c: 813: {
 27623                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 27624  0062' C053' F001'        	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 27625  0066' 0E22               	movlw	34
 27626  0068' EC00' F000'        	call	_RADIO_RegisterWrite
 27627                           
 27628                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 27629  006C' 0E0A               	movlw	10
 27630  006E' EC00' F000'        	call	_RADIO_RegisterRead
 27631  0072' 0100               	movlb	0	; () banked
 27632  0074' 6F00'              	movwf	RADIO_Transmit@regValue& (0+255),b
 27633                           
 27634                           ; BSR set to: 0
 27635                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 27636  0076' 0EF0               	movlw	240
 27637  0078' 1700'              	andwf	RADIO_Transmit@regValue& (0+255),f,b
 27638                           
 27639                           ; BSR set to: 0
 27640                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 27641  007A' 8700'              	bsf	RADIO_Transmit@regValue& (0+255),3,b
 27642                           
 27643                           ; BSR set to: 0
 27644                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 27645  007C' C060' F001'        	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 27646  0080' 0E0A               	movlw	10
 27647  0082' EC00' F000'        	call	_RADIO_RegisterWrite
 27648                           
 27649                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 27650  0086' 0E40               	movlw	64
 27651  0088' 0100               	movlb	0	; () banked
 27652  008A' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 27653  008C' 0E40               	movlw	64
 27654  008E' EC00' F000'        	call	_RADIO_RegisterWrite
 27655                           
 27656                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 27657  0092' 0E00               	movlw	0
 27658  0094' 0100               	movlb	0	; () banked
 27659  0096' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 27660  0098' 0E41               	movlw	65
 27661  009A' EC00' F000'        	call	_RADIO_RegisterWrite
 27662                           
 27663                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 27664  009E' C02A' F005'        	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27665  00A2' 0E01               	movlw	1
 27666  00A4' 0100               	movlb	0	; () banked
 27667  00A6' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
 27668  00A8' 0E01               	movlw	1
 27669  00AA' EC00' F000'        	call	_RADIO_WriteMode
 27670                           
 27671                           ;radio_driver_SX1276.c: 828: }
 27672  00AE' D00C               	goto	l508
 27673  00B0'                    l507:
 27674                           
 27675                           ;radio_driver_SX1276.c: 829: else
 27676                           ;radio_driver_SX1276.c: 830: {
 27677                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 27678  00B0' 0E00               	movlw	0
 27679  00B2' 0100               	movlb	0	; () banked
 27680  00B4' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 27681  00B6' 0E40               	movlw	64
 27682  00B8' EC00' F000'        	call	_RADIO_RegisterWrite
 27683                           
 27684                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 27685  00BC' 0E00               	movlw	0
 27686  00BE' 0100               	movlb	0	; () banked
 27687  00C0' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 27688  00C2' 0E41               	movlw	65
 27689  00C4' EC00' F000'        	call	_RADIO_RegisterWrite
 27690  00C8'                    l508:
 27691                           
 27692                           ;radio_driver_SX1276.c: 834: }
 27693                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 27694  00C8' 0101               	movlb	1	; () banked
 27695  00CA' 5100'              	movf	(_RadioConfiguration+24)& (0+255),w,b
 27696  00CC' A4D8               	btfss	status,2,c
 27697  00CE' D005               	goto	l509
 27698                           
 27699                           ; BSR set to: 1
 27700                           ;radio_driver_SX1276.c: 837: {
 27701                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 27702  00D0' C053' F001'        	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 27703  00D4' 0E00               	movlw	0
 27704  00D6' EC00' F000'        	call	_RADIO_RegisterWrite
 27705  00DA'                    l509:
 27706                           
 27707                           ;radio_driver_SX1276.c: 840: }
 27708                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 27709  00DA' EC00' F000'        	call	_HALSPICSAssert	;wreg free
 27710                           
 27711                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 27712  00DE' 0E80               	movlw	128
 27713  00E0' EC00' F000'        	call	_HALSPISend
 27714                           
 27715                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 27716  00E4' 0E00               	movlw	0
 27717  00E6' 0100               	movlb	0	; () banked
 27718  00E8' 6F00'              	movwf	RADIO_Transmit@i& (0+255),b
 27719  00EA' D00D               	goto	l510
 27720  00EC'                    
 27721                           ; BSR set to: 0
 27722                           ;radio_driver_SX1276.c: 846: {
 27723                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 27724                           
 27725                           ; BSR set to: 0
 27726  00EC' 5100'              	movf	RADIO_Transmit@i& (0+255),w,b
 27727  00EE' 0D01               	mullw	1
 27728  00F0' 50F3               	movf	prodl,w,c
 27729  00F2' 2500'              	addwf	RADIO_Transmit@buffer& (0+255),w,b
 27730  00F4' 6ED9               	movwf	fsr2l,c
 27731  00F6' 50F4               	movf	prodh,w,c
 27732  00F8' 2100'              	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 27733  00FA' 6EDA               	movwf	fsr2h,c
 27734  00FC' 50DF               	movf	indf2,w,c
 27735  00FE' EC00' F000'        	call	_HALSPISend
 27736  0102' 0100               	movlb	0	; () banked
 27737  0104' 2B00'              	incf	RADIO_Transmit@i& (0+255),f,b
 27738  0106'                    l510:
 27739                           
 27740                           ; BSR set to: 0
 27741                           
 27742                           ; BSR set to: 0
 27743  0106' 5100'              	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 27744  0108' 5D00'              	subwf	RADIO_Transmit@i& (0+255),w,b
 27745  010A' A0D8               	btfss	status,0,c
 27746  010C' D7EF               	goto	l511
 27747                           
 27748                           ; BSR set to: 0
 27749                           ;radio_driver_SX1276.c: 848: }
 27750                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 27751                           
 27752                           ; BSR set to: 0
 27753  010E' EC00' F000'        	call	_HALSPICSDeassert	;wreg free
 27754                           
 27755                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 27756  0112' 0101               	movlb	1	; () banked
 27757  0114' 8100'              	bsf	(_RadioConfiguration+35)& (0+255),0,b
 27758                           
 27759                           ; BSR set to: 1
 27760                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 27761  0116' 0EE7               	movlw	231
 27762  0118' 1700'              	andwf	(_RadioConfiguration+35)& (0+255),f,b
 27763                           
 27764                           ; BSR set to: 1
 27765                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 27766  011A' C02A' F005'        	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27767  011E' 0E00               	movlw	0
 27768  0120' 0100               	movlb	0	; () banked
 27769  0122' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
 27770  0124' 0E03               	movlw	3
 27771  0126' EC00' F000'        	call	_RADIO_WriteMode
 27772                           
 27773                           ; BSR set to: 0
 27774                           
 27775                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 27776  012A' 0E00               	movlw	0
 27777  012C' 0100               	movlb	0	; () banked
 27778  012E' 6F00'              	movwf	_RADIO_Transmit$776& (0+255),b
 27779  0130' 0E00               	movlw	0
 27780  0132' 6F00'              	movwf	(_RADIO_Transmit$776+1)& (0+255),b
 27781  0134' 0E0A               	movlw	10
 27782  0136' 6F00'              	movwf	(_RADIO_Transmit$776+2)& (0+255),b
 27783  0138' 0E00               	movlw	0
 27784  013A' 6F00'              	movwf	(_RADIO_Transmit$776+3)& (0+255),b
 27785                           
 27786                           ; BSR set to: 0
 27787                           
 27788                           ; BSR set to: 0
 27789  013C' C058' F00D'        	movff	_RADIO_Transmit$776,SwTimerSetTimeout@timeout
 27790  0140' C059' F00E'        	movff	_RADIO_Transmit$776+1,SwTimerSetTimeout@timeout+1
 27791  0144' C05A' F00F'        	movff	_RADIO_Transmit$776+2,SwTimerSetTimeout@timeout+2
 27792  0148' C05B' F010'        	movff	_RADIO_Transmit$776+3,SwTimerSetTimeout@timeout+3
 27793  014C' 0101               	movlb	1	; () banked
 27794  014E' 5100'              	movf	(_RadioConfiguration+39)& (0+255),w,b
 27795  0150' EC00' F000'        	call	_SwTimerSetTimeout
 27796                           
 27797                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 27798  0154' 0101               	movlb	1	; () banked
 27799  0156' 5100'              	movf	(_RadioConfiguration+39)& (0+255),w,b
 27800  0158' EC00' F000'        	call	_SwTimerStart
 27801                           
 27802                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 27803  015C' 0101               	movlb	1	; () banked
 27804  015E' 5100'              	movf	(_RadioConfiguration+42)& (0+255),w,b
 27805  0160' 1100'              	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 27806  0162' 1100'              	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 27807  0164' 1100'              	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 27808  0166' B4D8               	btfsc	status,2,c
 27809  0168' D061               	goto	l517
 27810                           
 27811                           ; BSR set to: 1
 27812                           ;radio_driver_SX1276.c: 866: {
 27813                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 27814  016A' 5100'              	movf	(_RadioConfiguration+45)& (0+255),w,b
 27815  016C' E107               	bnz	u16480
 27816  016E' 2900'              	incf	(_RadioConfiguration+42)& (0+255),w,b
 27817  0170' 0EFF               	movlw	255
 27818  0172' 5900'              	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 27819  0174' 0E0F               	movlw	15
 27820  0176' 5900'              	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 27821  0178' A0D8               	btfss	status,0,c
 27822  017A' D01D               	goto	l519
 27823  017C'                    u16480:
 27824                           
 27825                           ; BSR set to: 1
 27826  017C' C03C' F000'        	movff	_RadioConfiguration+42,___lldiv@dividend
 27827  0180' C03D' F001'        	movff	_RadioConfiguration+43,___lldiv@dividend+1
 27828  0184' C03E' F002'        	movff	_RadioConfiguration+44,___lldiv@dividend+2
 27829  0188' C03F' F003'        	movff	_RadioConfiguration+45,___lldiv@dividend+3
 27830  018C' 0E7D               	movlw	125
 27831  018E' 0100               	movlb	0	; () banked
 27832  0190' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 27833  0192' 0E00               	movlw	0
 27834  0194' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 27835  0196' 0E00               	movlw	0
 27836  0198' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 27837  019A' 0E00               	movlw	0
 27838  019C' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 27839  019E' EC00' F000'        	call	___lldiv	;wreg free
 27840  01A2' 0E0C               	movlw	12
 27841  01A4'                    u16495:
 27842  01A4' 90D8               	bcf	status,0,c
 27843  01A6' 0100               	movlb	0	; () banked
 27844  01A8' 3700'              	rlcf	?___lldiv& (0+255),f,b
 27845  01AA' 3700'              	rlcf	(?___lldiv+1)& (0+255),f,b
 27846  01AC' 3700'              	rlcf	(?___lldiv+2)& (0+255),f,b
 27847  01AE' 3700'              	rlcf	(?___lldiv+3)& (0+255),f,b
 27848  01B0' 2EE8               	decfsz	wreg,f,c
 27849  01B2' D7F8               	goto	u16495
 27850  01B4' D023               	goto	L19
 27851  01B6'                    l519:
 27852                           
 27853                           ; BSR set to: 0
 27854  01B6' C03C' F054'        	movff	_RadioConfiguration+42,??_RADIO_Transmit
 27855  01BA' C03D' F055'        	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 27856  01BE' C03E' F056'        	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 27857  01C2' C03F' F057'        	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 27858  01C6' 0E0C               	movlw	12
 27859  01C8'                    u16505:
 27860  01C8' 90D8               	bcf	status,0,c
 27861  01CA' 0100               	movlb	0	; () banked
 27862  01CC' 3700'              	rlcf	??_RADIO_Transmit& (0+255),f,b
 27863  01CE' 3700'              	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 27864  01D0' 3700'              	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 27865  01D2' 3700'              	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 27866  01D4' 2EE8               	decfsz	wreg,f,c
 27867  01D6' D7F8               	goto	u16505
 27868  01D8' C054' F000'        	movff	??_RADIO_Transmit,___lldiv@dividend
 27869  01DC' C055' F001'        	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 27870  01E0' C056' F002'        	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 27871  01E4' C057' F003'        	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 27872  01E8' 0E7D               	movlw	125
 27873  01EA' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 27874  01EC' 0E00               	movlw	0
 27875  01EE' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 27876  01F0' 0E00               	movlw	0
 27877  01F2' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 27878  01F4' 0E00               	movlw	0
 27879  01F6' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 27880  01F8' EC00' F000'        	call	___lldiv	;wreg free
 27881  01FC'                    L19:
 27882  01FC' C000' F05C'        	movff	?___lldiv,_RADIO_Transmit$778
 27883  0200' C001' F05D'        	movff	?___lldiv+1,_RADIO_Transmit$778+1
 27884  0204' C002' F05E'        	movff	?___lldiv+2,_RADIO_Transmit$778+2
 27885  0208' C003' F05F'        	movff	?___lldiv+3,_RADIO_Transmit$778+3
 27886  020C' C05C' F00D'        	movff	_RADIO_Transmit$778,SwTimerSetTimeout@timeout
 27887  0210' C05D' F00E'        	movff	_RADIO_Transmit$778+1,SwTimerSetTimeout@timeout+1
 27888  0214' C05E' F00F'        	movff	_RADIO_Transmit$778+2,SwTimerSetTimeout@timeout+2
 27889  0218' C05F' F010'        	movff	_RADIO_Transmit$778+3,SwTimerSetTimeout@timeout+3
 27890  021C' 0101               	movlb	1	; () banked
 27891  021E' 5100'              	movf	(_RadioConfiguration+41)& (0+255),w,b
 27892  0220' EC00' F000'        	call	_SwTimerSetTimeout
 27893                           
 27894                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 27895  0224' 0101               	movlb	1	; () banked
 27896  0226' 5100'              	movf	(_RadioConfiguration+41)& (0+255),w,b
 27897  0228' EC00' F000'        	call	_SwTimerStart
 27898  022C'                    l517:
 27899                           
 27900                           ;radio_driver_SX1276.c: 869: }
 27901                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 27902  022C' 0E00               	movlw	0
 27903  022E' 0100               	movlb	0	; () banked
 27904  0230' 6F00'              	movwf	(?_RADIO_Transmit+1)& (0+255),b
 27905  0232' 0E00               	movlw	0
 27906  0234' 6F00'              	movwf	?_RADIO_Transmit& (0+255),b
 27907  0236' 0012               	return	
 27908  0238'                    __end_of_RADIO_Transmit:
 27909                           	opt stack 0
 27910                           tosu	equ	0xFFF
 27911                           tosh	equ	0xFFE
 27912                           tosl	equ	0xFFD
 27913                           pclath	equ	0xFFA
 27914                           tblptru	equ	0xFF8
 27915                           tblptrh	equ	0xFF7
 27916                           tblptrl	equ	0xFF6
 27917                           tablat	equ	0xFF5
 27918                           prodh	equ	0xFF4
 27919                           prodl	equ	0xFF3
 27920                           intcon	equ	0xFF2
 27921                           intcon2	equ	0xFF1
 27922                           intcon3	equ	0xFF0
 27923                           indf0	equ	0xFEF
 27924                           postinc0	equ	0xFEE
 27925                           fsr0h	equ	0xFEA
 27926                           fsr0l	equ	0xFE9
 27927                           wreg	equ	0xFE8
 27928                           postinc1	equ	0xFE6
 27929                           postdec1	equ	0xFE5
 27930                           plusw1	equ	0xFE3
 27931                           fsr1h	equ	0xFE2
 27932                           fsr1l	equ	0xFE1
 27933                           indf2	equ	0xFDF
 27934                           postinc2	equ	0xFDE
 27935                           postdec2	equ	0xFDD
 27936                           plusw2	equ	0xFDB
 27937                           fsr2h	equ	0xFDA
 27938                           fsr2l	equ	0xFD9
 27939                           status	equ	0xFD8
 27940                           
 27941 ;; *************** function _RADIO_WriteConfiguration *****************
 27942 ;; Defined at:
 27943 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27944 ;; Parameters:    Size  Location     Type
 27945 ;;  symbolTimeou    2   70[BANK0 ] unsigned int 
 27946 ;; Auto vars:     Size  Location     Type
 27947 ;;  tempValue       4   76[BANK0 ] unsigned long 
 27948 ;;  regValue        1   80[BANK0 ] unsigned char 
 27949 ;;  i               1   75[BANK0 ] unsigned char 
 27950 ;; Return value:  Size  Location     Type
 27951 ;;                  1    wreg      void 
 27952 ;; Registers used:
 27953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 27954 ;; Tracked objects:
 27955 ;;		On entry : 0/0
 27956 ;;		On exit  : 0/0
 27957 ;;		Unchanged: 0/0
 27958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27959 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27960 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27961 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27962 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27963 ;;Total ram usage:       11 bytes
 27964 ;; Hardware stack levels used:    1
 27965 ;; Hardware stack levels required when called:   11
 27966 ;; This function calls:
 27967 ;;		_RADIO_RegisterRead
 27968 ;;		_RADIO_RegisterWrite
 27969 ;;		_RADIO_WriteFSKBitRate
 27970 ;;		_RADIO_WriteFSKFrequencyDeviation
 27971 ;;		_RADIO_WriteFrequency
 27972 ;;		_RADIO_WriteMode
 27973 ;;		_RADIO_WritePower
 27974 ;;		___lmul
 27975 ;; This function is called by:
 27976 ;;		_RADIO_Transmit
 27977 ;;		_RADIO_ReceiveStart
 27978 ;;		_RADIO_TransmitCW
 27979 ;; This function uses a non-reentrant model
 27980 ;;
 27981                           
 27982                           	psect	text133
 27983  0000'                    __ptext133:
 27984                           	opt stack 0
 27985  0000'                    _RADIO_WriteConfiguration:
 27986                           	opt stack 17
 27987                           
 27988                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 27989                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 27990                           ;radio_driver_SX1276.c: 537: uint8_t i;
 27991                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 27992                           
 27993                           ; BSR set to: 0
 27994                           ;incstack = 0
 27995  0000' C02A' F005'        	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27996  0004' 0E00               	movlw	0
 27997  0006' 0100               	movlb	0	; () banked
 27998  0008' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
 27999  000A' 0E00               	movlw	0
 28000  000C' EC00' F000'        	call	_RADIO_WriteMode
 28001                           
 28002                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 28003  0010' C012' F00D'        	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 28004  0014' C013' F00E'        	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 28005  0018' C014' F00F'        	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 28006  001C' C015' F010'        	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 28007  0020' EC00' F000'        	call	_RADIO_WriteFrequency	;wreg free
 28008                           
 28009                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 28010  0024' 0101               	movlb	1	; () banked
 28011  0026' 5100'              	movf	(_RadioConfiguration+27)& (0+255),w,b
 28012  0028' EC00' F000'        	call	_RADIO_WritePower
 28013                           
 28014                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 28015  002C' 0101               	movlb	1	; () banked
 28016  002E' 0500'              	decf	(_RadioConfiguration+24)& (0+255),w,b
 28017  0030' A4D8               	btfss	status,2,c
 28018  0032' D1ED               	goto	l459
 28019                           
 28020                           ; BSR set to: 1
 28021                           ;radio_driver_SX1276.c: 545: {
 28022                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 28023  0034' C020' F001'        	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 28024  0038' 0E39               	movlw	57
 28025  003A' EC00' F000'        	call	_RADIO_RegisterWrite
 28026                           
 28027                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 28028                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 28029                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 28030                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 28031  003E' C034' F048'        	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 28032  0042' 0E01               	movlw	1
 28033  0044' 0100               	movlb	0	; () banked
 28034  0046' 1700'              	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 28035  0048' 0101               	movlb	1	; () banked
 28036  004A' 90D8               	bcf	status,0,c
 28037  004C' 3500'              	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 28038  004E' 0100               	movlb	0	; () banked
 28039  0050' 6F00'              	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 28040  0052' 0101               	movlb	1	; () banked
 28041  0054' 3900'              	swapf	(_RadioConfiguration+26)& (0+255),w,b
 28042  0056' 0BF0               	andlw	240
 28043  0058' 0100               	movlb	0	; () banked
 28044  005A' 1100'              	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 28045  005C' 1100'              	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 28046  005E' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28047  0060' 0E1D               	movlw	29
 28048  0062' EC00' F000'        	call	_RADIO_RegisterWrite
 28049                           
 28050                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 28051                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 28052                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 28053                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 28054  0066' C046' F048'        	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
 28055  006A' C047' F049'        	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
 28056  006E' C049' F048'        	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
 28057  0072' 0100               	movlb	0	; () banked
 28058  0074' 6B00'              	clrf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 28059  0076' 0E03               	movlw	3
 28060  0078' 1700'              	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 28061  007A' C02E' F04A'        	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
 28062  007E' 0E01               	movlw	1
 28063  0080' 1700'              	andwf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 28064  0082' 90D8               	bcf	status,0,c
 28065  0084' 3700'              	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 28066  0086' 90D8               	bcf	status,0,c
 28067  0088' 3700'              	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 28068  008A' 0101               	movlb	1	; () banked
 28069  008C' 3900'              	swapf	(_RadioConfiguration+25)& (0+255),w,b
 28070  008E' 0BF0               	andlw	240
 28071  0090' 0100               	movlb	0	; () banked
 28072  0092' 1100'              	iorwf	(??_RADIO_WriteConfiguration+2)& (0+255),w,b
 28073  0094' 1100'              	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 28074  0096' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28075  0098' 0E1E               	movlw	30
 28076  009A' EC00' F000'        	call	_RADIO_RegisterWrite
 28077                           
 28078                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 28079  009E' 0101               	movlb	1	; () banked
 28080  00A0' 5100'              	movf	(_RadioConfiguration+30)& (0+255),w,b
 28081  00A2' 1100'              	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 28082  00A4' B4D8               	btfsc	status,2,c
 28083  00A6' D06F               	goto	l460
 28084                           
 28085                           ; BSR set to: 1
 28086                           ;radio_driver_SX1276.c: 561: {
 28087                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 28088  00A8' C030' F04C'        	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 28089  00AC' C031' F04D'        	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 28090  00B0' 0100               	movlb	0	; () banked
 28091  00B2' 6B00'              	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 28092  00B4' 6B00'              	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 28093                           
 28094                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 28095  00B6' D04E               	goto	l461
 28096  00B8'                    
 28097                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 28098                           
 28099                           ; BSR set to: 0
 28100  00B8' C04C' F03A'        	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 28101  00BC' C04D' F03B'        	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 28102  00C0' C04E' F03C'        	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 28103  00C4' C04F' F03D'        	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 28104  00C8' 0E7D               	movlw	125
 28105  00CA' 0100               	movlb	0	; () banked
 28106  00CC' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 28107  00CE' 0E00               	movlw	0
 28108  00D0' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 28109  00D2' 0E00               	movlw	0
 28110  00D4' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 28111  00D6' 0E00               	movlw	0
 28112  00D8' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 28113  00DA' EC00' F000'        	call	___lmul	;wreg free
 28114  00DE' D027               	goto	L21
 28115  00E0'                    
 28116                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 28117  00E0' C04C' F03A'        	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 28118  00E4' C04D' F03B'        	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 28119  00E8' C04E' F03C'        	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 28120  00EC' C04F' F03D'        	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 28121  00F0' 0EFA               	movlw	250
 28122  00F2' 0100               	movlb	0	; () banked
 28123  00F4' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 28124  00F6' 0E00               	movlw	0
 28125  00F8' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 28126  00FA' 0E00               	movlw	0
 28127  00FC' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 28128  00FE' 0E00               	movlw	0
 28129  0100' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 28130  0102' EC00' F000'        	call	___lmul	;wreg free
 28131  0106' D013               	goto	L21
 28132  0108'                    
 28133                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 28134  0108' C04C' F03A'        	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 28135  010C' C04D' F03B'        	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 28136  0110' C04E' F03C'        	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 28137  0114' C04F' F03D'        	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 28138  0118' 0EF4               	movlw	244
 28139  011A' 0100               	movlb	0	; () banked
 28140  011C' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 28141  011E' 0E01               	movlw	1
 28142  0120' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 28143  0122' 0E00               	movlw	0
 28144  0124' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 28145  0126' 0E00               	movlw	0
 28146  0128' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 28147  012A' EC00' F000'        	call	___lmul	;wreg free
 28148  012E'                    L21:
 28149  012E' C03A' F04C'        	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 28150  0132' C03B' F04D'        	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 28151  0136' C03C' F04E'        	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 28152  013A' C03D' F04F'        	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 28153                           
 28154                           ;radio_driver_SX1276.c: 574: break;
 28155  013E' D016               	goto	l463
 28156  0140'                    
 28157                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 28158  0140' 0E00               	movlw	0
 28159  0142' 0100               	movlb	0	; () banked
 28160  0144' 6F00'              	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 28161  0146' 0E00               	movlw	0
 28162  0148' 6F00'              	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 28163  014A' 0E00               	movlw	0
 28164  014C' 6F00'              	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 28165  014E' 0E00               	movlw	0
 28166  0150' 6F00'              	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 28167                           
 28168                           ; BSR set to: 0
 28169                           ;radio_driver_SX1276.c: 579: }
 28170                           
 28171                           ;radio_driver_SX1276.c: 578: break;
 28172  0152' D00C               	goto	l463
 28173  0154'                    l461:
 28174                           
 28175                           ; BSR set to: 0
 28176                           
 28177                           ; BSR set to: 0
 28178  0154' 0101               	movlb	1	; () banked
 28179  0156' 5100'              	movf	(_RadioConfiguration+26)& (0+255),w,b
 28180                           
 28181                           ; Switch size 1, requested type "space"
 28182                           ; Number of cases is 3, Range of values is 7 to 9
 28183                           ; switch strategies available:
 28184                           ; Name         Instructions Cycles
 28185                           ; simple_byte           10     6 (average)
 28186                           ;	Chosen strategy is simple_byte
 28187  0158' 0A07               	xorlw	7	; case 7
 28188  015A' B4D8               	btfsc	status,2,c
 28189  015C' D7AD               	goto	l462
 28190  015E' 0A0F               	xorlw	15	; case 8
 28191  0160' B4D8               	btfsc	status,2,c
 28192  0162' D7BE               	goto	l464
 28193  0164' 0A01               	xorlw	1	; case 9
 28194  0166' B4D8               	btfsc	status,2,c
 28195  0168' D7CF               	goto	l465
 28196  016A' D7EA               	goto	l466
 28197  016C'                    l463:
 28198                           
 28199                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 28200                           
 28201                           ; BSR set to: 1
 28202  016C' 0101               	movlb	1	; () banked
 28203  016E' 2900'              	incf	(_RadioConfiguration+25)& (0+255),w,b
 28204  0170' 0100               	movlb	0	; () banked
 28205  0172' 6F00'              	movwf	??_RADIO_WriteConfiguration& (0+255),b
 28206  0174' D005               	goto	u14960
 28207  0176'                    u14965:
 28208  0176' 90D8               	bcf	status,0,c
 28209  0178' 3300'              	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 28210  017A' 3300'              	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 28211  017C' 3300'              	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 28212  017E' 3300'              	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 28213  0180'                    u14960:
 28214  0180' 2F00'              	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 28215  0182' D7F9               	goto	u14965
 28216                           
 28217                           ;radio_driver_SX1276.c: 582: }
 28218  0184' D009               	goto	l467
 28219  0186'                    l460:
 28220                           
 28221                           ;radio_driver_SX1276.c: 583: else
 28222                           ;radio_driver_SX1276.c: 584: {
 28223                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 28224  0186' 0E00               	movlw	0
 28225  0188' 0100               	movlb	0	; () banked
 28226  018A' 6F00'              	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 28227  018C' 0E00               	movlw	0
 28228  018E' 6F00'              	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 28229  0190' 0E00               	movlw	0
 28230  0192' 6F00'              	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 28231  0194' 0E00               	movlw	0
 28232  0196' 6F00'              	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 28233  0198'                    l467:
 28234                           
 28235                           ;radio_driver_SX1276.c: 586: }
 28236                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 28237                           
 28238                           ; BSR set to: 0
 28239  0198' C04C' F001'        	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 28240  019C' 0E24               	movlw	36
 28241  019E' EC00' F000'        	call	_RADIO_RegisterWrite
 28242                           
 28243                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 28244  01A2' C046' F001'        	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 28245  01A6' 0E1F               	movlw	31
 28246  01A8' EC00' F000'        	call	_RADIO_RegisterWrite
 28247                           
 28248                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 28249  01AC' 0E26               	movlw	38
 28250  01AE' EC00' F000'        	call	_RADIO_RegisterRead
 28251  01B2' 0100               	movlb	0	; () banked
 28252  01B4' 6F00'              	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28253                           
 28254                           ; BSR set to: 0
 28255                           ;radio_driver_SX1276.c: 596: if (
 28256                           ;radio_driver_SX1276.c: 597: (
 28257                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 28258                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 28259                           ;radio_driver_SX1276.c: 600: ) ||
 28260                           ;radio_driver_SX1276.c: 601: (
 28261                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 28262                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 28263                           ;radio_driver_SX1276.c: 604: )
 28264                           ;radio_driver_SX1276.c: 605: )
 28265  01B6' 0E0C               	movlw	12
 28266  01B8' 0101               	movlb	1	; () banked
 28267  01BA' 1900'              	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 28268  01BC' A4D8               	btfss	status,2,c
 28269  01BE' D008               	goto	u14990
 28270                           
 28271                           ; BSR set to: 1
 28272  01C0' 0E07               	movlw	7
 28273  01C2' 1900'              	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28274  01C4' B4D8               	btfsc	status,2,c
 28275  01C6' D00C               	goto	u15010
 28276                           
 28277                           ; BSR set to: 1
 28278  01C8' 0E08               	movlw	8
 28279  01CA' 1900'              	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28280  01CC' B4D8               	btfsc	status,2,c
 28281  01CE' D008               	goto	u15010
 28282  01D0'                    u14990:
 28283                           
 28284                           ; BSR set to: 1
 28285                           
 28286                           ; BSR set to: 1
 28287  01D0' 0E0B               	movlw	11
 28288  01D2' 1900'              	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 28289  01D4' A4D8               	btfss	status,2,c
 28290  01D6' D007               	goto	l468
 28291                           
 28292                           ; BSR set to: 1
 28293  01D8' 0E07               	movlw	7
 28294  01DA' 1900'              	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28295  01DC' A4D8               	btfss	status,2,c
 28296  01DE' D003               	goto	l468
 28297  01E0'                    u15010:
 28298                           
 28299                           ; BSR set to: 1
 28300                           ;radio_driver_SX1276.c: 606: {
 28301                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 28302                           
 28303                           ; BSR set to: 1
 28304  01E0' 0100               	movlb	0	; () banked
 28305  01E2' 8700'              	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 28306                           
 28307                           ;radio_driver_SX1276.c: 608: }
 28308  01E4' D002               	goto	l473
 28309  01E6'                    l468:
 28310                           
 28311                           ;radio_driver_SX1276.c: 609: else
 28312                           ;radio_driver_SX1276.c: 610: {
 28313                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 28314                           
 28315                           ; BSR set to: 0
 28316  01E6' 0100               	movlb	0	; () banked
 28317  01E8' 9700'              	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 28318  01EA'                    l473:
 28319                           
 28320                           ; BSR set to: 0
 28321                           ;radio_driver_SX1276.c: 612: }
 28322                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 28323  01EA' 8500'              	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 28324                           
 28325                           ; BSR set to: 0
 28326                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 28327  01EC' C050' F001'        	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28328  01F0' 0E26               	movlw	38
 28329  01F2' EC00' F000'        	call	_RADIO_RegisterWrite
 28330                           
 28331                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 28332  01F6' 0E31               	movlw	49
 28333  01F8' EC00' F000'        	call	_RADIO_RegisterRead
 28334  01FC' 0100               	movlb	0	; () banked
 28335  01FE' 6F00'              	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28336                           
 28337                           ; BSR set to: 0
 28338                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 28339  0200' 0EF8               	movlw	248
 28340  0202' 1700'              	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28341                           
 28342                           ; BSR set to: 0
 28343                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 28344  0204' 0E03               	movlw	3
 28345  0206' 1300'              	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28346                           
 28347                           ; BSR set to: 0
 28348                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 28349  0208' C050' F001'        	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28350  020C' 0E31               	movlw	49
 28351  020E' EC00' F000'        	call	_RADIO_RegisterWrite
 28352                           
 28353                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 28354  0212' 0E0A               	movlw	10
 28355  0214' 0100               	movlb	0	; () banked
 28356  0216' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28357  0218' 0E37               	movlw	55
 28358  021A' EC00' F000'        	call	_RADIO_RegisterWrite
 28359                           
 28360                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 28361  021E' 0E12               	movlw	18
 28362  0220' 0101               	movlb	1	; () banked
 28363  0222' 1900'              	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 28364  0224' A4D8               	btfss	status,2,c
 28365  0226' D02F               	goto	l478
 28366                           
 28367                           ; BSR set to: 1
 28368                           ;radio_driver_SX1276.c: 626: {
 28369                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 28370                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 28371  0228' 0E07               	movlw	7
 28372  022A' 1900'              	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28373  022C' B4D8               	btfsc	status,2,c
 28374  022E' D004               	goto	u15040
 28375                           
 28376                           ; BSR set to: 1
 28377  0230' 0E08               	movlw	8
 28378  0232' 1900'              	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28379  0234' A4D8               	btfss	status,2,c
 28380  0236' D017               	goto	l475
 28381  0238'                    u15040:
 28382                           
 28383                           ; BSR set to: 1
 28384                           ;radio_driver_SX1276.c: 631: {
 28385                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 28386                           
 28387                           ; BSR set to: 1
 28388  0238' 0E31               	movlw	49
 28389  023A' EC00' F000'        	call	_RADIO_RegisterRead
 28390  023E' 0100               	movlb	0	; () banked
 28391  0240' 6F00'              	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28392                           
 28393                           ; BSR set to: 0
 28394                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 28395  0242' 9F00'              	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 28396                           
 28397                           ; BSR set to: 0
 28398                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 28399  0244' C050' F001'        	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28400  0248' 0E31               	movlw	49
 28401  024A' EC00' F000'        	call	_RADIO_RegisterWrite
 28402                           
 28403                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 28404  024E' 0E40               	movlw	64
 28405  0250' 0100               	movlb	0	; () banked
 28406  0252' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28407  0254' 0E2F               	movlw	47
 28408  0256' EC00' F000'        	call	_RADIO_RegisterWrite
 28409                           
 28410                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 28411  025A' 0E00               	movlw	0
 28412  025C' 0100               	movlb	0	; () banked
 28413  025E' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28414  0260' 0E30               	movlw	48
 28415  0262' EC00' F000'        	call	_RADIO_RegisterWrite
 28416  0266'                    l475:
 28417                           
 28418                           ;radio_driver_SX1276.c: 637: }
 28419                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 28420  0266' 0E09               	movlw	9
 28421  0268' 0101               	movlb	1	; () banked
 28422  026A' 1900'              	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28423  026C' A4D8               	btfss	status,2,c
 28424  026E' D00B               	goto	l478
 28425                           
 28426                           ; BSR set to: 1
 28427                           ;radio_driver_SX1276.c: 640: {
 28428                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 28429  0270' 0E31               	movlw	49
 28430  0272' EC00' F000'        	call	_RADIO_RegisterRead
 28431  0276' 0100               	movlb	0	; () banked
 28432  0278' 6F00'              	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28433                           
 28434                           ; BSR set to: 0
 28435                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 28436  027A' 8F00'              	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 28437                           
 28438                           ; BSR set to: 0
 28439                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 28440  027C' C050' F001'        	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28441  0280' 0E31               	movlw	49
 28442  0282' EC00' F000'        	call	_RADIO_RegisterWrite
 28443  0286'                    l478:
 28444                           
 28445                           ;radio_driver_SX1276.c: 644: }
 28446                           ;radio_driver_SX1276.c: 645: }
 28447                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 28448  0286' 0E33               	movlw	51
 28449  0288' EC00' F000'        	call	_RADIO_RegisterRead
 28450  028C' 0100               	movlb	0	; () banked
 28451  028E' 6F00'              	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28452                           
 28453                           ; BSR set to: 0
 28454                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 28455  0290' 9D00'              	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 28456                           
 28457                           ; BSR set to: 0
 28458                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 28459  0292' 8100'              	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 28460                           
 28461                           ; BSR set to: 0
 28462                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 28463  0294' C032' F048'        	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 28464  0298' 0E01               	movlw	1
 28465  029A' 1700'              	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 28466  029C' 0E06               	movlw	6
 28467  029E' 6F00'              	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 28468  02A0'                    u15065:
 28469  02A0' 90D8               	bcf	status,0,c
 28470  02A2' 3700'              	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 28471  02A4' 2F00'              	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 28472  02A6' D7FC               	goto	u15065
 28473  02A8' 5100'              	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 28474  02AA' 1300'              	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28475                           
 28476                           ; BSR set to: 0
 28477                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 28478  02AC' C050' F001'        	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28479  02B0' 0E33               	movlw	51
 28480  02B2' EC00' F000'        	call	_RADIO_RegisterWrite
 28481                           
 28482                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 28483  02B6' C032' F048'        	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 28484  02BA' 0E01               	movlw	1
 28485  02BC' 0100               	movlb	0	; () banked
 28486  02BE' 1700'              	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 28487  02C0' 90D8               	bcf	status,0,c
 28488  02C2' 3700'              	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 28489  02C4' 90D8               	bcf	status,0,c
 28490  02C6' 3500'              	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 28491  02C8' 0AFF               	xorlw	255
 28492  02CA' 0B1D               	andlw	29
 28493  02CC' 6F00'              	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28494                           
 28495                           ; BSR set to: 0
 28496                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 28497  02CE' C050' F001'        	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28498  02D2' 0E3B               	movlw	59
 28499  02D4' EC00' F000'        	call	_RADIO_RegisterWrite
 28500                           
 28501                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 28502  02D8' 0101               	movlb	1	; () banked
 28503  02DA' 5100'              	movf	(_RadioConfiguration+13)& (0+255),w,b
 28504  02DC' 0100               	movlb	0	; () banked
 28505  02DE' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28506  02E0' 0E20               	movlw	32
 28507  02E2' EC00' F000'        	call	_RADIO_RegisterWrite
 28508                           
 28509                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 28510  02E6' C01E' F001'        	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 28511  02EA' 0E21               	movlw	33
 28512  02EC' EC00' F000'        	call	_RADIO_RegisterWrite
 28513                           
 28514                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 28515  02F0' 0E00               	movlw	0
 28516  02F2' 0100               	movlb	0	; () banked
 28517  02F4' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28518  02F6' 0E0D               	movlw	13
 28519  02F8' EC00' F000'        	call	_RADIO_RegisterWrite
 28520                           
 28521                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 28522  02FC' 0E00               	movlw	0
 28523  02FE' 0100               	movlb	0	; () banked
 28524  0300' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28525  0302' 0E0E               	movlw	14
 28526  0304' EC00' F000'        	call	_RADIO_RegisterWrite
 28527                           
 28528                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 28529  0308' 0E00               	movlw	0
 28530  030A' 0100               	movlb	0	; () banked
 28531  030C' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28532  030E' 0E0F               	movlw	15
 28533  0310' EC00' F000'        	call	_RADIO_RegisterWrite
 28534                           
 28535                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 28536  0314' 0E12               	movlw	18
 28537  0316' 0101               	movlb	1	; () banked
 28538  0318' 1900'              	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 28539  031A' A4D8               	btfss	status,2,c
 28540  031C' D071               	goto	l485
 28541                           
 28542                           ; BSR set to: 1
 28543                           ;radio_driver_SX1276.c: 665: {
 28544                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 28545                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 28546                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 28547                           ;radio_driver_SX1276.c: 669: )
 28548  031E' 0E09               	movlw	9
 28549  0320' 1900'              	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28550  0322' A4D8               	btfss	status,2,c
 28551  0324' D020               	goto	l480
 28552                           
 28553                           ; BSR set to: 1
 28554  0326' 0E80               	movlw	128
 28555  0328' 5D00'              	subwf	_RadioConfiguration& (0+255),w,b
 28556  032A' 0E13               	movlw	19
 28557  032C' 5900'              	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 28558  032E' 0E61               	movlw	97
 28559  0330' 5900'              	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 28560  0332' 0E33               	movlw	51
 28561  0334' 5900'              	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 28562  0336' A0D8               	btfss	status,0,c
 28563  0338' D016               	goto	l480
 28564                           
 28565                           ; BSR set to: 1
 28566  033A' 0500'              	decf	_RadioConfiguration& (0+255),w,b
 28567  033C' 0EF7               	movlw	247
 28568  033E' 5900'              	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 28569  0340' 0ECB               	movlw	203
 28570  0342' 5900'              	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 28571  0344' 0E3C               	movlw	60
 28572  0346' 5900'              	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 28573  0348' B0D8               	btfsc	status,0,c
 28574  034A' D00D               	goto	l480
 28575                           
 28576                           ; BSR set to: 1
 28577                           ;radio_driver_SX1276.c: 670: {
 28578                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 28579  034C' 0E02               	movlw	2
 28580  034E' 0100               	movlb	0	; () banked
 28581  0350' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28582  0352' 0E36               	movlw	54
 28583  0354' EC00' F000'        	call	_RADIO_RegisterWrite
 28584                           
 28585                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 28586  0358' 0E64               	movlw	100
 28587  035A' 0100               	movlb	0	; () banked
 28588  035C' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28589  035E' 0E3A               	movlw	58
 28590  0360' EC00' F000'        	call	_RADIO_RegisterWrite
 28591                           
 28592                           ;radio_driver_SX1276.c: 673: }
 28593  0364' D02C               	goto	l483
 28594  0366'                    l480:
 28595                           
 28596                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 28597                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 28598                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 28599                           ;radio_driver_SX1276.c: 677: )
 28600  0366' 0E09               	movlw	9
 28601  0368' 0101               	movlb	1	; () banked
 28602  036A' 1900'              	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28603  036C' A4D8               	btfss	status,2,c
 28604  036E' D021               	goto	l482
 28605                           
 28606                           ; BSR set to: 1
 28607  0370' 0E80               	movlw	128
 28608  0372' 5D00'              	subwf	_RadioConfiguration& (0+255),w,b
 28609  0374' 0E1A               	movlw	26
 28610  0376' 5900'              	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 28611  0378' 0E70               	movlw	112
 28612  037A' 5900'              	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 28613  037C' 0E18               	movlw	24
 28614  037E' 5900'              	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 28615  0380' A0D8               	btfss	status,0,c
 28616  0382' D017               	goto	l482
 28617                           
 28618                           ; BSR set to: 1
 28619  0384' 0E41               	movlw	65
 28620  0386' 5D00'              	subwf	_RadioConfiguration& (0+255),w,b
 28621  0388' 0EDD               	movlw	221
 28622  038A' 5900'              	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 28623  038C' 0E4A               	movlw	74
 28624  038E' 5900'              	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 28625  0390' 0E1F               	movlw	31
 28626  0392' 5900'              	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 28627  0394' B0D8               	btfsc	status,0,c
 28628  0396' D00D               	goto	l482
 28629                           
 28630                           ; BSR set to: 1
 28631                           ;radio_driver_SX1276.c: 678: {
 28632                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 28633  0398' 0E02               	movlw	2
 28634  039A' 0100               	movlb	0	; () banked
 28635  039C' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28636  039E' 0E36               	movlw	54
 28637  03A0' EC00' F000'        	call	_RADIO_RegisterWrite
 28638                           
 28639                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 28640  03A4' 0E7F               	movlw	127
 28641  03A6' 0100               	movlb	0	; () banked
 28642  03A8' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28643  03AA' 0E3A               	movlw	58
 28644  03AC' EC00' F000'        	call	_RADIO_RegisterWrite
 28645                           
 28646                           ;radio_driver_SX1276.c: 681: }
 28647  03B0' D006               	goto	l483
 28648  03B2'                    l482:
 28649                           
 28650                           ;radio_driver_SX1276.c: 682: else
 28651                           ;radio_driver_SX1276.c: 683: {
 28652                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 28653  03B2' 0E03               	movlw	3
 28654  03B4' 0100               	movlb	0	; () banked
 28655  03B6' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28656  03B8' 0E36               	movlw	54
 28657  03BA' EC00' F000'        	call	_RADIO_RegisterWrite
 28658  03BE'                    l483:
 28659                           
 28660                           ;radio_driver_SX1276.c: 685: }
 28661                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 28662  03BE' 0E09               	movlw	9
 28663  03C0' 0101               	movlb	1	; () banked
 28664  03C2' 1900'              	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28665  03C4' A4D8               	btfss	status,2,c
 28666  03C6' D010               	goto	l484
 28667                           
 28668                           ; BSR set to: 1
 28669  03C8' 0500'              	decf	(_RadioConfiguration+32)& (0+255),w,b
 28670  03CA' A4D8               	btfss	status,2,c
 28671  03CC' D00D               	goto	l484
 28672                           
 28673                           ; BSR set to: 1
 28674                           ;radio_driver_SX1276.c: 689: {
 28675                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 28676  03CE' 0E65               	movlw	101
 28677  03D0' 0100               	movlb	0	; () banked
 28678  03D2' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28679  03D4' 0E3A               	movlw	58
 28680  03D6' EC00' F000'        	call	_RADIO_RegisterWrite
 28681                           
 28682                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 28683  03DA' 0E19               	movlw	25
 28684  03DC' 0100               	movlb	0	; () banked
 28685  03DE' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28686  03E0' 0E3B               	movlw	59
 28687  03E2' EC00' F000'        	call	_RADIO_RegisterWrite
 28688                           
 28689                           ;radio_driver_SX1276.c: 692: }
 28690  03E6' D00C               	goto	l485
 28691  03E8'                    l484:
 28692                           
 28693                           ;radio_driver_SX1276.c: 693: else
 28694                           ;radio_driver_SX1276.c: 694: {
 28695                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 28696  03E8' 0E65               	movlw	101
 28697  03EA' 0100               	movlb	0	; () banked
 28698  03EC' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28699  03EE' 0E3A               	movlw	58
 28700  03F0' EC00' F000'        	call	_RADIO_RegisterWrite
 28701                           
 28702                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 28703  03F4' 0E1D               	movlw	29
 28704  03F6' 0100               	movlb	0	; () banked
 28705  03F8' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28706  03FA' 0E3B               	movlw	59
 28707  03FC' EC00' F000'        	call	_RADIO_RegisterWrite
 28708  0400'                    l485:
 28709                           
 28710                           ;radio_driver_SX1276.c: 697: }
 28711                           ;radio_driver_SX1276.c: 698: }
 28712                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 28713  0400' 0EFF               	movlw	255
 28714  0402' 0100               	movlb	0	; () banked
 28715  0404' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28716  0406' 0E12               	movlw	18
 28717  0408' EC00' F000'        	call	_RADIO_RegisterWrite
 28718                           
 28719                           ;radio_driver_SX1276.c: 702: }
 28720  040C' 0012               	return	
 28721  040E'                    l459:
 28722                           
 28723                           ;radio_driver_SX1276.c: 703: else
 28724                           ;radio_driver_SX1276.c: 704: {
 28725                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 28726  040E' C016' F00D'        	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 28727  0412' C017' F00E'        	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 28728  0416' C018' F00F'        	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 28729  041A' C019' F010'        	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 28730  041E' EC00' F000'        	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 28731                           
 28732                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 28733  0422' C01A' F00D'        	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 28734  0426' C01B' F00E'        	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 28735  042A' C01C' F00F'        	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 28736  042E' C01D' F010'        	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 28737  0432' EC00' F000'        	call	_RADIO_WriteFSKBitRate	;wreg free
 28738                           
 28739                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 28740  0436' 0101               	movlb	1	; () banked
 28741  0438' 5100'              	movf	(_RadioConfiguration+13)& (0+255),w,b
 28742  043A' 0100               	movlb	0	; () banked
 28743  043C' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28744  043E' 0E25               	movlw	37
 28745  0440' EC00' F000'        	call	_RADIO_RegisterWrite
 28746                           
 28747                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 28748  0444' C01E' F001'        	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 28749  0448' 0E26               	movlw	38
 28750  044A' EC00' F000'        	call	_RADIO_RegisterWrite
 28751                           
 28752                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 28753  044E' 0E0A               	movlw	10
 28754  0450' EC00' F000'        	call	_RADIO_RegisterRead
 28755  0454' 0100               	movlb	0	; () banked
 28756  0456' 6F00'              	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28757                           
 28758                           ; BSR set to: 0
 28759                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 28760  0458' 0E9F               	movlw	159
 28761  045A' 1700'              	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28762                           
 28763                           ; BSR set to: 0
 28764                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 28765  045C' 0101               	movlb	1	; () banked
 28766  045E' 3900'              	swapf	(_RadioConfiguration+51)& (0+255),w,b
 28767  0460' 46E8               	rlncf	wreg,f,c
 28768  0462' 0BE0               	andlw	224
 28769  0464' 0100               	movlb	0	; () banked
 28770  0466' 1300'              	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28771                           
 28772                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 28773  0468' C050' F001'        	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28774  046C' 0E0A               	movlw	10
 28775  046E' EC00' F000'        	call	_RADIO_RegisterWrite
 28776                           
 28777                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 28778  0472' 0EC8               	movlw	200
 28779  0474' 0100               	movlb	0	; () banked
 28780  0476' 6F00'              	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28781                           
 28782                           ; BSR set to: 0
 28783                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 28784  0478' 0101               	movlb	1	; () banked
 28785  047A' 5100'              	movf	(_RadioConfiguration+28)& (0+255),w,b
 28786  047C' B4D8               	btfsc	status,2,c
 28787  047E' D002               	goto	l487
 28788                           
 28789                           ; BSR set to: 1
 28790                           ;radio_driver_SX1276.c: 722: {
 28791                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 28792  0480' 0100               	movlb	0	; () banked
 28793  0482' 8900'              	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 28794  0484'                    l487:
 28795                           
 28796                           ;radio_driver_SX1276.c: 724: }
 28797                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 28798                           
 28799                           ; BSR set to: 0
 28800  0484' C050' F001'        	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28801  0488' 0E30               	movlw	48
 28802  048A' EC00' F000'        	call	_RADIO_RegisterWrite
 28803                           
 28804                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 28805  048E' 0E00               	movlw	0
 28806  0490' 0100               	movlb	0	; () banked
 28807  0492' 6F00'              	movwf	RADIO_WriteConfiguration@i& (0+255),b
 28808  0494' D010               	goto	l488
 28809  0496'                    
 28810                           ; BSR set to: 0
 28811                           ;radio_driver_SX1276.c: 729: {
 28812                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 28813                           
 28814                           ; BSR set to: 0
 28815  0496' 5100'              	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 28816  0498' 0D01               	mullw	1
 28817  049A' 0E00'              	movlw	low (_RadioConfiguration+15)
 28818  049C' 24F3               	addwf	prodl,w,c
 28819  049E' 6ED9               	movwf	fsr2l,c
 28820  04A0' 0E00'              	movlw	high (_RadioConfiguration+15)
 28821  04A2' 20F4               	addwfc	prodh,w,c
 28822  04A4' 6EDA               	movwf	fsr2h,c
 28823  04A6' 50DF               	movf	indf2,w,c
 28824  04A8' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28825  04AA' 5100'              	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 28826  04AC' 0F28               	addlw	40
 28827  04AE' EC00' F000'        	call	_RADIO_RegisterWrite
 28828  04B2' 0100               	movlb	0	; () banked
 28829  04B4' 2B00'              	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 28830  04B6'                    l488:
 28831                           
 28832                           ; BSR set to: 0
 28833                           
 28834                           ; BSR set to: 0
 28835  04B6' 0101               	movlb	1	; () banked
 28836  04B8' 5100'              	movf	(_RadioConfiguration+23)& (0+255),w,b
 28837  04BA' 0100               	movlb	0	; () banked
 28838  04BC' 5D00'              	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 28839  04BE' A0D8               	btfss	status,0,c
 28840  04C0' D7EA               	goto	l489
 28841                           
 28842                           ; BSR set to: 0
 28843                           ;radio_driver_SX1276.c: 733: }
 28844                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 28845                           
 28846                           ; BSR set to: 0
 28847  04C2' 0101               	movlb	1	; () banked
 28848  04C4' 5100'              	movf	(_RadioConfiguration+23)& (0+255),w,b
 28849  04C6' B4D8               	btfsc	status,2,c
 28850  04C8' D008               	goto	l491
 28851                           
 28852                           ; BSR set to: 1
 28853                           ;radio_driver_SX1276.c: 737: {
 28854                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 28855  04CA' 0500'              	decf	(_RadioConfiguration+23)& (0+255),w,b
 28856  04CC' 0910               	iorlw	16
 28857  04CE' 0100               	movlb	0	; () banked
 28858  04D0' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28859  04D2' 0E27               	movlw	39
 28860  04D4' EC00' F000'        	call	_RADIO_RegisterWrite
 28861                           
 28862                           ;radio_driver_SX1276.c: 739: }
 28863  04D8' D006               	goto	l492
 28864  04DA'                    l491:
 28865                           
 28866                           ;radio_driver_SX1276.c: 740: else
 28867                           ;radio_driver_SX1276.c: 741: {
 28868                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 28869  04DA' 0E00               	movlw	0
 28870  04DC' 0100               	movlb	0	; () banked
 28871  04DE' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28872  04E0' 0E27               	movlw	39
 28873  04E2' EC00' F000'        	call	_RADIO_RegisterWrite
 28874  04E6'                    l492:
 28875                           
 28876                           ;radio_driver_SX1276.c: 743: }
 28877                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 28878  04E6' 0EFF               	movlw	255
 28879  04E8' 0100               	movlb	0	; () banked
 28880  04EA' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28881  04EC' 0E3E               	movlw	62
 28882  04EE' EC00' F000'        	call	_RADIO_RegisterWrite
 28883                           
 28884                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 28885  04F2' 0EFF               	movlw	255
 28886  04F4' 0100               	movlb	0	; () banked
 28887  04F6' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 28888  04F8' 0E3F               	movlw	63
 28889  04FA' EC00' F000'        	call	_RADIO_RegisterWrite
 28890  04FE' 0012               	return	
 28891  0500'                    __end_of_RADIO_WriteConfiguration:
 28892                           	opt stack 0
 28893                           tosu	equ	0xFFF
 28894                           tosh	equ	0xFFE
 28895                           tosl	equ	0xFFD
 28896                           pclath	equ	0xFFA
 28897                           tblptru	equ	0xFF8
 28898                           tblptrh	equ	0xFF7
 28899                           tblptrl	equ	0xFF6
 28900                           tablat	equ	0xFF5
 28901                           prodh	equ	0xFF4
 28902                           prodl	equ	0xFF3
 28903                           intcon	equ	0xFF2
 28904                           intcon2	equ	0xFF1
 28905                           intcon3	equ	0xFF0
 28906                           indf0	equ	0xFEF
 28907                           postinc0	equ	0xFEE
 28908                           fsr0h	equ	0xFEA
 28909                           fsr0l	equ	0xFE9
 28910                           wreg	equ	0xFE8
 28911                           postinc1	equ	0xFE6
 28912                           postdec1	equ	0xFE5
 28913                           plusw1	equ	0xFE3
 28914                           fsr1h	equ	0xFE2
 28915                           fsr1l	equ	0xFE1
 28916                           indf2	equ	0xFDF
 28917                           postinc2	equ	0xFDE
 28918                           postdec2	equ	0xFDD
 28919                           plusw2	equ	0xFDB
 28920                           fsr2h	equ	0xFDA
 28921                           fsr2l	equ	0xFD9
 28922                           status	equ	0xFD8
 28923                           
 28924 ;; *************** function _RADIO_WritePower *****************
 28925 ;; Defined at:
 28926 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28927 ;; Parameters:    Size  Location     Type
 28928 ;;  power           1    wreg     char 
 28929 ;; Auto vars:     Size  Location     Type
 28930 ;;  power           1    5[BANK0 ] char 
 28931 ;;  paDac           1    4[BANK0 ] unsigned char 
 28932 ;;  ocp             1    3[BANK0 ] unsigned char 
 28933 ;; Return value:  Size  Location     Type
 28934 ;;                  1    wreg      void 
 28935 ;; Registers used:
 28936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 28937 ;; Tracked objects:
 28938 ;;		On entry : 0/0
 28939 ;;		On exit  : 0/0
 28940 ;;		Unchanged: 0/0
 28941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28943 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28945 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28946 ;;Total ram usage:        3 bytes
 28947 ;; Hardware stack levels used:    1
 28948 ;; Hardware stack levels required when called:   10
 28949 ;; This function calls:
 28950 ;;		_RADIO_RegisterRead
 28951 ;;		_RADIO_RegisterWrite
 28952 ;; This function is called by:
 28953 ;;		_RADIO_WriteConfiguration
 28954 ;; This function uses a non-reentrant model
 28955 ;;
 28956                           
 28957                           	psect	text134
 28958  0000'                    __ptext134:
 28959                           	opt stack 0
 28960  0000'                    _RADIO_WritePower:
 28961                           	opt stack 17
 28962                           
 28963                           ;incstack = 0
 28964                           ;RADIO_WritePower@power stored from wreg
 28965  0000' 0100               	movlb	0	; () banked
 28966  0002' 6F00'              	movwf	RADIO_WritePower@power& (0+255),b
 28967                           
 28968                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 28969                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 28970                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 28971  0004' 0101               	movlb	1	; () banked
 28972  0006' 5100'              	movf	(_RadioConfiguration+29)& (0+255),w,b
 28973  0008' A4D8               	btfss	status,2,c
 28974  000A' D030               	goto	l430
 28975                           
 28976                           ; BSR set to: 1
 28977                           ;radio_driver_SX1276.c: 348: {
 28978                           ;radio_driver_SX1276.c: 350: if (power < -3)
 28979  000C' 0100               	movlb	0	; () banked
 28980  000E' 5100'              	movf	RADIO_WritePower@power& (0+255),w,b
 28981  0010' 0A80               	xorlw	128
 28982  0012' 0F83               	addlw	131
 28983  0014' B0D8               	btfsc	status,0,c
 28984  0016' D002               	goto	l431
 28985                           
 28986                           ; BSR set to: 0
 28987                           ;radio_driver_SX1276.c: 351: {
 28988                           ;radio_driver_SX1276.c: 352: power = -3;
 28989  0018' 0EFD               	movlw	253
 28990  001A' 6F00'              	movwf	RADIO_WritePower@power& (0+255),b
 28991  001C'                    l431:
 28992                           
 28993                           ; BSR set to: 0
 28994                           ;radio_driver_SX1276.c: 353: }
 28995                           ;radio_driver_SX1276.c: 354: if (power > 15)
 28996                           
 28997                           ; BSR set to: 0
 28998  001C' 5100'              	movf	RADIO_WritePower@power& (0+255),w,b
 28999  001E' 0A80               	xorlw	128
 29000  0020' 0F70               	addlw	-144
 29001  0022' A0D8               	btfss	status,0,c
 29002  0024' D002               	goto	l432
 29003                           
 29004                           ; BSR set to: 0
 29005                           ;radio_driver_SX1276.c: 355: {
 29006                           ;radio_driver_SX1276.c: 356: power = 15;
 29007  0026' 0E0F               	movlw	15
 29008  0028' 6F00'              	movwf	RADIO_WritePower@power& (0+255),b
 29009  002A'                    l432:
 29010                           
 29011                           ; BSR set to: 0
 29012                           ;radio_driver_SX1276.c: 357: }
 29013                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 29014                           
 29015                           ; BSR set to: 0
 29016  002A' 0E4D               	movlw	77
 29017  002C' EC00' F000'        	call	_RADIO_RegisterRead
 29018  0030' 0100               	movlb	0	; () banked
 29019  0032' 6F00'              	movwf	RADIO_WritePower@paDac& (0+255),b
 29020                           
 29021                           ; BSR set to: 0
 29022                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 29023  0034' 0EF8               	movlw	248
 29024  0036' 1700'              	andwf	RADIO_WritePower@paDac& (0+255),f,b
 29025                           
 29026                           ; BSR set to: 0
 29027                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 29028  0038' 8500'              	bsf	RADIO_WritePower@paDac& (0+255),2,b
 29029                           
 29030                           ; BSR set to: 0
 29031                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 29032  003A' C004' F001'        	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 29033  003E' 0E4D               	movlw	77
 29034  0040' EC00' F000'        	call	_RADIO_RegisterWrite
 29035                           
 29036                           ;radio_driver_SX1276.c: 364: if (power < 0)
 29037  0044' 0100               	movlb	0	; () banked
 29038  0046' AF00'              	btfss	RADIO_WritePower@power& (0+255),7,b
 29039  0048' D009               	goto	l433
 29040                           
 29041                           ; BSR set to: 0
 29042                           ;radio_driver_SX1276.c: 365: {
 29043                           ;radio_driver_SX1276.c: 369: power += 3;
 29044  004A' 0E03               	movlw	3
 29045  004C' 2700'              	addwf	RADIO_WritePower@power& (0+255),f,b
 29046                           
 29047                           ; BSR set to: 0
 29048                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 29049  004E' 5100'              	movf	RADIO_WritePower@power& (0+255),w,b
 29050  0050' 0920               	iorlw	32
 29051  0052' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 29052  0054' 0E09               	movlw	9
 29053  0056' EC00' F000'        	call	_RADIO_RegisterWrite
 29054                           
 29055                           ;radio_driver_SX1276.c: 371: }
 29056  005A' 0012               	return	
 29057  005C'                    l433:
 29058                           
 29059                           ;radio_driver_SX1276.c: 372: else
 29060                           ;radio_driver_SX1276.c: 373: {
 29061                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 29062  005C' 0100               	movlb	0	; () banked
 29063  005E' 5100'              	movf	RADIO_WritePower@power& (0+255),w,b
 29064  0060' 0970               	iorlw	112
 29065  0062' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 29066  0064' 0E09               	movlw	9
 29067  0066' EC00' F000'        	call	_RADIO_RegisterWrite
 29068                           
 29069                           ;radio_driver_SX1276.c: 378: }
 29070                           ;radio_driver_SX1276.c: 379: }
 29071  006A' 0012               	return	
 29072  006C'                    l430:
 29073                           
 29074                           ;radio_driver_SX1276.c: 380: else
 29075                           ;radio_driver_SX1276.c: 381: {
 29076                           ;radio_driver_SX1276.c: 385: if (power < 2)
 29077  006C' 0100               	movlb	0	; () banked
 29078  006E' 5100'              	movf	RADIO_WritePower@power& (0+255),w,b
 29079  0070' 0A80               	xorlw	128
 29080  0072' 0F7E               	addlw	-130
 29081  0074' B0D8               	btfsc	status,0,c
 29082  0076' D002               	goto	l436
 29083                           
 29084                           ; BSR set to: 0
 29085                           ;radio_driver_SX1276.c: 386: {
 29086                           ;radio_driver_SX1276.c: 387: power = 2;
 29087  0078' 0E02               	movlw	2
 29088  007A' 6F00'              	movwf	RADIO_WritePower@power& (0+255),b
 29089  007C'                    l436:
 29090                           
 29091                           ; BSR set to: 0
 29092                           ;radio_driver_SX1276.c: 388: }
 29093                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 29094                           
 29095                           ; BSR set to: 0
 29096  007C' 5100'              	movf	RADIO_WritePower@power& (0+255),w,b
 29097  007E' 0A80               	xorlw	128
 29098  0080' 0F6C               	addlw	-148
 29099  0082' A0D8               	btfss	status,0,c
 29100  0084' D002               	goto	l437
 29101                           
 29102                           ; BSR set to: 0
 29103                           ;radio_driver_SX1276.c: 392: {
 29104                           ;radio_driver_SX1276.c: 393: power = 20;
 29105  0086' 0E14               	movlw	20
 29106  0088' D006               	goto	L22
 29107  008A'                    l437:
 29108                           
 29109                           ; BSR set to: 0
 29110                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 29111                           
 29112                           ; BSR set to: 0
 29113  008A' 5100'              	movf	RADIO_WritePower@power& (0+255),w,b
 29114  008C' 0A80               	xorlw	128
 29115  008E' 0F6E               	addlw	-146
 29116  0090' A0D8               	btfss	status,0,c
 29117  0092' D002               	goto	l439
 29118                           
 29119                           ; BSR set to: 0
 29120                           ;radio_driver_SX1276.c: 396: {
 29121                           ;radio_driver_SX1276.c: 397: power = 17;
 29122  0094' 0E11               	movlw	17
 29123  0096'                    L22:
 29124  0096' 6F00'              	movwf	RADIO_WritePower@power& (0+255),b
 29125  0098'                    l439:
 29126                           
 29127                           ; BSR set to: 0
 29128                           ;radio_driver_SX1276.c: 398: }
 29129                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 29130                           
 29131                           ; BSR set to: 0
 29132                           
 29133                           ; BSR set to: 0
 29134  0098' 0E0B               	movlw	11
 29135  009A' EC00' F000'        	call	_RADIO_RegisterRead
 29136  009E' 0100               	movlb	0	; () banked
 29137  00A0' 6F00'              	movwf	RADIO_WritePower@ocp& (0+255),b
 29138                           
 29139                           ; BSR set to: 0
 29140                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 29141  00A2' 0E4D               	movlw	77
 29142  00A4' EC00' F000'        	call	_RADIO_RegisterRead
 29143  00A8' 0100               	movlb	0	; () banked
 29144  00AA' 6F00'              	movwf	RADIO_WritePower@paDac& (0+255),b
 29145                           
 29146                           ; BSR set to: 0
 29147                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 29148  00AC' 0EF8               	movlw	248
 29149  00AE' 1700'              	andwf	RADIO_WritePower@paDac& (0+255),f,b
 29150                           
 29151                           ; BSR set to: 0
 29152                           ;radio_driver_SX1276.c: 403: if (power == 20)
 29153  00B0' 0E14               	movlw	20
 29154  00B2' 1900'              	xorwf	RADIO_WritePower@power& (0+255),w,b
 29155  00B4' A4D8               	btfss	status,2,c
 29156  00B6' D006               	goto	l440
 29157                           
 29158                           ; BSR set to: 0
 29159                           ;radio_driver_SX1276.c: 404: {
 29160                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 29161  00B8' 0E07               	movlw	7
 29162  00BA' 1300'              	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 29163                           
 29164                           ; BSR set to: 0
 29165                           ;radio_driver_SX1276.c: 406: power = 15;
 29166  00BC' 0E0F               	movlw	15
 29167  00BE' 6F00'              	movwf	RADIO_WritePower@power& (0+255),b
 29168                           
 29169                           ; BSR set to: 0
 29170                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 29171  00C0' 9B00'              	bcf	RADIO_WritePower@ocp& (0+255),5,b
 29172                           
 29173                           ;radio_driver_SX1276.c: 408: }
 29174  00C2' D004               	goto	l441
 29175  00C4'                    l440:
 29176                           
 29177                           ; BSR set to: 0
 29178                           ;radio_driver_SX1276.c: 409: else
 29179                           ;radio_driver_SX1276.c: 410: {
 29180                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 29181                           
 29182                           ; BSR set to: 0
 29183  00C4' 8500'              	bsf	RADIO_WritePower@paDac& (0+255),2,b
 29184                           
 29185                           ; BSR set to: 0
 29186                           ;radio_driver_SX1276.c: 412: power -= 2;
 29187  00C6' 0EFE               	movlw	254
 29188  00C8' 2700'              	addwf	RADIO_WritePower@power& (0+255),f,b
 29189                           
 29190                           ; BSR set to: 0
 29191                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 29192  00CA' 8B00'              	bsf	RADIO_WritePower@ocp& (0+255),5,b
 29193  00CC'                    l441:
 29194                           
 29195                           ; BSR set to: 0
 29196                           ;radio_driver_SX1276.c: 414: }
 29197                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 29198                           
 29199                           ; BSR set to: 0
 29200  00CC' C004' F001'        	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 29201  00D0' 0E4D               	movlw	77
 29202  00D2' EC00' F000'        	call	_RADIO_RegisterWrite
 29203                           
 29204                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 29205  00D6' 0100               	movlb	0	; () banked
 29206  00D8' 5100'              	movf	RADIO_WritePower@power& (0+255),w,b
 29207  00DA' 0980               	iorlw	128
 29208  00DC' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 29209  00DE' 0E09               	movlw	9
 29210  00E0' EC00' F000'        	call	_RADIO_RegisterWrite
 29211                           
 29212                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 29213  00E4' C003' F001'        	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 29214  00E8' 0E0B               	movlw	11
 29215  00EA' EC00' F000'        	call	_RADIO_RegisterWrite
 29216  00EE' 0012               	return	
 29217  00F0'                    __end_of_RADIO_WritePower:
 29218                           	opt stack 0
 29219                           tosu	equ	0xFFF
 29220                           tosh	equ	0xFFE
 29221                           tosl	equ	0xFFD
 29222                           pclath	equ	0xFFA
 29223                           tblptru	equ	0xFF8
 29224                           tblptrh	equ	0xFF7
 29225                           tblptrl	equ	0xFF6
 29226                           tablat	equ	0xFF5
 29227                           prodh	equ	0xFF4
 29228                           prodl	equ	0xFF3
 29229                           intcon	equ	0xFF2
 29230                           intcon2	equ	0xFF1
 29231                           intcon3	equ	0xFF0
 29232                           indf0	equ	0xFEF
 29233                           postinc0	equ	0xFEE
 29234                           fsr0h	equ	0xFEA
 29235                           fsr0l	equ	0xFE9
 29236                           wreg	equ	0xFE8
 29237                           postinc1	equ	0xFE6
 29238                           postdec1	equ	0xFE5
 29239                           plusw1	equ	0xFE3
 29240                           fsr1h	equ	0xFE2
 29241                           fsr1l	equ	0xFE1
 29242                           indf2	equ	0xFDF
 29243                           postinc2	equ	0xFDE
 29244                           postdec2	equ	0xFDD
 29245                           plusw2	equ	0xFDB
 29246                           fsr2h	equ	0xFDA
 29247                           fsr2l	equ	0xFD9
 29248                           status	equ	0xFD8
 29249                           
 29250 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 29251 ;; Defined at:
 29252 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29253 ;; Parameters:    Size  Location     Type
 29254 ;;  frequencyDev    4   13[BANK0 ] unsigned long 
 29255 ;; Auto vars:     Size  Location     Type
 29256 ;;  num             4   17[BANK0 ] unsigned long 
 29257 ;; Return value:  Size  Location     Type
 29258 ;;                  1    wreg      void 
 29259 ;; Registers used:
 29260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 29261 ;; Tracked objects:
 29262 ;;		On entry : 0/0
 29263 ;;		On exit  : 0/0
 29264 ;;		Unchanged: 0/0
 29265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29266 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29267 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29269 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29270 ;;Total ram usage:        8 bytes
 29271 ;; Hardware stack levels used:    1
 29272 ;; Hardware stack levels required when called:   10
 29273 ;; This function calls:
 29274 ;;		_RADIO_RegisterWrite
 29275 ;;		___lldiv
 29276 ;; This function is called by:
 29277 ;;		_RADIO_WriteConfiguration
 29278 ;; This function uses a non-reentrant model
 29279 ;;
 29280                           
 29281                           	psect	text135
 29282  0000'                    __ptext135:
 29283                           	opt stack 0
 29284  0000'                    _RADIO_WriteFSKFrequencyDeviation:
 29285                           	opt stack 17
 29286                           
 29287                           ;radio_driver_SX1276.c: 296: uint32_t num;
 29288                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 29289                           
 29290                           ;incstack = 0
 29291  0000' C00D' F011'        	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 29292  0004' C00E' F012'        	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 29293  0008' C00F' F013'        	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 29294  000C' C010' F014'        	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 29295                           
 29296                           ;radio_driver_SX1276.c: 304: num <<= (8);
 29297  0010' C013' F014'        	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 29298  0014' C012' F013'        	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 29299  0018' C011' F012'        	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 29300  001C' 0100               	movlb	0	; () banked
 29301  001E' 6B00'              	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 29302                           
 29303                           ; BSR set to: 0
 29304                           ;radio_driver_SX1276.c: 305: num /= 15625;
 29305  0020' C011' F000'        	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 29306  0024' C012' F001'        	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 29307  0028' C013' F002'        	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 29308  002C' C014' F003'        	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 29309  0030' 0E09               	movlw	9
 29310  0032' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 29311  0034' 0E3D               	movlw	61
 29312  0036' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 29313  0038' 0E00               	movlw	0
 29314  003A' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 29315  003C' 0E00               	movlw	0
 29316  003E' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 29317  0040' EC00' F000'        	call	___lldiv	;wreg free
 29318  0044' C000' F011'        	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 29319  0048' C001' F012'        	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 29320  004C' C002' F013'        	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 29321  0050' C003' F014'        	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 29322                           
 29323                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 29324  0054' C012' F001'        	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 29325  0058' 0E04               	movlw	4
 29326  005A' EC00' F000'        	call	_RADIO_RegisterWrite
 29327                           
 29328                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 29329  005E' C011' F001'        	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 29330  0062' 0E05               	movlw	5
 29331  0064' EC00' F000'        	call	_RADIO_RegisterWrite
 29332  0068' 0012               	return		;funcret
 29333  006A'                    __end_of_RADIO_WriteFSKFrequencyDeviation:
 29334                           	opt stack 0
 29335                           tosu	equ	0xFFF
 29336                           tosh	equ	0xFFE
 29337                           tosl	equ	0xFFD
 29338                           pclath	equ	0xFFA
 29339                           tblptru	equ	0xFF8
 29340                           tblptrh	equ	0xFF7
 29341                           tblptrl	equ	0xFF6
 29342                           tablat	equ	0xFF5
 29343                           prodh	equ	0xFF4
 29344                           prodl	equ	0xFF3
 29345                           intcon	equ	0xFF2
 29346                           intcon2	equ	0xFF1
 29347                           intcon3	equ	0xFF0
 29348                           indf0	equ	0xFEF
 29349                           postinc0	equ	0xFEE
 29350                           fsr0h	equ	0xFEA
 29351                           fsr0l	equ	0xFE9
 29352                           wreg	equ	0xFE8
 29353                           postinc1	equ	0xFE6
 29354                           postdec1	equ	0xFE5
 29355                           plusw1	equ	0xFE3
 29356                           fsr1h	equ	0xFE2
 29357                           fsr1l	equ	0xFE1
 29358                           indf2	equ	0xFDF
 29359                           postinc2	equ	0xFDE
 29360                           postdec2	equ	0xFDD
 29361                           plusw2	equ	0xFDB
 29362                           fsr2h	equ	0xFDA
 29363                           fsr2l	equ	0xFD9
 29364                           status	equ	0xFD8
 29365                           
 29366 ;; *************** function _RADIO_WriteFSKBitRate *****************
 29367 ;; Defined at:
 29368 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29369 ;; Parameters:    Size  Location     Type
 29370 ;;  bitRate         4   13[BANK0 ] unsigned long 
 29371 ;; Auto vars:     Size  Location     Type
 29372 ;;  num             4   17[BANK0 ] unsigned long 
 29373 ;; Return value:  Size  Location     Type
 29374 ;;                  1    wreg      void 
 29375 ;; Registers used:
 29376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 29377 ;; Tracked objects:
 29378 ;;		On entry : 0/0
 29379 ;;		On exit  : 0/0
 29380 ;;		Unchanged: 0/0
 29381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29382 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29383 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29385 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29386 ;;Total ram usage:        8 bytes
 29387 ;; Hardware stack levels used:    1
 29388 ;; Hardware stack levels required when called:   10
 29389 ;; This function calls:
 29390 ;;		_RADIO_RegisterWrite
 29391 ;;		___lldiv
 29392 ;; This function is called by:
 29393 ;;		_RADIO_WriteConfiguration
 29394 ;; This function uses a non-reentrant model
 29395 ;;
 29396                           
 29397                           	psect	text136
 29398  0000'                    __ptext136:
 29399                           	opt stack 0
 29400  0000'                    _RADIO_WriteFSKBitRate:
 29401                           	opt stack 17
 29402                           
 29403                           ;radio_driver_SX1276.c: 318: uint32_t num;
 29404                           ;radio_driver_SX1276.c: 320: num = 32000000;
 29405                           
 29406                           ;incstack = 0
 29407  0000' 0E00               	movlw	0
 29408  0002' 0100               	movlb	0	; () banked
 29409  0004' 6F00'              	movwf	RADIO_WriteFSKBitRate@num& (0+255),b
 29410  0006' 0E48               	movlw	72
 29411  0008' 6F00'              	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 29412  000A' 0EE8               	movlw	232
 29413  000C' 6F00'              	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 29414  000E' 0E01               	movlw	1
 29415  0010' 6F00'              	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 29416                           
 29417                           ; BSR set to: 0
 29418                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 29419  0012' C011' F000'        	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 29420  0016' C012' F001'        	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 29421  001A' C013' F002'        	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 29422  001E' C014' F003'        	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 29423  0022' C00D' F004'        	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 29424  0026' C00E' F005'        	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 29425  002A' C00F' F006'        	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 29426  002E' C010' F007'        	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 29427  0032' EC00' F000'        	call	___lldiv	;wreg free
 29428  0036' C000' F011'        	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 29429  003A' C001' F012'        	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 29430  003E' C002' F013'        	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 29431  0042' C003' F014'        	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 29432                           
 29433                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 29434  0046' C012' F001'        	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 29435  004A' 0E02               	movlw	2
 29436  004C' EC00' F000'        	call	_RADIO_RegisterWrite
 29437                           
 29438                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 29439  0050' C011' F001'        	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 29440  0054' 0E03               	movlw	3
 29441  0056' EC00' F000'        	call	_RADIO_RegisterWrite
 29442                           
 29443                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 29444  005A' 0E00               	movlw	0
 29445  005C' 0100               	movlb	0	; () banked
 29446  005E' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 29447  0060' 0E5D               	movlw	93
 29448  0062' EC00' F000'        	call	_RADIO_RegisterWrite
 29449  0066' 0012               	return		;funcret
 29450  0068'                    __end_of_RADIO_WriteFSKBitRate:
 29451                           	opt stack 0
 29452                           tosu	equ	0xFFF
 29453                           tosh	equ	0xFFE
 29454                           tosl	equ	0xFFD
 29455                           pclath	equ	0xFFA
 29456                           tblptru	equ	0xFF8
 29457                           tblptrh	equ	0xFF7
 29458                           tblptrl	equ	0xFF6
 29459                           tablat	equ	0xFF5
 29460                           prodh	equ	0xFF4
 29461                           prodl	equ	0xFF3
 29462                           intcon	equ	0xFF2
 29463                           intcon2	equ	0xFF1
 29464                           intcon3	equ	0xFF0
 29465                           indf0	equ	0xFEF
 29466                           postinc0	equ	0xFEE
 29467                           fsr0h	equ	0xFEA
 29468                           fsr0l	equ	0xFE9
 29469                           wreg	equ	0xFE8
 29470                           postinc1	equ	0xFE6
 29471                           postdec1	equ	0xFE5
 29472                           plusw1	equ	0xFE3
 29473                           fsr1h	equ	0xFE2
 29474                           fsr1l	equ	0xFE1
 29475                           indf2	equ	0xFDF
 29476                           postinc2	equ	0xFDE
 29477                           postdec2	equ	0xFDD
 29478                           plusw2	equ	0xFDB
 29479                           fsr2h	equ	0xFDA
 29480                           fsr2l	equ	0xFD9
 29481                           status	equ	0xFD8
 29482                           
 29483 ;; *************** function _PrepareJoinRequestFrame *****************
 29484 ;; Defined at:
 29485 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 29486 ;; Parameters:    Size  Location     Type
 29487 ;;		None
 29488 ;; Auto vars:     Size  Location     Type
 29489 ;;  mic             4  116[BANK0 ] unsigned long 
 29490 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 29491 ;;  iCtr            1  121[BANK0 ] unsigned char 
 29492 ;;  mhdr            1  120[BANK0 ] struct .
 29493 ;; Return value:  Size  Location     Type
 29494 ;;                  1    wreg      unsigned char 
 29495 ;; Registers used:
 29496 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29497 ;; Tracked objects:
 29498 ;;		On entry : 0/0
 29499 ;;		On exit  : 0/0
 29500 ;;		Unchanged: 0/0
 29501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29503 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29504 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29505 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29506 ;;Total ram usage:       11 bytes
 29507 ;; Hardware stack levels used:    1
 29508 ;; Hardware stack levels required when called:   13
 29509 ;; This function calls:
 29510 ;;		_ComputeMic
 29511 ;;		_Random
 29512 ;;		_memcpy
 29513 ;;		_memset
 29514 ;; This function is called by:
 29515 ;;		_LORAWAN_Join
 29516 ;; This function uses a non-reentrant model
 29517 ;;
 29518                           
 29519                           	psect	text137
 29520  0000'                    __ptext137:
 29521                           	opt stack 0
 29522  0000'                    _PrepareJoinRequestFrame:
 29523                           	opt stack 16
 29524                           
 29525                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 29526                           
 29527                           ;incstack = 0
 29528  0000' 0E00               	movlw	0
 29529  0002' 0100               	movlb	0	; () banked
 29530  0004' 6F00'              	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 29531                           
 29532                           ; BSR set to: 0
 29533                           ;lorawan.c: 1809: Mhdr_t mhdr;
 29534                           ;lorawan.c: 1810: uint32_t mic;
 29535                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 29536  0006' 0E00'              	movlw	low _macBuffer
 29537  0008' 6F00'              	movwf	memset@p1& (0+255),b
 29538  000A' 0E00'              	movlw	high _macBuffer
 29539  000C' 6F00'              	movwf	(memset@p1+1)& (0+255),b
 29540  000E' 0E00               	movlw	0
 29541  0010' 6F00'              	movwf	(memset@c+1)& (0+255),b
 29542  0012' 0E00               	movlw	0
 29543  0014' 6F00'              	movwf	memset@c& (0+255),b
 29544  0016' 0E01               	movlw	1
 29545  0018' 6F00'              	movwf	(memset@n+1)& (0+255),b
 29546  001A' 0E0F               	movlw	15
 29547  001C' 6F00'              	movwf	memset@n& (0+255),b
 29548  001E' EC00' F000'        	call	_memset	;wreg free
 29549                           
 29550                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 29551  0022' 0100               	movlb	0	; () banked
 29552  0024' 9B00'              	bcf	PrepareJoinRequestFrame@mhdr& (0+255),5,b
 29553  0026' 9D00'              	bcf	PrepareJoinRequestFrame@mhdr& (0+255),6,b
 29554  0028' 9F00'              	bcf	PrepareJoinRequestFrame@mhdr& (0+255),7,b
 29555                           
 29556                           ; BSR set to: 0
 29557                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 29558  002A' 0EFC               	movlw	-4
 29559  002C' 1700'              	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 29560                           
 29561                           ; BSR set to: 0
 29562                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 29563  002E' 9500'              	bcf	PrepareJoinRequestFrame@mhdr& (0+255),2,b
 29564  0030' 9700'              	bcf	PrepareJoinRequestFrame@mhdr& (0+255),3,b
 29565  0032' 9900'              	bcf	PrepareJoinRequestFrame@mhdr& (0+255),4,b
 29566                           
 29567                           ; BSR set to: 0
 29568                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 29569  0034' 5100'              	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29570  0036' 0D01               	mullw	1
 29571  0038' 0E00'              	movlw	low _macBuffer
 29572  003A' 24F3               	addwf	prodl,w,c
 29573  003C' 6ED9               	movwf	fsr2l,c
 29574  003E' 0E00'              	movlw	high _macBuffer
 29575  0040' 20F4               	addwfc	prodh,w,c
 29576  0042' 6EDA               	movwf	fsr2h,c
 29577  0044' C078' FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 29578                           
 29579                           ; BSR set to: 0
 29580  0048' 2B00'              	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 29581                           
 29582                           ; BSR set to: 0
 29583                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 29584  004A' 0E00               	movlw	0
 29585  004C' 6F00'              	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 29586  004E'                    l16336:
 29587                           
 29588                           ; BSR set to: 0
 29589  004E' 0E07               	movlw	7
 29590  0050' 6500'              	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 29591  0052' D001               	goto	l2041
 29592  0054' D022               	goto	u19960
 29593  0056'                    l2041:
 29594                           
 29595                           ; BSR set to: 0
 29596                           ;lorawan.c: 1821: {
 29597                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 29598                           
 29599                           ; BSR set to: 0
 29600  0056' 5100'              	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 29601  0058' 6F00'              	movwf	??_PrepareJoinRequestFrame& (0+255),b
 29602  005A' 6B00'              	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 29603  005C' 1F00'              	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 29604  005E' 1F00'              	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29605  0060' 4B00'              	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 29606  0062' 2B00'              	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29607  0064' 0E07               	movlw	7
 29608  0066' 2700'              	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 29609  0068' 0E00               	movlw	0
 29610  006A' 2300'              	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29611  006C' 0E00'              	movlw	low (_loRa+82)
 29612  006E' 2500'              	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 29613  0070' 6ED9               	movwf	fsr2l,c
 29614  0072' 0E00'              	movlw	high (_loRa+82)
 29615  0074' 2100'              	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 29616  0076' 6EDA               	movwf	fsr2h,c
 29617  0078' 5100'              	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 29618  007A' C07A' F072'        	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 29619  007E' 6B00'              	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 29620  0080' 2700'              	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 29621  0082' 0E00               	movlw	0
 29622  0084' 2300'              	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 29623  0086' 0E00'              	movlw	low _macBuffer
 29624  0088' 2500'              	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 29625  008A' 6EE9               	movwf	fsr0l,c
 29626  008C' 0E00'              	movlw	high _macBuffer
 29627  008E' 2100'              	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 29628  0090' 6EEA               	movwf	fsr0h,c
 29629  0092' CFDF FFEF          	movff	indf2,indf0
 29630                           
 29631                           ; BSR set to: 0
 29632  0096' 2B00'              	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 29633  0098' D7DA               	goto	l16336
 29634  009A'                    u19960:
 29635                           
 29636                           ; BSR set to: 0
 29637                           ;lorawan.c: 1823: }
 29638                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 29639                           
 29640                           ; BSR set to: 0
 29641  009A' 5100'              	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29642  009C' 0F08               	addlw	8
 29643  009E' 6F00'              	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 29644                           
 29645                           ; BSR set to: 0
 29646                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 29647  00A0' 0E00               	movlw	0
 29648  00A2' 6F00'              	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 29649  00A4'                    l16350:
 29650                           
 29651                           ; BSR set to: 0
 29652  00A4' 0E07               	movlw	7
 29653  00A6' 6500'              	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 29654  00A8' D001               	goto	l2043
 29655  00AA' D022               	goto	u19980
 29656  00AC'                    l2043:
 29657                           
 29658                           ; BSR set to: 0
 29659                           ;lorawan.c: 1828: {
 29660                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 29661                           
 29662                           ; BSR set to: 0
 29663  00AC' 5100'              	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 29664  00AE' 6F00'              	movwf	??_PrepareJoinRequestFrame& (0+255),b
 29665  00B0' 6B00'              	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 29666  00B2' 1F00'              	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 29667  00B4' 1F00'              	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29668  00B6' 4B00'              	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 29669  00B8' 2B00'              	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29670  00BA' 0E07               	movlw	7
 29671  00BC' 2700'              	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 29672  00BE' 0E00               	movlw	0
 29673  00C0' 2300'              	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29674  00C2' 0E00'              	movlw	low (_loRa+90)
 29675  00C4' 2500'              	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 29676  00C6' 6ED9               	movwf	fsr2l,c
 29677  00C8' 0E00'              	movlw	high (_loRa+90)
 29678  00CA' 2100'              	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 29679  00CC' 6EDA               	movwf	fsr2h,c
 29680  00CE' 5100'              	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 29681  00D0' C07A' F072'        	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 29682  00D4' 6B00'              	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 29683  00D6' 2700'              	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 29684  00D8' 0E00               	movlw	0
 29685  00DA' 2300'              	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 29686  00DC' 0E00'              	movlw	low _macBuffer
 29687  00DE' 2500'              	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 29688  00E0' 6EE9               	movwf	fsr0l,c
 29689  00E2' 0E00'              	movlw	high _macBuffer
 29690  00E4' 2100'              	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 29691  00E6' 6EEA               	movwf	fsr0h,c
 29692  00E8' CFDF FFEF          	movff	indf2,indf0
 29693                           
 29694                           ; BSR set to: 0
 29695  00EC' 2B00'              	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 29696  00EE' D7DA               	goto	l16350
 29697  00F0'                    u19980:
 29698                           
 29699                           ; BSR set to: 0
 29700                           ;lorawan.c: 1830: }
 29701                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 29702                           
 29703                           ; BSR set to: 0
 29704  00F0' 5100'              	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29705  00F2' 0F08               	addlw	8
 29706  00F4' 6F00'              	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 29707                           
 29708                           ; BSR set to: 0
 29709                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 29710  00F6' 0EFF               	movlw	255
 29711  00F8' 6F00'              	movwf	(Random@max+1)& (0+255),b
 29712  00FA' 6900'              	setf	Random@max& (0+255),b
 29713  00FC' EC00' F000'        	call	_Random	;wreg free
 29714  0100' C04D' F0D2'        	movff	?_Random,_loRa+210
 29715  0104' C04E' F0D3'        	movff	?_Random+1,_loRa+211
 29716                           
 29717                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 29718  0108' 0100               	movlb	0	; () banked
 29719  010A' 5100'              	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29720  010C' 0D01               	mullw	1
 29721  010E' 0E00'              	movlw	low _macBuffer
 29722  0110' 24F3               	addwf	prodl,w,c
 29723  0112' 6F00'              	movwf	memcpy@d1& (0+255),b
 29724  0114' 0E00'              	movlw	high _macBuffer
 29725  0116' 20F4               	addwfc	prodh,w,c
 29726  0118' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 29727  011A' 0E00'              	movlw	low (_loRa+210)
 29728  011C' 6F00'              	movwf	memcpy@s1& (0+255),b
 29729  011E' 0E00'              	movlw	high (_loRa+210)
 29730  0120' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 29731  0122' 0E00               	movlw	0
 29732  0124' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 29733  0126' 0E02               	movlw	2
 29734  0128' 6F00'              	movwf	memcpy@n& (0+255),b
 29735  012A' EC00' F000'        	call	_memcpy	;wreg free
 29736                           
 29737                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 29738  012E' 0100               	movlb	0	; () banked
 29739  0130' 5100'              	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29740  0132' 0F02               	addlw	2
 29741  0134' 6F00'              	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 29742                           
 29743                           ; BSR set to: 0
 29744                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 29745  0136' 0E00'              	movlw	low (_loRa+66)
 29746  0138' 6F00'              	movwf	ComputeMic@key& (0+255),b
 29747  013A' 0E00'              	movlw	high (_loRa+66)
 29748  013C' 6F00'              	movwf	(ComputeMic@key+1)& (0+255),b
 29749  013E' 0E00'              	movlw	low _macBuffer
 29750  0140' 6F00'              	movwf	ComputeMic@buffer& (0+255),b
 29751  0142' 0E00'              	movlw	high _macBuffer
 29752  0144' 6F00'              	movwf	(ComputeMic@buffer+1)& (0+255),b
 29753  0146' C07A' F06B'        	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 29754  014A' EC00' F000'        	call	_ComputeMic	;wreg free
 29755  014E' C067' F074'        	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 29756  0152' C068' F075'        	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 29757  0156' C069' F076'        	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 29758  015A' C06A' F077'        	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 29759                           
 29760                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 29761  015E' 0100               	movlb	0	; () banked
 29762  0160' 5100'              	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29763  0162' 0D01               	mullw	1
 29764  0164' 0E00'              	movlw	low _macBuffer
 29765  0166' 24F3               	addwf	prodl,w,c
 29766  0168' 6F00'              	movwf	memcpy@d1& (0+255),b
 29767  016A' 0E00'              	movlw	high _macBuffer
 29768  016C' 20F4               	addwfc	prodh,w,c
 29769  016E' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 29770  0170' 0E00'              	movlw	low PrepareJoinRequestFrame@mic
 29771  0172' 6F00'              	movwf	memcpy@s1& (0+255),b
 29772  0174' 0E00'              	movlw	high PrepareJoinRequestFrame@mic
 29773  0176' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 29774  0178' 0E00               	movlw	0
 29775  017A' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 29776  017C' 0E04               	movlw	4
 29777  017E' 6F00'              	movwf	memcpy@n& (0+255),b
 29778  0180' EC00' F000'        	call	_memcpy	;wreg free
 29779                           
 29780                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 29781  0184' 0100               	movlb	0	; () banked
 29782  0186' 5100'              	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29783  0188' 0F04               	addlw	4
 29784  018A' 6F00'              	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 29785                           
 29786                           ; BSR set to: 0
 29787                           ;lorawan.c: 1842: return bufferIndex;
 29788  018C' 5100'              	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29789  018E' 0012               	return	
 29790  0190'                    __end_of_PrepareJoinRequestFrame:
 29791                           	opt stack 0
 29792                           tosu	equ	0xFFF
 29793                           tosh	equ	0xFFE
 29794                           tosl	equ	0xFFD
 29795                           pclath	equ	0xFFA
 29796                           tblptru	equ	0xFF8
 29797                           tblptrh	equ	0xFF7
 29798                           tblptrl	equ	0xFF6
 29799                           tablat	equ	0xFF5
 29800                           prodh	equ	0xFF4
 29801                           prodl	equ	0xFF3
 29802                           intcon	equ	0xFF2
 29803                           intcon2	equ	0xFF1
 29804                           intcon3	equ	0xFF0
 29805                           indf0	equ	0xFEF
 29806                           postinc0	equ	0xFEE
 29807                           fsr0h	equ	0xFEA
 29808                           fsr0l	equ	0xFE9
 29809                           wreg	equ	0xFE8
 29810                           postinc1	equ	0xFE6
 29811                           postdec1	equ	0xFE5
 29812                           plusw1	equ	0xFE3
 29813                           fsr1h	equ	0xFE2
 29814                           fsr1l	equ	0xFE1
 29815                           indf2	equ	0xFDF
 29816                           postinc2	equ	0xFDE
 29817                           postdec2	equ	0xFDD
 29818                           plusw2	equ	0xFDB
 29819                           fsr2h	equ	0xFDA
 29820                           fsr2l	equ	0xFD9
 29821                           status	equ	0xFD8
 29822                           
 29823 ;; *************** function _Random *****************
 29824 ;; Defined at:
 29825 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 29826 ;; Parameters:    Size  Location     Type
 29827 ;;  max             2   77[BANK0 ] unsigned int 
 29828 ;; Auto vars:     Size  Location     Type
 29829 ;;		None
 29830 ;; Return value:  Size  Location     Type
 29831 ;;                  2   77[BANK0 ] unsigned int 
 29832 ;; Registers used:
 29833 ;;		wreg, status,2, status,0, cstack
 29834 ;; Tracked objects:
 29835 ;;		On entry : 0/0
 29836 ;;		On exit  : 0/0
 29837 ;;		Unchanged: 0/0
 29838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29839 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29842 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29843 ;;Total ram usage:        2 bytes
 29844 ;; Hardware stack levels used:    1
 29845 ;; Hardware stack levels required when called:    9
 29846 ;; This function calls:
 29847 ;;		___lwmod
 29848 ;;		_rand
 29849 ;; This function is called by:
 29850 ;;		_SearchAvailableChannel
 29851 ;;		_PrepareJoinRequestFrame
 29852 ;; This function uses a non-reentrant model
 29853 ;;
 29854                           
 29855                           	psect	text138
 29856  0000'                    __ptext138:
 29857                           	opt stack 0
 29858  0000'                    _Random:
 29859                           	opt stack 18
 29860                           
 29861                           ;lorawan.c: 1118: return (rand () % max);
 29862                           
 29863                           ; BSR set to: 0
 29864                           ;incstack = 0
 29865  0000' EC00' F000'        	call	_rand	;wreg free
 29866  0004' C046' F048'        	movff	?_rand,___lwmod@dividend
 29867  0008' C047' F049'        	movff	?_rand+1,___lwmod@dividend+1
 29868  000C' C04D' F04A'        	movff	Random@max,___lwmod@divisor
 29869  0010' C04E' F04B'        	movff	Random@max+1,___lwmod@divisor+1
 29870  0014' EC00' F000'        	call	___lwmod	;wreg free
 29871  0018' C048' F04D'        	movff	?___lwmod,?_Random
 29872  001C' C049' F04E'        	movff	?___lwmod+1,?_Random+1
 29873  0020' 0012               	return	
 29874  0022'                    __end_of_Random:
 29875                           	opt stack 0
 29876                           tosu	equ	0xFFF
 29877                           tosh	equ	0xFFE
 29878                           tosl	equ	0xFFD
 29879                           pclath	equ	0xFFA
 29880                           tblptru	equ	0xFF8
 29881                           tblptrh	equ	0xFF7
 29882                           tblptrl	equ	0xFF6
 29883                           tablat	equ	0xFF5
 29884                           prodh	equ	0xFF4
 29885                           prodl	equ	0xFF3
 29886                           intcon	equ	0xFF2
 29887                           intcon2	equ	0xFF1
 29888                           intcon3	equ	0xFF0
 29889                           indf0	equ	0xFEF
 29890                           postinc0	equ	0xFEE
 29891                           fsr0h	equ	0xFEA
 29892                           fsr0l	equ	0xFE9
 29893                           wreg	equ	0xFE8
 29894                           postinc1	equ	0xFE6
 29895                           postdec1	equ	0xFE5
 29896                           plusw1	equ	0xFE3
 29897                           fsr1h	equ	0xFE2
 29898                           fsr1l	equ	0xFE1
 29899                           indf2	equ	0xFDF
 29900                           postinc2	equ	0xFDE
 29901                           postdec2	equ	0xFDD
 29902                           plusw2	equ	0xFDB
 29903                           fsr2h	equ	0xFDA
 29904                           fsr2l	equ	0xFD9
 29905                           status	equ	0xFD8
 29906                           
 29907 ;; *************** function _rand *****************
 29908 ;; Defined at:
 29909 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 29910 ;; Parameters:    Size  Location     Type
 29911 ;;		None
 29912 ;; Auto vars:     Size  Location     Type
 29913 ;;		None
 29914 ;; Return value:  Size  Location     Type
 29915 ;;                  2   70[BANK0 ] int 
 29916 ;; Registers used:
 29917 ;;		wreg, status,2, status,0, cstack
 29918 ;; Tracked objects:
 29919 ;;		On entry : 0/0
 29920 ;;		On exit  : 0/0
 29921 ;;		Unchanged: 0/0
 29922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29923 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29926 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29927 ;;Total ram usage:        2 bytes
 29928 ;; Hardware stack levels used:    1
 29929 ;; Hardware stack levels required when called:    8
 29930 ;; This function calls:
 29931 ;;		___lmul
 29932 ;; This function is called by:
 29933 ;;		_Random
 29934 ;; This function uses a non-reentrant model
 29935 ;;
 29936                           
 29937                           	psect	text139
 29938  0000'                    __ptext139:
 29939                           	opt stack 0
 29940  0000'                    _rand:
 29941                           	opt stack 18
 29942                           
 29943                           ;incstack = 0
 29944  0000' C010' F03A'        	movff	_randx,___lmul@multiplier
 29945  0004' C011' F03B'        	movff	_randx+1,___lmul@multiplier+1
 29946  0008' C012' F03C'        	movff	_randx+2,___lmul@multiplier+2
 29947  000C' C013' F03D'        	movff	_randx+3,___lmul@multiplier+3
 29948  0010' 0E6D               	movlw	109
 29949  0012' 0100               	movlb	0	; () banked
 29950  0014' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 29951  0016' 0E4E               	movlw	78
 29952  0018' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 29953  001A' 0EC6               	movlw	198
 29954  001C' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 29955  001E' 0E41               	movlw	65
 29956  0020' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 29957  0022' EC00' F000'        	call	___lmul	;wreg free
 29958  0026' C03A' F010'        	movff	?___lmul,_randx
 29959  002A' C03B' F011'        	movff	?___lmul+1,_randx+1
 29960  002E' C03C' F012'        	movff	?___lmul+2,_randx+2
 29961  0032' C03D' F013'        	movff	?___lmul+3,_randx+3
 29962  0036' 0E39               	movlw	57
 29963  0038' 0101               	movlb	1	; () banked
 29964  003A' 2700'              	addwf	_randx& (0+255),f,b
 29965  003C' 0E30               	movlw	48
 29966  003E' 2300'              	addwfc	(_randx+1)& (0+255),f,b
 29967  0040' 0E00               	movlw	0
 29968  0042' 2300'              	addwfc	(_randx+2)& (0+255),f,b
 29969  0044' 0E00               	movlw	0
 29970  0046' 2300'              	addwfc	(_randx+3)& (0+255),f,b
 29971                           
 29972                           ; BSR set to: 1
 29973  0048' 0EFF               	movlw	255
 29974  004A' 1500'              	andwf	(_randx+2)& (0+255),w,b
 29975  004C' 0100               	movlb	0	; () banked
 29976  004E' 6F00'              	movwf	?_rand& (0+255),b
 29977  0050' 0E7F               	movlw	127
 29978  0052' 0101               	movlb	1	; () banked
 29979  0054' 1500'              	andwf	(_randx+3)& (0+255),w,b
 29980  0056' 0100               	movlb	0	; () banked
 29981  0058' 6F00'              	movwf	(?_rand+1)& (0+255),b
 29982  005A' 0012               	return	
 29983  005C'                    __end_of_rand:
 29984                           	opt stack 0
 29985                           tosu	equ	0xFFF
 29986                           tosh	equ	0xFFE
 29987                           tosl	equ	0xFFD
 29988                           pclath	equ	0xFFA
 29989                           tblptru	equ	0xFF8
 29990                           tblptrh	equ	0xFF7
 29991                           tblptrl	equ	0xFF6
 29992                           tablat	equ	0xFF5
 29993                           prodh	equ	0xFF4
 29994                           prodl	equ	0xFF3
 29995                           intcon	equ	0xFF2
 29996                           intcon2	equ	0xFF1
 29997                           intcon3	equ	0xFF0
 29998                           indf0	equ	0xFEF
 29999                           postinc0	equ	0xFEE
 30000                           fsr0h	equ	0xFEA
 30001                           fsr0l	equ	0xFE9
 30002                           wreg	equ	0xFE8
 30003                           postinc1	equ	0xFE6
 30004                           postdec1	equ	0xFE5
 30005                           plusw1	equ	0xFE3
 30006                           fsr1h	equ	0xFE2
 30007                           fsr1l	equ	0xFE1
 30008                           indf2	equ	0xFDF
 30009                           postinc2	equ	0xFDE
 30010                           postdec2	equ	0xFDD
 30011                           plusw2	equ	0xFDB
 30012                           fsr2h	equ	0xFDA
 30013                           fsr2l	equ	0xFD9
 30014                           status	equ	0xFD8
 30015                           
 30016 ;; *************** function ___lwmod *****************
 30017 ;; Defined at:
 30018 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 30019 ;; Parameters:    Size  Location     Type
 30020 ;;  dividend        2   72[BANK0 ] unsigned int 
 30021 ;;  divisor         2   74[BANK0 ] unsigned int 
 30022 ;; Auto vars:     Size  Location     Type
 30023 ;;  counter         1   76[BANK0 ] unsigned char 
 30024 ;; Return value:  Size  Location     Type
 30025 ;;                  2   72[BANK0 ] unsigned int 
 30026 ;; Registers used:
 30027 ;;		wreg, status,2, status,0
 30028 ;; Tracked objects:
 30029 ;;		On entry : 0/0
 30030 ;;		On exit  : 0/0
 30031 ;;		Unchanged: 0/0
 30032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30033 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30034 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30036 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30037 ;;Total ram usage:        5 bytes
 30038 ;; Hardware stack levels used:    1
 30039 ;; Hardware stack levels required when called:    7
 30040 ;; This function calls:
 30041 ;;		Nothing
 30042 ;; This function is called by:
 30043 ;;		_Random
 30044 ;; This function uses a non-reentrant model
 30045 ;;
 30046                           
 30047                           	psect	text140
 30048  0000'                    __ptext140:
 30049                           	opt stack 0
 30050  0000'                    ___lwmod:
 30051                           	opt stack 19
 30052                           
 30053                           ; BSR set to: 0
 30054                           ;incstack = 0
 30055  0000' 0100               	movlb	0	; () banked
 30056  0002' 5100'              	movf	___lwmod@divisor& (0+255),w,b
 30057  0004' 1100'              	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 30058  0006' B4D8               	btfsc	status,2,c
 30059  0008' D018               	goto	l2991
 30060                           
 30061                           ; BSR set to: 0
 30062  000A' 0E01               	movlw	1
 30063  000C' 6F00'              	movwf	___lwmod@counter& (0+255),b
 30064  000E' D004               	goto	l2986
 30065  0010'                    
 30066                           ; BSR set to: 0
 30067                           
 30068                           ; BSR set to: 0
 30069  0010' 90D8               	bcf	status,0,c
 30070  0012' 3700'              	rlcf	___lwmod@divisor& (0+255),f,b
 30071  0014' 3700'              	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 30072  0016' 2B00'              	incf	___lwmod@counter& (0+255),f,b
 30073  0018'                    l2986:
 30074                           
 30075                           ; BSR set to: 0
 30076                           
 30077                           ; BSR set to: 0
 30078  0018' AF00'              	btfss	(___lwmod@divisor+1)& (0+255),7,b
 30079  001A' D7FA               	goto	l2987
 30080  001C'                    u14840:
 30081                           
 30082                           ; BSR set to: 0
 30083                           
 30084                           ; BSR set to: 0
 30085                           
 30086                           ; BSR set to: 0
 30087  001C' 5100'              	movf	___lwmod@divisor& (0+255),w,b
 30088  001E' 5D00'              	subwf	___lwmod@dividend& (0+255),w,b
 30089  0020' 5100'              	movf	(___lwmod@divisor+1)& (0+255),w,b
 30090  0022' 5900'              	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 30091  0024' A0D8               	btfss	status,0,c
 30092  0026' D004               	goto	l2990
 30093                           
 30094                           ; BSR set to: 0
 30095  0028' 5100'              	movf	___lwmod@divisor& (0+255),w,b
 30096  002A' 5F00'              	subwf	___lwmod@dividend& (0+255),f,b
 30097  002C' 5100'              	movf	(___lwmod@divisor+1)& (0+255),w,b
 30098  002E' 5B00'              	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 30099  0030'                    l2990:
 30100                           
 30101                           ; BSR set to: 0
 30102                           
 30103                           ; BSR set to: 0
 30104  0030' 90D8               	bcf	status,0,c
 30105  0032' 3300'              	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 30106  0034' 3300'              	rrcf	___lwmod@divisor& (0+255),f,b
 30107                           
 30108                           ; BSR set to: 0
 30109  0036' 2F00'              	decfsz	___lwmod@counter& (0+255),f,b
 30110  0038' D7F1               	goto	u14840
 30111  003A'                    l2991:
 30112                           
 30113                           ; BSR set to: 0
 30114                           
 30115                           ; BSR set to: 0
 30116  003A' C048' F048'        	movff	___lwmod@dividend,?___lwmod
 30117  003E' C049' F049'        	movff	___lwmod@dividend+1,?___lwmod+1
 30118                           
 30119                           ; BSR set to: 0
 30120  0042' 0012               	return		;funcret
 30121  0044'                    __end_of___lwmod:
 30122                           	opt stack 0
 30123                           tosu	equ	0xFFF
 30124                           tosh	equ	0xFFE
 30125                           tosl	equ	0xFFD
 30126                           pclath	equ	0xFFA
 30127                           tblptru	equ	0xFF8
 30128                           tblptrh	equ	0xFF7
 30129                           tblptrl	equ	0xFF6
 30130                           tablat	equ	0xFF5
 30131                           prodh	equ	0xFF4
 30132                           prodl	equ	0xFF3
 30133                           intcon	equ	0xFF2
 30134                           intcon2	equ	0xFF1
 30135                           intcon3	equ	0xFF0
 30136                           indf0	equ	0xFEF
 30137                           postinc0	equ	0xFEE
 30138                           fsr0h	equ	0xFEA
 30139                           fsr0l	equ	0xFE9
 30140                           wreg	equ	0xFE8
 30141                           postinc1	equ	0xFE6
 30142                           postdec1	equ	0xFE5
 30143                           plusw1	equ	0xFE3
 30144                           fsr1h	equ	0xFE2
 30145                           fsr1l	equ	0xFE1
 30146                           indf2	equ	0xFDF
 30147                           postinc2	equ	0xFDE
 30148                           postdec2	equ	0xFDD
 30149                           plusw2	equ	0xFDB
 30150                           fsr2h	equ	0xFDA
 30151                           fsr2l	equ	0xFD9
 30152                           status	equ	0xFD8
 30153                           
 30154 ;; *************** function _ComputeMic *****************
 30155 ;; Defined at:
 30156 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 30157 ;; Parameters:    Size  Location     Type
 30158 ;;  key             2  103[BANK0 ] PTR unsigned char 
 30159 ;;		 -> loRa.activationParameters(105), loRa(245), 
 30160 ;;  buffer          2  105[BANK0 ] PTR unsigned char 
 30161 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 30162 ;;  bufferLength    1  107[BANK0 ] unsigned char 
 30163 ;; Auto vars:     Size  Location     Type
 30164 ;;  mic             4  108[BANK0 ] unsigned long 
 30165 ;; Return value:  Size  Location     Type
 30166 ;;                  4  103[BANK0 ] unsigned long 
 30167 ;; Registers used:
 30168 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30169 ;; Tracked objects:
 30170 ;;		On entry : 0/0
 30171 ;;		On exit  : 0/0
 30172 ;;		Unchanged: 0/0
 30173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30174 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30175 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30177 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30178 ;;Total ram usage:        9 bytes
 30179 ;; Hardware stack levels used:    1
 30180 ;; Hardware stack levels required when called:   12
 30181 ;; This function calls:
 30182 ;;		_AESCmac
 30183 ;;		_memcpy
 30184 ;; This function is called by:
 30185 ;;		_LORAWAN_RxDone
 30186 ;;		_PrepareJoinRequestFrame
 30187 ;; This function uses a non-reentrant model
 30188 ;;
 30189                           
 30190                           	psect	text141
 30191  0000'                    __ptext141:
 30192                           	opt stack 0
 30193  0000'                    _ComputeMic:
 30194                           	opt stack 14
 30195                           
 30196                           ;lorawan.c: 2196: uint32_t mic = 0;
 30197                           
 30198                           ; BSR set to: 0
 30199                           ;incstack = 0
 30200  0000' 0E00               	movlw	0
 30201  0002' 0100               	movlb	0	; () banked
 30202  0004' 6F00'              	movwf	ComputeMic@mic& (0+255),b
 30203  0006' 0E00               	movlw	0
 30204  0008' 6F00'              	movwf	(ComputeMic@mic+1)& (0+255),b
 30205  000A' 0E00               	movlw	0
 30206  000C' 6F00'              	movwf	(ComputeMic@mic+2)& (0+255),b
 30207  000E' 0E00               	movlw	0
 30208  0010' 6F00'              	movwf	(ComputeMic@mic+3)& (0+255),b
 30209                           
 30210                           ; BSR set to: 0
 30211                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 30212  0012' C067' F059'        	movff	ComputeMic@key,AESCmac@key
 30213  0016' C068' F05A'        	movff	ComputeMic@key+1,AESCmac@key+1
 30214  001A' 0E00'              	movlw	low _aesBuffer
 30215  001C' 6F00'              	movwf	AESCmac@output& (0+255),b
 30216  001E' 0E00'              	movlw	high _aesBuffer
 30217  0020' 6F00'              	movwf	(AESCmac@output+1)& (0+255),b
 30218  0022' C069' F05D'        	movff	ComputeMic@buffer,AESCmac@input
 30219  0026' C06A' F05E'        	movff	ComputeMic@buffer+1,AESCmac@input+1
 30220  002A' C06B' F05F'        	movff	ComputeMic@bufferLength,AESCmac@size
 30221  002E' EC00' F000'        	call	_AESCmac	;wreg free
 30222                           
 30223                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 30224  0032' 0E00'              	movlw	low ComputeMic@mic
 30225  0034' 0100               	movlb	0	; () banked
 30226  0036' 6F00'              	movwf	memcpy@d1& (0+255),b
 30227  0038' 0E00'              	movlw	high ComputeMic@mic
 30228  003A' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 30229  003C' 0E00'              	movlw	low _aesBuffer
 30230  003E' 6F00'              	movwf	memcpy@s1& (0+255),b
 30231  0040' 0E00'              	movlw	high _aesBuffer
 30232  0042' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 30233  0044' 0E00               	movlw	0
 30234  0046' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 30235  0048' 0E04               	movlw	4
 30236  004A' 6F00'              	movwf	memcpy@n& (0+255),b
 30237  004C' EC00' F000'        	call	_memcpy	;wreg free
 30238                           
 30239                           ;lorawan.c: 2202: return mic;
 30240  0050' C06C' F067'        	movff	ComputeMic@mic,?_ComputeMic
 30241  0054' C06D' F068'        	movff	ComputeMic@mic+1,?_ComputeMic+1
 30242  0058' C06E' F069'        	movff	ComputeMic@mic+2,?_ComputeMic+2
 30243  005C' C06F' F06A'        	movff	ComputeMic@mic+3,?_ComputeMic+3
 30244  0060' 0012               	return	
 30245  0062'                    __end_of_ComputeMic:
 30246                           	opt stack 0
 30247                           tosu	equ	0xFFF
 30248                           tosh	equ	0xFFE
 30249                           tosl	equ	0xFFD
 30250                           pclath	equ	0xFFA
 30251                           tblptru	equ	0xFF8
 30252                           tblptrh	equ	0xFF7
 30253                           tblptrl	equ	0xFF6
 30254                           tablat	equ	0xFF5
 30255                           prodh	equ	0xFF4
 30256                           prodl	equ	0xFF3
 30257                           intcon	equ	0xFF2
 30258                           intcon2	equ	0xFF1
 30259                           intcon3	equ	0xFF0
 30260                           indf0	equ	0xFEF
 30261                           postinc0	equ	0xFEE
 30262                           fsr0h	equ	0xFEA
 30263                           fsr0l	equ	0xFE9
 30264                           wreg	equ	0xFE8
 30265                           postinc1	equ	0xFE6
 30266                           postdec1	equ	0xFE5
 30267                           plusw1	equ	0xFE3
 30268                           fsr1h	equ	0xFE2
 30269                           fsr1l	equ	0xFE1
 30270                           indf2	equ	0xFDF
 30271                           postinc2	equ	0xFDE
 30272                           postdec2	equ	0xFDD
 30273                           plusw2	equ	0xFDB
 30274                           fsr2h	equ	0xFDA
 30275                           fsr2l	equ	0xFD9
 30276                           status	equ	0xFD8
 30277                           
 30278 ;; *************** function _AESCmac *****************
 30279 ;; Defined at:
 30280 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 30281 ;; Parameters:    Size  Location     Type
 30282 ;;  key             2   89[BANK0 ] PTR unsigned char 
 30283 ;;		 -> loRa.activationParameters(105), loRa(245), 
 30284 ;;  output          2   91[BANK0 ] PTR unsigned char 
 30285 ;;		 -> aesBuffer(16), 
 30286 ;;  input           2   93[BANK0 ] PTR unsigned char 
 30287 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 30288 ;;  size            1   95[BANK0 ] unsigned char 
 30289 ;; Auto vars:     Size  Location     Type
 30290 ;;  x              16   80[BANK1 ] unsigned char [16]
 30291 ;;  y              16   64[BANK1 ] unsigned char [16]
 30292 ;;  padded         16   48[BANK1 ] unsigned char [16]
 30293 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 30294 ;;  k1             16   16[BANK1 ] unsigned char [16]
 30295 ;;  k2             16    0[BANK1 ] unsigned char [16]
 30296 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 30297 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 30298 ;;  i               1  101[BANK1 ] unsigned char 
 30299 ;;  j               1  100[BANK1 ] unsigned char 
 30300 ;;  n               1   99[BANK1 ] unsigned char 
 30301 ;;  flag            1   98[BANK1 ] unsigned char 
 30302 ;; Return value:  Size  Location     Type
 30303 ;;                  1    wreg      void 
 30304 ;; Registers used:
 30305 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30306 ;; Tracked objects:
 30307 ;;		On entry : 0/0
 30308 ;;		On exit  : 0/0
 30309 ;;		Unchanged: 0/0
 30310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30311 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30312 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30313 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30314 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30315 ;;Total ram usage:      116 bytes
 30316 ;; Hardware stack levels used:    1
 30317 ;; Hardware stack levels required when called:   11
 30318 ;; This function calls:
 30319 ;;		_AESEncodeLoRa
 30320 ;;		_GenerateSubkey
 30321 ;;		_memcpy
 30322 ;;		_memset
 30323 ;; This function is called by:
 30324 ;;		_LORAWAN_RxDone
 30325 ;;		_AssemblePacket
 30326 ;;		_ComputeMic
 30327 ;; This function uses a non-reentrant model
 30328 ;;
 30329                           
 30330                           	psect	text142
 30331  0000'                    __ptext142:
 30332                           	opt stack 0
 30333  0000'                    _AESCmac:
 30334                           	opt stack 17
 30335                           
 30336                           ;lorawan_aes_cmac.c: 43: uint8_t n = 0, i = 0, j =0;
 30337                           
 30338                           ;incstack = 0
 30339  0000' 0E00               	movlw	0
 30340  0002' 0101               	movlb	1	; () banked
 30341  0004' 6F00'              	movwf	AESCmac@n& (0+255),b
 30342  0006' 0E00               	movlw	0
 30343  0008' 6F00'              	movwf	AESCmac@i& (0+255),b
 30344  000A' 0E00               	movlw	0
 30345  000C' 6F00'              	movwf	AESCmac@j& (0+255),b
 30346                           
 30347                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 30348  000E' 0E00               	movlw	0
 30349  0010' 6F00'              	movwf	AESCmac@flag& (0+255),b
 30350                           
 30351                           ; BSR set to: 1
 30352                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 30353                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 30354                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 30355  0012' 0E00               	movlw	0
 30356  0014' 6F00'              	movwf	AESCmac@ptr& (0+255),b
 30357  0016' 0E00               	movlw	0
 30358  0018' 6F00'              	movwf	(AESCmac@ptr+1)& (0+255),b
 30359                           
 30360                           ; BSR set to: 1
 30361                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 30362  001A' C059' F031'        	movff	AESCmac@key,GenerateSubkey@key
 30363  001E' C05A' F032'        	movff	AESCmac@key+1,GenerateSubkey@key+1
 30364  0022' 0E00'              	movlw	low AESCmac@k1
 30365  0024' 0100               	movlb	0	; () banked
 30366  0026' 6F00'              	movwf	GenerateSubkey@k1& (0+255),b
 30367  0028' 0E00'              	movlw	high AESCmac@k1
 30368  002A' 6F00'              	movwf	(GenerateSubkey@k1+1)& (0+255),b
 30369  002C' 0E00'              	movlw	low AESCmac@k2
 30370  002E' 6F00'              	movwf	GenerateSubkey@k2& (0+255),b
 30371  0030' 0E00'              	movlw	high AESCmac@k2
 30372  0032' 6F00'              	movwf	(GenerateSubkey@k2+1)& (0+255),b
 30373  0034' EC00' F000'        	call	_GenerateSubkey	;wreg free
 30374                           
 30375                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 30376  0038' 0100               	movlb	0	; () banked
 30377  003A' 5100'              	movf	AESCmac@size& (0+255),w,b
 30378  003C' 6F00'              	movwf	??_AESCmac& (0+255),b
 30379  003E' 6B00'              	clrf	(??_AESCmac+1)& (0+255),b
 30380  0040' 0E0F               	movlw	15
 30381  0042' 2700'              	addwf	??_AESCmac& (0+255),f,b
 30382  0044' 0E00               	movlw	0
 30383  0046' 2300'              	addwfc	(??_AESCmac+1)& (0+255),f,b
 30384  0048' 0E04               	movlw	4
 30385  004A' 6F00'              	movwf	(??_AESCmac+2)& (0+255),b
 30386  004C'                    u15365:
 30387  004C' 3500'              	rlcf	(??_AESCmac+1)& (0+255),w,b
 30388  004E' 3300'              	rrcf	(??_AESCmac+1)& (0+255),f,b
 30389  0050' 3300'              	rrcf	??_AESCmac& (0+255),f,b
 30390  0052' 2F00'              	decfsz	(??_AESCmac+2)& (0+255),f,b
 30391  0054' D7FB               	goto	u15365
 30392  0056' 5100'              	movf	??_AESCmac& (0+255),w,b
 30393  0058' 0101               	movlb	1	; () banked
 30394  005A' 6F00'              	movwf	AESCmac@n& (0+255),b
 30395                           
 30396                           ; BSR set to: 1
 30397                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 30398  005C' 5100'              	movf	AESCmac@n& (0+255),w,b
 30399  005E' A4D8               	btfss	status,2,c
 30400  0060' D004               	goto	l41
 30401                           
 30402                           ; BSR set to: 1
 30403                           ;lorawan_aes_cmac.c: 53: {
 30404                           ;lorawan_aes_cmac.c: 54: n = 1;
 30405  0062' 0E01               	movlw	1
 30406  0064' 6F00'              	movwf	AESCmac@n& (0+255),b
 30407                           
 30408                           ;lorawan_aes_cmac.c: 55: flag = 0;
 30409  0066' 0E00               	movlw	0
 30410  0068' D00B               	goto	L23
 30411  006A'                    l41:
 30412                           
 30413                           ; BSR set to: 1
 30414                           ;lorawan_aes_cmac.c: 57: else
 30415                           ;lorawan_aes_cmac.c: 58: {
 30416                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 30417                           
 30418                           ; BSR set to: 1
 30419  006A' C05F' F060'        	movff	AESCmac@size,??_AESCmac
 30420  006E' 0E0F               	movlw	15
 30421  0070' 0100               	movlb	0	; () banked
 30422  0072' 1700'              	andwf	??_AESCmac& (0+255),f,b
 30423  0074' A4D8               	btfss	status,2,c
 30424  0076' D002               	goto	u15380
 30425  0078' 0E01               	movlw	1
 30426  007A' D001               	goto	u15390
 30427  007C'                    u15380:
 30428  007C' 0E00               	movlw	0
 30429  007E'                    u15390:
 30430  007E' 0101               	movlb	1	; () banked
 30431  0080'                    L23:
 30432  0080' 6F00'              	movwf	AESCmac@flag& (0+255),b
 30433                           
 30434                           ; BSR set to: 1
 30435                           ;lorawan_aes_cmac.c: 60: }
 30436                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 30437  0082' 0500'              	decf	AESCmac@flag& (0+255),w,b
 30438  0084' A4D8               	btfss	status,2,c
 30439  0086' D048               	goto	l43
 30440                           
 30441                           ; BSR set to: 1
 30442                           ;lorawan_aes_cmac.c: 63: {
 30443                           ;lorawan_aes_cmac.c: 64: j = 0;
 30444  0088' 0E00               	movlw	0
 30445  008A' 6F00'              	movwf	AESCmac@j& (0+255),b
 30446                           
 30447                           ; BSR set to: 1
 30448                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 30449  008C' 3900'              	swapf	AESCmac@n& (0+255),w,b
 30450  008E' 0BF0               	andlw	240
 30451  0090' 0FF0               	addlw	240
 30452  0092' 6F00'              	movwf	AESCmac@i& (0+255),b
 30453  0094' D024               	goto	l44
 30454  0096'                    
 30455                           ;lorawan_aes_cmac.c: 66: {
 30456                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 30457                           
 30458                           ; BSR set to: 1
 30459  0096' 0101               	movlb	1	; () banked
 30460  0098' 5100'              	movf	AESCmac@j& (0+255),w,b
 30461  009A' 0D01               	mullw	1
 30462  009C' 0E00'              	movlw	low AESCmac@mLast
 30463  009E' 24F3               	addwf	prodl,w,c
 30464  00A0' 6ED9               	movwf	fsr2l,c
 30465  00A2' 0E00'              	movlw	high AESCmac@mLast
 30466  00A4' 20F4               	addwfc	prodh,w,c
 30467  00A6' 6EDA               	movwf	fsr2h,c
 30468  00A8' 5100'              	movf	AESCmac@j& (0+255),w,b
 30469  00AA' 0D01               	mullw	1
 30470  00AC' 0E00'              	movlw	low AESCmac@k1
 30471  00AE' 24F3               	addwf	prodl,w,c
 30472  00B0' 6EE9               	movwf	fsr0l,c
 30473  00B2' 0E00'              	movlw	high AESCmac@k1
 30474  00B4' 20F4               	addwfc	prodh,w,c
 30475  00B6' 6EEA               	movwf	fsr0h,c
 30476  00B8' 50EF               	movf	indf0,w,c
 30477  00BA' 0100               	movlb	0	; () banked
 30478  00BC' 6F00'              	movwf	??_AESCmac& (0+255),b
 30479  00BE' 0101               	movlb	1	; () banked
 30480  00C0' 5100'              	movf	AESCmac@i& (0+255),w,b
 30481  00C2' 0D01               	mullw	1
 30482  00C4' 50F3               	movf	prodl,w,c
 30483  00C6' 0100               	movlb	0	; () banked
 30484  00C8' 2500'              	addwf	AESCmac@input& (0+255),w,b
 30485  00CA' 6EE9               	movwf	fsr0l,c
 30486  00CC' 50F4               	movf	prodh,w,c
 30487  00CE' 2100'              	addwfc	(AESCmac@input+1)& (0+255),w,b
 30488  00D0' 6EEA               	movwf	fsr0h,c
 30489  00D2' 50EF               	movf	indf0,w,c
 30490  00D4' 1900'              	xorwf	??_AESCmac& (0+255),w,b
 30491  00D6' 6EDF               	movwf	indf2,c
 30492                           
 30493                           ; BSR set to: 0
 30494                           ;lorawan_aes_cmac.c: 68: j++;
 30495  00D8' 0101               	movlb	1	; () banked
 30496  00DA' 2B00'              	incf	AESCmac@j& (0+255),f,b
 30497                           
 30498                           ; BSR set to: 1
 30499  00DC' 2B00'              	incf	AESCmac@i& (0+255),f,b
 30500  00DE'                    l44:
 30501                           
 30502                           ; BSR set to: 1
 30503                           
 30504                           ; BSR set to: 1
 30505  00DE' 5100'              	movf	AESCmac@n& (0+255),w,b
 30506  00E0' 0100               	movlb	0	; () banked
 30507  00E2' 6F00'              	movwf	??_AESCmac& (0+255),b
 30508  00E4' 6B00'              	clrf	(??_AESCmac+1)& (0+255),b
 30509  00E6' 3B00'              	swapf	??_AESCmac& (0+255),f,b
 30510  00E8' 3B00'              	swapf	(??_AESCmac+1)& (0+255),f,b
 30511  00EA' 0EF0               	movlw	240
 30512  00EC' 1700'              	andwf	(??_AESCmac+1)& (0+255),f,b
 30513  00EE' 5100'              	movf	??_AESCmac& (0+255),w,b
 30514  00F0' 0B0F               	andlw	15
 30515  00F2' 1300'              	iorwf	(??_AESCmac+1)& (0+255),f,b
 30516  00F4' 0EF0               	movlw	240
 30517  00F6' 1700'              	andwf	??_AESCmac& (0+255),f,b
 30518  00F8' 0101               	movlb	1	; () banked
 30519  00FA' 5100'              	movf	AESCmac@i& (0+255),w,b
 30520  00FC' 0100               	movlb	0	; () banked
 30521  00FE' 6F00'              	movwf	(??_AESCmac+2)& (0+255),b
 30522  0100' 6B00'              	clrf	(??_AESCmac+3)& (0+255),b
 30523  0102' 5100'              	movf	??_AESCmac& (0+255),w,b
 30524  0104' 5D00'              	subwf	(??_AESCmac+2)& (0+255),w,b
 30525  0106' 5100'              	movf	(??_AESCmac+3)& (0+255),w,b
 30526  0108' 0A80               	xorlw	128
 30527  010A' 6F00'              	movwf	(??_AESCmac+4)& (0+255),b
 30528  010C' 5100'              	movf	(??_AESCmac+1)& (0+255),w,b
 30529  010E' 0A80               	xorlw	128
 30530  0110' 5900'              	subwfb	(??_AESCmac+4)& (0+255),w,b
 30531  0112' B0D8               	btfsc	status,0,c
 30532  0114' D07F               	goto	u15470
 30533  0116' D7BF               	goto	l45
 30534  0118'                    l43:
 30535                           
 30536                           ;lorawan_aes_cmac.c: 71: else
 30537                           ;lorawan_aes_cmac.c: 72: {
 30538                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 30539                           
 30540                           ; BSR set to: 0
 30541  0118' 0100               	movlb	0	; () banked
 30542  011A' 5100'              	movf	AESCmac@size& (0+255),w,b
 30543  011C' 0B0F               	andlw	15
 30544  011E' 6F00'              	movwf	??_AESCmac& (0+255),b
 30545  0120' 6B00'              	clrf	(??_AESCmac+1)& (0+255),b
 30546  0122' 1F00'              	comf	??_AESCmac& (0+255),f,b
 30547  0124' 1F00'              	comf	(??_AESCmac+1)& (0+255),f,b
 30548  0126' 4B00'              	infsnz	??_AESCmac& (0+255),f,b
 30549  0128' 2B00'              	incf	(??_AESCmac+1)& (0+255),f,b
 30550  012A' 5100'              	movf	AESCmac@size& (0+255),w,b
 30551  012C' 6F00'              	movwf	(??_AESCmac+2)& (0+255),b
 30552  012E' 6B00'              	clrf	(??_AESCmac+3)& (0+255),b
 30553  0130' 5100'              	movf	??_AESCmac& (0+255),w,b
 30554  0132' 2700'              	addwf	(??_AESCmac+2)& (0+255),f,b
 30555  0134' 5100'              	movf	(??_AESCmac+1)& (0+255),w,b
 30556  0136' 2300'              	addwfc	(??_AESCmac+3)& (0+255),f,b
 30557  0138' 5100'              	movf	(??_AESCmac+2)& (0+255),w,b
 30558  013A' 2500'              	addwf	AESCmac@input& (0+255),w,b
 30559  013C' 0101               	movlb	1	; () banked
 30560  013E' 6F00'              	movwf	AESCmac@ptr& (0+255),b
 30561  0140' 0100               	movlb	0	; () banked
 30562  0142' 5100'              	movf	(??_AESCmac+3)& (0+255),w,b
 30563  0144' 2100'              	addwfc	(AESCmac@input+1)& (0+255),w,b
 30564  0146' 0101               	movlb	1	; () banked
 30565  0148' 6F00'              	movwf	(AESCmac@ptr+1)& (0+255),b
 30566                           
 30567                           ; BSR set to: 1
 30568                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 30569  014A' 0E00               	movlw	0
 30570  014C' 6F00'              	movwf	AESCmac@i& (0+255),b
 30571  014E'                    l13618:
 30572                           
 30573                           ; BSR set to: 1
 30574  014E' 0E0F               	movlw	15
 30575  0150' 6500'              	cpfsgt	AESCmac@i& (0+255),b
 30576  0152' D001               	goto	l48
 30577  0154' D036               	goto	u15450
 30578  0156'                    l48:
 30579                           
 30580                           ; BSR set to: 1
 30581                           ;lorawan_aes_cmac.c: 76: {
 30582                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 30583                           
 30584                           ; BSR set to: 1
 30585  0156' 0100               	movlb	0	; () banked
 30586  0158' 5100'              	movf	AESCmac@size& (0+255),w,b
 30587  015A' 0B0F               	andlw	15
 30588  015C' 0101               	movlb	1	; () banked
 30589  015E' 6100'              	cpfslt	AESCmac@i& (0+255),b
 30590  0160' D013               	goto	l50
 30591                           
 30592                           ; BSR set to: 1
 30593                           ;lorawan_aes_cmac.c: 78: {
 30594                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 30595  0162' 5100'              	movf	AESCmac@i& (0+255),w,b
 30596  0164' 0D01               	mullw	1
 30597  0166' 50F3               	movf	prodl,w,c
 30598  0168' 2500'              	addwf	AESCmac@ptr& (0+255),w,b
 30599  016A' 6ED9               	movwf	fsr2l,c
 30600  016C' 50F4               	movf	prodh,w,c
 30601  016E' 2100'              	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 30602  0170' 6EDA               	movwf	fsr2h,c
 30603  0172' 5100'              	movf	AESCmac@i& (0+255),w,b
 30604  0174' 0D01               	mullw	1
 30605  0176' 0E00'              	movlw	low AESCmac@padded
 30606  0178' 24F3               	addwf	prodl,w,c
 30607  017A' 6EE9               	movwf	fsr0l,c
 30608  017C' 0E00'              	movlw	high AESCmac@padded
 30609  017E' 20F4               	addwfc	prodh,w,c
 30610  0180' 6EEA               	movwf	fsr0h,c
 30611  0182' CFDF FFEF          	movff	indf2,indf0
 30612                           
 30613                           ;lorawan_aes_cmac.c: 80: }
 30614  0186' D01B               	goto	l53
 30615  0188'                    l50:
 30616                           
 30617                           ; BSR set to: 1
 30618                           ;lorawan_aes_cmac.c: 81: else
 30619                           ;lorawan_aes_cmac.c: 82: {
 30620                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 30621                           
 30622                           ; BSR set to: 1
 30623  0188' 0100               	movlb	0	; () banked
 30624  018A' 5100'              	movf	AESCmac@size& (0+255),w,b
 30625  018C' 0B0F               	andlw	15
 30626  018E' 0101               	movlb	1	; () banked
 30627  0190' 1900'              	xorwf	AESCmac@i& (0+255),w,b
 30628  0192' A4D8               	btfss	status,2,c
 30629  0194' D00A               	goto	l52
 30630                           
 30631                           ; BSR set to: 1
 30632                           ;lorawan_aes_cmac.c: 84: {
 30633                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 30634  0196' 5100'              	movf	AESCmac@i& (0+255),w,b
 30635  0198' 0D01               	mullw	1
 30636  019A' 0E00'              	movlw	low AESCmac@padded
 30637  019C' 24F3               	addwf	prodl,w,c
 30638  019E' 6ED9               	movwf	fsr2l,c
 30639  01A0' 0E00'              	movlw	high AESCmac@padded
 30640  01A2' 20F4               	addwfc	prodh,w,c
 30641  01A4' 6EDA               	movwf	fsr2h,c
 30642  01A6' 0E80               	movlw	128
 30643  01A8' D009               	goto	L24
 30644  01AA'                    l52:
 30645                           
 30646                           ; BSR set to: 1
 30647                           ;lorawan_aes_cmac.c: 87: else
 30648                           ;lorawan_aes_cmac.c: 88: {
 30649                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 30650                           
 30651                           ; BSR set to: 1
 30652  01AA' 5100'              	movf	AESCmac@i& (0+255),w,b
 30653  01AC' 0D01               	mullw	1
 30654  01AE' 0E00'              	movlw	low AESCmac@padded
 30655  01B0' 24F3               	addwf	prodl,w,c
 30656  01B2' 6ED9               	movwf	fsr2l,c
 30657  01B4' 0E00'              	movlw	high AESCmac@padded
 30658  01B6' 20F4               	addwfc	prodh,w,c
 30659  01B8' 6EDA               	movwf	fsr2h,c
 30660  01BA' 0E00               	movlw	0
 30661  01BC'                    L24:
 30662  01BC' 6EDF               	movwf	indf2,c
 30663  01BE'                    l53:
 30664                           
 30665                           ; BSR set to: 1
 30666                           
 30667                           ; BSR set to: 1
 30668                           
 30669                           ; BSR set to: 1
 30670  01BE' 2B00'              	incf	AESCmac@i& (0+255),f,b
 30671  01C0' D7C6               	goto	l13618
 30672  01C2'                    u15450:
 30673                           
 30674                           ; BSR set to: 1
 30675                           ;lorawan_aes_cmac.c: 90: }
 30676                           ;lorawan_aes_cmac.c: 91: }
 30677                           ;lorawan_aes_cmac.c: 92: }
 30678                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 30679                           
 30680                           ; BSR set to: 1
 30681  01C2' 0E00               	movlw	0
 30682  01C4' 6F00'              	movwf	AESCmac@i& (0+255),b
 30683  01C6'                    l13638:
 30684                           
 30685                           ; BSR set to: 1
 30686  01C6' 0E0F               	movlw	15
 30687  01C8' 6500'              	cpfsgt	AESCmac@i& (0+255),b
 30688  01CA' D001               	goto	l54
 30689  01CC' D023               	goto	u15470
 30690  01CE'                    l54:
 30691                           
 30692                           ; BSR set to: 1
 30693                           ;lorawan_aes_cmac.c: 96: {
 30694                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 30695                           
 30696                           ; BSR set to: 1
 30697  01CE' 5100'              	movf	AESCmac@i& (0+255),w,b
 30698  01D0' 0D01               	mullw	1
 30699  01D2' 0E00'              	movlw	low AESCmac@mLast
 30700  01D4' 24F3               	addwf	prodl,w,c
 30701  01D6' 6ED9               	movwf	fsr2l,c
 30702  01D8' 0E00'              	movlw	high AESCmac@mLast
 30703  01DA' 20F4               	addwfc	prodh,w,c
 30704  01DC' 6EDA               	movwf	fsr2h,c
 30705  01DE' 5100'              	movf	AESCmac@i& (0+255),w,b
 30706  01E0' 0D01               	mullw	1
 30707  01E2' 0E00'              	movlw	low AESCmac@k2
 30708  01E4' 24F3               	addwf	prodl,w,c
 30709  01E6' 6EE9               	movwf	fsr0l,c
 30710  01E8' 0E00'              	movlw	high AESCmac@k2
 30711  01EA' 20F4               	addwfc	prodh,w,c
 30712  01EC' 6EEA               	movwf	fsr0h,c
 30713  01EE' 50EF               	movf	indf0,w,c
 30714  01F0' 0100               	movlb	0	; () banked
 30715  01F2' 6F00'              	movwf	??_AESCmac& (0+255),b
 30716  01F4' 0101               	movlb	1	; () banked
 30717  01F6' 5100'              	movf	AESCmac@i& (0+255),w,b
 30718  01F8' 0D01               	mullw	1
 30719  01FA' 0E00'              	movlw	low AESCmac@padded
 30720  01FC' 24F3               	addwf	prodl,w,c
 30721  01FE' 6EE9               	movwf	fsr0l,c
 30722  0200' 0E00'              	movlw	high AESCmac@padded
 30723  0202' 20F4               	addwfc	prodh,w,c
 30724  0204' 6EEA               	movwf	fsr0h,c
 30725  0206' 50EF               	movf	indf0,w,c
 30726  0208' 0100               	movlb	0	; () banked
 30727  020A' 1900'              	xorwf	??_AESCmac& (0+255),w,b
 30728  020C' 6EDF               	movwf	indf2,c
 30729                           
 30730                           ; BSR set to: 0
 30731  020E' 0101               	movlb	1	; () banked
 30732  0210' 2B00'              	incf	AESCmac@i& (0+255),f,b
 30733  0212' D7D9               	goto	l13638
 30734  0214'                    u15470:
 30735                           
 30736                           ;lorawan_aes_cmac.c: 98: }
 30737                           ;lorawan_aes_cmac.c: 99: }
 30738                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 30739                           
 30740                           ; BSR set to: 1
 30741                           
 30742                           ; BSR set to: 1
 30743  0214' 0E00'              	movlw	low AESCmac@x
 30744  0216' 0100               	movlb	0	; () banked
 30745  0218' 6F00'              	movwf	memset@p1& (0+255),b
 30746  021A' 0E00'              	movlw	high AESCmac@x
 30747  021C' 6F00'              	movwf	(memset@p1+1)& (0+255),b
 30748  021E' 0E00               	movlw	0
 30749  0220' 6F00'              	movwf	(memset@c+1)& (0+255),b
 30750  0222' 0E00               	movlw	0
 30751  0224' 6F00'              	movwf	memset@c& (0+255),b
 30752  0226' 0E00               	movlw	0
 30753  0228' 6F00'              	movwf	(memset@n+1)& (0+255),b
 30754  022A' 0E10               	movlw	16
 30755  022C' 6F00'              	movwf	memset@n& (0+255),b
 30756  022E' EC00' F000'        	call	_memset	;wreg free
 30757                           
 30758                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 30759  0232' 0E00               	movlw	0
 30760  0234' 0101               	movlb	1	; () banked
 30761  0236' 6F00'              	movwf	AESCmac@i& (0+255),b
 30762  0238' D056               	goto	l56
 30763  023A'                    
 30764                           ;lorawan_aes_cmac.c: 104: {
 30765                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 30766                           
 30767                           ; BSR set to: 1
 30768  023A' 0E00               	movlw	0
 30769  023C' 0101               	movlb	1	; () banked
 30770  023E' 6F00'              	movwf	AESCmac@j& (0+255),b
 30771  0240'                    l13654:
 30772                           
 30773                           ; BSR set to: 1
 30774  0240' 0E0F               	movlw	15
 30775  0242' 6500'              	cpfsgt	AESCmac@j& (0+255),b
 30776  0244' D001               	goto	l58
 30777  0246' D033               	goto	u15490
 30778  0248'                    l58:
 30779                           
 30780                           ; BSR set to: 1
 30781                           ;lorawan_aes_cmac.c: 106: {
 30782                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 30783                           
 30784                           ; BSR set to: 1
 30785  0248' 5100'              	movf	AESCmac@j& (0+255),w,b
 30786  024A' 0D01               	mullw	1
 30787  024C' 0E00'              	movlw	low AESCmac@y
 30788  024E' 24F3               	addwf	prodl,w,c
 30789  0250' 6ED9               	movwf	fsr2l,c
 30790  0252' 0E00'              	movlw	high AESCmac@y
 30791  0254' 20F4               	addwfc	prodh,w,c
 30792  0256' 6EDA               	movwf	fsr2h,c
 30793  0258' 5100'              	movf	AESCmac@i& (0+255),w,b
 30794  025A' 0100               	movlb	0	; () banked
 30795  025C' 6F00'              	movwf	??_AESCmac& (0+255),b
 30796  025E' 6B00'              	clrf	(??_AESCmac+1)& (0+255),b
 30797  0260' 3B00'              	swapf	??_AESCmac& (0+255),f,b
 30798  0262' 3B00'              	swapf	(??_AESCmac+1)& (0+255),f,b
 30799  0264' 0EF0               	movlw	240
 30800  0266' 1700'              	andwf	(??_AESCmac+1)& (0+255),f,b
 30801  0268' 5100'              	movf	??_AESCmac& (0+255),w,b
 30802  026A' 0B0F               	andlw	15
 30803  026C' 1300'              	iorwf	(??_AESCmac+1)& (0+255),f,b
 30804  026E' 0EF0               	movlw	240
 30805  0270' 1700'              	andwf	??_AESCmac& (0+255),f,b
 30806  0272' 0101               	movlb	1	; () banked
 30807  0274' 5100'              	movf	AESCmac@j& (0+255),w,b
 30808  0276' 0100               	movlb	0	; () banked
 30809  0278' 2700'              	addwf	??_AESCmac& (0+255),f,b
 30810  027A' 0E00               	movlw	0
 30811  027C' 2300'              	addwfc	(??_AESCmac+1)& (0+255),f,b
 30812  027E' 5100'              	movf	??_AESCmac& (0+255),w,b
 30813  0280' 2500'              	addwf	AESCmac@input& (0+255),w,b
 30814  0282' 6EE9               	movwf	fsr0l,c
 30815  0284' 5100'              	movf	(??_AESCmac+1)& (0+255),w,b
 30816  0286' 2100'              	addwfc	(AESCmac@input+1)& (0+255),w,b
 30817  0288' 6EEA               	movwf	fsr0h,c
 30818  028A' 50EF               	movf	indf0,w,c
 30819  028C' 6F00'              	movwf	(??_AESCmac+2)& (0+255),b
 30820  028E' 0101               	movlb	1	; () banked
 30821  0290' 5100'              	movf	AESCmac@j& (0+255),w,b
 30822  0292' 0D01               	mullw	1
 30823  0294' 0E00'              	movlw	low AESCmac@x
 30824  0296' 24F3               	addwf	prodl,w,c
 30825  0298' 6EE9               	movwf	fsr0l,c
 30826  029A' 0E00'              	movlw	high AESCmac@x
 30827  029C' 20F4               	addwfc	prodh,w,c
 30828  029E' 6EEA               	movwf	fsr0h,c
 30829  02A0' 50EF               	movf	indf0,w,c
 30830  02A2' 0100               	movlb	0	; () banked
 30831  02A4' 1900'              	xorwf	(??_AESCmac+2)& (0+255),w,b
 30832  02A6' 6EDF               	movwf	indf2,c
 30833                           
 30834                           ; BSR set to: 0
 30835  02A8' 0101               	movlb	1	; () banked
 30836  02AA' 2B00'              	incf	AESCmac@j& (0+255),f,b
 30837  02AC' D7C9               	goto	l13654
 30838  02AE'                    u15490:
 30839                           
 30840                           ; BSR set to: 1
 30841                           ;lorawan_aes_cmac.c: 108: }
 30842                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 30843                           
 30844                           ; BSR set to: 1
 30845  02AE' 0E00'              	movlw	low AESCmac@x
 30846  02B0' 0100               	movlb	0	; () banked
 30847  02B2' 6F00'              	movwf	memcpy@d1& (0+255),b
 30848  02B4' 0E00'              	movlw	high AESCmac@x
 30849  02B6' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 30850  02B8' 0E00'              	movlw	low AESCmac@y
 30851  02BA' 6F00'              	movwf	memcpy@s1& (0+255),b
 30852  02BC' 0E00'              	movlw	high AESCmac@y
 30853  02BE' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 30854  02C0' 0E00               	movlw	0
 30855  02C2' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 30856  02C4' 0E10               	movlw	16
 30857  02C6' 6F00'              	movwf	memcpy@n& (0+255),b
 30858  02C8' EC00' F000'        	call	_memcpy	;wreg free
 30859                           
 30860                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 30861  02CC' 0E00'              	movlw	low AESCmac@x
 30862  02CE' 0100               	movlb	0	; () banked
 30863  02D0' 6F00'              	movwf	AESEncodeLoRa@block& (0+255),b
 30864  02D2' 0E00'              	movlw	high AESCmac@x
 30865  02D4' 6F00'              	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 30866  02D6' C059' F01F'        	movff	AESCmac@key,AESEncodeLoRa@key
 30867  02DA' C05A' F020'        	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 30868  02DE' EC00' F000'        	call	_AESEncodeLoRa	;wreg free
 30869  02E2' 0101               	movlb	1	; () banked
 30870  02E4' 2B00'              	incf	AESCmac@i& (0+255),f,b
 30871  02E6'                    l56:
 30872                           
 30873                           ; BSR set to: 1
 30874                           
 30875                           ; BSR set to: 1
 30876  02E6' 0EFF               	movlw	255
 30877  02E8' 0100               	movlb	0	; () banked
 30878  02EA' 6F00'              	movwf	??_AESCmac& (0+255),b
 30879  02EC' 0EFF               	movlw	255
 30880  02EE' 6F00'              	movwf	(??_AESCmac+1)& (0+255),b
 30881  02F0' 0101               	movlb	1	; () banked
 30882  02F2' 5100'              	movf	AESCmac@n& (0+255),w,b
 30883  02F4' 0100               	movlb	0	; () banked
 30884  02F6' 6F00'              	movwf	(??_AESCmac+2)& (0+255),b
 30885  02F8' 6B00'              	clrf	(??_AESCmac+3)& (0+255),b
 30886  02FA' 5100'              	movf	??_AESCmac& (0+255),w,b
 30887  02FC' 2700'              	addwf	(??_AESCmac+2)& (0+255),f,b
 30888  02FE' 5100'              	movf	(??_AESCmac+1)& (0+255),w,b
 30889  0300' 2300'              	addwfc	(??_AESCmac+3)& (0+255),f,b
 30890  0302' 0101               	movlb	1	; () banked
 30891  0304' 5100'              	movf	AESCmac@i& (0+255),w,b
 30892  0306' 0100               	movlb	0	; () banked
 30893  0308' 6F00'              	movwf	(??_AESCmac+4)& (0+255),b
 30894  030A' 6B00'              	clrf	(??_AESCmac+5)& (0+255),b
 30895  030C' 5100'              	movf	(??_AESCmac+2)& (0+255),w,b
 30896  030E' 5D00'              	subwf	(??_AESCmac+4)& (0+255),w,b
 30897  0310' 5100'              	movf	(??_AESCmac+5)& (0+255),w,b
 30898  0312' 0A80               	xorlw	128
 30899  0314' 6F00'              	movwf	(??_AESCmac+6)& (0+255),b
 30900  0316' 5100'              	movf	(??_AESCmac+3)& (0+255),w,b
 30901  0318' 0A80               	xorlw	128
 30902  031A' 5900'              	subwfb	(??_AESCmac+6)& (0+255),w,b
 30903  031C' A0D8               	btfss	status,0,c
 30904  031E' D78D               	goto	l57
 30905                           
 30906                           ; BSR set to: 0
 30907                           ;lorawan_aes_cmac.c: 111: }
 30908                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 30909                           
 30910                           ; BSR set to: 0
 30911  0320' 0E00               	movlw	0
 30912  0322' 0101               	movlb	1	; () banked
 30913  0324' 6F00'              	movwf	AESCmac@i& (0+255),b
 30914  0326'                    l13674:
 30915                           
 30916                           ; BSR set to: 1
 30917  0326' 0E0F               	movlw	15
 30918  0328' 6500'              	cpfsgt	AESCmac@i& (0+255),b
 30919  032A' D001               	goto	l61
 30920  032C' D023               	goto	u15520
 30921  032E'                    l61:
 30922                           
 30923                           ; BSR set to: 1
 30924                           ;lorawan_aes_cmac.c: 114: {
 30925                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 30926                           
 30927                           ; BSR set to: 1
 30928  032E' 5100'              	movf	AESCmac@i& (0+255),w,b
 30929  0330' 0D01               	mullw	1
 30930  0332' 0E00'              	movlw	low AESCmac@y
 30931  0334' 24F3               	addwf	prodl,w,c
 30932  0336' 6ED9               	movwf	fsr2l,c
 30933  0338' 0E00'              	movlw	high AESCmac@y
 30934  033A' 20F4               	addwfc	prodh,w,c
 30935  033C' 6EDA               	movwf	fsr2h,c
 30936  033E' 5100'              	movf	AESCmac@i& (0+255),w,b
 30937  0340' 0D01               	mullw	1
 30938  0342' 0E00'              	movlw	low AESCmac@mLast
 30939  0344' 24F3               	addwf	prodl,w,c
 30940  0346' 6EE9               	movwf	fsr0l,c
 30941  0348' 0E00'              	movlw	high AESCmac@mLast
 30942  034A' 20F4               	addwfc	prodh,w,c
 30943  034C' 6EEA               	movwf	fsr0h,c
 30944  034E' 50EF               	movf	indf0,w,c
 30945  0350' 0100               	movlb	0	; () banked
 30946  0352' 6F00'              	movwf	??_AESCmac& (0+255),b
 30947  0354' 0101               	movlb	1	; () banked
 30948  0356' 5100'              	movf	AESCmac@i& (0+255),w,b
 30949  0358' 0D01               	mullw	1
 30950  035A' 0E00'              	movlw	low AESCmac@x
 30951  035C' 24F3               	addwf	prodl,w,c
 30952  035E' 6EE9               	movwf	fsr0l,c
 30953  0360' 0E00'              	movlw	high AESCmac@x
 30954  0362' 20F4               	addwfc	prodh,w,c
 30955  0364' 6EEA               	movwf	fsr0h,c
 30956  0366' 50EF               	movf	indf0,w,c
 30957  0368' 0100               	movlb	0	; () banked
 30958  036A' 1900'              	xorwf	??_AESCmac& (0+255),w,b
 30959  036C' 6EDF               	movwf	indf2,c
 30960                           
 30961                           ; BSR set to: 0
 30962  036E' 0101               	movlb	1	; () banked
 30963  0370' 2B00'              	incf	AESCmac@i& (0+255),f,b
 30964  0372' D7D9               	goto	l13674
 30965  0374'                    u15520:
 30966                           
 30967                           ; BSR set to: 1
 30968                           ;lorawan_aes_cmac.c: 116: }
 30969                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 30970                           
 30971                           ; BSR set to: 1
 30972  0374' 0E00'              	movlw	low AESCmac@y
 30973  0376' 0100               	movlb	0	; () banked
 30974  0378' 6F00'              	movwf	AESEncodeLoRa@block& (0+255),b
 30975  037A' 0E00'              	movlw	high AESCmac@y
 30976  037C' 6F00'              	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 30977  037E' C059' F01F'        	movff	AESCmac@key,AESEncodeLoRa@key
 30978  0382' C05A' F020'        	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 30979  0386' EC00' F000'        	call	_AESEncodeLoRa	;wreg free
 30980                           
 30981                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 30982  038A' C05B' F000'        	movff	AESCmac@output,memcpy@d1
 30983  038E' C05C' F001'        	movff	AESCmac@output+1,memcpy@d1+1
 30984  0392' 0E00'              	movlw	low AESCmac@y
 30985  0394' 0100               	movlb	0	; () banked
 30986  0396' 6F00'              	movwf	memcpy@s1& (0+255),b
 30987  0398' 0E00'              	movlw	high AESCmac@y
 30988  039A' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 30989  039C' 0E00               	movlw	0
 30990  039E' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 30991  03A0' 0E10               	movlw	16
 30992  03A2' 6F00'              	movwf	memcpy@n& (0+255),b
 30993  03A4' EC00' F000'        	call	_memcpy	;wreg free
 30994  03A8' 0012               	return		;funcret
 30995  03AA'                    __end_of_AESCmac:
 30996                           	opt stack 0
 30997                           tosu	equ	0xFFF
 30998                           tosh	equ	0xFFE
 30999                           tosl	equ	0xFFD
 31000                           pclath	equ	0xFFA
 31001                           tblptru	equ	0xFF8
 31002                           tblptrh	equ	0xFF7
 31003                           tblptrl	equ	0xFF6
 31004                           tablat	equ	0xFF5
 31005                           prodh	equ	0xFF4
 31006                           prodl	equ	0xFF3
 31007                           intcon	equ	0xFF2
 31008                           intcon2	equ	0xFF1
 31009                           intcon3	equ	0xFF0
 31010                           indf0	equ	0xFEF
 31011                           postinc0	equ	0xFEE
 31012                           fsr0h	equ	0xFEA
 31013                           fsr0l	equ	0xFE9
 31014                           wreg	equ	0xFE8
 31015                           postinc1	equ	0xFE6
 31016                           postdec1	equ	0xFE5
 31017                           plusw1	equ	0xFE3
 31018                           fsr1h	equ	0xFE2
 31019                           fsr1l	equ	0xFE1
 31020                           indf2	equ	0xFDF
 31021                           postinc2	equ	0xFDE
 31022                           postdec2	equ	0xFDD
 31023                           plusw2	equ	0xFDB
 31024                           fsr2h	equ	0xFDA
 31025                           fsr2l	equ	0xFD9
 31026                           status	equ	0xFD8
 31027                           
 31028 ;; *************** function _GenerateSubkey *****************
 31029 ;; Defined at:
 31030 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 31031 ;; Parameters:    Size  Location     Type
 31032 ;;  key             2   49[BANK0 ] PTR unsigned char 
 31033 ;;		 -> loRa.activationParameters(105), loRa(245), 
 31034 ;;  k1              2   51[BANK0 ] PTR unsigned char 
 31035 ;;		 -> AESCmac@k1(16), 
 31036 ;;  k2              2   53[BANK0 ] PTR unsigned char 
 31037 ;;		 -> AESCmac@k2(16), 
 31038 ;; Auto vars:     Size  Location     Type
 31039 ;;  l              16   72[BANK0 ] unsigned char [16]
 31040 ;;  const_Rb       16   56[BANK0 ] unsigned char [16]
 31041 ;;  i               1   88[BANK0 ] unsigned char 
 31042 ;; Return value:  Size  Location     Type
 31043 ;;                  1    wreg      void 
 31044 ;; Registers used:
 31045 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31046 ;; Tracked objects:
 31047 ;;		On entry : 0/0
 31048 ;;		On exit  : 0/0
 31049 ;;		Unchanged: 0/0
 31050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31051 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31052 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31053 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31054 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31055 ;;Total ram usage:       40 bytes
 31056 ;; Hardware stack levels used:    1
 31057 ;; Hardware stack levels required when called:   10
 31058 ;; This function calls:
 31059 ;;		_AESEncodeLoRa
 31060 ;;		_FillSubKey
 31061 ;;		_memset
 31062 ;; This function is called by:
 31063 ;;		_AESCmac
 31064 ;; This function uses a non-reentrant model
 31065 ;;
 31066                           
 31067                           	psect	text143
 31068  0000'                    __ptext143:
 31069                           	opt stack 0
 31070  0000'                    _GenerateSubkey:
 31071                           	opt stack 17
 31072                           
 31073                           ;lorawan_aes_cmac.c: 126: uint8_t i = 0;
 31074                           
 31075                           ;incstack = 0
 31076  0000' 0E00               	movlw	0
 31077  0002' 0100               	movlb	0	; () banked
 31078  0004' 6F00'              	movwf	GenerateSubkey@i& (0+255),b
 31079                           
 31080                           ; BSR set to: 0
 31081                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 31082                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 31083                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 31084  0006' EE20' F000'        	lfsr	2,GenerateSubkey@F7103
 31085  000A' EE00' F000'        	lfsr	0,GenerateSubkey@const_Rb
 31086  000E' 0E0F               	movlw	15
 31087  0010'                    u14861:
 31088  0010' CFDB FFEB          	movff	plusw2,plusw0
 31089  0014' 06E8               	decf	wreg,f,c
 31090  0016' E2FC               	bc	u14861
 31091                           
 31092                           ; BSR set to: 0
 31093                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 31094  0018' 0E00'              	movlw	low GenerateSubkey@l
 31095  001A' 6F00'              	movwf	memset@p1& (0+255),b
 31096  001C' 0E00'              	movlw	high GenerateSubkey@l
 31097  001E' 6F00'              	movwf	(memset@p1+1)& (0+255),b
 31098  0020' 0E00               	movlw	0
 31099  0022' 6F00'              	movwf	(memset@c+1)& (0+255),b
 31100  0024' 0E00               	movlw	0
 31101  0026' 6F00'              	movwf	memset@c& (0+255),b
 31102  0028' 0E00               	movlw	0
 31103  002A' 6F00'              	movwf	(memset@n+1)& (0+255),b
 31104  002C' 0E10               	movlw	16
 31105  002E' 6F00'              	movwf	memset@n& (0+255),b
 31106  0030' EC00' F000'        	call	_memset	;wreg free
 31107                           
 31108                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 31109  0034' 0E00'              	movlw	low GenerateSubkey@l
 31110  0036' 0100               	movlb	0	; () banked
 31111  0038' 6F00'              	movwf	AESEncodeLoRa@block& (0+255),b
 31112  003A' 0E00'              	movlw	high GenerateSubkey@l
 31113  003C' 6F00'              	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 31114  003E' C031' F01F'        	movff	GenerateSubkey@key,AESEncodeLoRa@key
 31115  0042' C032' F020'        	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 31116  0046' EC00' F000'        	call	_AESEncodeLoRa	;wreg free
 31117                           
 31118                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 31119  004A' 0100               	movlb	0	; () banked
 31120  004C' BF00'              	btfsc	GenerateSubkey@l& (0+255),7,b
 31121  004E' D00D               	goto	l68
 31122                           
 31123                           ; BSR set to: 0
 31124                           ;lorawan_aes_cmac.c: 138: {
 31125                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 31126  0050' 0E00'              	movlw	low GenerateSubkey@l
 31127  0052' 6F00'              	movwf	FillSubKey@source& (0+255),b
 31128  0054' 0E00'              	movlw	high GenerateSubkey@l
 31129  0056' 6F00'              	movwf	(FillSubKey@source+1)& (0+255),b
 31130  0058' C033' F002'        	movff	GenerateSubkey@k1,FillSubKey@key
 31131  005C' C034' F003'        	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 31132  0060' 0E10               	movlw	16
 31133  0062' 6F00'              	movwf	FillSubKey@size& (0+255),b
 31134  0064' EC00' F000'        	call	_FillSubKey	;wreg free
 31135                           
 31136                           ;lorawan_aes_cmac.c: 140: }
 31137  0068' D02A               	goto	u14890
 31138  006A'                    l68:
 31139                           
 31140                           ;lorawan_aes_cmac.c: 141: else
 31141                           ;lorawan_aes_cmac.c: 142: {
 31142                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 31143  006A' 0E00'              	movlw	low GenerateSubkey@l
 31144  006C' 0100               	movlb	0	; () banked
 31145  006E' 6F00'              	movwf	FillSubKey@source& (0+255),b
 31146  0070' 0E00'              	movlw	high GenerateSubkey@l
 31147  0072' 6F00'              	movwf	(FillSubKey@source+1)& (0+255),b
 31148  0074' C033' F002'        	movff	GenerateSubkey@k1,FillSubKey@key
 31149  0078' C034' F003'        	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 31150  007C' 0E10               	movlw	16
 31151  007E' 6F00'              	movwf	FillSubKey@size& (0+255),b
 31152  0080' EC00' F000'        	call	_FillSubKey	;wreg free
 31153                           
 31154                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 31155  0084' 0E00               	movlw	0
 31156  0086' 0100               	movlb	0	; () banked
 31157  0088' 6F00'              	movwf	GenerateSubkey@i& (0+255),b
 31158  008A'                    l13228:
 31159                           
 31160                           ; BSR set to: 0
 31161  008A' 0E0F               	movlw	15
 31162  008C' 6500'              	cpfsgt	GenerateSubkey@i& (0+255),b
 31163  008E' D001               	goto	l70
 31164  0090' D016               	goto	u14890
 31165  0092'                    l70:
 31166                           
 31167                           ; BSR set to: 0
 31168                           ;lorawan_aes_cmac.c: 146: {
 31169                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 31170                           
 31171                           ; BSR set to: 0
 31172  0092' 5100'              	movf	GenerateSubkey@i& (0+255),w,b
 31173  0094' 0D01               	mullw	1
 31174  0096' 0E00'              	movlw	low GenerateSubkey@const_Rb
 31175  0098' 24F3               	addwf	prodl,w,c
 31176  009A' 6ED9               	movwf	fsr2l,c
 31177  009C' 0E00'              	movlw	high GenerateSubkey@const_Rb
 31178  009E' 20F4               	addwfc	prodh,w,c
 31179  00A0' 6EDA               	movwf	fsr2h,c
 31180  00A2' 50DF               	movf	indf2,w,c
 31181  00A4' 6F00'              	movwf	??_GenerateSubkey& (0+255),b
 31182  00A6' 5100'              	movf	GenerateSubkey@i& (0+255),w,b
 31183  00A8' 0D01               	mullw	1
 31184  00AA' 50F3               	movf	prodl,w,c
 31185  00AC' 2500'              	addwf	GenerateSubkey@k1& (0+255),w,b
 31186  00AE' 6ED9               	movwf	fsr2l,c
 31187  00B0' 50F4               	movf	prodh,w,c
 31188  00B2' 2100'              	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 31189  00B4' 6EDA               	movwf	fsr2h,c
 31190  00B6' 5100'              	movf	??_GenerateSubkey& (0+255),w,b
 31191  00B8' 1ADF               	xorwf	indf2,f,c
 31192                           
 31193                           ; BSR set to: 0
 31194  00BA' 2B00'              	incf	GenerateSubkey@i& (0+255),f,b
 31195  00BC' D7E6               	goto	l13228
 31196  00BE'                    u14890:
 31197                           
 31198                           ;lorawan_aes_cmac.c: 148: }
 31199                           ;lorawan_aes_cmac.c: 149: }
 31200                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 31201                           
 31202                           ; BSR set to: 0
 31203                           
 31204                           ; BSR set to: 0
 31205  00BE' C033' FFD9         	movff	GenerateSubkey@k1,fsr2l
 31206  00C2' C034' FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 31207  00C6' 0100               	movlb	0	; () banked
 31208  00C8' BEDF               	btfsc	indf2,7,c
 31209  00CA' D00D               	goto	l72
 31210                           
 31211                           ; BSR set to: 0
 31212                           ;lorawan_aes_cmac.c: 153: {
 31213                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 31214  00CC' C033' F000'        	movff	GenerateSubkey@k1,FillSubKey@source
 31215  00D0' C034' F001'        	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 31216  00D4' C035' F002'        	movff	GenerateSubkey@k2,FillSubKey@key
 31217  00D8' C036' F003'        	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 31218  00DC' 0E10               	movlw	16
 31219  00DE' 6F00'              	movwf	FillSubKey@size& (0+255),b
 31220  00E0' EC00' F000'        	call	_FillSubKey	;wreg free
 31221                           
 31222                           ;lorawan_aes_cmac.c: 155: }
 31223  00E4' 0012               	return	
 31224  00E6'                    l72:
 31225                           
 31226                           ;lorawan_aes_cmac.c: 156: else
 31227                           ;lorawan_aes_cmac.c: 157: {
 31228                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 31229  00E6' C033' F000'        	movff	GenerateSubkey@k1,FillSubKey@source
 31230  00EA' C034' F001'        	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 31231  00EE' C035' F002'        	movff	GenerateSubkey@k2,FillSubKey@key
 31232  00F2' C036' F003'        	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 31233  00F6' 0E10               	movlw	16
 31234  00F8' 0100               	movlb	0	; () banked
 31235  00FA' 6F00'              	movwf	FillSubKey@size& (0+255),b
 31236  00FC' EC00' F000'        	call	_FillSubKey	;wreg free
 31237                           
 31238                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 31239  0100' 0E00               	movlw	0
 31240  0102' 0100               	movlb	0	; () banked
 31241  0104' 6F00'              	movwf	GenerateSubkey@i& (0+255),b
 31242  0106'                    l13246:
 31243                           
 31244                           ; BSR set to: 0
 31245  0106' 0E0F               	movlw	15
 31246  0108' 6500'              	cpfsgt	GenerateSubkey@i& (0+255),b
 31247  010A' D001               	goto	l74
 31248  010C' 0012               	return	
 31249  010E'                    l74:
 31250                           
 31251                           ; BSR set to: 0
 31252                           ;lorawan_aes_cmac.c: 161: {
 31253                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 31254                           
 31255                           ; BSR set to: 0
 31256  010E' 5100'              	movf	GenerateSubkey@i& (0+255),w,b
 31257  0110' 0D01               	mullw	1
 31258  0112' 50F3               	movf	prodl,w,c
 31259  0114' 2500'              	addwf	GenerateSubkey@k2& (0+255),w,b
 31260  0116' 6ED9               	movwf	fsr2l,c
 31261  0118' 50F4               	movf	prodh,w,c
 31262  011A' 2100'              	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 31263  011C' 6EDA               	movwf	fsr2h,c
 31264  011E' 5100'              	movf	GenerateSubkey@i& (0+255),w,b
 31265  0120' 0D01               	mullw	1
 31266  0122' 0E00'              	movlw	low GenerateSubkey@const_Rb
 31267  0124' 24F3               	addwf	prodl,w,c
 31268  0126' 6EE9               	movwf	fsr0l,c
 31269  0128' 0E00'              	movlw	high GenerateSubkey@const_Rb
 31270  012A' 20F4               	addwfc	prodh,w,c
 31271  012C' 6EEA               	movwf	fsr0h,c
 31272  012E' 50EF               	movf	indf0,w,c
 31273  0130' 6F00'              	movwf	??_GenerateSubkey& (0+255),b
 31274  0132' 5100'              	movf	GenerateSubkey@i& (0+255),w,b
 31275  0134' 0D01               	mullw	1
 31276  0136' 50F3               	movf	prodl,w,c
 31277  0138' 2500'              	addwf	GenerateSubkey@k2& (0+255),w,b
 31278  013A' 6EE9               	movwf	fsr0l,c
 31279  013C' 50F4               	movf	prodh,w,c
 31280  013E' 2100'              	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 31281  0140' 6EEA               	movwf	fsr0h,c
 31282  0142' 50EF               	movf	indf0,w,c
 31283  0144' 1900'              	xorwf	??_GenerateSubkey& (0+255),w,b
 31284  0146' 6EDF               	movwf	indf2,c
 31285                           
 31286                           ; BSR set to: 0
 31287  0148' 2B00'              	incf	GenerateSubkey@i& (0+255),f,b
 31288  014A' D7DD               	goto	l13246
 31289  014C'                    __end_of_GenerateSubkey:
 31290                           	opt stack 0
 31291                           tosu	equ	0xFFF
 31292                           tosh	equ	0xFFE
 31293                           tosl	equ	0xFFD
 31294                           pclath	equ	0xFFA
 31295                           tblptru	equ	0xFF8
 31296                           tblptrh	equ	0xFF7
 31297                           tblptrl	equ	0xFF6
 31298                           tablat	equ	0xFF5
 31299                           prodh	equ	0xFF4
 31300                           prodl	equ	0xFF3
 31301                           intcon	equ	0xFF2
 31302                           intcon2	equ	0xFF1
 31303                           intcon3	equ	0xFF0
 31304                           indf0	equ	0xFEF
 31305                           postinc0	equ	0xFEE
 31306                           plusw0	equ	0xFEB
 31307                           fsr0h	equ	0xFEA
 31308                           fsr0l	equ	0xFE9
 31309                           wreg	equ	0xFE8
 31310                           postinc1	equ	0xFE6
 31311                           postdec1	equ	0xFE5
 31312                           plusw1	equ	0xFE3
 31313                           fsr1h	equ	0xFE2
 31314                           fsr1l	equ	0xFE1
 31315                           indf2	equ	0xFDF
 31316                           postinc2	equ	0xFDE
 31317                           postdec2	equ	0xFDD
 31318                           plusw2	equ	0xFDB
 31319                           fsr2h	equ	0xFDA
 31320                           fsr2l	equ	0xFD9
 31321                           status	equ	0xFD8
 31322                           
 31323 ;; *************** function _FillSubKey *****************
 31324 ;; Defined at:
 31325 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 31326 ;; Parameters:    Size  Location     Type
 31327 ;;  source          2    0[BANK0 ] PTR unsigned char 
 31328 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 31329 ;;  key             2    2[BANK0 ] PTR unsigned char 
 31330 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 31331 ;;  size            1    4[BANK0 ] unsigned char 
 31332 ;; Auto vars:     Size  Location     Type
 31333 ;;  i               1    7[BANK0 ] unsigned char 
 31334 ;;  carry           1    6[BANK0 ] unsigned char 
 31335 ;; Return value:  Size  Location     Type
 31336 ;;                  1    wreg      void 
 31337 ;; Registers used:
 31338 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31339 ;; Tracked objects:
 31340 ;;		On entry : 0/0
 31341 ;;		On exit  : 0/0
 31342 ;;		Unchanged: 0/0
 31343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31344 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31345 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31346 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31347 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31348 ;;Total ram usage:        8 bytes
 31349 ;; Hardware stack levels used:    1
 31350 ;; Hardware stack levels required when called:    7
 31351 ;; This function calls:
 31352 ;;		Nothing
 31353 ;; This function is called by:
 31354 ;;		_GenerateSubkey
 31355 ;; This function uses a non-reentrant model
 31356 ;;
 31357                           
 31358                           	psect	text144
 31359  0000'                    __ptext144:
 31360                           	opt stack 0
 31361  0000'                    _FillSubKey:
 31362                           	opt stack 19
 31363                           
 31364                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 31365                           
 31366                           ;incstack = 0
 31367  0000' 0E00               	movlw	0
 31368  0002' 0100               	movlb	0	; () banked
 31369  0004' 6F00'              	movwf	FillSubKey@i& (0+255),b
 31370                           
 31371                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 31372  0006' 0E00               	movlw	0
 31373  0008' 6F00'              	movwf	FillSubKey@carry& (0+255),b
 31374                           
 31375                           ; BSR set to: 0
 31376                           ;lorawan_aes_cmac.c: 172: i=size;
 31377  000A' C004' F007'        	movff	FillSubKey@size,FillSubKey@i
 31378                           
 31379                           ;lorawan_aes_cmac.c: 174: while(i--)
 31380  000E' D024               	goto	l79
 31381  0010'                    
 31382                           ; BSR set to: 0
 31383                           ;lorawan_aes_cmac.c: 175: {
 31384                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 31385                           
 31386                           ; BSR set to: 0
 31387  0010' 5100'              	movf	FillSubKey@i& (0+255),w,b
 31388  0012' 0D01               	mullw	1
 31389  0014' 50F3               	movf	prodl,w,c
 31390  0016' 2500'              	addwf	FillSubKey@key& (0+255),w,b
 31391  0018' 6ED9               	movwf	fsr2l,c
 31392  001A' 50F4               	movf	prodh,w,c
 31393  001C' 2100'              	addwfc	(FillSubKey@key+1)& (0+255),w,b
 31394  001E' 6EDA               	movwf	fsr2h,c
 31395  0020' 5100'              	movf	FillSubKey@i& (0+255),w,b
 31396  0022' 0D01               	mullw	1
 31397  0024' 50F3               	movf	prodl,w,c
 31398  0026' 2500'              	addwf	FillSubKey@source& (0+255),w,b
 31399  0028' 6EE9               	movwf	fsr0l,c
 31400  002A' 50F4               	movf	prodh,w,c
 31401  002C' 2100'              	addwfc	(FillSubKey@source+1)& (0+255),w,b
 31402  002E' 6EEA               	movwf	fsr0h,c
 31403  0030' 50EF               	movf	indf0,w,c
 31404  0032' 6F00'              	movwf	??_FillSubKey& (0+255),b
 31405  0034' 90D8               	bcf	status,0,c
 31406  0036' 3500'              	rlcf	??_FillSubKey& (0+255),w,b
 31407  0038' 1100'              	iorwf	FillSubKey@carry& (0+255),w,b
 31408  003A' 6EDF               	movwf	indf2,c
 31409                           
 31410                           ; BSR set to: 0
 31411                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 31412  003C' 5100'              	movf	FillSubKey@i& (0+255),w,b
 31413  003E' 0D01               	mullw	1
 31414  0040' 50F3               	movf	prodl,w,c
 31415  0042' 2500'              	addwf	FillSubKey@source& (0+255),w,b
 31416  0044' 6ED9               	movwf	fsr2l,c
 31417  0046' 50F4               	movf	prodh,w,c
 31418  0048' 2100'              	addwfc	(FillSubKey@source+1)& (0+255),w,b
 31419  004A' 6EDA               	movwf	fsr2h,c
 31420  004C' AEDF               	btfss	indf2,7,c
 31421  004E' D002               	goto	u14370
 31422  0050' 0E01               	movlw	1
 31423  0052' D001               	goto	u14380
 31424  0054'                    u14370:
 31425  0054' 0E00               	movlw	0
 31426  0056'                    u14380:
 31427  0056' 6F00'              	movwf	FillSubKey@carry& (0+255),b
 31428  0058'                    l79:
 31429                           
 31430                           ; BSR set to: 0
 31431                           
 31432                           ; BSR set to: 0
 31433  0058' 0700'              	decf	FillSubKey@i& (0+255),f,b
 31434  005A' 2900'              	incf	FillSubKey@i& (0+255),w,b
 31435  005C' B4D8               	btfsc	status,2,c
 31436  005E' 0012               	return	
 31437  0060' D7D7               	goto	l80
 31438  0062'                    __end_of_FillSubKey:
 31439                           	opt stack 0
 31440                           tosu	equ	0xFFF
 31441                           tosh	equ	0xFFE
 31442                           tosl	equ	0xFFD
 31443                           pclath	equ	0xFFA
 31444                           tblptru	equ	0xFF8
 31445                           tblptrh	equ	0xFF7
 31446                           tblptrl	equ	0xFF6
 31447                           tablat	equ	0xFF5
 31448                           prodh	equ	0xFF4
 31449                           prodl	equ	0xFF3
 31450                           intcon	equ	0xFF2
 31451                           intcon2	equ	0xFF1
 31452                           intcon3	equ	0xFF0
 31453                           indf0	equ	0xFEF
 31454                           postinc0	equ	0xFEE
 31455                           plusw0	equ	0xFEB
 31456                           fsr0h	equ	0xFEA
 31457                           fsr0l	equ	0xFE9
 31458                           wreg	equ	0xFE8
 31459                           postinc1	equ	0xFE6
 31460                           postdec1	equ	0xFE5
 31461                           plusw1	equ	0xFE3
 31462                           fsr1h	equ	0xFE2
 31463                           fsr1l	equ	0xFE1
 31464                           indf2	equ	0xFDF
 31465                           postinc2	equ	0xFDE
 31466                           postdec2	equ	0xFDD
 31467                           plusw2	equ	0xFDB
 31468                           fsr2h	equ	0xFDA
 31469                           fsr2l	equ	0xFD9
 31470                           status	equ	0xFD8
 31471                           
 31472 ;; *************** function _AESEncodeLoRa *****************
 31473 ;; Defined at:
 31474 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 31475 ;; Parameters:    Size  Location     Type
 31476 ;;  block           2   29[BANK0 ] PTR unsigned char 
 31477 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 31478 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 31479 ;;  key             2   31[BANK0 ] PTR unsigned char 
 31480 ;;		 -> loRa.activationParameters(105), loRa(245), 
 31481 ;; Auto vars:     Size  Location     Type
 31482 ;;  useKey         16   33[BANK0 ] unsigned char [16]
 31483 ;; Return value:  Size  Location     Type
 31484 ;;                  1    wreg      void 
 31485 ;; Registers used:
 31486 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31487 ;; Tracked objects:
 31488 ;;		On entry : 0/0
 31489 ;;		On exit  : 0/0
 31490 ;;		Unchanged: 0/0
 31491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31492 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31493 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31495 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31496 ;;Total ram usage:       20 bytes
 31497 ;; Hardware stack levels used:    1
 31498 ;; Hardware stack levels required when called:    9
 31499 ;; This function calls:
 31500 ;;		_AESEncode
 31501 ;;		_memcpy
 31502 ;; This function is called by:
 31503 ;;		_AESCmac
 31504 ;;		_GenerateSubkey
 31505 ;;		_LORAWAN_RxDone
 31506 ;;		_ComputeSessionKeys
 31507 ;;		_EncryptFRMPayload
 31508 ;; This function uses a non-reentrant model
 31509 ;;
 31510                           
 31511                           	psect	text145
 31512  0000'                    __ptext145:
 31513                           	opt stack 0
 31514  0000'                    _AESEncodeLoRa:
 31515                           	opt stack 18
 31516                           
 31517                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 31518                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 31519                           
 31520                           ; BSR set to: 0
 31521                           ;incstack = 0
 31522  0000' 0E00'              	movlw	low AESEncodeLoRa@useKey
 31523  0002' 0100               	movlb	0	; () banked
 31524  0004' 6F00'              	movwf	memcpy@d1& (0+255),b
 31525  0006' 0E00'              	movlw	high AESEncodeLoRa@useKey
 31526  0008' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 31527  000A' C01F' F002'        	movff	AESEncodeLoRa@key,memcpy@s1
 31528  000E' C020' F003'        	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 31529  0012' 0E00               	movlw	0
 31530  0014' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 31531  0016' 0E10               	movlw	16
 31532  0018' 6F00'              	movwf	memcpy@n& (0+255),b
 31533  001A' EC00' F000'        	call	_memcpy	;wreg free
 31534                           
 31535                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 31536  001E' C01D' F006'        	movff	AESEncodeLoRa@block,AESEncode@block
 31537  0022' C01E' F007'        	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 31538  0026' 0E00'              	movlw	low AESEncodeLoRa@useKey
 31539  0028' 0100               	movlb	0	; () banked
 31540  002A' 6F00'              	movwf	AESEncode@key& (0+255),b
 31541  002C' 0E00'              	movlw	high AESEncodeLoRa@useKey
 31542  002E' 6F00'              	movwf	(AESEncode@key+1)& (0+255),b
 31543  0030' EC00' F000'        	call	_AESEncode	;wreg free
 31544  0034' 0012               	return		;funcret
 31545  0036'                    __end_of_AESEncodeLoRa:
 31546                           	opt stack 0
 31547                           tosu	equ	0xFFF
 31548                           tosh	equ	0xFFE
 31549                           tosl	equ	0xFFD
 31550                           pclath	equ	0xFFA
 31551                           tblptru	equ	0xFF8
 31552                           tblptrh	equ	0xFF7
 31553                           tblptrl	equ	0xFF6
 31554                           tablat	equ	0xFF5
 31555                           prodh	equ	0xFF4
 31556                           prodl	equ	0xFF3
 31557                           intcon	equ	0xFF2
 31558                           intcon2	equ	0xFF1
 31559                           intcon3	equ	0xFF0
 31560                           indf0	equ	0xFEF
 31561                           postinc0	equ	0xFEE
 31562                           plusw0	equ	0xFEB
 31563                           fsr0h	equ	0xFEA
 31564                           fsr0l	equ	0xFE9
 31565                           wreg	equ	0xFE8
 31566                           postinc1	equ	0xFE6
 31567                           postdec1	equ	0xFE5
 31568                           plusw1	equ	0xFE3
 31569                           fsr1h	equ	0xFE2
 31570                           fsr1l	equ	0xFE1
 31571                           indf2	equ	0xFDF
 31572                           postinc2	equ	0xFDE
 31573                           postdec2	equ	0xFDD
 31574                           plusw2	equ	0xFDB
 31575                           fsr2h	equ	0xFDA
 31576                           fsr2l	equ	0xFD9
 31577                           status	equ	0xFD8
 31578                           
 31579 ;; *************** function _AESEncode *****************
 31580 ;; Defined at:
 31581 ;;		line 248 in file "mcc_generated_files/LoRaWAN/AES.c"
 31582 ;; Parameters:    Size  Location     Type
 31583 ;;  block           2    6[BANK0 ] PTR unsigned char 
 31584 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 31585 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 31586 ;;  key             2    8[BANK0 ] PTR unsigned char 
 31587 ;;		 -> AESEncodeLoRa@useKey(16), 
 31588 ;; Auto vars:     Size  Location     Type
 31589 ;;  aux3            1   27[BANK0 ] unsigned char 
 31590 ;;  aux1            1   26[BANK0 ] unsigned char 
 31591 ;;  aux2            1   25[BANK0 ] unsigned char 
 31592 ;;  aux             1   24[BANK0 ] unsigned char 
 31593 ;;  i               1   28[BANK0 ] unsigned char 
 31594 ;;  temp            1    0        unsigned char 
 31595 ;; Return value:  Size  Location     Type
 31596 ;;                  1    wreg      void 
 31597 ;; Registers used:
 31598 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31599 ;; Tracked objects:
 31600 ;;		On entry : 0/0
 31601 ;;		On exit  : 0/0
 31602 ;;		Unchanged: 0/0
 31603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31604 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31605 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31606 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31607 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31608 ;;Total ram usage:       23 bytes
 31609 ;; Hardware stack levels used:    1
 31610 ;; Hardware stack levels required when called:    8
 31611 ;; This function calls:
 31612 ;;		_EncKeySchedule
 31613 ;;		_EncodeShiftRow
 31614 ;; This function is called by:
 31615 ;;		_AESEncodeLoRa
 31616 ;; This function uses a non-reentrant model
 31617 ;;
 31618                           
 31619                           	psect	text146
 31620  0000'                    __ptext146:
 31621                           	opt stack 0
 31622  0000'                    _AESEncode:
 31623                           	opt stack 18
 31624                           
 31625                           ;AES.c: 250: unsigned char i;
 31626                           ;AES.c: 251: unsigned char temp;
 31627                           ;AES.c: 254: _roundCounter = 10;
 31628                           
 31629                           ;incstack = 0
 31630  0000' 0E0A               	movlw	10
 31631  0002' 0101               	movlb	1	; () banked
 31632  0004' 6F00'              	movwf	__roundCounter& (0+255),b
 31633                           
 31634                           ;AES.c: 256: _rcon = 0x01;
 31635  0006' 0E01               	movlw	1
 31636  0008' 6E0A'              	movwf	__rcon,c
 31637                           
 31638                           ;AES.c: 259: for(i=0;i<16;i++)
 31639  000A' 0E00               	movlw	0
 31640  000C' 0100               	movlb	0	; () banked
 31641  000E' 6F00'              	movwf	AESEncode@i& (0+255),b
 31642  0010'                    l12764:
 31643                           
 31644                           ; BSR set to: 0
 31645  0010' 0E0F               	movlw	15
 31646  0012' 6500'              	cpfsgt	AESEncode@i& (0+255),b
 31647  0014' D001               	goto	l307
 31648  0016' D016               	goto	u14160
 31649  0018'                    l307:
 31650                           
 31651                           ; BSR set to: 0
 31652                           ;AES.c: 260: {
 31653                           ;AES.c: 261: block[i] ^= key[i];
 31654                           
 31655                           ; BSR set to: 0
 31656  0018' 5100'              	movf	AESEncode@i& (0+255),w,b
 31657  001A' 0D01               	mullw	1
 31658  001C' 50F3               	movf	prodl,w,c
 31659  001E' 2500'              	addwf	AESEncode@key& (0+255),w,b
 31660  0020' 6ED9               	movwf	fsr2l,c
 31661  0022' 50F4               	movf	prodh,w,c
 31662  0024' 2100'              	addwfc	(AESEncode@key+1)& (0+255),w,b
 31663  0026' 6EDA               	movwf	fsr2h,c
 31664  0028' 50DF               	movf	indf2,w,c
 31665  002A' 6F00'              	movwf	??_AESEncode& (0+255),b
 31666  002C' 5100'              	movf	AESEncode@i& (0+255),w,b
 31667  002E' 0D01               	mullw	1
 31668  0030' 50F3               	movf	prodl,w,c
 31669  0032' 2500'              	addwf	AESEncode@block& (0+255),w,b
 31670  0034' 6ED9               	movwf	fsr2l,c
 31671  0036' 50F4               	movf	prodh,w,c
 31672  0038' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 31673  003A' 6EDA               	movwf	fsr2h,c
 31674  003C' 5100'              	movf	??_AESEncode& (0+255),w,b
 31675  003E' 1ADF               	xorwf	indf2,f,c
 31676                           
 31677                           ; BSR set to: 0
 31678  0040' 2B00'              	incf	AESEncode@i& (0+255),f,b
 31679  0042' D7E6               	goto	l12764
 31680  0044'                    u14160:
 31681                           
 31682                           ;AES.c: 265: {
 31683                           ;AES.c: 268: for(i=0;i<16;i++)
 31684                           
 31685                           ; BSR set to: 0
 31686                           
 31687                           ;AES.c: 262: }
 31688                           ;AES.c: 264: do
 31689                           
 31690                           ; BSR set to: 0
 31691  0044' 0E00               	movlw	0
 31692  0046' 0100               	movlb	0	; () banked
 31693  0048' 6F00'              	movwf	AESEncode@i& (0+255),b
 31694  004A'                    l12776:
 31695                           
 31696                           ; BSR set to: 0
 31697  004A' 0E0F               	movlw	15
 31698  004C' 6500'              	cpfsgt	AESEncode@i& (0+255),b
 31699  004E' D001               	goto	l310
 31700  0050' D022               	goto	u14180
 31701  0052'                    l310:
 31702                           
 31703                           ; BSR set to: 0
 31704                           ;AES.c: 269: {
 31705                           ;AES.c: 270: block[i]=STable[block[i]];
 31706                           
 31707                           ; BSR set to: 0
 31708  0052' 5100'              	movf	AESEncode@i& (0+255),w,b
 31709  0054' 0D01               	mullw	1
 31710  0056' 50F3               	movf	prodl,w,c
 31711  0058' 2500'              	addwf	AESEncode@block& (0+255),w,b
 31712  005A' 6ED9               	movwf	fsr2l,c
 31713  005C' 50F4               	movf	prodh,w,c
 31714  005E' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 31715  0060' 6EDA               	movwf	fsr2h,c
 31716  0062' 50DF               	movf	indf2,w,c
 31717  0064' 6F00'              	movwf	??_AESEncode& (0+255),b
 31718  0066' 5100'              	movf	??_AESEncode& (0+255),w,b
 31719  0068' 0D01               	mullw	1
 31720  006A' 0E00'              	movlw	low _STable
 31721  006C' 24F3               	addwf	prodl,w,c
 31722  006E' 6EF6               	movwf	tblptrl,c
 31723  0070' 0E00'              	movlw	high _STable
 31724  0072' 20F4               	addwfc	prodh,w,c
 31725  0074' 6EF7               	movwf	tblptrh,c
 31726  0076'                    	if	1	;There are 3 active tblptr bytes
 31727  0076' 6AF8               	clrf	tblptru,c
 31728  0078' 0E00'              	movlw	low (__mediumconst shr (0+16))
 31729  007A' 22F8               	addwfc	tblptru,f,c
 31730  007C'                    	endif
 31731  007C' 5100'              	movf	AESEncode@i& (0+255),w,b
 31732  007E' 0D01               	mullw	1
 31733  0080' 50F3               	movf	prodl,w,c
 31734  0082' 2500'              	addwf	AESEncode@block& (0+255),w,b
 31735  0084' 6ED9               	movwf	fsr2l,c
 31736  0086' 50F4               	movf	prodh,w,c
 31737  0088' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 31738  008A' 6EDA               	movwf	fsr2h,c
 31739  008C' 0008               	tblrd		*
 31740  008E' CFF5 FFDF          	movff	tablat,indf2
 31741                           
 31742                           ; BSR set to: 0
 31743  0092' 2B00'              	incf	AESEncode@i& (0+255),f,b
 31744  0094' D7DA               	goto	l12776
 31745  0096'                    u14180:
 31746                           
 31747                           ; BSR set to: 0
 31748                           ;AES.c: 271: }
 31749                           ;AES.c: 274: EncodeShiftRow(block);
 31750                           
 31751                           ; BSR set to: 0
 31752  0096' C006' F000'        	movff	AESEncode@block,EncodeShiftRow@stateTable
 31753  009A' C007' F001'        	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 31754  009E' EC00' F000'        	call	_EncodeShiftRow	;wreg free
 31755                           
 31756                           ;AES.c: 277: if(_roundCounter != 1)
 31757  00A2' 0101               	movlb	1	; () banked
 31758  00A4' 0500'              	decf	__roundCounter& (0+255),w,b
 31759  00A6' B4D8               	btfsc	status,2,c
 31760  00A8' D127               	goto	u14240
 31761                           
 31762                           ; BSR set to: 1
 31763                           ;AES.c: 278: {
 31764                           ;AES.c: 279: unsigned char aux,aux1,aux2,aux3;
 31765                           ;AES.c: 281: for(i=0;i<16;i+=4)
 31766  00AA' 0E00               	movlw	0
 31767  00AC' 0100               	movlb	0	; () banked
 31768  00AE' 6F00'              	movwf	AESEncode@i& (0+255),b
 31769  00B0'                    l12792:
 31770                           
 31771                           ; BSR set to: 0
 31772  00B0' 0E0F               	movlw	15
 31773  00B2' 6500'              	cpfsgt	AESEncode@i& (0+255),b
 31774  00B4' D001               	goto	l313
 31775  00B6' D120               	goto	u14240
 31776  00B8'                    l313:
 31777                           
 31778                           ; BSR set to: 0
 31779                           ;AES.c: 282: {
 31780                           ;AES.c: 283: aux1= block[i+0] ^ block[i+1];
 31781                           
 31782                           ; BSR set to: 0
 31783  00B8' 5100'              	movf	AESEncode@i& (0+255),w,b
 31784  00BA' 6F00'              	movwf	??_AESEncode& (0+255),b
 31785  00BC' 6B00'              	clrf	(??_AESEncode+1)& (0+255),b
 31786  00BE' 0E01               	movlw	1
 31787  00C0' 2700'              	addwf	??_AESEncode& (0+255),f,b
 31788  00C2' 0E00               	movlw	0
 31789  00C4' 2300'              	addwfc	(??_AESEncode+1)& (0+255),f,b
 31790  00C6' 5100'              	movf	??_AESEncode& (0+255),w,b
 31791  00C8' 2500'              	addwf	AESEncode@block& (0+255),w,b
 31792  00CA' 6ED9               	movwf	fsr2l,c
 31793  00CC' 5100'              	movf	(??_AESEncode+1)& (0+255),w,b
 31794  00CE' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 31795  00D0' 6EDA               	movwf	fsr2h,c
 31796  00D2' 50DF               	movf	indf2,w,c
 31797  00D4' 6F00'              	movwf	(??_AESEncode+2)& (0+255),b
 31798  00D6' 5100'              	movf	AESEncode@i& (0+255),w,b
 31799  00D8' 2500'              	addwf	AESEncode@block& (0+255),w,b
 31800  00DA' 6ED9               	movwf	fsr2l,c
 31801  00DC' 0E00               	movlw	0
 31802  00DE' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 31803  00E0' 6EDA               	movwf	fsr2h,c
 31804  00E2' 50DF               	movf	indf2,w,c
 31805  00E4' 1900'              	xorwf	(??_AESEncode+2)& (0+255),w,b
 31806  00E6' 6F00'              	movwf	AESEncode@aux1& (0+255),b
 31807                           
 31808                           ;AES.c: 284: aux3= block[i+2]^block[i+3];
 31809  00E8' 5100'              	movf	AESEncode@i& (0+255),w,b
 31810  00EA' 6F00'              	movwf	??_AESEncode& (0+255),b
 31811  00EC' 6B00'              	clrf	(??_AESEncode+1)& (0+255),b
 31812  00EE' 0E03               	movlw	3
 31813  00F0' 2700'              	addwf	??_AESEncode& (0+255),f,b
 31814  00F2' 0E00               	movlw	0
 31815  00F4' 2300'              	addwfc	(??_AESEncode+1)& (0+255),f,b
 31816  00F6' 5100'              	movf	??_AESEncode& (0+255),w,b
 31817  00F8' 2500'              	addwf	AESEncode@block& (0+255),w,b
 31818  00FA' 6ED9               	movwf	fsr2l,c
 31819  00FC' 5100'              	movf	(??_AESEncode+1)& (0+255),w,b
 31820  00FE' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 31821  0100' 6EDA               	movwf	fsr2h,c
 31822  0102' 50DF               	movf	indf2,w,c
 31823  0104' 6F00'              	movwf	(??_AESEncode+2)& (0+255),b
 31824  0106' 5100'              	movf	AESEncode@i& (0+255),w,b
 31825  0108' 6F00'              	movwf	(??_AESEncode+3)& (0+255),b
 31826  010A' 6B00'              	clrf	(??_AESEncode+4)& (0+255),b
 31827  010C' 0E02               	movlw	2
 31828  010E' 2700'              	addwf	(??_AESEncode+3)& (0+255),f,b
 31829  0110' 0E00               	movlw	0
 31830  0112' 2300'              	addwfc	(??_AESEncode+4)& (0+255),f,b
 31831  0114' 5100'              	movf	(??_AESEncode+3)& (0+255),w,b
 31832  0116' 2500'              	addwf	AESEncode@block& (0+255),w,b
 31833  0118' 6ED9               	movwf	fsr2l,c
 31834  011A' 5100'              	movf	(??_AESEncode+4)& (0+255),w,b
 31835  011C' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 31836  011E' 6EDA               	movwf	fsr2h,c
 31837  0120' 50DF               	movf	indf2,w,c
 31838  0122' 1900'              	xorwf	(??_AESEncode+2)& (0+255),w,b
 31839  0124' 6F00'              	movwf	AESEncode@aux3& (0+255),b
 31840                           
 31841                           ; BSR set to: 0
 31842                           ;AES.c: 285: aux = aux1 ^ aux3;
 31843  0126' 5100'              	movf	AESEncode@aux1& (0+255),w,b
 31844  0128' 1900'              	xorwf	AESEncode@aux3& (0+255),w,b
 31845  012A' 6F00'              	movwf	AESEncode@aux& (0+255),b
 31846                           
 31847                           ; BSR set to: 0
 31848                           ;AES.c: 286: aux2= block[i+2]^block[i+1];
 31849  012C' 5100'              	movf	AESEncode@i& (0+255),w,b
 31850  012E' 6F00'              	movwf	??_AESEncode& (0+255),b
 31851  0130' 6B00'              	clrf	(??_AESEncode+1)& (0+255),b
 31852  0132' 0E01               	movlw	1
 31853  0134' 2700'              	addwf	??_AESEncode& (0+255),f,b
 31854  0136' 0E00               	movlw	0
 31855  0138' 2300'              	addwfc	(??_AESEncode+1)& (0+255),f,b
 31856  013A' 5100'              	movf	??_AESEncode& (0+255),w,b
 31857  013C' 2500'              	addwf	AESEncode@block& (0+255),w,b
 31858  013E' 6ED9               	movwf	fsr2l,c
 31859  0140' 5100'              	movf	(??_AESEncode+1)& (0+255),w,b
 31860  0142' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 31861  0144' 6EDA               	movwf	fsr2h,c
 31862  0146' 50DF               	movf	indf2,w,c
 31863  0148' 6F00'              	movwf	(??_AESEncode+2)& (0+255),b
 31864  014A' 5100'              	movf	AESEncode@i& (0+255),w,b
 31865  014C' 6F00'              	movwf	(??_AESEncode+3)& (0+255),b
 31866  014E' 6B00'              	clrf	(??_AESEncode+4)& (0+255),b
 31867  0150' 0E02               	movlw	2
 31868  0152' 2700'              	addwf	(??_AESEncode+3)& (0+255),f,b
 31869  0154' 0E00               	movlw	0
 31870  0156' 2300'              	addwfc	(??_AESEncode+4)& (0+255),f,b
 31871  0158' 5100'              	movf	(??_AESEncode+3)& (0+255),w,b
 31872  015A' 2500'              	addwf	AESEncode@block& (0+255),w,b
 31873  015C' 6ED9               	movwf	fsr2l,c
 31874  015E' 5100'              	movf	(??_AESEncode+4)& (0+255),w,b
 31875  0160' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 31876  0162' 6EDA               	movwf	fsr2h,c
 31877  0164' 50DF               	movf	indf2,w,c
 31878  0166' 1900'              	xorwf	(??_AESEncode+2)& (0+255),w,b
 31879  0168' 6F00'              	movwf	AESEncode@aux2& (0+255),b
 31880                           
 31881                           ;AES.c: 288: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 31882  016A' 0E7F               	movlw	127
 31883  016C' 6500'              	cpfsgt	AESEncode@aux1& (0+255),b
 31884  016E' D00C               	goto	l316
 31885                           
 31886                           ; BSR set to: 0
 31887  0170' 0E1B               	movlw	27
 31888  0172' C01A' F00A'        	movff	AESEncode@aux1,??_AESEncode
 31889  0176' 6B00'              	clrf	(??_AESEncode+1)& (0+255),b
 31890  0178' 90D8               	bcf	status,0,c
 31891  017A' 3700'              	rlcf	??_AESEncode& (0+255),f,b
 31892  017C' 3700'              	rlcf	(??_AESEncode+1)& (0+255),f,b
 31893  017E' 1900'              	xorwf	??_AESEncode& (0+255),w,b
 31894  0180' 6F00'              	movwf	_AESEncode$513& (0+255),b
 31895  0182' 5100'              	movf	(??_AESEncode+1)& (0+255),w,b
 31896  0184' 6F00'              	movwf	(_AESEncode$513+1)& (0+255),b
 31897  0186' D005               	goto	l318
 31898  0188'                    l316:
 31899                           
 31900                           ; BSR set to: 0
 31901                           
 31902                           ; BSR set to: 0
 31903  0188' 90D8               	bcf	status,0,c
 31904  018A' 3500'              	rlcf	AESEncode@aux1& (0+255),w,b
 31905  018C' 6F00'              	movwf	_AESEncode$513& (0+255),b
 31906  018E' 6B00'              	clrf	(_AESEncode$513+1)& (0+255),b
 31907  0190' 3700'              	rlcf	(_AESEncode$513+1)& (0+255),f,b
 31908  0192'                    l318:
 31909                           
 31910                           ; BSR set to: 0
 31911                           
 31912                           ; BSR set to: 0
 31913  0192' C012' F01A'        	movff	_AESEncode$513,AESEncode@aux1
 31914                           
 31915                           ;AES.c: 289: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 31916  0196' 0E7F               	movlw	127
 31917  0198' 6500'              	cpfsgt	AESEncode@aux2& (0+255),b
 31918  019A' D00C               	goto	l320
 31919                           
 31920                           ; BSR set to: 0
 31921  019C' 0E1B               	movlw	27
 31922  019E' C019' F00A'        	movff	AESEncode@aux2,??_AESEncode
 31923  01A2' 6B00'              	clrf	(??_AESEncode+1)& (0+255),b
 31924  01A4' 90D8               	bcf	status,0,c
 31925  01A6' 3700'              	rlcf	??_AESEncode& (0+255),f,b
 31926  01A8' 3700'              	rlcf	(??_AESEncode+1)& (0+255),f,b
 31927  01AA' 1900'              	xorwf	??_AESEncode& (0+255),w,b
 31928  01AC' 6F00'              	movwf	_AESEncode$514& (0+255),b
 31929  01AE' 5100'              	movf	(??_AESEncode+1)& (0+255),w,b
 31930  01B0' 6F00'              	movwf	(_AESEncode$514+1)& (0+255),b
 31931  01B2' D005               	goto	l322
 31932  01B4'                    l320:
 31933                           
 31934                           ; BSR set to: 0
 31935                           
 31936                           ; BSR set to: 0
 31937  01B4' 90D8               	bcf	status,0,c
 31938  01B6' 3500'              	rlcf	AESEncode@aux2& (0+255),w,b
 31939  01B8' 6F00'              	movwf	_AESEncode$514& (0+255),b
 31940  01BA' 6B00'              	clrf	(_AESEncode$514+1)& (0+255),b
 31941  01BC' 3700'              	rlcf	(_AESEncode$514+1)& (0+255),f,b
 31942  01BE'                    l322:
 31943                           
 31944                           ; BSR set to: 0
 31945                           
 31946                           ; BSR set to: 0
 31947  01BE' C014' F019'        	movff	_AESEncode$514,AESEncode@aux2
 31948                           
 31949                           ;AES.c: 290: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 31950  01C2' 0E7F               	movlw	127
 31951  01C4' 6500'              	cpfsgt	AESEncode@aux3& (0+255),b
 31952  01C6' D00C               	goto	l324
 31953                           
 31954                           ; BSR set to: 0
 31955  01C8' 0E1B               	movlw	27
 31956  01CA' C01B' F00A'        	movff	AESEncode@aux3,??_AESEncode
 31957  01CE' 6B00'              	clrf	(??_AESEncode+1)& (0+255),b
 31958  01D0' 90D8               	bcf	status,0,c
 31959  01D2' 3700'              	rlcf	??_AESEncode& (0+255),f,b
 31960  01D4' 3700'              	rlcf	(??_AESEncode+1)& (0+255),f,b
 31961  01D6' 1900'              	xorwf	??_AESEncode& (0+255),w,b
 31962  01D8' 6F00'              	movwf	_AESEncode$515& (0+255),b
 31963  01DA' 5100'              	movf	(??_AESEncode+1)& (0+255),w,b
 31964  01DC' 6F00'              	movwf	(_AESEncode$515+1)& (0+255),b
 31965  01DE' D005               	goto	l326
 31966  01E0'                    l324:
 31967                           
 31968                           ; BSR set to: 0
 31969                           
 31970                           ; BSR set to: 0
 31971  01E0' 90D8               	bcf	status,0,c
 31972  01E2' 3500'              	rlcf	AESEncode@aux3& (0+255),w,b
 31973  01E4' 6F00'              	movwf	_AESEncode$515& (0+255),b
 31974  01E6' 6B00'              	clrf	(_AESEncode$515+1)& (0+255),b
 31975  01E8' 3700'              	rlcf	(_AESEncode$515+1)& (0+255),f,b
 31976  01EA'                    l326:
 31977                           
 31978                           ; BSR set to: 0
 31979                           
 31980                           ; BSR set to: 0
 31981  01EA' C016' F01B'        	movff	_AESEncode$515,AESEncode@aux3
 31982                           
 31983                           ; BSR set to: 0
 31984                           ;AES.c: 292: block[i+0]= aux^aux1^block[i+0];
 31985  01EE' 5100'              	movf	AESEncode@i& (0+255),w,b
 31986  01F0' 2500'              	addwf	AESEncode@block& (0+255),w,b
 31987  01F2' 6ED9               	movwf	fsr2l,c
 31988  01F4' 0E00               	movlw	0
 31989  01F6' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 31990  01F8' 6EDA               	movwf	fsr2h,c
 31991  01FA' 5100'              	movf	AESEncode@i& (0+255),w,b
 31992  01FC' 2500'              	addwf	AESEncode@block& (0+255),w,b
 31993  01FE' 6EE9               	movwf	fsr0l,c
 31994  0200' 0E00               	movlw	0
 31995  0202' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 31996  0204' 6EEA               	movwf	fsr0h,c
 31997  0206' 50EF               	movf	indf0,w,c
 31998  0208' 1900'              	xorwf	AESEncode@aux& (0+255),w,b
 31999  020A' 1900'              	xorwf	AESEncode@aux1& (0+255),w,b
 32000  020C' 6EDF               	movwf	indf2,c
 32001                           
 32002                           ; BSR set to: 0
 32003                           ;AES.c: 293: block[i+1]= aux^aux2^block[i+1];
 32004  020E' 5100'              	movf	AESEncode@i& (0+255),w,b
 32005  0210' 6F00'              	movwf	??_AESEncode& (0+255),b
 32006  0212' 6B00'              	clrf	(??_AESEncode+1)& (0+255),b
 32007  0214' 0E01               	movlw	1
 32008  0216' 2700'              	addwf	??_AESEncode& (0+255),f,b
 32009  0218' 0E00               	movlw	0
 32010  021A' 2300'              	addwfc	(??_AESEncode+1)& (0+255),f,b
 32011  021C' 5100'              	movf	??_AESEncode& (0+255),w,b
 32012  021E' 2500'              	addwf	AESEncode@block& (0+255),w,b
 32013  0220' 6ED9               	movwf	fsr2l,c
 32014  0222' 5100'              	movf	(??_AESEncode+1)& (0+255),w,b
 32015  0224' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 32016  0226' 6EDA               	movwf	fsr2h,c
 32017  0228' 5100'              	movf	AESEncode@i& (0+255),w,b
 32018  022A' 6F00'              	movwf	(??_AESEncode+2)& (0+255),b
 32019  022C' 6B00'              	clrf	(??_AESEncode+3)& (0+255),b
 32020  022E' 0E01               	movlw	1
 32021  0230' 2700'              	addwf	(??_AESEncode+2)& (0+255),f,b
 32022  0232' 0E00               	movlw	0
 32023  0234' 2300'              	addwfc	(??_AESEncode+3)& (0+255),f,b
 32024  0236' 5100'              	movf	(??_AESEncode+2)& (0+255),w,b
 32025  0238' 2500'              	addwf	AESEncode@block& (0+255),w,b
 32026  023A' 6EE9               	movwf	fsr0l,c
 32027  023C' 5100'              	movf	(??_AESEncode+3)& (0+255),w,b
 32028  023E' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 32029  0240' 6EEA               	movwf	fsr0h,c
 32030  0242' 50EF               	movf	indf0,w,c
 32031  0244' 1900'              	xorwf	AESEncode@aux& (0+255),w,b
 32032  0246' 1900'              	xorwf	AESEncode@aux2& (0+255),w,b
 32033  0248' 6EDF               	movwf	indf2,c
 32034                           
 32035                           ; BSR set to: 0
 32036                           ;AES.c: 294: block[i+2]= aux^aux3^block[i+2];
 32037  024A' 5100'              	movf	AESEncode@i& (0+255),w,b
 32038  024C' 6F00'              	movwf	??_AESEncode& (0+255),b
 32039  024E' 6B00'              	clrf	(??_AESEncode+1)& (0+255),b
 32040  0250' 0E02               	movlw	2
 32041  0252' 2700'              	addwf	??_AESEncode& (0+255),f,b
 32042  0254' 0E00               	movlw	0
 32043  0256' 2300'              	addwfc	(??_AESEncode+1)& (0+255),f,b
 32044  0258' 5100'              	movf	??_AESEncode& (0+255),w,b
 32045  025A' 2500'              	addwf	AESEncode@block& (0+255),w,b
 32046  025C' 6ED9               	movwf	fsr2l,c
 32047  025E' 5100'              	movf	(??_AESEncode+1)& (0+255),w,b
 32048  0260' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 32049  0262' 6EDA               	movwf	fsr2h,c
 32050  0264' 5100'              	movf	AESEncode@i& (0+255),w,b
 32051  0266' 6F00'              	movwf	(??_AESEncode+2)& (0+255),b
 32052  0268' 6B00'              	clrf	(??_AESEncode+3)& (0+255),b
 32053  026A' 0E02               	movlw	2
 32054  026C' 2700'              	addwf	(??_AESEncode+2)& (0+255),f,b
 32055  026E' 0E00               	movlw	0
 32056  0270' 2300'              	addwfc	(??_AESEncode+3)& (0+255),f,b
 32057  0272' 5100'              	movf	(??_AESEncode+2)& (0+255),w,b
 32058  0274' 2500'              	addwf	AESEncode@block& (0+255),w,b
 32059  0276' 6EE9               	movwf	fsr0l,c
 32060  0278' 5100'              	movf	(??_AESEncode+3)& (0+255),w,b
 32061  027A' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 32062  027C' 6EEA               	movwf	fsr0h,c
 32063  027E' 50EF               	movf	indf0,w,c
 32064  0280' 1900'              	xorwf	AESEncode@aux& (0+255),w,b
 32065  0282' 1900'              	xorwf	AESEncode@aux3& (0+255),w,b
 32066  0284' 6EDF               	movwf	indf2,c
 32067                           
 32068                           ; BSR set to: 0
 32069                           ;AES.c: 295: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 32070  0286' 5100'              	movf	AESEncode@i& (0+255),w,b
 32071  0288' 6F00'              	movwf	??_AESEncode& (0+255),b
 32072  028A' 6B00'              	clrf	(??_AESEncode+1)& (0+255),b
 32073  028C' 0E03               	movlw	3
 32074  028E' 2700'              	addwf	??_AESEncode& (0+255),f,b
 32075  0290' 0E00               	movlw	0
 32076  0292' 2300'              	addwfc	(??_AESEncode+1)& (0+255),f,b
 32077  0294' 5100'              	movf	??_AESEncode& (0+255),w,b
 32078  0296' 2500'              	addwf	AESEncode@block& (0+255),w,b
 32079  0298' 6ED9               	movwf	fsr2l,c
 32080  029A' 5100'              	movf	(??_AESEncode+1)& (0+255),w,b
 32081  029C' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 32082  029E' 6EDA               	movwf	fsr2h,c
 32083  02A0' 5100'              	movf	AESEncode@i& (0+255),w,b
 32084  02A2' 6F00'              	movwf	(??_AESEncode+2)& (0+255),b
 32085  02A4' 6B00'              	clrf	(??_AESEncode+3)& (0+255),b
 32086  02A6' 0E02               	movlw	2
 32087  02A8' 2700'              	addwf	(??_AESEncode+2)& (0+255),f,b
 32088  02AA' 0E00               	movlw	0
 32089  02AC' 2300'              	addwfc	(??_AESEncode+3)& (0+255),f,b
 32090  02AE' 5100'              	movf	(??_AESEncode+2)& (0+255),w,b
 32091  02B0' 2500'              	addwf	AESEncode@block& (0+255),w,b
 32092  02B2' 6EE9               	movwf	fsr0l,c
 32093  02B4' 5100'              	movf	(??_AESEncode+3)& (0+255),w,b
 32094  02B6' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 32095  02B8' 6EEA               	movwf	fsr0h,c
 32096  02BA' 50EF               	movf	indf0,w,c
 32097  02BC' 6F00'              	movwf	(??_AESEncode+4)& (0+255),b
 32098  02BE' 5100'              	movf	AESEncode@i& (0+255),w,b
 32099  02C0' 6F00'              	movwf	(??_AESEncode+5)& (0+255),b
 32100  02C2' 6B00'              	clrf	(??_AESEncode+6)& (0+255),b
 32101  02C4' 0E01               	movlw	1
 32102  02C6' 2700'              	addwf	(??_AESEncode+5)& (0+255),f,b
 32103  02C8' 0E00               	movlw	0
 32104  02CA' 2300'              	addwfc	(??_AESEncode+6)& (0+255),f,b
 32105  02CC' 5100'              	movf	(??_AESEncode+5)& (0+255),w,b
 32106  02CE' 2500'              	addwf	AESEncode@block& (0+255),w,b
 32107  02D0' 6EE9               	movwf	fsr0l,c
 32108  02D2' 5100'              	movf	(??_AESEncode+6)& (0+255),w,b
 32109  02D4' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 32110  02D6' 6EEA               	movwf	fsr0h,c
 32111  02D8' 50EF               	movf	indf0,w,c
 32112  02DA' 6F00'              	movwf	(??_AESEncode+7)& (0+255),b
 32113  02DC' 5100'              	movf	AESEncode@i& (0+255),w,b
 32114  02DE' 2500'              	addwf	AESEncode@block& (0+255),w,b
 32115  02E0' 6EE9               	movwf	fsr0l,c
 32116  02E2' 0E00               	movlw	0
 32117  02E4' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 32118  02E6' 6EEA               	movwf	fsr0h,c
 32119  02E8' 50EF               	movf	indf0,w,c
 32120  02EA' 1900'              	xorwf	(??_AESEncode+7)& (0+255),w,b
 32121  02EC' 1900'              	xorwf	(??_AESEncode+4)& (0+255),w,b
 32122  02EE' 1900'              	xorwf	AESEncode@aux& (0+255),w,b
 32123  02F0' 6EDF               	movwf	indf2,c
 32124  02F2' 0E04               	movlw	4
 32125  02F4' 2700'              	addwf	AESEncode@i& (0+255),f,b
 32126  02F6' D6DC               	goto	l12792
 32127  02F8'                    u14240:
 32128                           
 32129                           ;AES.c: 296: }
 32130                           ;AES.c: 297: }
 32131                           ;AES.c: 299: EncKeySchedule(key);
 32132                           
 32133                           ; BSR set to: 0
 32134                           
 32135                           ; BSR set to: 0
 32136  02F8' C008' F000'        	movff	AESEncode@key,EncKeySchedule@key
 32137  02FC' C009' F001'        	movff	AESEncode@key+1,EncKeySchedule@key+1
 32138  0300' EC00' F000'        	call	_EncKeySchedule	;wreg free
 32139                           
 32140                           ;AES.c: 302: for(i=0;i<16;i++)
 32141  0304' 0E00               	movlw	0
 32142  0306' 0100               	movlb	0	; () banked
 32143  0308' 6F00'              	movwf	AESEncode@i& (0+255),b
 32144  030A'                    l12832:
 32145                           
 32146                           ; BSR set to: 0
 32147  030A' 0E0F               	movlw	15
 32148  030C' 6500'              	cpfsgt	AESEncode@i& (0+255),b
 32149  030E' D001               	goto	l327
 32150  0310' D016               	goto	u14260
 32151  0312'                    l327:
 32152                           
 32153                           ; BSR set to: 0
 32154                           ;AES.c: 303: {
 32155                           ;AES.c: 304: block[i] ^= key[i];
 32156                           
 32157                           ; BSR set to: 0
 32158  0312' 5100'              	movf	AESEncode@i& (0+255),w,b
 32159  0314' 0D01               	mullw	1
 32160  0316' 50F3               	movf	prodl,w,c
 32161  0318' 2500'              	addwf	AESEncode@key& (0+255),w,b
 32162  031A' 6ED9               	movwf	fsr2l,c
 32163  031C' 50F4               	movf	prodh,w,c
 32164  031E' 2100'              	addwfc	(AESEncode@key+1)& (0+255),w,b
 32165  0320' 6EDA               	movwf	fsr2h,c
 32166  0322' 50DF               	movf	indf2,w,c
 32167  0324' 6F00'              	movwf	??_AESEncode& (0+255),b
 32168  0326' 5100'              	movf	AESEncode@i& (0+255),w,b
 32169  0328' 0D01               	mullw	1
 32170  032A' 50F3               	movf	prodl,w,c
 32171  032C' 2500'              	addwf	AESEncode@block& (0+255),w,b
 32172  032E' 6ED9               	movwf	fsr2l,c
 32173  0330' 50F4               	movf	prodh,w,c
 32174  0332' 2100'              	addwfc	(AESEncode@block+1)& (0+255),w,b
 32175  0334' 6EDA               	movwf	fsr2h,c
 32176  0336' 5100'              	movf	??_AESEncode& (0+255),w,b
 32177  0338' 1ADF               	xorwf	indf2,f,c
 32178                           
 32179                           ; BSR set to: 0
 32180  033A' 2B00'              	incf	AESEncode@i& (0+255),f,b
 32181  033C' D7E6               	goto	l12832
 32182  033E'                    u14260:
 32183                           
 32184                           ; BSR set to: 0
 32185                           ;AES.c: 305: }
 32186                           ;AES.c: 307: _roundCounter--;
 32187                           
 32188                           ; BSR set to: 0
 32189  033E' 0101               	movlb	1	; () banked
 32190  0340' 0700'              	decf	__roundCounter& (0+255),f,b
 32191                           
 32192                           ; BSR set to: 1
 32193                           ;AES.c: 308: }
 32194                           ;AES.c: 309: while(_roundCounter !=0);
 32195  0342' 5100'              	movf	__roundCounter& (0+255),w,b
 32196  0344' B4D8               	btfsc	status,2,c
 32197  0346' 0012               	return	
 32198  0348' D67D               	goto	u14160
 32199  034A'                    __end_of_AESEncode:
 32200                           	opt stack 0
 32201                           tosu	equ	0xFFF
 32202                           tosh	equ	0xFFE
 32203                           tosl	equ	0xFFD
 32204                           pclath	equ	0xFFA
 32205                           tblptru	equ	0xFF8
 32206                           tblptrh	equ	0xFF7
 32207                           tblptrl	equ	0xFF6
 32208                           tablat	equ	0xFF5
 32209                           prodh	equ	0xFF4
 32210                           prodl	equ	0xFF3
 32211                           intcon	equ	0xFF2
 32212                           intcon2	equ	0xFF1
 32213                           intcon3	equ	0xFF0
 32214                           indf0	equ	0xFEF
 32215                           postinc0	equ	0xFEE
 32216                           plusw0	equ	0xFEB
 32217                           fsr0h	equ	0xFEA
 32218                           fsr0l	equ	0xFE9
 32219                           wreg	equ	0xFE8
 32220                           postinc1	equ	0xFE6
 32221                           postdec1	equ	0xFE5
 32222                           plusw1	equ	0xFE3
 32223                           fsr1h	equ	0xFE2
 32224                           fsr1l	equ	0xFE1
 32225                           indf2	equ	0xFDF
 32226                           postinc2	equ	0xFDE
 32227                           postdec2	equ	0xFDD
 32228                           plusw2	equ	0xFDB
 32229                           fsr2h	equ	0xFDA
 32230                           fsr2l	equ	0xFD9
 32231                           status	equ	0xFD8
 32232                           
 32233 ;; *************** function _EncodeShiftRow *****************
 32234 ;; Defined at:
 32235 ;;		line 385 in file "mcc_generated_files/LoRaWAN/AES.c"
 32236 ;; Parameters:    Size  Location     Type
 32237 ;;  stateTable      2    0[BANK0 ] PTR unsigned char 
 32238 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 32239 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 32240 ;; Auto vars:     Size  Location     Type
 32241 ;;  temp            1    2[BANK0 ] unsigned char 
 32242 ;; Return value:  Size  Location     Type
 32243 ;;                  1    wreg      void 
 32244 ;; Registers used:
 32245 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 32246 ;; Tracked objects:
 32247 ;;		On entry : 0/0
 32248 ;;		On exit  : 0/0
 32249 ;;		Unchanged: 0/0
 32250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32251 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32252 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32254 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32255 ;;Total ram usage:        3 bytes
 32256 ;; Hardware stack levels used:    1
 32257 ;; Hardware stack levels required when called:    7
 32258 ;; This function calls:
 32259 ;;		Nothing
 32260 ;; This function is called by:
 32261 ;;		_AESEncode
 32262 ;; This function uses a non-reentrant model
 32263 ;;
 32264                           
 32265                           	psect	text147
 32266  0000'                    __ptext147:
 32267                           	opt stack 0
 32268  0000'                    _EncodeShiftRow:
 32269                           	opt stack 18
 32270                           
 32271                           ;AES.c: 387: unsigned char temp;
 32272                           ;AES.c: 392: temp=stateTable[1];
 32273                           
 32274                           ; BSR set to: 1
 32275                           ;incstack = 0
 32276  0000' 0100               	movlb	0	; () banked
 32277  0002' EE20 F001          	lfsr	2,1
 32278  0006' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32279  0008' 26D9               	addwf	fsr2l,f,c
 32280  000A' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32281  000C' 22DA               	addwfc	fsr2h,f,c
 32282  000E' 50DF               	movf	indf2,w,c
 32283  0010' 6F00'              	movwf	EncodeShiftRow@temp& (0+255),b
 32284                           
 32285                           ; BSR set to: 0
 32286                           ;AES.c: 393: stateTable[1]=stateTable[5];
 32287  0012' EE20 F005          	lfsr	2,5
 32288  0016' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32289  0018' 26D9               	addwf	fsr2l,f,c
 32290  001A' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32291  001C' 22DA               	addwfc	fsr2h,f,c
 32292  001E' EE00 F001          	lfsr	0,1
 32293  0022' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32294  0024' 26E9               	addwf	fsr0l,f,c
 32295  0026' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32296  0028' 22EA               	addwfc	fsr0h,f,c
 32297  002A' CFDF FFEF          	movff	indf2,indf0
 32298                           
 32299                           ; BSR set to: 0
 32300                           ;AES.c: 394: stateTable[5]=stateTable[9];
 32301  002E' EE20 F009          	lfsr	2,9
 32302  0032' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32303  0034' 26D9               	addwf	fsr2l,f,c
 32304  0036' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32305  0038' 22DA               	addwfc	fsr2h,f,c
 32306  003A' EE00 F005          	lfsr	0,5
 32307  003E' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32308  0040' 26E9               	addwf	fsr0l,f,c
 32309  0042' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32310  0044' 22EA               	addwfc	fsr0h,f,c
 32311  0046' CFDF FFEF          	movff	indf2,indf0
 32312                           
 32313                           ; BSR set to: 0
 32314                           ;AES.c: 395: stateTable[9]=stateTable[13];
 32315  004A' EE20 F00D          	lfsr	2,13
 32316  004E' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32317  0050' 26D9               	addwf	fsr2l,f,c
 32318  0052' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32319  0054' 22DA               	addwfc	fsr2h,f,c
 32320  0056' EE00 F009          	lfsr	0,9
 32321  005A' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32322  005C' 26E9               	addwf	fsr0l,f,c
 32323  005E' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32324  0060' 22EA               	addwfc	fsr0h,f,c
 32325  0062' CFDF FFEF          	movff	indf2,indf0
 32326                           
 32327                           ; BSR set to: 0
 32328                           ;AES.c: 396: stateTable[13]=temp;
 32329  0066' EE20 F00D          	lfsr	2,13
 32330  006A' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32331  006C' 26D9               	addwf	fsr2l,f,c
 32332  006E' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32333  0070' 22DA               	addwfc	fsr2h,f,c
 32334  0072' C002' FFDF         	movff	EncodeShiftRow@temp,indf2
 32335                           
 32336                           ; BSR set to: 0
 32337                           ;AES.c: 399: temp=stateTable[2];
 32338  0076' EE20 F002          	lfsr	2,2
 32339  007A' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32340  007C' 26D9               	addwf	fsr2l,f,c
 32341  007E' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32342  0080' 22DA               	addwfc	fsr2h,f,c
 32343  0082' 50DF               	movf	indf2,w,c
 32344  0084' 6F00'              	movwf	EncodeShiftRow@temp& (0+255),b
 32345                           
 32346                           ; BSR set to: 0
 32347                           ;AES.c: 400: stateTable[2]=stateTable[10];
 32348  0086' EE20 F00A          	lfsr	2,10
 32349  008A' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32350  008C' 26D9               	addwf	fsr2l,f,c
 32351  008E' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32352  0090' 22DA               	addwfc	fsr2h,f,c
 32353  0092' EE00 F002          	lfsr	0,2
 32354  0096' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32355  0098' 26E9               	addwf	fsr0l,f,c
 32356  009A' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32357  009C' 22EA               	addwfc	fsr0h,f,c
 32358  009E' CFDF FFEF          	movff	indf2,indf0
 32359                           
 32360                           ;AES.c: 401: stateTable[10]=temp;
 32361  00A2' EE20 F00A          	lfsr	2,10
 32362  00A6' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32363  00A8' 26D9               	addwf	fsr2l,f,c
 32364  00AA' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32365  00AC' 22DA               	addwfc	fsr2h,f,c
 32366  00AE' C002' FFDF         	movff	EncodeShiftRow@temp,indf2
 32367                           
 32368                           ;AES.c: 402: temp=stateTable[14];
 32369  00B2' EE20 F00E          	lfsr	2,14
 32370  00B6' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32371  00B8' 26D9               	addwf	fsr2l,f,c
 32372  00BA' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32373  00BC' 22DA               	addwfc	fsr2h,f,c
 32374  00BE' 50DF               	movf	indf2,w,c
 32375  00C0' 6F00'              	movwf	EncodeShiftRow@temp& (0+255),b
 32376                           
 32377                           ; BSR set to: 0
 32378                           ;AES.c: 403: stateTable[14]=stateTable[6];
 32379  00C2' EE20 F006          	lfsr	2,6
 32380  00C6' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32381  00C8' 26D9               	addwf	fsr2l,f,c
 32382  00CA' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32383  00CC' 22DA               	addwfc	fsr2h,f,c
 32384  00CE' EE00 F00E          	lfsr	0,14
 32385  00D2' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32386  00D4' 26E9               	addwf	fsr0l,f,c
 32387  00D6' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32388  00D8' 22EA               	addwfc	fsr0h,f,c
 32389  00DA' CFDF FFEF          	movff	indf2,indf0
 32390                           
 32391                           ; BSR set to: 0
 32392                           ;AES.c: 404: stateTable[6]=temp;
 32393  00DE' EE20 F006          	lfsr	2,6
 32394  00E2' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32395  00E4' 26D9               	addwf	fsr2l,f,c
 32396  00E6' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32397  00E8' 22DA               	addwfc	fsr2h,f,c
 32398  00EA' C002' FFDF         	movff	EncodeShiftRow@temp,indf2
 32399                           
 32400                           ; BSR set to: 0
 32401                           ;AES.c: 407: temp=stateTable[3];
 32402  00EE' EE20 F003          	lfsr	2,3
 32403  00F2' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32404  00F4' 26D9               	addwf	fsr2l,f,c
 32405  00F6' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32406  00F8' 22DA               	addwfc	fsr2h,f,c
 32407  00FA' 50DF               	movf	indf2,w,c
 32408  00FC' 6F00'              	movwf	EncodeShiftRow@temp& (0+255),b
 32409                           
 32410                           ; BSR set to: 0
 32411                           ;AES.c: 408: stateTable[3]=stateTable[15];
 32412  00FE' EE20 F00F          	lfsr	2,15
 32413  0102' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32414  0104' 26D9               	addwf	fsr2l,f,c
 32415  0106' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32416  0108' 22DA               	addwfc	fsr2h,f,c
 32417  010A' EE00 F003          	lfsr	0,3
 32418  010E' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32419  0110' 26E9               	addwf	fsr0l,f,c
 32420  0112' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32421  0114' 22EA               	addwfc	fsr0h,f,c
 32422  0116' CFDF FFEF          	movff	indf2,indf0
 32423                           
 32424                           ; BSR set to: 0
 32425                           ;AES.c: 409: stateTable[15]=stateTable[11];
 32426  011A' EE20 F00B          	lfsr	2,11
 32427  011E' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32428  0120' 26D9               	addwf	fsr2l,f,c
 32429  0122' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32430  0124' 22DA               	addwfc	fsr2h,f,c
 32431  0126' EE00 F00F          	lfsr	0,15
 32432  012A' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32433  012C' 26E9               	addwf	fsr0l,f,c
 32434  012E' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32435  0130' 22EA               	addwfc	fsr0h,f,c
 32436  0132' CFDF FFEF          	movff	indf2,indf0
 32437                           
 32438                           ; BSR set to: 0
 32439                           ;AES.c: 410: stateTable[11]=stateTable[7];
 32440  0136' EE20 F007          	lfsr	2,7
 32441  013A' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32442  013C' 26D9               	addwf	fsr2l,f,c
 32443  013E' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32444  0140' 22DA               	addwfc	fsr2h,f,c
 32445  0142' EE00 F00B          	lfsr	0,11
 32446  0146' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32447  0148' 26E9               	addwf	fsr0l,f,c
 32448  014A' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32449  014C' 22EA               	addwfc	fsr0h,f,c
 32450  014E' CFDF FFEF          	movff	indf2,indf0
 32451                           
 32452                           ;AES.c: 411: stateTable[7]=temp;
 32453  0152' EE20 F007          	lfsr	2,7
 32454  0156' 5100'              	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32455  0158' 26D9               	addwf	fsr2l,f,c
 32456  015A' 5100'              	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32457  015C' 22DA               	addwfc	fsr2h,f,c
 32458  015E' C002' FFDF         	movff	EncodeShiftRow@temp,indf2
 32459                           
 32460                           ; BSR set to: 0
 32461  0162' 0012               	return		;funcret
 32462  0164'                    __end_of_EncodeShiftRow:
 32463                           	opt stack 0
 32464                           tosu	equ	0xFFF
 32465                           tosh	equ	0xFFE
 32466                           tosl	equ	0xFFD
 32467                           pclath	equ	0xFFA
 32468                           tblptru	equ	0xFF8
 32469                           tblptrh	equ	0xFF7
 32470                           tblptrl	equ	0xFF6
 32471                           tablat	equ	0xFF5
 32472                           prodh	equ	0xFF4
 32473                           prodl	equ	0xFF3
 32474                           intcon	equ	0xFF2
 32475                           intcon2	equ	0xFF1
 32476                           intcon3	equ	0xFF0
 32477                           indf0	equ	0xFEF
 32478                           postinc0	equ	0xFEE
 32479                           plusw0	equ	0xFEB
 32480                           fsr0h	equ	0xFEA
 32481                           fsr0l	equ	0xFE9
 32482                           wreg	equ	0xFE8
 32483                           postinc1	equ	0xFE6
 32484                           postdec1	equ	0xFE5
 32485                           plusw1	equ	0xFE3
 32486                           fsr1h	equ	0xFE2
 32487                           fsr1l	equ	0xFE1
 32488                           indf2	equ	0xFDF
 32489                           postinc2	equ	0xFDE
 32490                           postdec2	equ	0xFDD
 32491                           plusw2	equ	0xFDB
 32492                           fsr2h	equ	0xFDA
 32493                           fsr2l	equ	0xFD9
 32494                           status	equ	0xFD8
 32495                           
 32496 ;; *************** function _EncKeySchedule *****************
 32497 ;; Defined at:
 32498 ;;		line 337 in file "mcc_generated_files/LoRaWAN/AES.c"
 32499 ;; Parameters:    Size  Location     Type
 32500 ;;  key             2    0[BANK0 ] PTR unsigned char 
 32501 ;;		 -> AESEncodeLoRa@useKey(16), 
 32502 ;; Auto vars:     Size  Location     Type
 32503 ;;		None
 32504 ;; Return value:  Size  Location     Type
 32505 ;;                  1    wreg      void 
 32506 ;; Registers used:
 32507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 32508 ;; Tracked objects:
 32509 ;;		On entry : 0/0
 32510 ;;		On exit  : 0/0
 32511 ;;		Unchanged: 0/0
 32512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32513 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32514 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32515 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32516 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32517 ;;Total ram usage:        6 bytes
 32518 ;; Hardware stack levels used:    1
 32519 ;; Hardware stack levels required when called:    7
 32520 ;; This function calls:
 32521 ;;		Nothing
 32522 ;; This function is called by:
 32523 ;;		_AESEncode
 32524 ;; This function uses a non-reentrant model
 32525 ;;
 32526                           
 32527                           	psect	text148
 32528  0000'                    __ptext148:
 32529                           	opt stack 0
 32530  0000'                    _EncKeySchedule:
 32531                           	opt stack 18
 32532                           
 32533                           ;AES.c: 340: key[0]^=STable[key[13]];
 32534                           
 32535                           ; BSR set to: 0
 32536                           ;incstack = 0
 32537  0000' 0100               	movlb	0	; () banked
 32538  0002' EE20 F00D          	lfsr	2,13
 32539  0006' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32540  0008' 26D9               	addwf	fsr2l,f,c
 32541  000A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32542  000C' 22DA               	addwfc	fsr2h,f,c
 32543  000E' 50DF               	movf	indf2,w,c
 32544  0010' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32545  0012' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32546  0014' 0D01               	mullw	1
 32547  0016' 0E00'              	movlw	low _STable
 32548  0018' 24F3               	addwf	prodl,w,c
 32549  001A' 6EF6               	movwf	tblptrl,c
 32550  001C' 0E00'              	movlw	high _STable
 32551  001E' 20F4               	addwfc	prodh,w,c
 32552  0020' 6EF7               	movwf	tblptrh,c
 32553  0022'                    	if	1	;There are 3 active tblptr bytes
 32554  0022' 6AF8               	clrf	tblptru,c
 32555  0024' 0E00'              	movlw	low (__mediumconst shr (0+16))
 32556  0026' 22F8               	addwfc	tblptru,f,c
 32557  0028'                    	endif
 32558  0028' 0008               	tblrd		*
 32559  002A' CFF5 F003'         	movff	tablat,??_EncKeySchedule+1
 32560  002E' C000' FFD9         	movff	EncKeySchedule@key,fsr2l
 32561  0032' C001' FFDA         	movff	EncKeySchedule@key+1,fsr2h
 32562  0036' 5100'              	movf	(??_EncKeySchedule+1)& (0+255),w,b
 32563  0038' 1ADF               	xorwf	indf2,f,c
 32564                           
 32565                           ;AES.c: 341: key[1]^=STable[key[14]];
 32566  003A' EE20 F00E          	lfsr	2,14
 32567  003E' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32568  0040' 26D9               	addwf	fsr2l,f,c
 32569  0042' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32570  0044' 22DA               	addwfc	fsr2h,f,c
 32571  0046' 50DF               	movf	indf2,w,c
 32572  0048' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32573  004A' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32574  004C' 0D01               	mullw	1
 32575  004E' 0E00'              	movlw	low _STable
 32576  0050' 24F3               	addwf	prodl,w,c
 32577  0052' 6EF6               	movwf	tblptrl,c
 32578  0054' 0E00'              	movlw	high _STable
 32579  0056' 20F4               	addwfc	prodh,w,c
 32580  0058' 6EF7               	movwf	tblptrh,c
 32581  005A'                    	if	1	;There are 3 active tblptr bytes
 32582  005A' 6AF8               	clrf	tblptru,c
 32583  005C' 0E00'              	movlw	low (__mediumconst shr (0+16))
 32584  005E' 22F8               	addwfc	tblptru,f,c
 32585  0060'                    	endif
 32586  0060' 0008               	tblrd		*
 32587  0062' CFF5 F003'         	movff	tablat,??_EncKeySchedule+1
 32588  0066' EE20 F001          	lfsr	2,1
 32589  006A' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32590  006C' 26D9               	addwf	fsr2l,f,c
 32591  006E' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32592  0070' 22DA               	addwfc	fsr2h,f,c
 32593  0072' 5100'              	movf	(??_EncKeySchedule+1)& (0+255),w,b
 32594  0074' 1ADF               	xorwf	indf2,f,c
 32595                           
 32596                           ;AES.c: 342: key[2]^=STable[key[15]];
 32597  0076' EE20 F00F          	lfsr	2,15
 32598  007A' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32599  007C' 26D9               	addwf	fsr2l,f,c
 32600  007E' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32601  0080' 22DA               	addwfc	fsr2h,f,c
 32602  0082' 50DF               	movf	indf2,w,c
 32603  0084' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32604  0086' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32605  0088' 0D01               	mullw	1
 32606  008A' 0E00'              	movlw	low _STable
 32607  008C' 24F3               	addwf	prodl,w,c
 32608  008E' 6EF6               	movwf	tblptrl,c
 32609  0090' 0E00'              	movlw	high _STable
 32610  0092' 20F4               	addwfc	prodh,w,c
 32611  0094' 6EF7               	movwf	tblptrh,c
 32612  0096'                    	if	1	;There are 3 active tblptr bytes
 32613  0096' 6AF8               	clrf	tblptru,c
 32614  0098' 0E00'              	movlw	low (__mediumconst shr (0+16))
 32615  009A' 22F8               	addwfc	tblptru,f,c
 32616  009C'                    	endif
 32617  009C' 0008               	tblrd		*
 32618  009E' CFF5 F003'         	movff	tablat,??_EncKeySchedule+1
 32619  00A2' EE20 F002          	lfsr	2,2
 32620  00A6' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32621  00A8' 26D9               	addwf	fsr2l,f,c
 32622  00AA' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32623  00AC' 22DA               	addwfc	fsr2h,f,c
 32624  00AE' 5100'              	movf	(??_EncKeySchedule+1)& (0+255),w,b
 32625  00B0' 1ADF               	xorwf	indf2,f,c
 32626                           
 32627                           ;AES.c: 343: key[3]^=STable[key[12]];
 32628  00B2' EE20 F00C          	lfsr	2,12
 32629  00B6' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32630  00B8' 26D9               	addwf	fsr2l,f,c
 32631  00BA' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32632  00BC' 22DA               	addwfc	fsr2h,f,c
 32633  00BE' 50DF               	movf	indf2,w,c
 32634  00C0' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32635  00C2' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32636  00C4' 0D01               	mullw	1
 32637  00C6' 0E00'              	movlw	low _STable
 32638  00C8' 24F3               	addwf	prodl,w,c
 32639  00CA' 6EF6               	movwf	tblptrl,c
 32640  00CC' 0E00'              	movlw	high _STable
 32641  00CE' 20F4               	addwfc	prodh,w,c
 32642  00D0' 6EF7               	movwf	tblptrh,c
 32643  00D2'                    	if	1	;There are 3 active tblptr bytes
 32644  00D2' 6AF8               	clrf	tblptru,c
 32645  00D4' 0E00'              	movlw	low (__mediumconst shr (0+16))
 32646  00D6' 22F8               	addwfc	tblptru,f,c
 32647  00D8'                    	endif
 32648  00D8' 0008               	tblrd		*
 32649  00DA' CFF5 F003'         	movff	tablat,??_EncKeySchedule+1
 32650  00DE' EE20 F003          	lfsr	2,3
 32651  00E2' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32652  00E4' 26D9               	addwf	fsr2l,f,c
 32653  00E6' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32654  00E8' 22DA               	addwfc	fsr2h,f,c
 32655  00EA' 5100'              	movf	(??_EncKeySchedule+1)& (0+255),w,b
 32656  00EC' 1ADF               	xorwf	indf2,f,c
 32657                           
 32658                           ; BSR set to: 0
 32659                           ;AES.c: 345: key[0]^=_rcon;
 32660  00EE' C000' FFD9         	movff	EncKeySchedule@key,fsr2l
 32661  00F2' C001' FFDA         	movff	EncKeySchedule@key+1,fsr2h
 32662  00F6' 500A'              	movf	__rcon,w,c
 32663  00F8' 1ADF               	xorwf	indf2,f,c
 32664                           
 32665                           ; BSR set to: 0
 32666                           ;AES.c: 346: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 32667  00FA' 0E7F               	movlw	127
 32668  00FC' 640A'              	cpfsgt	__rcon,c
 32669  00FE' D00C               	goto	l334
 32670                           
 32671                           ; BSR set to: 0
 32672  0100' 0E1B               	movlw	27
 32673  0102' C00A' F002'        	movff	__rcon,??_EncKeySchedule
 32674  0106' 6B00'              	clrf	(??_EncKeySchedule+1)& (0+255),b
 32675  0108' 90D8               	bcf	status,0,c
 32676  010A' 3700'              	rlcf	??_EncKeySchedule& (0+255),f,b
 32677  010C' 3700'              	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 32678  010E' 1900'              	xorwf	??_EncKeySchedule& (0+255),w,b
 32679  0110' 6F00'              	movwf	_EncKeySchedule$518& (0+255),b
 32680  0112' 5100'              	movf	(??_EncKeySchedule+1)& (0+255),w,b
 32681  0114' 6F00'              	movwf	(_EncKeySchedule$518+1)& (0+255),b
 32682  0116' D005               	goto	l336
 32683  0118'                    l334:
 32684                           
 32685                           ; BSR set to: 0
 32686                           
 32687                           ; BSR set to: 0
 32688  0118' 90D8               	bcf	status,0,c
 32689  011A' 340A'              	rlcf	__rcon,w,c
 32690  011C' 6F00'              	movwf	_EncKeySchedule$518& (0+255),b
 32691  011E' 6B00'              	clrf	(_EncKeySchedule$518+1)& (0+255),b
 32692  0120' 3700'              	rlcf	(_EncKeySchedule$518+1)& (0+255),f,b
 32693  0122'                    l336:
 32694                           
 32695                           ; BSR set to: 0
 32696                           
 32697                           ; BSR set to: 0
 32698  0122' C004' F00A'        	movff	_EncKeySchedule$518,__rcon
 32699                           
 32700                           ; BSR set to: 0
 32701                           ;AES.c: 349: key[4]^=key[0];
 32702  0126' C000' FFD9         	movff	EncKeySchedule@key,fsr2l
 32703  012A' C001' FFDA         	movff	EncKeySchedule@key+1,fsr2h
 32704  012E' 50DF               	movf	indf2,w,c
 32705  0130' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32706  0132' EE20 F004          	lfsr	2,4
 32707  0136' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32708  0138' 26D9               	addwf	fsr2l,f,c
 32709  013A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32710  013C' 22DA               	addwfc	fsr2h,f,c
 32711  013E' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32712  0140' 1ADF               	xorwf	indf2,f,c
 32713                           
 32714                           ; BSR set to: 0
 32715                           ;AES.c: 350: key[5]^=key[1];
 32716  0142' EE20 F001          	lfsr	2,1
 32717  0146' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32718  0148' 26D9               	addwf	fsr2l,f,c
 32719  014A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32720  014C' 22DA               	addwfc	fsr2h,f,c
 32721  014E' 50DF               	movf	indf2,w,c
 32722  0150' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32723  0152' EE20 F005          	lfsr	2,5
 32724  0156' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32725  0158' 26D9               	addwf	fsr2l,f,c
 32726  015A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32727  015C' 22DA               	addwfc	fsr2h,f,c
 32728  015E' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32729  0160' 1ADF               	xorwf	indf2,f,c
 32730                           
 32731                           ; BSR set to: 0
 32732                           ;AES.c: 351: key[6]^=key[2];
 32733  0162' EE20 F002          	lfsr	2,2
 32734  0166' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32735  0168' 26D9               	addwf	fsr2l,f,c
 32736  016A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32737  016C' 22DA               	addwfc	fsr2h,f,c
 32738  016E' 50DF               	movf	indf2,w,c
 32739  0170' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32740  0172' EE20 F006          	lfsr	2,6
 32741  0176' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32742  0178' 26D9               	addwf	fsr2l,f,c
 32743  017A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32744  017C' 22DA               	addwfc	fsr2h,f,c
 32745  017E' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32746  0180' 1ADF               	xorwf	indf2,f,c
 32747                           
 32748                           ; BSR set to: 0
 32749                           ;AES.c: 352: key[7]^=key[3];
 32750  0182' EE20 F003          	lfsr	2,3
 32751  0186' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32752  0188' 26D9               	addwf	fsr2l,f,c
 32753  018A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32754  018C' 22DA               	addwfc	fsr2h,f,c
 32755  018E' 50DF               	movf	indf2,w,c
 32756  0190' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32757  0192' EE20 F007          	lfsr	2,7
 32758  0196' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32759  0198' 26D9               	addwf	fsr2l,f,c
 32760  019A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32761  019C' 22DA               	addwfc	fsr2h,f,c
 32762  019E' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32763  01A0' 1ADF               	xorwf	indf2,f,c
 32764                           
 32765                           ; BSR set to: 0
 32766                           ;AES.c: 355: key[8]^=key[4];
 32767  01A2' EE20 F004          	lfsr	2,4
 32768  01A6' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32769  01A8' 26D9               	addwf	fsr2l,f,c
 32770  01AA' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32771  01AC' 22DA               	addwfc	fsr2h,f,c
 32772  01AE' 50DF               	movf	indf2,w,c
 32773  01B0' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32774  01B2' EE20 F008          	lfsr	2,8
 32775  01B6' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32776  01B8' 26D9               	addwf	fsr2l,f,c
 32777  01BA' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32778  01BC' 22DA               	addwfc	fsr2h,f,c
 32779  01BE' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32780  01C0' 1ADF               	xorwf	indf2,f,c
 32781                           
 32782                           ; BSR set to: 0
 32783                           ;AES.c: 356: key[9]^=key[5];
 32784  01C2' EE20 F005          	lfsr	2,5
 32785  01C6' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32786  01C8' 26D9               	addwf	fsr2l,f,c
 32787  01CA' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32788  01CC' 22DA               	addwfc	fsr2h,f,c
 32789  01CE' 50DF               	movf	indf2,w,c
 32790  01D0' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32791  01D2' EE20 F009          	lfsr	2,9
 32792  01D6' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32793  01D8' 26D9               	addwf	fsr2l,f,c
 32794  01DA' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32795  01DC' 22DA               	addwfc	fsr2h,f,c
 32796  01DE' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32797  01E0' 1ADF               	xorwf	indf2,f,c
 32798                           
 32799                           ; BSR set to: 0
 32800                           ;AES.c: 357: key[10]^=key[6];
 32801  01E2' EE20 F006          	lfsr	2,6
 32802  01E6' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32803  01E8' 26D9               	addwf	fsr2l,f,c
 32804  01EA' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32805  01EC' 22DA               	addwfc	fsr2h,f,c
 32806  01EE' 50DF               	movf	indf2,w,c
 32807  01F0' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32808  01F2' EE20 F00A          	lfsr	2,10
 32809  01F6' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32810  01F8' 26D9               	addwf	fsr2l,f,c
 32811  01FA' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32812  01FC' 22DA               	addwfc	fsr2h,f,c
 32813  01FE' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32814  0200' 1ADF               	xorwf	indf2,f,c
 32815                           
 32816                           ; BSR set to: 0
 32817                           ;AES.c: 358: key[11]^=key[7];
 32818  0202' EE20 F007          	lfsr	2,7
 32819  0206' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32820  0208' 26D9               	addwf	fsr2l,f,c
 32821  020A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32822  020C' 22DA               	addwfc	fsr2h,f,c
 32823  020E' 50DF               	movf	indf2,w,c
 32824  0210' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32825  0212' EE20 F00B          	lfsr	2,11
 32826  0216' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32827  0218' 26D9               	addwf	fsr2l,f,c
 32828  021A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32829  021C' 22DA               	addwfc	fsr2h,f,c
 32830  021E' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32831  0220' 1ADF               	xorwf	indf2,f,c
 32832                           
 32833                           ; BSR set to: 0
 32834                           ;AES.c: 361: key[12]^=key[8];
 32835  0222' EE20 F008          	lfsr	2,8
 32836  0226' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32837  0228' 26D9               	addwf	fsr2l,f,c
 32838  022A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32839  022C' 22DA               	addwfc	fsr2h,f,c
 32840  022E' 50DF               	movf	indf2,w,c
 32841  0230' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32842  0232' EE20 F00C          	lfsr	2,12
 32843  0236' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32844  0238' 26D9               	addwf	fsr2l,f,c
 32845  023A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32846  023C' 22DA               	addwfc	fsr2h,f,c
 32847  023E' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32848  0240' 1ADF               	xorwf	indf2,f,c
 32849                           
 32850                           ; BSR set to: 0
 32851                           ;AES.c: 362: key[13]^=key[9];
 32852  0242' EE20 F009          	lfsr	2,9
 32853  0246' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32854  0248' 26D9               	addwf	fsr2l,f,c
 32855  024A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32856  024C' 22DA               	addwfc	fsr2h,f,c
 32857  024E' 50DF               	movf	indf2,w,c
 32858  0250' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32859  0252' EE20 F00D          	lfsr	2,13
 32860  0256' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32861  0258' 26D9               	addwf	fsr2l,f,c
 32862  025A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32863  025C' 22DA               	addwfc	fsr2h,f,c
 32864  025E' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32865  0260' 1ADF               	xorwf	indf2,f,c
 32866                           
 32867                           ; BSR set to: 0
 32868                           ;AES.c: 363: key[14]^=key[10];
 32869  0262' EE20 F00A          	lfsr	2,10
 32870  0266' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32871  0268' 26D9               	addwf	fsr2l,f,c
 32872  026A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32873  026C' 22DA               	addwfc	fsr2h,f,c
 32874  026E' 50DF               	movf	indf2,w,c
 32875  0270' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32876  0272' EE20 F00E          	lfsr	2,14
 32877  0276' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32878  0278' 26D9               	addwf	fsr2l,f,c
 32879  027A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32880  027C' 22DA               	addwfc	fsr2h,f,c
 32881  027E' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32882  0280' 1ADF               	xorwf	indf2,f,c
 32883                           
 32884                           ; BSR set to: 0
 32885                           ;AES.c: 364: key[15]^=key[11];
 32886  0282' EE20 F00B          	lfsr	2,11
 32887  0286' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32888  0288' 26D9               	addwf	fsr2l,f,c
 32889  028A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32890  028C' 22DA               	addwfc	fsr2h,f,c
 32891  028E' 50DF               	movf	indf2,w,c
 32892  0290' 6F00'              	movwf	??_EncKeySchedule& (0+255),b
 32893  0292' EE20 F00F          	lfsr	2,15
 32894  0296' 5100'              	movf	EncKeySchedule@key& (0+255),w,b
 32895  0298' 26D9               	addwf	fsr2l,f,c
 32896  029A' 5100'              	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32897  029C' 22DA               	addwfc	fsr2h,f,c
 32898  029E' 5100'              	movf	??_EncKeySchedule& (0+255),w,b
 32899  02A0' 1ADF               	xorwf	indf2,f,c
 32900                           
 32901                           ; BSR set to: 0
 32902  02A2' 0012               	return		;funcret
 32903  02A4'                    __end_of_EncKeySchedule:
 32904                           	opt stack 0
 32905                           tosu	equ	0xFFF
 32906                           tosh	equ	0xFFE
 32907                           tosl	equ	0xFFD
 32908                           pclath	equ	0xFFA
 32909                           tblptru	equ	0xFF8
 32910                           tblptrh	equ	0xFF7
 32911                           tblptrl	equ	0xFF6
 32912                           tablat	equ	0xFF5
 32913                           prodh	equ	0xFF4
 32914                           prodl	equ	0xFF3
 32915                           intcon	equ	0xFF2
 32916                           intcon2	equ	0xFF1
 32917                           intcon3	equ	0xFF0
 32918                           indf0	equ	0xFEF
 32919                           postinc0	equ	0xFEE
 32920                           plusw0	equ	0xFEB
 32921                           fsr0h	equ	0xFEA
 32922                           fsr0l	equ	0xFE9
 32923                           wreg	equ	0xFE8
 32924                           postinc1	equ	0xFE6
 32925                           postdec1	equ	0xFE5
 32926                           plusw1	equ	0xFE3
 32927                           fsr1h	equ	0xFE2
 32928                           fsr1l	equ	0xFE1
 32929                           indf2	equ	0xFDF
 32930                           postinc2	equ	0xFDE
 32931                           postdec2	equ	0xFDD
 32932                           plusw2	equ	0xFDB
 32933                           fsr2h	equ	0xFDA
 32934                           fsr2l	equ	0xFD9
 32935                           status	equ	0xFD8
 32936                           
 32937 ;; *************** function _LORAWAN_Init *****************
 32938 ;; Defined at:
 32939 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32940 ;; Parameters:    Size  Location     Type
 32941 ;;  RxPayload       2   82[BANK0 ] PTR FTN(PTR unsigned cha
 32942 ;;		 -> RxData(1), 
 32943 ;;  RxJoinRespon    2   84[BANK0 ] PTR FTN(unsigned char ,)
 32944 ;;		 -> RxJoinResponse(1), 
 32945 ;; Auto vars:     Size  Location     Type
 32946 ;;		None
 32947 ;; Return value:  Size  Location     Type
 32948 ;;                  1    wreg      void 
 32949 ;; Registers used:
 32950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 32951 ;; Tracked objects:
 32952 ;;		On entry : 0/0
 32953 ;;		On exit  : 0/0
 32954 ;;		Unchanged: 0/0
 32955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32956 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32959 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32960 ;;Total ram usage:        4 bytes
 32961 ;; Hardware stack levels used:    1
 32962 ;; Hardware stack levels required when called:   13
 32963 ;; This function calls:
 32964 ;;		_CreateAllSoftwareTimers
 32965 ;;		_LORAWAN_Reset
 32966 ;;		_RADIO_Init
 32967 ;;		_RADIO_ReadRandom
 32968 ;;		_SetCallbackSoftwareTimers
 32969 ;;		_StopAllSoftwareTimers
 32970 ;;		_srand
 32971 ;; This function is called by:
 32972 ;;		_main
 32973 ;; This function uses a non-reentrant model
 32974 ;;
 32975                           
 32976                           	psect	text149
 32977  0000'                    __ptext149:
 32978                           	opt stack 0
 32979  0000'                    _LORAWAN_Init:
 32980                           	opt stack 17
 32981                           
 32982                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 32983                           
 32984                           ; BSR set to: 0
 32985                           ;incstack = 0
 32986  0000' 0102               	movlb	2	; () banked
 32987  0002' 5100'              	movf	(_loRa+240)& (0+255),w,b
 32988  0004' A4D8               	btfss	status,2,c
 32989  0006' D008               	goto	l973
 32990                           
 32991                           ; BSR set to: 2
 32992                           ;lorawan_eu.c: 127: {
 32993                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 32994  0008' EC00' F000'        	call	_CreateAllSoftwareTimers	;wreg free
 32995                           
 32996                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 32997  000C' EC00' F000'        	call	_SetCallbackSoftwareTimers	;wreg free
 32998                           
 32999                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 33000  0010' 0E01               	movlw	1
 33001  0012' 0102               	movlb	2	; () banked
 33002  0014' 6F00'              	movwf	(_loRa+240)& (0+255),b
 33003                           
 33004                           ;lorawan_eu.c: 131: }
 33005  0016' D002               	goto	l974
 33006  0018'                    l973:
 33007                           
 33008                           ; BSR set to: 2
 33009                           ;lorawan_eu.c: 132: else
 33010                           ;lorawan_eu.c: 133: {
 33011                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 33012                           
 33013                           ; BSR set to: 2
 33014  0018' EC00' F000'        	call	_StopAllSoftwareTimers	;wreg free
 33015  001C'                    l974:
 33016                           
 33017                           ;lorawan_eu.c: 135: }
 33018                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 33019  001C' C052' F000'        	movff	LORAWAN_Init@RxPayload,_rxPayload
 33020  0020' C053' F001'        	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 33021                           
 33022                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 33023  0024' C054' F002'        	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 33024  0028' C055' F003'        	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 33025                           
 33026                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 33027  002C' 0E00'              	movlw	low (_radioBuffer+16)
 33028  002E' 0100               	movlb	0	; () banked
 33029  0030' 6F00'              	movwf	RADIO_Init@radioBuffer& (0+255),b
 33030  0032' 0E00'              	movlw	high (_radioBuffer+16)
 33031  0034' 6F00'              	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 33032  0036' 0EA0               	movlw	160
 33033  0038' 6F00'              	movwf	RADIO_Init@frequency& (0+255),b
 33034  003A' 0E27               	movlw	39
 33035  003C' 6F00'              	movwf	(RADIO_Init@frequency+1)& (0+255),b
 33036  003E' 0EBE               	movlw	190
 33037  0040' 6F00'              	movwf	(RADIO_Init@frequency+2)& (0+255),b
 33038  0042' 0E33               	movlw	51
 33039  0044' 6F00'              	movwf	(RADIO_Init@frequency+3)& (0+255),b
 33040  0046' EC00' F000'        	call	_RADIO_Init	;wreg free
 33041                           
 33042                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 33043  004A' EC00' F000'        	call	_RADIO_ReadRandom	;wreg free
 33044  004E' C00C' F012'        	movff	?_RADIO_ReadRandom,srand@x
 33045  0052' C00D' F013'        	movff	?_RADIO_ReadRandom+1,srand@x+1
 33046  0056' EC00' F000'        	call	_srand	;wreg free
 33047                           
 33048                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 33049  005A' 0E00               	movlw	0
 33050  005C' EC00' F000'        	call	_LORAWAN_Reset
 33051  0060' 0012               	return		;funcret
 33052  0062'                    __end_of_LORAWAN_Init:
 33053                           	opt stack 0
 33054                           tosu	equ	0xFFF
 33055                           tosh	equ	0xFFE
 33056                           tosl	equ	0xFFD
 33057                           pclath	equ	0xFFA
 33058                           tblptru	equ	0xFF8
 33059                           tblptrh	equ	0xFF7
 33060                           tblptrl	equ	0xFF6
 33061                           tablat	equ	0xFF5
 33062                           prodh	equ	0xFF4
 33063                           prodl	equ	0xFF3
 33064                           intcon	equ	0xFF2
 33065                           intcon2	equ	0xFF1
 33066                           intcon3	equ	0xFF0
 33067                           indf0	equ	0xFEF
 33068                           postinc0	equ	0xFEE
 33069                           plusw0	equ	0xFEB
 33070                           fsr0h	equ	0xFEA
 33071                           fsr0l	equ	0xFE9
 33072                           wreg	equ	0xFE8
 33073                           postinc1	equ	0xFE6
 33074                           postdec1	equ	0xFE5
 33075                           plusw1	equ	0xFE3
 33076                           fsr1h	equ	0xFE2
 33077                           fsr1l	equ	0xFE1
 33078                           indf2	equ	0xFDF
 33079                           postinc2	equ	0xFDE
 33080                           postdec2	equ	0xFDD
 33081                           plusw2	equ	0xFDB
 33082                           fsr2h	equ	0xFDA
 33083                           fsr2l	equ	0xFD9
 33084                           status	equ	0xFD8
 33085                           
 33086 ;; *************** function _srand *****************
 33087 ;; Defined at:
 33088 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 33089 ;; Parameters:    Size  Location     Type
 33090 ;;  x               2   18[BANK0 ] unsigned int 
 33091 ;; Auto vars:     Size  Location     Type
 33092 ;;		None
 33093 ;; Return value:  Size  Location     Type
 33094 ;;                  1    wreg      void 
 33095 ;; Registers used:
 33096 ;;		status,2
 33097 ;; Tracked objects:
 33098 ;;		On entry : 0/0
 33099 ;;		On exit  : 0/0
 33100 ;;		Unchanged: 0/0
 33101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33102 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33105 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33106 ;;Total ram usage:        2 bytes
 33107 ;; Hardware stack levels used:    1
 33108 ;; Hardware stack levels required when called:    7
 33109 ;; This function calls:
 33110 ;;		Nothing
 33111 ;; This function is called by:
 33112 ;;		_LORAWAN_Init
 33113 ;; This function uses a non-reentrant model
 33114 ;;
 33115                           
 33116                           	psect	text150
 33117  0000'                    __ptext150:
 33118                           	opt stack 0
 33119  0000'                    _srand:
 33120                           	opt stack 22
 33121                           
 33122                           ;incstack = 0
 33123  0000' C012' F010'        	movff	srand@x,_randx
 33124  0004' C013' F011'        	movff	srand@x+1,_randx+1
 33125  0008' 0101               	movlb	1	; () banked
 33126  000A' 6B00'              	clrf	(_randx+2)& (0+255),b
 33127  000C' 6B00'              	clrf	(_randx+3)& (0+255),b
 33128                           
 33129                           ; BSR set to: 1
 33130  000E' 0012               	return		;funcret
 33131  0010'                    __end_of_srand:
 33132                           	opt stack 0
 33133                           tosu	equ	0xFFF
 33134                           tosh	equ	0xFFE
 33135                           tosl	equ	0xFFD
 33136                           pclath	equ	0xFFA
 33137                           tblptru	equ	0xFF8
 33138                           tblptrh	equ	0xFF7
 33139                           tblptrl	equ	0xFF6
 33140                           tablat	equ	0xFF5
 33141                           prodh	equ	0xFF4
 33142                           prodl	equ	0xFF3
 33143                           intcon	equ	0xFF2
 33144                           intcon2	equ	0xFF1
 33145                           intcon3	equ	0xFF0
 33146                           indf0	equ	0xFEF
 33147                           postinc0	equ	0xFEE
 33148                           plusw0	equ	0xFEB
 33149                           fsr0h	equ	0xFEA
 33150                           fsr0l	equ	0xFE9
 33151                           wreg	equ	0xFE8
 33152                           postinc1	equ	0xFE6
 33153                           postdec1	equ	0xFE5
 33154                           plusw1	equ	0xFE3
 33155                           fsr1h	equ	0xFE2
 33156                           fsr1l	equ	0xFE1
 33157                           indf2	equ	0xFDF
 33158                           postinc2	equ	0xFDE
 33159                           postdec2	equ	0xFDD
 33160                           plusw2	equ	0xFDB
 33161                           fsr2h	equ	0xFDA
 33162                           fsr2l	equ	0xFD9
 33163                           status	equ	0xFD8
 33164                           
 33165 ;; *************** function _SetCallbackSoftwareTimers *****************
 33166 ;; Defined at:
 33167 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 33168 ;; Parameters:    Size  Location     Type
 33169 ;;		None
 33170 ;; Auto vars:     Size  Location     Type
 33171 ;;		None
 33172 ;; Return value:  Size  Location     Type
 33173 ;;                  1    wreg      void 
 33174 ;; Registers used:
 33175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33176 ;; Tracked objects:
 33177 ;;		On entry : 0/0
 33178 ;;		On exit  : 0/0
 33179 ;;		Unchanged: 0/0
 33180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33185 ;;Total ram usage:        0 bytes
 33186 ;; Hardware stack levels used:    1
 33187 ;; Hardware stack levels required when called:    8
 33188 ;; This function calls:
 33189 ;;		_SwTimerSetCallback
 33190 ;; This function is called by:
 33191 ;;		_LORAWAN_Init
 33192 ;; This function uses a non-reentrant model
 33193 ;;
 33194                           
 33195                           	psect	text151
 33196  0000'                    __ptext151:
 33197                           	opt stack 0
 33198  0000'                    _SetCallbackSoftwareTimers:
 33199                           	opt stack 21
 33200                           
 33201                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 33202                           
 33203                           ; BSR set to: 1
 33204                           ;incstack = 0
 33205  0000' 0E00'              	movlw	low _LORAWAN_ReceiveWindow1Callback
 33206  0002' 0100               	movlb	0	; () banked
 33207  0004' 6F00'              	movwf	SwTimerSetCallback@callback& (0+255),b
 33208  0006' 0E00'              	movlw	high _LORAWAN_ReceiveWindow1Callback
 33209  0008' 6F00'              	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33210  000A' 0E00               	movlw	0
 33211  000C' 6F00'              	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33212  000E' 0102               	movlb	2	; () banked
 33213  0010' 5100'              	movf	(_loRa+226)& (0+255),w,b
 33214  0012' EC00' F000'        	call	_SwTimerSetCallback
 33215                           
 33216                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 33217  0016' 0E00'              	movlw	low _LORAWAN_ReceiveWindow2Callback
 33218  0018' 0100               	movlb	0	; () banked
 33219  001A' 6F00'              	movwf	SwTimerSetCallback@callback& (0+255),b
 33220  001C' 0E00'              	movlw	high _LORAWAN_ReceiveWindow2Callback
 33221  001E' 6F00'              	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33222  0020' 0E00               	movlw	0
 33223  0022' 6F00'              	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33224  0024' 0102               	movlb	2	; () banked
 33225  0026' 5100'              	movf	(_loRa+227)& (0+255),w,b
 33226  0028' EC00' F000'        	call	_SwTimerSetCallback
 33227                           
 33228                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 33229  002C' 0E00'              	movlw	low _LORAWAN_LinkCheckCallback
 33230  002E' 0100               	movlb	0	; () banked
 33231  0030' 6F00'              	movwf	SwTimerSetCallback@callback& (0+255),b
 33232  0032' 0E00'              	movlw	high _LORAWAN_LinkCheckCallback
 33233  0034' 6F00'              	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33234  0036' 0E00               	movlw	0
 33235  0038' 6F00'              	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33236  003A' 0102               	movlb	2	; () banked
 33237  003C' 5100'              	movf	(_loRa+231)& (0+255),w,b
 33238  003E' EC00' F000'        	call	_SwTimerSetCallback
 33239                           
 33240                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 33241  0042' 0E00'              	movlw	low _LORAWAN_ReceiveWindow1Callback
 33242  0044' 0100               	movlb	0	; () banked
 33243  0046' 6F00'              	movwf	SwTimerSetCallback@callback& (0+255),b
 33244  0048' 0E00'              	movlw	high _LORAWAN_ReceiveWindow1Callback
 33245  004A' 6F00'              	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33246  004C' 0E00               	movlw	0
 33247  004E' 6F00'              	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33248  0050' 0102               	movlb	2	; () banked
 33249  0052' 5100'              	movf	(_loRa+228)& (0+255),w,b
 33250  0054' EC00' F000'        	call	_SwTimerSetCallback
 33251                           
 33252                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 33253  0058' 0E00'              	movlw	low _LORAWAN_ReceiveWindow2Callback
 33254  005A' 0100               	movlb	0	; () banked
 33255  005C' 6F00'              	movwf	SwTimerSetCallback@callback& (0+255),b
 33256  005E' 0E00'              	movlw	high _LORAWAN_ReceiveWindow2Callback
 33257  0060' 6F00'              	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33258  0062' 0E00               	movlw	0
 33259  0064' 6F00'              	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33260  0066' 0102               	movlb	2	; () banked
 33261  0068' 5100'              	movf	(_loRa+229)& (0+255),w,b
 33262  006A' EC00' F000'        	call	_SwTimerSetCallback
 33263                           
 33264                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 33265  006E' 0E00'              	movlw	low _AckRetransmissionCallback
 33266  0070' 0100               	movlb	0	; () banked
 33267  0072' 6F00'              	movwf	SwTimerSetCallback@callback& (0+255),b
 33268  0074' 0E00'              	movlw	high _AckRetransmissionCallback
 33269  0076' 6F00'              	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33270  0078' 0E00               	movlw	0
 33271  007A' 6F00'              	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33272  007C' 0102               	movlb	2	; () banked
 33273  007E' 5100'              	movf	(_loRa+232)& (0+255),w,b
 33274  0080' EC00' F000'        	call	_SwTimerSetCallback
 33275                           
 33276                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 33277  0084' 0E00'              	movlw	low _AutomaticReplyCallback
 33278  0086' 0100               	movlb	0	; () banked
 33279  0088' 6F00'              	movwf	SwTimerSetCallback@callback& (0+255),b
 33280  008A' 0E00'              	movlw	high _AutomaticReplyCallback
 33281  008C' 6F00'              	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33282  008E' 0E00               	movlw	0
 33283  0090' 6F00'              	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33284  0092' 0102               	movlb	2	; () banked
 33285  0094' 5100'              	movf	(_loRa+230)& (0+255),w,b
 33286  0096' EC00' F000'        	call	_SwTimerSetCallback
 33287                           
 33288                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 33289  009A' 0E00'              	movlw	low _UnconfirmedTransmissionCallback
 33290  009C' 0100               	movlb	0	; () banked
 33291  009E' 6F00'              	movwf	SwTimerSetCallback@callback& (0+255),b
 33292  00A0' 0E00'              	movlw	high _UnconfirmedTransmissionCallback
 33293  00A2' 6F00'              	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33294  00A4' 0E00               	movlw	0
 33295  00A6' 6F00'              	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33296  00A8' 0102               	movlb	2	; () banked
 33297  00AA' 5100'              	movf	(_loRa+234)& (0+255),w,b
 33298  00AC' EC00' F000'        	call	_SwTimerSetCallback
 33299                           
 33300                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 33301  00B0' 0E00'              	movlw	low _UpdateJoinSuccessState
 33302  00B2' 0100               	movlb	0	; () banked
 33303  00B4' 6F00'              	movwf	SwTimerSetCallback@callback& (0+255),b
 33304  00B6' 0E00'              	movlw	high _UpdateJoinSuccessState
 33305  00B8' 6F00'              	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33306  00BA' 0E00               	movlw	0
 33307  00BC' 6F00'              	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33308  00BE' 0102               	movlb	2	; () banked
 33309  00C0' 5100'              	movf	(_loRa+243)& (0+255),w,b
 33310  00C2' EC00' F000'        	call	_SwTimerSetCallback
 33311                           
 33312                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 33313  00C6' 0E00'              	movlw	low _DutyCycleCallback
 33314  00C8' 0100               	movlb	0	; () banked
 33315  00CA' 6F00'              	movwf	SwTimerSetCallback@callback& (0+255),b
 33316  00CC' 0E00'              	movlw	high _DutyCycleCallback
 33317  00CE' 6F00'              	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33318  00D0' 0E00               	movlw	0
 33319  00D2' 6F00'              	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33320  00D4' 0102               	movlb	2	; () banked
 33321  00D6' 5100'              	movf	(_loRa+233)& (0+255),w,b
 33322  00D8' EC00' F000'        	call	_SwTimerSetCallback
 33323  00DC' 0012               	return		;funcret
 33324  00DE'                    __end_of_SetCallbackSoftwareTimers:
 33325                           	opt stack 0
 33326                           tosu	equ	0xFFF
 33327                           tosh	equ	0xFFE
 33328                           tosl	equ	0xFFD
 33329                           pclath	equ	0xFFA
 33330                           tblptru	equ	0xFF8
 33331                           tblptrh	equ	0xFF7
 33332                           tblptrl	equ	0xFF6
 33333                           tablat	equ	0xFF5
 33334                           prodh	equ	0xFF4
 33335                           prodl	equ	0xFF3
 33336                           intcon	equ	0xFF2
 33337                           intcon2	equ	0xFF1
 33338                           intcon3	equ	0xFF0
 33339                           indf0	equ	0xFEF
 33340                           postinc0	equ	0xFEE
 33341                           plusw0	equ	0xFEB
 33342                           fsr0h	equ	0xFEA
 33343                           fsr0l	equ	0xFE9
 33344                           wreg	equ	0xFE8
 33345                           postinc1	equ	0xFE6
 33346                           postdec1	equ	0xFE5
 33347                           plusw1	equ	0xFE3
 33348                           fsr1h	equ	0xFE2
 33349                           fsr1l	equ	0xFE1
 33350                           indf2	equ	0xFDF
 33351                           postinc2	equ	0xFDE
 33352                           postdec2	equ	0xFDD
 33353                           plusw2	equ	0xFDB
 33354                           fsr2h	equ	0xFDA
 33355                           fsr2l	equ	0xFD9
 33356                           status	equ	0xFD8
 33357                           
 33358 ;; *************** function _RADIO_ReadRandom *****************
 33359 ;; Defined at:
 33360 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33361 ;; Parameters:    Size  Location     Type
 33362 ;;		None
 33363 ;; Auto vars:     Size  Location     Type
 33364 ;;  retVal          2   15[BANK0 ] unsigned int 
 33365 ;;  i               1   17[BANK0 ] unsigned char 
 33366 ;; Return value:  Size  Location     Type
 33367 ;;                  2   12[BANK0 ] unsigned int 
 33368 ;; Registers used:
 33369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 33370 ;; Tracked objects:
 33371 ;;		On entry : 0/0
 33372 ;;		On exit  : 0/0
 33373 ;;		Unchanged: 0/0
 33374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33375 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33376 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33377 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33378 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33379 ;;Total ram usage:        6 bytes
 33380 ;; Hardware stack levels used:    1
 33381 ;; Hardware stack levels required when called:   11
 33382 ;; This function calls:
 33383 ;;		_RADIO_RegisterRead
 33384 ;;		_RADIO_RegisterWrite
 33385 ;;		_RADIO_WriteMode
 33386 ;;		_SystemBlockingWaitMs
 33387 ;; This function is called by:
 33388 ;;		_LORAWAN_Init
 33389 ;; This function uses a non-reentrant model
 33390 ;;
 33391                           
 33392                           	psect	text152
 33393  0000'                    __ptext152:
 33394                           	opt stack 0
 33395  0000'                    _RADIO_ReadRandom:
 33396                           	opt stack 18
 33397                           
 33398                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 33399                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 33400                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 33401                           
 33402                           ;incstack = 0
 33403  0000' 0E00               	movlw	0
 33404  0002' 0100               	movlb	0	; () banked
 33405  0004' 6F00'              	movwf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 33406  0006' 0E00               	movlw	0
 33407  0008' 6F00'              	movwf	RADIO_ReadRandom@retVal& (0+255),b
 33408                           
 33409                           ; BSR set to: 0
 33410                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 33411  000A' 0E01               	movlw	1
 33412  000C' 6F00'              	movwf	RADIO_WriteMode@newModulation& (0+255),b
 33413  000E' 0E01               	movlw	1
 33414  0010' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
 33415  0012' 0E00               	movlw	0
 33416  0014' EC00' F000'        	call	_RADIO_WriteMode
 33417                           
 33418                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 33419  0018' 0EFF               	movlw	255
 33420  001A' 0100               	movlb	0	; () banked
 33421  001C' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 33422  001E' 0E11               	movlw	17
 33423  0020' EC00' F000'        	call	_RADIO_RegisterWrite
 33424                           
 33425                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 33426  0024' 0E01               	movlw	1
 33427  0026' 0100               	movlb	0	; () banked
 33428  0028' 6F00'              	movwf	RADIO_WriteMode@newModulation& (0+255),b
 33429  002A' 0E01               	movlw	1
 33430  002C' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
 33431  002E' 0E05               	movlw	5
 33432  0030' EC00' F000'        	call	_RADIO_WriteMode
 33433                           
 33434                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 33435  0034' 0E00               	movlw	0
 33436  0036' 0100               	movlb	0	; () banked
 33437  0038' 6F00'              	movwf	RADIO_ReadRandom@i& (0+255),b
 33438  003A'                    l16194:
 33439                           
 33440                           ; BSR set to: 0
 33441  003A' 0E0F               	movlw	15
 33442  003C' 6500'              	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 33443  003E' D001               	goto	l677
 33444  0040' D019               	goto	u19920
 33445  0042'                    l677:
 33446                           
 33447                           ; BSR set to: 0
 33448                           ;radio_driver_SX1276.c: 1377: {
 33449                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 33450                           
 33451                           ; BSR set to: 0
 33452  0042' 0E01               	movlw	1
 33453  0044' 6F00'              	movwf	SystemBlockingWaitMs@ms& (0+255),b
 33454  0046' 0E00               	movlw	0
 33455  0048' 6F00'              	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 33456  004A' 0E00               	movlw	0
 33457  004C' 6F00'              	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 33458  004E' 0E00               	movlw	0
 33459  0050' 6F00'              	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 33460  0052' EC00' F000'        	call	_SystemBlockingWaitMs	;wreg free
 33461                           
 33462                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 33463  0056' 0100               	movlb	0	; () banked
 33464  0058' 90D8               	bcf	status,0,c
 33465  005A' 3700'              	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 33466  005C' 3700'              	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 33467                           
 33468                           ; BSR set to: 0
 33469                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 33470  005E' 0E2C               	movlw	44
 33471  0060' EC00' F000'        	call	_RADIO_RegisterRead
 33472  0064' 0100               	movlb	0	; () banked
 33473  0066' 6F00'              	movwf	??_RADIO_ReadRandom& (0+255),b
 33474  0068' 0E01               	movlw	1
 33475  006A' 1700'              	andwf	??_RADIO_ReadRandom& (0+255),f,b
 33476  006C' 5100'              	movf	??_RADIO_ReadRandom& (0+255),w,b
 33477  006E' 1300'              	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 33478                           
 33479                           ; BSR set to: 0
 33480  0070' 2B00'              	incf	RADIO_ReadRandom@i& (0+255),f,b
 33481  0072' D7E3               	goto	l16194
 33482  0074'                    u19920:
 33483                           
 33484                           ; BSR set to: 0
 33485                           ;radio_driver_SX1276.c: 1381: }
 33486                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 33487                           
 33488                           ; BSR set to: 0
 33489  0074' 0E01               	movlw	1
 33490  0076' 6F00'              	movwf	RADIO_WriteMode@newModulation& (0+255),b
 33491  0078' 0E01               	movlw	1
 33492  007A' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
 33493  007C' 0E00               	movlw	0
 33494  007E' EC00' F000'        	call	_RADIO_WriteMode
 33495                           
 33496                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 33497  0082' 0EFF               	movlw	255
 33498  0084' 0100               	movlb	0	; () banked
 33499  0086' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 33500  0088' 0E12               	movlw	18
 33501  008A' EC00' F000'        	call	_RADIO_RegisterWrite
 33502                           
 33503                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 33504  008E' 0E00               	movlw	0
 33505  0090' 0100               	movlb	0	; () banked
 33506  0092' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 33507  0094' 0E11               	movlw	17
 33508  0096' EC00' F000'        	call	_RADIO_RegisterWrite
 33509                           
 33510                           ;radio_driver_SX1276.c: 1389: return retVal;
 33511  009A' C00F' F00C'        	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 33512  009E' C010' F00D'        	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 33513  00A2' 0012               	return	
 33514  00A4'                    __end_of_RADIO_ReadRandom:
 33515                           	opt stack 0
 33516                           tosu	equ	0xFFF
 33517                           tosh	equ	0xFFE
 33518                           tosl	equ	0xFFD
 33519                           pclath	equ	0xFFA
 33520                           tblptru	equ	0xFF8
 33521                           tblptrh	equ	0xFF7
 33522                           tblptrl	equ	0xFF6
 33523                           tablat	equ	0xFF5
 33524                           prodh	equ	0xFF4
 33525                           prodl	equ	0xFF3
 33526                           intcon	equ	0xFF2
 33527                           intcon2	equ	0xFF1
 33528                           intcon3	equ	0xFF0
 33529                           indf0	equ	0xFEF
 33530                           postinc0	equ	0xFEE
 33531                           plusw0	equ	0xFEB
 33532                           fsr0h	equ	0xFEA
 33533                           fsr0l	equ	0xFE9
 33534                           wreg	equ	0xFE8
 33535                           postinc1	equ	0xFE6
 33536                           postdec1	equ	0xFE5
 33537                           plusw1	equ	0xFE3
 33538                           fsr1h	equ	0xFE2
 33539                           fsr1l	equ	0xFE1
 33540                           indf2	equ	0xFDF
 33541                           postinc2	equ	0xFDE
 33542                           postdec2	equ	0xFDD
 33543                           plusw2	equ	0xFDB
 33544                           fsr2h	equ	0xFDA
 33545                           fsr2l	equ	0xFD9
 33546                           status	equ	0xFD8
 33547                           
 33548 ;; *************** function _LORAWAN_Reset *****************
 33549 ;; Defined at:
 33550 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 33551 ;; Parameters:    Size  Location     Type
 33552 ;;  ismBandNew      1    wreg     enum E7280
 33553 ;; Auto vars:     Size  Location     Type
 33554 ;;  ismBandNew      1   81[BANK0 ] enum E7280
 33555 ;; Return value:  Size  Location     Type
 33556 ;;                  1    wreg      void 
 33557 ;; Registers used:
 33558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 33559 ;; Tracked objects:
 33560 ;;		On entry : 0/0
 33561 ;;		On exit  : 0/0
 33562 ;;		Unchanged: 0/0
 33563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33565 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33567 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33568 ;;Total ram usage:        1 bytes
 33569 ;; Hardware stack levels used:    1
 33570 ;; Hardware stack levels required when called:   12
 33571 ;; This function calls:
 33572 ;;		_InitDefault433Channels
 33573 ;;		_InitDefault868Channels
 33574 ;;		_LORAWAN_LinkCheckConfigure
 33575 ;;		_RADIO_Init
 33576 ;;		_RADIO_SetLoRaSyncWord
 33577 ;;		_StopAllSoftwareTimers
 33578 ;;		_UpdateMinMaxChDataRate
 33579 ;;		_memset
 33580 ;; This function is called by:
 33581 ;;		_LORAWAN_Init
 33582 ;; This function uses a non-reentrant model
 33583 ;;
 33584                           
 33585                           	psect	text153
 33586  0000'                    __ptext153:
 33587                           	opt stack 0
 33588  0000'                    _LORAWAN_Reset:
 33589                           	opt stack 17
 33590                           
 33591                           ;incstack = 0
 33592                           ;LORAWAN_Reset@ismBandNew stored from wreg
 33593  0000' 0100               	movlb	0	; () banked
 33594  0002' 6F00'              	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 33595                           
 33596                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 33597  0004' 0102               	movlb	2	; () banked
 33598  0006' 0500'              	decf	(_loRa+240)& (0+255),w,b
 33599  0008' B4D8               	btfsc	status,2,c
 33600                           
 33601                           ; BSR set to: 2
 33602                           ;lorawan_eu.c: 151: {
 33603                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 33604  000A' EC00' F000'        	call	_StopAllSoftwareTimers	;wreg free
 33605                           
 33606                           ;lorawan_eu.c: 153: }
 33607                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 33608  000E' 0E34               	movlw	52
 33609  0010' 0102               	movlb	2	; () banked
 33610  0012' 6F00'              	movwf	(_loRa+244)& (0+255),b
 33611                           
 33612                           ; BSR set to: 2
 33613                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 33614  0014' 5100'              	movf	(_loRa+244)& (0+255),w,b
 33615  0016' EC00' F000'        	call	_RADIO_SetLoRaSyncWord
 33616                           
 33617                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 33618  001A' 0E00               	movlw	0
 33619  001C' 0102               	movlb	2	; () banked
 33620  001E' 6F00'              	movwf	(_loRa+2)& (0+255),b
 33621  0020' 0E00               	movlw	0
 33622  0022' 6F00'              	movwf	(_loRa+3)& (0+255),b
 33623  0024' 0E00               	movlw	0
 33624  0026' 6F00'              	movwf	(_loRa+4)& (0+255),b
 33625  0028' 0E00               	movlw	0
 33626  002A' 6F00'              	movwf	(_loRa+5)& (0+255),b
 33627                           
 33628                           ; BSR set to: 2
 33629                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 33630  002C' 6900'              	setf	(_loRa+221)& (0+255),b
 33631                           
 33632                           ; BSR set to: 2
 33633                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 33634  002E' 0E00               	movlw	0
 33635  0030' 6F00'              	movwf	(_loRa+222)& (0+255),b
 33636                           
 33637                           ; BSR set to: 2
 33638                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 33639  0032' 0E00               	movlw	0
 33640  0034' 6F00'              	movwf	(_loRa+200)& (0+255),b
 33641  0036' 0E00               	movlw	0
 33642  0038' 6F00'              	movwf	(_loRa+201)& (0+255),b
 33643  003A' 0E00               	movlw	0
 33644  003C' 6F00'              	movwf	(_loRa+202)& (0+255),b
 33645  003E' 0E00               	movlw	0
 33646  0040' 6F00'              	movwf	(_loRa+203)& (0+255),b
 33647                           
 33648                           ; BSR set to: 2
 33649                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 33650  0042' 0E00               	movlw	0
 33651  0044' 6F00'              	movwf	(_loRa+213)& (0+255),b
 33652  0046' 0E00               	movlw	0
 33653  0048' 6F00'              	movwf	(_loRa+212)& (0+255),b
 33654                           
 33655                           ; BSR set to: 2
 33656                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 33657  004A' 0E00               	movlw	0
 33658  004C' 6F00'              	movwf	(_loRa+10)& (0+255),b
 33659  004E' 0E00               	movlw	0
 33660  0050' 6F00'              	movwf	(_loRa+11)& (0+255),b
 33661  0052' 0E00               	movlw	0
 33662  0054' 6F00'              	movwf	(_loRa+12)& (0+255),b
 33663  0056' 0E00               	movlw	0
 33664  0058' 6F00'              	movwf	(_loRa+13)& (0+255),b
 33665                           
 33666                           ; BSR set to: 2
 33667                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 33668  005A' 0E00               	movlw	0
 33669  005C' 6F00'              	movwf	(_loRa+6)& (0+255),b
 33670  005E' 0E00               	movlw	0
 33671  0060' 6F00'              	movwf	(_loRa+7)& (0+255),b
 33672  0062' 0E00               	movlw	0
 33673  0064' 6F00'              	movwf	(_loRa+8)& (0+255),b
 33674  0066' 0E00               	movlw	0
 33675  0068' 6F00'              	movwf	(_loRa+9)& (0+255),b
 33676                           
 33677                           ; BSR set to: 2
 33678                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 33679  006A' 0E00               	movlw	0
 33680  006C' 6F00'              	movwf	(_loRa+211)& (0+255),b
 33681  006E' 0E00               	movlw	0
 33682  0070' 6F00'              	movwf	(_loRa+210)& (0+255),b
 33683                           
 33684                           ; BSR set to: 2
 33685                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 33686  0072' 0E00               	movlw	0
 33687  0074' 6F00'              	movwf	(_loRa+220)& (0+255),b
 33688  0076' 0E01               	movlw	1
 33689  0078' 6F00'              	movwf	(_loRa+219)& (0+255),b
 33690                           
 33691                           ; BSR set to: 2
 33692                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 33693  007A' 0E00               	movlw	0
 33694  007C' 6F00'              	movwf	(_loRa+209)& (0+255),b
 33695  007E' 0E00               	movlw	0
 33696  0080' 6F00'              	movwf	(_loRa+208)& (0+255),b
 33697                           
 33698                           ; BSR set to: 2
 33699                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 33700  0082' 0E00               	movlw	0
 33701  0084' 6F00'              	movwf	(_loRa+238)& (0+255),b
 33702                           
 33703                           ; BSR set to: 2
 33704                           ;lorawan_eu.c: 169: loRa.offset = 0;
 33705  0086' 0E00               	movlw	0
 33706  0088' 6F00'              	movwf	(_loRa+239)& (0+255),b
 33707                           
 33708                           ; BSR set to: 2
 33709                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 33710  008A' 0E00               	movlw	0
 33711  008C' 6F00'              	movwf	(_loRa+200)& (0+255),b
 33712  008E' 0E00               	movlw	0
 33713  0090' 6F00'              	movwf	(_loRa+201)& (0+255),b
 33714  0092' 0E00               	movlw	0
 33715  0094' 6F00'              	movwf	(_loRa+202)& (0+255),b
 33716  0096' 0E00               	movlw	0
 33717  0098' 6F00'              	movwf	(_loRa+203)& (0+255),b
 33718                           
 33719                           ; BSR set to: 2
 33720                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 33721  009A' 9500'              	bcf	(_loRa+3)& (0+255),2,b
 33722                           
 33723                           ; BSR set to: 2
 33724                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 33725  009C' 0E00               	movlw	0
 33726  009E' 6F00'              	movwf	(_loRa+2)& (0+255),b
 33727  00A0' 0E00               	movlw	0
 33728  00A2' 6F00'              	movwf	(_loRa+3)& (0+255),b
 33729  00A4' 0E00               	movlw	0
 33730  00A6' 6F00'              	movwf	(_loRa+4)& (0+255),b
 33731  00A8' 0E00               	movlw	0
 33732  00AA' 6F00'              	movwf	(_loRa+5)& (0+255),b
 33733                           
 33734                           ; BSR set to: 2
 33735                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 33736  00AC' 0E00               	movlw	0
 33737  00AE' 6F00'              	movwf	(_loRa+1)& (0+255),b
 33738  00B0' 0E00               	movlw	0
 33739  00B2' 6F00'              	movwf	_loRa& (0+255),b
 33740                           
 33741                           ; BSR set to: 2
 33742                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 33743  00B4' 0E07               	movlw	7
 33744  00B6' 6F00'              	movwf	(_loRa+215)& (0+255),b
 33745                           
 33746                           ; BSR set to: 2
 33747                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 33748  00B8' 0E00               	movlw	0
 33749  00BA' 6F00'              	movwf	(_loRa+214)& (0+255),b
 33750                           
 33751                           ; BSR set to: 2
 33752                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 33753  00BC' 0E01               	movlw	1
 33754  00BE' 6F00'              	movwf	(_loRa+217)& (0+255),b
 33755                           
 33756                           ; BSR set to: 2
 33757                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 33758  00C0' 0E01               	movlw	1
 33759  00C2' 6F00'              	movwf	(_loRa+216)& (0+255),b
 33760                           
 33761                           ; BSR set to: 2
 33762                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 33763  00C4' 6900'              	setf	(_loRa+224)& (0+255),b
 33764                           
 33765                           ; BSR set to: 2
 33766                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 33767  00C6' C051' F0A4'        	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 33768                           
 33769                           ; BSR set to: 2
 33770                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 33771  00CA' 0E00               	movlw	0
 33772  00CC' 6F00'              	movwf	(_loRa+18)& (0+255),b
 33773                           
 33774                           ; BSR set to: 2
 33775                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 33776  00CE' 0E10               	movlw	16
 33777  00D0' 6F00'              	movwf	(_loRa+237)& (0+255),b
 33778                           
 33779                           ; BSR set to: 2
 33780                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 33781  00D2' 0100               	movlb	0	; () banked
 33782  00D4' 5100'              	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 33783  00D6' A4D8               	btfss	status,2,c
 33784  00D8' D01B               	goto	l979
 33785                           
 33786                           ; BSR set to: 0
 33787                           ;lorawan_eu.c: 193: {
 33788                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 33789  00DA' 0E00'              	movlw	low (_radioBuffer+16)
 33790  00DC' 6F00'              	movwf	RADIO_Init@radioBuffer& (0+255),b
 33791  00DE' 0E00'              	movlw	high (_radioBuffer+16)
 33792  00E0' 6F00'              	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 33793  00E2' 0EA0               	movlw	160
 33794  00E4' 6F00'              	movwf	RADIO_Init@frequency& (0+255),b
 33795  00E6' 0E27               	movlw	39
 33796  00E8' 6F00'              	movwf	(RADIO_Init@frequency+1)& (0+255),b
 33797  00EA' 0EBE               	movlw	190
 33798  00EC' 6F00'              	movwf	(RADIO_Init@frequency+2)& (0+255),b
 33799  00EE' 0E33               	movlw	51
 33800  00F0' 6F00'              	movwf	(RADIO_Init@frequency+3)& (0+255),b
 33801  00F2' EC00' F000'        	call	_RADIO_Init	;wreg free
 33802                           
 33803                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 33804  00F6' EC00' F000'        	call	_InitDefault868Channels	;wreg free
 33805                           
 33806                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 33807  00FA' 0E00               	movlw	0
 33808  00FC' 0102               	movlb	2	; () banked
 33809  00FE' 6F00'              	movwf	(_loRa+28)& (0+255),b
 33810                           
 33811                           ; BSR set to: 2
 33812                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 33813  0100' 0E08               	movlw	8
 33814  0102' 6F00'              	movwf	(_loRa+24)& (0+255),b
 33815  0104' 0EE6               	movlw	230
 33816  0106' 6F00'              	movwf	(_loRa+25)& (0+255),b
 33817  0108' 0ED3               	movlw	211
 33818  010A' 6F00'              	movwf	(_loRa+26)& (0+255),b
 33819  010C' 0E33               	movlw	51
 33820  010E' D01B               	goto	L25
 33821  0110'                    l979:
 33822                           
 33823                           ;lorawan_eu.c: 201: else
 33824                           ;lorawan_eu.c: 202: {
 33825                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 33826                           
 33827                           ; BSR set to: 2
 33828  0110' 0E00'              	movlw	low (_radioBuffer+16)
 33829  0112' 0100               	movlb	0	; () banked
 33830  0114' 6F00'              	movwf	RADIO_Init@radioBuffer& (0+255),b
 33831  0116' 0E00'              	movlw	high (_radioBuffer+16)
 33832  0118' 6F00'              	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 33833  011A' 0E20               	movlw	32
 33834  011C' 6F00'              	movwf	RADIO_Init@frequency& (0+255),b
 33835  011E' 0EA2               	movlw	162
 33836  0120' 6F00'              	movwf	(RADIO_Init@frequency+1)& (0+255),b
 33837  0122' 0ED3               	movlw	211
 33838  0124' 6F00'              	movwf	(RADIO_Init@frequency+2)& (0+255),b
 33839  0126' 0E19               	movlw	25
 33840  0128' 6F00'              	movwf	(RADIO_Init@frequency+3)& (0+255),b
 33841  012A' EC00' F000'        	call	_RADIO_Init	;wreg free
 33842                           
 33843                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 33844  012E' EC00' F000'        	call	_InitDefault433Channels	;wreg free
 33845                           
 33846                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 33847  0132' 0E00               	movlw	0
 33848  0134' 0102               	movlb	2	; () banked
 33849  0136' 6F00'              	movwf	(_loRa+28)& (0+255),b
 33850                           
 33851                           ; BSR set to: 2
 33852                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 33853  0138' 0E28               	movlw	40
 33854  013A' 6F00'              	movwf	(_loRa+24)& (0+255),b
 33855  013C' 0E76               	movlw	118
 33856  013E' 6F00'              	movwf	(_loRa+25)& (0+255),b
 33857  0140' 0EE8               	movlw	232
 33858  0142' 6F00'              	movwf	(_loRa+26)& (0+255),b
 33859  0144' 0E19               	movlw	25
 33860  0146'                    L25:
 33861  0146' 6F00'              	movwf	(_loRa+27)& (0+255),b
 33862                           
 33863                           ; BSR set to: 2
 33864                           ;lorawan_eu.c: 209: }
 33865                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 33866                           
 33867                           ; BSR set to: 2
 33868  0148' 0E01               	movlw	1
 33869  014A' 6F00'              	movwf	(_loRa+225)& (0+255),b
 33870                           
 33871                           ; BSR set to: 2
 33872                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 33873  014C' 0E00               	movlw	0
 33874  014E' 6F00'              	movwf	(_loRa+223)& (0+255),b
 33875                           
 33876                           ; BSR set to: 2
 33877                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 33878  0150' EC00' F000'        	call	_UpdateMinMaxChDataRate	;wreg free
 33879                           
 33880                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 33881  0154' 0E00               	movlw	0
 33882  0156' 0102               	movlb	2	; () banked
 33883  0158' 6F00'              	movwf	(_loRa+166)& (0+255),b
 33884  015A' 0E00               	movlw	0
 33885  015C' 6F00'              	movwf	(_loRa+165)& (0+255),b
 33886                           
 33887                           ; BSR set to: 2
 33888                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 33889  015E' 0E00'              	movlw	low (_loRa+29)
 33890  0160' 0100               	movlb	0	; () banked
 33891  0162' 6F00'              	movwf	memset@p1& (0+255),b
 33892  0164' 0E00'              	movlw	high (_loRa+29)
 33893  0166' 6F00'              	movwf	(memset@p1+1)& (0+255),b
 33894  0168' 0E00               	movlw	0
 33895  016A' 6F00'              	movwf	(memset@c+1)& (0+255),b
 33896  016C' 0E00               	movlw	0
 33897  016E' 6F00'              	movwf	memset@c& (0+255),b
 33898  0170' 0E00               	movlw	0
 33899  0172' 6F00'              	movwf	(memset@n+1)& (0+255),b
 33900  0174' 0E69               	movlw	105
 33901  0176' 6F00'              	movwf	memset@n& (0+255),b
 33902  0178' EC00' F000'        	call	_memset	;wreg free
 33903                           
 33904                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 33905  017C' 0E03               	movlw	3
 33906  017E' 0102               	movlb	2	; () banked
 33907  0180' 6F00'              	movwf	(_loRa+149)& (0+255),b
 33908  0182' 0EE8               	movlw	232
 33909  0184' 6F00'              	movwf	(_loRa+148)& (0+255),b
 33910                           
 33911                           ; BSR set to: 2
 33912                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 33913  0186' 0E07               	movlw	7
 33914  0188' 6F00'              	movwf	(_loRa+151)& (0+255),b
 33915  018A' 0ED0               	movlw	208
 33916  018C' 6F00'              	movwf	(_loRa+150)& (0+255),b
 33917                           
 33918                           ; BSR set to: 2
 33919                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 33920  018E' 0E13               	movlw	19
 33921  0190' 6F00'              	movwf	(_loRa+153)& (0+255),b
 33922  0192' 0E88               	movlw	136
 33923  0194' 6F00'              	movwf	(_loRa+152)& (0+255),b
 33924                           
 33925                           ; BSR set to: 2
 33926                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 33927  0196' 0E17               	movlw	23
 33928  0198' 6F00'              	movwf	(_loRa+155)& (0+255),b
 33929  019A' 0E70               	movlw	112
 33930  019C' 6F00'              	movwf	(_loRa+154)& (0+255),b
 33931                           
 33932                           ; BSR set to: 2
 33933                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 33934  019E' 0E07               	movlw	7
 33935  01A0' 6F00'              	movwf	(_loRa+161)& (0+255),b
 33936  01A2' 0ED0               	movlw	208
 33937  01A4' 6F00'              	movwf	(_loRa+160)& (0+255),b
 33938                           
 33939                           ; BSR set to: 2
 33940                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 33941  01A6' 0E20               	movlw	32
 33942  01A8' 6F00'              	movwf	(_loRa+163)& (0+255),b
 33943                           
 33944                           ; BSR set to: 2
 33945                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 33946  01AA' 0E40               	movlw	64
 33947  01AC' 6F00'              	movwf	(_loRa+162)& (0+255),b
 33948                           
 33949                           ; BSR set to: 2
 33950                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 33951  01AE' 0E40               	movlw	64
 33952  01B0' 6F00'              	movwf	(_loRa+157)& (0+255),b
 33953  01B2' 0E00               	movlw	0
 33954  01B4' 6F00'              	movwf	(_loRa+156)& (0+255),b
 33955                           
 33956                           ; BSR set to: 2
 33957                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 33958  01B6' 0E40               	movlw	64
 33959  01B8' 6F00'              	movwf	(_loRa+159)& (0+255),b
 33960  01BA' 0E00               	movlw	0
 33961  01BC' 6F00'              	movwf	(_loRa+158)& (0+255),b
 33962                           
 33963                           ; BSR set to: 2
 33964                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 33965  01BE' 0E00               	movlw	0
 33966  01C0' 0100               	movlb	0	; () banked
 33967  01C2' 6F00'              	movwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 33968  01C4' 0E00               	movlw	0
 33969  01C6' 6F00'              	movwf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 33970  01C8' EC00' F000'        	call	_LORAWAN_LinkCheckConfigure	;wreg free
 33971  01CC' 0012               	return		;funcret
 33972  01CE'                    __end_of_LORAWAN_Reset:
 33973                           	opt stack 0
 33974                           tosu	equ	0xFFF
 33975                           tosh	equ	0xFFE
 33976                           tosl	equ	0xFFD
 33977                           pclath	equ	0xFFA
 33978                           tblptru	equ	0xFF8
 33979                           tblptrh	equ	0xFF7
 33980                           tblptrl	equ	0xFF6
 33981                           tablat	equ	0xFF5
 33982                           prodh	equ	0xFF4
 33983                           prodl	equ	0xFF3
 33984                           intcon	equ	0xFF2
 33985                           intcon2	equ	0xFF1
 33986                           intcon3	equ	0xFF0
 33987                           indf0	equ	0xFEF
 33988                           postinc0	equ	0xFEE
 33989                           plusw0	equ	0xFEB
 33990                           fsr0h	equ	0xFEA
 33991                           fsr0l	equ	0xFE9
 33992                           wreg	equ	0xFE8
 33993                           postinc1	equ	0xFE6
 33994                           postdec1	equ	0xFE5
 33995                           plusw1	equ	0xFE3
 33996                           fsr1h	equ	0xFE2
 33997                           fsr1l	equ	0xFE1
 33998                           indf2	equ	0xFDF
 33999                           postinc2	equ	0xFDE
 34000                           postdec2	equ	0xFDD
 34001                           plusw2	equ	0xFDB
 34002                           fsr2h	equ	0xFDA
 34003                           fsr2l	equ	0xFD9
 34004                           status	equ	0xFD8
 34005                           
 34006 ;; *************** function _UpdateMinMaxChDataRate *****************
 34007 ;; Defined at:
 34008 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 34009 ;; Parameters:    Size  Location     Type
 34010 ;;		None
 34011 ;; Auto vars:     Size  Location     Type
 34012 ;;  i               1    1[BANK0 ] unsigned char 
 34013 ;; Return value:  Size  Location     Type
 34014 ;;                  1    wreg      void 
 34015 ;; Registers used:
 34016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34017 ;; Tracked objects:
 34018 ;;		On entry : 0/0
 34019 ;;		On exit  : 0/0
 34020 ;;		Unchanged: 0/0
 34021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34024 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34025 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34026 ;;Total ram usage:        2 bytes
 34027 ;; Hardware stack levels used:    1
 34028 ;; Hardware stack levels required when called:    7
 34029 ;; This function calls:
 34030 ;;		Nothing
 34031 ;; This function is called by:
 34032 ;;		_LORAWAN_Reset
 34033 ;; This function uses a non-reentrant model
 34034 ;;
 34035                           
 34036                           	psect	text154
 34037  0000'                    __ptext154:
 34038                           	opt stack 0
 34039  0000'                    _UpdateMinMaxChDataRate:
 34040                           	opt stack 21
 34041                           
 34042                           ;lorawan.c: 1065: uint8_t i;
 34043                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 34044                           
 34045                           ;incstack = 0
 34046  0000' 0E07               	movlw	7
 34047  0002' 0102               	movlb	2	; () banked
 34048  0004' 6F00'              	movwf	(_loRa+235)& (0+255),b
 34049                           
 34050                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 34051  0006' 0E00               	movlw	0
 34052  0008' 6F00'              	movwf	(_loRa+236)& (0+255),b
 34053                           
 34054                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 34055  000A' 0E00               	movlw	0
 34056  000C' 0100               	movlb	0	; () banked
 34057  000E' 6F00'              	movwf	UpdateMinMaxChDataRate@i& (0+255),b
 34058  0010' D06D               	goto	l1881
 34059  0012'                    
 34060                           ; BSR set to: 0
 34061                           ;lorawan.c: 1072: {
 34062                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 34063                           
 34064                           ; BSR set to: 0
 34065  0012' 5100'              	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34066  0014' 0D0E               	mullw	14
 34067  0016' 0E05               	movlw	5
 34068  0018' 26F3               	addwf	prodl,f,c
 34069  001A' 0E00               	movlw	0
 34070  001C' 22F4               	addwfc	prodh,f,c
 34071  001E' 0E00'              	movlw	low _Channels
 34072  0020' 24F3               	addwf	prodl,w,c
 34073  0022' 6ED9               	movwf	fsr2l,c
 34074  0024' 0E00'              	movlw	high _Channels
 34075  0026' 20F4               	addwfc	prodh,w,c
 34076  0028' 6EDA               	movwf	fsr2h,c
 34077  002A' 0104               	movlb	4	; () banked
 34078  002C' 50DF               	movf	223,w,c
 34079  002E' 0B0F               	andlw	15
 34080  0030' 0100               	movlb	0	; () banked
 34081  0032' 6F00'              	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 34082  0034' 0102               	movlb	2	; () banked
 34083  0036' 5100'              	movf	(_loRa+235)& (0+255),w,b
 34084  0038' 0100               	movlb	0	; () banked
 34085  003A' 5D00'              	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 34086  003C' B0D8               	btfsc	status,0,c
 34087  003E' D020               	goto	l1883
 34088                           
 34089                           ; BSR set to: 0
 34090  0040' 5100'              	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34091  0042' 0D0E               	mullw	14
 34092  0044' 0E04               	movlw	4
 34093  0046' 26F3               	addwf	prodl,f,c
 34094  0048' 0E00               	movlw	0
 34095  004A' 22F4               	addwfc	prodh,f,c
 34096  004C' 0E00'              	movlw	low _Channels
 34097  004E' 24F3               	addwf	prodl,w,c
 34098  0050' 6ED9               	movwf	fsr2l,c
 34099  0052' 0E00'              	movlw	high _Channels
 34100  0054' 20F4               	addwfc	prodh,w,c
 34101  0056' 6EDA               	movwf	fsr2h,c
 34102  0058' 04DE               	decf	postinc2,w,c
 34103  005A' A4D8               	btfss	status,2,c
 34104  005C' D011               	goto	l1883
 34105                           
 34106                           ; BSR set to: 0
 34107                           ;lorawan.c: 1074: {
 34108                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 34109  005E' 5100'              	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34110  0060' 0D0E               	mullw	14
 34111  0062' 0E05               	movlw	5
 34112  0064' 26F3               	addwf	prodl,f,c
 34113  0066' 0E00               	movlw	0
 34114  0068' 22F4               	addwfc	prodh,f,c
 34115  006A' 0E00'              	movlw	low _Channels
 34116  006C' 24F3               	addwf	prodl,w,c
 34117  006E' 6ED9               	movwf	fsr2l,c
 34118  0070' 0E00'              	movlw	high _Channels
 34119  0072' 20F4               	addwfc	prodh,w,c
 34120  0074' 6EDA               	movwf	fsr2h,c
 34121  0076' 0104               	movlb	4	; () banked
 34122  0078' 50DF               	movf	223,w,c
 34123  007A' 0B0F               	andlw	15
 34124  007C' 0102               	movlb	2	; () banked
 34125  007E' 6F00'              	movwf	(_loRa+235)& (0+255),b
 34126  0080'                    l1883:
 34127                           
 34128                           ;lorawan.c: 1076: }
 34129                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 34130  0080' 0100               	movlb	0	; () banked
 34131  0082' 5100'              	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34132  0084' 0D0E               	mullw	14
 34133  0086' 0E05               	movlw	5
 34134  0088' 26F3               	addwf	prodl,f,c
 34135  008A' 0E00               	movlw	0
 34136  008C' 22F4               	addwfc	prodh,f,c
 34137  008E' 0E00'              	movlw	low _Channels
 34138  0090' 24F3               	addwf	prodl,w,c
 34139  0092' 6ED9               	movwf	fsr2l,c
 34140  0094' 0E00'              	movlw	high _Channels
 34141  0096' 20F4               	addwfc	prodh,w,c
 34142  0098' 6EDA               	movwf	fsr2h,c
 34143  009A' 0104               	movlb	4	; () banked
 34144  009C' 38DF               	swapf	223,w,c
 34145  009E' 0B0F               	andlw	15
 34146  00A0' 0102               	movlb	2	; () banked
 34147  00A2' 6100'              	cpfslt	(_loRa+236)& (0+255),b
 34148  00A4' D021               	goto	l1884
 34149                           
 34150                           ; BSR set to: 2
 34151  00A6' 0100               	movlb	0	; () banked
 34152  00A8' 5100'              	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34153  00AA' 0D0E               	mullw	14
 34154  00AC' 0E04               	movlw	4
 34155  00AE' 26F3               	addwf	prodl,f,c
 34156  00B0' 0E00               	movlw	0
 34157  00B2' 22F4               	addwfc	prodh,f,c
 34158  00B4' 0E00'              	movlw	low _Channels
 34159  00B6' 24F3               	addwf	prodl,w,c
 34160  00B8' 6ED9               	movwf	fsr2l,c
 34161  00BA' 0E00'              	movlw	high _Channels
 34162  00BC' 20F4               	addwfc	prodh,w,c
 34163  00BE' 6EDA               	movwf	fsr2h,c
 34164  00C0' 04DE               	decf	postinc2,w,c
 34165  00C2' A4D8               	btfss	status,2,c
 34166  00C4' D011               	goto	l1884
 34167                           
 34168                           ; BSR set to: 0
 34169                           ;lorawan.c: 1078: {
 34170                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 34171  00C6' 5100'              	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34172  00C8' 0D0E               	mullw	14
 34173  00CA' 0E05               	movlw	5
 34174  00CC' 26F3               	addwf	prodl,f,c
 34175  00CE' 0E00               	movlw	0
 34176  00D0' 22F4               	addwfc	prodh,f,c
 34177  00D2' 0E00'              	movlw	low _Channels
 34178  00D4' 24F3               	addwf	prodl,w,c
 34179  00D6' 6ED9               	movwf	fsr2l,c
 34180  00D8' 0E00'              	movlw	high _Channels
 34181  00DA' 20F4               	addwfc	prodh,w,c
 34182  00DC' 6EDA               	movwf	fsr2h,c
 34183  00DE' 0104               	movlb	4	; () banked
 34184  00E0' 38DF               	swapf	223,w,c
 34185  00E2' 0B0F               	andlw	15
 34186  00E4' 0102               	movlb	2	; () banked
 34187  00E6' 6F00'              	movwf	(_loRa+236)& (0+255),b
 34188  00E8'                    l1884:
 34189                           
 34190                           ; BSR set to: 2
 34191  00E8' 0100               	movlb	0	; () banked
 34192  00EA' 2B00'              	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 34193  00EC'                    l1881:
 34194                           
 34195                           ; BSR set to: 0
 34196                           
 34197                           ; BSR set to: 0
 34198  00EC' 0102               	movlb	2	; () banked
 34199  00EE' 5100'              	movf	(_loRa+237)& (0+255),w,b
 34200  00F0' 0100               	movlb	0	; () banked
 34201  00F2' 5D00'              	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34202  00F4' B0D8               	btfsc	status,0,c
 34203  00F6' 0012               	return	
 34204  00F8' D78C               	goto	l1882
 34205  00FA'                    __end_of_UpdateMinMaxChDataRate:
 34206                           	opt stack 0
 34207                           tosu	equ	0xFFF
 34208                           tosh	equ	0xFFE
 34209                           tosl	equ	0xFFD
 34210                           pclath	equ	0xFFA
 34211                           tblptru	equ	0xFF8
 34212                           tblptrh	equ	0xFF7
 34213                           tblptrl	equ	0xFF6
 34214                           tablat	equ	0xFF5
 34215                           prodh	equ	0xFF4
 34216                           prodl	equ	0xFF3
 34217                           intcon	equ	0xFF2
 34218                           intcon2	equ	0xFF1
 34219                           intcon3	equ	0xFF0
 34220                           indf0	equ	0xFEF
 34221                           postinc0	equ	0xFEE
 34222                           plusw0	equ	0xFEB
 34223                           fsr0h	equ	0xFEA
 34224                           fsr0l	equ	0xFE9
 34225                           wreg	equ	0xFE8
 34226                           postinc1	equ	0xFE6
 34227                           postdec1	equ	0xFE5
 34228                           plusw1	equ	0xFE3
 34229                           fsr1h	equ	0xFE2
 34230                           fsr1l	equ	0xFE1
 34231                           indf2	equ	0xFDF
 34232                           postinc2	equ	0xFDE
 34233                           postdec2	equ	0xFDD
 34234                           plusw2	equ	0xFDB
 34235                           fsr2h	equ	0xFDA
 34236                           fsr2l	equ	0xFD9
 34237                           status	equ	0xFD8
 34238                           
 34239 ;; *************** function _StopAllSoftwareTimers *****************
 34240 ;; Defined at:
 34241 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34242 ;; Parameters:    Size  Location     Type
 34243 ;;		None
 34244 ;; Auto vars:     Size  Location     Type
 34245 ;;		None
 34246 ;; Return value:  Size  Location     Type
 34247 ;;                  1    wreg      void 
 34248 ;; Registers used:
 34249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34250 ;; Tracked objects:
 34251 ;;		On entry : 0/0
 34252 ;;		On exit  : 0/0
 34253 ;;		Unchanged: 0/0
 34254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34259 ;;Total ram usage:        0 bytes
 34260 ;; Hardware stack levels used:    1
 34261 ;; Hardware stack levels required when called:    8
 34262 ;; This function calls:
 34263 ;;		_SwTimerStop
 34264 ;; This function is called by:
 34265 ;;		_LORAWAN_Init
 34266 ;;		_LORAWAN_Reset
 34267 ;; This function uses a non-reentrant model
 34268 ;;
 34269                           
 34270                           	psect	text155
 34271  0000'                    __ptext155:
 34272                           	opt stack 0
 34273  0000'                    _StopAllSoftwareTimers:
 34274                           	opt stack 21
 34275                           
 34276                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 34277                           
 34278                           ; BSR set to: 0
 34279                           ;incstack = 0
 34280  0000' 0102               	movlb	2	; () banked
 34281  0002' 5100'              	movf	(_loRa+226)& (0+255),w,b
 34282  0004' EC00' F000'        	call	_SwTimerStop
 34283                           
 34284                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 34285  0008' 0102               	movlb	2	; () banked
 34286  000A' 5100'              	movf	(_loRa+227)& (0+255),w,b
 34287  000C' EC00' F000'        	call	_SwTimerStop
 34288                           
 34289                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 34290  0010' 0102               	movlb	2	; () banked
 34291  0012' 5100'              	movf	(_loRa+231)& (0+255),w,b
 34292  0014' EC00' F000'        	call	_SwTimerStop
 34293                           
 34294                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 34295  0018' 0102               	movlb	2	; () banked
 34296  001A' 5100'              	movf	(_loRa+228)& (0+255),w,b
 34297  001C' EC00' F000'        	call	_SwTimerStop
 34298                           
 34299                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 34300  0020' 0102               	movlb	2	; () banked
 34301  0022' 5100'              	movf	(_loRa+229)& (0+255),w,b
 34302  0024' EC00' F000'        	call	_SwTimerStop
 34303                           
 34304                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 34305  0028' 0102               	movlb	2	; () banked
 34306  002A' 5100'              	movf	(_loRa+232)& (0+255),w,b
 34307  002C' EC00' F000'        	call	_SwTimerStop
 34308                           
 34309                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 34310  0030' 0102               	movlb	2	; () banked
 34311  0032' 5100'              	movf	(_loRa+230)& (0+255),w,b
 34312  0034' EC00' F000'        	call	_SwTimerStop
 34313                           
 34314                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 34315  0038' 0102               	movlb	2	; () banked
 34316  003A' 5100'              	movf	(_loRa+234)& (0+255),w,b
 34317  003C' EC00' F000'        	call	_SwTimerStop
 34318                           
 34319                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 34320  0040' 0102               	movlb	2	; () banked
 34321  0042' 5100'              	movf	(_loRa+243)& (0+255),w,b
 34322  0044' EC00' F000'        	call	_SwTimerStop
 34323                           
 34324                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 34325  0048' 0102               	movlb	2	; () banked
 34326  004A' 5100'              	movf	(_loRa+233)& (0+255),w,b
 34327  004C' EC00' F000'        	call	_SwTimerStop
 34328  0050' 0012               	return		;funcret
 34329  0052'                    __end_of_StopAllSoftwareTimers:
 34330                           	opt stack 0
 34331                           tosu	equ	0xFFF
 34332                           tosh	equ	0xFFE
 34333                           tosl	equ	0xFFD
 34334                           pclath	equ	0xFFA
 34335                           tblptru	equ	0xFF8
 34336                           tblptrh	equ	0xFF7
 34337                           tblptrl	equ	0xFF6
 34338                           tablat	equ	0xFF5
 34339                           prodh	equ	0xFF4
 34340                           prodl	equ	0xFF3
 34341                           intcon	equ	0xFF2
 34342                           intcon2	equ	0xFF1
 34343                           intcon3	equ	0xFF0
 34344                           indf0	equ	0xFEF
 34345                           postinc0	equ	0xFEE
 34346                           plusw0	equ	0xFEB
 34347                           fsr0h	equ	0xFEA
 34348                           fsr0l	equ	0xFE9
 34349                           wreg	equ	0xFE8
 34350                           postinc1	equ	0xFE6
 34351                           postdec1	equ	0xFE5
 34352                           plusw1	equ	0xFE3
 34353                           fsr1h	equ	0xFE2
 34354                           fsr1l	equ	0xFE1
 34355                           indf2	equ	0xFDF
 34356                           postinc2	equ	0xFDE
 34357                           postdec2	equ	0xFDD
 34358                           plusw2	equ	0xFDB
 34359                           fsr2h	equ	0xFDA
 34360                           fsr2l	equ	0xFD9
 34361                           status	equ	0xFD8
 34362                           
 34363 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 34364 ;; Defined at:
 34365 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34366 ;; Parameters:    Size  Location     Type
 34367 ;;  syncWord        1    wreg     unsigned char 
 34368 ;; Auto vars:     Size  Location     Type
 34369 ;;  syncWord        1    0[BANK0 ] unsigned char 
 34370 ;; Return value:  Size  Location     Type
 34371 ;;                  1    wreg      void 
 34372 ;; Registers used:
 34373 ;;		wreg
 34374 ;; Tracked objects:
 34375 ;;		On entry : 0/0
 34376 ;;		On exit  : 0/0
 34377 ;;		Unchanged: 0/0
 34378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34380 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34382 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34383 ;;Total ram usage:        1 bytes
 34384 ;; Hardware stack levels used:    1
 34385 ;; Hardware stack levels required when called:    7
 34386 ;; This function calls:
 34387 ;;		Nothing
 34388 ;; This function is called by:
 34389 ;;		_LORAWAN_Reset
 34390 ;;		_ConfigureRadio
 34391 ;; This function uses a non-reentrant model
 34392 ;;
 34393                           
 34394                           	psect	text156
 34395  0000'                    __ptext156:
 34396                           	opt stack 0
 34397  0000'                    _RADIO_SetLoRaSyncWord:
 34398                           	opt stack 19
 34399                           
 34400                           ;incstack = 0
 34401                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 34402  0000' 0100               	movlb	0	; () banked
 34403  0002' 6F00'              	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 34404                           
 34405                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 34406  0004' C000' F020'        	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 34407  0008' 0012               	return		;funcret
 34408  000A'                    __end_of_RADIO_SetLoRaSyncWord:
 34409                           	opt stack 0
 34410                           tosu	equ	0xFFF
 34411                           tosh	equ	0xFFE
 34412                           tosl	equ	0xFFD
 34413                           pclath	equ	0xFFA
 34414                           tblptru	equ	0xFF8
 34415                           tblptrh	equ	0xFF7
 34416                           tblptrl	equ	0xFF6
 34417                           tablat	equ	0xFF5
 34418                           prodh	equ	0xFF4
 34419                           prodl	equ	0xFF3
 34420                           intcon	equ	0xFF2
 34421                           intcon2	equ	0xFF1
 34422                           intcon3	equ	0xFF0
 34423                           indf0	equ	0xFEF
 34424                           postinc0	equ	0xFEE
 34425                           plusw0	equ	0xFEB
 34426                           fsr0h	equ	0xFEA
 34427                           fsr0l	equ	0xFE9
 34428                           wreg	equ	0xFE8
 34429                           postinc1	equ	0xFE6
 34430                           postdec1	equ	0xFE5
 34431                           plusw1	equ	0xFE3
 34432                           fsr1h	equ	0xFE2
 34433                           fsr1l	equ	0xFE1
 34434                           indf2	equ	0xFDF
 34435                           postinc2	equ	0xFDE
 34436                           postdec2	equ	0xFDD
 34437                           plusw2	equ	0xFDB
 34438                           fsr2h	equ	0xFDA
 34439                           fsr2l	equ	0xFD9
 34440                           status	equ	0xFD8
 34441                           
 34442 ;; *************** function _RADIO_Init *****************
 34443 ;; Defined at:
 34444 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34445 ;; Parameters:    Size  Location     Type
 34446 ;;  radioBuffer     2   25[BANK0 ] PTR unsigned char 
 34447 ;;		 -> radioBuffer(271), 
 34448 ;;  frequency       4   27[BANK0 ] unsigned long 
 34449 ;; Auto vars:     Size  Location     Type
 34450 ;;		None
 34451 ;; Return value:  Size  Location     Type
 34452 ;;                  1    wreg      void 
 34453 ;; Registers used:
 34454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 34455 ;; Tracked objects:
 34456 ;;		On entry : 0/0
 34457 ;;		On exit  : 0/0
 34458 ;;		Unchanged: 0/0
 34459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34460 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34462 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34463 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34464 ;;Total ram usage:        7 bytes
 34465 ;; Hardware stack levels used:    1
 34466 ;; Hardware stack levels required when called:   11
 34467 ;; This function calls:
 34468 ;;		_RADIO_RegisterRead
 34469 ;;		_RADIO_RegisterWrite
 34470 ;;		_RADIO_Reset
 34471 ;;		_RADIO_WriteFrequency
 34472 ;;		_RADIO_WriteMode
 34473 ;;		_SwTimerCreate
 34474 ;;		_SwTimerSetCallback
 34475 ;;		_SwTimerStop
 34476 ;; This function is called by:
 34477 ;;		_LORAWAN_Init
 34478 ;;		_LORAWAN_Reset
 34479 ;; This function uses a non-reentrant model
 34480 ;;
 34481                           
 34482                           	psect	text157
 34483  0000'                    __ptext157:
 34484                           	opt stack 0
 34485  0000'                    _RADIO_Init:
 34486                           	opt stack 18
 34487                           
 34488                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 34489                           
 34490                           ;incstack = 0
 34491  0000' C01B' F012'        	movff	RADIO_Init@frequency,_RadioConfiguration
 34492  0004' C01C' F013'        	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 34493  0008' C01D' F014'        	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 34494  000C' C01E' F015'        	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 34495                           
 34496                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 34497  0010' 0EA8               	movlw	168
 34498  0012' 0101               	movlb	1	; () banked
 34499  0014' 6F00'              	movwf	(_RadioConfiguration+4)& (0+255),b
 34500  0016' 0E61               	movlw	97
 34501  0018' 6F00'              	movwf	(_RadioConfiguration+5)& (0+255),b
 34502  001A' 0E00               	movlw	0
 34503  001C' 6F00'              	movwf	(_RadioConfiguration+6)& (0+255),b
 34504  001E' 0E00               	movlw	0
 34505  0020' 6F00'              	movwf	(_RadioConfiguration+7)& (0+255),b
 34506                           
 34507                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 34508  0022' 0E50               	movlw	80
 34509  0024' 6F00'              	movwf	(_RadioConfiguration+8)& (0+255),b
 34510  0026' 0EC3               	movlw	195
 34511  0028' 6F00'              	movwf	(_RadioConfiguration+9)& (0+255),b
 34512  002A' 0E00               	movlw	0
 34513  002C' 6F00'              	movwf	(_RadioConfiguration+10)& (0+255),b
 34514  002E' 0E00               	movlw	0
 34515  0030' 6F00'              	movwf	(_RadioConfiguration+11)& (0+255),b
 34516                           
 34517                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 34518  0032' 0E01               	movlw	1
 34519  0034' 6F00'              	movwf	(_RadioConfiguration+24)& (0+255),b
 34520                           
 34521                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 34522  0036' 0E07               	movlw	7
 34523  0038' 6F00'              	movwf	(_RadioConfiguration+26)& (0+255),b
 34524                           
 34525                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 34526  003A' 0E01               	movlw	1
 34527  003C' 6F00'              	movwf	(_RadioConfiguration+27)& (0+255),b
 34528                           
 34529                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 34530  003E' 0E01               	movlw	1
 34531  0040' 6F00'              	movwf	(_RadioConfiguration+33)& (0+255),b
 34532                           
 34533                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 34534  0042' 0E00               	movlw	0
 34535  0044' 6F00'              	movwf	(_RadioConfiguration+34)& (0+255),b
 34536                           
 34537                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 34538  0046' 0E00               	movlw	0
 34539  0048' 6F00'              	movwf	(_RadioConfiguration+13)& (0+255),b
 34540  004A' 0E08               	movlw	8
 34541  004C' 6F00'              	movwf	(_RadioConfiguration+12)& (0+255),b
 34542                           
 34543                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 34544  004E' 0E0C               	movlw	12
 34545  0050' 6F00'              	movwf	(_RadioConfiguration+25)& (0+255),b
 34546                           
 34547                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 34548  0052' 0E01               	movlw	1
 34549  0054' 6F00'              	movwf	(_RadioConfiguration+28)& (0+255),b
 34550                           
 34551                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 34552  0056' 0E00               	movlw	0
 34553  0058' 6F00'              	movwf	(_RadioConfiguration+29)& (0+255),b
 34554                           
 34555                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 34556  005A' 0E00               	movlw	0
 34557  005C' 6F00'              	movwf	(_RadioConfiguration+32)& (0+255),b
 34558                           
 34559                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 34560  005E' 0EC1               	movlw	193
 34561  0060' 6F00'              	movwf	(_RadioConfiguration+15)& (0+255),b
 34562                           
 34563                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 34564  0062' 0E94               	movlw	148
 34565  0064' 6F00'              	movwf	(_RadioConfiguration+16)& (0+255),b
 34566                           
 34567                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 34568  0066' 0EC1               	movlw	193
 34569  0068' 6F00'              	movwf	(_RadioConfiguration+17)& (0+255),b
 34570                           
 34571                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 34572  006A' 0E03               	movlw	3
 34573  006C' 6F00'              	movwf	(_RadioConfiguration+23)& (0+255),b
 34574                           
 34575                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 34576  006E' 0E34               	movlw	52
 34577  0070' 6F00'              	movwf	(_RadioConfiguration+14)& (0+255),b
 34578                           
 34579                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 34580  0072' 0E00               	movlw	0
 34581  0074' 6F00'              	movwf	(_RadioConfiguration+35)& (0+255),b
 34582                           
 34583                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 34584  0076' 0E00               	movlw	0
 34585  0078' 6F00'              	movwf	(_RadioConfiguration+36)& (0+255),b
 34586                           
 34587                           ; BSR set to: 1
 34588                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 34589  007A' C019' F037'        	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 34590  007E' C01A' F038'        	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 34591                           
 34592                           ; BSR set to: 1
 34593                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 34594  0082' 0E00               	movlw	0
 34595  0084' 6F00'              	movwf	(_RadioConfiguration+31)& (0+255),b
 34596  0086' 0E00               	movlw	0
 34597  0088' 6F00'              	movwf	(_RadioConfiguration+30)& (0+255),b
 34598                           
 34599                           ; BSR set to: 1
 34600                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 34601  008A' 0E80               	movlw	128
 34602  008C' 6F00'              	movwf	(_RadioConfiguration+50)& (0+255),b
 34603                           
 34604                           ; BSR set to: 1
 34605                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 34606  008E' 0E98               	movlw	152
 34607  0090' 6F00'              	movwf	(_RadioConfiguration+42)& (0+255),b
 34608  0092' 0E3A               	movlw	58
 34609  0094' 6F00'              	movwf	(_RadioConfiguration+43)& (0+255),b
 34610  0096' 0E00               	movlw	0
 34611  0098' 6F00'              	movwf	(_RadioConfiguration+44)& (0+255),b
 34612  009A' 0E00               	movlw	0
 34613  009C' 6F00'              	movwf	(_RadioConfiguration+45)& (0+255),b
 34614                           
 34615                           ; BSR set to: 1
 34616                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 34617  009E' 0E02               	movlw	2
 34618  00A0' 6F00'              	movwf	(_RadioConfiguration+51)& (0+255),b
 34619                           
 34620                           ; BSR set to: 1
 34621                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 34622  00A2' 0E0B               	movlw	11
 34623  00A4' 6F00'              	movwf	(_RadioConfiguration+52)& (0+255),b
 34624                           
 34625                           ; BSR set to: 1
 34626                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 34627  00A6' 0E12               	movlw	18
 34628  00A8' 6F00'              	movwf	(_RadioConfiguration+53)& (0+255),b
 34629                           
 34630                           ; BSR set to: 1
 34631                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 34632  00AA' 0E00               	movlw	0
 34633  00AC' 6F00'              	movwf	(_RadioConfiguration+47)& (0+255),b
 34634  00AE' 0E00               	movlw	0
 34635  00B0' 6F00'              	movwf	(_RadioConfiguration+48)& (0+255),b
 34636                           
 34637                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 34638  00B2' 5100'              	movf	(_RadioConfiguration+46)& (0+255),w,b
 34639  00B4' A4D8               	btfss	status,2,c
 34640  00B6' D026               	goto	l445
 34641                           
 34642                           ; BSR set to: 1
 34643                           ;radio_driver_SX1276.c: 457: {
 34644                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 34645  00B8' EC00' F000'        	call	_SwTimerCreate	;wreg free
 34646  00BC' 0101               	movlb	1	; () banked
 34647  00BE' 6F00'              	movwf	(_RadioConfiguration+39)& (0+255),b
 34648                           
 34649                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 34650  00C0' EC00' F000'        	call	_SwTimerCreate	;wreg free
 34651  00C4' 0101               	movlb	1	; () banked
 34652  00C6' 6F00'              	movwf	(_RadioConfiguration+40)& (0+255),b
 34653                           
 34654                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 34655  00C8' EC00' F000'        	call	_SwTimerCreate	;wreg free
 34656  00CC' 0101               	movlb	1	; () banked
 34657  00CE' 6F00'              	movwf	(_RadioConfiguration+41)& (0+255),b
 34658                           
 34659                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 34660  00D0' 0E00'              	movlw	low _RADIO_RxFSKTimeout
 34661  00D2' 0100               	movlb	0	; () banked
 34662  00D4' 6F00'              	movwf	SwTimerSetCallback@callback& (0+255),b
 34663  00D6' 0E00'              	movlw	high _RADIO_RxFSKTimeout
 34664  00D8' 6F00'              	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34665  00DA' 0E00               	movlw	0
 34666  00DC' 6F00'              	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34667  00DE' 0101               	movlb	1	; () banked
 34668  00E0' 5100'              	movf	(_RadioConfiguration+40)& (0+255),w,b
 34669  00E2' EC00' F000'        	call	_SwTimerSetCallback
 34670                           
 34671                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 34672  00E6' 0E00'              	movlw	low _RADIO_WatchdogTimeout
 34673  00E8' 0100               	movlb	0	; () banked
 34674  00EA' 6F00'              	movwf	SwTimerSetCallback@callback& (0+255),b
 34675  00EC' 0E00'              	movlw	high _RADIO_WatchdogTimeout
 34676  00EE' 6F00'              	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34677  00F0' 0E00               	movlw	0
 34678  00F2' 6F00'              	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34679  00F4' 0101               	movlb	1	; () banked
 34680  00F6' 5100'              	movf	(_RadioConfiguration+41)& (0+255),w,b
 34681  00F8' EC00' F000'        	call	_SwTimerSetCallback
 34682                           
 34683                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 34684  00FC' 0E01               	movlw	1
 34685  00FE' 0101               	movlb	1	; () banked
 34686  0100' 6F00'              	movwf	(_RadioConfiguration+46)& (0+255),b
 34687                           
 34688                           ;radio_driver_SX1276.c: 466: }
 34689  0102' D00B               	goto	l446
 34690  0104'                    l445:
 34691                           
 34692                           ; BSR set to: 1
 34693                           ;radio_driver_SX1276.c: 467: else
 34694                           ;radio_driver_SX1276.c: 468: {
 34695                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 34696                           
 34697                           ; BSR set to: 1
 34698  0104' 5100'              	movf	(_RadioConfiguration+39)& (0+255),w,b
 34699  0106' EC00' F000'        	call	_SwTimerStop
 34700                           
 34701                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 34702  010A' 0101               	movlb	1	; () banked
 34703  010C' 5100'              	movf	(_RadioConfiguration+40)& (0+255),w,b
 34704  010E' EC00' F000'        	call	_SwTimerStop
 34705                           
 34706                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 34707  0112' 0101               	movlb	1	; () banked
 34708  0114' 5100'              	movf	(_RadioConfiguration+41)& (0+255),w,b
 34709  0116' EC00' F000'        	call	_SwTimerStop
 34710  011A'                    l446:
 34711                           
 34712                           ;radio_driver_SX1276.c: 472: }
 34713                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 34714  011A' EC00' F000'        	call	_RADIO_Reset	;wreg free
 34715                           
 34716                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 34717  011E' 0E00               	movlw	0
 34718  0120' 0100               	movlb	0	; () banked
 34719  0122' 6F00'              	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34720  0124' 0E01               	movlw	1
 34721  0126' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
 34722  0128' 0E01               	movlw	1
 34723  012A' EC00' F000'        	call	_RADIO_WriteMode
 34724                           
 34725                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 34726  012E' C012' F00D'        	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 34727  0132' C013' F00E'        	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 34728  0136' C014' F00F'        	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 34729  013A' C015' F010'        	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 34730  013E' EC00' F000'        	call	_RADIO_WriteFrequency	;wreg free
 34731                           
 34732                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 34733  0142' 0E42               	movlw	66
 34734  0144' 0100               	movlb	0	; () banked
 34735  0146' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 34736  0148' 0E3B               	movlw	59
 34737  014A' EC00' F000'        	call	_RADIO_RegisterWrite
 34738  014E'                    
 34739                           ;radio_driver_SX1276.c: 490: ;
 34740  014E' 0E3B               	movlw	59
 34741  0150' EC00' F000'        	call	_RADIO_RegisterRead
 34742  0154' 0100               	movlb	0	; () banked
 34743  0156' 6F00'              	movwf	??_RADIO_Init& (0+255),b
 34744  0158' BB00'              	btfsc	??_RADIO_Init& (0+255),5,b
 34745  015A' D7F9               	goto	l448
 34746                           
 34747                           ; BSR set to: 0
 34748                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 34749                           
 34750                           ; BSR set to: 0
 34751  015C' 0E23               	movlw	35
 34752  015E' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 34753  0160' 0E0C               	movlw	12
 34754  0162' EC00' F000'        	call	_RADIO_RegisterWrite
 34755                           
 34756                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 34757  0166' 0E1E               	movlw	30
 34758  0168' 0100               	movlb	0	; () banked
 34759  016A' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 34760  016C' 0E0D               	movlw	13
 34761  016E' EC00' F000'        	call	_RADIO_RegisterWrite
 34762                           
 34763                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 34764  0172' 0EAA               	movlw	170
 34765  0174' 0100               	movlb	0	; () banked
 34766  0176' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 34767  0178' 0E1F               	movlw	31
 34768  017A' EC00' F000'        	call	_RADIO_RegisterWrite
 34769                           
 34770                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 34771  017E' 0E8F               	movlw	143
 34772  0180' 0100               	movlb	0	; () banked
 34773  0182' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 34774  0184' 0E35               	movlw	53
 34775  0186' EC00' F000'        	call	_RADIO_RegisterWrite
 34776                           
 34777                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 34778  018A' 0EFF               	movlw	255
 34779  018C' 0100               	movlb	0	; () banked
 34780  018E' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 34781  0190' 0E32               	movlw	50
 34782  0192' EC00' F000'        	call	_RADIO_RegisterWrite
 34783                           
 34784                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 34785  0196' 0E40               	movlw	64
 34786  0198' 0100               	movlb	0	; () banked
 34787  019A' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 34788  019C' 0E31               	movlw	49
 34789  019E' EC00' F000'        	call	_RADIO_RegisterWrite
 34790                           
 34791                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 34792  01A2' 0E01               	movlw	1
 34793  01A4' 0100               	movlb	0	; () banked
 34794  01A6' 6F00'              	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34795  01A8' 0E01               	movlw	1
 34796  01AA' 6F00'              	movwf	RADIO_WriteMode@blocking& (0+255),b
 34797  01AC' 0E00               	movlw	0
 34798  01AE' EC00' F000'        	call	_RADIO_WriteMode
 34799                           
 34800                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 34801  01B2' 0EFF               	movlw	255
 34802  01B4' 0100               	movlb	0	; () banked
 34803  01B6' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 34804  01B8' 0E23               	movlw	35
 34805  01BA' EC00' F000'        	call	_RADIO_RegisterWrite
 34806                           
 34807                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 34808  01BE' 0E42               	movlw	66
 34809  01C0' EC00' F000'        	call	_RADIO_RegisterRead
 34810  01C4' 0101               	movlb	1	; () banked
 34811  01C6' 6F00'              	movwf	(_RadioConfiguration+49)& (0+255),b
 34812                           
 34813                           ; BSR set to: 1
 34814  01C8' 0012               	return		;funcret
 34815  01CA'                    __end_of_RADIO_Init:
 34816                           	opt stack 0
 34817                           tosu	equ	0xFFF
 34818                           tosh	equ	0xFFE
 34819                           tosl	equ	0xFFD
 34820                           pclath	equ	0xFFA
 34821                           tblptru	equ	0xFF8
 34822                           tblptrh	equ	0xFF7
 34823                           tblptrl	equ	0xFF6
 34824                           tablat	equ	0xFF5
 34825                           prodh	equ	0xFF4
 34826                           prodl	equ	0xFF3
 34827                           intcon	equ	0xFF2
 34828                           intcon2	equ	0xFF1
 34829                           intcon3	equ	0xFF0
 34830                           indf0	equ	0xFEF
 34831                           postinc0	equ	0xFEE
 34832                           plusw0	equ	0xFEB
 34833                           fsr0h	equ	0xFEA
 34834                           fsr0l	equ	0xFE9
 34835                           wreg	equ	0xFE8
 34836                           postinc1	equ	0xFE6
 34837                           postdec1	equ	0xFE5
 34838                           plusw1	equ	0xFE3
 34839                           fsr1h	equ	0xFE2
 34840                           fsr1l	equ	0xFE1
 34841                           indf2	equ	0xFDF
 34842                           postinc2	equ	0xFDE
 34843                           postdec2	equ	0xFDD
 34844                           plusw2	equ	0xFDB
 34845                           fsr2h	equ	0xFDA
 34846                           fsr2l	equ	0xFD9
 34847                           status	equ	0xFD8
 34848                           
 34849 ;; *************** function _SwTimerSetCallback *****************
 34850 ;; Defined at:
 34851 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 34852 ;; Parameters:    Size  Location     Type
 34853 ;;  timerId         1    wreg     unsigned char 
 34854 ;;  callback        2    0[BANK0 ] PTR FTN(unsigned char ,)
 34855 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 34856 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 34857 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 34858 ;;  callbackPara    1    2[BANK0 ] unsigned char 
 34859 ;; Auto vars:     Size  Location     Type
 34860 ;;  timerId         1    3[BANK0 ] unsigned char 
 34861 ;; Return value:  Size  Location     Type
 34862 ;;                  1    wreg      void 
 34863 ;; Registers used:
 34864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34865 ;; Tracked objects:
 34866 ;;		On entry : 0/0
 34867 ;;		On exit  : 0/0
 34868 ;;		Unchanged: 0/0
 34869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34870 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34871 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34873 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34874 ;;Total ram usage:        4 bytes
 34875 ;; Hardware stack levels used:    1
 34876 ;; Hardware stack levels required when called:    7
 34877 ;; This function calls:
 34878 ;;		Nothing
 34879 ;; This function is called by:
 34880 ;;		_RADIO_Init
 34881 ;;		_SetCallbackSoftwareTimers
 34882 ;; This function uses a non-reentrant model
 34883 ;;
 34884                           
 34885                           	psect	text158
 34886  0000'                    __ptext158:
 34887                           	opt stack 0
 34888  0000'                    _SwTimerSetCallback:
 34889                           	opt stack 21
 34890                           
 34891                           ; BSR set to: 1
 34892                           ;incstack = 0
 34893                           ;SwTimerSetCallback@timerId stored from wreg
 34894  0000' 0100               	movlb	0	; () banked
 34895  0002' 6F00'              	movwf	SwTimerSetCallback@timerId& (0+255),b
 34896                           
 34897                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 34898  0004' 0100               	movlb	0	; () banked
 34899  0006' 5100'              	movf	SwTimerSetCallback@timerId& (0+255),w,b
 34900  0008' 0D08               	mullw	8
 34901  000A' 0E06               	movlw	6
 34902  000C' 26F3               	addwf	prodl,f,c
 34903  000E' 0E00               	movlw	0
 34904  0010' 22F4               	addwfc	prodh,f,c
 34905  0012' 0E00'              	movlw	low _swTimers
 34906  0014' 24F3               	addwf	prodl,w,c
 34907  0016' 6ED9               	movwf	fsr2l,c
 34908  0018' 0E00'              	movlw	high _swTimers
 34909  001A' 20F4               	addwfc	prodh,w,c
 34910  001C' 6EDA               	movwf	fsr2h,c
 34911  001E' C000' FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 34912  0022' C001' FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 34913                           
 34914                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 34915  0026' 5100'              	movf	SwTimerSetCallback@timerId& (0+255),w,b
 34916  0028' 0D08               	mullw	8
 34917  002A' 0E05               	movlw	5
 34918  002C' 26F3               	addwf	prodl,f,c
 34919  002E' 0E00               	movlw	0
 34920  0030' 22F4               	addwfc	prodh,f,c
 34921  0032' 0E00'              	movlw	low _swTimers
 34922  0034' 24F3               	addwf	prodl,w,c
 34923  0036' 6ED9               	movwf	fsr2l,c
 34924  0038' 0E00'              	movlw	high _swTimers
 34925  003A' 20F4               	addwfc	prodh,w,c
 34926  003C' 6EDA               	movwf	fsr2h,c
 34927  003E' C002' FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 34928                           
 34929                           ; BSR set to: 0
 34930  0042' 0012               	return		;funcret
 34931  0044'                    __end_of_SwTimerSetCallback:
 34932                           	opt stack 0
 34933                           tosu	equ	0xFFF
 34934                           tosh	equ	0xFFE
 34935                           tosl	equ	0xFFD
 34936                           pclath	equ	0xFFA
 34937                           tblptru	equ	0xFF8
 34938                           tblptrh	equ	0xFF7
 34939                           tblptrl	equ	0xFF6
 34940                           tablat	equ	0xFF5
 34941                           prodh	equ	0xFF4
 34942                           prodl	equ	0xFF3
 34943                           intcon	equ	0xFF2
 34944                           intcon2	equ	0xFF1
 34945                           intcon3	equ	0xFF0
 34946                           indf0	equ	0xFEF
 34947                           postinc0	equ	0xFEE
 34948                           plusw0	equ	0xFEB
 34949                           fsr0h	equ	0xFEA
 34950                           fsr0l	equ	0xFE9
 34951                           wreg	equ	0xFE8
 34952                           postinc1	equ	0xFE6
 34953                           postdec1	equ	0xFE5
 34954                           plusw1	equ	0xFE3
 34955                           fsr1h	equ	0xFE2
 34956                           fsr1l	equ	0xFE1
 34957                           indf2	equ	0xFDF
 34958                           postinc2	equ	0xFDE
 34959                           postdec2	equ	0xFDD
 34960                           plusw2	equ	0xFDB
 34961                           fsr2h	equ	0xFDA
 34962                           fsr2l	equ	0xFD9
 34963                           status	equ	0xFD8
 34964                           
 34965 ;; *************** function _RADIO_WriteMode *****************
 34966 ;; Defined at:
 34967 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34968 ;; Parameters:    Size  Location     Type
 34969 ;;  newMode         1    wreg     enum E7789
 34970 ;;  newModulatio    1    5[BANK0 ] enum E6984
 34971 ;;  blocking        1    6[BANK0 ] unsigned char 
 34972 ;; Auto vars:     Size  Location     Type
 34973 ;;  newMode         1   10[BANK0 ] enum E7789
 34974 ;;  opMode          1   11[BANK0 ] unsigned char 
 34975 ;;  currentMode     1    9[BANK0 ] enum E7789
 34976 ;;  dioMapping      1    8[BANK0 ] unsigned char 
 34977 ;;  currentModul    1    7[BANK0 ] enum E6984
 34978 ;; Return value:  Size  Location     Type
 34979 ;;                  1    wreg      void 
 34980 ;; Registers used:
 34981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 34982 ;; Tracked objects:
 34983 ;;		On entry : 0/0
 34984 ;;		On exit  : 0/0
 34985 ;;		Unchanged: 0/0
 34986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34987 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34988 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34990 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34991 ;;Total ram usage:        7 bytes
 34992 ;; Hardware stack levels used:    1
 34993 ;; Hardware stack levels required when called:   10
 34994 ;; This function calls:
 34995 ;;		_HALDIO5PinValue
 34996 ;;		_RADIO_RegisterRead
 34997 ;;		_RADIO_RegisterWrite
 34998 ;;		_SystemBlockingWaitMs
 34999 ;; This function is called by:
 35000 ;;		_RADIO_Init
 35001 ;;		_RADIO_WriteConfiguration
 35002 ;;		_RADIO_Transmit
 35003 ;;		_RADIO_ReceiveStart
 35004 ;;		_RADIO_ReceiveStop
 35005 ;;		_RADIO_RxDone
 35006 ;;		_RADIO_FSKPayloadReady
 35007 ;;		_RADIO_RxTimeout
 35008 ;;		_RADIO_TxDone
 35009 ;;		_RADIO_FSKPacketSent
 35010 ;;		_RADIO_ReadRandom
 35011 ;;		_RADIO_RxFSKTimeout
 35012 ;;		_RADIO_WatchdogTimeout
 35013 ;;		_RADIO_StopCW
 35014 ;; This function uses a non-reentrant model
 35015 ;;
 35016                           
 35017                           	psect	text159
 35018  0000'                    __ptext159:
 35019                           	opt stack 0
 35020  0000'                    _RADIO_WriteMode:
 35021                           	opt stack 18
 35022                           
 35023                           ; BSR set to: 0
 35024                           ;incstack = 0
 35025                           ;RADIO_WriteMode@newMode stored from wreg
 35026  0000' 0100               	movlb	0	; () banked
 35027  0002' 6F00'              	movwf	RADIO_WriteMode@newMode& (0+255),b
 35028                           
 35029                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 35030                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 35031                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 35032                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 35033                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 35034                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 35035  0004' 0100               	movlb	0	; () banked
 35036  0006' 5100'              	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 35037  0008' A4D8               	btfss	status,2,c
 35038  000A' D008               	goto	l391
 35039                           
 35040                           ; BSR set to: 0
 35041  000C' 0E06               	movlw	6
 35042  000E' 1900'              	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 35043  0010' B4D8               	btfsc	status,2,c
 35044  0012' 0012               	return	
 35045                           
 35046                           ; BSR set to: 0
 35047  0014' 0E07               	movlw	7
 35048  0016' 1900'              	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 35049  0018' B4D8               	btfsc	status,2,c
 35050  001A' 0012               	return	
 35051  001C'                    l391:
 35052                           
 35053                           ; BSR set to: 0
 35054                           ;radio_driver_SX1276.c: 159: }
 35055                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 35056                           
 35057                           ; BSR set to: 0
 35058  001C' 0E07               	movlw	7
 35059  001E' 1700'              	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 35060                           
 35061                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 35062  0020' 0E01               	movlw	1
 35063  0022' 1700'              	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 35064                           
 35065                           ; BSR set to: 0
 35066                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 35067  0024' 0E01               	movlw	1
 35068  0026' EC00' F000'        	call	_RADIO_RegisterRead
 35069  002A' 0100               	movlb	0	; () banked
 35070  002C' 6F00'              	movwf	RADIO_WriteMode@opMode& (0+255),b
 35071                           
 35072                           ; BSR set to: 0
 35073                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 35074  002E' AF00'              	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 35075  0030' D002               	goto	l395
 35076                           
 35077                           ; BSR set to: 0
 35078                           ;radio_driver_SX1276.c: 168: {
 35079                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 35080  0032' 0E01               	movlw	1
 35081  0034' D001               	goto	L26
 35082  0036'                    l395:
 35083                           
 35084                           ; BSR set to: 0
 35085                           ;radio_driver_SX1276.c: 171: else
 35086                           ;radio_driver_SX1276.c: 172: {
 35087                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 35088                           
 35089                           ; BSR set to: 0
 35090  0036' 0E00               	movlw	0
 35091  0038'                    L26:
 35092  0038' 6F00'              	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 35093                           
 35094                           ; BSR set to: 0
 35095                           ;radio_driver_SX1276.c: 174: }
 35096                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 35097                           
 35098                           ; BSR set to: 0
 35099  003A' 5100'              	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35100  003C' 0B07               	andlw	7
 35101  003E' 6F00'              	movwf	RADIO_WriteMode@currentMode& (0+255),b
 35102                           
 35103                           ; BSR set to: 0
 35104                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 35105  0040' 5100'              	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 35106  0042' 1900'              	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 35107  0044' B4D8               	btfsc	status,2,c
 35108  0046' D01B               	goto	l397
 35109                           
 35110                           ; BSR set to: 0
 35111                           ;radio_driver_SX1276.c: 181: {
 35112                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 35113  0048' 5100'              	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 35114  004A' B4D8               	btfsc	status,2,c
 35115  004C' D009               	goto	l398
 35116                           
 35117                           ; BSR set to: 0
 35118                           ;radio_driver_SX1276.c: 184: {
 35119                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 35120  004E' 5100'              	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35121  0050' 0BF8               	andlw	248
 35122  0052' 6F00'              	movwf	RADIO_RegisterWrite@value& (0+255),b
 35123  0054' 0E01               	movlw	1
 35124  0056' EC00' F000'        	call	_RADIO_RegisterWrite
 35125                           
 35126                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 35127  005A' 0E00               	movlw	0
 35128  005C' 0100               	movlb	0	; () banked
 35129  005E' 6F00'              	movwf	RADIO_WriteMode@currentMode& (0+255),b
 35130  0060'                    l398:
 35131                           
 35132                           ; BSR set to: 0
 35133                           ;radio_driver_SX1276.c: 188: }
 35134                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 35135                           
 35136                           ; BSR set to: 0
 35137  0060' 5100'              	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 35138  0062' A4D8               	btfss	status,2,c
 35139  0064' D003               	goto	l399
 35140                           
 35141                           ; BSR set to: 0
 35142                           ;radio_driver_SX1276.c: 191: {
 35143                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 35144  0066' 5100'              	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35145  0068' 0B78               	andlw	120
 35146  006A' D003               	goto	L27
 35147  006C'                    l399:
 35148                           
 35149                           ; BSR set to: 0
 35150                           ;radio_driver_SX1276.c: 195: else
 35151                           ;radio_driver_SX1276.c: 196: {
 35152                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 35153                           
 35154                           ; BSR set to: 0
 35155  006C' 5100'              	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35156  006E' 0B78               	andlw	120
 35157  0070' 0980               	iorlw	128
 35158  0072'                    L27:
 35159  0072' 6F00'              	movwf	RADIO_WriteMode@opMode& (0+255),b
 35160                           
 35161                           ; BSR set to: 0
 35162                           ;radio_driver_SX1276.c: 199: }
 35163                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 35164                           
 35165                           ; BSR set to: 0
 35166  0074' C00B' F001'        	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 35167  0078' 0E01               	movlw	1
 35168  007A' EC00' F000'        	call	_RADIO_RegisterWrite
 35169  007E'                    l397:
 35170                           
 35171                           ;radio_driver_SX1276.c: 201: }
 35172                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 35173  007E' 0100               	movlb	0	; () banked
 35174  0080' 5100'              	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 35175  0082' 1900'              	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 35176  0084' B4D8               	btfsc	status,2,c
 35177  0086' 0012               	return	
 35178                           
 35179                           ; BSR set to: 0
 35180                           ;radio_driver_SX1276.c: 208: {
 35181                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 35182  0088' 5100'              	movf	RADIO_WriteMode@newMode& (0+255),w,b
 35183  008A' B4D8               	btfsc	status,2,c
 35184  008C' D015               	goto	l402
 35185                           
 35186                           ; BSR set to: 0
 35187  008E' 0500'              	decf	RADIO_WriteMode@blocking& (0+255),w,b
 35188  0090' A4D8               	btfss	status,2,c
 35189  0092' D012               	goto	l402
 35190                           
 35191                           ; BSR set to: 0
 35192                           ;radio_driver_SX1276.c: 212: {
 35193                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 35194  0094' 0E41               	movlw	65
 35195  0096' EC00' F000'        	call	_RADIO_RegisterRead
 35196  009A' 0100               	movlb	0	; () banked
 35197  009C' 6F00'              	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 35198                           
 35199                           ; BSR set to: 0
 35200                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 35201  009E' 5100'              	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 35202  00A0' A4D8               	btfss	status,2,c
 35203  00A2' D003               	goto	l403
 35204                           
 35205                           ; BSR set to: 0
 35206                           ;radio_driver_SX1276.c: 215: {
 35207                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 35208  00A4' 0E30               	movlw	48
 35209  00A6' 1300'              	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 35210                           
 35211                           ;radio_driver_SX1276.c: 218: }
 35212  00A8' D002               	goto	l404
 35213  00AA'                    l403:
 35214                           
 35215                           ; BSR set to: 0
 35216                           ;radio_driver_SX1276.c: 219: else
 35217                           ;radio_driver_SX1276.c: 220: {
 35218                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 35219                           
 35220                           ; BSR set to: 0
 35221  00AA' 0ECF               	movlw	207
 35222  00AC' 1700'              	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 35223  00AE'                    l404:
 35224                           
 35225                           ; BSR set to: 0
 35226                           ;radio_driver_SX1276.c: 223: }
 35227                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 35228                           
 35229                           ; BSR set to: 0
 35230  00AE' C008' F001'        	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 35231  00B2' 0E41               	movlw	65
 35232  00B4' EC00' F000'        	call	_RADIO_RegisterWrite
 35233  00B8'                    l402:
 35234                           
 35235                           ;radio_driver_SX1276.c: 225: }
 35236                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 35237  00B8' 0EF8               	movlw	248
 35238  00BA' 0100               	movlb	0	; () banked
 35239  00BC' 1700'              	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 35240                           
 35241                           ; BSR set to: 0
 35242                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 35243  00BE' 5100'              	movf	RADIO_WriteMode@newMode& (0+255),w,b
 35244  00C0' 1300'              	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 35245                           
 35246                           ; BSR set to: 0
 35247                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 35248  00C2' C00B' F001'        	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 35249  00C6' 0E01               	movlw	1
 35250  00C8' EC00' F000'        	call	_RADIO_RegisterWrite
 35251                           
 35252                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 35253  00CC' 0100               	movlb	0	; () banked
 35254  00CE' 0500'              	decf	RADIO_WriteMode@blocking& (0+255),w,b
 35255  00D0' A4D8               	btfss	status,2,c
 35256  00D2' 0012               	return	
 35257                           
 35258                           ; BSR set to: 0
 35259                           ;radio_driver_SX1276.c: 234: {
 35260                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 35261  00D4' 5100'              	movf	RADIO_WriteMode@newMode& (0+255),w,b
 35262  00D6' B4D8               	btfsc	status,2,c
 35263  00D8' D006               	goto	l406
 35264  00DA'                    u14580:
 35265                           
 35266                           ; BSR set to: 0
 35267                           
 35268                           ;radio_driver_SX1276.c: 238: ;
 35269                           
 35270                           ; BSR set to: 0
 35271                           
 35272                           ; BSR set to: 0
 35273                           ;radio_driver_SX1276.c: 236: {
 35274                           ;radio_driver_SX1276.c: 237: while (HALDIO5PinValue() == 0)
 35275  00DA' EC00' F000'        	call	_HALDIO5PinValue	;wreg free
 35276  00DE' 0900               	iorlw	0
 35277  00E0' A4D8               	btfss	status,2,c
 35278  00E2' 0012               	return	
 35279  00E4' D7FA               	goto	u14580
 35280  00E6'                    l406:
 35281                           
 35282                           ;radio_driver_SX1276.c: 240: else
 35283                           ;radio_driver_SX1276.c: 241: {
 35284                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 35285  00E6' 0E01               	movlw	1
 35286  00E8' 0100               	movlb	0	; () banked
 35287  00EA' 6F00'              	movwf	SystemBlockingWaitMs@ms& (0+255),b
 35288  00EC' 0E00               	movlw	0
 35289  00EE' 6F00'              	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 35290  00F0' 0E00               	movlw	0
 35291  00F2' 6F00'              	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 35292  00F4' 0E00               	movlw	0
 35293  00F6' 6F00'              	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 35294  00F8' EC00' F000'        	call	_SystemBlockingWaitMs	;wreg free
 35295  00FC' 0012               	return	
 35296  00FE'                    __end_of_RADIO_WriteMode:
 35297                           	opt stack 0
 35298                           tosu	equ	0xFFF
 35299                           tosh	equ	0xFFE
 35300                           tosl	equ	0xFFD
 35301                           pclath	equ	0xFFA
 35302                           tblptru	equ	0xFF8
 35303                           tblptrh	equ	0xFF7
 35304                           tblptrl	equ	0xFF6
 35305                           tablat	equ	0xFF5
 35306                           prodh	equ	0xFF4
 35307                           prodl	equ	0xFF3
 35308                           intcon	equ	0xFF2
 35309                           intcon2	equ	0xFF1
 35310                           intcon3	equ	0xFF0
 35311                           indf0	equ	0xFEF
 35312                           postinc0	equ	0xFEE
 35313                           plusw0	equ	0xFEB
 35314                           fsr0h	equ	0xFEA
 35315                           fsr0l	equ	0xFE9
 35316                           wreg	equ	0xFE8
 35317                           postinc1	equ	0xFE6
 35318                           postdec1	equ	0xFE5
 35319                           plusw1	equ	0xFE3
 35320                           fsr1h	equ	0xFE2
 35321                           fsr1l	equ	0xFE1
 35322                           indf2	equ	0xFDF
 35323                           postinc2	equ	0xFDE
 35324                           postdec2	equ	0xFDD
 35325                           plusw2	equ	0xFDB
 35326                           fsr2h	equ	0xFDA
 35327                           fsr2l	equ	0xFD9
 35328                           status	equ	0xFD8
 35329                           
 35330 ;; *************** function _RADIO_RegisterRead *****************
 35331 ;; Defined at:
 35332 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35333 ;; Parameters:    Size  Location     Type
 35334 ;;  reg             1    wreg     unsigned char 
 35335 ;; Auto vars:     Size  Location     Type
 35336 ;;  reg             1    1[BANK0 ] unsigned char 
 35337 ;;  readValue       1    2[BANK0 ] unsigned char 
 35338 ;; Return value:  Size  Location     Type
 35339 ;;                  1    wreg      unsigned char 
 35340 ;; Registers used:
 35341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 35342 ;; Tracked objects:
 35343 ;;		On entry : 0/0
 35344 ;;		On exit  : 0/0
 35345 ;;		Unchanged: 0/0
 35346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35348 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35350 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35351 ;;Total ram usage:        2 bytes
 35352 ;; Hardware stack levels used:    1
 35353 ;; Hardware stack levels required when called:    9
 35354 ;; This function calls:
 35355 ;;		_HALSPICSAssert
 35356 ;;		_HALSPICSDeassert
 35357 ;;		_HALSPISend
 35358 ;; This function is called by:
 35359 ;;		_RADIO_WriteMode
 35360 ;;		_RADIO_WritePower
 35361 ;;		_RADIO_Init
 35362 ;;		_RADIO_WriteConfiguration
 35363 ;;		_RADIO_Transmit
 35364 ;;		_RADIO_RxDone
 35365 ;;		_RADIO_FSKPayloadReady
 35366 ;;		_RADIO_FSKPacketSent
 35367 ;;		_RADIO_FHSSChangeChannel
 35368 ;;		_RADIO_DIO0
 35369 ;;		_RADIO_DIO1
 35370 ;;		_RADIO_DIO2
 35371 ;;		_RADIO_DIO3
 35372 ;;		_RADIO_DIO4
 35373 ;;		_RADIO_DIO5
 35374 ;;		_RADIO_ReadRandom
 35375 ;;		_RADIO_RxFSKTimeout
 35376 ;; This function uses a non-reentrant model
 35377 ;;
 35378                           
 35379                           	psect	text160
 35380  0000'                    __ptext160:
 35381                           	opt stack 0
 35382  0000'                    _RADIO_RegisterRead:
 35383                           	opt stack 18
 35384                           
 35385                           ;incstack = 0
 35386                           ;RADIO_RegisterRead@reg stored from wreg
 35387  0000' 0100               	movlb	0	; () banked
 35388  0002' 6F00'              	movwf	RADIO_RegisterRead@reg& (0+255),b
 35389                           
 35390                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 35391                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 35392  0004' 0100               	movlb	0	; () banked
 35393  0006' 9F00'              	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 35394                           
 35395                           ; BSR set to: 0
 35396                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 35397  0008' EC00' F000'        	call	_HALSPICSAssert	;wreg free
 35398                           
 35399                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 35400  000C' 0100               	movlb	0	; () banked
 35401  000E' 5100'              	movf	RADIO_RegisterRead@reg& (0+255),w,b
 35402  0010' EC00' F000'        	call	_HALSPISend
 35403                           
 35404                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 35405  0014' 0EFF               	movlw	255
 35406  0016' EC00' F000'        	call	_HALSPISend
 35407  001A' 0100               	movlb	0	; () banked
 35408  001C' 6F00'              	movwf	RADIO_RegisterRead@readValue& (0+255),b
 35409                           
 35410                           ; BSR set to: 0
 35411                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 35412  001E' EC00' F000'        	call	_HALSPICSDeassert	;wreg free
 35413                           
 35414                           ;radio_driver_SX1276.c: 142: return readValue;
 35415  0022' 0100               	movlb	0	; () banked
 35416  0024' 5100'              	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 35417  0026' 0012               	return	
 35418  0028'                    __end_of_RADIO_RegisterRead:
 35419                           	opt stack 0
 35420                           tosu	equ	0xFFF
 35421                           tosh	equ	0xFFE
 35422                           tosl	equ	0xFFD
 35423                           pclath	equ	0xFFA
 35424                           tblptru	equ	0xFF8
 35425                           tblptrh	equ	0xFF7
 35426                           tblptrl	equ	0xFF6
 35427                           tablat	equ	0xFF5
 35428                           prodh	equ	0xFF4
 35429                           prodl	equ	0xFF3
 35430                           intcon	equ	0xFF2
 35431                           intcon2	equ	0xFF1
 35432                           intcon3	equ	0xFF0
 35433                           indf0	equ	0xFEF
 35434                           postinc0	equ	0xFEE
 35435                           plusw0	equ	0xFEB
 35436                           fsr0h	equ	0xFEA
 35437                           fsr0l	equ	0xFE9
 35438                           wreg	equ	0xFE8
 35439                           postinc1	equ	0xFE6
 35440                           postdec1	equ	0xFE5
 35441                           plusw1	equ	0xFE3
 35442                           fsr1h	equ	0xFE2
 35443                           fsr1l	equ	0xFE1
 35444                           indf2	equ	0xFDF
 35445                           postinc2	equ	0xFDE
 35446                           postdec2	equ	0xFDD
 35447                           plusw2	equ	0xFDB
 35448                           fsr2h	equ	0xFDA
 35449                           fsr2l	equ	0xFD9
 35450                           status	equ	0xFD8
 35451                           
 35452 ;; *************** function _HALDIO5PinValue *****************
 35453 ;; Defined at:
 35454 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 35455 ;; Parameters:    Size  Location     Type
 35456 ;;		None
 35457 ;; Auto vars:     Size  Location     Type
 35458 ;;		None
 35459 ;; Return value:  Size  Location     Type
 35460 ;;                  1    wreg      unsigned char 
 35461 ;; Registers used:
 35462 ;;		wreg
 35463 ;; Tracked objects:
 35464 ;;		On entry : 0/0
 35465 ;;		On exit  : 0/0
 35466 ;;		Unchanged: 0/0
 35467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35472 ;;Total ram usage:        0 bytes
 35473 ;; Hardware stack levels used:    1
 35474 ;; Hardware stack levels required when called:    7
 35475 ;; This function calls:
 35476 ;;		Nothing
 35477 ;; This function is called by:
 35478 ;;		_RADIO_WriteMode
 35479 ;; This function uses a non-reentrant model
 35480 ;;
 35481                           
 35482                           	psect	text161
 35483  0000'                    __ptext161:
 35484                           	opt stack 0
 35485  0000'                    _HALDIO5PinValue:
 35486                           	opt stack 20
 35487                           
 35488                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 35489                           
 35490                           ; BSR set to: 0
 35491                           ;incstack = 0
 35492  0000' A081               	btfss	3969,0,c	;volatile
 35493  0002' D002               	goto	u14110
 35494  0004' 0E01               	movlw	1
 35495  0006' 0012               	return	
 35496  0008'                    u14110:
 35497  0008' 0E00               	movlw	0
 35498  000A' 0012               	return	
 35499  000C'                    __end_of_HALDIO5PinValue:
 35500                           	opt stack 0
 35501                           tosu	equ	0xFFF
 35502                           tosh	equ	0xFFE
 35503                           tosl	equ	0xFFD
 35504                           pclath	equ	0xFFA
 35505                           tblptru	equ	0xFF8
 35506                           tblptrh	equ	0xFF7
 35507                           tblptrl	equ	0xFF6
 35508                           tablat	equ	0xFF5
 35509                           prodh	equ	0xFF4
 35510                           prodl	equ	0xFF3
 35511                           intcon	equ	0xFF2
 35512                           intcon2	equ	0xFF1
 35513                           intcon3	equ	0xFF0
 35514                           indf0	equ	0xFEF
 35515                           postinc0	equ	0xFEE
 35516                           plusw0	equ	0xFEB
 35517                           fsr0h	equ	0xFEA
 35518                           fsr0l	equ	0xFE9
 35519                           wreg	equ	0xFE8
 35520                           postinc1	equ	0xFE6
 35521                           postdec1	equ	0xFE5
 35522                           plusw1	equ	0xFE3
 35523                           fsr1h	equ	0xFE2
 35524                           fsr1l	equ	0xFE1
 35525                           indf2	equ	0xFDF
 35526                           postinc2	equ	0xFDE
 35527                           postdec2	equ	0xFDD
 35528                           plusw2	equ	0xFDB
 35529                           fsr2h	equ	0xFDA
 35530                           fsr2l	equ	0xFD9
 35531                           status	equ	0xFD8
 35532                           
 35533 ;; *************** function _RADIO_WriteFrequency *****************
 35534 ;; Defined at:
 35535 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35536 ;; Parameters:    Size  Location     Type
 35537 ;;  frequency       4   13[BANK0 ] unsigned long 
 35538 ;; Auto vars:     Size  Location     Type
 35539 ;;  num             4   21[BANK0 ] unsigned long 
 35540 ;;  num_mod         4   17[BANK0 ] unsigned long 
 35541 ;; Return value:  Size  Location     Type
 35542 ;;                  1    wreg      void 
 35543 ;; Registers used:
 35544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 35545 ;; Tracked objects:
 35546 ;;		On entry : 0/0
 35547 ;;		On exit  : 0/0
 35548 ;;		Unchanged: 0/0
 35549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35550 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35551 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35553 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35554 ;;Total ram usage:       12 bytes
 35555 ;; Hardware stack levels used:    1
 35556 ;; Hardware stack levels required when called:   10
 35557 ;; This function calls:
 35558 ;;		_RADIO_RegisterWrite
 35559 ;;		___lldiv
 35560 ;;		___llmod
 35561 ;; This function is called by:
 35562 ;;		_RADIO_Init
 35563 ;;		_RADIO_WriteConfiguration
 35564 ;;		_RADIO_FHSSChangeChannel
 35565 ;; This function uses a non-reentrant model
 35566 ;;
 35567                           
 35568                           	psect	text162
 35569  0000'                    __ptext162:
 35570                           	opt stack 0
 35571  0000'                    _RADIO_WriteFrequency:
 35572                           	opt stack 17
 35573                           
 35574                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 35575                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 35576                           
 35577                           ;incstack = 0
 35578  0000' C00D' F000'        	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 35579  0004' C00E' F001'        	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 35580  0008' C00F' F002'        	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 35581  000C' C010' F003'        	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 35582  0010' 0E09               	movlw	9
 35583  0012' 0100               	movlb	0	; () banked
 35584  0014' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 35585  0016' 0E3D               	movlw	61
 35586  0018' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 35587  001A' 0E00               	movlw	0
 35588  001C' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 35589  001E' 0E00               	movlw	0
 35590  0020' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 35591  0022' EC00' F000'        	call	___lldiv	;wreg free
 35592  0026' C000' F015'        	movff	?___lldiv,RADIO_WriteFrequency@num
 35593  002A' C001' F016'        	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 35594  002E' C002' F017'        	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 35595  0032' C003' F018'        	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 35596                           
 35597                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 35598  0036' C00D' F000'        	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 35599  003A' C00E' F001'        	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 35600  003E' C00F' F002'        	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 35601  0042' C010' F003'        	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 35602  0046' 0E09               	movlw	9
 35603  0048' 0100               	movlb	0	; () banked
 35604  004A' 6F00'              	movwf	___llmod@divisor& (0+255),b
 35605  004C' 0E3D               	movlw	61
 35606  004E' 6F00'              	movwf	(___llmod@divisor+1)& (0+255),b
 35607  0050' 0E00               	movlw	0
 35608  0052' 6F00'              	movwf	(___llmod@divisor+2)& (0+255),b
 35609  0054' 0E00               	movlw	0
 35610  0056' 6F00'              	movwf	(___llmod@divisor+3)& (0+255),b
 35611  0058' EC00' F000'        	call	___llmod	;wreg free
 35612  005C' C000' F011'        	movff	?___llmod,RADIO_WriteFrequency@num_mod
 35613  0060' C001' F012'        	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 35614  0064' C002' F013'        	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 35615  0068' C003' F014'        	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 35616                           
 35617                           ;radio_driver_SX1276.c: 277: num <<= (8);
 35618  006C' C017' F018'        	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 35619  0070' C016' F017'        	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 35620  0074' C015' F016'        	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 35621  0078' 0100               	movlb	0	; () banked
 35622  007A' 6B00'              	clrf	RADIO_WriteFrequency@num& (0+255),b
 35623                           
 35624                           ; BSR set to: 0
 35625                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 35626  007C' C013' F014'        	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 35627  0080' C012' F013'        	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 35628  0084' C011' F012'        	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 35629  0088' 6B00'              	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 35630                           
 35631                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 35632  008A' C011' F000'        	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 35633  008E' C012' F001'        	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 35634  0092' C013' F002'        	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 35635  0096' C014' F003'        	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 35636  009A' 0E09               	movlw	9
 35637  009C' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 35638  009E' 0E3D               	movlw	61
 35639  00A0' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 35640  00A2' 0E00               	movlw	0
 35641  00A4' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 35642  00A6' 0E00               	movlw	0
 35643  00A8' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 35644  00AA' EC00' F000'        	call	___lldiv	;wreg free
 35645  00AE' C000' F011'        	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 35646  00B2' C001' F012'        	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 35647  00B6' C002' F013'        	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 35648  00BA' C003' F014'        	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 35649                           
 35650                           ;radio_driver_SX1276.c: 283: num += num_mod;
 35651  00BE' 0100               	movlb	0	; () banked
 35652  00C0' 5100'              	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 35653  00C2' 2700'              	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 35654  00C4' 5100'              	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 35655  00C6' 2300'              	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 35656  00C8' 5100'              	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 35657  00CA' 2300'              	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 35658  00CC' 5100'              	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 35659  00CE' 2300'              	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 35660                           
 35661                           ; BSR set to: 0
 35662                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 35663  00D0' C017' F001'        	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 35664  00D4' 0E06               	movlw	6
 35665  00D6' EC00' F000'        	call	_RADIO_RegisterWrite
 35666                           
 35667                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 35668  00DA' C016' F001'        	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 35669  00DE' 0E07               	movlw	7
 35670  00E0' EC00' F000'        	call	_RADIO_RegisterWrite
 35671                           
 35672                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 35673  00E4' C015' F001'        	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 35674  00E8' 0E08               	movlw	8
 35675  00EA' EC00' F000'        	call	_RADIO_RegisterWrite
 35676  00EE' 0012               	return		;funcret
 35677  00F0'                    __end_of_RADIO_WriteFrequency:
 35678                           	opt stack 0
 35679                           tosu	equ	0xFFF
 35680                           tosh	equ	0xFFE
 35681                           tosl	equ	0xFFD
 35682                           pclath	equ	0xFFA
 35683                           tblptru	equ	0xFF8
 35684                           tblptrh	equ	0xFF7
 35685                           tblptrl	equ	0xFF6
 35686                           tablat	equ	0xFF5
 35687                           prodh	equ	0xFF4
 35688                           prodl	equ	0xFF3
 35689                           intcon	equ	0xFF2
 35690                           intcon2	equ	0xFF1
 35691                           intcon3	equ	0xFF0
 35692                           indf0	equ	0xFEF
 35693                           postinc0	equ	0xFEE
 35694                           plusw0	equ	0xFEB
 35695                           fsr0h	equ	0xFEA
 35696                           fsr0l	equ	0xFE9
 35697                           wreg	equ	0xFE8
 35698                           postinc1	equ	0xFE6
 35699                           postdec1	equ	0xFE5
 35700                           plusw1	equ	0xFE3
 35701                           fsr1h	equ	0xFE2
 35702                           fsr1l	equ	0xFE1
 35703                           indf2	equ	0xFDF
 35704                           postinc2	equ	0xFDE
 35705                           postdec2	equ	0xFDD
 35706                           plusw2	equ	0xFDB
 35707                           fsr2h	equ	0xFDA
 35708                           fsr2l	equ	0xFD9
 35709                           status	equ	0xFD8
 35710                           
 35711 ;; *************** function ___llmod *****************
 35712 ;; Defined at:
 35713 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 35714 ;; Parameters:    Size  Location     Type
 35715 ;;  dividend        4    0[BANK0 ] unsigned long 
 35716 ;;  divisor         4    4[BANK0 ] unsigned long 
 35717 ;; Auto vars:     Size  Location     Type
 35718 ;;  counter         1    8[BANK0 ] unsigned char 
 35719 ;; Return value:  Size  Location     Type
 35720 ;;                  4    0[BANK0 ] unsigned long 
 35721 ;; Registers used:
 35722 ;;		wreg, status,2, status,0
 35723 ;; Tracked objects:
 35724 ;;		On entry : 0/0
 35725 ;;		On exit  : 0/0
 35726 ;;		Unchanged: 0/0
 35727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35728 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35731 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35732 ;;Total ram usage:        9 bytes
 35733 ;; Hardware stack levels used:    1
 35734 ;; Hardware stack levels required when called:    7
 35735 ;; This function calls:
 35736 ;;		Nothing
 35737 ;; This function is called by:
 35738 ;;		_RADIO_WriteFrequency
 35739 ;; This function uses a non-reentrant model
 35740 ;;
 35741                           
 35742                           	psect	text163
 35743  0000'                    __ptext163:
 35744                           	opt stack 0
 35745  0000'                    ___llmod:
 35746                           	opt stack 19
 35747                           
 35748                           ;incstack = 0
 35749  0000' 0100               	movlb	0	; () banked
 35750  0002' 5100'              	movf	___llmod@divisor& (0+255),w,b
 35751  0004' 1100'              	iorwf	(___llmod@divisor+1)& (0+255),w,b
 35752  0006' 1100'              	iorwf	(___llmod@divisor+2)& (0+255),w,b
 35753  0008' 1100'              	iorwf	(___llmod@divisor+3)& (0+255),w,b
 35754  000A' B4D8               	btfsc	status,2,c
 35755  000C' D024               	goto	l2938
 35756                           
 35757                           ; BSR set to: 0
 35758  000E' 0E01               	movlw	1
 35759  0010' 6F00'              	movwf	___llmod@counter& (0+255),b
 35760  0012' D006               	goto	l2933
 35761  0014'                    
 35762                           ; BSR set to: 0
 35763                           
 35764                           ; BSR set to: 0
 35765  0014' 90D8               	bcf	status,0,c
 35766  0016' 3700'              	rlcf	___llmod@divisor& (0+255),f,b
 35767  0018' 3700'              	rlcf	(___llmod@divisor+1)& (0+255),f,b
 35768  001A' 3700'              	rlcf	(___llmod@divisor+2)& (0+255),f,b
 35769  001C' 3700'              	rlcf	(___llmod@divisor+3)& (0+255),f,b
 35770  001E' 2B00'              	incf	___llmod@counter& (0+255),f,b
 35771  0020'                    l2933:
 35772                           
 35773                           ; BSR set to: 0
 35774                           
 35775                           ; BSR set to: 0
 35776  0020' AF00'              	btfss	(___llmod@divisor+3)& (0+255),7,b
 35777  0022' D7F8               	goto	l2934
 35778  0024'                    u14340:
 35779                           
 35780                           ; BSR set to: 0
 35781                           
 35782                           ; BSR set to: 0
 35783                           
 35784                           ; BSR set to: 0
 35785  0024' 5100'              	movf	___llmod@divisor& (0+255),w,b
 35786  0026' 5D00'              	subwf	___llmod@dividend& (0+255),w,b
 35787  0028' 5100'              	movf	(___llmod@divisor+1)& (0+255),w,b
 35788  002A' 5900'              	subwfb	(___llmod@dividend+1)& (0+255),w,b
 35789  002C' 5100'              	movf	(___llmod@divisor+2)& (0+255),w,b
 35790  002E' 5900'              	subwfb	(___llmod@dividend+2)& (0+255),w,b
 35791  0030' 5100'              	movf	(___llmod@divisor+3)& (0+255),w,b
 35792  0032' 5900'              	subwfb	(___llmod@dividend+3)& (0+255),w,b
 35793  0034' A0D8               	btfss	status,0,c
 35794  0036' D008               	goto	l2937
 35795                           
 35796                           ; BSR set to: 0
 35797  0038' 5100'              	movf	___llmod@divisor& (0+255),w,b
 35798  003A' 5F00'              	subwf	___llmod@dividend& (0+255),f,b
 35799  003C' 5100'              	movf	(___llmod@divisor+1)& (0+255),w,b
 35800  003E' 5B00'              	subwfb	(___llmod@dividend+1)& (0+255),f,b
 35801  0040' 5100'              	movf	(___llmod@divisor+2)& (0+255),w,b
 35802  0042' 5B00'              	subwfb	(___llmod@dividend+2)& (0+255),f,b
 35803  0044' 5100'              	movf	(___llmod@divisor+3)& (0+255),w,b
 35804  0046' 5B00'              	subwfb	(___llmod@dividend+3)& (0+255),f,b
 35805  0048'                    l2937:
 35806                           
 35807                           ; BSR set to: 0
 35808                           
 35809                           ; BSR set to: 0
 35810  0048' 90D8               	bcf	status,0,c
 35811  004A' 3300'              	rrcf	(___llmod@divisor+3)& (0+255),f,b
 35812  004C' 3300'              	rrcf	(___llmod@divisor+2)& (0+255),f,b
 35813  004E' 3300'              	rrcf	(___llmod@divisor+1)& (0+255),f,b
 35814  0050' 3300'              	rrcf	___llmod@divisor& (0+255),f,b
 35815                           
 35816                           ; BSR set to: 0
 35817  0052' 2F00'              	decfsz	___llmod@counter& (0+255),f,b
 35818  0054' D7E7               	goto	u14340
 35819  0056'                    l2938:
 35820                           
 35821                           ; BSR set to: 0
 35822                           
 35823                           ; BSR set to: 0
 35824  0056' C000' F000'        	movff	___llmod@dividend,?___llmod
 35825  005A' C001' F001'        	movff	___llmod@dividend+1,?___llmod+1
 35826  005E' C002' F002'        	movff	___llmod@dividend+2,?___llmod+2
 35827  0062' C003' F003'        	movff	___llmod@dividend+3,?___llmod+3
 35828                           
 35829                           ; BSR set to: 0
 35830  0066' 0012               	return		;funcret
 35831  0068'                    __end_of___llmod:
 35832                           	opt stack 0
 35833                           tosu	equ	0xFFF
 35834                           tosh	equ	0xFFE
 35835                           tosl	equ	0xFFD
 35836                           pclath	equ	0xFFA
 35837                           tblptru	equ	0xFF8
 35838                           tblptrh	equ	0xFF7
 35839                           tblptrl	equ	0xFF6
 35840                           tablat	equ	0xFF5
 35841                           prodh	equ	0xFF4
 35842                           prodl	equ	0xFF3
 35843                           intcon	equ	0xFF2
 35844                           intcon2	equ	0xFF1
 35845                           intcon3	equ	0xFF0
 35846                           indf0	equ	0xFEF
 35847                           postinc0	equ	0xFEE
 35848                           plusw0	equ	0xFEB
 35849                           fsr0h	equ	0xFEA
 35850                           fsr0l	equ	0xFE9
 35851                           wreg	equ	0xFE8
 35852                           postinc1	equ	0xFE6
 35853                           postdec1	equ	0xFE5
 35854                           plusw1	equ	0xFE3
 35855                           fsr1h	equ	0xFE2
 35856                           fsr1l	equ	0xFE1
 35857                           indf2	equ	0xFDF
 35858                           postinc2	equ	0xFDE
 35859                           postdec2	equ	0xFDD
 35860                           plusw2	equ	0xFDB
 35861                           fsr2h	equ	0xFDA
 35862                           fsr2l	equ	0xFD9
 35863                           status	equ	0xFD8
 35864                           
 35865 ;; *************** function _RADIO_RegisterWrite *****************
 35866 ;; Defined at:
 35867 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35868 ;; Parameters:    Size  Location     Type
 35869 ;;  reg             1    wreg     unsigned char 
 35870 ;;  value           1    1[BANK0 ] unsigned char 
 35871 ;; Auto vars:     Size  Location     Type
 35872 ;;  reg             1    2[BANK0 ] unsigned char 
 35873 ;; Return value:  Size  Location     Type
 35874 ;;                  1    wreg      void 
 35875 ;; Registers used:
 35876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 35877 ;; Tracked objects:
 35878 ;;		On entry : 0/0
 35879 ;;		On exit  : 0/0
 35880 ;;		Unchanged: 0/0
 35881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35882 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35883 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35885 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35886 ;;Total ram usage:        2 bytes
 35887 ;; Hardware stack levels used:    1
 35888 ;; Hardware stack levels required when called:    9
 35889 ;; This function calls:
 35890 ;;		_HALSPICSAssert
 35891 ;;		_HALSPICSDeassert
 35892 ;;		_HALSPISend
 35893 ;; This function is called by:
 35894 ;;		_RADIO_WriteMode
 35895 ;;		_RADIO_WriteFrequency
 35896 ;;		_RADIO_WriteFSKFrequencyDeviation
 35897 ;;		_RADIO_WriteFSKBitRate
 35898 ;;		_RADIO_WritePower
 35899 ;;		_RADIO_Init
 35900 ;;		_RADIO_WriteConfiguration
 35901 ;;		_RADIO_Transmit
 35902 ;;		_RADIO_ReceiveStart
 35903 ;;		_RADIO_RxDone
 35904 ;;		_RADIO_RxTimeout
 35905 ;;		_RADIO_TxDone
 35906 ;;		_RADIO_UnhandledInterrupt
 35907 ;;		_RADIO_FHSSChangeChannel
 35908 ;;		_RADIO_ReadRandom
 35909 ;;		_RADIO_TransmitCW
 35910 ;; This function uses a non-reentrant model
 35911 ;;
 35912                           
 35913                           	psect	text164
 35914  0000'                    __ptext164:
 35915                           	opt stack 0
 35916  0000'                    _RADIO_RegisterWrite:
 35917                           	opt stack 18
 35918                           
 35919                           ; BSR set to: 0
 35920                           ;incstack = 0
 35921                           ;RADIO_RegisterWrite@reg stored from wreg
 35922  0000' 0100               	movlb	0	; () banked
 35923  0002' 6F00'              	movwf	RADIO_RegisterWrite@reg& (0+255),b
 35924                           
 35925                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 35926  0004' EC00' F000'        	call	_HALSPICSAssert	;wreg free
 35927                           
 35928                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 35929  0008' 0100               	movlb	0	; () banked
 35930  000A' 5100'              	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 35931  000C' 0980               	iorlw	128
 35932  000E' EC00' F000'        	call	_HALSPISend
 35933                           
 35934                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 35935  0012' 0100               	movlb	0	; () banked
 35936  0014' 5100'              	movf	RADIO_RegisterWrite@value& (0+255),w,b
 35937  0016' EC00' F000'        	call	_HALSPISend
 35938                           
 35939                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 35940  001A' EC00' F000'        	call	_HALSPICSDeassert	;wreg free
 35941  001E' 0012               	return		;funcret
 35942  0020'                    __end_of_RADIO_RegisterWrite:
 35943                           	opt stack 0
 35944                           tosu	equ	0xFFF
 35945                           tosh	equ	0xFFE
 35946                           tosl	equ	0xFFD
 35947                           pclath	equ	0xFFA
 35948                           tblptru	equ	0xFF8
 35949                           tblptrh	equ	0xFF7
 35950                           tblptrl	equ	0xFF6
 35951                           tablat	equ	0xFF5
 35952                           prodh	equ	0xFF4
 35953                           prodl	equ	0xFF3
 35954                           intcon	equ	0xFF2
 35955                           intcon2	equ	0xFF1
 35956                           intcon3	equ	0xFF0
 35957                           indf0	equ	0xFEF
 35958                           postinc0	equ	0xFEE
 35959                           plusw0	equ	0xFEB
 35960                           fsr0h	equ	0xFEA
 35961                           fsr0l	equ	0xFE9
 35962                           wreg	equ	0xFE8
 35963                           postinc1	equ	0xFE6
 35964                           postdec1	equ	0xFE5
 35965                           plusw1	equ	0xFE3
 35966                           fsr1h	equ	0xFE2
 35967                           fsr1l	equ	0xFE1
 35968                           indf2	equ	0xFDF
 35969                           postinc2	equ	0xFDE
 35970                           postdec2	equ	0xFDD
 35971                           plusw2	equ	0xFDB
 35972                           fsr2h	equ	0xFDA
 35973                           fsr2l	equ	0xFD9
 35974                           status	equ	0xFD8
 35975                           
 35976 ;; *************** function _HALSPISend *****************
 35977 ;; Defined at:
 35978 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 35979 ;; Parameters:    Size  Location     Type
 35980 ;;  data            1    wreg     unsigned char 
 35981 ;; Auto vars:     Size  Location     Type
 35982 ;;  data            1    0[BANK0 ] unsigned char 
 35983 ;; Return value:  Size  Location     Type
 35984 ;;                  1    wreg      unsigned char 
 35985 ;; Registers used:
 35986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, bsr, cstack
 35987 ;; Tracked objects:
 35988 ;;		On entry : 0/0
 35989 ;;		On exit  : 0/0
 35990 ;;		Unchanged: 0/0
 35991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35993 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35995 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35996 ;;Total ram usage:        1 bytes
 35997 ;; Hardware stack levels used:    1
 35998 ;; Hardware stack levels required when called:    8
 35999 ;; This function calls:
 36000 ;;		_SPI2_Exchange8bit
 36001 ;; This function is called by:
 36002 ;;		_RADIO_RegisterWrite
 36003 ;;		_RADIO_RegisterRead
 36004 ;;		_RADIO_Transmit
 36005 ;;		_RADIO_RxDone
 36006 ;;		_RADIO_FSKPayloadReady
 36007 ;; This function uses a non-reentrant model
 36008 ;;
 36009                           
 36010                           	psect	text165
 36011  0000'                    __ptext165:
 36012                           	opt stack 0
 36013  0000'                    _HALSPISend:
 36014                           	opt stack 18
 36015                           
 36016                           ;incstack = 0
 36017                           ;HALSPISend@data stored from wreg
 36018  0000' 0100               	movlb	0	; () banked
 36019  0002' 6F00'              	movwf	HALSPISend@data& (0+255),b
 36020                           
 36021                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 36022  0004' C000' F000'        	movff	HALSPISend@data,?_SPI2_Exchange8bit
 36023  0008' 0100               	movlb	0	; () banked
 36024  000A' 6B00'              	clrf	(?_SPI2_Exchange8bit+1)& (0+255),b
 36025  000C' EC00' F000'        	call	_SPI2_Exchange8bit	;wreg free
 36026  0010' 0100               	movlb	0	; () banked
 36027  0012' 5100'              	movf	?_SPI2_Exchange8bit& (0+255),w,b
 36028  0014' 0012               	return	
 36029  0016'                    __end_of_HALSPISend:
 36030                           	opt stack 0
 36031                           tosu	equ	0xFFF
 36032                           tosh	equ	0xFFE
 36033                           tosl	equ	0xFFD
 36034                           pclath	equ	0xFFA
 36035                           tblptru	equ	0xFF8
 36036                           tblptrh	equ	0xFF7
 36037                           tblptrl	equ	0xFF6
 36038                           tablat	equ	0xFF5
 36039                           prodh	equ	0xFF4
 36040                           prodl	equ	0xFF3
 36041                           intcon	equ	0xFF2
 36042                           intcon2	equ	0xFF1
 36043                           intcon3	equ	0xFF0
 36044                           indf0	equ	0xFEF
 36045                           postinc0	equ	0xFEE
 36046                           plusw0	equ	0xFEB
 36047                           fsr0h	equ	0xFEA
 36048                           fsr0l	equ	0xFE9
 36049                           wreg	equ	0xFE8
 36050                           postinc1	equ	0xFE6
 36051                           postdec1	equ	0xFE5
 36052                           plusw1	equ	0xFE3
 36053                           fsr1h	equ	0xFE2
 36054                           fsr1l	equ	0xFE1
 36055                           indf2	equ	0xFDF
 36056                           postinc2	equ	0xFDE
 36057                           postdec2	equ	0xFDD
 36058                           plusw2	equ	0xFDB
 36059                           fsr2h	equ	0xFDA
 36060                           fsr2l	equ	0xFD9
 36061                           status	equ	0xFD8
 36062                           
 36063 ;; *************** function _HALSPICSDeassert *****************
 36064 ;; Defined at:
 36065 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36066 ;; Parameters:    Size  Location     Type
 36067 ;;		None
 36068 ;; Auto vars:     Size  Location     Type
 36069 ;;		None
 36070 ;; Return value:  Size  Location     Type
 36071 ;;                  1    wreg      void 
 36072 ;; Registers used:
 36073 ;;		None
 36074 ;; Tracked objects:
 36075 ;;		On entry : 0/0
 36076 ;;		On exit  : 0/0
 36077 ;;		Unchanged: 0/0
 36078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36083 ;;Total ram usage:        0 bytes
 36084 ;; Hardware stack levels used:    1
 36085 ;; Hardware stack levels required when called:    7
 36086 ;; This function calls:
 36087 ;;		Nothing
 36088 ;; This function is called by:
 36089 ;;		_RADIO_RegisterWrite
 36090 ;;		_RADIO_RegisterRead
 36091 ;;		_RADIO_Transmit
 36092 ;;		_RADIO_RxDone
 36093 ;;		_RADIO_FSKPayloadReady
 36094 ;; This function uses a non-reentrant model
 36095 ;;
 36096                           
 36097                           	psect	text166
 36098  0000'                    __ptext166:
 36099                           	opt stack 0
 36100  0000'                    _HALSPICSDeassert:
 36101                           	opt stack 19
 36102                           
 36103                           ; BSR set to: 0
 36104                           ;incstack = 0
 36105                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 36106  0000' 868C               	bsf	3980,3,c	;volatile
 36107  0002' 0012               	return	
 36108  0004'                    __end_of_HALSPICSDeassert:
 36109                           	opt stack 0
 36110                           tosu	equ	0xFFF
 36111                           tosh	equ	0xFFE
 36112                           tosl	equ	0xFFD
 36113                           pclath	equ	0xFFA
 36114                           tblptru	equ	0xFF8
 36115                           tblptrh	equ	0xFF7
 36116                           tblptrl	equ	0xFF6
 36117                           tablat	equ	0xFF5
 36118                           prodh	equ	0xFF4
 36119                           prodl	equ	0xFF3
 36120                           intcon	equ	0xFF2
 36121                           intcon2	equ	0xFF1
 36122                           intcon3	equ	0xFF0
 36123                           indf0	equ	0xFEF
 36124                           postinc0	equ	0xFEE
 36125                           plusw0	equ	0xFEB
 36126                           fsr0h	equ	0xFEA
 36127                           fsr0l	equ	0xFE9
 36128                           wreg	equ	0xFE8
 36129                           postinc1	equ	0xFE6
 36130                           postdec1	equ	0xFE5
 36131                           plusw1	equ	0xFE3
 36132                           fsr1h	equ	0xFE2
 36133                           fsr1l	equ	0xFE1
 36134                           indf2	equ	0xFDF
 36135                           postinc2	equ	0xFDE
 36136                           postdec2	equ	0xFDD
 36137                           plusw2	equ	0xFDB
 36138                           fsr2h	equ	0xFDA
 36139                           fsr2l	equ	0xFD9
 36140                           status	equ	0xFD8
 36141                           
 36142 ;; *************** function _HALSPICSAssert *****************
 36143 ;; Defined at:
 36144 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36145 ;; Parameters:    Size  Location     Type
 36146 ;;		None
 36147 ;; Auto vars:     Size  Location     Type
 36148 ;;		None
 36149 ;; Return value:  Size  Location     Type
 36150 ;;                  1    wreg      void 
 36151 ;; Registers used:
 36152 ;;		None
 36153 ;; Tracked objects:
 36154 ;;		On entry : 0/0
 36155 ;;		On exit  : 0/0
 36156 ;;		Unchanged: 0/0
 36157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36162 ;;Total ram usage:        0 bytes
 36163 ;; Hardware stack levels used:    1
 36164 ;; Hardware stack levels required when called:    7
 36165 ;; This function calls:
 36166 ;;		Nothing
 36167 ;; This function is called by:
 36168 ;;		_RADIO_RegisterWrite
 36169 ;;		_RADIO_RegisterRead
 36170 ;;		_RADIO_Transmit
 36171 ;;		_RADIO_RxDone
 36172 ;;		_RADIO_FSKPayloadReady
 36173 ;; This function uses a non-reentrant model
 36174 ;;
 36175                           
 36176                           	psect	text167
 36177  0000'                    __ptext167:
 36178                           	opt stack 0
 36179  0000'                    _HALSPICSAssert:
 36180                           	opt stack 19
 36181                           
 36182                           ;incstack = 0
 36183                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 36184  0000' 968C               	bcf	3980,3,c	;volatile
 36185  0002' 0012               	return	
 36186  0004'                    __end_of_HALSPICSAssert:
 36187                           	opt stack 0
 36188                           tosu	equ	0xFFF
 36189                           tosh	equ	0xFFE
 36190                           tosl	equ	0xFFD
 36191                           pclath	equ	0xFFA
 36192                           tblptru	equ	0xFF8
 36193                           tblptrh	equ	0xFF7
 36194                           tblptrl	equ	0xFF6
 36195                           tablat	equ	0xFF5
 36196                           prodh	equ	0xFF4
 36197                           prodl	equ	0xFF3
 36198                           intcon	equ	0xFF2
 36199                           intcon2	equ	0xFF1
 36200                           intcon3	equ	0xFF0
 36201                           indf0	equ	0xFEF
 36202                           postinc0	equ	0xFEE
 36203                           plusw0	equ	0xFEB
 36204                           fsr0h	equ	0xFEA
 36205                           fsr0l	equ	0xFE9
 36206                           wreg	equ	0xFE8
 36207                           postinc1	equ	0xFE6
 36208                           postdec1	equ	0xFE5
 36209                           plusw1	equ	0xFE3
 36210                           fsr1h	equ	0xFE2
 36211                           fsr1l	equ	0xFE1
 36212                           indf2	equ	0xFDF
 36213                           postinc2	equ	0xFDE
 36214                           postdec2	equ	0xFDD
 36215                           plusw2	equ	0xFDB
 36216                           fsr2h	equ	0xFDA
 36217                           fsr2l	equ	0xFD9
 36218                           status	equ	0xFD8
 36219                           
 36220 ;; *************** function _RADIO_Reset *****************
 36221 ;; Defined at:
 36222 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36223 ;; Parameters:    Size  Location     Type
 36224 ;;		None
 36225 ;; Auto vars:     Size  Location     Type
 36226 ;;		None
 36227 ;; Return value:  Size  Location     Type
 36228 ;;                  1    wreg      void 
 36229 ;; Registers used:
 36230 ;;		wreg, status,2, status,0, cstack
 36231 ;; Tracked objects:
 36232 ;;		On entry : 0/0
 36233 ;;		On exit  : 0/0
 36234 ;;		Unchanged: 0/0
 36235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36240 ;;Total ram usage:        0 bytes
 36241 ;; Hardware stack levels used:    1
 36242 ;; Hardware stack levels required when called:    8
 36243 ;; This function calls:
 36244 ;;		_HALResetPinMakeInput
 36245 ;;		_HALResetPinMakeOutput
 36246 ;;		_HALResetPinOutputValue
 36247 ;;		_SystemBlockingWaitMs
 36248 ;; This function is called by:
 36249 ;;		_RADIO_Init
 36250 ;; This function uses a non-reentrant model
 36251 ;;
 36252                           
 36253                           	psect	text168
 36254  0000'                    __ptext168:
 36255                           	opt stack 0
 36256  0000'                    _RADIO_Reset:
 36257                           	opt stack 20
 36258                           
 36259                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 36260                           
 36261                           ;incstack = 0
 36262  0000' EC00' F000'        	call	_HALResetPinMakeOutput	;wreg free
 36263                           
 36264                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 36265  0004' 0E00               	movlw	0
 36266  0006' EC00' F000'        	call	_HALResetPinOutputValue
 36267                           
 36268                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 36269  000A' 0E01               	movlw	1
 36270  000C' 0100               	movlb	0	; () banked
 36271  000E' 6F00'              	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36272  0010' 0E00               	movlw	0
 36273  0012' 6F00'              	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36274  0014' 0E00               	movlw	0
 36275  0016' 6F00'              	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36276  0018' 0E00               	movlw	0
 36277  001A' 6F00'              	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36278  001C' EC00' F000'        	call	_SystemBlockingWaitMs	;wreg free
 36279                           
 36280                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 36281  0020' EC00' F000'        	call	_HALResetPinMakeInput	;wreg free
 36282                           
 36283                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 36284  0024' 0E0A               	movlw	10
 36285  0026' 0100               	movlb	0	; () banked
 36286  0028' 6F00'              	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36287  002A' 0E00               	movlw	0
 36288  002C' 6F00'              	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36289  002E' 0E00               	movlw	0
 36290  0030' 6F00'              	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36291  0032' 0E00               	movlw	0
 36292  0034' 6F00'              	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36293  0036' EC00' F000'        	call	_SystemBlockingWaitMs	;wreg free
 36294                           
 36295                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 36296  003A' 0E01               	movlw	1
 36297  003C' EC00' F000'        	call	_HALResetPinOutputValue
 36298                           
 36299                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 36300  0040' EC00' F000'        	call	_HALResetPinMakeOutput	;wreg free
 36301  0044' 0012               	return		;funcret
 36302  0046'                    __end_of_RADIO_Reset:
 36303                           	opt stack 0
 36304                           tosu	equ	0xFFF
 36305                           tosh	equ	0xFFE
 36306                           tosl	equ	0xFFD
 36307                           pclath	equ	0xFFA
 36308                           tblptru	equ	0xFF8
 36309                           tblptrh	equ	0xFF7
 36310                           tblptrl	equ	0xFF6
 36311                           tablat	equ	0xFF5
 36312                           prodh	equ	0xFF4
 36313                           prodl	equ	0xFF3
 36314                           intcon	equ	0xFF2
 36315                           intcon2	equ	0xFF1
 36316                           intcon3	equ	0xFF0
 36317                           indf0	equ	0xFEF
 36318                           postinc0	equ	0xFEE
 36319                           plusw0	equ	0xFEB
 36320                           fsr0h	equ	0xFEA
 36321                           fsr0l	equ	0xFE9
 36322                           wreg	equ	0xFE8
 36323                           postinc1	equ	0xFE6
 36324                           postdec1	equ	0xFE5
 36325                           plusw1	equ	0xFE3
 36326                           fsr1h	equ	0xFE2
 36327                           fsr1l	equ	0xFE1
 36328                           indf2	equ	0xFDF
 36329                           postinc2	equ	0xFDE
 36330                           postdec2	equ	0xFDD
 36331                           plusw2	equ	0xFDB
 36332                           fsr2h	equ	0xFDA
 36333                           fsr2l	equ	0xFD9
 36334                           status	equ	0xFD8
 36335                           
 36336 ;; *************** function _SystemBlockingWaitMs *****************
 36337 ;; Defined at:
 36338 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36339 ;; Parameters:    Size  Location     Type
 36340 ;;  ms              4    0[BANK0 ] unsigned long 
 36341 ;; Auto vars:     Size  Location     Type
 36342 ;;		None
 36343 ;; Return value:  Size  Location     Type
 36344 ;;                  1    wreg      void 
 36345 ;; Registers used:
 36346 ;;		wreg, status,2, status,0
 36347 ;; Tracked objects:
 36348 ;;		On entry : 0/0
 36349 ;;		On exit  : 0/0
 36350 ;;		Unchanged: 0/0
 36351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36352 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36354 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36355 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36356 ;;Total ram usage:        5 bytes
 36357 ;; Hardware stack levels used:    1
 36358 ;; Hardware stack levels required when called:    7
 36359 ;; This function calls:
 36360 ;;		Nothing
 36361 ;; This function is called by:
 36362 ;;		_RADIO_WriteMode
 36363 ;;		_RADIO_Reset
 36364 ;;		_RADIO_ReadRandom
 36365 ;;		_RADIO_StopCW
 36366 ;; This function uses a non-reentrant model
 36367 ;;
 36368                           
 36369                           	psect	text169
 36370  0000'                    __ptext169:
 36371                           	opt stack 0
 36372  0000'                    _SystemBlockingWaitMs:
 36373                           	opt stack 20
 36374                           
 36375                           ;sw_timer.c: 147: while (ms > 0)
 36376                           
 36377                           ;incstack = 0
 36378  0000' D00F               	goto	l238
 36379  0002'                    
 36380                           ;sw_timer.c: 148: {
 36381                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 36382  0002' 0E06               	movlw	6
 36383  0004' 0100               	movlb	0	; () banked
 36384  0006' 6F00'              	movwf	??_SystemBlockingWaitMs& (0+255),b
 36385  0008' 0E30               	movlw	48
 36386  000A'                    u21697:
 36387  000A' 2EE8               	decfsz	wreg,f,c
 36388  000C' D7FE               	bra	u21697
 36389  000E' 2F00'              	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 36390  0010' D7FC               	bra	u21697
 36391  0012' F000               	nop	
 36392                           
 36393                           ;sw_timer.c: 150: ms--;
 36394  0014' 0100               	movlb	0	; () banked
 36395  0016' 0700'              	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 36396  0018' 0E00               	movlw	0
 36397  001A' 5B00'              	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 36398  001C' 5B00'              	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 36399  001E' 5B00'              	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 36400  0020'                    l238:
 36401                           
 36402                           ; BSR set to: 0
 36403  0020' 0100               	movlb	0	; () banked
 36404  0022' 5100'              	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 36405  0024' 1100'              	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 36406  0026' 1100'              	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 36407  0028' 1100'              	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 36408  002A' B4D8               	btfsc	status,2,c
 36409  002C' 0012               	return	
 36410  002E' D7E9               	goto	l239
 36411  0030'                    __end_of_SystemBlockingWaitMs:
 36412                           	opt stack 0
 36413                           tosu	equ	0xFFF
 36414                           tosh	equ	0xFFE
 36415                           tosl	equ	0xFFD
 36416                           pclath	equ	0xFFA
 36417                           tblptru	equ	0xFF8
 36418                           tblptrh	equ	0xFF7
 36419                           tblptrl	equ	0xFF6
 36420                           tablat	equ	0xFF5
 36421                           prodh	equ	0xFF4
 36422                           prodl	equ	0xFF3
 36423                           intcon	equ	0xFF2
 36424                           intcon2	equ	0xFF1
 36425                           intcon3	equ	0xFF0
 36426                           indf0	equ	0xFEF
 36427                           postinc0	equ	0xFEE
 36428                           plusw0	equ	0xFEB
 36429                           fsr0h	equ	0xFEA
 36430                           fsr0l	equ	0xFE9
 36431                           wreg	equ	0xFE8
 36432                           postinc1	equ	0xFE6
 36433                           postdec1	equ	0xFE5
 36434                           plusw1	equ	0xFE3
 36435                           fsr1h	equ	0xFE2
 36436                           fsr1l	equ	0xFE1
 36437                           indf2	equ	0xFDF
 36438                           postinc2	equ	0xFDE
 36439                           postdec2	equ	0xFDD
 36440                           plusw2	equ	0xFDB
 36441                           fsr2h	equ	0xFDA
 36442                           fsr2l	equ	0xFD9
 36443                           status	equ	0xFD8
 36444                           
 36445 ;; *************** function _HALResetPinOutputValue *****************
 36446 ;; Defined at:
 36447 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36448 ;; Parameters:    Size  Location     Type
 36449 ;;  value           1    wreg     unsigned char 
 36450 ;; Auto vars:     Size  Location     Type
 36451 ;;  value           1    0[BANK0 ] unsigned char 
 36452 ;; Return value:  Size  Location     Type
 36453 ;;                  1    wreg      void 
 36454 ;; Registers used:
 36455 ;;		wreg, status,2, status,0
 36456 ;; Tracked objects:
 36457 ;;		On entry : 0/0
 36458 ;;		On exit  : 0/0
 36459 ;;		Unchanged: 0/0
 36460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36464 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36465 ;;Total ram usage:        1 bytes
 36466 ;; Hardware stack levels used:    1
 36467 ;; Hardware stack levels required when called:    7
 36468 ;; This function calls:
 36469 ;;		Nothing
 36470 ;; This function is called by:
 36471 ;;		_RADIO_Reset
 36472 ;; This function uses a non-reentrant model
 36473 ;;
 36474                           
 36475                           	psect	text170
 36476  0000'                    __ptext170:
 36477                           	opt stack 0
 36478  0000'                    _HALResetPinOutputValue:
 36479                           	opt stack 20
 36480                           
 36481                           ; BSR set to: 0
 36482                           ;incstack = 0
 36483                           ;HALResetPinOutputValue@value stored from wreg
 36484  0000' 0100               	movlb	0	; () banked
 36485  0002' 6F00'              	movwf	HALResetPinOutputValue@value& (0+255),b
 36486                           
 36487                           ;radio_driver_hal.c: 57: if (value == 0)
 36488  0004' 0100               	movlb	0	; () banked
 36489  0006' 5100'              	movf	HALResetPinOutputValue@value& (0+255),w,b
 36490  0008' A4D8               	btfss	status,2,c
 36491  000A' D002               	goto	l148
 36492                           
 36493                           ; BSR set to: 0
 36494                           
 36495                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 36496  000C' 948B               	bcf	3979,2,c	;volatile
 36497                           
 36498                           ; BSR set to: 0
 36499  000E' 0012               	return	
 36500  0010'                    l148:
 36501                           
 36502                           ; BSR set to: 0
 36503                           ;radio_driver_hal.c: 59: else if (value == 1)
 36504                           
 36505                           ; BSR set to: 0
 36506  0010' 0500'              	decf	HALResetPinOutputValue@value& (0+255),w,b
 36507  0012' A4D8               	btfss	status,2,c
 36508  0014' 0012               	return	
 36509                           
 36510                           ; BSR set to: 0
 36511                           
 36512                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 36513  0016' 848B               	bsf	3979,2,c	;volatile
 36514                           
 36515                           ; BSR set to: 0
 36516                           
 36517                           ; BSR set to: 0
 36518  0018' 0012               	return	
 36519  001A'                    __end_of_HALResetPinOutputValue:
 36520                           	opt stack 0
 36521                           tosu	equ	0xFFF
 36522                           tosh	equ	0xFFE
 36523                           tosl	equ	0xFFD
 36524                           pclath	equ	0xFFA
 36525                           tblptru	equ	0xFF8
 36526                           tblptrh	equ	0xFF7
 36527                           tblptrl	equ	0xFF6
 36528                           tablat	equ	0xFF5
 36529                           prodh	equ	0xFF4
 36530                           prodl	equ	0xFF3
 36531                           intcon	equ	0xFF2
 36532                           intcon2	equ	0xFF1
 36533                           intcon3	equ	0xFF0
 36534                           indf0	equ	0xFEF
 36535                           postinc0	equ	0xFEE
 36536                           plusw0	equ	0xFEB
 36537                           fsr0h	equ	0xFEA
 36538                           fsr0l	equ	0xFE9
 36539                           wreg	equ	0xFE8
 36540                           postinc1	equ	0xFE6
 36541                           postdec1	equ	0xFE5
 36542                           plusw1	equ	0xFE3
 36543                           fsr1h	equ	0xFE2
 36544                           fsr1l	equ	0xFE1
 36545                           indf2	equ	0xFDF
 36546                           postinc2	equ	0xFDE
 36547                           postdec2	equ	0xFDD
 36548                           plusw2	equ	0xFDB
 36549                           fsr2h	equ	0xFDA
 36550                           fsr2l	equ	0xFD9
 36551                           status	equ	0xFD8
 36552                           
 36553 ;; *************** function _HALResetPinMakeOutput *****************
 36554 ;; Defined at:
 36555 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36556 ;; Parameters:    Size  Location     Type
 36557 ;;		None
 36558 ;; Auto vars:     Size  Location     Type
 36559 ;;		None
 36560 ;; Return value:  Size  Location     Type
 36561 ;;                  1    wreg      void 
 36562 ;; Registers used:
 36563 ;;		None
 36564 ;; Tracked objects:
 36565 ;;		On entry : 0/0
 36566 ;;		On exit  : 0/0
 36567 ;;		Unchanged: 0/0
 36568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36573 ;;Total ram usage:        0 bytes
 36574 ;; Hardware stack levels used:    1
 36575 ;; Hardware stack levels required when called:    7
 36576 ;; This function calls:
 36577 ;;		Nothing
 36578 ;; This function is called by:
 36579 ;;		_RADIO_Reset
 36580 ;; This function uses a non-reentrant model
 36581 ;;
 36582                           
 36583                           	psect	text171
 36584  0000'                    __ptext171:
 36585                           	opt stack 0
 36586  0000'                    _HALResetPinMakeOutput:
 36587                           	opt stack 20
 36588                           
 36589                           ; BSR set to: 0
 36590                           ;incstack = 0
 36591                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 36592  0000' 9494               	bcf	3988,2,c	;volatile
 36593  0002' 0012               	return	
 36594  0004'                    __end_of_HALResetPinMakeOutput:
 36595                           	opt stack 0
 36596                           tosu	equ	0xFFF
 36597                           tosh	equ	0xFFE
 36598                           tosl	equ	0xFFD
 36599                           pclath	equ	0xFFA
 36600                           tblptru	equ	0xFF8
 36601                           tblptrh	equ	0xFF7
 36602                           tblptrl	equ	0xFF6
 36603                           tablat	equ	0xFF5
 36604                           prodh	equ	0xFF4
 36605                           prodl	equ	0xFF3
 36606                           intcon	equ	0xFF2
 36607                           intcon2	equ	0xFF1
 36608                           intcon3	equ	0xFF0
 36609                           indf0	equ	0xFEF
 36610                           postinc0	equ	0xFEE
 36611                           plusw0	equ	0xFEB
 36612                           fsr0h	equ	0xFEA
 36613                           fsr0l	equ	0xFE9
 36614                           wreg	equ	0xFE8
 36615                           postinc1	equ	0xFE6
 36616                           postdec1	equ	0xFE5
 36617                           plusw1	equ	0xFE3
 36618                           fsr1h	equ	0xFE2
 36619                           fsr1l	equ	0xFE1
 36620                           indf2	equ	0xFDF
 36621                           postinc2	equ	0xFDE
 36622                           postdec2	equ	0xFDD
 36623                           plusw2	equ	0xFDB
 36624                           fsr2h	equ	0xFDA
 36625                           fsr2l	equ	0xFD9
 36626                           status	equ	0xFD8
 36627                           
 36628 ;; *************** function _HALResetPinMakeInput *****************
 36629 ;; Defined at:
 36630 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36631 ;; Parameters:    Size  Location     Type
 36632 ;;		None
 36633 ;; Auto vars:     Size  Location     Type
 36634 ;;		None
 36635 ;; Return value:  Size  Location     Type
 36636 ;;                  1    wreg      void 
 36637 ;; Registers used:
 36638 ;;		None
 36639 ;; Tracked objects:
 36640 ;;		On entry : 0/0
 36641 ;;		On exit  : 0/0
 36642 ;;		Unchanged: 0/0
 36643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36648 ;;Total ram usage:        0 bytes
 36649 ;; Hardware stack levels used:    1
 36650 ;; Hardware stack levels required when called:    7
 36651 ;; This function calls:
 36652 ;;		Nothing
 36653 ;; This function is called by:
 36654 ;;		_RADIO_Reset
 36655 ;; This function uses a non-reentrant model
 36656 ;;
 36657                           
 36658                           	psect	text172
 36659  0000'                    __ptext172:
 36660                           	opt stack 0
 36661  0000'                    _HALResetPinMakeInput:
 36662                           	opt stack 20
 36663                           
 36664                           ;incstack = 0
 36665                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 36666  0000' 8494               	bsf	3988,2,c	;volatile
 36667  0002' 0012               	return	
 36668  0004'                    __end_of_HALResetPinMakeInput:
 36669                           	opt stack 0
 36670                           tosu	equ	0xFFF
 36671                           tosh	equ	0xFFE
 36672                           tosl	equ	0xFFD
 36673                           pclath	equ	0xFFA
 36674                           tblptru	equ	0xFF8
 36675                           tblptrh	equ	0xFF7
 36676                           tblptrl	equ	0xFF6
 36677                           tablat	equ	0xFF5
 36678                           prodh	equ	0xFF4
 36679                           prodl	equ	0xFF3
 36680                           intcon	equ	0xFF2
 36681                           intcon2	equ	0xFF1
 36682                           intcon3	equ	0xFF0
 36683                           indf0	equ	0xFEF
 36684                           postinc0	equ	0xFEE
 36685                           plusw0	equ	0xFEB
 36686                           fsr0h	equ	0xFEA
 36687                           fsr0l	equ	0xFE9
 36688                           wreg	equ	0xFE8
 36689                           postinc1	equ	0xFE6
 36690                           postdec1	equ	0xFE5
 36691                           plusw1	equ	0xFE3
 36692                           fsr1h	equ	0xFE2
 36693                           fsr1l	equ	0xFE1
 36694                           indf2	equ	0xFDF
 36695                           postinc2	equ	0xFDE
 36696                           postdec2	equ	0xFDD
 36697                           plusw2	equ	0xFDB
 36698                           fsr2h	equ	0xFDA
 36699                           fsr2l	equ	0xFD9
 36700                           status	equ	0xFD8
 36701                           
 36702 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 36703 ;; Defined at:
 36704 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 36705 ;; Parameters:    Size  Location     Type
 36706 ;;  period          2   70[BANK0 ] unsigned int 
 36707 ;; Auto vars:     Size  Location     Type
 36708 ;;  iCtr            1   80[BANK0 ] unsigned char 
 36709 ;; Return value:  Size  Location     Type
 36710 ;;                  1    wreg      void 
 36711 ;; Registers used:
 36712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36713 ;; Tracked objects:
 36714 ;;		On entry : 0/0
 36715 ;;		On exit  : 0/0
 36716 ;;		Unchanged: 0/0
 36717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36718 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36719 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36720 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36721 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36722 ;;Total ram usage:       11 bytes
 36723 ;; Hardware stack levels used:    1
 36724 ;; Hardware stack levels required when called:   11
 36725 ;; This function calls:
 36726 ;;		_SwTimerSetTimeout
 36727 ;;		_SwTimerStart
 36728 ;;		_SwTimerStop
 36729 ;;		___lldiv
 36730 ;;		___lmul
 36731 ;; This function is called by:
 36732 ;;		_LORAWAN_Reset
 36733 ;; This function uses a non-reentrant model
 36734 ;;
 36735                           
 36736                           	psect	text173
 36737  0000'                    __ptext173:
 36738                           	opt stack 0
 36739  0000'                    _LORAWAN_LinkCheckConfigure:
 36740                           	opt stack 17
 36741                           
 36742                           ;lorawan.c: 757: uint8_t iCtr;
 36743                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 36744                           
 36745                           ;incstack = 0
 36746  0000' C046' F03A'        	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 36747  0004' C047' F03B'        	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 36748  0008' 0100               	movlb	0	; () banked
 36749  000A' 6B00'              	clrf	(___lmul@multiplier+2)& (0+255),b
 36750  000C' 6B00'              	clrf	(___lmul@multiplier+3)& (0+255),b
 36751  000E' 0EE8               	movlw	232
 36752  0010' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 36753  0012' 0E03               	movlw	3
 36754  0014' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 36755  0016' 0E00               	movlw	0
 36756  0018' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 36757  001A' 0E00               	movlw	0
 36758  001C' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 36759  001E' EC00' F000'        	call	___lmul	;wreg free
 36760  0022' C03A' F0CC'        	movff	?___lmul,_loRa+204
 36761  0026' C03B' F0CD'        	movff	?___lmul+1,_loRa+205
 36762  002A' C03C' F0CE'        	movff	?___lmul+2,_loRa+206
 36763  002E' C03D' F0CF'        	movff	?___lmul+3,_loRa+207
 36764                           
 36765                           ;lorawan.c: 761: if (period == 0)
 36766  0032' 0100               	movlb	0	; () banked
 36767  0034' 5100'              	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 36768  0036' 1100'              	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 36769  0038' A4D8               	btfss	status,2,c
 36770  003A' D02B               	goto	l1781
 36771                           
 36772                           ; BSR set to: 0
 36773                           ;lorawan.c: 762: {
 36774                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 36775  003C' 0102               	movlb	2	; () banked
 36776  003E' 5100'              	movf	(_loRa+231)& (0+255),w,b
 36777  0040' EC00' F000'        	call	_SwTimerStop
 36778                           
 36779                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 36780  0044' 0102               	movlb	2	; () banked
 36781  0046' 9500'              	bcf	(_loRa+3)& (0+255),2,b
 36782                           
 36783                           ; BSR set to: 2
 36784                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 36785  0048' 0E00               	movlw	0
 36786  004A' 0100               	movlb	0	; () banked
 36787  004C' 6F00'              	movwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 36788  004E' D01A               	goto	l1782
 36789  0050'                    
 36790                           ; BSR set to: 0
 36791                           ;lorawan.c: 766: {
 36792                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 36793                           
 36794                           ; BSR set to: 0
 36795  0050' 5100'              	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 36796  0052' 0D02               	mullw	2
 36797  0054' 0E00'              	movlw	low (_loRa+168)
 36798  0056' 24F3               	addwf	prodl,w,c
 36799  0058' 6ED9               	movwf	fsr2l,c
 36800  005A' 0E00'              	movlw	high (_loRa+168)
 36801  005C' 20F4               	addwfc	prodh,w,c
 36802  005E' 6EDA               	movwf	fsr2h,c
 36803  0060' 0E02               	movlw	2
 36804  0062' 18DE               	xorwf	postinc2,w,c
 36805  0064' A4D8               	btfss	status,2,c
 36806  0066' D00C               	goto	l1784
 36807                           
 36808                           ; BSR set to: 0
 36809                           ;lorawan.c: 768: {
 36810                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 36811  0068' 5100'              	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 36812  006A' 0D02               	mullw	2
 36813  006C' 0E00'              	movlw	low (_loRa+168)
 36814  006E' 24F3               	addwf	prodl,w,c
 36815  0070' 6ED9               	movwf	fsr2l,c
 36816  0072' 0E00'              	movlw	high (_loRa+168)
 36817  0074' 20F4               	addwfc	prodh,w,c
 36818  0076' 6EDA               	movwf	fsr2h,c
 36819  0078' 0EFF               	movlw	255
 36820  007A' 6EDF               	movwf	indf2,c
 36821                           
 36822                           ; BSR set to: 0
 36823                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 36824  007C' 0102               	movlb	2	; () banked
 36825  007E' 0700'              	decf	(_loRa+167)& (0+255),f,b
 36826  0080'                    l1784:
 36827                           
 36828                           ; BSR set to: 2
 36829  0080' 0100               	movlb	0	; () banked
 36830  0082' 2B00'              	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 36831  0084'                    l1782:
 36832                           
 36833                           ; BSR set to: 0
 36834                           
 36835                           ; BSR set to: 0
 36836  0084' 0102               	movlb	2	; () banked
 36837  0086' 5100'              	movf	(_loRa+167)& (0+255),w,b
 36838  0088' 0100               	movlb	0	; () banked
 36839  008A' 5D00'              	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 36840  008C' B0D8               	btfsc	status,0,c
 36841  008E' 0012               	return	
 36842  0090' D7DF               	goto	l1783
 36843  0092'                    l1781:
 36844                           
 36845                           ; BSR set to: 0
 36846                           ;lorawan.c: 776: else
 36847                           ;lorawan.c: 777: {
 36848                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 36849  0092' 0102               	movlb	2	; () banked
 36850  0094' 8500'              	bsf	(_loRa+3)& (0+255),2,b
 36851                           
 36852                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 36853  0096' A900'              	btfss	(_loRa+2)& (0+255),4,b
 36854  0098' 0012               	return	
 36855                           
 36856                           ; BSR set to: 2
 36857                           ;lorawan.c: 782: {
 36858                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 36859  009A' 5100'              	movf	(_loRa+207)& (0+255),w,b
 36860  009C' E107               	bnz	u19320
 36861  009E' 2900'              	incf	(_loRa+204)& (0+255),w,b
 36862  00A0' 0EFF               	movlw	255
 36863  00A2' 5900'              	subwfb	(_loRa+205)& (0+255),w,b
 36864  00A4' 0E0F               	movlw	15
 36865  00A6' 5900'              	subwfb	(_loRa+206)& (0+255),w,b
 36866  00A8' A0D8               	btfss	status,0,c
 36867  00AA' D01D               	goto	l1789
 36868  00AC'                    u19320:
 36869                           
 36870                           ; BSR set to: 2
 36871  00AC' C0CC' F000'        	movff	_loRa+204,___lldiv@dividend
 36872  00B0' C0CD' F001'        	movff	_loRa+205,___lldiv@dividend+1
 36873  00B4' C0CE' F002'        	movff	_loRa+206,___lldiv@dividend+2
 36874  00B8' C0CF' F003'        	movff	_loRa+207,___lldiv@dividend+3
 36875  00BC' 0E7D               	movlw	125
 36876  00BE' 0100               	movlb	0	; () banked
 36877  00C0' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 36878  00C2' 0E00               	movlw	0
 36879  00C4' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 36880  00C6' 0E00               	movlw	0
 36881  00C8' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 36882  00CA' 0E00               	movlw	0
 36883  00CC' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 36884  00CE' EC00' F000'        	call	___lldiv	;wreg free
 36885  00D2' 0E0C               	movlw	12
 36886  00D4'                    u19335:
 36887  00D4' 90D8               	bcf	status,0,c
 36888  00D6' 0100               	movlb	0	; () banked
 36889  00D8' 3700'              	rlcf	?___lldiv& (0+255),f,b
 36890  00DA' 3700'              	rlcf	(?___lldiv+1)& (0+255),f,b
 36891  00DC' 3700'              	rlcf	(?___lldiv+2)& (0+255),f,b
 36892  00DE' 3700'              	rlcf	(?___lldiv+3)& (0+255),f,b
 36893  00E0' 2EE8               	decfsz	wreg,f,c
 36894  00E2' D7F8               	goto	u19335
 36895  00E4' D023               	goto	L28
 36896  00E6'                    l1789:
 36897                           
 36898                           ; BSR set to: 0
 36899  00E6' C0CC' F048'        	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 36900  00EA' C0CD' F049'        	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 36901  00EE' C0CE' F04A'        	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 36902  00F2' C0CF' F04B'        	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 36903  00F6' 0E0C               	movlw	12
 36904  00F8'                    u19345:
 36905  00F8' 90D8               	bcf	status,0,c
 36906  00FA' 0100               	movlb	0	; () banked
 36907  00FC' 3700'              	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 36908  00FE' 3700'              	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 36909  0100' 3700'              	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 36910  0102' 3700'              	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 36911  0104' 2EE8               	decfsz	wreg,f,c
 36912  0106' D7F8               	goto	u19345
 36913  0108' C048' F000'        	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 36914  010C' C049' F001'        	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 36915  0110' C04A' F002'        	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 36916  0114' C04B' F003'        	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 36917  0118' 0E7D               	movlw	125
 36918  011A' 6F00'              	movwf	___lldiv@divisor& (0+255),b
 36919  011C' 0E00               	movlw	0
 36920  011E' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
 36921  0120' 0E00               	movlw	0
 36922  0122' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
 36923  0124' 0E00               	movlw	0
 36924  0126' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
 36925  0128' EC00' F000'        	call	___lldiv	;wreg free
 36926  012C'                    L28:
 36927  012C' C000' F04C'        	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$2496
 36928  0130' C001' F04D'        	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$2496+1
 36929  0134' C002' F04E'        	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$2496+2
 36930  0138' C003' F04F'        	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$2496+3
 36931  013C' C04C' F00D'        	movff	_LORAWAN_LinkCheckConfigure$2496,SwTimerSetTimeout@timeout
 36932  0140' C04D' F00E'        	movff	_LORAWAN_LinkCheckConfigure$2496+1,SwTimerSetTimeout@timeout+1
 36933  0144' C04E' F00F'        	movff	_LORAWAN_LinkCheckConfigure$2496+2,SwTimerSetTimeout@timeout+2
 36934  0148' C04F' F010'        	movff	_LORAWAN_LinkCheckConfigure$2496+3,SwTimerSetTimeout@timeout+3
 36935  014C' 0102               	movlb	2	; () banked
 36936  014E' 5100'              	movf	(_loRa+231)& (0+255),w,b
 36937  0150' EC00' F000'        	call	_SwTimerSetTimeout
 36938                           
 36939                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 36940  0154' 0102               	movlb	2	; () banked
 36941  0156' 5100'              	movf	(_loRa+231)& (0+255),w,b
 36942  0158' EC00' F000'        	call	_SwTimerStart
 36943  015C' 0012               	return	
 36944  015E'                    __end_of_LORAWAN_LinkCheckConfigure:
 36945                           	opt stack 0
 36946                           tosu	equ	0xFFF
 36947                           tosh	equ	0xFFE
 36948                           tosl	equ	0xFFD
 36949                           pclath	equ	0xFFA
 36950                           tblptru	equ	0xFF8
 36951                           tblptrh	equ	0xFF7
 36952                           tblptrl	equ	0xFF6
 36953                           tablat	equ	0xFF5
 36954                           prodh	equ	0xFF4
 36955                           prodl	equ	0xFF3
 36956                           intcon	equ	0xFF2
 36957                           intcon2	equ	0xFF1
 36958                           intcon3	equ	0xFF0
 36959                           indf0	equ	0xFEF
 36960                           postinc0	equ	0xFEE
 36961                           plusw0	equ	0xFEB
 36962                           fsr0h	equ	0xFEA
 36963                           fsr0l	equ	0xFE9
 36964                           wreg	equ	0xFE8
 36965                           postinc1	equ	0xFE6
 36966                           postdec1	equ	0xFE5
 36967                           plusw1	equ	0xFE3
 36968                           fsr1h	equ	0xFE2
 36969                           fsr1l	equ	0xFE1
 36970                           indf2	equ	0xFDF
 36971                           postinc2	equ	0xFDE
 36972                           postdec2	equ	0xFDD
 36973                           plusw2	equ	0xFDB
 36974                           fsr2h	equ	0xFDA
 36975                           fsr2l	equ	0xFD9
 36976                           status	equ	0xFD8
 36977                           
 36978 ;; *************** function ___lmul *****************
 36979 ;; Defined at:
 36980 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 36981 ;; Parameters:    Size  Location     Type
 36982 ;;  multiplier      4   58[BANK0 ] unsigned long 
 36983 ;;  multiplicand    4   62[BANK0 ] unsigned long 
 36984 ;; Auto vars:     Size  Location     Type
 36985 ;;  product         4   66[BANK0 ] unsigned long 
 36986 ;; Return value:  Size  Location     Type
 36987 ;;                  4   58[BANK0 ] unsigned long 
 36988 ;; Registers used:
 36989 ;;		wreg, status,2, status,0
 36990 ;; Tracked objects:
 36991 ;;		On entry : 0/0
 36992 ;;		On exit  : 0/0
 36993 ;;		Unchanged: 0/0
 36994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36995 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36996 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36998 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36999 ;;Total ram usage:       12 bytes
 37000 ;; Hardware stack levels used:    1
 37001 ;; Hardware stack levels required when called:    7
 37002 ;; This function calls:
 37003 ;;		Nothing
 37004 ;; This function is called by:
 37005 ;;		_RADIO_WriteConfiguration
 37006 ;;		_RADIO_TxDone
 37007 ;;		_RADIO_FSKPacketSent
 37008 ;;		_LORAWAN_TxDone
 37009 ;;		_ExecuteNewChannel
 37010 ;;		_ExecuteRxParamSetupReq
 37011 ;;		_UpdateCfList
 37012 ;;		_LORAWAN_LinkCheckConfigure
 37013 ;;		_rand
 37014 ;;		_LORAWAN_Pause
 37015 ;; This function uses a non-reentrant model
 37016 ;;
 37017                           
 37018                           	psect	text174
 37019  0000'                    __ptext174:
 37020                           	opt stack 0
 37021  0000'                    ___lmul:
 37022                           	opt stack 18
 37023                           
 37024                           ;incstack = 0
 37025  0000' 0E00               	movlw	0
 37026  0002' 0100               	movlb	0	; () banked
 37027  0004' 6F00'              	movwf	___lmul@product& (0+255),b
 37028  0006' 0E00               	movlw	0
 37029  0008' 6F00'              	movwf	(___lmul@product+1)& (0+255),b
 37030  000A' 0E00               	movlw	0
 37031  000C' 6F00'              	movwf	(___lmul@product+2)& (0+255),b
 37032  000E' 0E00               	movlw	0
 37033  0010' 6F00'              	movwf	(___lmul@product+3)& (0+255),b
 37034  0012'                    
 37035                           ; BSR set to: 0
 37036                           
 37037                           ; BSR set to: 0
 37038  0012' A100'              	btfss	___lmul@multiplier& (0+255),0,b
 37039  0014' D008               	goto	l2585
 37040                           
 37041                           ; BSR set to: 0
 37042  0016' 5100'              	movf	___lmul@multiplicand& (0+255),w,b
 37043  0018' 2700'              	addwf	___lmul@product& (0+255),f,b
 37044  001A' 5100'              	movf	(___lmul@multiplicand+1)& (0+255),w,b
 37045  001C' 2300'              	addwfc	(___lmul@product+1)& (0+255),f,b
 37046  001E' 5100'              	movf	(___lmul@multiplicand+2)& (0+255),w,b
 37047  0020' 2300'              	addwfc	(___lmul@product+2)& (0+255),f,b
 37048  0022' 5100'              	movf	(___lmul@multiplicand+3)& (0+255),w,b
 37049  0024' 2300'              	addwfc	(___lmul@product+3)& (0+255),f,b
 37050  0026'                    l2585:
 37051                           
 37052                           ; BSR set to: 0
 37053                           
 37054                           ; BSR set to: 0
 37055  0026' 90D8               	bcf	status,0,c
 37056  0028' 3700'              	rlcf	___lmul@multiplicand& (0+255),f,b
 37057  002A' 3700'              	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 37058  002C' 3700'              	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 37059  002E' 3700'              	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 37060                           
 37061                           ; BSR set to: 0
 37062  0030' 90D8               	bcf	status,0,c
 37063  0032' 3300'              	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 37064  0034' 3300'              	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 37065  0036' 3300'              	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 37066  0038' 3300'              	rrcf	___lmul@multiplier& (0+255),f,b
 37067  003A' 5100'              	movf	___lmul@multiplier& (0+255),w,b
 37068  003C' 1100'              	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 37069  003E' 1100'              	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 37070  0040' 1100'              	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 37071  0042' A4D8               	btfss	status,2,c
 37072  0044' D7E6               	goto	l2584
 37073                           
 37074                           ; BSR set to: 0
 37075  0046' C042' F03A'        	movff	___lmul@product,?___lmul
 37076  004A' C043' F03B'        	movff	___lmul@product+1,?___lmul+1
 37077  004E' C044' F03C'        	movff	___lmul@product+2,?___lmul+2
 37078  0052' C045' F03D'        	movff	___lmul@product+3,?___lmul+3
 37079                           
 37080                           ; BSR set to: 0
 37081  0056' 0012               	return		;funcret
 37082  0058'                    __end_of___lmul:
 37083                           	opt stack 0
 37084                           tosu	equ	0xFFF
 37085                           tosh	equ	0xFFE
 37086                           tosl	equ	0xFFD
 37087                           pclath	equ	0xFFA
 37088                           tblptru	equ	0xFF8
 37089                           tblptrh	equ	0xFF7
 37090                           tblptrl	equ	0xFF6
 37091                           tablat	equ	0xFF5
 37092                           prodh	equ	0xFF4
 37093                           prodl	equ	0xFF3
 37094                           intcon	equ	0xFF2
 37095                           intcon2	equ	0xFF1
 37096                           intcon3	equ	0xFF0
 37097                           indf0	equ	0xFEF
 37098                           postinc0	equ	0xFEE
 37099                           plusw0	equ	0xFEB
 37100                           fsr0h	equ	0xFEA
 37101                           fsr0l	equ	0xFE9
 37102                           wreg	equ	0xFE8
 37103                           postinc1	equ	0xFE6
 37104                           postdec1	equ	0xFE5
 37105                           plusw1	equ	0xFE3
 37106                           fsr1h	equ	0xFE2
 37107                           fsr1l	equ	0xFE1
 37108                           indf2	equ	0xFDF
 37109                           postinc2	equ	0xFDE
 37110                           postdec2	equ	0xFDD
 37111                           plusw2	equ	0xFDB
 37112                           fsr2h	equ	0xFDA
 37113                           fsr2l	equ	0xFD9
 37114                           status	equ	0xFD8
 37115                           
 37116 ;; *************** function ___lldiv *****************
 37117 ;; Defined at:
 37118 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 37119 ;; Parameters:    Size  Location     Type
 37120 ;;  dividend        4    0[BANK0 ] unsigned long 
 37121 ;;  divisor         4    4[BANK0 ] unsigned long 
 37122 ;; Auto vars:     Size  Location     Type
 37123 ;;  quotient        4    8[BANK0 ] unsigned long 
 37124 ;;  counter         1   12[BANK0 ] unsigned char 
 37125 ;; Return value:  Size  Location     Type
 37126 ;;                  4    0[BANK0 ] unsigned long 
 37127 ;; Registers used:
 37128 ;;		wreg, status,2, status,0
 37129 ;; Tracked objects:
 37130 ;;		On entry : 0/0
 37131 ;;		On exit  : 0/0
 37132 ;;		Unchanged: 0/0
 37133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37134 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37135 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37137 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37138 ;;Total ram usage:       13 bytes
 37139 ;; Hardware stack levels used:    1
 37140 ;; Hardware stack levels required when called:    7
 37141 ;; This function calls:
 37142 ;;		Nothing
 37143 ;; This function is called by:
 37144 ;;		_RADIO_WriteFrequency
 37145 ;;		_RADIO_WriteFSKFrequencyDeviation
 37146 ;;		_RADIO_WriteFSKBitRate
 37147 ;;		_RADIO_Transmit
 37148 ;;		_RADIO_ReceiveStart
 37149 ;;		_LORAWAN_TxDone
 37150 ;;		_LORAWAN_RxTimeout
 37151 ;;		_StartReTxTimer
 37152 ;;		_DutyCycleCallback
 37153 ;;		_LORAWAN_LinkCheckConfigure
 37154 ;;		_LORAWAN_LinkCheckCallback
 37155 ;;		_UpdateRetransmissionAckTimeoutState
 37156 ;;		_UpdateJoinSuccessState
 37157 ;; This function uses a non-reentrant model
 37158 ;;
 37159                           
 37160                           	psect	text175
 37161  0000'                    __ptext175:
 37162                           	opt stack 0
 37163  0000'                    ___lldiv:
 37164                           	opt stack 21
 37165                           
 37166                           ; BSR set to: 0
 37167                           ;incstack = 0
 37168  0000' 0E00               	movlw	0
 37169  0002' 0100               	movlb	0	; () banked
 37170  0004' 6F00'              	movwf	___lldiv@quotient& (0+255),b
 37171  0006' 0E00               	movlw	0
 37172  0008' 6F00'              	movwf	(___lldiv@quotient+1)& (0+255),b
 37173  000A' 0E00               	movlw	0
 37174  000C' 6F00'              	movwf	(___lldiv@quotient+2)& (0+255),b
 37175  000E' 0E00               	movlw	0
 37176  0010' 6F00'              	movwf	(___lldiv@quotient+3)& (0+255),b
 37177                           
 37178                           ; BSR set to: 0
 37179  0012' 5100'              	movf	___lldiv@divisor& (0+255),w,b
 37180  0014' 1100'              	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 37181  0016' 1100'              	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 37182  0018' 1100'              	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 37183  001A' B4D8               	btfsc	status,2,c
 37184  001C' D02A               	goto	l2928
 37185                           
 37186                           ; BSR set to: 0
 37187  001E' 0E01               	movlw	1
 37188  0020' 6F00'              	movwf	___lldiv@counter& (0+255),b
 37189  0022' D006               	goto	l2923
 37190  0024'                    
 37191                           ; BSR set to: 0
 37192                           
 37193                           ; BSR set to: 0
 37194  0024' 90D8               	bcf	status,0,c
 37195  0026' 3700'              	rlcf	___lldiv@divisor& (0+255),f,b
 37196  0028' 3700'              	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 37197  002A' 3700'              	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 37198  002C' 3700'              	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 37199  002E' 2B00'              	incf	___lldiv@counter& (0+255),f,b
 37200  0030'                    l2923:
 37201                           
 37202                           ; BSR set to: 0
 37203                           
 37204                           ; BSR set to: 0
 37205  0030' AF00'              	btfss	(___lldiv@divisor+3)& (0+255),7,b
 37206  0032' D7F8               	goto	l2924
 37207  0034'                    u14310:
 37208                           
 37209                           ; BSR set to: 0
 37210                           
 37211                           ; BSR set to: 0
 37212                           
 37213                           ; BSR set to: 0
 37214  0034' 90D8               	bcf	status,0,c
 37215  0036' 3700'              	rlcf	___lldiv@quotient& (0+255),f,b
 37216  0038' 3700'              	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 37217  003A' 3700'              	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 37218  003C' 3700'              	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 37219                           
 37220                           ; BSR set to: 0
 37221  003E' 5100'              	movf	___lldiv@divisor& (0+255),w,b
 37222  0040' 5D00'              	subwf	___lldiv@dividend& (0+255),w,b
 37223  0042' 5100'              	movf	(___lldiv@divisor+1)& (0+255),w,b
 37224  0044' 5900'              	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 37225  0046' 5100'              	movf	(___lldiv@divisor+2)& (0+255),w,b
 37226  0048' 5900'              	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 37227  004A' 5100'              	movf	(___lldiv@divisor+3)& (0+255),w,b
 37228  004C' 5900'              	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 37229  004E' A0D8               	btfss	status,0,c
 37230  0050' D009               	goto	l2927
 37231                           
 37232                           ; BSR set to: 0
 37233  0052' 5100'              	movf	___lldiv@divisor& (0+255),w,b
 37234  0054' 5F00'              	subwf	___lldiv@dividend& (0+255),f,b
 37235  0056' 5100'              	movf	(___lldiv@divisor+1)& (0+255),w,b
 37236  0058' 5B00'              	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 37237  005A' 5100'              	movf	(___lldiv@divisor+2)& (0+255),w,b
 37238  005C' 5B00'              	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 37239  005E' 5100'              	movf	(___lldiv@divisor+3)& (0+255),w,b
 37240  0060' 5B00'              	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 37241                           
 37242                           ; BSR set to: 0
 37243  0062' 8100'              	bsf	___lldiv@quotient& (0+255),0,b
 37244  0064'                    l2927:
 37245                           
 37246                           ; BSR set to: 0
 37247                           
 37248                           ; BSR set to: 0
 37249  0064' 90D8               	bcf	status,0,c
 37250  0066' 3300'              	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 37251  0068' 3300'              	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 37252  006A' 3300'              	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 37253  006C' 3300'              	rrcf	___lldiv@divisor& (0+255),f,b
 37254                           
 37255                           ; BSR set to: 0
 37256  006E' 2F00'              	decfsz	___lldiv@counter& (0+255),f,b
 37257  0070' D7E1               	goto	u14310
 37258  0072'                    l2928:
 37259                           
 37260                           ; BSR set to: 0
 37261                           
 37262                           ; BSR set to: 0
 37263  0072' C008' F000'        	movff	___lldiv@quotient,?___lldiv
 37264  0076' C009' F001'        	movff	___lldiv@quotient+1,?___lldiv+1
 37265  007A' C00A' F002'        	movff	___lldiv@quotient+2,?___lldiv+2
 37266  007E' C00B' F003'        	movff	___lldiv@quotient+3,?___lldiv+3
 37267                           
 37268                           ; BSR set to: 0
 37269  0082' 0012               	return		;funcret
 37270  0084'                    __end_of___lldiv:
 37271                           	opt stack 0
 37272                           tosu	equ	0xFFF
 37273                           tosh	equ	0xFFE
 37274                           tosl	equ	0xFFD
 37275                           pclath	equ	0xFFA
 37276                           tblptru	equ	0xFF8
 37277                           tblptrh	equ	0xFF7
 37278                           tblptrl	equ	0xFF6
 37279                           tablat	equ	0xFF5
 37280                           prodh	equ	0xFF4
 37281                           prodl	equ	0xFF3
 37282                           intcon	equ	0xFF2
 37283                           intcon2	equ	0xFF1
 37284                           intcon3	equ	0xFF0
 37285                           indf0	equ	0xFEF
 37286                           postinc0	equ	0xFEE
 37287                           plusw0	equ	0xFEB
 37288                           fsr0h	equ	0xFEA
 37289                           fsr0l	equ	0xFE9
 37290                           wreg	equ	0xFE8
 37291                           postinc1	equ	0xFE6
 37292                           postdec1	equ	0xFE5
 37293                           plusw1	equ	0xFE3
 37294                           fsr1h	equ	0xFE2
 37295                           fsr1l	equ	0xFE1
 37296                           indf2	equ	0xFDF
 37297                           postinc2	equ	0xFDE
 37298                           postdec2	equ	0xFDD
 37299                           plusw2	equ	0xFDB
 37300                           fsr2h	equ	0xFDA
 37301                           fsr2l	equ	0xFD9
 37302                           status	equ	0xFD8
 37303                           
 37304 ;; *************** function _SwTimerStop *****************
 37305 ;; Defined at:
 37306 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37307 ;; Parameters:    Size  Location     Type
 37308 ;;  timerId         1    wreg     unsigned char 
 37309 ;; Auto vars:     Size  Location     Type
 37310 ;;  timerId         1    0[BANK0 ] unsigned char 
 37311 ;; Return value:  Size  Location     Type
 37312 ;;                  1    wreg      void 
 37313 ;; Registers used:
 37314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37315 ;; Tracked objects:
 37316 ;;		On entry : 0/0
 37317 ;;		On exit  : 0/0
 37318 ;;		Unchanged: 0/0
 37319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37323 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37324 ;;Total ram usage:        1 bytes
 37325 ;; Hardware stack levels used:    1
 37326 ;; Hardware stack levels required when called:    7
 37327 ;; This function calls:
 37328 ;;		Nothing
 37329 ;; This function is called by:
 37330 ;;		_RADIO_Init
 37331 ;;		_RADIO_Transmit
 37332 ;;		_RADIO_RxDone
 37333 ;;		_RADIO_FSKPayloadReady
 37334 ;;		_RADIO_RxTimeout
 37335 ;;		_RADIO_TxDone
 37336 ;;		_RADIO_FSKPacketSent
 37337 ;;		_RADIO_RxFSKTimeout
 37338 ;;		_LORAWAN_TxDone
 37339 ;;		_StopAllSoftwareTimers
 37340 ;;		_LORAWAN_LinkCheckConfigure
 37341 ;;		_LORAWAN_RxDone
 37342 ;; This function uses a non-reentrant model
 37343 ;;
 37344                           
 37345                           	psect	text176
 37346  0000'                    __ptext176:
 37347                           	opt stack 0
 37348  0000'                    _SwTimerStop:
 37349                           	opt stack 21
 37350                           
 37351                           ; BSR set to: 0
 37352                           ;incstack = 0
 37353                           ;SwTimerStop@timerId stored from wreg
 37354  0000' 0100               	movlb	0	; () banked
 37355  0002' 6F00'              	movwf	SwTimerStop@timerId& (0+255),b
 37356                           
 37357                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 37358  0004' 9EF2               	bcf	intcon,7,c	;volatile
 37359                           
 37360                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 37361  0006' 0100               	movlb	0	; () banked
 37362  0008' 5100'              	movf	SwTimerStop@timerId& (0+255),w,b
 37363  000A' 0D08               	mullw	8
 37364  000C' 0E04               	movlw	4
 37365  000E' 26F3               	addwf	prodl,f,c
 37366  0010' 0E00               	movlw	0
 37367  0012' 22F4               	addwfc	prodh,f,c
 37368  0014' 0E00'              	movlw	low _swTimers
 37369  0016' 24F3               	addwf	prodl,w,c
 37370  0018' 6ED9               	movwf	fsr2l,c
 37371  001A' 0E00'              	movlw	high _swTimers
 37372  001C' 20F4               	addwfc	prodh,w,c
 37373  001E' 6EDA               	movwf	fsr2h,c
 37374  0020' 0E00               	movlw	0
 37375  0022' 6EDF               	movwf	indf2,c
 37376                           
 37377                           ; BSR set to: 0
 37378                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 37379  0024' 8EF2               	bsf	intcon,7,c	;volatile
 37380                           
 37381                           ; BSR set to: 0
 37382  0026' 0012               	return		;funcret
 37383  0028'                    __end_of_SwTimerStop:
 37384                           	opt stack 0
 37385                           tosu	equ	0xFFF
 37386                           tosh	equ	0xFFE
 37387                           tosl	equ	0xFFD
 37388                           pclath	equ	0xFFA
 37389                           tblptru	equ	0xFF8
 37390                           tblptrh	equ	0xFF7
 37391                           tblptrl	equ	0xFF6
 37392                           tablat	equ	0xFF5
 37393                           prodh	equ	0xFF4
 37394                           prodl	equ	0xFF3
 37395                           intcon	equ	0xFF2
 37396                           intcon2	equ	0xFF1
 37397                           intcon3	equ	0xFF0
 37398                           indf0	equ	0xFEF
 37399                           postinc0	equ	0xFEE
 37400                           plusw0	equ	0xFEB
 37401                           fsr0h	equ	0xFEA
 37402                           fsr0l	equ	0xFE9
 37403                           wreg	equ	0xFE8
 37404                           postinc1	equ	0xFE6
 37405                           postdec1	equ	0xFE5
 37406                           plusw1	equ	0xFE3
 37407                           fsr1h	equ	0xFE2
 37408                           fsr1l	equ	0xFE1
 37409                           indf2	equ	0xFDF
 37410                           postinc2	equ	0xFDE
 37411                           postdec2	equ	0xFDD
 37412                           plusw2	equ	0xFDB
 37413                           fsr2h	equ	0xFDA
 37414                           fsr2l	equ	0xFD9
 37415                           status	equ	0xFD8
 37416                           
 37417 ;; *************** function _SwTimerStart *****************
 37418 ;; Defined at:
 37419 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37420 ;; Parameters:    Size  Location     Type
 37421 ;;  timerId         1    wreg     unsigned char 
 37422 ;; Auto vars:     Size  Location     Type
 37423 ;;  timerId         1   57[BANK0 ] unsigned char 
 37424 ;;  ticksRemaini    4   53[BANK0 ] unsigned long 
 37425 ;; Return value:  Size  Location     Type
 37426 ;;                  1    wreg      void 
 37427 ;; Registers used:
 37428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37429 ;; Tracked objects:
 37430 ;;		On entry : 0/0
 37431 ;;		On exit  : 0/0
 37432 ;;		Unchanged: 0/0
 37433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37435 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37436 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37437 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37438 ;;Total ram usage:        9 bytes
 37439 ;; Hardware stack levels used:    1
 37440 ;; Hardware stack levels required when called:   10
 37441 ;; This function calls:
 37442 ;;		_SwTimersInterrupt
 37443 ;;		_TMR_OverrideRemaining
 37444 ;; This function is called by:
 37445 ;;		_RADIO_Transmit
 37446 ;;		_RADIO_ReceiveStart
 37447 ;;		_LORAWAN_TxDone
 37448 ;;		_LORAWAN_RxTimeout
 37449 ;;		_StartReTxTimer
 37450 ;;		_DutyCycleCallback
 37451 ;;		_LORAWAN_Join
 37452 ;;		_LORAWAN_LinkCheckConfigure
 37453 ;;		_LORAWAN_LinkCheckCallback
 37454 ;;		_UpdateRetransmissionAckTimeoutState
 37455 ;;		_UpdateJoinSuccessState
 37456 ;; This function uses a non-reentrant model
 37457 ;;
 37458                           
 37459                           	psect	text177
 37460  0000'                    __ptext177:
 37461                           	opt stack 0
 37462  0000'                    _SwTimerStart:
 37463                           	opt stack 18
 37464                           
 37465                           ; BSR set to: 0
 37466                           ;incstack = 0
 37467                           ;SwTimerStart@timerId stored from wreg
 37468  0000' 0100               	movlb	0	; () banked
 37469  0002' 6F00'              	movwf	SwTimerStart@timerId& (0+255),b
 37470                           
 37471                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 37472                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 37473  0004' 9EF2               	bcf	intcon,7,c	;volatile
 37474                           
 37475                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 37476  0006' EC00' F000'        	call	_SwTimersInterrupt	;wreg free
 37477  000A' C020' F035'        	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 37478  000E' C021' F036'        	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 37479  0012' C022' F037'        	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 37480  0016' C023' F038'        	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 37481                           
 37482                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 37483  001A' 0100               	movlb	0	; () banked
 37484  001C' 5100'              	movf	SwTimerStart@timerId& (0+255),w,b
 37485  001E' 0D08               	mullw	8
 37486  0020' 0E00'              	movlw	low _swTimers
 37487  0022' 24F3               	addwf	prodl,w,c
 37488  0024' 6ED9               	movwf	fsr2l,c
 37489  0026' 0E00'              	movlw	high _swTimers
 37490  0028' 20F4               	addwfc	prodh,w,c
 37491  002A' 6EDA               	movwf	fsr2h,c
 37492  002C' 5100'              	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 37493  002E' 5CDE               	subwf	postinc2,w,c
 37494  0030' 5100'              	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 37495  0032' 58DE               	subwfb	postinc2,w,c
 37496  0034' 5100'              	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 37497  0036' 58DE               	subwfb	postinc2,w,c
 37498  0038' 5100'              	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 37499  003A' 58DE               	subwfb	postinc2,w,c
 37500  003C' B0D8               	btfsc	status,0,c
 37501  003E' D010               	goto	l264
 37502                           
 37503                           ; BSR set to: 0
 37504                           ;sw_timer.c: 225: {
 37505                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 37506  0040' 5100'              	movf	SwTimerStart@timerId& (0+255),w,b
 37507  0042' 0D08               	mullw	8
 37508  0044' 0E00'              	movlw	low _swTimers
 37509  0046' 24F3               	addwf	prodl,w,c
 37510  0048' 6ED9               	movwf	fsr2l,c
 37511  004A' 0E00'              	movlw	high _swTimers
 37512  004C' 20F4               	addwfc	prodh,w,c
 37513  004E' 6EDA               	movwf	fsr2h,c
 37514  0050' CFDE F035'         	movff	postinc2,SwTimerStart@ticksRemaining
 37515  0054' CFDE F036'         	movff	postinc2,SwTimerStart@ticksRemaining+1
 37516  0058' CFDE F037'         	movff	postinc2,SwTimerStart@ticksRemaining+2
 37517  005C' CFDE F038'         	movff	postinc2,SwTimerStart@ticksRemaining+3
 37518  0060'                    l264:
 37519                           
 37520                           ; BSR set to: 0
 37521                           ;sw_timer.c: 227: }
 37522                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 37523                           
 37524                           ; BSR set to: 0
 37525  0060' C035' F00A'        	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 37526  0064' C036' F00B'        	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 37527  0068' C037' F00C'        	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 37528  006C' C038' F00D'        	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 37529  0070' EC00' F000'        	call	_TMR_OverrideRemaining	;wreg free
 37530                           
 37531                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 37532  0074' 0100               	movlb	0	; () banked
 37533  0076' 5100'              	movf	SwTimerStart@timerId& (0+255),w,b
 37534  0078' 0D08               	mullw	8
 37535  007A' 0E04               	movlw	4
 37536  007C' 26F3               	addwf	prodl,f,c
 37537  007E' 0E00               	movlw	0
 37538  0080' 22F4               	addwfc	prodh,f,c
 37539  0082' 0E00'              	movlw	low _swTimers
 37540  0084' 24F3               	addwf	prodl,w,c
 37541  0086' 6ED9               	movwf	fsr2l,c
 37542  0088' 0E00'              	movlw	high _swTimers
 37543  008A' 20F4               	addwfc	prodh,w,c
 37544  008C' 6EDA               	movwf	fsr2h,c
 37545  008E' 0E01               	movlw	1
 37546  0090' 6EDF               	movwf	indf2,c
 37547                           
 37548                           ; BSR set to: 0
 37549                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 37550  0092' 8EF2               	bsf	intcon,7,c	;volatile
 37551                           
 37552                           ; BSR set to: 0
 37553  0094' 0012               	return		;funcret
 37554  0096'                    __end_of_SwTimerStart:
 37555                           	opt stack 0
 37556                           tosu	equ	0xFFF
 37557                           tosh	equ	0xFFE
 37558                           tosl	equ	0xFFD
 37559                           pclath	equ	0xFFA
 37560                           tblptru	equ	0xFF8
 37561                           tblptrh	equ	0xFF7
 37562                           tblptrl	equ	0xFF6
 37563                           tablat	equ	0xFF5
 37564                           prodh	equ	0xFF4
 37565                           prodl	equ	0xFF3
 37566                           intcon	equ	0xFF2
 37567                           intcon2	equ	0xFF1
 37568                           intcon3	equ	0xFF0
 37569                           indf0	equ	0xFEF
 37570                           postinc0	equ	0xFEE
 37571                           plusw0	equ	0xFEB
 37572                           fsr0h	equ	0xFEA
 37573                           fsr0l	equ	0xFE9
 37574                           wreg	equ	0xFE8
 37575                           postinc1	equ	0xFE6
 37576                           postdec1	equ	0xFE5
 37577                           plusw1	equ	0xFE3
 37578                           fsr1h	equ	0xFE2
 37579                           fsr1l	equ	0xFE1
 37580                           indf2	equ	0xFDF
 37581                           postinc2	equ	0xFDE
 37582                           postdec2	equ	0xFDD
 37583                           plusw2	equ	0xFDB
 37584                           fsr2h	equ	0xFDA
 37585                           fsr2l	equ	0xFD9
 37586                           status	equ	0xFD8
 37587                           
 37588 ;; *************** function _TMR_OverrideRemaining *****************
 37589 ;; Defined at:
 37590 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37591 ;; Parameters:    Size  Location     Type
 37592 ;;  ticksRemaini    4   10[BANK0 ] unsigned long 
 37593 ;; Auto vars:     Size  Location     Type
 37594 ;;  oldReloadVal    2   18[BANK0 ] unsigned int 
 37595 ;;  tmrVal          2   16[BANK0 ] unsigned int 
 37596 ;; Return value:  Size  Location     Type
 37597 ;;                  1    wreg      void 
 37598 ;; Registers used:
 37599 ;;		wreg, status,2, status,0, cstack
 37600 ;; Tracked objects:
 37601 ;;		On entry : 0/0
 37602 ;;		On exit  : 0/0
 37603 ;;		Unchanged: 0/0
 37604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37605 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37606 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37607 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37608 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37609 ;;Total ram usage:       10 bytes
 37610 ;; Hardware stack levels used:    1
 37611 ;; Hardware stack levels required when called:    9
 37612 ;; This function calls:
 37613 ;;		_TMR_SwapTimer
 37614 ;; This function is called by:
 37615 ;;		_SwTimerStart
 37616 ;; This function uses a non-reentrant model
 37617 ;;
 37618                           
 37619                           	psect	text178
 37620  0000'                    __ptext178:
 37621                           	opt stack 0
 37622  0000'                    _TMR_OverrideRemaining:
 37623                           	opt stack 18
 37624                           
 37625                           ;sw_timer.c: 67: uint16_t tmrVal;
 37626                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 37627                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 37628                           
 37629                           ; BSR set to: 0
 37630                           ;incstack = 0
 37631  0000' 5003'              	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 37632  0002' 1002'              	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 37633  0004' 1001'              	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 37634  0006' E104               	bnz	u14400
 37635  0008' 0E0B               	movlw	11
 37636  000A' 5C00'              	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 37637  000C' A0D8               	btfss	status,0,c
 37638  000E' 0012               	return	
 37639  0010'                    u14400:
 37640                           
 37641                           ;sw_timer.c: 72: {
 37642                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 37643  0010' 5000'              	movf	_ticksToScheduledInterrupt,w,c	;volatile
 37644  0012' 0100               	movlb	0	; () banked
 37645  0014' 5D00'              	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 37646  0016' 5001'              	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 37647  0018' 5900'              	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 37648  001A' 5002'              	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 37649  001C' 5900'              	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 37650  001E' 5003'              	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 37651  0020' 5900'              	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 37652  0022' B0D8               	btfsc	status,0,c
 37653  0024' 0012               	return	
 37654                           
 37655                           ; BSR set to: 0
 37656                           ;sw_timer.c: 74: {
 37657                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 37658  0026' C00A' F000'        	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 37659  002A' C00B' F001'        	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 37660  002E' C00C' F002'        	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 37661  0032' C00D' F003'        	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 37662                           
 37663                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 37664  0036' C008' F012'        	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 37665  003A' C009' F013'        	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 37666                           
 37667                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 37668  003E' C00A' F00E'        	movff	TMR_OverrideRemaining@ticksRemaining,??_TMR_OverrideRemaining
 37669  0042' C00B' F00F'        	movff	TMR_OverrideRemaining@ticksRemaining+1,??_TMR_OverrideRemaining+1
 37670  0046' 1F00'              	comf	??_TMR_OverrideRemaining& (0+255),f,b
 37671  0048' 1F00'              	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 37672  004A' 4B00'              	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 37673  004C' 2B00'              	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 37674  004E' C00E' F008'        	movff	??_TMR_OverrideRemaining,_reloadVal	;volatile
 37675  0052' C00F' F009'        	movff	??_TMR_OverrideRemaining+1,_reloadVal+1	;volatile
 37676                           
 37677                           ; BSR set to: 0
 37678                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 37679  0056' C008' F008'        	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 37680  005A' C009' F009'        	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 37681  005E' EC00' F000'        	call	_TMR_SwapTimer	;wreg free
 37682  0062' C008' F010'        	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 37683  0066' C009' F011'        	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 37684                           
 37685                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 37686  006A' C012' F00E'        	movff	TMR_OverrideRemaining@oldReloadVal,??_TMR_OverrideRemaining
 37687  006E' C013' F00F'        	movff	TMR_OverrideRemaining@oldReloadVal+1,??_TMR_OverrideRemaining+1
 37688  0072' 0100               	movlb	0	; () banked
 37689  0074' 1F00'              	comf	??_TMR_OverrideRemaining& (0+255),f,b
 37690  0076' 1F00'              	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 37691  0078' 4B00'              	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 37692  007A' 2B00'              	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 37693  007C' 5100'              	movf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 37694  007E' 2700'              	addwf	??_TMR_OverrideRemaining& (0+255),f,b
 37695  0080' 5100'              	movf	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 37696  0082' 2300'              	addwfc	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 37697  0084' 5100'              	movf	??_TMR_OverrideRemaining& (0+255),w,b
 37698  0086' 2604'              	addwf	_ticksAdded,f,c	;volatile
 37699  0088' 5100'              	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 37700  008A' 2205'              	addwfc	_ticksAdded+1,f,c	;volatile
 37701  008C' 0E00               	movlw	0
 37702  008E' 2206'              	addwfc	_ticksAdded+2,f,c	;volatile
 37703  0090' 0E00               	movlw	0
 37704  0092' 2207'              	addwfc	_ticksAdded+3,f,c	;volatile
 37705                           
 37706                           ; BSR set to: 0
 37707  0094' 0012               	return	
 37708  0096'                    __end_of_TMR_OverrideRemaining:
 37709                           	opt stack 0
 37710                           tosu	equ	0xFFF
 37711                           tosh	equ	0xFFE
 37712                           tosl	equ	0xFFD
 37713                           pclath	equ	0xFFA
 37714                           tblptru	equ	0xFF8
 37715                           tblptrh	equ	0xFF7
 37716                           tblptrl	equ	0xFF6
 37717                           tablat	equ	0xFF5
 37718                           prodh	equ	0xFF4
 37719                           prodl	equ	0xFF3
 37720                           intcon	equ	0xFF2
 37721                           intcon2	equ	0xFF1
 37722                           intcon3	equ	0xFF0
 37723                           indf0	equ	0xFEF
 37724                           postinc0	equ	0xFEE
 37725                           plusw0	equ	0xFEB
 37726                           fsr0h	equ	0xFEA
 37727                           fsr0l	equ	0xFE9
 37728                           wreg	equ	0xFE8
 37729                           postinc1	equ	0xFE6
 37730                           postdec1	equ	0xFE5
 37731                           plusw1	equ	0xFE3
 37732                           fsr1h	equ	0xFE2
 37733                           fsr1l	equ	0xFE1
 37734                           indf2	equ	0xFDF
 37735                           postinc2	equ	0xFDE
 37736                           postdec2	equ	0xFDD
 37737                           plusw2	equ	0xFDB
 37738                           fsr2h	equ	0xFDA
 37739                           fsr2l	equ	0xFD9
 37740                           status	equ	0xFD8
 37741                           
 37742 ;; *************** function _TMR_SwapTimer *****************
 37743 ;; Defined at:
 37744 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37745 ;; Parameters:    Size  Location     Type
 37746 ;;  timerVal        2    8[BANK0 ] unsigned int 
 37747 ;; Auto vars:     Size  Location     Type
 37748 ;;		None
 37749 ;; Return value:  Size  Location     Type
 37750 ;;                  2    8[BANK0 ] unsigned int 
 37751 ;; Registers used:
 37752 ;;		wreg, status,2, status,0, cstack
 37753 ;; Tracked objects:
 37754 ;;		On entry : 0/0
 37755 ;;		On exit  : 0/0
 37756 ;;		Unchanged: 0/0
 37757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37758 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37761 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37762 ;;Total ram usage:        2 bytes
 37763 ;; Hardware stack levels used:    1
 37764 ;; Hardware stack levels required when called:    8
 37765 ;; This function calls:
 37766 ;;		_TMR1_ReadTimer
 37767 ;;		_TMR1_WriteTimer
 37768 ;; This function is called by:
 37769 ;;		_TMR_OverrideRemaining
 37770 ;; This function uses a non-reentrant model
 37771 ;;
 37772                           
 37773                           	psect	text179
 37774  0000'                    __ptext179:
 37775                           	opt stack 0
 37776  0000'                    _TMR_SwapTimer:
 37777                           	opt stack 18
 37778                           
 37779                           ;sw_timer.c: 114: static uint16_t oldVal;
 37780                           ;sw_timer.c: 115: static uint16_t retVal;
 37781                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 37782                           
 37783                           ;incstack = 0
 37784  0000' EC00' F000'        	call	_TMR1_ReadTimer	;wreg free
 37785  0004' C000' F00A'        	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 37786  0008' C001' F00B'        	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 37787  000C'                    
 37788                           ;sw_timer.c: 123: ;
 37789  000C' EC00' F000'        	call	_TMR1_ReadTimer	;wreg free
 37790  0010' 0101               	movlb	1	; () banked
 37791  0012' 5100'              	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 37792  0014' 0100               	movlb	0	; () banked
 37793  0016' 1900'              	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 37794  0018' E106               	bnz	l12724
 37795  001A' 0101               	movlb	1	; () banked
 37796  001C' 5100'              	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 37797  001E' 0100               	movlb	0	; () banked
 37798  0020' 1900'              	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 37799  0022' B4D8               	btfsc	status,2,c
 37800  0024' D7F3               	goto	l230
 37801  0026'                    l12724:
 37802                           
 37803                           ; BSR set to: 0
 37804                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 37805  0026' C008' F000'        	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 37806  002A' C009' F001'        	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 37807  002E' EC00' F000'        	call	_TMR1_WriteTimer	;wreg free
 37808                           
 37809                           ;sw_timer.c: 128: oldVal++;
 37810  0032' 0101               	movlb	1	; () banked
 37811  0034' 4B00'              	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 37812  0036' 2B00'              	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 37813                           
 37814                           ; BSR set to: 1
 37815                           ;sw_timer.c: 130: retVal = oldVal;
 37816  0038' C00A' F008'        	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 37817  003C' C00B' F009'        	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 37818                           
 37819                           ; BSR set to: 1
 37820                           ;sw_timer.c: 132: return retVal;
 37821  0040' C008' F008'        	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 37822  0044' C009' F009'        	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 37823  0048' 0012               	return	
 37824  004A'                    __end_of_TMR_SwapTimer:
 37825                           	opt stack 0
 37826                           tosu	equ	0xFFF
 37827                           tosh	equ	0xFFE
 37828                           tosl	equ	0xFFD
 37829                           pclath	equ	0xFFA
 37830                           tblptru	equ	0xFF8
 37831                           tblptrh	equ	0xFF7
 37832                           tblptrl	equ	0xFF6
 37833                           tablat	equ	0xFF5
 37834                           prodh	equ	0xFF4
 37835                           prodl	equ	0xFF3
 37836                           intcon	equ	0xFF2
 37837                           intcon2	equ	0xFF1
 37838                           intcon3	equ	0xFF0
 37839                           indf0	equ	0xFEF
 37840                           postinc0	equ	0xFEE
 37841                           plusw0	equ	0xFEB
 37842                           fsr0h	equ	0xFEA
 37843                           fsr0l	equ	0xFE9
 37844                           wreg	equ	0xFE8
 37845                           postinc1	equ	0xFE6
 37846                           postdec1	equ	0xFE5
 37847                           plusw1	equ	0xFE3
 37848                           fsr1h	equ	0xFE2
 37849                           fsr1l	equ	0xFE1
 37850                           indf2	equ	0xFDF
 37851                           postinc2	equ	0xFDE
 37852                           postdec2	equ	0xFDD
 37853                           plusw2	equ	0xFDB
 37854                           fsr2h	equ	0xFDA
 37855                           fsr2l	equ	0xFD9
 37856                           status	equ	0xFD8
 37857                           
 37858 ;; *************** function _TMR1_WriteTimer *****************
 37859 ;; Defined at:
 37860 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 37861 ;; Parameters:    Size  Location     Type
 37862 ;;  timerVal        2    0[BANK0 ] unsigned int 
 37863 ;; Auto vars:     Size  Location     Type
 37864 ;;		None
 37865 ;; Return value:  Size  Location     Type
 37866 ;;                  1    wreg      void 
 37867 ;; Registers used:
 37868 ;;		wreg, status,2
 37869 ;; Tracked objects:
 37870 ;;		On entry : 0/0
 37871 ;;		On exit  : 0/0
 37872 ;;		Unchanged: 0/0
 37873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37874 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37877 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37878 ;;Total ram usage:        2 bytes
 37879 ;; Hardware stack levels used:    1
 37880 ;; Hardware stack levels required when called:    7
 37881 ;; This function calls:
 37882 ;;		Nothing
 37883 ;; This function is called by:
 37884 ;;		_TMR_SwapTimer
 37885 ;;		_TMR1_Reload
 37886 ;; This function uses a non-reentrant model
 37887 ;;
 37888                           
 37889                           	psect	text180
 37890  0000'                    __ptext180:
 37891                           	opt stack 0
 37892  0000'                    _TMR1_WriteTimer:
 37893                           	opt stack 18
 37894                           
 37895                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 37896                           
 37897                           ; BSR set to: 1
 37898                           ;incstack = 0
 37899  0000' A4CD               	btfss	4045,2,c	;volatile
 37900  0002' D008               	goto	l2448
 37901                           
 37902                           ;tmr1.c: 124: {
 37903                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 37904  0004' 90CD               	bcf	4045,0,c	;volatile
 37905                           
 37906                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 37907  0006' 0100               	movlb	0	; () banked
 37908  0008' 5100'              	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 37909  000A' 6ECF               	movwf	4047,c	;volatile
 37910                           
 37911                           ; BSR set to: 0
 37912                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 37913  000C' C000' FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 37914                           
 37915                           ; BSR set to: 0
 37916                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 37917  0010' 80CD               	bsf	4045,0,c	;volatile
 37918                           
 37919                           ;tmr1.c: 134: }
 37920  0012' 0012               	return	
 37921  0014'                    l2448:
 37922                           
 37923                           ;tmr1.c: 135: else
 37924                           ;tmr1.c: 136: {
 37925                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 37926                           
 37927                           ; BSR set to: 0
 37928  0014' 0100               	movlb	0	; () banked
 37929  0016' 5100'              	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 37930  0018' 6ECF               	movwf	4047,c	;volatile
 37931                           
 37932                           ; BSR set to: 0
 37933                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 37934  001A' C000' FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 37935  001E' 0012               	return	
 37936  0020'                    __end_of_TMR1_WriteTimer:
 37937                           	opt stack 0
 37938                           tosu	equ	0xFFF
 37939                           tosh	equ	0xFFE
 37940                           tosl	equ	0xFFD
 37941                           pclath	equ	0xFFA
 37942                           tblptru	equ	0xFF8
 37943                           tblptrh	equ	0xFF7
 37944                           tblptrl	equ	0xFF6
 37945                           tablat	equ	0xFF5
 37946                           prodh	equ	0xFF4
 37947                           prodl	equ	0xFF3
 37948                           intcon	equ	0xFF2
 37949                           intcon2	equ	0xFF1
 37950                           intcon3	equ	0xFF0
 37951                           indf0	equ	0xFEF
 37952                           postinc0	equ	0xFEE
 37953                           plusw0	equ	0xFEB
 37954                           fsr0h	equ	0xFEA
 37955                           fsr0l	equ	0xFE9
 37956                           wreg	equ	0xFE8
 37957                           postinc1	equ	0xFE6
 37958                           postdec1	equ	0xFE5
 37959                           plusw1	equ	0xFE3
 37960                           fsr1h	equ	0xFE2
 37961                           fsr1l	equ	0xFE1
 37962                           indf2	equ	0xFDF
 37963                           postinc2	equ	0xFDE
 37964                           postdec2	equ	0xFDD
 37965                           plusw2	equ	0xFDB
 37966                           fsr2h	equ	0xFDA
 37967                           fsr2l	equ	0xFD9
 37968                           status	equ	0xFD8
 37969                           
 37970 ;; *************** function _SwTimersInterrupt *****************
 37971 ;; Defined at:
 37972 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37973 ;; Parameters:    Size  Location     Type
 37974 ;;		None
 37975 ;; Auto vars:     Size  Location     Type
 37976 ;;  ticksToNextT    4   44[BANK0 ] unsigned long 
 37977 ;;  timeElapsed     4   40[BANK0 ] unsigned long 
 37978 ;;  i               1   48[BANK0 ] unsigned char 
 37979 ;; Return value:  Size  Location     Type
 37980 ;;                  4   32[BANK0 ] unsigned long 
 37981 ;; Registers used:
 37982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37983 ;; Tracked objects:
 37984 ;;		On entry : 0/0
 37985 ;;		On exit  : 0/0
 37986 ;;		Unchanged: 0/0
 37987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37988 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37989 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37991 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37992 ;;Total ram usage:       17 bytes
 37993 ;; Hardware stack levels used:    1
 37994 ;; Hardware stack levels required when called:    9
 37995 ;; This function calls:
 37996 ;;		_TMR_GetDeltaTime
 37997 ;; This function is called by:
 37998 ;;		_SwTimerReadValue
 37999 ;;		_SwTimerStart
 38000 ;;		_SwTimersCanSleep
 38001 ;; This function uses a non-reentrant model
 38002 ;;
 38003                           
 38004                           	psect	text181
 38005  0000'                    __ptext181:
 38006                           	opt stack 0
 38007  0000'                    _SwTimersInterrupt:
 38008                           	opt stack 18
 38009                           
 38010                           ;sw_timer.c: 289: uint8_t i;
 38011                           ;sw_timer.c: 290: uint32_t timeElapsed;
 38012                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 38013                           
 38014                           ; BSR set to: 0
 38015                           ;incstack = 0
 38016  0000' 0100               	movlb	0	; () banked
 38017  0002' 6900'              	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 38018  0004' 6900'              	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 38019  0006' 6900'              	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 38020  0008' 6900'              	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 38021                           
 38022                           ; BSR set to: 0
 38023                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 38024  000A' EC00' F000'        	call	_TMR_GetDeltaTime	;wreg free
 38025  000E' C008' F028'        	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 38026  0012' C009' F029'        	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 38027  0016' C00A' F02A'        	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 38028  001A' C00B' F02B'        	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 38029                           
 38030                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 38031  001E' 0E00               	movlw	0
 38032  0020' 0100               	movlb	0	; () banked
 38033  0022' 6F00'              	movwf	SwTimersInterrupt@i& (0+255),b
 38034  0024' D061               	goto	l287
 38035  0026'                    
 38036                           ; BSR set to: 0
 38037                           ;sw_timer.c: 298: {
 38038                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 38039                           
 38040                           ; BSR set to: 0
 38041  0026' 5100'              	movf	SwTimersInterrupt@i& (0+255),w,b
 38042  0028' 0D08               	mullw	8
 38043  002A' 0E04               	movlw	4
 38044  002C' 26F3               	addwf	prodl,f,c
 38045  002E' 0E00               	movlw	0
 38046  0030' 22F4               	addwfc	prodh,f,c
 38047  0032' 0E00'              	movlw	low _swTimers
 38048  0034' 24F3               	addwf	prodl,w,c
 38049  0036' 6ED9               	movwf	fsr2l,c
 38050  0038' 0E00'              	movlw	high _swTimers
 38051  003A' 20F4               	addwfc	prodh,w,c
 38052  003C' 6EDA               	movwf	fsr2h,c
 38053  003E' 04DE               	decf	postinc2,w,c
 38054  0040' A4D8               	btfss	status,2,c
 38055  0042' D051               	goto	l292
 38056                           
 38057                           ; BSR set to: 0
 38058                           ;sw_timer.c: 302: {
 38059                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 38060  0044' 5100'              	movf	SwTimersInterrupt@i& (0+255),w,b
 38061  0046' 0D08               	mullw	8
 38062  0048' 0E00'              	movlw	low _swTimers
 38063  004A' 24F3               	addwf	prodl,w,c
 38064  004C' 6ED9               	movwf	fsr2l,c
 38065  004E' 0E00'              	movlw	high _swTimers
 38066  0050' 20F4               	addwfc	prodh,w,c
 38067  0052' 6EDA               	movwf	fsr2h,c
 38068  0054' 50DE               	movf	postinc2,w,c
 38069  0056' 5D00'              	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 38070  0058' 50DE               	movf	postinc2,w,c
 38071  005A' 5900'              	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 38072  005C' 50DE               	movf	postinc2,w,c
 38073  005E' 5900'              	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 38074  0060' 50DE               	movf	postinc2,w,c
 38075  0062' 5900'              	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 38076  0064' A0D8               	btfss	status,0,c
 38077  0066' D00D               	goto	l290
 38078                           
 38079                           ; BSR set to: 0
 38080                           ;sw_timer.c: 304: {
 38081                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 38082  0068' 5100'              	movf	SwTimersInterrupt@i& (0+255),w,b
 38083  006A' 0D08               	mullw	8
 38084  006C' 0E00'              	movlw	low _swTimers
 38085  006E' 24F3               	addwf	prodl,w,c
 38086  0070' 6ED9               	movwf	fsr2l,c
 38087  0072' 0E00'              	movlw	high _swTimers
 38088  0074' 20F4               	addwfc	prodh,w,c
 38089  0076' 6EDA               	movwf	fsr2h,c
 38090  0078' 6ADE               	clrf	postinc2,c
 38091  007A' 6ADE               	clrf	postinc2,c
 38092  007C' 6ADE               	clrf	postinc2,c
 38093  007E' 6ADD               	clrf	postdec2,c
 38094                           
 38095                           ;sw_timer.c: 306: }
 38096  0080' D032               	goto	l292
 38097  0082'                    l290:
 38098                           
 38099                           ; BSR set to: 0
 38100                           ;sw_timer.c: 307: else
 38101                           ;sw_timer.c: 308: {
 38102                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 38103                           
 38104                           ; BSR set to: 0
 38105  0082' 5100'              	movf	SwTimersInterrupt@i& (0+255),w,b
 38106  0084' 0D08               	mullw	8
 38107  0086' 0E00'              	movlw	low _swTimers
 38108  0088' 24F3               	addwf	prodl,w,c
 38109  008A' 6ED9               	movwf	fsr2l,c
 38110  008C' 0E00'              	movlw	high _swTimers
 38111  008E' 20F4               	addwfc	prodh,w,c
 38112  0090' 6EDA               	movwf	fsr2h,c
 38113  0092' 5100'              	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 38114  0094' 5EDE               	subwf	postinc2,f,c
 38115  0096' 5100'              	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 38116  0098' 5ADE               	subwfb	postinc2,f,c
 38117  009A' 5100'              	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 38118  009C' 5ADE               	subwfb	postinc2,f,c
 38119  009E' 5100'              	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 38120  00A0' 5ADE               	subwfb	postinc2,f,c
 38121                           
 38122                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 38123  00A2' 5100'              	movf	SwTimersInterrupt@i& (0+255),w,b
 38124  00A4' 0D08               	mullw	8
 38125  00A6' 0E00'              	movlw	low _swTimers
 38126  00A8' 24F3               	addwf	prodl,w,c
 38127  00AA' 6ED9               	movwf	fsr2l,c
 38128  00AC' 0E00'              	movlw	high _swTimers
 38129  00AE' 20F4               	addwfc	prodh,w,c
 38130  00B0' 6EDA               	movwf	fsr2h,c
 38131  00B2' 5100'              	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 38132  00B4' 5CDE               	subwf	postinc2,w,c
 38133  00B6' 5100'              	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 38134  00B8' 58DE               	subwfb	postinc2,w,c
 38135  00BA' 5100'              	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 38136  00BC' 58DE               	subwfb	postinc2,w,c
 38137  00BE' 5100'              	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 38138  00C0' 58DE               	subwfb	postinc2,w,c
 38139  00C2' B0D8               	btfsc	status,0,c
 38140  00C4' D010               	goto	l292
 38141                           
 38142                           ; BSR set to: 0
 38143                           ;sw_timer.c: 313: {
 38144                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 38145  00C6' 5100'              	movf	SwTimersInterrupt@i& (0+255),w,b
 38146  00C8' 0D08               	mullw	8
 38147  00CA' 0E00'              	movlw	low _swTimers
 38148  00CC' 24F3               	addwf	prodl,w,c
 38149  00CE' 6ED9               	movwf	fsr2l,c
 38150  00D0' 0E00'              	movlw	high _swTimers
 38151  00D2' 20F4               	addwfc	prodh,w,c
 38152  00D4' 6EDA               	movwf	fsr2h,c
 38153  00D6' CFDE F02C'         	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 38154  00DA' CFDE F02D'         	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 38155  00DE' CFDE F02E'         	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 38156  00E2' CFDE F02F'         	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 38157  00E6'                    l292:
 38158                           
 38159                           ; BSR set to: 0
 38160                           
 38161                           ; BSR set to: 0
 38162                           
 38163                           ; BSR set to: 0
 38164                           
 38165                           ; BSR set to: 0
 38166  00E6' 2B00'              	incf	SwTimersInterrupt@i& (0+255),f,b
 38167  00E8'                    l287:
 38168                           
 38169                           ; BSR set to: 0
 38170                           
 38171                           ; BSR set to: 0
 38172  00E8' 0101               	movlb	1	; () banked
 38173  00EA' 5100'              	movf	_allocatedTimers& (0+255),w,b	;volatile
 38174  00EC' 0100               	movlb	0	; () banked
 38175  00EE' 5D00'              	subwf	SwTimersInterrupt@i& (0+255),w,b
 38176  00F0' A0D8               	btfss	status,0,c
 38177  00F2' D799               	goto	l288
 38178                           
 38179                           ; BSR set to: 0
 38180                           ;sw_timer.c: 315: }
 38181                           ;sw_timer.c: 316: }
 38182                           ;sw_timer.c: 317: }
 38183                           ;sw_timer.c: 318: }
 38184                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 38185  00F4' C02C' F020'        	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 38186  00F8' C02D' F021'        	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 38187  00FC' C02E' F022'        	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 38188  0100' C02F' F023'        	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 38189                           
 38190                           ; BSR set to: 0
 38191  0104' 0012               	return		;funcret
 38192  0106'                    __end_of_SwTimersInterrupt:
 38193                           	opt stack 0
 38194                           tosu	equ	0xFFF
 38195                           tosh	equ	0xFFE
 38196                           tosl	equ	0xFFD
 38197                           pclath	equ	0xFFA
 38198                           tblptru	equ	0xFF8
 38199                           tblptrh	equ	0xFF7
 38200                           tblptrl	equ	0xFF6
 38201                           tablat	equ	0xFF5
 38202                           prodh	equ	0xFF4
 38203                           prodl	equ	0xFF3
 38204                           intcon	equ	0xFF2
 38205                           intcon2	equ	0xFF1
 38206                           intcon3	equ	0xFF0
 38207                           indf0	equ	0xFEF
 38208                           postinc0	equ	0xFEE
 38209                           plusw0	equ	0xFEB
 38210                           fsr0h	equ	0xFEA
 38211                           fsr0l	equ	0xFE9
 38212                           wreg	equ	0xFE8
 38213                           postinc1	equ	0xFE6
 38214                           postdec1	equ	0xFE5
 38215                           plusw1	equ	0xFE3
 38216                           fsr1h	equ	0xFE2
 38217                           fsr1l	equ	0xFE1
 38218                           indf2	equ	0xFDF
 38219                           postinc2	equ	0xFDE
 38220                           postdec2	equ	0xFDD
 38221                           plusw2	equ	0xFDB
 38222                           fsr2h	equ	0xFDA
 38223                           fsr2l	equ	0xFD9
 38224                           status	equ	0xFD8
 38225                           
 38226 ;; *************** function _TMR_GetDeltaTime *****************
 38227 ;; Defined at:
 38228 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38229 ;; Parameters:    Size  Location     Type
 38230 ;;		None
 38231 ;; Auto vars:     Size  Location     Type
 38232 ;;		None
 38233 ;; Return value:  Size  Location     Type
 38234 ;;                  4    8[BANK0 ] unsigned long 
 38235 ;; Registers used:
 38236 ;;		wreg, status,2, status,0, cstack
 38237 ;; Tracked objects:
 38238 ;;		On entry : 0/0
 38239 ;;		On exit  : 0/0
 38240 ;;		Unchanged: 0/0
 38241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38242 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38244 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38245 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38246 ;;Total ram usage:       24 bytes
 38247 ;; Hardware stack levels used:    1
 38248 ;; Hardware stack levels required when called:    8
 38249 ;; This function calls:
 38250 ;;		_TMR1_ReadTimer
 38251 ;; This function is called by:
 38252 ;;		_SwTimersInterrupt
 38253 ;; This function uses a non-reentrant model
 38254 ;;
 38255                           
 38256                           	psect	text182
 38257  0000'                    __ptext182:
 38258                           	opt stack 0
 38259  0000'                    _TMR_GetDeltaTime:
 38260                           	opt stack 18
 38261                           
 38262                           ;sw_timer.c: 90: static uint32_t retVal;
 38263                           ;sw_timer.c: 91: static uint16_t tmrVal;
 38264                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 38265                           
 38266                           ; BSR set to: 0
 38267                           ;incstack = 0
 38268  0000' EC00' F000'        	call	_TMR1_ReadTimer	;wreg free
 38269  0004' C000' F00C'        	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 38270  0008' C001' F00D'        	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 38271                           
 38272                           ;sw_timer.c: 95: if (timerOverflow == 1)
 38273  000C' 040B'              	decf	_timerOverflow,w,c	;volatile
 38274  000E' A4D8               	btfss	status,2,c
 38275  0010' D071               	goto	l220
 38276                           
 38277                           ;sw_timer.c: 96: {
 38278                           ;sw_timer.c: 97: timerOverflow = 0;
 38279  0012' 0E00               	movlw	0
 38280  0014' 6E0B'              	movwf	_timerOverflow,c	;volatile
 38281                           
 38282                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 38283  0016' C000' F00C'        	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 38284  001A' C001' F00D'        	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 38285  001E' C002' F00E'        	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 38286  0022' C003' F00F'        	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 38287  0026' 0100               	movlb	0	; () banked
 38288  0028' 1F00'              	comf	??_TMR_GetDeltaTime& (0+255),f,b
 38289  002A' 1F00'              	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 38290  002C' 1F00'              	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 38291  002E' 1F00'              	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 38292  0030' 2B00'              	incf	??_TMR_GetDeltaTime& (0+255),f,b
 38293  0032' 0E00               	movlw	0
 38294  0034' 2300'              	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 38295  0036' 2300'              	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 38296  0038' 2300'              	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 38297  003A' 5008'              	movf	_reloadVal,w,c	;volatile
 38298  003C' 6F00'              	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 38299  003E' 5009'              	movf	_reloadVal+1,w,c	;volatile
 38300  0040' 6F00'              	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 38301  0042' 6B00'              	clrf	(??_TMR_GetDeltaTime+6)& (0+255),b
 38302  0044' 6B00'              	clrf	(??_TMR_GetDeltaTime+7)& (0+255),b
 38303  0046' 1F00'              	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 38304  0048' 1F00'              	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 38305  004A' 1F00'              	comf	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 38306  004C' 1F00'              	comf	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 38307  004E' 2B00'              	incf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 38308  0050' 0E00               	movlw	0
 38309  0052' 2300'              	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 38310  0054' 2300'              	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 38311  0056' 2300'              	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 38312  0058' 0101               	movlb	1	; () banked
 38313  005A' 5100'              	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 38314  005C' 0100               	movlb	0	; () banked
 38315  005E' 2500'              	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 38316  0060' 6F00'              	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 38317  0062' 0101               	movlb	1	; () banked
 38318  0064' 5100'              	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 38319  0066' 0100               	movlb	0	; () banked
 38320  0068' 2100'              	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 38321  006A' 6F00'              	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 38322  006C' 0E00               	movlw	0
 38323  006E' 2100'              	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 38324  0070' 6F00'              	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 38325  0072' 0E00               	movlw	0
 38326  0074' 2100'              	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 38327  0076' 6F00'              	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 38328  0078' 5100'              	movf	??_TMR_GetDeltaTime& (0+255),w,b
 38329  007A' 2500'              	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 38330  007C' 6F00'              	movwf	(??_TMR_GetDeltaTime+12)& (0+255),b
 38331  007E' 5100'              	movf	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 38332  0080' 2100'              	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 38333  0082' 6F00'              	movwf	(??_TMR_GetDeltaTime+13)& (0+255),b
 38334  0084' 5100'              	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 38335  0086' 2100'              	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 38336  0088' 6F00'              	movwf	(??_TMR_GetDeltaTime+14)& (0+255),b
 38337  008A' 5100'              	movf	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 38338  008C' 2100'              	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 38339  008E' 6F00'              	movwf	(??_TMR_GetDeltaTime+15)& (0+255),b
 38340  0090' 5004'              	movf	_ticksAdded,w,c	;volatile
 38341  0092' 2500'              	addwf	(??_TMR_GetDeltaTime+12)& (0+255),w,b
 38342  0094' 6F00'              	movwf	(??_TMR_GetDeltaTime+16)& (0+255),b
 38343  0096' 5005'              	movf	_ticksAdded+1,w,c	;volatile
 38344  0098' 2100'              	addwfc	(??_TMR_GetDeltaTime+13)& (0+255),w,b
 38345  009A' 6F00'              	movwf	(??_TMR_GetDeltaTime+17)& (0+255),b
 38346  009C' 5006'              	movf	_ticksAdded+2,w,c	;volatile
 38347  009E' 2100'              	addwfc	(??_TMR_GetDeltaTime+14)& (0+255),w,b
 38348  00A0' 6F00'              	movwf	(??_TMR_GetDeltaTime+18)& (0+255),b
 38349  00A2' 5007'              	movf	_ticksAdded+3,w,c	;volatile
 38350  00A4' 2100'              	addwfc	(??_TMR_GetDeltaTime+15)& (0+255),w,b
 38351  00A6' 6F00'              	movwf	(??_TMR_GetDeltaTime+19)& (0+255),b
 38352  00A8' 0E00               	movlw	0
 38353  00AA' 2500'              	addwf	(??_TMR_GetDeltaTime+16)& (0+255),w,b
 38354  00AC' 0101               	movlb	1	; () banked
 38355  00AE' 6F00'              	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 38356  00B0' 0E00               	movlw	0
 38357  00B2' 0100               	movlb	0	; () banked
 38358  00B4' 2100'              	addwfc	(??_TMR_GetDeltaTime+17)& (0+255),w,b
 38359  00B6' 0101               	movlb	1	; () banked
 38360  00B8' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 38361  00BA' 0E01               	movlw	1
 38362  00BC' 0100               	movlb	0	; () banked
 38363  00BE' 2100'              	addwfc	(??_TMR_GetDeltaTime+18)& (0+255),w,b
 38364  00C0' 0101               	movlb	1	; () banked
 38365  00C2' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 38366  00C4' 0E00               	movlw	0
 38367  00C6' 0100               	movlb	0	; () banked
 38368  00C8' 2100'              	addwfc	(??_TMR_GetDeltaTime+19)& (0+255),w,b
 38369  00CA' 0101               	movlb	1	; () banked
 38370  00CC' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 38371                           
 38372                           ; BSR set to: 1
 38373                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 38374  00CE' C00C' F000'        	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 38375  00D2' C00D' F001'        	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 38376  00D6' 6A02'              	clrf	_ticksAccounted+2,c	;volatile
 38377  00D8' 6A03'              	clrf	_ticksAccounted+3,c	;volatile
 38378                           
 38379                           ; BSR set to: 1
 38380                           ;sw_timer.c: 100: ticksAdded = 0;
 38381  00DA' 0E00               	movlw	0
 38382  00DC' 6E04'              	movwf	_ticksAdded,c	;volatile
 38383  00DE' 0E00               	movlw	0
 38384  00E0' 6E05'              	movwf	_ticksAdded+1,c	;volatile
 38385  00E2' 0E00               	movlw	0
 38386  00E4' 6E06'              	movwf	_ticksAdded+2,c	;volatile
 38387  00E6' 0E00               	movlw	0
 38388  00E8' 6E07'              	movwf	_ticksAdded+3,c	;volatile
 38389                           
 38390                           ; BSR set to: 1
 38391                           ;sw_timer.c: 101: reloadVal = 0;
 38392  00EA' 0E00               	movlw	0
 38393  00EC' 6E09'              	movwf	_reloadVal+1,c	;volatile
 38394  00EE' 0E00               	movlw	0
 38395  00F0' 6E08'              	movwf	_reloadVal,c	;volatile
 38396                           
 38397                           ;sw_timer.c: 102: }
 38398  00F2' D049               	goto	l221
 38399  00F4'                    l220:
 38400                           
 38401                           ;sw_timer.c: 103: else
 38402                           ;sw_timer.c: 104: {
 38403                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 38404                           
 38405                           ; BSR set to: 1
 38406  00F4' C000' F00C'        	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 38407  00F8' C001' F00D'        	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 38408  00FC' C002' F00E'        	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 38409  0100' C003' F00F'        	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 38410  0104' 0100               	movlb	0	; () banked
 38411  0106' 1F00'              	comf	??_TMR_GetDeltaTime& (0+255),f,b
 38412  0108' 1F00'              	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 38413  010A' 1F00'              	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 38414  010C' 1F00'              	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 38415  010E' 2B00'              	incf	??_TMR_GetDeltaTime& (0+255),f,b
 38416  0110' 0E00               	movlw	0
 38417  0112' 2300'              	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 38418  0114' 2300'              	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 38419  0116' 2300'              	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 38420  0118' C008' F010'        	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
 38421  011C' C009' F011'        	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
 38422  0120' 1F00'              	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 38423  0122' 1F00'              	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 38424  0124' 4B00'              	infsnz	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 38425  0126' 2B00'              	incf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 38426  0128' 0101               	movlb	1	; () banked
 38427  012A' 5100'              	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 38428  012C' 0100               	movlb	0	; () banked
 38429  012E' 2700'              	addwf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 38430  0130' 0101               	movlb	1	; () banked
 38431  0132' 5100'              	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 38432  0134' 0100               	movlb	0	; () banked
 38433  0136' 2300'              	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 38434  0138' 5100'              	movf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 38435  013A' 2500'              	addwf	??_TMR_GetDeltaTime& (0+255),w,b
 38436  013C' 6F00'              	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 38437  013E' 5100'              	movf	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 38438  0140' 2100'              	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 38439  0142' 6F00'              	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 38440  0144' 0E00               	movlw	0
 38441  0146' 2100'              	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 38442  0148' 6F00'              	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 38443  014A' 0E00               	movlw	0
 38444  014C' 2100'              	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 38445  014E' 6F00'              	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 38446  0150' 5004'              	movf	_ticksAdded,w,c	;volatile
 38447  0152' 2500'              	addwf	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 38448  0154' 0101               	movlb	1	; () banked
 38449  0156' 6F00'              	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 38450  0158' 5005'              	movf	_ticksAdded+1,w,c	;volatile
 38451  015A' 0100               	movlb	0	; () banked
 38452  015C' 2100'              	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 38453  015E' 0101               	movlb	1	; () banked
 38454  0160' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 38455  0162' 5006'              	movf	_ticksAdded+2,w,c	;volatile
 38456  0164' 0100               	movlb	0	; () banked
 38457  0166' 2100'              	addwfc	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 38458  0168' 0101               	movlb	1	; () banked
 38459  016A' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 38460  016C' 5007'              	movf	_ticksAdded+3,w,c	;volatile
 38461  016E' 0100               	movlb	0	; () banked
 38462  0170' 2100'              	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 38463  0172' 0101               	movlb	1	; () banked
 38464  0174' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 38465                           
 38466                           ;sw_timer.c: 106: ticksAccounted += retVal;
 38467  0176' 5100'              	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 38468  0178' 2600'              	addwf	_ticksAccounted,f,c	;volatile
 38469  017A' 5100'              	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 38470  017C' 2201'              	addwfc	_ticksAccounted+1,f,c	;volatile
 38471  017E' 5100'              	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 38472  0180' 2202'              	addwfc	_ticksAccounted+2,f,c	;volatile
 38473  0182' 5100'              	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 38474  0184' 2203'              	addwfc	_ticksAccounted+3,f,c	;volatile
 38475  0186'                    l221:
 38476                           
 38477                           ; BSR set to: 1
 38478                           ;sw_timer.c: 107: }
 38479                           ;sw_timer.c: 109: return retVal;
 38480                           
 38481                           ; BSR set to: 1
 38482  0186' C004' F008'        	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 38483  018A' C005' F009'        	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 38484  018E' C006' F00A'        	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 38485  0192' C007' F00B'        	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 38486  0196' 0012               	return	
 38487  0198'                    __end_of_TMR_GetDeltaTime:
 38488                           	opt stack 0
 38489                           tosu	equ	0xFFF
 38490                           tosh	equ	0xFFE
 38491                           tosl	equ	0xFFD
 38492                           pclath	equ	0xFFA
 38493                           tblptru	equ	0xFF8
 38494                           tblptrh	equ	0xFF7
 38495                           tblptrl	equ	0xFF6
 38496                           tablat	equ	0xFF5
 38497                           prodh	equ	0xFF4
 38498                           prodl	equ	0xFF3
 38499                           intcon	equ	0xFF2
 38500                           intcon2	equ	0xFF1
 38501                           intcon3	equ	0xFF0
 38502                           indf0	equ	0xFEF
 38503                           postinc0	equ	0xFEE
 38504                           plusw0	equ	0xFEB
 38505                           fsr0h	equ	0xFEA
 38506                           fsr0l	equ	0xFE9
 38507                           wreg	equ	0xFE8
 38508                           postinc1	equ	0xFE6
 38509                           postdec1	equ	0xFE5
 38510                           plusw1	equ	0xFE3
 38511                           fsr1h	equ	0xFE2
 38512                           fsr1l	equ	0xFE1
 38513                           indf2	equ	0xFDF
 38514                           postinc2	equ	0xFDE
 38515                           postdec2	equ	0xFDD
 38516                           plusw2	equ	0xFDB
 38517                           fsr2h	equ	0xFDA
 38518                           fsr2l	equ	0xFD9
 38519                           status	equ	0xFD8
 38520                           
 38521 ;; *************** function _TMR1_ReadTimer *****************
 38522 ;; Defined at:
 38523 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 38524 ;; Parameters:    Size  Location     Type
 38525 ;;		None
 38526 ;; Auto vars:     Size  Location     Type
 38527 ;;  readVal         2    4[BANK0 ] unsigned int 
 38528 ;;  readValLow      1    7[BANK0 ] unsigned char 
 38529 ;;  readValHigh     1    6[BANK0 ] unsigned char 
 38530 ;; Return value:  Size  Location     Type
 38531 ;;                  2    0[BANK0 ] unsigned int 
 38532 ;; Registers used:
 38533 ;;		wreg, status,2
 38534 ;; Tracked objects:
 38535 ;;		On entry : 0/0
 38536 ;;		On exit  : 0/0
 38537 ;;		Unchanged: 0/0
 38538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38539 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38540 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38541 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38542 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38543 ;;Total ram usage:        8 bytes
 38544 ;; Hardware stack levels used:    1
 38545 ;; Hardware stack levels required when called:    7
 38546 ;; This function calls:
 38547 ;;		Nothing
 38548 ;; This function is called by:
 38549 ;;		_TMR_GetDeltaTime
 38550 ;;		_TMR_SwapTimer
 38551 ;; This function uses a non-reentrant model
 38552 ;;
 38553                           
 38554                           	psect	text183
 38555  0000'                    __ptext183:
 38556                           	opt stack 0
 38557  0000'                    _TMR1_ReadTimer:
 38558                           	opt stack 18
 38559                           
 38560                           ;tmr1.c: 107: uint16_t readVal;
 38561                           ;tmr1.c: 108: uint8_t readValHigh;
 38562                           ;tmr1.c: 109: uint8_t readValLow;
 38563                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 38564                           
 38565                           ; BSR set to: 1
 38566                           ;incstack = 0
 38567  0000' 82CD               	bsf	4045,1,c	;volatile
 38568                           
 38569                           ;tmr1.c: 113: readValLow = TMR1L;
 38570  0002' CFCE F007'         	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 38571                           
 38572                           ;tmr1.c: 114: readValHigh = TMR1H;
 38573  0006' CFCF F006'         	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 38574                           
 38575                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 38576  000A' 0100               	movlb	0	; () banked
 38577  000C' 5100'              	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 38578  000E' 6F00'              	movwf	??_TMR1_ReadTimer& (0+255),b
 38579  0010' 5100'              	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 38580  0012' 6F00'              	movwf	TMR1_ReadTimer@readVal& (0+255),b
 38581  0014' C002' F005'        	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 38582                           
 38583                           ; BSR set to: 0
 38584                           ;tmr1.c: 118: return readVal;
 38585  0018' C004' F000'        	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 38586  001C' C005' F001'        	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 38587  0020' 0012               	return	
 38588  0022'                    __end_of_TMR1_ReadTimer:
 38589                           	opt stack 0
 38590                           tosu	equ	0xFFF
 38591                           tosh	equ	0xFFE
 38592                           tosl	equ	0xFFD
 38593                           pclath	equ	0xFFA
 38594                           tblptru	equ	0xFF8
 38595                           tblptrh	equ	0xFF7
 38596                           tblptrl	equ	0xFF6
 38597                           tablat	equ	0xFF5
 38598                           prodh	equ	0xFF4
 38599                           prodl	equ	0xFF3
 38600                           intcon	equ	0xFF2
 38601                           intcon2	equ	0xFF1
 38602                           intcon3	equ	0xFF0
 38603                           indf0	equ	0xFEF
 38604                           postinc0	equ	0xFEE
 38605                           plusw0	equ	0xFEB
 38606                           fsr0h	equ	0xFEA
 38607                           fsr0l	equ	0xFE9
 38608                           wreg	equ	0xFE8
 38609                           postinc1	equ	0xFE6
 38610                           postdec1	equ	0xFE5
 38611                           plusw1	equ	0xFE3
 38612                           fsr1h	equ	0xFE2
 38613                           fsr1l	equ	0xFE1
 38614                           indf2	equ	0xFDF
 38615                           postinc2	equ	0xFDE
 38616                           postdec2	equ	0xFDD
 38617                           plusw2	equ	0xFDB
 38618                           fsr2h	equ	0xFDA
 38619                           fsr2l	equ	0xFD9
 38620                           status	equ	0xFD8
 38621                           
 38622 ;; *************** function _SwTimerSetTimeout *****************
 38623 ;; Defined at:
 38624 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38625 ;; Parameters:    Size  Location     Type
 38626 ;;  timerId         1    wreg     unsigned char 
 38627 ;;  timeout         4   13[BANK0 ] unsigned long 
 38628 ;; Auto vars:     Size  Location     Type
 38629 ;;  timerId         1   21[BANK0 ] unsigned char 
 38630 ;; Return value:  Size  Location     Type
 38631 ;;                  1    wreg      void 
 38632 ;; Registers used:
 38633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38634 ;; Tracked objects:
 38635 ;;		On entry : 0/0
 38636 ;;		On exit  : 0/0
 38637 ;;		Unchanged: 0/0
 38638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38639 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38640 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38641 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38642 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38643 ;;Total ram usage:        9 bytes
 38644 ;; Hardware stack levels used:    1
 38645 ;; Hardware stack levels required when called:    7
 38646 ;; This function calls:
 38647 ;;		Nothing
 38648 ;; This function is called by:
 38649 ;;		_RADIO_Transmit
 38650 ;;		_RADIO_ReceiveStart
 38651 ;;		_LORAWAN_TxDone
 38652 ;;		_LORAWAN_RxTimeout
 38653 ;;		_StartReTxTimer
 38654 ;;		_DutyCycleCallback
 38655 ;;		_LORAWAN_Join
 38656 ;;		_LORAWAN_LinkCheckConfigure
 38657 ;;		_LORAWAN_LinkCheckCallback
 38658 ;;		_UpdateRetransmissionAckTimeoutState
 38659 ;;		_UpdateJoinSuccessState
 38660 ;; This function uses a non-reentrant model
 38661 ;;
 38662                           
 38663                           	psect	text184
 38664  0000'                    __ptext184:
 38665                           	opt stack 0
 38666  0000'                    _SwTimerSetTimeout:
 38667                           	opt stack 21
 38668                           
 38669                           ; BSR set to: 0
 38670                           ;incstack = 0
 38671                           ;SwTimerSetTimeout@timerId stored from wreg
 38672  0000' 0100               	movlb	0	; () banked
 38673  0002' 6F00'              	movwf	SwTimerSetTimeout@timerId& (0+255),b
 38674                           
 38675                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 38676  0004' 9EF2               	bcf	intcon,7,c	;volatile
 38677                           
 38678                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 38679  0006' 0EE0               	movlw	224
 38680  0008' 0100               	movlb	0	; () banked
 38681  000A' 2500'              	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 38682  000C' 6F00'              	movwf	??_SwTimerSetTimeout& (0+255),b
 38683  000E' 0EFF               	movlw	255
 38684  0010' 2100'              	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 38685  0012' 6F00'              	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 38686  0014' 0EFF               	movlw	255
 38687  0016' 2100'              	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 38688  0018' 6F00'              	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 38689  001A' 0EFF               	movlw	255
 38690  001C' 2100'              	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 38691  001E' 6F00'              	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 38692  0020' 5100'              	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 38693  0022' 0D08               	mullw	8
 38694  0024' 0E00'              	movlw	low _swTimers
 38695  0026' 24F3               	addwf	prodl,w,c
 38696  0028' 6ED9               	movwf	fsr2l,c
 38697  002A' 0E00'              	movlw	high _swTimers
 38698  002C' 20F4               	addwfc	prodh,w,c
 38699  002E' 6EDA               	movwf	fsr2h,c
 38700  0030' C011' FFDE         	movff	??_SwTimerSetTimeout,postinc2
 38701  0034' C012' FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 38702  0038' C013' FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 38703  003C' C014' FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 38704                           
 38705                           ; BSR set to: 0
 38706                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 38707  0040' 8EF2               	bsf	intcon,7,c	;volatile
 38708                           
 38709                           ; BSR set to: 0
 38710  0042' 0012               	return		;funcret
 38711  0044'                    __end_of_SwTimerSetTimeout:
 38712                           	opt stack 0
 38713                           tosu	equ	0xFFF
 38714                           tosh	equ	0xFFE
 38715                           tosl	equ	0xFFD
 38716                           pclath	equ	0xFFA
 38717                           tblptru	equ	0xFF8
 38718                           tblptrh	equ	0xFF7
 38719                           tblptrl	equ	0xFF6
 38720                           tablat	equ	0xFF5
 38721                           prodh	equ	0xFF4
 38722                           prodl	equ	0xFF3
 38723                           intcon	equ	0xFF2
 38724                           intcon2	equ	0xFF1
 38725                           intcon3	equ	0xFF0
 38726                           indf0	equ	0xFEF
 38727                           postinc0	equ	0xFEE
 38728                           plusw0	equ	0xFEB
 38729                           fsr0h	equ	0xFEA
 38730                           fsr0l	equ	0xFE9
 38731                           wreg	equ	0xFE8
 38732                           postinc1	equ	0xFE6
 38733                           postdec1	equ	0xFE5
 38734                           plusw1	equ	0xFE3
 38735                           fsr1h	equ	0xFE2
 38736                           fsr1l	equ	0xFE1
 38737                           indf2	equ	0xFDF
 38738                           postinc2	equ	0xFDE
 38739                           postdec2	equ	0xFDD
 38740                           plusw2	equ	0xFDB
 38741                           fsr2h	equ	0xFDA
 38742                           fsr2l	equ	0xFD9
 38743                           status	equ	0xFD8
 38744                           
 38745 ;; *************** function _InitDefault868Channels *****************
 38746 ;; Defined at:
 38747 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 38748 ;; Parameters:    Size  Location     Type
 38749 ;;		None
 38750 ;; Auto vars:     Size  Location     Type
 38751 ;;  i               1   11[BANK0 ] unsigned char 
 38752 ;; Return value:  Size  Location     Type
 38753 ;;                  1    wreg      void 
 38754 ;; Registers used:
 38755 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38756 ;; Tracked objects:
 38757 ;;		On entry : 0/0
 38758 ;;		On exit  : 0/0
 38759 ;;		Unchanged: 0/0
 38760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38762 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38764 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38765 ;;Total ram usage:        1 bytes
 38766 ;; Hardware stack levels used:    1
 38767 ;; Hardware stack levels required when called:    8
 38768 ;; This function calls:
 38769 ;;		_memcpy
 38770 ;;		_memset
 38771 ;; This function is called by:
 38772 ;;		_LORAWAN_Reset
 38773 ;; This function uses a non-reentrant model
 38774 ;;
 38775                           
 38776                           	psect	text185
 38777  0000'                    __ptext185:
 38778                           	opt stack 0
 38779  0000'                    _InitDefault868Channels:
 38780                           	opt stack 20
 38781                           
 38782                           ;lorawan_eu.c: 981: uint8_t i;
 38783                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 38784                           
 38785                           ; BSR set to: 0
 38786                           ;incstack = 0
 38787  0000' 0E00'              	movlw	low _Channels
 38788  0002' 0100               	movlb	0	; () banked
 38789  0004' 6F00'              	movwf	memset@p1& (0+255),b
 38790  0006' 0E00'              	movlw	high _Channels
 38791  0008' 6F00'              	movwf	(memset@p1+1)& (0+255),b
 38792  000A' 0E00               	movlw	0
 38793  000C' 6F00'              	movwf	(memset@c+1)& (0+255),b
 38794  000E' 0E00               	movlw	0
 38795  0010' 6F00'              	movwf	memset@c& (0+255),b
 38796  0012' 0E00               	movlw	0
 38797  0014' 6F00'              	movwf	(memset@n+1)& (0+255),b
 38798  0016' 0EE0               	movlw	224
 38799  0018' 6F00'              	movwf	memset@n& (0+255),b
 38800  001A' EC00' F000'        	call	_memset	;wreg free
 38801                           
 38802                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 38803  001E' 0E00'              	movlw	low _Channels
 38804  0020' 0100               	movlb	0	; () banked
 38805  0022' 6F00'              	movwf	memcpy@d1& (0+255),b
 38806  0024' 0E00'              	movlw	high _Channels
 38807  0026' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 38808  0028' 0E00'              	movlw	low _DefaultChannels868
 38809  002A' 6F00'              	movwf	memcpy@s1& (0+255),b
 38810  002C' 0E00'              	movlw	high _DefaultChannels868
 38811  002E' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 38812  0030' 0E00               	movlw	0
 38813  0032' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 38814  0034' 0E2A               	movlw	42
 38815  0036' 6F00'              	movwf	memcpy@n& (0+255),b
 38816  0038' EC00' F000'        	call	_memcpy	;wreg free
 38817                           
 38818                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 38819  003C' 0E03               	movlw	3
 38820  003E' 0100               	movlb	0	; () banked
 38821  0040' 6F00'              	movwf	InitDefault868Channels@i& (0+255),b
 38822  0042'                    l15854:
 38823                           
 38824                           ; BSR set to: 0
 38825  0042' 0E0F               	movlw	15
 38826  0044' 6500'              	cpfsgt	InitDefault868Channels@i& (0+255),b
 38827  0046' D001               	goto	l1205
 38828  0048' 0012               	return	
 38829  004A'                    l1205:
 38830                           
 38831                           ; BSR set to: 0
 38832                           ;lorawan_eu.c: 986: {
 38833                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 38834                           
 38835                           ; BSR set to: 0
 38836  004A' 5100'              	movf	InitDefault868Channels@i& (0+255),w,b
 38837  004C' 0D0E               	mullw	14
 38838  004E' 0E06               	movlw	6
 38839  0050' 26F3               	addwf	prodl,f,c
 38840  0052' 0E00               	movlw	0
 38841  0054' 22F4               	addwfc	prodh,f,c
 38842  0056' 0E00'              	movlw	low _Channels
 38843  0058' 24F3               	addwf	prodl,w,c
 38844  005A' 6ED9               	movwf	fsr2l,c
 38845  005C' 0E00'              	movlw	high _Channels
 38846  005E' 20F4               	addwfc	prodh,w,c
 38847  0060' 6EDA               	movwf	fsr2h,c
 38848  0062' 0EFF               	movlw	255
 38849  0064' 6EDE               	movwf	postinc2,c
 38850  0066' 0EFF               	movlw	255
 38851  0068' 6EDD               	movwf	postdec2,c
 38852                           
 38853                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 38854  006A' 5100'              	movf	InitDefault868Channels@i& (0+255),w,b
 38855  006C' 0D0E               	mullw	14
 38856  006E' 0E05               	movlw	5
 38857  0070' 26F3               	addwf	prodl,f,c
 38858  0072' 0E00               	movlw	0
 38859  0074' 22F4               	addwfc	prodh,f,c
 38860  0076' 0E00'              	movlw	low _Channels
 38861  0078' 24F3               	addwf	prodl,w,c
 38862  007A' 6ED9               	movwf	fsr2l,c
 38863  007C' 0E00'              	movlw	high _Channels
 38864  007E' 20F4               	addwfc	prodh,w,c
 38865  0080' 6EDA               	movwf	fsr2h,c
 38866  0082' 0EFF               	movlw	255
 38867  0084' 6EDF               	movwf	indf2,c
 38868                           
 38869                           ; BSR set to: 0
 38870  0086' 2B00'              	incf	InitDefault868Channels@i& (0+255),f,b
 38871  0088' D7DC               	goto	l15854
 38872  008A'                    __end_of_InitDefault868Channels:
 38873                           	opt stack 0
 38874                           tosu	equ	0xFFF
 38875                           tosh	equ	0xFFE
 38876                           tosl	equ	0xFFD
 38877                           pclath	equ	0xFFA
 38878                           tblptru	equ	0xFF8
 38879                           tblptrh	equ	0xFF7
 38880                           tblptrl	equ	0xFF6
 38881                           tablat	equ	0xFF5
 38882                           prodh	equ	0xFF4
 38883                           prodl	equ	0xFF3
 38884                           intcon	equ	0xFF2
 38885                           intcon2	equ	0xFF1
 38886                           intcon3	equ	0xFF0
 38887                           indf0	equ	0xFEF
 38888                           postinc0	equ	0xFEE
 38889                           plusw0	equ	0xFEB
 38890                           fsr0h	equ	0xFEA
 38891                           fsr0l	equ	0xFE9
 38892                           wreg	equ	0xFE8
 38893                           postinc1	equ	0xFE6
 38894                           postdec1	equ	0xFE5
 38895                           plusw1	equ	0xFE3
 38896                           fsr1h	equ	0xFE2
 38897                           fsr1l	equ	0xFE1
 38898                           indf2	equ	0xFDF
 38899                           postinc2	equ	0xFDE
 38900                           postdec2	equ	0xFDD
 38901                           plusw2	equ	0xFDB
 38902                           fsr2h	equ	0xFDA
 38903                           fsr2l	equ	0xFD9
 38904                           status	equ	0xFD8
 38905                           
 38906 ;; *************** function _InitDefault433Channels *****************
 38907 ;; Defined at:
 38908 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 38909 ;; Parameters:    Size  Location     Type
 38910 ;;		None
 38911 ;; Auto vars:     Size  Location     Type
 38912 ;;  i               1   11[BANK0 ] unsigned char 
 38913 ;; Return value:  Size  Location     Type
 38914 ;;                  1    wreg      void 
 38915 ;; Registers used:
 38916 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38917 ;; Tracked objects:
 38918 ;;		On entry : 0/0
 38919 ;;		On exit  : 0/0
 38920 ;;		Unchanged: 0/0
 38921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38925 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38926 ;;Total ram usage:        1 bytes
 38927 ;; Hardware stack levels used:    1
 38928 ;; Hardware stack levels required when called:    8
 38929 ;; This function calls:
 38930 ;;		_memcpy
 38931 ;;		_memset
 38932 ;; This function is called by:
 38933 ;;		_LORAWAN_Reset
 38934 ;; This function uses a non-reentrant model
 38935 ;;
 38936                           
 38937                           	psect	text186
 38938  0000'                    __ptext186:
 38939                           	opt stack 0
 38940  0000'                    _InitDefault433Channels:
 38941                           	opt stack 20
 38942                           
 38943                           ;lorawan_eu.c: 996: uint8_t i;
 38944                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 38945                           
 38946                           ; BSR set to: 0
 38947                           ;incstack = 0
 38948  0000' 0E00'              	movlw	low _Channels
 38949  0002' 0100               	movlb	0	; () banked
 38950  0004' 6F00'              	movwf	memset@p1& (0+255),b
 38951  0006' 0E00'              	movlw	high _Channels
 38952  0008' 6F00'              	movwf	(memset@p1+1)& (0+255),b
 38953  000A' 0E00               	movlw	0
 38954  000C' 6F00'              	movwf	(memset@c+1)& (0+255),b
 38955  000E' 0E00               	movlw	0
 38956  0010' 6F00'              	movwf	memset@c& (0+255),b
 38957  0012' 0E00               	movlw	0
 38958  0014' 6F00'              	movwf	(memset@n+1)& (0+255),b
 38959  0016' 0EE0               	movlw	224
 38960  0018' 6F00'              	movwf	memset@n& (0+255),b
 38961  001A' EC00' F000'        	call	_memset	;wreg free
 38962                           
 38963                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 38964  001E' 0E00'              	movlw	low _Channels
 38965  0020' 0100               	movlb	0	; () banked
 38966  0022' 6F00'              	movwf	memcpy@d1& (0+255),b
 38967  0024' 0E00'              	movlw	high _Channels
 38968  0026' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
 38969  0028' 0E00'              	movlw	low _DefaultChannels433
 38970  002A' 6F00'              	movwf	memcpy@s1& (0+255),b
 38971  002C' 0E00'              	movlw	high _DefaultChannels433
 38972  002E' 6F00'              	movwf	(memcpy@s1+1)& (0+255),b
 38973  0030' 0E00               	movlw	0
 38974  0032' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
 38975  0034' 0E2A               	movlw	42
 38976  0036' 6F00'              	movwf	memcpy@n& (0+255),b
 38977  0038' EC00' F000'        	call	_memcpy	;wreg free
 38978                           
 38979                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 38980  003C' 0E03               	movlw	3
 38981  003E' 0100               	movlb	0	; () banked
 38982  0040' 6F00'              	movwf	InitDefault433Channels@i& (0+255),b
 38983  0042'                    l15870:
 38984                           
 38985                           ; BSR set to: 0
 38986  0042' 0E0F               	movlw	15
 38987  0044' 6500'              	cpfsgt	InitDefault433Channels@i& (0+255),b
 38988  0046' D001               	goto	l1210
 38989  0048' 0012               	return	
 38990  004A'                    l1210:
 38991                           
 38992                           ; BSR set to: 0
 38993                           ;lorawan_eu.c: 1001: {
 38994                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 38995                           
 38996                           ; BSR set to: 0
 38997  004A' 5100'              	movf	InitDefault433Channels@i& (0+255),w,b
 38998  004C' 0D0E               	mullw	14
 38999  004E' 0E06               	movlw	6
 39000  0050' 26F3               	addwf	prodl,f,c
 39001  0052' 0E00               	movlw	0
 39002  0054' 22F4               	addwfc	prodh,f,c
 39003  0056' 0E00'              	movlw	low _Channels
 39004  0058' 24F3               	addwf	prodl,w,c
 39005  005A' 6ED9               	movwf	fsr2l,c
 39006  005C' 0E00'              	movlw	high _Channels
 39007  005E' 20F4               	addwfc	prodh,w,c
 39008  0060' 6EDA               	movwf	fsr2h,c
 39009  0062' 0EFF               	movlw	255
 39010  0064' 6EDE               	movwf	postinc2,c
 39011  0066' 0EFF               	movlw	255
 39012  0068' 6EDD               	movwf	postdec2,c
 39013                           
 39014                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 39015  006A' 5100'              	movf	InitDefault433Channels@i& (0+255),w,b
 39016  006C' 0D0E               	mullw	14
 39017  006E' 0E05               	movlw	5
 39018  0070' 26F3               	addwf	prodl,f,c
 39019  0072' 0E00               	movlw	0
 39020  0074' 22F4               	addwfc	prodh,f,c
 39021  0076' 0E00'              	movlw	low _Channels
 39022  0078' 24F3               	addwf	prodl,w,c
 39023  007A' 6ED9               	movwf	fsr2l,c
 39024  007C' 0E00'              	movlw	high _Channels
 39025  007E' 20F4               	addwfc	prodh,w,c
 39026  0080' 6EDA               	movwf	fsr2h,c
 39027  0082' 0EFF               	movlw	255
 39028  0084' 6EDF               	movwf	indf2,c
 39029                           
 39030                           ; BSR set to: 0
 39031  0086' 2B00'              	incf	InitDefault433Channels@i& (0+255),f,b
 39032  0088' D7DC               	goto	l15870
 39033  008A'                    __end_of_InitDefault433Channels:
 39034                           	opt stack 0
 39035                           tosu	equ	0xFFF
 39036                           tosh	equ	0xFFE
 39037                           tosl	equ	0xFFD
 39038                           pclath	equ	0xFFA
 39039                           tblptru	equ	0xFF8
 39040                           tblptrh	equ	0xFF7
 39041                           tblptrl	equ	0xFF6
 39042                           tablat	equ	0xFF5
 39043                           prodh	equ	0xFF4
 39044                           prodl	equ	0xFF3
 39045                           intcon	equ	0xFF2
 39046                           intcon2	equ	0xFF1
 39047                           intcon3	equ	0xFF0
 39048                           indf0	equ	0xFEF
 39049                           postinc0	equ	0xFEE
 39050                           plusw0	equ	0xFEB
 39051                           fsr0h	equ	0xFEA
 39052                           fsr0l	equ	0xFE9
 39053                           wreg	equ	0xFE8
 39054                           postinc1	equ	0xFE6
 39055                           postdec1	equ	0xFE5
 39056                           plusw1	equ	0xFE3
 39057                           fsr1h	equ	0xFE2
 39058                           fsr1l	equ	0xFE1
 39059                           indf2	equ	0xFDF
 39060                           postinc2	equ	0xFDE
 39061                           postdec2	equ	0xFDD
 39062                           plusw2	equ	0xFDB
 39063                           fsr2h	equ	0xFDA
 39064                           fsr2l	equ	0xFD9
 39065                           status	equ	0xFD8
 39066                           
 39067 ;; *************** function _memset *****************
 39068 ;; Defined at:
 39069 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 39070 ;; Parameters:    Size  Location     Type
 39071 ;;  p1              2    0[BANK0 ] PTR void 
 39072 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 39073 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 39074 ;;  c               2    2[BANK0 ] int 
 39075 ;;  n               2    4[BANK0 ] unsigned int 
 39076 ;; Auto vars:     Size  Location     Type
 39077 ;;  p               2    6[BANK0 ] PTR unsigned char 
 39078 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 39079 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 39080 ;; Return value:  Size  Location     Type
 39081 ;;                  2    0[BANK0 ] PTR void 
 39082 ;; Registers used:
 39083 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39084 ;; Tracked objects:
 39085 ;;		On entry : 0/0
 39086 ;;		On exit  : 0/0
 39087 ;;		Unchanged: 0/0
 39088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39089 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39090 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39092 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39093 ;;Total ram usage:        8 bytes
 39094 ;; Hardware stack levels used:    1
 39095 ;; Hardware stack levels required when called:    7
 39096 ;; This function calls:
 39097 ;;		Nothing
 39098 ;; This function is called by:
 39099 ;;		_AESCmac
 39100 ;;		_GenerateSubkey
 39101 ;;		_LORAWAN_Reset
 39102 ;;		_InitDefault868Channels
 39103 ;;		_InitDefault433Channels
 39104 ;;		_AssemblePacket
 39105 ;;		_PrepareJoinRequestFrame
 39106 ;;		_PrepareSessionKeys
 39107 ;;		_AssembleEncryptionBlock
 39108 ;; This function uses a non-reentrant model
 39109 ;;
 39110                           
 39111                           	psect	text187
 39112  0000'                    __ptext187:
 39113                           	opt stack 0
 39114  0000'                    _memset:
 39115                           	opt stack 21
 39116                           
 39117                           ; BSR set to: 0
 39118                           ;incstack = 0
 39119  0000' C000' F006'        	movff	memset@p1,memset@p
 39120  0004' C001' F007'        	movff	memset@p1+1,memset@p+1
 39121  0008' D009               	goto	l3006
 39122  000A'                    l12916:
 39123  000A' C006' FFD9         	movff	memset@p,fsr2l
 39124  000E' C007' FFDA         	movff	memset@p+1,fsr2h
 39125  0012' C002' FFDF         	movff	memset@c,indf2
 39126  0016' 0100               	movlb	0	; () banked
 39127  0018' 4B00'              	infsnz	memset@p& (0+255),f,b
 39128  001A' 2B00'              	incf	(memset@p+1)& (0+255),f,b
 39129  001C'                    l3006:
 39130                           
 39131                           ; BSR set to: 0
 39132  001C' 0100               	movlb	0	; () banked
 39133  001E' 0700'              	decf	memset@n& (0+255),f,b
 39134  0020' A0D8               	btfss	status,0,c
 39135  0022' 0700'              	decf	(memset@n+1)& (0+255),f,b
 39136  0024' 2900'              	incf	memset@n& (0+255),w,b
 39137  0026' E1F1               	bnz	l12916
 39138  0028' 2900'              	incf	(memset@n+1)& (0+255),w,b
 39139  002A' B4D8               	btfsc	status,2,c
 39140  002C' 0012               	return	
 39141  002E' D7ED               	goto	l3007
 39142  0030'                    __end_of_memset:
 39143                           	opt stack 0
 39144                           tosu	equ	0xFFF
 39145                           tosh	equ	0xFFE
 39146                           tosl	equ	0xFFD
 39147                           pclath	equ	0xFFA
 39148                           tblptru	equ	0xFF8
 39149                           tblptrh	equ	0xFF7
 39150                           tblptrl	equ	0xFF6
 39151                           tablat	equ	0xFF5
 39152                           prodh	equ	0xFF4
 39153                           prodl	equ	0xFF3
 39154                           intcon	equ	0xFF2
 39155                           intcon2	equ	0xFF1
 39156                           intcon3	equ	0xFF0
 39157                           indf0	equ	0xFEF
 39158                           postinc0	equ	0xFEE
 39159                           plusw0	equ	0xFEB
 39160                           fsr0h	equ	0xFEA
 39161                           fsr0l	equ	0xFE9
 39162                           wreg	equ	0xFE8
 39163                           postinc1	equ	0xFE6
 39164                           postdec1	equ	0xFE5
 39165                           plusw1	equ	0xFE3
 39166                           fsr1h	equ	0xFE2
 39167                           fsr1l	equ	0xFE1
 39168                           indf2	equ	0xFDF
 39169                           postinc2	equ	0xFDE
 39170                           postdec2	equ	0xFDD
 39171                           plusw2	equ	0xFDB
 39172                           fsr2h	equ	0xFDA
 39173                           fsr2l	equ	0xFD9
 39174                           status	equ	0xFD8
 39175                           
 39176 ;; *************** function _memcpy *****************
 39177 ;; Defined at:
 39178 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 39179 ;; Parameters:    Size  Location     Type
 39180 ;;  d1              2    0[BANK0 ] PTR void 
 39181 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 39182 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 39183 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 39184 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 39185 ;;  s1              2    2[BANK0 ] PTR const void 
 39186 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), STR_1(5), appSKey(16), 
 39187 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 39188 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 39189 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 39190 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 39191 ;;		 -> FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), loRa.devNonce(2), 
 39192 ;;		 -> loRa.fCntUp(4), radioBuffer(271), loRa(245), DefaultChannels433(42), 
 39193 ;;		 -> DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), 
 39194 ;;		 -> NULL(0), 
 39195 ;;  n               2    4[BANK0 ] unsigned int 
 39196 ;; Auto vars:     Size  Location     Type
 39197 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 39198 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), STR_1(5), appSKey(16), 
 39199 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 39200 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 39201 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 39202 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 39203 ;;		 -> FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), loRa.devNonce(2), 
 39204 ;;		 -> loRa.fCntUp(4), radioBuffer(271), loRa(245), DefaultChannels433(42), 
 39205 ;;		 -> DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), 
 39206 ;;		 -> NULL(0), 
 39207 ;;  d               2    7[BANK0 ] PTR unsigned char 
 39208 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 39209 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 39210 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 39211 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 39212 ;;  tmp             1    6[BANK0 ] unsigned char 
 39213 ;; Return value:  Size  Location     Type
 39214 ;;                  2    0[BANK0 ] PTR void 
 39215 ;; Registers used:
 39216 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 39217 ;; Tracked objects:
 39218 ;;		On entry : 0/0
 39219 ;;		On exit  : 0/0
 39220 ;;		Unchanged: 0/0
 39221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39222 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39223 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39225 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39226 ;;Total ram usage:       11 bytes
 39227 ;; Hardware stack levels used:    1
 39228 ;; Hardware stack levels required when called:    7
 39229 ;; This function calls:
 39230 ;;		Nothing
 39231 ;; This function is called by:
 39232 ;;		_AESCmac
 39233 ;;		_RADIO_SetFSKSyncWord
 39234 ;;		_UpdateCfList
 39235 ;;		_InitDefault868Channels
 39236 ;;		_InitDefault433Channels
 39237 ;;		_AESEncodeLoRa
 39238 ;;		_LORAWAN_SetNetworkSessionKey
 39239 ;;		_LORAWAN_SetApplicationSessionKey
 39240 ;;		_LORAWAN_RxDone
 39241 ;;		_AssemblePacket
 39242 ;;		_PrepareJoinRequestFrame
 39243 ;;		_PrepareSessionKeys
 39244 ;;		_AssembleEncryptionBlock
 39245 ;;		_ExtractMic
 39246 ;;		_ComputeMic
 39247 ;;		_RADIO_GetData
 39248 ;;		_RADIO_GetFSKSyncWord
 39249 ;;		_LORAWAN_SetMcastNetworkSessionKey
 39250 ;;		_LORAWAN_SetMcastApplicationSessionKey
 39251 ;;		_LORAWAN_GetMcastApplicationSessionKey
 39252 ;;		_LORAWAN_GetMcastNetworkSessionKey
 39253 ;;		_LORAWAN_SetDeviceEui
 39254 ;;		_LORAWAN_GetDeviceEui
 39255 ;;		_LORAWAN_SetApplicationEui
 39256 ;;		_LORAWAN_GetApplicationEui
 39257 ;;		_LORAWAN_GetNetworkSessionKey
 39258 ;;		_LORAWAN_GetApplicationSessionKey
 39259 ;;		_LORAWAN_SetApplicationKey
 39260 ;;		_LORAWAN_GetApplicationKey
 39261 ;; This function uses a non-reentrant model
 39262 ;;
 39263                           
 39264                           	psect	text188
 39265  0000'                    __ptext188:
 39266                           	opt stack 0
 39267  0000'                    _memcpy:
 39268                           	opt stack 22
 39269                           
 39270                           ; BSR set to: 0
 39271                           ;incstack = 0
 39272  0000' C002' F009'        	movff	memcpy@s1,memcpy@s
 39273  0004' C003' F00A'        	movff	memcpy@s1+1,memcpy@s+1
 39274  0008' C000' F007'        	movff	memcpy@d1,memcpy@d
 39275  000C' C001' F008'        	movff	memcpy@d1+1,memcpy@d+1
 39276  0010' D01D               	goto	l3000
 39277  0012'                    l12706:
 39278  0012' C009' FFF6         	movff	memcpy@s,tblptrl
 39279  0016' C00A' FFF7         	movff	memcpy@s+1,tblptrh
 39280  001A' 0E00'              	movlw	low (__mediumconst shr (0+16))
 39281  001C' 6EF8               	movwf	tblptru,c
 39282  001E' 0EFF'              	movlw	(high __ramtop+-1)
 39283  0020' 64F7               	cpfsgt	tblptrh,c
 39284  0022' D003               	bra	u14097
 39285  0024' 0008               	tblrd		*
 39286  0026' 50F5               	movf	tablat,w,c
 39287  0028' D005               	bra	u14090
 39288  002A'                    u14097:
 39289  002A' CFF6 FFE9          	movff	tblptrl,fsr0l
 39290  002E' CFF7 FFEA          	movff	tblptrh,fsr0h
 39291  0032' 50EF               	movf	indf0,w,c
 39292  0034'                    u14090:
 39293  0034' 0100               	movlb	0	; () banked
 39294  0036' 6F00'              	movwf	memcpy@tmp& (0+255),b
 39295                           
 39296                           ; BSR set to: 0
 39297  0038' 4B00'              	infsnz	memcpy@s& (0+255),f,b
 39298  003A' 2B00'              	incf	(memcpy@s+1)& (0+255),f,b
 39299                           
 39300                           ; BSR set to: 0
 39301  003C' C007' FFD9         	movff	memcpy@d,fsr2l
 39302  0040' C008' FFDA         	movff	memcpy@d+1,fsr2h
 39303  0044' C006' FFDF         	movff	memcpy@tmp,indf2
 39304                           
 39305                           ; BSR set to: 0
 39306  0048' 4B00'              	infsnz	memcpy@d& (0+255),f,b
 39307  004A' 2B00'              	incf	(memcpy@d+1)& (0+255),f,b
 39308  004C'                    l3000:
 39309                           
 39310                           ; BSR set to: 0
 39311  004C' 0100               	movlb	0	; () banked
 39312  004E' 0700'              	decf	memcpy@n& (0+255),f,b
 39313  0050' A0D8               	btfss	status,0,c
 39314  0052' 0700'              	decf	(memcpy@n+1)& (0+255),f,b
 39315  0054' 2900'              	incf	memcpy@n& (0+255),w,b
 39316  0056' E1DD               	bnz	l12706
 39317  0058' 2900'              	incf	(memcpy@n+1)& (0+255),w,b
 39318  005A' B4D8               	btfsc	status,2,c
 39319  005C' 0012               	return	
 39320  005E' D7D9               	goto	l3001
 39321  0060'                    __end_of_memcpy:
 39322                           	opt stack 0
 39323                           tosu	equ	0xFFF
 39324                           tosh	equ	0xFFE
 39325                           tosl	equ	0xFFD
 39326                           pclath	equ	0xFFA
 39327                           tblptru	equ	0xFF8
 39328                           tblptrh	equ	0xFF7
 39329                           tblptrl	equ	0xFF6
 39330                           tablat	equ	0xFF5
 39331                           prodh	equ	0xFF4
 39332                           prodl	equ	0xFF3
 39333                           intcon	equ	0xFF2
 39334                           intcon2	equ	0xFF1
 39335                           intcon3	equ	0xFF0
 39336                           indf0	equ	0xFEF
 39337                           postinc0	equ	0xFEE
 39338                           plusw0	equ	0xFEB
 39339                           fsr0h	equ	0xFEA
 39340                           fsr0l	equ	0xFE9
 39341                           wreg	equ	0xFE8
 39342                           postinc1	equ	0xFE6
 39343                           postdec1	equ	0xFE5
 39344                           plusw1	equ	0xFE3
 39345                           fsr1h	equ	0xFE2
 39346                           fsr1l	equ	0xFE1
 39347                           indf2	equ	0xFDF
 39348                           postinc2	equ	0xFDE
 39349                           postdec2	equ	0xFDD
 39350                           plusw2	equ	0xFDB
 39351                           fsr2h	equ	0xFDA
 39352                           fsr2l	equ	0xFD9
 39353                           status	equ	0xFD8
 39354                           
 39355 ;; *************** function _CreateAllSoftwareTimers *****************
 39356 ;; Defined at:
 39357 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 39358 ;; Parameters:    Size  Location     Type
 39359 ;;		None
 39360 ;; Auto vars:     Size  Location     Type
 39361 ;;		None
 39362 ;; Return value:  Size  Location     Type
 39363 ;;                  1    wreg      void 
 39364 ;; Registers used:
 39365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39366 ;; Tracked objects:
 39367 ;;		On entry : 0/0
 39368 ;;		On exit  : 0/0
 39369 ;;		Unchanged: 0/0
 39370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39375 ;;Total ram usage:        0 bytes
 39376 ;; Hardware stack levels used:    1
 39377 ;; Hardware stack levels required when called:    8
 39378 ;; This function calls:
 39379 ;;		_SwTimerCreate
 39380 ;; This function is called by:
 39381 ;;		_LORAWAN_Init
 39382 ;; This function uses a non-reentrant model
 39383 ;;
 39384                           
 39385                           	psect	text189
 39386  0000'                    __ptext189:
 39387                           	opt stack 0
 39388  0000'                    _CreateAllSoftwareTimers:
 39389                           	opt stack 21
 39390                           
 39391                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 39392                           
 39393                           ; BSR set to: 0
 39394                           ;incstack = 0
 39395  0000' EC00' F000'        	call	_SwTimerCreate	;wreg free
 39396  0004' 0102               	movlb	2	; () banked
 39397  0006' 6F00'              	movwf	(_loRa+226)& (0+255),b
 39398                           
 39399                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 39400  0008' EC00' F000'        	call	_SwTimerCreate	;wreg free
 39401  000C' 0102               	movlb	2	; () banked
 39402  000E' 6F00'              	movwf	(_loRa+227)& (0+255),b
 39403                           
 39404                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 39405  0010' EC00' F000'        	call	_SwTimerCreate	;wreg free
 39406  0014' 0102               	movlb	2	; () banked
 39407  0016' 6F00'              	movwf	(_loRa+228)& (0+255),b
 39408                           
 39409                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 39410  0018' EC00' F000'        	call	_SwTimerCreate	;wreg free
 39411  001C' 0102               	movlb	2	; () banked
 39412  001E' 6F00'              	movwf	(_loRa+229)& (0+255),b
 39413                           
 39414                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 39415  0020' EC00' F000'        	call	_SwTimerCreate	;wreg free
 39416  0024' 0102               	movlb	2	; () banked
 39417  0026' 6F00'              	movwf	(_loRa+231)& (0+255),b
 39418                           
 39419                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 39420  0028' EC00' F000'        	call	_SwTimerCreate	;wreg free
 39421  002C' 0102               	movlb	2	; () banked
 39422  002E' 6F00'              	movwf	(_loRa+232)& (0+255),b
 39423                           
 39424                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 39425  0030' EC00' F000'        	call	_SwTimerCreate	;wreg free
 39426  0034' 0102               	movlb	2	; () banked
 39427  0036' 6F00'              	movwf	(_loRa+230)& (0+255),b
 39428                           
 39429                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 39430  0038' EC00' F000'        	call	_SwTimerCreate	;wreg free
 39431  003C' 0102               	movlb	2	; () banked
 39432  003E' 6F00'              	movwf	(_loRa+234)& (0+255),b
 39433                           
 39434                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 39435  0040' EC00' F000'        	call	_SwTimerCreate	;wreg free
 39436  0044' 0102               	movlb	2	; () banked
 39437  0046' 6F00'              	movwf	(_loRa+243)& (0+255),b
 39438                           
 39439                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 39440  0048' EC00' F000'        	call	_SwTimerCreate	;wreg free
 39441  004C' 0102               	movlb	2	; () banked
 39442  004E' 6F00'              	movwf	(_loRa+233)& (0+255),b
 39443                           
 39444                           ; BSR set to: 2
 39445  0050' 0012               	return		;funcret
 39446  0052'                    __end_of_CreateAllSoftwareTimers:
 39447                           	opt stack 0
 39448                           tosu	equ	0xFFF
 39449                           tosh	equ	0xFFE
 39450                           tosl	equ	0xFFD
 39451                           pclath	equ	0xFFA
 39452                           tblptru	equ	0xFF8
 39453                           tblptrh	equ	0xFF7
 39454                           tblptrl	equ	0xFF6
 39455                           tablat	equ	0xFF5
 39456                           prodh	equ	0xFF4
 39457                           prodl	equ	0xFF3
 39458                           intcon	equ	0xFF2
 39459                           intcon2	equ	0xFF1
 39460                           intcon3	equ	0xFF0
 39461                           indf0	equ	0xFEF
 39462                           postinc0	equ	0xFEE
 39463                           plusw0	equ	0xFEB
 39464                           fsr0h	equ	0xFEA
 39465                           fsr0l	equ	0xFE9
 39466                           wreg	equ	0xFE8
 39467                           postinc1	equ	0xFE6
 39468                           postdec1	equ	0xFE5
 39469                           plusw1	equ	0xFE3
 39470                           fsr1h	equ	0xFE2
 39471                           fsr1l	equ	0xFE1
 39472                           indf2	equ	0xFDF
 39473                           postinc2	equ	0xFDE
 39474                           postdec2	equ	0xFDD
 39475                           plusw2	equ	0xFDB
 39476                           fsr2h	equ	0xFDA
 39477                           fsr2l	equ	0xFD9
 39478                           status	equ	0xFD8
 39479                           
 39480 ;; *************** function _SwTimerCreate *****************
 39481 ;; Defined at:
 39482 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 39483 ;; Parameters:    Size  Location     Type
 39484 ;;		None
 39485 ;; Auto vars:     Size  Location     Type
 39486 ;;  retVal          1    0[BANK0 ] unsigned char 
 39487 ;; Return value:  Size  Location     Type
 39488 ;;                  1    wreg      unsigned char 
 39489 ;; Registers used:
 39490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39491 ;; Tracked objects:
 39492 ;;		On entry : 0/0
 39493 ;;		On exit  : 0/0
 39494 ;;		Unchanged: 0/0
 39495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39497 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39499 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39500 ;;Total ram usage:        1 bytes
 39501 ;; Hardware stack levels used:    1
 39502 ;; Hardware stack levels required when called:    7
 39503 ;; This function calls:
 39504 ;;		Nothing
 39505 ;; This function is called by:
 39506 ;;		_RADIO_Init
 39507 ;;		_CreateAllSoftwareTimers
 39508 ;; This function uses a non-reentrant model
 39509 ;;
 39510                           
 39511                           	psect	text190
 39512  0000'                    __ptext190:
 39513                           	opt stack 0
 39514  0000'                    _SwTimerCreate:
 39515                           	opt stack 21
 39516                           
 39517                           ;sw_timer.c: 156: uint8_t retVal;
 39518                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 39519                           
 39520                           ; BSR set to: 2
 39521                           ;incstack = 0
 39522  0000' 0E14               	movlw	20
 39523  0002' 0101               	movlb	1	; () banked
 39524  0004' 6100'              	cpfslt	_allocatedTimers& (0+255),b	;volatile
 39525  0006' D040               	goto	l244
 39526                           
 39527                           ; BSR set to: 1
 39528                           ;sw_timer.c: 158: {
 39529                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 39530  0008' 9EF2               	bcf	intcon,7,c	;volatile
 39531                           
 39532                           ;sw_timer.c: 160: retVal = allocatedTimers;
 39533  000A' C010' F000'        	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 39534                           
 39535                           ; BSR set to: 1
 39536                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 39537  000E' 0100               	movlb	0	; () banked
 39538  0010' 5100'              	movf	SwTimerCreate@retVal& (0+255),w,b
 39539  0012' 0D08               	mullw	8
 39540  0014' 0E04               	movlw	4
 39541  0016' 26F3               	addwf	prodl,f,c
 39542  0018' 0E00               	movlw	0
 39543  001A' 22F4               	addwfc	prodh,f,c
 39544  001C' 0E00'              	movlw	low _swTimers
 39545  001E' 24F3               	addwf	prodl,w,c
 39546  0020' 6ED9               	movwf	fsr2l,c
 39547  0022' 0E00'              	movlw	high _swTimers
 39548  0024' 20F4               	addwfc	prodh,w,c
 39549  0026' 6EDA               	movwf	fsr2h,c
 39550  0028' 0E00               	movlw	0
 39551  002A' 6EDF               	movwf	indf2,c
 39552                           
 39553                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 39554  002C' 5100'              	movf	SwTimerCreate@retVal& (0+255),w,b
 39555  002E' 0D08               	mullw	8
 39556  0030' 0E00'              	movlw	low _swTimers
 39557  0032' 24F3               	addwf	prodl,w,c
 39558  0034' 6ED9               	movwf	fsr2l,c
 39559  0036' 0E00'              	movlw	high _swTimers
 39560  0038' 20F4               	addwfc	prodh,w,c
 39561  003A' 6EDA               	movwf	fsr2h,c
 39562  003C' 6ADE               	clrf	postinc2,c
 39563  003E' 6ADE               	clrf	postinc2,c
 39564  0040' 6ADE               	clrf	postinc2,c
 39565  0042' 6ADD               	clrf	postdec2,c
 39566                           
 39567                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 39568  0044' 5100'              	movf	SwTimerCreate@retVal& (0+255),w,b
 39569  0046' 0D08               	mullw	8
 39570  0048' 0E05               	movlw	5
 39571  004A' 26F3               	addwf	prodl,f,c
 39572  004C' 0E00               	movlw	0
 39573  004E' 22F4               	addwfc	prodh,f,c
 39574  0050' 0E00'              	movlw	low _swTimers
 39575  0052' 24F3               	addwf	prodl,w,c
 39576  0054' 6ED9               	movwf	fsr2l,c
 39577  0056' 0E00'              	movlw	high _swTimers
 39578  0058' 20F4               	addwfc	prodh,w,c
 39579  005A' 6EDA               	movwf	fsr2h,c
 39580  005C' 0E00               	movlw	0
 39581  005E' 6EDF               	movwf	indf2,c
 39582                           
 39583                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 39584  0060' 5100'              	movf	SwTimerCreate@retVal& (0+255),w,b
 39585  0062' 0D08               	mullw	8
 39586  0064' 0E06               	movlw	6
 39587  0066' 26F3               	addwf	prodl,f,c
 39588  0068' 0E00               	movlw	0
 39589  006A' 22F4               	addwfc	prodh,f,c
 39590  006C' 0E00'              	movlw	low _swTimers
 39591  006E' 24F3               	addwf	prodl,w,c
 39592  0070' 6ED9               	movwf	fsr2l,c
 39593  0072' 0E00'              	movlw	high _swTimers
 39594  0074' 20F4               	addwfc	prodh,w,c
 39595  0076' 6EDA               	movwf	fsr2h,c
 39596  0078' 0E00               	movlw	0
 39597  007A' 6EDE               	movwf	postinc2,c
 39598  007C' 0E00               	movlw	0
 39599  007E' 6EDD               	movwf	postdec2,c
 39600                           
 39601                           ; BSR set to: 0
 39602                           ;sw_timer.c: 165: allocatedTimers++;
 39603  0080' 0101               	movlb	1	; () banked
 39604  0082' 2B00'              	incf	_allocatedTimers& (0+255),f,b	;volatile
 39605                           
 39606                           ; BSR set to: 1
 39607                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 39608  0084' 8EF2               	bsf	intcon,7,c	;volatile
 39609                           
 39610                           ;sw_timer.c: 167: }
 39611  0086' D001               	goto	l248
 39612  0088'                    l244:
 39613                           
 39614                           ;sw_timer.c: 171: {
 39615                           
 39616                           ; BSR set to: 1
 39617                           ;sw_timer.c: 168: else
 39618                           ;sw_timer.c: 169: {
 39619                           ;sw_timer.c: 170: while(1)
 39620  0088' D7FF               	goto	l244
 39621  008A'                    l248:
 39622                           
 39623                           ;sw_timer.c: 175: }
 39624                           ;sw_timer.c: 176: }
 39625                           ;sw_timer.c: 177: return retVal;
 39626  008A' 0100               	movlb	0	; () banked
 39627  008C' 5100'              	movf	SwTimerCreate@retVal& (0+255),w,b
 39628  008E' 0012               	return	
 39629  0090'                    __end_of_SwTimerCreate:
 39630                           	opt stack 0
 39631                           tosu	equ	0xFFF
 39632                           tosh	equ	0xFFE
 39633                           tosl	equ	0xFFD
 39634                           pclath	equ	0xFFA
 39635                           tblptru	equ	0xFF8
 39636                           tblptrh	equ	0xFF7
 39637                           tblptrl	equ	0xFF6
 39638                           tablat	equ	0xFF5
 39639                           prodh	equ	0xFF4
 39640                           prodl	equ	0xFF3
 39641                           intcon	equ	0xFF2
 39642                           intcon2	equ	0xFF1
 39643                           intcon3	equ	0xFF0
 39644                           indf0	equ	0xFEF
 39645                           postinc0	equ	0xFEE
 39646                           plusw0	equ	0xFEB
 39647                           fsr0h	equ	0xFEA
 39648                           fsr0l	equ	0xFE9
 39649                           wreg	equ	0xFE8
 39650                           postinc1	equ	0xFE6
 39651                           postdec1	equ	0xFE5
 39652                           plusw1	equ	0xFE3
 39653                           fsr1h	equ	0xFE2
 39654                           fsr1l	equ	0xFE1
 39655                           indf2	equ	0xFDF
 39656                           postinc2	equ	0xFDE
 39657                           postdec2	equ	0xFDD
 39658                           plusw2	equ	0xFDB
 39659                           fsr2h	equ	0xFDA
 39660                           fsr2l	equ	0xFD9
 39661                           status	equ	0xFD8
 39662                           
 39663 ;; *************** function _INTERRUPT_InterruptManager *****************
 39664 ;; Defined at:
 39665 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 39666 ;; Parameters:    Size  Location     Type
 39667 ;;		None
 39668 ;; Auto vars:     Size  Location     Type
 39669 ;;		None
 39670 ;; Return value:  Size  Location     Type
 39671 ;;                  1    wreg      void 
 39672 ;; Registers used:
 39673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 39674 ;; Tracked objects:
 39675 ;;		On entry : 0/0
 39676 ;;		On exit  : 0/0
 39677 ;;		Unchanged: 0/0
 39678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39681 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39682 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39683 ;;Total ram usage:        8 bytes
 39684 ;; Hardware stack levels used:    1
 39685 ;; Hardware stack levels required when called:    6
 39686 ;; This function calls:
 39687 ;;		_INT1_ISR
 39688 ;;		_INT2_ISR
 39689 ;;		_PIN_MANAGER_IOC
 39690 ;;		_TMR1_ISR
 39691 ;; This function is called by:
 39692 ;;		Interrupt level 2
 39693 ;; This function uses a non-reentrant model
 39694 ;;
 39695                           
 39696                           	psect	intcode
 39697  0000'                    __pintcode:
 39698                           	opt stack 0
 39699  0000'                    _INTERRUPT_InterruptManager:
 39700                           	opt stack 12
 39701                           
 39702                           ; BSR set to: 0
 39703                           ;incstack = 0
 39704  0000' CFFA F033'         	movff	pclath,??_INTERRUPT_InterruptManager
 39705  0004' CFFB F034'         	movff	pclatu,??_INTERRUPT_InterruptManager+1
 39706  0008' CFE1 F035'         	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 39707  000C' CFE2 F036'         	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 39708  0010' CFD9 F037'         	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 39709  0014' CFDA F038'         	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 39710  0018' CFF3 F039'         	movff	prodl,??_INTERRUPT_InterruptManager+6
 39711  001C' CFF4 F03A'         	movff	prodh,??_INTERRUPT_InterruptManager+7
 39712  0020' EE10' F000'        	lfsr	1,___inthi_sp
 39713                           
 39714                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 39715  0024' B6F0               	btfsc	intcon3,3,c	;volatile
 39716  0026' A0F0               	btfss	intcon3,0,c	;volatile
 39717  0028' D003               	goto	i2l2302
 39718                           
 39719                           ;interrupt_manager.c: 62: {
 39720                           ;interrupt_manager.c: 63: INT1_ISR();
 39721  002A' EC00' F000'        	call	_INT1_ISR	;wreg free
 39722                           
 39723                           ;interrupt_manager.c: 64: }
 39724  002E' D012               	goto	i2l2309
 39725  0030'                    i2l2302:
 39726                           
 39727                           ;interrupt_manager.c: 65: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 39728  0030' B8F0               	btfsc	intcon3,4,c	;volatile
 39729  0032' A2F0               	btfss	intcon3,1,c	;volatile
 39730  0034' D003               	goto	i2l2304
 39731                           
 39732                           ;interrupt_manager.c: 66: {
 39733                           ;interrupt_manager.c: 67: INT2_ISR();
 39734  0036' EC00' F000'        	call	_INT2_ISR	;wreg free
 39735                           
 39736                           ;interrupt_manager.c: 68: }
 39737  003A' D00C               	goto	i2l2309
 39738  003C'                    i2l2304:
 39739                           
 39740                           ;interrupt_manager.c: 69: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 39741  003C' B6F2               	btfsc	intcon,3,c	;volatile
 39742  003E' A0F2               	btfss	intcon,0,c	;volatile
 39743  0040' D003               	goto	i2l2306
 39744                           
 39745                           ;interrupt_manager.c: 70: {
 39746                           ;interrupt_manager.c: 71: PIN_MANAGER_IOC();
 39747  0042' EC00' F000'        	call	_PIN_MANAGER_IOC	;wreg free
 39748                           
 39749                           ;interrupt_manager.c: 72: }
 39750  0046' D006               	goto	i2l2309
 39751  0048'                    i2l2306:
 39752                           
 39753                           ;interrupt_manager.c: 73: else if(INTCONbits.PEIE == 1)
 39754  0048' BCF2               	btfsc	intcon,6,c	;volatile
 39755                           
 39756                           ;interrupt_manager.c: 74: {
 39757                           ;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 39758  004A' A09D               	btfss	3997,0,c	;volatile
 39759  004C' D003               	goto	i2l2309
 39760  004E' B09E               	btfsc	3998,0,c	;volatile
 39761                           
 39762                           ;interrupt_manager.c: 76: {
 39763                           ;interrupt_manager.c: 77: TMR1_ISR();
 39764  0050' EC00' F000'        	call	_TMR1_ISR	;wreg free
 39765  0054'                    i2l2309:
 39766                           
 39767                           ;interrupt_manager.c: 84: else
 39768                           ;interrupt_manager.c: 85: {
 39769                           
 39770                           ;interrupt_manager.c: 82: }
 39771                           ;interrupt_manager.c: 83: }
 39772                           
 39773                           ;interrupt_manager.c: 79: else
 39774                           ;interrupt_manager.c: 80: {
 39775  0054' C03A' FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 39776  0058' C039' FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 39777  005C' C038' FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 39778  0060' C037' FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 39779  0064' C036' FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 39780  0068' C035' FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 39781  006C' C034' FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 39782  0070' C033' FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 39783  0074' 0011               	retfie		f
 39784  0076'                    __end_of_INTERRUPT_InterruptManager:
 39785                           	opt stack 0
 39786                           tosu	equ	0xFFF
 39787                           tosh	equ	0xFFE
 39788                           tosl	equ	0xFFD
 39789                           pclatu	equ	0xFFB
 39790                           pclath	equ	0xFFA
 39791                           tblptru	equ	0xFF8
 39792                           tblptrh	equ	0xFF7
 39793                           tblptrl	equ	0xFF6
 39794                           tablat	equ	0xFF5
 39795                           prodh	equ	0xFF4
 39796                           prodl	equ	0xFF3
 39797                           intcon	equ	0xFF2
 39798                           intcon2	equ	0xFF1
 39799                           intcon3	equ	0xFF0
 39800                           indf0	equ	0xFEF
 39801                           postinc0	equ	0xFEE
 39802                           plusw0	equ	0xFEB
 39803                           fsr0h	equ	0xFEA
 39804                           fsr0l	equ	0xFE9
 39805                           wreg	equ	0xFE8
 39806                           postinc1	equ	0xFE6
 39807                           postdec1	equ	0xFE5
 39808                           plusw1	equ	0xFE3
 39809                           fsr1h	equ	0xFE2
 39810                           fsr1l	equ	0xFE1
 39811                           indf2	equ	0xFDF
 39812                           postinc2	equ	0xFDE
 39813                           postdec2	equ	0xFDD
 39814                           plusw2	equ	0xFDB
 39815                           fsr2h	equ	0xFDA
 39816                           fsr2l	equ	0xFD9
 39817                           status	equ	0xFD8
 39818                           
 39819 ;; *************** function _TMR1_ISR *****************
 39820 ;; Defined at:
 39821 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 39822 ;; Parameters:    Size  Location     Type
 39823 ;;		None
 39824 ;; Auto vars:     Size  Location     Type
 39825 ;;		None
 39826 ;; Return value:  Size  Location     Type
 39827 ;;                  1    wreg      void 
 39828 ;; Registers used:
 39829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 39830 ;; Tracked objects:
 39831 ;;		On entry : 0/0
 39832 ;;		On exit  : 0/0
 39833 ;;		Unchanged: 0/0
 39834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39839 ;;Total ram usage:        0 bytes
 39840 ;; Hardware stack levels used:    1
 39841 ;; Hardware stack levels required when called:    5
 39842 ;; This function calls:
 39843 ;;		_TMR1_CallBack
 39844 ;;		i2_TMR1_WriteTimer
 39845 ;; This function is called by:
 39846 ;;		_INTERRUPT_InterruptManager
 39847 ;; This function uses a non-reentrant model
 39848 ;;
 39849                           
 39850                           	psect	text192
 39851  0000'                    __ptext192:
 39852                           	opt stack 0
 39853  0000'                    _TMR1_ISR:
 39854                           	opt stack 12
 39855                           
 39856                           ;tmr1.c: 162: PIR1bits.TMR1IF = 0;
 39857                           
 39858                           ;incstack = 0
 39859  0000' 909E               	bcf	3998,0,c	;volatile
 39860                           
 39861                           ;tmr1.c: 163: TMR1_WriteTimer(timer1ReloadVal);
 39862  0002' C002' F000'        	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 39863  0006' C003' F001'        	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 39864  000A' EC00' F000'        	call	i2_TMR1_WriteTimer	;wreg free
 39865                           
 39866                           ;tmr1.c: 167: TMR1_CallBack();
 39867  000E' EC00' F000'        	call	_TMR1_CallBack	;wreg free
 39868  0012' 0012               	return		;funcret
 39869  0014'                    __end_of_TMR1_ISR:
 39870                           	opt stack 0
 39871                           tosu	equ	0xFFF
 39872                           tosh	equ	0xFFE
 39873                           tosl	equ	0xFFD
 39874                           pclatu	equ	0xFFB
 39875                           pclath	equ	0xFFA
 39876                           tblptru	equ	0xFF8
 39877                           tblptrh	equ	0xFF7
 39878                           tblptrl	equ	0xFF6
 39879                           tablat	equ	0xFF5
 39880                           prodh	equ	0xFF4
 39881                           prodl	equ	0xFF3
 39882                           intcon	equ	0xFF2
 39883                           intcon2	equ	0xFF1
 39884                           intcon3	equ	0xFF0
 39885                           indf0	equ	0xFEF
 39886                           postinc0	equ	0xFEE
 39887                           plusw0	equ	0xFEB
 39888                           fsr0h	equ	0xFEA
 39889                           fsr0l	equ	0xFE9
 39890                           wreg	equ	0xFE8
 39891                           postinc1	equ	0xFE6
 39892                           postdec1	equ	0xFE5
 39893                           plusw1	equ	0xFE3
 39894                           fsr1h	equ	0xFE2
 39895                           fsr1l	equ	0xFE1
 39896                           indf2	equ	0xFDF
 39897                           postinc2	equ	0xFDE
 39898                           postdec2	equ	0xFDD
 39899                           plusw2	equ	0xFDB
 39900                           fsr2h	equ	0xFDA
 39901                           fsr2l	equ	0xFD9
 39902                           status	equ	0xFD8
 39903                           
 39904 ;; *************** function _TMR1_CallBack *****************
 39905 ;; Defined at:
 39906 ;;		line 170 in file "mcc_generated_files/tmr1.c"
 39907 ;; Parameters:    Size  Location     Type
 39908 ;;		None
 39909 ;; Auto vars:     Size  Location     Type
 39910 ;;		None
 39911 ;; Return value:  Size  Location     Type
 39912 ;;                  1    wreg      void 
 39913 ;; Registers used:
 39914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 39915 ;; Tracked objects:
 39916 ;;		On entry : 0/0
 39917 ;;		On exit  : 0/0
 39918 ;;		Unchanged: 0/0
 39919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39924 ;;Total ram usage:        0 bytes
 39925 ;; Hardware stack levels used:    1
 39926 ;; Hardware stack levels required when called:    4
 39927 ;; This function calls:
 39928 ;;		Absolute function
 39929 ;;		_TMR1_DefaultInterruptHandler
 39930 ;;		_TMR_ISR_lora
 39931 ;; This function is called by:
 39932 ;;		_TMR1_ISR
 39933 ;; This function uses a non-reentrant model
 39934 ;;
 39935                           
 39936                           	psect	text193
 39937  0000'                    __ptext193:
 39938                           	opt stack 0
 39939  0000'                    _TMR1_CallBack:
 39940                           	opt stack 12
 39941                           
 39942                           ;tmr1.c: 173: if(TMR1_InterruptHandler)
 39943                           
 39944                           ;incstack = 0
 39945  0000' 0101               	movlb	1	; () banked
 39946  0002' 5100'              	movf	_TMR1_InterruptHandler& (0+255),w,b
 39947  0004' 1100'              	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 39948  0006' B4D8               	btfsc	status,2,c
 39949  0008' 0012               	return	
 39950                           
 39951                           ; BSR set to: 1
 39952                           ;tmr1.c: 174: {
 39953                           ;tmr1.c: 175: TMR1_InterruptHandler();
 39954  000A' D801               	call	i2u2151_48
 39955  000C' 0012               	return	
 39956  000E'                    i2u2151_48:
 39957  000E' 0005               	push	
 39958  0010' 6EFA               	movwf	pclath,c
 39959  0012' 5100'              	movf	_TMR1_InterruptHandler& (0+255),w,b
 39960  0014' 6EFD               	movwf	tosl,c
 39961  0016' 5100'              	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 39962  0018' 6EFE               	movwf	tosh,c
 39963  001A' 6AFF               	clrf	tosu,c
 39964  001C' 50FA               	movf	pclath,w,c
 39965  001E' 0012               	return		;indir
 39966  0020'                    __end_of_TMR1_CallBack:
 39967                           	opt stack 0
 39968                           tosu	equ	0xFFF
 39969                           tosh	equ	0xFFE
 39970                           tosl	equ	0xFFD
 39971                           pclatu	equ	0xFFB
 39972                           pclath	equ	0xFFA
 39973                           tblptru	equ	0xFF8
 39974                           tblptrh	equ	0xFF7
 39975                           tblptrl	equ	0xFF6
 39976                           tablat	equ	0xFF5
 39977                           prodh	equ	0xFF4
 39978                           prodl	equ	0xFF3
 39979                           intcon	equ	0xFF2
 39980                           intcon2	equ	0xFF1
 39981                           intcon3	equ	0xFF0
 39982                           indf0	equ	0xFEF
 39983                           postinc0	equ	0xFEE
 39984                           plusw0	equ	0xFEB
 39985                           fsr0h	equ	0xFEA
 39986                           fsr0l	equ	0xFE9
 39987                           wreg	equ	0xFE8
 39988                           postinc1	equ	0xFE6
 39989                           postdec1	equ	0xFE5
 39990                           plusw1	equ	0xFE3
 39991                           fsr1h	equ	0xFE2
 39992                           fsr1l	equ	0xFE1
 39993                           indf2	equ	0xFDF
 39994                           postinc2	equ	0xFDE
 39995                           postdec2	equ	0xFDD
 39996                           plusw2	equ	0xFDB
 39997                           fsr2h	equ	0xFDA
 39998                           fsr2l	equ	0xFD9
 39999                           status	equ	0xFD8
 40000                           
 40001 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 40002 ;; Defined at:
 40003 ;;		line 183 in file "mcc_generated_files/tmr1.c"
 40004 ;; Parameters:    Size  Location     Type
 40005 ;;		None
 40006 ;; Auto vars:     Size  Location     Type
 40007 ;;		None
 40008 ;; Return value:  Size  Location     Type
 40009 ;;                  1    wreg      void 
 40010 ;; Registers used:
 40011 ;;		None
 40012 ;; Tracked objects:
 40013 ;;		On entry : 0/0
 40014 ;;		On exit  : 0/0
 40015 ;;		Unchanged: 0/0
 40016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40021 ;;Total ram usage:        0 bytes
 40022 ;; Hardware stack levels used:    1
 40023 ;; This function calls:
 40024 ;;		Nothing
 40025 ;; This function is called by:
 40026 ;;		_TMR1_Initialize
 40027 ;;		_TMR1_CallBack
 40028 ;; This function uses a non-reentrant model
 40029 ;;
 40030                           
 40031                           	psect	text194
 40032  0000'                    __ptext194:
 40033                           	opt stack 0
 40034  0000'                    _TMR1_DefaultInterruptHandler:
 40035                           	opt stack 15
 40036                           
 40037                           ;incstack = 0
 40038  0000' 0012               	return		;funcret
 40039  0002'                    __end_of_TMR1_DefaultInterruptHandler:
 40040                           	opt stack 0
 40041                           tosu	equ	0xFFF
 40042                           tosh	equ	0xFFE
 40043                           tosl	equ	0xFFD
 40044                           pclatu	equ	0xFFB
 40045                           pclath	equ	0xFFA
 40046                           tblptru	equ	0xFF8
 40047                           tblptrh	equ	0xFF7
 40048                           tblptrl	equ	0xFF6
 40049                           tablat	equ	0xFF5
 40050                           prodh	equ	0xFF4
 40051                           prodl	equ	0xFF3
 40052                           intcon	equ	0xFF2
 40053                           intcon2	equ	0xFF1
 40054                           intcon3	equ	0xFF0
 40055                           indf0	equ	0xFEF
 40056                           postinc0	equ	0xFEE
 40057                           plusw0	equ	0xFEB
 40058                           fsr0h	equ	0xFEA
 40059                           fsr0l	equ	0xFE9
 40060                           wreg	equ	0xFE8
 40061                           postinc1	equ	0xFE6
 40062                           postdec1	equ	0xFE5
 40063                           plusw1	equ	0xFE3
 40064                           fsr1h	equ	0xFE2
 40065                           fsr1l	equ	0xFE1
 40066                           indf2	equ	0xFDF
 40067                           postinc2	equ	0xFDE
 40068                           postdec2	equ	0xFDD
 40069                           plusw2	equ	0xFDB
 40070                           fsr2h	equ	0xFDA
 40071                           fsr2l	equ	0xFD9
 40072                           status	equ	0xFD8
 40073                           
 40074 ;; *************** function _TMR_ISR_lora *****************
 40075 ;; Defined at:
 40076 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 40077 ;; Parameters:    Size  Location     Type
 40078 ;;		None
 40079 ;; Auto vars:     Size  Location     Type
 40080 ;;		None
 40081 ;; Return value:  Size  Location     Type
 40082 ;;                  1    wreg      void 
 40083 ;; Registers used:
 40084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40085 ;; Tracked objects:
 40086 ;;		On entry : 0/0
 40087 ;;		On exit  : 0/0
 40088 ;;		Unchanged: 0/0
 40089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40092 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40093 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40094 ;;Total ram usage:        2 bytes
 40095 ;; Hardware stack levels used:    1
 40096 ;; Hardware stack levels required when called:    3
 40097 ;; This function calls:
 40098 ;;		i2_SwTimersInterrupt
 40099 ;;		i2_TMR_SwapTimer
 40100 ;; This function is called by:
 40101 ;;		_TMR_ISR_Lora_Init
 40102 ;;		_TMR1_CallBack
 40103 ;; This function uses a non-reentrant model
 40104 ;;
 40105                           
 40106                           	psect	text195
 40107  0000'                    __ptext195:
 40108                           	opt stack 0
 40109  0000'                    _TMR_ISR_lora:
 40110                           	opt stack 12
 40111                           
 40112                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 40113                           
 40114                           ;incstack = 0
 40115  0000' 0E01               	movlw	1
 40116  0002' 6E0B'              	movwf	_timerOverflow,c	;volatile
 40117                           
 40118                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 40119  0004' EC00' F000'        	call	i2_SwTimersInterrupt	;wreg free
 40120  0008' C020' F000'        	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 40121  000C' C021' F001'        	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 40122  0010' C022' F002'        	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 40123  0014' C023' F003'        	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 40124                           
 40125                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 40126  0018' 5003'              	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 40127  001A' E11C               	bnz	i2l1338
 40128  001C' 0402'              	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 40129  001E' B0D8               	btfsc	status,0,c
 40130  0020' 0012               	return	
 40131                           
 40132                           ;tmr_lora_addons.c: 66: {
 40133                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 40134  0022' C000' F031'        	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
 40135  0026' C001' F032'        	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
 40136  002A' 1E31'              	comf	??_TMR_ISR_lora,f,c
 40137  002C' 1E32'              	comf	??_TMR_ISR_lora+1,f,c
 40138  002E' 4A31'              	infsnz	??_TMR_ISR_lora,f,c
 40139  0030' 2A32'              	incf	??_TMR_ISR_lora+1,f,c
 40140  0032' C031' F008'        	movff	??_TMR_ISR_lora,_reloadVal	;volatile
 40141  0036' C032' F009'        	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
 40142                           
 40143                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 40144  003A' C008' F008'        	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 40145  003E' C009' F009'        	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 40146  0042' EC00' F000'        	call	i2_TMR_SwapTimer	;wreg free
 40147  0046' C008' F004'        	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 40148  004A' C009' F005'        	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 40149  004E' 6A06'              	clrf	_ticksAdded+2,c	;volatile
 40150  0050' 6A07'              	clrf	_ticksAdded+3,c	;volatile
 40151  0052' 0012               	return	
 40152  0054'                    i2l1338:
 40153  0054' 0012               	return		;funcret
 40154  0056'                    __end_of_TMR_ISR_lora:
 40155                           	opt stack 0
 40156                           tosu	equ	0xFFF
 40157                           tosh	equ	0xFFE
 40158                           tosl	equ	0xFFD
 40159                           pclatu	equ	0xFFB
 40160                           pclath	equ	0xFFA
 40161                           tblptru	equ	0xFF8
 40162                           tblptrh	equ	0xFF7
 40163                           tblptrl	equ	0xFF6
 40164                           tablat	equ	0xFF5
 40165                           prodh	equ	0xFF4
 40166                           prodl	equ	0xFF3
 40167                           intcon	equ	0xFF2
 40168                           intcon2	equ	0xFF1
 40169                           intcon3	equ	0xFF0
 40170                           indf0	equ	0xFEF
 40171                           postinc0	equ	0xFEE
 40172                           plusw0	equ	0xFEB
 40173                           fsr0h	equ	0xFEA
 40174                           fsr0l	equ	0xFE9
 40175                           wreg	equ	0xFE8
 40176                           postinc1	equ	0xFE6
 40177                           postdec1	equ	0xFE5
 40178                           plusw1	equ	0xFE3
 40179                           fsr1h	equ	0xFE2
 40180                           fsr1l	equ	0xFE1
 40181                           indf2	equ	0xFDF
 40182                           postinc2	equ	0xFDE
 40183                           postdec2	equ	0xFDD
 40184                           plusw2	equ	0xFDB
 40185                           fsr2h	equ	0xFDA
 40186                           fsr2l	equ	0xFD9
 40187                           status	equ	0xFD8
 40188                           
 40189 ;; *************** function i2_TMR_SwapTimer *****************
 40190 ;; Defined at:
 40191 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40192 ;; Parameters:    Size  Location     Type
 40193 ;;  timerVal        2    8[COMRAM] unsigned int 
 40194 ;; Auto vars:     Size  Location     Type
 40195 ;;		None
 40196 ;; Return value:  Size  Location     Type
 40197 ;;                  2    8[COMRAM] unsigned int 
 40198 ;; Registers used:
 40199 ;;		wreg, status,2, status,0, cstack
 40200 ;; Tracked objects:
 40201 ;;		On entry : 0/0
 40202 ;;		On exit  : 0/0
 40203 ;;		Unchanged: 0/0
 40204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40209 ;;Total ram usage:        2 bytes
 40210 ;; Hardware stack levels used:    1
 40211 ;; Hardware stack levels required when called:    1
 40212 ;; This function calls:
 40213 ;;		i2_TMR1_ReadTimer
 40214 ;;		i2_TMR1_WriteTimer
 40215 ;; This function is called by:
 40216 ;;		_TMR_ISR_lora
 40217 ;; This function uses a non-reentrant model
 40218 ;;
 40219                           
 40220                           	psect	text196
 40221  0000'                    __ptext196:
 40222                           	opt stack 0
 40223  0000'                    i2_TMR_SwapTimer:
 40224                           	opt stack 13
 40225                           
 40226                           ;sw_timer.c: 114: static uint16_t oldVal;
 40227                           ;sw_timer.c: 115: static uint16_t retVal;
 40228                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 40229                           
 40230                           ;incstack = 0
 40231  0000' EC00' F000'        	call	i2_TMR1_ReadTimer	;wreg free
 40232  0004' C000' F00A'        	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 40233  0008' C001' F00B'        	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 40234  000C'                    
 40235                           ;sw_timer.c: 123: ;
 40236  000C' EC00' F000'        	call	i2_TMR1_ReadTimer	;wreg free
 40237  0010' 0101               	movlb	1	; () banked
 40238  0012' 5100'              	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 40239  0014' 1800'              	xorwf	?i2_TMR1_ReadTimer,w,c
 40240  0016' E104               	bnz	i2l11156
 40241  0018' 5100'              	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 40242  001A' 1801'              	xorwf	?i2_TMR1_ReadTimer+1,w,c
 40243  001C' B4D8               	btfsc	status,2,c
 40244  001E' D7F6               	goto	i2l230
 40245  0020'                    i2l11156:
 40246                           
 40247                           ; BSR set to: 1
 40248                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 40249  0020' C008' F000'        	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 40250  0024' C009' F001'        	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 40251  0028' EC00' F000'        	call	i2_TMR1_WriteTimer	;wreg free
 40252                           
 40253                           ;sw_timer.c: 128: oldVal++;
 40254  002C' 0101               	movlb	1	; () banked
 40255  002E' 4B00'              	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 40256  0030' 2B00'              	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 40257                           
 40258                           ; BSR set to: 1
 40259                           ;sw_timer.c: 130: retVal = oldVal;
 40260  0032' C00A' F008'        	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 40261  0036' C00B' F009'        	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 40262                           
 40263                           ; BSR set to: 1
 40264                           ;sw_timer.c: 132: return retVal;
 40265  003A' C008' F008'        	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 40266  003E' C009' F009'        	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 40267  0042' 0012               	return	
 40268  0044'                    __end_ofi2_TMR_SwapTimer:
 40269                           	opt stack 0
 40270                           tosu	equ	0xFFF
 40271                           tosh	equ	0xFFE
 40272                           tosl	equ	0xFFD
 40273                           pclatu	equ	0xFFB
 40274                           pclath	equ	0xFFA
 40275                           tblptru	equ	0xFF8
 40276                           tblptrh	equ	0xFF7
 40277                           tblptrl	equ	0xFF6
 40278                           tablat	equ	0xFF5
 40279                           prodh	equ	0xFF4
 40280                           prodl	equ	0xFF3
 40281                           intcon	equ	0xFF2
 40282                           intcon2	equ	0xFF1
 40283                           intcon3	equ	0xFF0
 40284                           indf0	equ	0xFEF
 40285                           postinc0	equ	0xFEE
 40286                           plusw0	equ	0xFEB
 40287                           fsr0h	equ	0xFEA
 40288                           fsr0l	equ	0xFE9
 40289                           wreg	equ	0xFE8
 40290                           postinc1	equ	0xFE6
 40291                           postdec1	equ	0xFE5
 40292                           plusw1	equ	0xFE3
 40293                           fsr1h	equ	0xFE2
 40294                           fsr1l	equ	0xFE1
 40295                           indf2	equ	0xFDF
 40296                           postinc2	equ	0xFDE
 40297                           postdec2	equ	0xFDD
 40298                           plusw2	equ	0xFDB
 40299                           fsr2h	equ	0xFDA
 40300                           fsr2l	equ	0xFD9
 40301                           status	equ	0xFD8
 40302                           
 40303 ;; *************** function i2_TMR1_WriteTimer *****************
 40304 ;; Defined at:
 40305 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 40306 ;; Parameters:    Size  Location     Type
 40307 ;;  timerVal        2    0[COMRAM] unsigned int 
 40308 ;; Auto vars:     Size  Location     Type
 40309 ;;		None
 40310 ;; Return value:  Size  Location     Type
 40311 ;;                  1    wreg      void 
 40312 ;; Registers used:
 40313 ;;		wreg, status,2
 40314 ;; Tracked objects:
 40315 ;;		On entry : 0/0
 40316 ;;		On exit  : 0/0
 40317 ;;		Unchanged: 0/0
 40318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40322 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40323 ;;Total ram usage:        2 bytes
 40324 ;; Hardware stack levels used:    1
 40325 ;; This function calls:
 40326 ;;		Nothing
 40327 ;; This function is called by:
 40328 ;;		_TMR1_ISR
 40329 ;;		i2_TMR_SwapTimer
 40330 ;; This function uses a non-reentrant model
 40331 ;;
 40332                           
 40333                           	psect	text197
 40334  0000'                    __ptext197:
 40335                           	opt stack 0
 40336  0000'                    i2_TMR1_WriteTimer:
 40337                           	opt stack 16
 40338                           
 40339                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 40340                           
 40341                           ; BSR set to: 1
 40342                           ;incstack = 0
 40343  0000' A4CD               	btfss	4045,2,c	;volatile
 40344  0002' D007               	goto	i2l2448
 40345                           
 40346                           ;tmr1.c: 124: {
 40347                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 40348  0004' 90CD               	bcf	4045,0,c	;volatile
 40349                           
 40350                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 40351  0006' 5001'              	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 40352  0008' 6ECF               	movwf	4047,c	;volatile
 40353                           
 40354                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 40355  000A' C000' FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 40356                           
 40357                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 40358  000E' 80CD               	bsf	4045,0,c	;volatile
 40359                           
 40360                           ;tmr1.c: 134: }
 40361  0010' 0012               	return	
 40362  0012'                    i2l2448:
 40363                           
 40364                           ;tmr1.c: 135: else
 40365                           ;tmr1.c: 136: {
 40366                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 40367  0012' 5001'              	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 40368  0014' 6ECF               	movwf	4047,c	;volatile
 40369                           
 40370                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 40371  0016' C000' FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 40372  001A' 0012               	return	
 40373  001C'                    __end_ofi2_TMR1_WriteTimer:
 40374                           	opt stack 0
 40375                           tosu	equ	0xFFF
 40376                           tosh	equ	0xFFE
 40377                           tosl	equ	0xFFD
 40378                           pclatu	equ	0xFFB
 40379                           pclath	equ	0xFFA
 40380                           tblptru	equ	0xFF8
 40381                           tblptrh	equ	0xFF7
 40382                           tblptrl	equ	0xFF6
 40383                           tablat	equ	0xFF5
 40384                           prodh	equ	0xFF4
 40385                           prodl	equ	0xFF3
 40386                           intcon	equ	0xFF2
 40387                           intcon2	equ	0xFF1
 40388                           intcon3	equ	0xFF0
 40389                           indf0	equ	0xFEF
 40390                           postinc0	equ	0xFEE
 40391                           plusw0	equ	0xFEB
 40392                           fsr0h	equ	0xFEA
 40393                           fsr0l	equ	0xFE9
 40394                           wreg	equ	0xFE8
 40395                           postinc1	equ	0xFE6
 40396                           postdec1	equ	0xFE5
 40397                           plusw1	equ	0xFE3
 40398                           fsr1h	equ	0xFE2
 40399                           fsr1l	equ	0xFE1
 40400                           indf2	equ	0xFDF
 40401                           postinc2	equ	0xFDE
 40402                           postdec2	equ	0xFDD
 40403                           plusw2	equ	0xFDB
 40404                           fsr2h	equ	0xFDA
 40405                           fsr2l	equ	0xFD9
 40406                           status	equ	0xFD8
 40407                           
 40408 ;; *************** function i2_SwTimersInterrupt *****************
 40409 ;; Defined at:
 40410 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40411 ;; Parameters:    Size  Location     Type
 40412 ;;		None
 40413 ;; Auto vars:     Size  Location     Type
 40414 ;;  SwTimersInte    4   44[COMRAM] unsigned long 
 40415 ;;  SwTimersInte    4   40[COMRAM] unsigned long 
 40416 ;;  SwTimersInte    1   48[COMRAM] unsigned char 
 40417 ;; Return value:  Size  Location     Type
 40418 ;;                  4   32[COMRAM] unsigned long 
 40419 ;; Registers used:
 40420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40421 ;; Tracked objects:
 40422 ;;		On entry : 0/0
 40423 ;;		On exit  : 0/0
 40424 ;;		Unchanged: 0/0
 40425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40426 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40427 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40428 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40429 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40430 ;;Total ram usage:       17 bytes
 40431 ;; Hardware stack levels used:    1
 40432 ;; Hardware stack levels required when called:    2
 40433 ;; This function calls:
 40434 ;;		i2_TMR_GetDeltaTime
 40435 ;; This function is called by:
 40436 ;;		_TMR_ISR_lora
 40437 ;; This function uses a non-reentrant model
 40438 ;;
 40439                           
 40440                           	psect	text198
 40441  0000'                    __ptext198:
 40442                           	opt stack 0
 40443  0000'                    i2_SwTimersInterrupt:
 40444                           	opt stack 12
 40445                           
 40446                           ;sw_timer.c: 289: uint8_t i;
 40447                           ;sw_timer.c: 290: uint32_t timeElapsed;
 40448                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 40449                           
 40450                           ;incstack = 0
 40451  0000' 682C'              	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 40452  0002' 682D'              	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 40453  0004' 682E'              	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 40454  0006' 682F'              	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 40455                           
 40456                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 40457  0008' EC00' F000'        	call	i2_TMR_GetDeltaTime	;wreg free
 40458  000C' C008' F028'        	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 40459  0010' C009' F029'        	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 40460  0014' C00A' F02A'        	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 40461  0018' C00B' F02B'        	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 40462                           
 40463                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 40464  001C' 0E00               	movlw	0
 40465  001E' 6E30'              	movwf	i2SwTimersInterrupt@i,c
 40466  0020' D061               	goto	i2l287
 40467  0022'                    
 40468                           ;sw_timer.c: 298: {
 40469                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 40470  0022' 5030'              	movf	i2SwTimersInterrupt@i,w,c
 40471  0024' 0D08               	mullw	8
 40472  0026' 0E04               	movlw	4
 40473  0028' 26F3               	addwf	prodl,f,c
 40474  002A' 0E00               	movlw	0
 40475  002C' 22F4               	addwfc	prodh,f,c
 40476  002E' 0E00'              	movlw	low _swTimers
 40477  0030' 24F3               	addwf	prodl,w,c
 40478  0032' 6ED9               	movwf	fsr2l,c
 40479  0034' 0E00'              	movlw	high _swTimers
 40480  0036' 20F4               	addwfc	prodh,w,c
 40481  0038' 6EDA               	movwf	fsr2h,c
 40482  003A' 04DE               	decf	postinc2,w,c
 40483  003C' A4D8               	btfss	status,2,c
 40484  003E' D051               	goto	i2l292
 40485                           
 40486                           ;sw_timer.c: 302: {
 40487                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 40488  0040' 5030'              	movf	i2SwTimersInterrupt@i,w,c
 40489  0042' 0D08               	mullw	8
 40490  0044' 0E00'              	movlw	low _swTimers
 40491  0046' 24F3               	addwf	prodl,w,c
 40492  0048' 6ED9               	movwf	fsr2l,c
 40493  004A' 0E00'              	movlw	high _swTimers
 40494  004C' 20F4               	addwfc	prodh,w,c
 40495  004E' 6EDA               	movwf	fsr2h,c
 40496  0050' 50DE               	movf	postinc2,w,c
 40497  0052' 5C28'              	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 40498  0054' 50DE               	movf	postinc2,w,c
 40499  0056' 5829'              	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 40500  0058' 50DE               	movf	postinc2,w,c
 40501  005A' 582A'              	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 40502  005C' 50DE               	movf	postinc2,w,c
 40503  005E' 582B'              	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 40504  0060' A0D8               	btfss	status,0,c
 40505  0062' D00D               	goto	i2l290
 40506                           
 40507                           ;sw_timer.c: 304: {
 40508                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 40509  0064' 5030'              	movf	i2SwTimersInterrupt@i,w,c
 40510  0066' 0D08               	mullw	8
 40511  0068' 0E00'              	movlw	low _swTimers
 40512  006A' 24F3               	addwf	prodl,w,c
 40513  006C' 6ED9               	movwf	fsr2l,c
 40514  006E' 0E00'              	movlw	high _swTimers
 40515  0070' 20F4               	addwfc	prodh,w,c
 40516  0072' 6EDA               	movwf	fsr2h,c
 40517  0074' 6ADE               	clrf	postinc2,c
 40518  0076' 6ADE               	clrf	postinc2,c
 40519  0078' 6ADE               	clrf	postinc2,c
 40520  007A' 6ADD               	clrf	postdec2,c
 40521                           
 40522                           ;sw_timer.c: 306: }
 40523  007C' D032               	goto	i2l292
 40524  007E'                    i2l290:
 40525                           
 40526                           ;sw_timer.c: 307: else
 40527                           ;sw_timer.c: 308: {
 40528                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 40529  007E' 5030'              	movf	i2SwTimersInterrupt@i,w,c
 40530  0080' 0D08               	mullw	8
 40531  0082' 0E00'              	movlw	low _swTimers
 40532  0084' 24F3               	addwf	prodl,w,c
 40533  0086' 6ED9               	movwf	fsr2l,c
 40534  0088' 0E00'              	movlw	high _swTimers
 40535  008A' 20F4               	addwfc	prodh,w,c
 40536  008C' 6EDA               	movwf	fsr2h,c
 40537  008E' 5028'              	movf	i2SwTimersInterrupt@timeElapsed,w,c
 40538  0090' 5EDE               	subwf	postinc2,f,c
 40539  0092' 5029'              	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 40540  0094' 5ADE               	subwfb	postinc2,f,c
 40541  0096' 502A'              	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 40542  0098' 5ADE               	subwfb	postinc2,f,c
 40543  009A' 502B'              	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 40544  009C' 5ADE               	subwfb	postinc2,f,c
 40545                           
 40546                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 40547  009E' 5030'              	movf	i2SwTimersInterrupt@i,w,c
 40548  00A0' 0D08               	mullw	8
 40549  00A2' 0E00'              	movlw	low _swTimers
 40550  00A4' 24F3               	addwf	prodl,w,c
 40551  00A6' 6ED9               	movwf	fsr2l,c
 40552  00A8' 0E00'              	movlw	high _swTimers
 40553  00AA' 20F4               	addwfc	prodh,w,c
 40554  00AC' 6EDA               	movwf	fsr2h,c
 40555  00AE' 502C'              	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 40556  00B0' 5CDE               	subwf	postinc2,w,c
 40557  00B2' 502D'              	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 40558  00B4' 58DE               	subwfb	postinc2,w,c
 40559  00B6' 502E'              	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 40560  00B8' 58DE               	subwfb	postinc2,w,c
 40561  00BA' 502F'              	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 40562  00BC' 58DE               	subwfb	postinc2,w,c
 40563  00BE' B0D8               	btfsc	status,0,c
 40564  00C0' D010               	goto	i2l292
 40565                           
 40566                           ;sw_timer.c: 313: {
 40567                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 40568  00C2' 5030'              	movf	i2SwTimersInterrupt@i,w,c
 40569  00C4' 0D08               	mullw	8
 40570  00C6' 0E00'              	movlw	low _swTimers
 40571  00C8' 24F3               	addwf	prodl,w,c
 40572  00CA' 6ED9               	movwf	fsr2l,c
 40573  00CC' 0E00'              	movlw	high _swTimers
 40574  00CE' 20F4               	addwfc	prodh,w,c
 40575  00D0' 6EDA               	movwf	fsr2h,c
 40576  00D2' CFDE F02C'         	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 40577  00D6' CFDE F02D'         	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 40578  00DA' CFDE F02E'         	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 40579  00DE' CFDE F02F'         	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 40580  00E2'                    i2l292:
 40581  00E2' 2A30'              	incf	i2SwTimersInterrupt@i,f,c
 40582  00E4'                    i2l287:
 40583  00E4' 0101               	movlb	1	; () banked
 40584  00E6' 5100'              	movf	_allocatedTimers& (0+255),w,b	;volatile
 40585  00E8' 5C30'              	subwf	i2SwTimersInterrupt@i,w,c
 40586  00EA' A0D8               	btfss	status,0,c
 40587  00EC' D79A               	goto	i2l288
 40588                           
 40589                           ; BSR set to: 1
 40590                           ;sw_timer.c: 315: }
 40591                           ;sw_timer.c: 316: }
 40592                           ;sw_timer.c: 317: }
 40593                           ;sw_timer.c: 318: }
 40594                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 40595  00EE' C02C' F020'        	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 40596  00F2' C02D' F021'        	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 40597  00F6' C02E' F022'        	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 40598  00FA' C02F' F023'        	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 40599                           
 40600                           ; BSR set to: 1
 40601  00FE' 0012               	return		;funcret
 40602  0100'                    __end_ofi2_SwTimersInterrupt:
 40603                           	opt stack 0
 40604                           tosu	equ	0xFFF
 40605                           tosh	equ	0xFFE
 40606                           tosl	equ	0xFFD
 40607                           pclatu	equ	0xFFB
 40608                           pclath	equ	0xFFA
 40609                           tblptru	equ	0xFF8
 40610                           tblptrh	equ	0xFF7
 40611                           tblptrl	equ	0xFF6
 40612                           tablat	equ	0xFF5
 40613                           prodh	equ	0xFF4
 40614                           prodl	equ	0xFF3
 40615                           intcon	equ	0xFF2
 40616                           intcon2	equ	0xFF1
 40617                           intcon3	equ	0xFF0
 40618                           indf0	equ	0xFEF
 40619                           postinc0	equ	0xFEE
 40620                           plusw0	equ	0xFEB
 40621                           fsr0h	equ	0xFEA
 40622                           fsr0l	equ	0xFE9
 40623                           wreg	equ	0xFE8
 40624                           postinc1	equ	0xFE6
 40625                           postdec1	equ	0xFE5
 40626                           plusw1	equ	0xFE3
 40627                           fsr1h	equ	0xFE2
 40628                           fsr1l	equ	0xFE1
 40629                           indf2	equ	0xFDF
 40630                           postinc2	equ	0xFDE
 40631                           postdec2	equ	0xFDD
 40632                           plusw2	equ	0xFDB
 40633                           fsr2h	equ	0xFDA
 40634                           fsr2l	equ	0xFD9
 40635                           status	equ	0xFD8
 40636                           
 40637 ;; *************** function i2_TMR_GetDeltaTime *****************
 40638 ;; Defined at:
 40639 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40640 ;; Parameters:    Size  Location     Type
 40641 ;;		None
 40642 ;; Auto vars:     Size  Location     Type
 40643 ;;		None
 40644 ;; Return value:  Size  Location     Type
 40645 ;;                  4    8[COMRAM] unsigned long 
 40646 ;; Registers used:
 40647 ;;		wreg, status,2, status,0, cstack
 40648 ;; Tracked objects:
 40649 ;;		On entry : 0/0
 40650 ;;		On exit  : 0/0
 40651 ;;		Unchanged: 0/0
 40652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40655 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40656 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40657 ;;Total ram usage:       24 bytes
 40658 ;; Hardware stack levels used:    1
 40659 ;; Hardware stack levels required when called:    1
 40660 ;; This function calls:
 40661 ;;		i2_TMR1_ReadTimer
 40662 ;; This function is called by:
 40663 ;;		i2_SwTimersInterrupt
 40664 ;; This function uses a non-reentrant model
 40665 ;;
 40666                           
 40667                           	psect	text199
 40668  0000'                    __ptext199:
 40669                           	opt stack 0
 40670  0000'                    i2_TMR_GetDeltaTime:
 40671                           	opt stack 12
 40672                           
 40673                           ;sw_timer.c: 90: static uint32_t retVal;
 40674                           ;sw_timer.c: 91: static uint16_t tmrVal;
 40675                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 40676                           
 40677                           ; BSR set to: 1
 40678                           ;incstack = 0
 40679  0000' EC00' F000'        	call	i2_TMR1_ReadTimer	;wreg free
 40680  0004' C000' F00C'        	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 40681  0008' C001' F00D'        	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 40682                           
 40683                           ;sw_timer.c: 95: if (timerOverflow == 1)
 40684  000C' 040B'              	decf	_timerOverflow,w,c	;volatile
 40685  000E' A4D8               	btfss	status,2,c
 40686  0010' D066               	goto	i2l220
 40687                           
 40688                           ;sw_timer.c: 96: {
 40689                           ;sw_timer.c: 97: timerOverflow = 0;
 40690  0012' 0E00               	movlw	0
 40691  0014' 6E0B'              	movwf	_timerOverflow,c	;volatile
 40692                           
 40693                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 40694  0016' C000' F00C'        	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 40695  001A' C001' F00D'        	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 40696  001E' C002' F00E'        	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 40697  0022' C003' F00F'        	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 40698  0026' 1E0C'              	comf	??i2_TMR_GetDeltaTime,f,c
 40699  0028' 1E0D'              	comf	??i2_TMR_GetDeltaTime+1,f,c
 40700  002A' 1E0E'              	comf	??i2_TMR_GetDeltaTime+2,f,c
 40701  002C' 1E0F'              	comf	??i2_TMR_GetDeltaTime+3,f,c
 40702  002E' 2A0C'              	incf	??i2_TMR_GetDeltaTime,f,c
 40703  0030' 0E00               	movlw	0
 40704  0032' 220D'              	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 40705  0034' 220E'              	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 40706  0036' 220F'              	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 40707  0038' 5008'              	movf	_reloadVal,w,c	;volatile
 40708  003A' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 40709  003C' 5009'              	movf	_reloadVal+1,w,c	;volatile
 40710  003E' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 40711  0040' 6A00'              	clrf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 40712  0042' 6A00'              	clrf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 40713  0044' 1E10'              	comf	??i2_TMR_GetDeltaTime+4,f,c
 40714  0046' 1E11'              	comf	??i2_TMR_GetDeltaTime+5,f,c
 40715  0048' 1E12'              	comf	??i2_TMR_GetDeltaTime+6,f,c
 40716  004A' 1E13'              	comf	??i2_TMR_GetDeltaTime+7,f,c
 40717  004C' 2A10'              	incf	??i2_TMR_GetDeltaTime+4,f,c
 40718  004E' 0E00               	movlw	0
 40719  0050' 2211'              	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 40720  0052' 2212'              	addwfc	??i2_TMR_GetDeltaTime+6,f,c
 40721  0054' 2213'              	addwfc	??i2_TMR_GetDeltaTime+7,f,c
 40722  0056' 0101               	movlb	1	; () banked
 40723  0058' 5100'              	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 40724  005A' 2410'              	addwf	??i2_TMR_GetDeltaTime+4,w,c
 40725  005C' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 40726  005E' 5100'              	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 40727  0060' 2011'              	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 40728  0062' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 40729  0064' 0E00               	movlw	0
 40730  0066' 2012'              	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 40731  0068' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 40732  006A' 0E00               	movlw	0
 40733  006C' 2013'              	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 40734  006E' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 40735  0070' 500C'              	movf	??i2_TMR_GetDeltaTime,w,c
 40736  0072' 2414'              	addwf	??i2_TMR_GetDeltaTime+8,w,c
 40737  0074' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+12)& (0+255),c
 40738  0076' 500D'              	movf	??i2_TMR_GetDeltaTime+1,w,c
 40739  0078' 2015'              	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 40740  007A' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+13)& (0+255),c
 40741  007C' 500E'              	movf	??i2_TMR_GetDeltaTime+2,w,c
 40742  007E' 2016'              	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 40743  0080' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+14)& (0+255),c
 40744  0082' 500F'              	movf	??i2_TMR_GetDeltaTime+3,w,c
 40745  0084' 2017'              	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 40746  0086' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+15)& (0+255),c
 40747  0088' 5004'              	movf	_ticksAdded,w,c	;volatile
 40748  008A' 2418'              	addwf	??i2_TMR_GetDeltaTime+12,w,c
 40749  008C' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+16)& (0+255),c
 40750  008E' 5005'              	movf	_ticksAdded+1,w,c	;volatile
 40751  0090' 2019'              	addwfc	??i2_TMR_GetDeltaTime+13,w,c
 40752  0092' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+17)& (0+255),c
 40753  0094' 5006'              	movf	_ticksAdded+2,w,c	;volatile
 40754  0096' 201A'              	addwfc	??i2_TMR_GetDeltaTime+14,w,c
 40755  0098' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+18)& (0+255),c
 40756  009A' 5007'              	movf	_ticksAdded+3,w,c	;volatile
 40757  009C' 201B'              	addwfc	??i2_TMR_GetDeltaTime+15,w,c
 40758  009E' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+19)& (0+255),c
 40759  00A0' 0E00               	movlw	0
 40760  00A2' 241C'              	addwf	??i2_TMR_GetDeltaTime+16,w,c
 40761  00A4' 6F00'              	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 40762  00A6' 0E00               	movlw	0
 40763  00A8' 201D'              	addwfc	??i2_TMR_GetDeltaTime+17,w,c
 40764  00AA' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 40765  00AC' 0E01               	movlw	1
 40766  00AE' 201E'              	addwfc	??i2_TMR_GetDeltaTime+18,w,c
 40767  00B0' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 40768  00B2' 0E00               	movlw	0
 40769  00B4' 201F'              	addwfc	??i2_TMR_GetDeltaTime+19,w,c
 40770  00B6' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 40771                           
 40772                           ; BSR set to: 1
 40773                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 40774  00B8' C00C' F000'        	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 40775  00BC' C00D' F001'        	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 40776  00C0' 6A02'              	clrf	_ticksAccounted+2,c	;volatile
 40777  00C2' 6A03'              	clrf	_ticksAccounted+3,c	;volatile
 40778                           
 40779                           ; BSR set to: 1
 40780                           ;sw_timer.c: 100: ticksAdded = 0;
 40781  00C4' 0E00               	movlw	0
 40782  00C6' 6E04'              	movwf	_ticksAdded,c	;volatile
 40783  00C8' 0E00               	movlw	0
 40784  00CA' 6E05'              	movwf	_ticksAdded+1,c	;volatile
 40785  00CC' 0E00               	movlw	0
 40786  00CE' 6E06'              	movwf	_ticksAdded+2,c	;volatile
 40787  00D0' 0E00               	movlw	0
 40788  00D2' 6E07'              	movwf	_ticksAdded+3,c	;volatile
 40789                           
 40790                           ; BSR set to: 1
 40791                           ;sw_timer.c: 101: reloadVal = 0;
 40792  00D4' 0E00               	movlw	0
 40793  00D6' 6E09'              	movwf	_reloadVal+1,c	;volatile
 40794  00D8' 0E00               	movlw	0
 40795  00DA' 6E08'              	movwf	_reloadVal,c	;volatile
 40796                           
 40797                           ;sw_timer.c: 102: }
 40798  00DC' D03E               	goto	i2l221
 40799  00DE'                    i2l220:
 40800                           
 40801                           ;sw_timer.c: 103: else
 40802                           ;sw_timer.c: 104: {
 40803                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 40804                           
 40805                           ; BSR set to: 1
 40806  00DE' C000' F00C'        	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 40807  00E2' C001' F00D'        	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 40808  00E6' C002' F00E'        	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 40809  00EA' C003' F00F'        	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 40810  00EE' 1E0C'              	comf	??i2_TMR_GetDeltaTime,f,c
 40811  00F0' 1E0D'              	comf	??i2_TMR_GetDeltaTime+1,f,c
 40812  00F2' 1E0E'              	comf	??i2_TMR_GetDeltaTime+2,f,c
 40813  00F4' 1E0F'              	comf	??i2_TMR_GetDeltaTime+3,f,c
 40814  00F6' 2A0C'              	incf	??i2_TMR_GetDeltaTime,f,c
 40815  00F8' 0E00               	movlw	0
 40816  00FA' 220D'              	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 40817  00FC' 220E'              	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 40818  00FE' 220F'              	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 40819  0100' C008' F010'        	movff	_reloadVal,??i2_TMR_GetDeltaTime+4	;volatile
 40820  0104' C009' F011'        	movff	_reloadVal+1,??i2_TMR_GetDeltaTime+5	;volatile
 40821  0108' 1E10'              	comf	??i2_TMR_GetDeltaTime+4,f,c
 40822  010A' 1E11'              	comf	??i2_TMR_GetDeltaTime+5,f,c
 40823  010C' 4A10'              	infsnz	??i2_TMR_GetDeltaTime+4,f,c
 40824  010E' 2A11'              	incf	??i2_TMR_GetDeltaTime+5,f,c
 40825  0110' 0101               	movlb	1	; () banked
 40826  0112' 5100'              	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 40827  0114' 2610'              	addwf	??i2_TMR_GetDeltaTime+4,f,c
 40828  0116' 5100'              	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 40829  0118' 2211'              	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 40830  011A' 5010'              	movf	??i2_TMR_GetDeltaTime+4,w,c
 40831  011C' 240C'              	addwf	??i2_TMR_GetDeltaTime,w,c
 40832  011E' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 40833  0120' 5011'              	movf	??i2_TMR_GetDeltaTime+5,w,c
 40834  0122' 200D'              	addwfc	??i2_TMR_GetDeltaTime+1,w,c
 40835  0124' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 40836  0126' 0E00               	movlw	0
 40837  0128' 200E'              	addwfc	??i2_TMR_GetDeltaTime+2,w,c
 40838  012A' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 40839  012C' 0E00               	movlw	0
 40840  012E' 200F'              	addwfc	??i2_TMR_GetDeltaTime+3,w,c
 40841  0130' 6E00'              	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 40842  0132' 5004'              	movf	_ticksAdded,w,c	;volatile
 40843  0134' 2412'              	addwf	??i2_TMR_GetDeltaTime+6,w,c
 40844  0136' 6F00'              	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 40845  0138' 5005'              	movf	_ticksAdded+1,w,c	;volatile
 40846  013A' 2013'              	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 40847  013C' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 40848  013E' 5006'              	movf	_ticksAdded+2,w,c	;volatile
 40849  0140' 2014'              	addwfc	??i2_TMR_GetDeltaTime+8,w,c
 40850  0142' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 40851  0144' 5007'              	movf	_ticksAdded+3,w,c	;volatile
 40852  0146' 2015'              	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 40853  0148' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 40854                           
 40855                           ;sw_timer.c: 106: ticksAccounted += retVal;
 40856  014A' 5100'              	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 40857  014C' 2600'              	addwf	_ticksAccounted,f,c	;volatile
 40858  014E' 5100'              	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 40859  0150' 2201'              	addwfc	_ticksAccounted+1,f,c	;volatile
 40860  0152' 5100'              	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 40861  0154' 2202'              	addwfc	_ticksAccounted+2,f,c	;volatile
 40862  0156' 5100'              	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 40863  0158' 2203'              	addwfc	_ticksAccounted+3,f,c	;volatile
 40864  015A'                    i2l221:
 40865                           
 40866                           ; BSR set to: 1
 40867                           ;sw_timer.c: 107: }
 40868                           ;sw_timer.c: 109: return retVal;
 40869                           
 40870                           ; BSR set to: 1
 40871  015A' C004' F008'        	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 40872  015E' C005' F009'        	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 40873  0162' C006' F00A'        	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 40874  0166' C007' F00B'        	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 40875  016A' 0012               	return	
 40876  016C'                    __end_ofi2_TMR_GetDeltaTime:
 40877                           	opt stack 0
 40878                           tosu	equ	0xFFF
 40879                           tosh	equ	0xFFE
 40880                           tosl	equ	0xFFD
 40881                           pclatu	equ	0xFFB
 40882                           pclath	equ	0xFFA
 40883                           tblptru	equ	0xFF8
 40884                           tblptrh	equ	0xFF7
 40885                           tblptrl	equ	0xFF6
 40886                           tablat	equ	0xFF5
 40887                           prodh	equ	0xFF4
 40888                           prodl	equ	0xFF3
 40889                           intcon	equ	0xFF2
 40890                           intcon2	equ	0xFF1
 40891                           intcon3	equ	0xFF0
 40892                           indf0	equ	0xFEF
 40893                           postinc0	equ	0xFEE
 40894                           plusw0	equ	0xFEB
 40895                           fsr0h	equ	0xFEA
 40896                           fsr0l	equ	0xFE9
 40897                           wreg	equ	0xFE8
 40898                           postinc1	equ	0xFE6
 40899                           postdec1	equ	0xFE5
 40900                           plusw1	equ	0xFE3
 40901                           fsr1h	equ	0xFE2
 40902                           fsr1l	equ	0xFE1
 40903                           indf2	equ	0xFDF
 40904                           postinc2	equ	0xFDE
 40905                           postdec2	equ	0xFDD
 40906                           plusw2	equ	0xFDB
 40907                           fsr2h	equ	0xFDA
 40908                           fsr2l	equ	0xFD9
 40909                           status	equ	0xFD8
 40910                           
 40911 ;; *************** function i2_TMR1_ReadTimer *****************
 40912 ;; Defined at:
 40913 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 40914 ;; Parameters:    Size  Location     Type
 40915 ;;		None
 40916 ;; Auto vars:     Size  Location     Type
 40917 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 40918 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 40919 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 40920 ;; Return value:  Size  Location     Type
 40921 ;;                  2    0[COMRAM] unsigned int 
 40922 ;; Registers used:
 40923 ;;		wreg, status,2
 40924 ;; Tracked objects:
 40925 ;;		On entry : 0/0
 40926 ;;		On exit  : 0/0
 40927 ;;		Unchanged: 0/0
 40928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40930 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40931 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40932 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40933 ;;Total ram usage:        8 bytes
 40934 ;; Hardware stack levels used:    1
 40935 ;; This function calls:
 40936 ;;		Nothing
 40937 ;; This function is called by:
 40938 ;;		i2_TMR_GetDeltaTime
 40939 ;;		i2_TMR_SwapTimer
 40940 ;; This function uses a non-reentrant model
 40941 ;;
 40942                           
 40943                           	psect	text200
 40944  0000'                    __ptext200:
 40945                           	opt stack 0
 40946  0000'                    i2_TMR1_ReadTimer:
 40947                           	opt stack 13
 40948                           
 40949                           ;tmr1.c: 107: uint16_t readVal;
 40950                           ;tmr1.c: 108: uint8_t readValHigh;
 40951                           ;tmr1.c: 109: uint8_t readValLow;
 40952                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 40953                           
 40954                           ; BSR set to: 1
 40955                           ;incstack = 0
 40956  0000' 82CD               	bsf	4045,1,c	;volatile
 40957                           
 40958                           ;tmr1.c: 113: readValLow = TMR1L;
 40959  0002' CFCE F007'         	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 40960                           
 40961                           ;tmr1.c: 114: readValHigh = TMR1H;
 40962  0006' CFCF F006'         	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 40963                           
 40964                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 40965  000A' 5006'              	movf	i2TMR1_ReadTimer@readValHigh,w,c
 40966  000C' 6E00'              	movwf	??i2_TMR1_ReadTimer& (0+255),c
 40967  000E' 5007'              	movf	i2TMR1_ReadTimer@readValLow,w,c
 40968  0010' 6E04'              	movwf	i2TMR1_ReadTimer@readVal,c
 40969  0012' C002' F005'        	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 40970                           
 40971                           ;tmr1.c: 118: return readVal;
 40972  0016' C004' F000'        	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 40973  001A' C005' F001'        	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 40974  001E' 0012               	return	
 40975  0020'                    __end_ofi2_TMR1_ReadTimer:
 40976                           	opt stack 0
 40977                           tosu	equ	0xFFF
 40978                           tosh	equ	0xFFE
 40979                           tosl	equ	0xFFD
 40980                           pclatu	equ	0xFFB
 40981                           pclath	equ	0xFFA
 40982                           tblptru	equ	0xFF8
 40983                           tblptrh	equ	0xFF7
 40984                           tblptrl	equ	0xFF6
 40985                           tablat	equ	0xFF5
 40986                           prodh	equ	0xFF4
 40987                           prodl	equ	0xFF3
 40988                           intcon	equ	0xFF2
 40989                           intcon2	equ	0xFF1
 40990                           intcon3	equ	0xFF0
 40991                           indf0	equ	0xFEF
 40992                           postinc0	equ	0xFEE
 40993                           plusw0	equ	0xFEB
 40994                           fsr0h	equ	0xFEA
 40995                           fsr0l	equ	0xFE9
 40996                           wreg	equ	0xFE8
 40997                           postinc1	equ	0xFE6
 40998                           postdec1	equ	0xFE5
 40999                           plusw1	equ	0xFE3
 41000                           fsr1h	equ	0xFE2
 41001                           fsr1l	equ	0xFE1
 41002                           indf2	equ	0xFDF
 41003                           postinc2	equ	0xFDE
 41004                           postdec2	equ	0xFDD
 41005                           plusw2	equ	0xFDB
 41006                           fsr2h	equ	0xFDA
 41007                           fsr2l	equ	0xFD9
 41008                           status	equ	0xFD8
 41009                           
 41010 ;; *************** function _PIN_MANAGER_IOC *****************
 41011 ;; Defined at:
 41012 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
 41013 ;; Parameters:    Size  Location     Type
 41014 ;;		None
 41015 ;; Auto vars:     Size  Location     Type
 41016 ;;		None
 41017 ;; Return value:  Size  Location     Type
 41018 ;;                  1    wreg      void 
 41019 ;; Registers used:
 41020 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41021 ;; Tracked objects:
 41022 ;;		On entry : 0/0
 41023 ;;		On exit  : 0/0
 41024 ;;		Unchanged: 0/0
 41025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41030 ;;Total ram usage:        0 bytes
 41031 ;; Hardware stack levels used:    1
 41032 ;; Hardware stack levels required when called:    2
 41033 ;; This function calls:
 41034 ;;		_IOCB4_ISR
 41035 ;; This function is called by:
 41036 ;;		_INTERRUPT_InterruptManager
 41037 ;; This function uses a non-reentrant model
 41038 ;;
 41039                           
 41040                           	psect	text201
 41041  0000'                    __ptext201:
 41042                           	opt stack 0
 41043  0000'                    _PIN_MANAGER_IOC:
 41044                           	opt stack 15
 41045                           
 41046                           ;pin_manager.c: 113: if(IOCBbits.IOCB4 == 1)
 41047                           
 41048                           ;incstack = 0
 41049  0000' B862               	btfsc	3938,4,c	;volatile
 41050                           
 41051                           ;pin_manager.c: 114: {
 41052                           ;pin_manager.c: 115: IOCB4_ISR();
 41053  0002' EC00' F000'        	call	_IOCB4_ISR	;wreg free
 41054                           
 41055                           ;pin_manager.c: 116: }
 41056                           ;pin_manager.c: 118: INTCONbits.RBIF = 0;
 41057  0006' 90F2               	bcf	intcon,0,c	;volatile
 41058  0008' 0012               	return		;funcret
 41059  000A'                    __end_of_PIN_MANAGER_IOC:
 41060                           	opt stack 0
 41061                           tosu	equ	0xFFF
 41062                           tosh	equ	0xFFE
 41063                           tosl	equ	0xFFD
 41064                           pclatu	equ	0xFFB
 41065                           pclath	equ	0xFFA
 41066                           tblptru	equ	0xFF8
 41067                           tblptrh	equ	0xFF7
 41068                           tblptrl	equ	0xFF6
 41069                           tablat	equ	0xFF5
 41070                           prodh	equ	0xFF4
 41071                           prodl	equ	0xFF3
 41072                           intcon	equ	0xFF2
 41073                           intcon2	equ	0xFF1
 41074                           intcon3	equ	0xFF0
 41075                           indf0	equ	0xFEF
 41076                           postinc0	equ	0xFEE
 41077                           plusw0	equ	0xFEB
 41078                           fsr0h	equ	0xFEA
 41079                           fsr0l	equ	0xFE9
 41080                           wreg	equ	0xFE8
 41081                           postinc1	equ	0xFE6
 41082                           postdec1	equ	0xFE5
 41083                           plusw1	equ	0xFE3
 41084                           fsr1h	equ	0xFE2
 41085                           fsr1l	equ	0xFE1
 41086                           indf2	equ	0xFDF
 41087                           postinc2	equ	0xFDE
 41088                           postdec2	equ	0xFDD
 41089                           plusw2	equ	0xFDB
 41090                           fsr2h	equ	0xFDA
 41091                           fsr2l	equ	0xFD9
 41092                           status	equ	0xFD8
 41093                           
 41094 ;; *************** function _IOCB4_ISR *****************
 41095 ;; Defined at:
 41096 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
 41097 ;; Parameters:    Size  Location     Type
 41098 ;;		None
 41099 ;; Auto vars:     Size  Location     Type
 41100 ;;		None
 41101 ;; Return value:  Size  Location     Type
 41102 ;;                  1    wreg      void 
 41103 ;; Registers used:
 41104 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41105 ;; Tracked objects:
 41106 ;;		On entry : 0/0
 41107 ;;		On exit  : 0/0
 41108 ;;		Unchanged: 0/0
 41109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41114 ;;Total ram usage:        0 bytes
 41115 ;; Hardware stack levels used:    1
 41116 ;; Hardware stack levels required when called:    1
 41117 ;; This function calls:
 41118 ;;		Absolute function
 41119 ;;		_DIO2_ISR_Lora
 41120 ;;		_IOCB4_DefaultInterruptHandler
 41121 ;; This function is called by:
 41122 ;;		_PIN_MANAGER_IOC
 41123 ;; This function uses a non-reentrant model
 41124 ;;
 41125                           
 41126                           	psect	text202
 41127  0000'                    __ptext202:
 41128                           	opt stack 0
 41129  0000'                    _IOCB4_ISR:
 41130                           	opt stack 15
 41131                           
 41132                           ;pin_manager.c: 129: if(IOCB4_InterruptHandler)
 41133                           
 41134                           ;incstack = 0
 41135  0000' 0101               	movlb	1	; () banked
 41136  0002' 5100'              	movf	_IOCB4_InterruptHandler& (0+255),w,b
 41137  0004' 1100'              	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 41138  0006' B4D8               	btfsc	status,2,c
 41139  0008' 0012               	return	
 41140                           
 41141                           ; BSR set to: 1
 41142                           ;pin_manager.c: 130: {
 41143                           ;pin_manager.c: 131: IOCB4_InterruptHandler();
 41144  000A' D801               	call	i2u2149_48
 41145  000C' 0012               	return	
 41146  000E'                    i2u2149_48:
 41147  000E' 0005               	push	
 41148  0010' 6EFA               	movwf	pclath,c
 41149  0012' 5100'              	movf	_IOCB4_InterruptHandler& (0+255),w,b
 41150  0014' 6EFD               	movwf	tosl,c
 41151  0016' 5100'              	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 41152  0018' 6EFE               	movwf	tosh,c
 41153  001A' 6AFF               	clrf	tosu,c
 41154  001C' 50FA               	movf	pclath,w,c
 41155  001E' 0012               	return		;indir
 41156  0020'                    __end_of_IOCB4_ISR:
 41157                           	opt stack 0
 41158                           tosu	equ	0xFFF
 41159                           tosh	equ	0xFFE
 41160                           tosl	equ	0xFFD
 41161                           pclatu	equ	0xFFB
 41162                           pclath	equ	0xFFA
 41163                           tblptru	equ	0xFF8
 41164                           tblptrh	equ	0xFF7
 41165                           tblptrl	equ	0xFF6
 41166                           tablat	equ	0xFF5
 41167                           prodh	equ	0xFF4
 41168                           prodl	equ	0xFF3
 41169                           intcon	equ	0xFF2
 41170                           intcon2	equ	0xFF1
 41171                           intcon3	equ	0xFF0
 41172                           indf0	equ	0xFEF
 41173                           postinc0	equ	0xFEE
 41174                           plusw0	equ	0xFEB
 41175                           fsr0h	equ	0xFEA
 41176                           fsr0l	equ	0xFE9
 41177                           wreg	equ	0xFE8
 41178                           postinc1	equ	0xFE6
 41179                           postdec1	equ	0xFE5
 41180                           plusw1	equ	0xFE3
 41181                           fsr1h	equ	0xFE2
 41182                           fsr1l	equ	0xFE1
 41183                           indf2	equ	0xFDF
 41184                           postinc2	equ	0xFDE
 41185                           postdec2	equ	0xFDD
 41186                           plusw2	equ	0xFDB
 41187                           fsr2h	equ	0xFDA
 41188                           fsr2l	equ	0xFD9
 41189                           status	equ	0xFD8
 41190                           
 41191 ;; *************** function _DIO2_ISR_Lora *****************
 41192 ;; Defined at:
 41193 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 41194 ;; Parameters:    Size  Location     Type
 41195 ;;		None
 41196 ;; Auto vars:     Size  Location     Type
 41197 ;;		None
 41198 ;; Return value:  Size  Location     Type
 41199 ;;                  1    wreg      void 
 41200 ;; Registers used:
 41201 ;;		status,2, status,0
 41202 ;; Tracked objects:
 41203 ;;		On entry : 0/0
 41204 ;;		On exit  : 0/0
 41205 ;;		Unchanged: 0/0
 41206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41211 ;;Total ram usage:        0 bytes
 41212 ;; Hardware stack levels used:    1
 41213 ;; This function calls:
 41214 ;;		Nothing
 41215 ;; This function is called by:
 41216 ;;		_DIO2_ISR_Lora_Init
 41217 ;;		_IOCB4_ISR
 41218 ;; This function uses a non-reentrant model
 41219 ;;
 41220                           
 41221                           	psect	text203
 41222  0000'                    __ptext203:
 41223                           	opt stack 0
 41224  0000'                    _DIO2_ISR_Lora:
 41225                           	opt stack 15
 41226                           
 41227                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 41228                           
 41229                           ;incstack = 0
 41230  0000' 0101               	movlb	1	; () banked
 41231  0002' 8500'              	bsf	_dioStatus& (0+255),2,b	;volatile
 41232                           
 41233                           ; BSR set to: 1
 41234  0004' 0012               	return		;funcret
 41235  0006'                    __end_of_DIO2_ISR_Lora:
 41236                           	opt stack 0
 41237                           tosu	equ	0xFFF
 41238                           tosh	equ	0xFFE
 41239                           tosl	equ	0xFFD
 41240                           pclatu	equ	0xFFB
 41241                           pclath	equ	0xFFA
 41242                           tblptru	equ	0xFF8
 41243                           tblptrh	equ	0xFF7
 41244                           tblptrl	equ	0xFF6
 41245                           tablat	equ	0xFF5
 41246                           prodh	equ	0xFF4
 41247                           prodl	equ	0xFF3
 41248                           intcon	equ	0xFF2
 41249                           intcon2	equ	0xFF1
 41250                           intcon3	equ	0xFF0
 41251                           indf0	equ	0xFEF
 41252                           postinc0	equ	0xFEE
 41253                           plusw0	equ	0xFEB
 41254                           fsr0h	equ	0xFEA
 41255                           fsr0l	equ	0xFE9
 41256                           wreg	equ	0xFE8
 41257                           postinc1	equ	0xFE6
 41258                           postdec1	equ	0xFE5
 41259                           plusw1	equ	0xFE3
 41260                           fsr1h	equ	0xFE2
 41261                           fsr1l	equ	0xFE1
 41262                           indf2	equ	0xFDF
 41263                           postinc2	equ	0xFDE
 41264                           postdec2	equ	0xFDD
 41265                           plusw2	equ	0xFDB
 41266                           fsr2h	equ	0xFDA
 41267                           fsr2l	equ	0xFD9
 41268                           status	equ	0xFD8
 41269                           
 41270 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 41271 ;; Defined at:
 41272 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
 41273 ;; Parameters:    Size  Location     Type
 41274 ;;		None
 41275 ;; Auto vars:     Size  Location     Type
 41276 ;;		None
 41277 ;; Return value:  Size  Location     Type
 41278 ;;                  1    wreg      void 
 41279 ;; Registers used:
 41280 ;;		None
 41281 ;; Tracked objects:
 41282 ;;		On entry : 0/0
 41283 ;;		On exit  : 0/0
 41284 ;;		Unchanged: 0/0
 41285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41290 ;;Total ram usage:        0 bytes
 41291 ;; Hardware stack levels used:    1
 41292 ;; This function calls:
 41293 ;;		Nothing
 41294 ;; This function is called by:
 41295 ;;		_PIN_MANAGER_Initialize
 41296 ;;		_IOCB4_ISR
 41297 ;; This function uses a non-reentrant model
 41298 ;;
 41299                           
 41300                           	psect	text204
 41301  0000'                    __ptext204:
 41302                           	opt stack 0
 41303  0000'                    _IOCB4_DefaultInterruptHandler:
 41304                           	opt stack 15
 41305                           
 41306                           ; BSR set to: 1
 41307                           ;incstack = 0
 41308  0000' 0012               	return		;funcret
 41309  0002'                    __end_of_IOCB4_DefaultInterruptHandler:
 41310                           	opt stack 0
 41311                           tosu	equ	0xFFF
 41312                           tosh	equ	0xFFE
 41313                           tosl	equ	0xFFD
 41314                           pclatu	equ	0xFFB
 41315                           pclath	equ	0xFFA
 41316                           tblptru	equ	0xFF8
 41317                           tblptrh	equ	0xFF7
 41318                           tblptrl	equ	0xFF6
 41319                           tablat	equ	0xFF5
 41320                           prodh	equ	0xFF4
 41321                           prodl	equ	0xFF3
 41322                           intcon	equ	0xFF2
 41323                           intcon2	equ	0xFF1
 41324                           intcon3	equ	0xFF0
 41325                           indf0	equ	0xFEF
 41326                           postinc0	equ	0xFEE
 41327                           plusw0	equ	0xFEB
 41328                           fsr0h	equ	0xFEA
 41329                           fsr0l	equ	0xFE9
 41330                           wreg	equ	0xFE8
 41331                           postinc1	equ	0xFE6
 41332                           postdec1	equ	0xFE5
 41333                           plusw1	equ	0xFE3
 41334                           fsr1h	equ	0xFE2
 41335                           fsr1l	equ	0xFE1
 41336                           indf2	equ	0xFDF
 41337                           postinc2	equ	0xFDE
 41338                           postdec2	equ	0xFDD
 41339                           plusw2	equ	0xFDB
 41340                           fsr2h	equ	0xFDA
 41341                           fsr2l	equ	0xFD9
 41342                           status	equ	0xFD8
 41343                           
 41344 ;; *************** function _INT2_ISR *****************
 41345 ;; Defined at:
 41346 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 41347 ;; Parameters:    Size  Location     Type
 41348 ;;		None
 41349 ;; Auto vars:     Size  Location     Type
 41350 ;;		None
 41351 ;; Return value:  Size  Location     Type
 41352 ;;                  1    wreg      void 
 41353 ;; Registers used:
 41354 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41355 ;; Tracked objects:
 41356 ;;		On entry : 0/0
 41357 ;;		On exit  : 0/0
 41358 ;;		Unchanged: 0/0
 41359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41364 ;;Total ram usage:        0 bytes
 41365 ;; Hardware stack levels used:    1
 41366 ;; Hardware stack levels required when called:    2
 41367 ;; This function calls:
 41368 ;;		_INT2_CallBack
 41369 ;; This function is called by:
 41370 ;;		_INTERRUPT_InterruptManager
 41371 ;; This function uses a non-reentrant model
 41372 ;;
 41373                           
 41374                           	psect	text205
 41375  0000'                    __ptext205:
 41376                           	opt stack 0
 41377  0000'                    _INT2_ISR:
 41378                           	opt stack 15
 41379                           
 41380                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
 41381                           
 41382                           ;incstack = 0
 41383  0000' 92F0               	bcf	intcon3,1,c	;volatile
 41384                           
 41385                           ;ext_int.c: 64: INT2_CallBack();
 41386  0002' EC00' F000'        	call	_INT2_CallBack	;wreg free
 41387  0006' 0012               	return		;funcret
 41388  0008'                    __end_of_INT2_ISR:
 41389                           	opt stack 0
 41390                           tosu	equ	0xFFF
 41391                           tosh	equ	0xFFE
 41392                           tosl	equ	0xFFD
 41393                           pclatu	equ	0xFFB
 41394                           pclath	equ	0xFFA
 41395                           tblptru	equ	0xFF8
 41396                           tblptrh	equ	0xFF7
 41397                           tblptrl	equ	0xFF6
 41398                           tablat	equ	0xFF5
 41399                           prodh	equ	0xFF4
 41400                           prodl	equ	0xFF3
 41401                           intcon	equ	0xFF2
 41402                           intcon2	equ	0xFF1
 41403                           intcon3	equ	0xFF0
 41404                           indf0	equ	0xFEF
 41405                           postinc0	equ	0xFEE
 41406                           plusw0	equ	0xFEB
 41407                           fsr0h	equ	0xFEA
 41408                           fsr0l	equ	0xFE9
 41409                           wreg	equ	0xFE8
 41410                           postinc1	equ	0xFE6
 41411                           postdec1	equ	0xFE5
 41412                           plusw1	equ	0xFE3
 41413                           fsr1h	equ	0xFE2
 41414                           fsr1l	equ	0xFE1
 41415                           indf2	equ	0xFDF
 41416                           postinc2	equ	0xFDE
 41417                           postdec2	equ	0xFDD
 41418                           plusw2	equ	0xFDB
 41419                           fsr2h	equ	0xFDA
 41420                           fsr2l	equ	0xFD9
 41421                           status	equ	0xFD8
 41422                           
 41423 ;; *************** function _INT2_CallBack *****************
 41424 ;; Defined at:
 41425 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 41426 ;; Parameters:    Size  Location     Type
 41427 ;;		None
 41428 ;; Auto vars:     Size  Location     Type
 41429 ;;		None
 41430 ;; Return value:  Size  Location     Type
 41431 ;;                  1    wreg      void 
 41432 ;; Registers used:
 41433 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41434 ;; Tracked objects:
 41435 ;;		On entry : 0/0
 41436 ;;		On exit  : 0/0
 41437 ;;		Unchanged: 0/0
 41438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41443 ;;Total ram usage:        0 bytes
 41444 ;; Hardware stack levels used:    1
 41445 ;; Hardware stack levels required when called:    1
 41446 ;; This function calls:
 41447 ;;		Absolute function
 41448 ;;		_DIO1_ISR_Lora
 41449 ;;		_INT2_DefaultInterruptHandler
 41450 ;; This function is called by:
 41451 ;;		_INT2_ISR
 41452 ;; This function uses a non-reentrant model
 41453 ;;
 41454                           
 41455                           	psect	text206
 41456  0000'                    __ptext206:
 41457                           	opt stack 0
 41458  0000'                    _INT2_CallBack:
 41459                           	opt stack 15
 41460                           
 41461                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 41462                           
 41463                           ;incstack = 0
 41464  0000' 0101               	movlb	1	; () banked
 41465  0002' 5100'              	movf	_INT2_InterruptHandler& (0+255),w,b
 41466  0004' 1100'              	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 41467  0006' B4D8               	btfsc	status,2,c
 41468  0008' 0012               	return	
 41469                           
 41470                           ; BSR set to: 1
 41471                           ;ext_int.c: 72: {
 41472                           ;ext_int.c: 73: INT2_InterruptHandler();
 41473  000A' D801               	call	i2u2147_48
 41474  000C' 0012               	return	
 41475  000E'                    i2u2147_48:
 41476  000E' 0005               	push	
 41477  0010' 6EFA               	movwf	pclath,c
 41478  0012' 5100'              	movf	_INT2_InterruptHandler& (0+255),w,b
 41479  0014' 6EFD               	movwf	tosl,c
 41480  0016' 5100'              	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 41481  0018' 6EFE               	movwf	tosh,c
 41482  001A' 6AFF               	clrf	tosu,c
 41483  001C' 50FA               	movf	pclath,w,c
 41484  001E' 0012               	return		;indir
 41485  0020'                    __end_of_INT2_CallBack:
 41486                           	opt stack 0
 41487                           tosu	equ	0xFFF
 41488                           tosh	equ	0xFFE
 41489                           tosl	equ	0xFFD
 41490                           pclatu	equ	0xFFB
 41491                           pclath	equ	0xFFA
 41492                           tblptru	equ	0xFF8
 41493                           tblptrh	equ	0xFF7
 41494                           tblptrl	equ	0xFF6
 41495                           tablat	equ	0xFF5
 41496                           prodh	equ	0xFF4
 41497                           prodl	equ	0xFF3
 41498                           intcon	equ	0xFF2
 41499                           intcon2	equ	0xFF1
 41500                           intcon3	equ	0xFF0
 41501                           indf0	equ	0xFEF
 41502                           postinc0	equ	0xFEE
 41503                           plusw0	equ	0xFEB
 41504                           fsr0h	equ	0xFEA
 41505                           fsr0l	equ	0xFE9
 41506                           wreg	equ	0xFE8
 41507                           postinc1	equ	0xFE6
 41508                           postdec1	equ	0xFE5
 41509                           plusw1	equ	0xFE3
 41510                           fsr1h	equ	0xFE2
 41511                           fsr1l	equ	0xFE1
 41512                           indf2	equ	0xFDF
 41513                           postinc2	equ	0xFDE
 41514                           postdec2	equ	0xFDD
 41515                           plusw2	equ	0xFDB
 41516                           fsr2h	equ	0xFDA
 41517                           fsr2l	equ	0xFD9
 41518                           status	equ	0xFD8
 41519                           
 41520 ;; *************** function _DIO1_ISR_Lora *****************
 41521 ;; Defined at:
 41522 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 41523 ;; Parameters:    Size  Location     Type
 41524 ;;		None
 41525 ;; Auto vars:     Size  Location     Type
 41526 ;;		None
 41527 ;; Return value:  Size  Location     Type
 41528 ;;                  1    wreg      void 
 41529 ;; Registers used:
 41530 ;;		status,2, status,0
 41531 ;; Tracked objects:
 41532 ;;		On entry : 0/0
 41533 ;;		On exit  : 0/0
 41534 ;;		Unchanged: 0/0
 41535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41540 ;;Total ram usage:        0 bytes
 41541 ;; Hardware stack levels used:    1
 41542 ;; This function calls:
 41543 ;;		Nothing
 41544 ;; This function is called by:
 41545 ;;		_DIO1_ISR_Lora_Init
 41546 ;;		_INT2_CallBack
 41547 ;; This function uses a non-reentrant model
 41548 ;;
 41549                           
 41550                           	psect	text207
 41551  0000'                    __ptext207:
 41552                           	opt stack 0
 41553  0000'                    _DIO1_ISR_Lora:
 41554                           	opt stack 15
 41555                           
 41556                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 41557                           
 41558                           ;incstack = 0
 41559  0000' 0101               	movlb	1	; () banked
 41560  0002' 8300'              	bsf	_dioStatus& (0+255),1,b	;volatile
 41561                           
 41562                           ; BSR set to: 1
 41563  0004' 0012               	return		;funcret
 41564  0006'                    __end_of_DIO1_ISR_Lora:
 41565                           	opt stack 0
 41566                           tosu	equ	0xFFF
 41567                           tosh	equ	0xFFE
 41568                           tosl	equ	0xFFD
 41569                           pclatu	equ	0xFFB
 41570                           pclath	equ	0xFFA
 41571                           tblptru	equ	0xFF8
 41572                           tblptrh	equ	0xFF7
 41573                           tblptrl	equ	0xFF6
 41574                           tablat	equ	0xFF5
 41575                           prodh	equ	0xFF4
 41576                           prodl	equ	0xFF3
 41577                           intcon	equ	0xFF2
 41578                           intcon2	equ	0xFF1
 41579                           intcon3	equ	0xFF0
 41580                           indf0	equ	0xFEF
 41581                           postinc0	equ	0xFEE
 41582                           plusw0	equ	0xFEB
 41583                           fsr0h	equ	0xFEA
 41584                           fsr0l	equ	0xFE9
 41585                           wreg	equ	0xFE8
 41586                           postinc1	equ	0xFE6
 41587                           postdec1	equ	0xFE5
 41588                           plusw1	equ	0xFE3
 41589                           fsr1h	equ	0xFE2
 41590                           fsr1l	equ	0xFE1
 41591                           indf2	equ	0xFDF
 41592                           postinc2	equ	0xFDE
 41593                           postdec2	equ	0xFDD
 41594                           plusw2	equ	0xFDB
 41595                           fsr2h	equ	0xFDA
 41596                           fsr2l	equ	0xFD9
 41597                           status	equ	0xFD8
 41598                           
 41599 ;; *************** function _INT2_DefaultInterruptHandler *****************
 41600 ;; Defined at:
 41601 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 41602 ;; Parameters:    Size  Location     Type
 41603 ;;		None
 41604 ;; Auto vars:     Size  Location     Type
 41605 ;;		None
 41606 ;; Return value:  Size  Location     Type
 41607 ;;                  1    wreg      void 
 41608 ;; Registers used:
 41609 ;;		None
 41610 ;; Tracked objects:
 41611 ;;		On entry : 0/0
 41612 ;;		On exit  : 0/0
 41613 ;;		Unchanged: 0/0
 41614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41619 ;;Total ram usage:        0 bytes
 41620 ;; Hardware stack levels used:    1
 41621 ;; This function calls:
 41622 ;;		Nothing
 41623 ;; This function is called by:
 41624 ;;		_EXT_INT_Initialize
 41625 ;;		_INT2_CallBack
 41626 ;; This function uses a non-reentrant model
 41627 ;;
 41628                           
 41629                           	psect	text208
 41630  0000'                    __ptext208:
 41631                           	opt stack 0
 41632  0000'                    _INT2_DefaultInterruptHandler:
 41633                           	opt stack 15
 41634                           
 41635                           ; BSR set to: 1
 41636                           ;incstack = 0
 41637  0000' 0012               	return		;funcret
 41638  0002'                    __end_of_INT2_DefaultInterruptHandler:
 41639                           	opt stack 0
 41640                           tosu	equ	0xFFF
 41641                           tosh	equ	0xFFE
 41642                           tosl	equ	0xFFD
 41643                           pclatu	equ	0xFFB
 41644                           pclath	equ	0xFFA
 41645                           tblptru	equ	0xFF8
 41646                           tblptrh	equ	0xFF7
 41647                           tblptrl	equ	0xFF6
 41648                           tablat	equ	0xFF5
 41649                           prodh	equ	0xFF4
 41650                           prodl	equ	0xFF3
 41651                           intcon	equ	0xFF2
 41652                           intcon2	equ	0xFF1
 41653                           intcon3	equ	0xFF0
 41654                           indf0	equ	0xFEF
 41655                           postinc0	equ	0xFEE
 41656                           plusw0	equ	0xFEB
 41657                           fsr0h	equ	0xFEA
 41658                           fsr0l	equ	0xFE9
 41659                           wreg	equ	0xFE8
 41660                           postinc1	equ	0xFE6
 41661                           postdec1	equ	0xFE5
 41662                           plusw1	equ	0xFE3
 41663                           fsr1h	equ	0xFE2
 41664                           fsr1l	equ	0xFE1
 41665                           indf2	equ	0xFDF
 41666                           postinc2	equ	0xFDE
 41667                           postdec2	equ	0xFDD
 41668                           plusw2	equ	0xFDB
 41669                           fsr2h	equ	0xFDA
 41670                           fsr2l	equ	0xFD9
 41671                           status	equ	0xFD8
 41672                           
 41673 ;; *************** function _INT1_ISR *****************
 41674 ;; Defined at:
 41675 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 41676 ;; Parameters:    Size  Location     Type
 41677 ;;		None
 41678 ;; Auto vars:     Size  Location     Type
 41679 ;;		None
 41680 ;; Return value:  Size  Location     Type
 41681 ;;                  1    wreg      void 
 41682 ;; Registers used:
 41683 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41684 ;; Tracked objects:
 41685 ;;		On entry : 0/0
 41686 ;;		On exit  : 0/0
 41687 ;;		Unchanged: 0/0
 41688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41693 ;;Total ram usage:        0 bytes
 41694 ;; Hardware stack levels used:    1
 41695 ;; Hardware stack levels required when called:    2
 41696 ;; This function calls:
 41697 ;;		_INT1_CallBack
 41698 ;; This function is called by:
 41699 ;;		_INTERRUPT_InterruptManager
 41700 ;; This function uses a non-reentrant model
 41701 ;;
 41702                           
 41703                           	psect	text209
 41704  0000'                    __ptext209:
 41705                           	opt stack 0
 41706  0000'                    _INT1_ISR:
 41707                           	opt stack 15
 41708                           
 41709                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
 41710                           
 41711                           ;incstack = 0
 41712  0000' 90F0               	bcf	intcon3,0,c	;volatile
 41713                           
 41714                           ;ext_int.c: 38: INT1_CallBack();
 41715  0002' EC00' F000'        	call	_INT1_CallBack	;wreg free
 41716  0006' 0012               	return		;funcret
 41717  0008'                    __end_of_INT1_ISR:
 41718                           	opt stack 0
 41719                           tosu	equ	0xFFF
 41720                           tosh	equ	0xFFE
 41721                           tosl	equ	0xFFD
 41722                           pclatu	equ	0xFFB
 41723                           pclath	equ	0xFFA
 41724                           tblptru	equ	0xFF8
 41725                           tblptrh	equ	0xFF7
 41726                           tblptrl	equ	0xFF6
 41727                           tablat	equ	0xFF5
 41728                           prodh	equ	0xFF4
 41729                           prodl	equ	0xFF3
 41730                           intcon	equ	0xFF2
 41731                           intcon2	equ	0xFF1
 41732                           intcon3	equ	0xFF0
 41733                           indf0	equ	0xFEF
 41734                           postinc0	equ	0xFEE
 41735                           plusw0	equ	0xFEB
 41736                           fsr0h	equ	0xFEA
 41737                           fsr0l	equ	0xFE9
 41738                           wreg	equ	0xFE8
 41739                           postinc1	equ	0xFE6
 41740                           postdec1	equ	0xFE5
 41741                           plusw1	equ	0xFE3
 41742                           fsr1h	equ	0xFE2
 41743                           fsr1l	equ	0xFE1
 41744                           indf2	equ	0xFDF
 41745                           postinc2	equ	0xFDE
 41746                           postdec2	equ	0xFDD
 41747                           plusw2	equ	0xFDB
 41748                           fsr2h	equ	0xFDA
 41749                           fsr2l	equ	0xFD9
 41750                           status	equ	0xFD8
 41751                           
 41752 ;; *************** function _INT1_CallBack *****************
 41753 ;; Defined at:
 41754 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 41755 ;; Parameters:    Size  Location     Type
 41756 ;;		None
 41757 ;; Auto vars:     Size  Location     Type
 41758 ;;		None
 41759 ;; Return value:  Size  Location     Type
 41760 ;;                  1    wreg      void 
 41761 ;; Registers used:
 41762 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41763 ;; Tracked objects:
 41764 ;;		On entry : 0/0
 41765 ;;		On exit  : 0/0
 41766 ;;		Unchanged: 0/0
 41767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41772 ;;Total ram usage:        0 bytes
 41773 ;; Hardware stack levels used:    1
 41774 ;; Hardware stack levels required when called:    1
 41775 ;; This function calls:
 41776 ;;		Absolute function
 41777 ;;		_DIO0_ISR_Lora
 41778 ;;		_INT1_DefaultInterruptHandler
 41779 ;; This function is called by:
 41780 ;;		_INT1_ISR
 41781 ;; This function uses a non-reentrant model
 41782 ;;
 41783                           
 41784                           	psect	text210
 41785  0000'                    __ptext210:
 41786                           	opt stack 0
 41787  0000'                    _INT1_CallBack:
 41788                           	opt stack 15
 41789                           
 41790                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 41791                           
 41792                           ;incstack = 0
 41793  0000' 0101               	movlb	1	; () banked
 41794  0002' 5100'              	movf	_INT1_InterruptHandler& (0+255),w,b
 41795  0004' 1100'              	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 41796  0006' B4D8               	btfsc	status,2,c
 41797  0008' 0012               	return	
 41798                           
 41799                           ; BSR set to: 1
 41800                           ;ext_int.c: 46: {
 41801                           ;ext_int.c: 47: INT1_InterruptHandler();
 41802  000A' D801               	call	i2u2145_48
 41803  000C' 0012               	return	
 41804  000E'                    i2u2145_48:
 41805  000E' 0005               	push	
 41806  0010' 6EFA               	movwf	pclath,c
 41807  0012' 5100'              	movf	_INT1_InterruptHandler& (0+255),w,b
 41808  0014' 6EFD               	movwf	tosl,c
 41809  0016' 5100'              	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 41810  0018' 6EFE               	movwf	tosh,c
 41811  001A' 6AFF               	clrf	tosu,c
 41812  001C' 50FA               	movf	pclath,w,c
 41813  001E' 0012               	return		;indir
 41814  0020'                    __end_of_INT1_CallBack:
 41815                           	opt stack 0
 41816                           tosu	equ	0xFFF
 41817                           tosh	equ	0xFFE
 41818                           tosl	equ	0xFFD
 41819                           pclatu	equ	0xFFB
 41820                           pclath	equ	0xFFA
 41821                           tblptru	equ	0xFF8
 41822                           tblptrh	equ	0xFF7
 41823                           tblptrl	equ	0xFF6
 41824                           tablat	equ	0xFF5
 41825                           prodh	equ	0xFF4
 41826                           prodl	equ	0xFF3
 41827                           intcon	equ	0xFF2
 41828                           intcon2	equ	0xFF1
 41829                           intcon3	equ	0xFF0
 41830                           indf0	equ	0xFEF
 41831                           postinc0	equ	0xFEE
 41832                           plusw0	equ	0xFEB
 41833                           fsr0h	equ	0xFEA
 41834                           fsr0l	equ	0xFE9
 41835                           wreg	equ	0xFE8
 41836                           postinc1	equ	0xFE6
 41837                           postdec1	equ	0xFE5
 41838                           plusw1	equ	0xFE3
 41839                           fsr1h	equ	0xFE2
 41840                           fsr1l	equ	0xFE1
 41841                           indf2	equ	0xFDF
 41842                           postinc2	equ	0xFDE
 41843                           postdec2	equ	0xFDD
 41844                           plusw2	equ	0xFDB
 41845                           fsr2h	equ	0xFDA
 41846                           fsr2l	equ	0xFD9
 41847                           status	equ	0xFD8
 41848                           
 41849 ;; *************** function _DIO0_ISR_Lora *****************
 41850 ;; Defined at:
 41851 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 41852 ;; Parameters:    Size  Location     Type
 41853 ;;		None
 41854 ;; Auto vars:     Size  Location     Type
 41855 ;;		None
 41856 ;; Return value:  Size  Location     Type
 41857 ;;                  1    wreg      void 
 41858 ;; Registers used:
 41859 ;;		status,2, status,0
 41860 ;; Tracked objects:
 41861 ;;		On entry : 0/0
 41862 ;;		On exit  : 0/0
 41863 ;;		Unchanged: 0/0
 41864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41869 ;;Total ram usage:        0 bytes
 41870 ;; Hardware stack levels used:    1
 41871 ;; This function calls:
 41872 ;;		Nothing
 41873 ;; This function is called by:
 41874 ;;		_DIO0_ISR_Lora_Init
 41875 ;;		_INT1_CallBack
 41876 ;; This function uses a non-reentrant model
 41877 ;;
 41878                           
 41879                           	psect	text211
 41880  0000'                    __ptext211:
 41881                           	opt stack 0
 41882  0000'                    _DIO0_ISR_Lora:
 41883                           	opt stack 15
 41884                           
 41885                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 41886                           
 41887                           ;incstack = 0
 41888  0000' 0101               	movlb	1	; () banked
 41889  0002' 8100'              	bsf	_dioStatus& (0+255),0,b	;volatile
 41890                           
 41891                           ; BSR set to: 1
 41892  0004' 0012               	return		;funcret
 41893  0006'                    __end_of_DIO0_ISR_Lora:
 41894                           	opt stack 0
 41895                           tosu	equ	0xFFF
 41896                           tosh	equ	0xFFE
 41897                           tosl	equ	0xFFD
 41898                           pclatu	equ	0xFFB
 41899                           pclath	equ	0xFFA
 41900                           tblptru	equ	0xFF8
 41901                           tblptrh	equ	0xFF7
 41902                           tblptrl	equ	0xFF6
 41903                           tablat	equ	0xFF5
 41904                           prodh	equ	0xFF4
 41905                           prodl	equ	0xFF3
 41906                           intcon	equ	0xFF2
 41907                           intcon2	equ	0xFF1
 41908                           intcon3	equ	0xFF0
 41909                           indf0	equ	0xFEF
 41910                           postinc0	equ	0xFEE
 41911                           plusw0	equ	0xFEB
 41912                           fsr0h	equ	0xFEA
 41913                           fsr0l	equ	0xFE9
 41914                           wreg	equ	0xFE8
 41915                           postinc1	equ	0xFE6
 41916                           postdec1	equ	0xFE5
 41917                           plusw1	equ	0xFE3
 41918                           fsr1h	equ	0xFE2
 41919                           fsr1l	equ	0xFE1
 41920                           indf2	equ	0xFDF
 41921                           postinc2	equ	0xFDE
 41922                           postdec2	equ	0xFDD
 41923                           plusw2	equ	0xFDB
 41924                           fsr2h	equ	0xFDA
 41925                           fsr2l	equ	0xFD9
 41926                           status	equ	0xFD8
 41927                           
 41928 ;; *************** function _INT1_DefaultInterruptHandler *****************
 41929 ;; Defined at:
 41930 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 41931 ;; Parameters:    Size  Location     Type
 41932 ;;		None
 41933 ;; Auto vars:     Size  Location     Type
 41934 ;;		None
 41935 ;; Return value:  Size  Location     Type
 41936 ;;                  1    wreg      void 
 41937 ;; Registers used:
 41938 ;;		None
 41939 ;; Tracked objects:
 41940 ;;		On entry : 0/0
 41941 ;;		On exit  : 0/0
 41942 ;;		Unchanged: 0/0
 41943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41948 ;;Total ram usage:        0 bytes
 41949 ;; Hardware stack levels used:    1
 41950 ;; This function calls:
 41951 ;;		Nothing
 41952 ;; This function is called by:
 41953 ;;		_EXT_INT_Initialize
 41954 ;;		_INT1_CallBack
 41955 ;; This function uses a non-reentrant model
 41956 ;;
 41957                           
 41958                           	psect	text212
 41959  0000'                    __ptext212:
 41960                           	opt stack 0
 41961  0000'                    _INT1_DefaultInterruptHandler:
 41962                           	opt stack 15
 41963                           
 41964                           ; BSR set to: 1
 41965                           ;incstack = 0
 41966  0000' 0012               	return		;funcret
 41967  0002'                    __end_of_INT1_DefaultInterruptHandler:
 41968                           	opt stack 0
 41969                           tosu	equ	0xFFF
 41970                           tosh	equ	0xFFE
 41971                           tosl	equ	0xFFD
 41972                           pclatu	equ	0xFFB
 41973                           pclath	equ	0xFFA
 41974                           tblptru	equ	0xFF8
 41975                           tblptrh	equ	0xFF7
 41976                           tblptrl	equ	0xFF6
 41977                           tablat	equ	0xFF5
 41978                           prodh	equ	0xFF4
 41979                           prodl	equ	0xFF3
 41980                           intcon	equ	0xFF2
 41981                           intcon2	equ	0xFF1
 41982                           intcon3	equ	0xFF0
 41983                           indf0	equ	0xFEF
 41984                           postinc0	equ	0xFEE
 41985                           plusw0	equ	0xFEB
 41986                           fsr0h	equ	0xFEA
 41987                           fsr0l	equ	0xFE9
 41988                           wreg	equ	0xFE8
 41989                           postinc1	equ	0xFE6
 41990                           postdec1	equ	0xFE5
 41991                           plusw1	equ	0xFE3
 41992                           fsr1h	equ	0xFE2
 41993                           fsr1l	equ	0xFE1
 41994                           indf2	equ	0xFDF
 41995                           postinc2	equ	0xFDE
 41996                           postdec2	equ	0xFDD
 41997                           plusw2	equ	0xFDB
 41998                           fsr2h	equ	0xFDA
 41999                           fsr2l	equ	0xFD9
 42000                           status	equ	0xFD8
 42001                           tosu	equ	0xFFF
 42002                           tosh	equ	0xFFE
 42003                           tosl	equ	0xFFD
 42004                           pclatu	equ	0xFFB
 42005                           pclath	equ	0xFFA
 42006                           tblptru	equ	0xFF8
 42007                           tblptrh	equ	0xFF7
 42008                           tblptrl	equ	0xFF6
 42009                           tablat	equ	0xFF5
 42010                           prodh	equ	0xFF4
 42011                           prodl	equ	0xFF3
 42012                           intcon	equ	0xFF2
 42013                           intcon2	equ	0xFF1
 42014                           intcon3	equ	0xFF0
 42015                           indf0	equ	0xFEF
 42016                           postinc0	equ	0xFEE
 42017                           plusw0	equ	0xFEB
 42018                           fsr0h	equ	0xFEA
 42019                           fsr0l	equ	0xFE9
 42020                           wreg	equ	0xFE8
 42021                           postinc1	equ	0xFE6
 42022                           postdec1	equ	0xFE5
 42023                           plusw1	equ	0xFE3
 42024                           fsr1h	equ	0xFE2
 42025                           fsr1l	equ	0xFE1
 42026                           indf2	equ	0xFDF
 42027                           postinc2	equ	0xFDE
 42028                           postdec2	equ	0xFDD
 42029                           plusw2	equ	0xFDB
 42030                           fsr2h	equ	0xFDA
 42031                           fsr2l	equ	0xFD9
 42032                           status	equ	0xFD8
 42033                           
 42034                           	psect	text213
 42035  0000'                    __ptext213:
 42036                           	opt stack 0
 42037                           tosu	equ	0xFFF
 42038                           tosh	equ	0xFFE
 42039                           tosl	equ	0xFFD
 42040                           pclatu	equ	0xFFB
 42041                           pclath	equ	0xFFA
 42042                           tblptru	equ	0xFF8
 42043                           tblptrh	equ	0xFF7
 42044                           tblptrl	equ	0xFF6
 42045                           tablat	equ	0xFF5
 42046                           prodh	equ	0xFF4
 42047                           prodl	equ	0xFF3
 42048                           intcon	equ	0xFF2
 42049                           intcon2	equ	0xFF1
 42050                           intcon3	equ	0xFF0
 42051                           indf0	equ	0xFEF
 42052                           postinc0	equ	0xFEE
 42053                           plusw0	equ	0xFEB
 42054                           fsr0h	equ	0xFEA
 42055                           fsr0l	equ	0xFE9
 42056                           wreg	equ	0xFE8
 42057                           postinc1	equ	0xFE6
 42058                           postdec1	equ	0xFE5
 42059                           plusw1	equ	0xFE3
 42060                           fsr1h	equ	0xFE2
 42061                           fsr1l	equ	0xFE1
 42062                           indf2	equ	0xFDF
 42063                           postinc2	equ	0xFDE
 42064                           postdec2	equ	0xFDD
 42065                           plusw2	equ	0xFDB
 42066                           fsr2h	equ	0xFDA
 42067                           fsr2l	equ	0xFD9
 42068                           status	equ	0xFD8
 42069                           
 42070                           	psect	rparam
 42071  0000                     tosu	equ	0xFFF
 42072                           tosh	equ	0xFFE
 42073                           tosl	equ	0xFFD
 42074                           pclatu	equ	0xFFB
 42075                           pclath	equ	0xFFA
 42076                           tblptru	equ	0xFF8
 42077                           tblptrh	equ	0xFF7
 42078                           tblptrl	equ	0xFF6
 42079                           tablat	equ	0xFF5
 42080                           prodh	equ	0xFF4
 42081                           prodl	equ	0xFF3
 42082                           intcon	equ	0xFF2
 42083                           intcon2	equ	0xFF1
 42084                           intcon3	equ	0xFF0
 42085                           indf0	equ	0xFEF
 42086                           postinc0	equ	0xFEE
 42087                           plusw0	equ	0xFEB
 42088                           fsr0h	equ	0xFEA
 42089                           fsr0l	equ	0xFE9
 42090                           wreg	equ	0xFE8
 42091                           postinc1	equ	0xFE6
 42092                           postdec1	equ	0xFE5
 42093                           plusw1	equ	0xFE3
 42094                           fsr1h	equ	0xFE2
 42095                           fsr1l	equ	0xFE1
 42096                           indf2	equ	0xFDF
 42097                           postinc2	equ	0xFDE
 42098                           postdec2	equ	0xFDD
 42099                           plusw2	equ	0xFDB
 42100                           fsr2h	equ	0xFDA
 42101                           fsr2l	equ	0xFD9
 42102                           status	equ	0xFD8
 42103                           
 42104                           	psect	temp
 42105  0000'                    btemp:
 42106                           	opt stack 0
 42107  0000'                    	ds	12
 42108  0000                     wtemp0	set	btemp
 42109  0000                     wtemp1	set	btemp+2
 42110  0000                     wtemp2	set	btemp+4
 42111  0000                     wtemp3	set	btemp+6
 42112  0000                     wtemp4	set	btemp+8
 42113  0000                     wtemp5	set	btemp+10
 42114  0000                     wtemp6	set	btemp+1
 42115  0000                     ttemp0	set	btemp
 42116  0000                     ttemp1	set	btemp+3
 42117  0000                     ttemp2	set	btemp+6
 42118  0000                     ttemp3	set	btemp+9
 42119  0000                     ltemp0	set	btemp
 42120  0000                     ltemp1	set	btemp+4
 42121  0000                     ltemp2	set	btemp+8
 42122                           tosu	equ	0xFFF
 42123                           tosh	equ	0xFFE
 42124                           tosl	equ	0xFFD
 42125                           pclatu	equ	0xFFB
 42126                           pclath	equ	0xFFA
 42127                           tblptru	equ	0xFF8
 42128                           tblptrh	equ	0xFF7
 42129                           tblptrl	equ	0xFF6
 42130                           tablat	equ	0xFF5
 42131                           prodh	equ	0xFF4
 42132                           prodl	equ	0xFF3
 42133                           intcon	equ	0xFF2
 42134                           intcon2	equ	0xFF1
 42135                           intcon3	equ	0xFF0
 42136                           indf0	equ	0xFEF
 42137                           postinc0	equ	0xFEE
 42138                           plusw0	equ	0xFEB
 42139                           fsr0h	equ	0xFEA
 42140                           fsr0l	equ	0xFE9
 42141                           wreg	equ	0xFE8
 42142                           postinc1	equ	0xFE6
 42143                           postdec1	equ	0xFE5
 42144                           plusw1	equ	0xFE3
 42145                           fsr1h	equ	0xFE2
 42146                           fsr1l	equ	0xFE1
 42147                           indf2	equ	0xFDF
 42148                           postinc2	equ	0xFDE
 42149                           postdec2	equ	0xFDD
 42150                           plusw2	equ	0xFDB
 42151                           fsr2h	equ	0xFDA
 42152                           fsr2l	equ	0xFD9
 42153                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    416
    Data        60
    BSS         1271
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     59      75
    BANK0           160    156     156
    BANK1           256    105     243
    BANK2           256      0     245
    BANK3           256      0     176
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxData@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1240$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), STR_1(CODE[5]), appSKey(BANK3[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), 
		 -> loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), DefaultChannels433(CODE[42]), 
		 -> DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), STR_1(CODE[5]), appSKey(BANK3[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), 
		 -> loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), DefaultChannels433(CODE[42]), 
		 -> DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), 
		 -> NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), Absolute function(), DIO2_ISR_Lora(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), DIO1_ISR_Lora(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), DIO0_ISR_Lora(), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> STR_1(CODE[5]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(2) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK3[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK1[16]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 5
		 -> STR_1(CODE[5]), NULL(NULL[0]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK0[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    S1240$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1240$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S571$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S571$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S349$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_DIO2->_RADIO_FHSSChangeChannel
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteNewChannel
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _UpdateReceiveDelays->___wmul
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_RADIO_WriteConfiguration
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_RADIO_WriteConfiguration
    _RADIO_WriteConfiguration->___lmul
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->___lmul
    ___lmul->_SwTimerReadValue
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 6876316
                                            154 BANK0      2     2      0
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
                       _LORAWAN_Send
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1600
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT0_SetInterruptHandler                             2     0      2       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 6080168
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2360159
                                            122 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  155700
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  691632
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  507050
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  158013
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    9521
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1    9964
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  326837
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  165843
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                             _RxData *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9898
                                              4 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           3     3      0    9898
                                              4 BANK0      3     3      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9898
                                              4 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36408
                                             26 BANK0      3     3      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  553118
                                            107 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  516682
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26476
                                             25 BANK0      1     1      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 3100766
                                            150 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9796
                                              3 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  216701
                                            131 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         3     3      0 1093126
                                            147 BANK0      3     3      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              7     6      1     549
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                3     3      0 1573811
                                            147 BANK0      3     3      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  491033
                                             98 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  325660
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1066631
                                            122 BANK0     25    25      0
                                            102 BANK1      3     0      3
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                             _RxData *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9382
                                             58 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1    9419
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                         9     7      2   25173
                                             70 BANK0      9     7      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9673
                                             58 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  167681
     _LORAWAN_EnterContinuousReceive
                             _RxData *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   27672
                                             80 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2    1745
                                              7 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  1     1      0    1542
                                              6 BANK0      1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1480
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               9     7      2    7473
                                             70 BANK0      9     7      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     478
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                   10     8      2   13487
                                             70 BANK0     10     8      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     684
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              2 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     405
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     405
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     628
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2489
                                              4 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     962
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                      10     8      2    3388
                                             15 BANK0     10     8      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRate                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  5     3      2     302
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _UpdateCurrentDataRate                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2075
                                             12 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      8     3      5    1805
                                              4 BANK0      8     3      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Send                                         7     3      4  326837
                                            115 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                              8 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (2) _AssemblePacket                                      12     7      5  158326
                                            103 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _IncludeMacCommandsResponse                          15    10      5    2532
                                              0 BANK0     15    10      5
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (4) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FindSmallestDataRate                                 4     4      0     455
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _EncryptFRMPayload                                   24    10     14   46483
                                             49 BANK0     24    10     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _AssembleEncryptionBlock                              9     2      7   20074
                                             11 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _CountfOptsLength                                     8     8      0     198
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          12     8      4   14693
                                             11 BANK0     12     8      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   39374
                                             49 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   18513
                                             11 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  207069
                                            131 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      40    38      2  184746
                                             91 BANK0     40    38      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                             _RxData *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             49 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  162830
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _RxData                                               4     0      4    4851
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReceiveStop                                    0     0      0   15853
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  126580
                                             81 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   15546
                                             19 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  263460
                                            123 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SelectChannelForTransmission                         3     3      0   23204
                                             91 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (3) _SearchAvailableChannel                              12     9      3    7600
                                             79 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (3) _ConfigureRadioTx                                     6     2      4   15406
                                             19 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetOutputPower                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetIQInverted                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetCRC                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadio                                       5     1      4   15110
                                             14 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetModulation                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFSKSyncWord                                 3     1      2   14167
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetChannelFrequency                            4     0      4     321
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetBandwidth                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Transmit                                      17    14      3  127645
                                             81 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteConfiguration                            11     9      2   91107
                                             70 BANK0     11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _RADIO_WritePower                                     3     3      0   10321
                                              3 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15859
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKBitRate                                8     4      4   15856
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                             11    11      0  108927
                                            112 BANK0     11    11      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _Random                                               2     0      2    6391
                                             77 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 2     0      2    5712
                                             70 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     440
                                             72 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   84335
                                            103 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _AESCmac                                            116   109      7   69611
                                             89 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _GenerateSubkey                                      40    34      6   27112
                                             49 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (5) _FillSubKey                                           8     3      5    1539
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _AESEncodeLoRa                                       20    16      4   20630
                                             29 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _AESEncode                                           24    20      4    4744
                                              6 BANK0     23    19      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (6) _EncodeShiftRow                                       3     1      2     984
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EncKeySchedule                                       6     4      2    1164
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  175936
                                             82 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             18 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   26483
                                             12 BANK0      6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0  100626
                                             81 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   46080
                                             25 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteMode                                      7     5      2   15853
                                              5 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterRead                                   2     2      0      99
                                              1 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (4) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFrequency                                12     8      4   16609
                                             13 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     440
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterWrite                                  2     1      1    9765
                                              1 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALSPISend                                           1     1      0      31
                                              0 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI2_Exchange8bit                                    2     0      2       0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     702
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _SystemBlockingWaitMs                                 5     1      4     658
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          11     9      2   15427
                                             70 BANK0     11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    5712
                                             58 BANK0     12     4      8
                   _SwTimerReadValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    5857
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _SwTimerStop                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SwTimerStart                                         9     9      0    1591
                                             49 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (4) _TMR_OverrideRemaining                               10     6      4     972
                                             10 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (5) _TMR_SwapTimer                                        2     0      2     707
                                              8 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     401
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _SwTimersInterrupt                                   17    13      4     458
                                             32 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (5) _TMR_GetDeltaTime                                    24    20      4     102
                                              8 BANK0     24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_ReadTimer                                       8     6      2     102
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetTimeout                                    9     5      4    1934
                                             13 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   17635
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   17635
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    3569
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6   13936
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     713
                                             51 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     713
                      _TMR1_CallBack
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     573
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        2     2      0     573
                                             49 COMRAM     2     2      0
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     257
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     316
                                             32 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 24    20      4      69
                                              8 COMRAM    24    20      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _rand
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               ___awdiv
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxData *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_Send
     _AssemblePacket
       _AESCmac
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _GenerateSubkey
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _FillSubKey
           _memset
         _memcpy
         _memset
       _AssembleEncryptionBlock
         _memcpy
         _memset
       _CountfOptsLength
       _EncryptFRMPayload
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _AssembleEncryptionBlock
           _memcpy
           _memset
         ___awdiv
       _FindSmallestDataRate
       _IncludeMacCommandsResponse
         _RADIO_GetPacketSnr
       _memcpy
       _memset
     _LORAWAN_GetMaxPayloadSize
       _CountfOptsLength
     _RADIO_ReceiveStop
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
         _INT0_SetInterruptHandler
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI1_Initialize
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      B0      11       68.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      F3       7       94.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9C      9C       5       97.5%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3B      4B       1       90.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     45F      12        0.0%
DATA                 0      0     67F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Aug 13 10:41:43 2020

                                        ??_LORAWAN_TxDone 00005D  
                              __end_of_DIO3_ISR_Lora_Init 000002  
                                      ?_LORAWAN_RxTimeout 000000  
                        __size_of_RADIO_FHSSChangeChannel 000000  
                                          HALSPISend@data 000000  
                         __end_of_ValidateChannelMaskCntl 000020  
                                                      l41 00006A  
                                                      l50 000188  
                                                      l43 000118  
                                                      l52 0001AA  
                                                      l44 0000DE  
                                                      l61 00032E  
                                                      l53 0001BE  
                                                      l45 000096  
                                                      l70 000092  
                                                      l54 0001CE  
                                                      l80 000010  
                                                      l72 0000E6  
                                                      l56 0002E6  
                                                      l48 000156  
                                                      l57 00023A  
                                                      l74 00010E  
                                                      l58 000248  
                                                      l68 00006A  
                                                      l79 000058  
                                            ___awdiv@sign 000005  
                         __size_of_UpdateJoinSuccessState 000000  
                                     ___wmul@multiplicand 000002  
                      __size_of_IOCB4_SetInterruptHandler 000000  
                                            _TMR_ISR_lora 000000  
                                   __end_of_AESEncodeLoRa 000036  
                                             ?_RADIO_DIO0 000000  
                                             ?_RADIO_DIO1 000000  
                                             ?_RADIO_DIO2 000000  
                                             ?_RADIO_DIO3 000000  
                                             ?_RADIO_DIO4 000000  
                                             ?_RADIO_DIO5 000000  
                              ?_IOCB4_SetInterruptHandler 000000  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 000062  
                                                     l220 0000F4  
                                                     l221 000186  
                                                     l230 00000C  
                                                     l310 000052  
                                                     l320 0001B4  
                                                     l313 0000B8  
                                                     l402 0000B8  
                                                     l322 0001BE  
                                                     l403 0000AA  
                                                     l307 000018  
                                                     l244 000088  
                                                     l148 000010  
                                                     l404 0000AE  
                                                     l324 0001E0  
                                                     l316 000188  
                                                     l238 000020  
                                                     l406 0000E6  
                                                     l334 000118  
                                                     l326 0001EA  
                                                     l318 000192  
                                                     l430 00006C  
                                                     l510 000106  
                                                     l239 000002  
                                                     l327 000312  
                                                     l431 00001C  
                                                     l511 0000EC  
                                                     l503 000012  
                                                     l248 00008A  
                                                     l264 000060  
                                                     l336 000122  
                                                     l440 0000C4  
                                                     l432 00002A  
                                                     l600 000018  
                                                     l441 0000CC  
                                                     l433 00005C  
                                                     l505 00002A  
                                                     l290 000082  
                                                     l506 000044  
                                                     l530 0000A6  
                                                     l282 0000D6  
                                                     l507 0000B0  
                                                     l531 0000C8  
                                                     l611 000040  
                                                     l292 0000E6  
                                                     l436 00007C  
                                                     l460 000186  
                                                     l508 0000C8  
                                                     l524 000012  
                                                     l612 00002C  
                                                     l445 000104  
                                                     l437 00008A  
                                                     l461 000154  
                                                     l517 00022C  
                                                     l509 0000DA  
                                                     l533 0000E2  
                                                     l621 000074  
                                                     l446 00011A  
                                                     l462 0000B8  
                                                     l534 000154  
                                                     l526 00002A  
                                                     l550 00008E  
                                                     l614 000032  
                                                     l606 000032  
                                                     l630 000022  
                                                     l278 0000DA  
                                                     l287 0000E8  
                                                     l391 00001C  
                                                     l439 000098  
                                                     l463 00016C  
                                                     l519 0001B6  
                                                     l535 000224  
                                                     l527 000040  
                                                     l551 00006A  
                                                     l615 000038  
                                                     l279 00000A  
                                                     l288 000026  
                                                     l448 00014E  
                                                     l480 000366  
                                                     l464 0000E0  
                                                     l528 00004C  
                                                     l624 00007C  
                                                     l632 000028  
                                                     l473 0001EA  
                                                     l465 000108  
                                                     l537 0001AE  
                                                     l529 00007A  
                                                     l561 00009C  
                                                     l553 0000C4  
                                                     l617 000084  
                                                     l633 00002E  
                                                     l482 0003B2  
                                                     l466 000140  
                                                     l562 000096  
                                                     l618 000052  
                                                     l395 000036  
                                                     l491 0004DA  
                                                     l459 00040E  
                                                     l483 0003BE  
                                                     l475 000266  
                                                     l467 000198  
                                                     l547 0000C0  
                                                     l619 000064  
                                                     l635 000048  
                                                     l643 00003E  
                                                     l492 0004E6  
                                                     l484 0003E8  
                                                     l468 0001E6  
                                                     l564 00009E  
                                                     l644 000030  
                                                     l397 00007E  
                                                     l485 000400  
                                                     l565 0000B4  
                                                     l629 000036  
                                             ?_RADIO_Init 000019  
                                                     l398 000060  
                                                     l478 000286  
                                                     l558 00005E  
                                                     l399 00006C  
                                                     l487 000484  
                                                     l559 00003A  
                                                     l575 00008A  
                                                     l488 0004B6  
                                                     l808 000010  
                                                     l584 00008A  
                                                     l648 000036  
                                                     l489 000496  
                                                     l683 000036  
                                                     l677 000042  
                                                     l686 000030  
                                                     l689 000042  
                                                     l973 000018  
                                                     l974 00001C  
                                         ??_UpdateTxPower 000000  
                                                     l979 000110  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 00006C  
                   __size_of_SelectChannelForTransmission 000000  
                            _SelectChannelForTransmission 000000  
                                  _ExecuteRxParamSetupReq 000000  
                                      _RADIO_Transmit$776 000058  
                                      _RADIO_Transmit$778 00005C  
                              ??_INT0_SetInterruptHandler 000000  
                                      _DIO2_ISR_Lora_Init 000000  
                                      __size_of_AESEncode 000000  
                                         _timer1ReloadVal 000002  
                                         ?_EncKeySchedule 000000  
                                   _RADIO_SetLoRaSyncWord 000000  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 0003AA  
                                 __end_of_SwTimersExecute 0000EA  
                                  SystemBlockingWaitMs@ms 000000  
                                 LORAWAN_Join@bufferIndex 00007B  
                                __size_of_RADIO_GetStatus 000000  
                                   ?_SystemBlockingWaitMs 000000  
                                    ??i2_TMR_GetDeltaTime 00000C  
                                ??_SearchAvailableChannel 000052  
                            __end_of_FindSmallestDataRate 0000DE  
                     __end_of_RADIO_SetFrequencyHopPeriod 00000A  
                             _RADIO_SetFrequencyHopPeriod 000000  
                                              _CheckFlags 000000  
                                  ?_TMR_OverrideRemaining 00000A  
                                           _INT1_CallBack 000000  
                                ?_AssembleEncryptionBlock 00000B  
                                     ?_DIO2_ISR_Lora_Init 000000  
                                       ??_UpdateFrequency 000004  
                                      __size_of_IOCB4_ISR 000000  
                                                    l1003 000022  
                                                    l1005 000052  
                                                    l1110 0000B0  
                                                    l1111 000102  
                                                    l1032 00074A  
                                                    l1104 00003E  
                                                    l1112 000140  
                                                    l2000 0001E2  
                                                    l1041 0004B6  
                                                    l1033 0001AE  
                                                    l1105 00004A  
                                                    l2001 0001F8  
                                                    l1210 00004A  
                                                    l1050 0006BE  
                                                    l1114 00021A  
                                                    l1130 0001F0  
                                                    l2002 00020E  
                                                    l1035 0002CC  
                                                    l2003 000224  
                                                    l1036 0004A8  
                                                    l1116 0002BE  
                                                    l1124 0000FC  
                                                    l1140 00014E  
                                                    l2004 00023A  
                                                    l1205 00004A  
                                                    l1045 0005BC  
                                                    l2021 00016A  
                                                    l1109 000234  
                                                    l1133 000254  
                                                    l1141 00020A  
                                                    l2005 0002C4  
                                                    l1061 000330  
                                                    l1150 0000E6  
                                                    l1046 0005DC  
                                                    l1038 000412  
                                                    l2030 00019C  
                                                    l2022 000122  
                                                    l1134 000262  
                                                    l1070 0000FE  
                                                    l1062 00003C  
                                                    l1310 0002FC  
                                                    l1055 00077E  
                                                    l1047 00065A  
                                                    l1215 000128  
                                                    l1127 00013A  
                                                    l1071 0000C6  
                                                    l1063 00002A  
                                                    l3000 00004C  
                                                    l1152 0000E8  
                                                    l1048 000732  
                                                    l2024 000166  
                                                    l1216 00004E  
                                                    l1240 000034  
                                                    l1128 000266  
                                                    l2104 000032  
                                                    l3001 000012  
                                                    l2041 000056  
                                                    l2033 0001AE  
                                                    l1225 000060  
                                                    l1217 0000BC  
                                                    l1129 0001FE  
                                                    l1081 00027E  
                                                    l1146 000020  
                                                    l2130 00006A  
                                                    l2034 00021A  
                                                    l2018 00007C  
                                                    l1226 000140  
                                                    l1218 000124  
                                                    l1138 0000CE  
                                                    l1082 000186  
                                                    l2043 0000AC  
                                                    l1147 0000EC  
                                                    l2131 00007E  
                                                    l2035 0002A4  
                                                    l2019 000086  
                                                    l1227 000066  
                                                    l1251 000042  
                                                    l1139 00010E  
                                                    l1075 0002F8  
                                                    l1083 00027A  
                                                    l1067 000046  
                                                    l1172 000096  
                                                    l1156 000108  
                                                    l1148 000026  
                                                    l2124 00003A  
                                                    l2060 000218  
                                                    l2028 00016C  
                                                    l1228 0000D4  
                                                    l1092 000014  
                                                    l1236 000014  
                                                    l1164 00001E  
                                                    l1180 000010  
                                                    l1076 00017E  
                                                    l2117 000016  
                                                    l2053 00040A  
                                                    l2061 00025E  
                                                    l2037 00030C  
                                                    l2029 00017A  
                                                    l1229 00013C  
                                                    l1245 000062  
                                                    l1077 000146  
                                                    l3006 00001C  
                                                    l1158 000122  
                                                    l2118 00002C  
                                                    l2134 0000BA  
                                                    l2062 0002A4  
                                                    l2054 0000AE  
                                                    l1166 0001D4  
                                                    l3007 00000A  
                                                    l1159 000126  
                                                    l2119 000042  
                                                    l2135 00000C  
                                                    l2143 000084  
                                                    l2071 0003DA  
                                                    l2063 0002A8  
                                                    l2055 00011C  
                                                    l1263 00001C  
                                                    l1192 000066  
                                                    l2128 000054  
                                                    l2160 0001C6  
                                                    l2080 00001A  
                                                    l2048 000448  
                                                    l2072 0003E4  
                                                    l2064 000304  
                                                    l2056 000162  
                                                    l1096 000026  
                                                    l1168 0001E2  
                                                    l2161 00015A  
                                                    l2081 00009A  
                                                    l2049 000018  
                                                    l1257 000020  
                                                    l1185 000108  
                                                    l1506 00006C  
                                                    l2138 0000B8  
                                                    l2154 000106  
                                                    l2082 000020  
                                                    l2058 000446  
                                                    l1186 000010  
                                                    l2155 00002C  
                                                    l2083 000098  
                                                    l2059 0001AA  
                                                    l1291 000062  
                                                    l1187 000104  
                                                    l2156 000072  
                                                    l2068 000324  
                                                    l1292 000034  
                                                    l1276 00005A  
                                                    l2085 0000BC  
                                                    l2069 000392  
                                                    l1293 000044  
                                                    l1285 000028  
                                                    l1277 00001A  
                                                    l2093 000068  
                                                    l1534 0000C4  
                                                    l1526 000020  
                                                    l1294 000050  
                                                    l1286 00001E  
                                                    l1287 000010  
                                                    l1279 000044  
                                                    l1528 000048  
                                                    l2600 00002E  
                                                    l1800 00002A  
                                                    l2089 0000D8  
                                                    l1529 000058  
                                                    l1802 0000AE  
                                                    l2603 000054  
                                                    l2604 00005C  
                                                    l1805 0000C4  
                                                    l1910 000088  
                                                    l1814 0000D4  
                   RADIO_WriteConfiguration@symbolTimeout 000046  
                                                    l2448 000014  
                                                    l1912 00011A  
                                                    l1905 000C3E  
                                                    l1922 000628  
                                                    l1930 000454  
                                                    l1906 0001D6  
                                                    l1931 000498  
                                                    l1923 000258  
                                                    l1851 000118  
                                                    l2740 000016  
                                                    l1924 000368  
                                                    l1908 000036  
                                                    l1781 000092  
                                                    l2741 000026  
                                                    l1941 00066E  
                                                    l1933 0004F0  
                                                    l1925 000424  
                                                    l1917 00012C  
                                                    l1909 000084  
                                                    l1829 000162  
                                                    l1782 000084  
                                                    l1926 00040C  
                                                    l1783 000050  
                                                    l2743 000044  
                                                    l1919 000C38  
                                                    l1951 0008A0  
                                                    l1943 00078A  
                                                    l1935 00050C  
                                                    l2584 000012  
                                                    l1784 000080  
                                                    l2744 00003C  
                                                    l1960 000A2C  
                                                    l1952 0008BC  
                                                    l2585 000026  
                                                    l1881 0000EC  
                                                    l1945 000860  
                                                    l1937 00051E  
                                                    l2569 000054  
                                                    l1882 000012  
                                                    l1970 000B86  
                                                    l1962 000ABC  
                                                    l1954 0008E8  
                                                    l1946 000848  
                                                    l1938 0005CC  
                                                    l2923 000030  
                                                    l1883 000080  
                                                    l2747 000064  
                                                    l2924 000024  
                                                    l1884 0000E8  
                                                    l2748 00006E  
                                                    l1964 000B92  
                                                    l1956 0008FA  
                                                    l2596 000014  
                                                    l1789 0000E6  
                                                    l2933 000020  
                                                    l2749 00007C  
                                                    l1965 000B8C  
                                                    l1957 000950  
                                                    l2597 00001E  
                                                    l2934 000014  
                                                    l1958 00095E  
                                                    l2927 000064  
                                                    l1959 000AC2  
                                                    l2599 000034  
                                                    l2928 000072  
                                                    l1984 000C7C  
                                                    l2937 000048  
                                                    l2938 000056  
                                                    l1994 000010  
                                                    l1978 000C1C  
                                                    l1995 000268  
                                                    l1979 000C20  
                                                    l1988 000034  
                                                    l1996 0001A0  
                                                    l1989 00005A  
                                                    l1997 0002A4  
                                                    l2990 000030  
                                                    l1998 0001B6  
                                                    l2991 00003A  
                                                    l1999 0001CC  
                                                    l2986 000018  
                                                    l2987 000010  
                                                    STR_1 0001A1  
                                        _RADIO_WritePower 000000  
                            ??_LORAWAN_SetChannelIdStatus 000005  
                                 _PrepareJoinRequestFrame 000000  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                            ?_RADIO_Reset 000000  
                              __size_of_RADIO_ReceiveStop 000000  
                                                    _TMR1 000FCE  
                                       ??_UpdateDutyCycle 000002  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 000002  
                                           _INT2_CallBack 000000  
                                ??_InitDefault433Channels 00000B  
                                ExecuteNewChannel@drRange 00004A  
                                      _PrepareSessionKeys 000000  
                                                    _loRa 000000  
                                                    _main 000000  
                                                    _rand 000000  
                          __end_of_UpdateMinMaxChDataRate 0000FA  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr2h 000FDA  
                                                    fsr0l 000FE9  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 000000  
                                                    btemp 000000  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 000000  
                                           ComputeMic@mic 00006C  
                                           ComputeMic@key 000067  
                               __end_of_LORAWAN_RxTimeout 000364  
                               __size_of_ConfigureRadioRx 000000  
                               __size_of_ConfigureRadioTx 000000  
                       __size_of_INT2_SetInterruptHandler 000000  
                           __end_of_StopAllSoftwareTimers 000052  
                               ?_INT2_SetInterruptHandler 000000  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 000000* 
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 0000CA  
                                   ExecuteLinkAdr@txPower 000015  
                                     __size_of_HALSPISend 000000  
                              ??_TMR1_SetInterruptHandler 000002  
                              EnableChannels1@channelMask 000004  
                                        ??_AssemblePacket 00006C  
                                  ?_HALResetPinMakeOutput 000000  
                                     ?_PrepareSessionKeys 00000B  
                                  __size_of_TMR_SwapTimer 000000  
                              __end_of_RADIO_GetPacketSnr 000006  
                                            ___param_bank 000000  
                                              _GetRx1Freq 000000  
                              __size_of_RADIO_ReleaseData 000000  
                                    ??_DIO2_ISR_Lora_Init 000002  
                         __end_of_CreateAllSoftwareTimers 000052  
                  SearchAvailableChannel@transmissionType 00004F  
                         __size_of_HALResetPinOutputValue 000000  
                                   MacExecuteCommands@ptr 000056  
                                   _RADIO_WriteFSKBitRate 000000  
                                __size_of_SystemTimerInit 000000  
                                        __end_of_INT1_ISR 000008  
                                        __end_of_INT2_ISR 000008  
                          __size_of_OSCILLATOR_Initialize 000000  
                                  ExecuteLinkAdr@dataRate 000018  
                           __end_of_OSCILLATOR_Initialize 00000E  
                      __size_of_LORAWAN_LinkCheckCallback 000000  
                                         __end_of___abdiv 000066  
                                                   l14040 00006A  
                                                   l13228 00008A  
                                                   l13246 000106  
                                                   l16000 000068  
                                                   l12706 000012  
                                                   l14082 0000C6  
                                                   l13530 0000A8  
                                                   l12724 000026  
                                                   l15150 0004F0  
                                                   l16006 0000C6  
                                                   l12832 00030A  
                                                   l15128 000454  
                                                   l16040 0000A8  
                                                   l13618 00014E  
                                                   l12916 00000A  
                                                   l12764 000010  
                                                   l16036 0000A2  
                                                   l13654 000240  
                                                   l13638 0001C6  
                                                   l14550 000164  
                                                   l15262 0008A0  
                                                   l16046 0000D2  
                                                   l12792 0000B0  
                                                   l12776 00004A  
                                                   l14536 00011E  
                                                   l16056 000114  
                                                   l13674 000326  
                                                   l15530 0004AE  
                                                   l14538 000122  
                                                   l14706 000016  
                                                   l16066 00003C  
                                                   l15284 0008E8  
                                                   l16350 0000A4  
                                                   l16336 00004E  
                                                   l13880 000012  
                                                   l14840 000112  
                                                   l16194 00003A  
                                                   l14690 0000BC  
                                                   l14834 000076  
                                                   l15388 000C16  
                                                   l14694 0000CC  
                                                   l14686 0000AE  
                                                   l15920 000038  
                                                   l14786 000048  
                                                   l14970 000250  
                                                   l15930 00010E  
                                                   l15870 000042  
                                                   l15854 000042  
                                                   l15950 000258  
                                                   l15928 0000F4  
                                                   l15938 0001AA  
                                                   l15966 00002C  
                                                   l15990 000034  
                                                   l15984 000016  
                                                   ?_main 000000  
                                                   ?_rand 000046  
                                         __end_of___awdiv 000086  
                                              _FillSubKey 000000  
                       __end_of_IOCB4_SetInterruptHandler 00000A  
                                           ?_RADIO_SetCRC 000000  
                                         __end_of___lldiv 000084  
                                         RADIO_Transmit@i 000061  
                                         ___awdiv@divisor 000002  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 000068  
                                                   u14110 000008  
                                                   u15010 0001E0  
                                       ??_EnableChannels1 000009  
                                                   u14310 000034  
                                                   u14400 000010  
                                                   u14240 0002F8  
                                                   u14160 000044  
                                                   u15040 000238  
                                                   u16000 0000FA  
                                                   _LATC2 007C5A  
                                                   u14090 000034  
                                    RxJoinResponse@status 000000  
                                                   _LATD3 007C63  
                                                   u14340 000024  
                                                   u14260 00033E  
                                                   u14180 000096  
                                                   u16020 00010E  
                                                   u15220 00001C  
                                                   u21428 0000C2  
                                                   u21429 0000D4  
                       __end_of_AckRetransmissionCallback 00011E  
                  SearchAvailableChannel@randomNumberCopy 000056  
                                                   u14097 00002A  
                                                   u15065 0002A0  
                                                   u14370 000054  
                                                   u15330 000048  
                                                   u16210 0001A8  
                                                   u16130 0000D0  
                                                   u14380 000056  
                                                   u14710 000052  
                                                   u15520 000374  
                                                   u16240 00007A  
                                                   u17120 0001E8  
                                                   u16217 00019E  
                                                   u15450 0001C2  
                                                   u14730 000078  
                                                   u15610 000174  
                                                   u16250 0000C6  
                                                   u16170 0000E4  
                                                   u16090 0000A6  
                                                   u14580 0000DA  
                                                   u15380 00007C  
                                                   u16180 000104  
                                                   u15365 00004C  
                                                   u15470 000214  
                                                   u15390 00007E  
                                                   u17215 00012C  
                                                   u21687 00007C  
                                                   u14840 00001C  
                                                   u16360 0002EC  
                                                   u16280 0000AC  
                                                   u15720 00003C  
                                                   u18120 000992  
                                                   u17048 00009A  
                                                   u21697 00000A  
                                                   u16505 0001C8  
                                                   u15625 00019C  
                                                   u16177 0000DA  
                                                   u15490 0002AE  
                                                   u14690 00002A  
                                                   u15635 0001C0  
                                                   u17500 00001C  
                                                   u18220 000B50  
                                                   u19020 000042  
                                                   u19100 000048  
                                                   u14861 000010  
                                                   u16390 000454  
                                                   u15910 000056  
                                                   u15830 00001A  
                                                   u16710 0000CC  
                                                   u17078 00001C  
                                                   u18038 000818  
                                                   u19110 000060  
                                          __CFG_DEBUG$OFF 000000  
                                                   u18039 00082C  
                                                   u14960 000180  
                                                   u16480 00017C  
                                                   u17440 000036  
                                                   u15840 000022  
                                                   u19120 0000C8  
                                                   u14890 0000BE  
                                                   u16538 00006A  
                                                   u15690 00005E  
                                                   u17418 000120  
                                                   u17370 00002E  
                                                   u15595 000102  
                                                   u17355 00001E  
                                                   u19115 000054  
                                                   u17419 000134  
                                                   u16564 00002E  
                                                   u17620 0002EC  
                                                   u14965 000176  
                                                   u16565 000028  
                                                   u19125 0000BC  
                                                   u14990 0001D0  
                                                   u19150 000048  
                                                   u17710 000114  
                                                   u16495 0001A4  
                                                   u19320 0000AC  
                                                   u19160 000060  
                                                   u17385 000066  
                                                   u19170 0000C8  
                                                   u17538 000050  
                                                   u18290 000BE2  
                                                   u18258 000BBE  
                                                   u17539 000064  
                                                   u18259 000BD2  
                                                   u17395 000088  
                                                   u16940 000190  
                                                   u18348 000C68  
                                                   u18188 000B2A  
                                                   u17740 0001F2  
                                                   u19420 000202  
                                                   u19165 000054  
                                                   u18189 000B3E  
                                                   u18445 000072  
                                                   u18710 0003CA  
                                                   u18358 000C92  
                                                   u18518 00016A  
                                                   u19510 000042  
                                                   u19335 0000D4  
                                                   u19175 0000BC  
                                                   u18720 0003E8  
                                                   u17680 0000F8  
                                                   u18608 00031C  
                                                   u19345 0000F8  
                                                   u17761 000230  
                                                   u18810 00065E  
                                                   u18730 000448  
                                                   u17930 00055E  
                                                   u19435 000248  
                                                   u17908 0004CC  
                                                   u18628 000350  
                                                   u18468 0000EA  
                                                   u18725 0003DE  
                                                   u17909 0004E0  
                                                   u19445 000272  
                                                   u18830 000686  
                                                   u17838 0003E8  
                                                   u17790 000358  
                                                   u19550 00007E  
                                                   u18735 00043C  
                                                   u18655 000072  
                                                   u17839 0003FC  
                                                   u17960 000652  
                                                   u18665 0000F6  
                                                   u18585 00029A  
                                                   u19650 00009C  
                                                   u18675 0001E8  
                                                   u18908 00079E  
                                                   u17980 00076E  
                                                   u18940 000042  
                                                   u18845 0006AC  
                                                   u18685 00026C  
                                                   u19565 0000B6  
                                                   u17958 000604  
                                                   u17878 000474  
                                                   u19718 000100  
                                                   u18855 0006D0  
                                                   u17959 000618  
                                                   u17879 000488  
                                                   u19815 00000E  
                                                   u19575 0000D8  
                                                   u19920 000074  
                                                   u19758 000060  
                                                   u19678 0000CC  
                                                   u19759 000074  
                                                   u19960 00009A  
                                                   u18888 00076A  
                                         __end_of___lwmod 000044  
                                                   i2l220 0000DE  
                                                   u19980 0000F0  
                                                   i2l221 00015A  
                                                   u19885 00000E  
                                                   i2l230 00000C  
                                                   i2l290 00007E  
                                                   i2l292 0000E2  
                                                   i2l287 0000E4  
                                                   i2l288 000022  
                                           ?_RADIO_RxDone 000000  
                                         ___awdiv@counter 000004  
                             __size_of_RADIO_ReceiveStart 000000  
                     __size_of_LORAWAN_SetChannelIdStatus 000000  
                                           ?_RADIO_TxDone 000000  
                                                   _TMR1H 000FCF  
                                                   _TMR1L 000FCE  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 000000  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 000000  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 00003E  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 000000  
                                 ?_SetReceptionNotOkState 000000  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 000011  
                                        __end_of_TMR1_ISR 000014  
                               FindSmallestDataRate@found 000001  
                                           __CFG_WRTB$OFF 000000  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 000000  
                                  LORAWAN_RxTimeout@minim 000066  
                             __size_of_RADIO_SetBandwidth 000000  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 000000  
                                                   __rcon 00000A  
                                 __end_of_PIN_MANAGER_IOC 00000A  
                            ??_IncludeMacCommandsResponse 000005  
                           __end_of_RADIO_WatchdogTimeout 000046  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 00000D  
                          ??_INT1_DefaultInterruptHandler 000000  
                               __size_of_ValidateDataRate 000000  
                                                   _randx 000010  
                          LORAWAN_RxDone@frmPayloadLength 000090  
                           ValidateChannelMaskCntl@result 000000  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 000000  
                                        UpdateDataRange@i 000003  
                                LORAWAN_RxDone@joinAccept 00008E  
                                  _UpdateJoinSuccessState 000000  
                                          ?_INT2_CallBack 000000  
                                _INT1_SetInterruptHandler 000000  
                                              _ComputeMic 000000  
                                 __end_of_TMR1_Initialize 00002C  
                                  UpdateCfList@joinAccept 000046  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                                   ltemp0 000000  
                                 RADIO_WriteFrequency@num 000015  
                                                   ltemp1 000004  
                                                   ltemp2 000008  
                          __size_of_UpdateCurrentDataRate 000000  
                          __size_of_UpdateChannelIdStatus 000000  
                              PrepareSessionKeys@appNonce 00000D  
                                  UpdateChannelIdStatus@i 000003  
                           __end_of_UpdateCurrentDataRate 00000A  
                            __size_of_RADIO_FSKPacketSent 000000  
                           __end_of_UpdateChannelIdStatus 000166  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                                   ttemp0 000000  
                                                   ttemp1 000003  
                                                   ttemp2 000006  
                                                   ttemp3 000009  
                                UpdateFrequency@channelId 000004  
                                                   status 000FD8  
                                                   wtemp0 000000  
                                                   wtemp1 000002  
                                                   wtemp2 000004  
                                                   wtemp3 000006  
                                                   wtemp4 000008  
                                                   wtemp5 00000A  
                                                   wtemp6 000001  
                                      _MacExecuteCommands 000000  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 00004D  
                                     __size_of_RADIO_DIO0 000000  
                                     __size_of_RADIO_DIO1 000000  
                                     __size_of_RADIO_DIO2 000000  
                                     __size_of_RADIO_DIO3 000000  
                                     __size_of_RADIO_DIO4 000000  
                                     __size_of_RADIO_DIO5 000000  
                      PrepareJoinRequestFrame@bufferIndex 00007A  
                                         _TMR1_WriteTimer 000000  
                       TMR_OverrideRemaining@oldReloadVal 000012  
                                     LORAWAN_RxDone@fPort 00007F  
                                __size_of_RADIO_WriteMode 000000  
                                       __end_of_AESEncode 00034A  
                                __size_of_SPI1_Initialize 000000  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 000000  
                        __end_of_RADIO_WriteConfiguration 000500  
                         ??_IOCB4_DefaultInterruptHandler 000000  
                            __size_of_RADIO_SetIQInverted 000000  
                               __size_ofi2_TMR1_ReadTimer 000000  
                               RADIO_WriteMode@dioMapping 000008  
                                         __initialization 000000  
                            __size_ofi2_SwTimersInterrupt 000000  
                                        LORAWAN_Send@port 000073  
                             __size_of_DIO1_ISR_Lora_Init 000000  
                                     ?_MacExecuteCommands 000050  
                                       _SPI2_Exchange8bit 000000* 
                                            __end_of_main 00008A  
                              AssembleEncryptionBlock@dir 000012  
                                            __end_of_rand 00005C  
                                       ?_TMR_GetDeltaTime 000008  
                                           AESCmac@padded 000030  
                                __end_of_RADIO_ReadRandom 0000A4  
                                        _SetJoinFailState 000000  
                                 RADIO_WriteMode@blocking 000006  
                                    _UpdateJoinInProgress 000000  
                                    _ExecuteRxTimingSetup 000000  
                                       __end_of_IOCB4_ISR 000020  
                               __size_of_UpdateDLSettings 000000  
                                      ?_SPI2_Exchange8bit 000000  
                               __size_of_ValidateRxOffset 000000  
                             ?_INTERRUPT_InterruptManager 000000  
                                      ??_TMR_GetDeltaTime 00000C  
                                           AESCmac@output 00005B  
                              i2TMR1_ReadTimer@readValLow 000007  
                            __end_of_RADIO_SetOutputPower 00000A  
                                               ??_AESCmac 000060  
                                          ??_RADIO_SetCRC 000000  
                                  MacExecuteCommands@done 000055  
                                 InitDefault868Channels@i 00000B  
                                                  ??_main 00009A  
                                                  ??_rand 000048  
                                          ??_RADIO_RxDone 000093  
                                          ??_RADIO_TxDone 000083  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 000000  
                                  __end_of_RxJoinResponse 000002  
                       __end_of_LORAWAN_LinkCheckCallback 00016C  
                          __end_of_SetReceptionNotOkState 00007E  
                             __end_of_UpdateReceiveDelays 000042  
                         __end_of_AssembleEncryptionBlock 0000F4  
                                __size_of_SPI2_Initialize 000000  
                                  ??_SystemBlockingWaitMs 000004  
                                        ??_StartReTxTimer 00003A  
                                     ??_SPI2_Exchange8bit 000000  
                        CountfOptsLength@macCommandLength 000006  
                                      EncodeShiftRow@temp 000002  
                                ??_InitDefault868Channels 00000B  
                             __size_of_RADIO_RegisterRead 000000  
                                       ?_HALSPICSDeassert 000000  
                                        ?_SwTimersExecute 000000  
                                           _TMR_SwapTimer 000000  
                                          _EnableChannels 000000  
                               ??_PrepareJoinRequestFrame 000070  
                                          _HALSPICSAssert 000000  
                                    ??_MacExecuteCommands 000053  
                                             ?_CheckFlags 000000  
                                 LORAWAN_TxDone@timeOnAir 00005B  
                                              _ExtractMic 000000  
                         __size_of_SearchAvailableChannel 000000  
                                      ??_HALSPICSDeassert 000000  
                                  _HALResetPinOutputValue 000000  
                                        ___llmod@dividend 000000  
                                        ___awdiv@dividend 000000  
                                                  ?_srand 000012  
                  __end_of_LORAWAN_ReceiveWindow1Callback 0000B8  
                 __size_of_LORAWAN_ReceiveWindow1Callback 000000  
                          _LORAWAN_ReceiveWindow1Callback 000000  
                                                  _ANSELA 000F38  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                         _ValidateTxPower 000000  
                                                  _T1GCON 000FCC  
                                 SwTimerReadValue@timerId 000039  
                                 TMR1_WriteTimer@timerVal 000000  
                                          _ExecuteLinkAdr 000000  
                                                  i2l2302 000030  
                                                  i2l2304 00003C  
                                                  i2l1338 000054  
                                                  i2l2306 000048  
                  __end_of_LORAWAN_ReceiveWindow2Callback 0000D8  
                 __size_of_LORAWAN_ReceiveWindow2Callback 000000  
                          _LORAWAN_ReceiveWindow2Callback 000000  
                                                  i2l2309 000054  
                                          __CFG_WDTEN$OFF 000000  
                                                  i2l2448 000012  
                           __size_of_RADIO_SetFSKSyncWord 000000  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 000000  
                        __size_of_ValidateChannelMaskCntl 000000  
                         __size_of_InitDefault433Channels 000000  
                                                  _TRISC2 007CA2  
                                           ?_LORAWAN_Init 000052  
                                           ?_LORAWAN_Join 000000  
                        AssembleEncryptionBlock@firstByte 000010  
                                           ?_LORAWAN_Send 000073  
                         __size_of_AutomaticReplyCallback 000000  
                              __size_of_LORAWAN_RxTimeout 000000  
                                       ?_ExecuteDevStatus 000000  
                              __end_of_DIO0_ISR_Lora_Init 000010  
                                __size_ofi2_TMR_SwapTimer 000000  
                                       ExecuteLinkAdr@ptr 00000F  
                           __size_of_RADIO_WriteFrequency 000000  
                                                  _STable 000001  
                             RADIO_WriteFrequency@num_mod 000011  
                                     LORAWAN_TxDone@delta 000072  
                             __size_of_ComputeSessionKeys 000000  
                                               AESCmac@k1 000010  
                                               AESCmac@k2 000000  
                                     LORAWAN_TxDone@found 000071  
                                         _CheckMcastFlags 000000  
                                     LORAWAN_TxDone@minim 00007E  
                                      ??_ExecuteDevStatus 000002  
                                                  _Random 000000  
                                          __CFG_XINST$OFF 000000  
                                                  _RxData 000000  
                                     LORAWAN_TxDone@ticks 00007A  
                      SearchAvailableChannel@randomNumber 000059  
                    __end_of_TMR1_DefaultInterruptHandler 000002  
                   __size_of_TMR1_DefaultInterruptHandler 000000  
                            _TMR1_DefaultInterruptHandler 000000  
                                             ?_GetRx1Freq 000000  
                           ValidateDataRange@dataRangeNew 000003  
                                 _RADIO_FHSSChangeChannel 000000  
                                               ??___abdiv 000001  
                                                  ___lmul 000000  
                                  ?_RADIO_WriteFSKBitRate 00000D  
                                   ?_UpdateJoinInProgress 000000  
                                                  ___wmul 000000  
                             ?_LORAWAN_LinkCheckConfigure 000046  
                                   ?_ExecuteRxTimingSetup 000007  
                                               ??___awdiv 000004  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 000000  
                                               ??___lldiv 000008  
                                               ??___llmod 000008  
                                               ??___lwmod 00004C  
                      RADIO_SetChannelFrequency@frequency 000000  
                                         StartReTxTimer@i 000042  
                               ExecuteRxParamSetupReq@ptr 000046  
                                  __size_of_LORAWAN_Reset 000000  
                                                  _memcpy 000000  
                                                  _memset 000000  
                                                  clear_0 000068  
                                                  clear_1 00007A  
                                                  clear_2 000086  
                                                  clear_3 000092  
                                                  clear_4 00009E  
                                                  clear_5 0000AA  
                                 SwTimerIsRunning@timerId 000000  
                                        ___awdiv@quotient 000006  
                             __size_of_DIO5_ISR_Lora_Init 000000  
                                             ?_FillSubKey 000000  
                                       ?_SwTimerIsRunning 000000  
                                       ?_ExecuteLinkCheck 000000  
                                         ?_RxJoinResponse 000000  
                                 __size_of_EncodeShiftRow 000000  
                                  __end_of_EnableChannels 00001C  
                              ??_RADIO_UnhandledInterrupt 000003  
                                            ??_HALSPISend 000000  
                    __end_of_INT2_DefaultInterruptHandler 000002  
                   __size_of_INT2_DefaultInterruptHandler 000000  
                            _INT2_DefaultInterruptHandler 000000  
                                            __pdataCOMRAM 000000  
                                             RxData@pData 000000  
                                  __end_of_HALSPICSAssert 000004  
                       __size_of_RADIO_SetSpreadingFactor 000000  
                            __size_of_ValidateChannelMask 000000  
                                           ??_SwTimerStop 000000  
                                         ??_INT1_CallBack 000000  
                                       ??_SystemTimerInit 000000  
                               ?_RADIO_SetSpreadingFactor 000000  
                                       ?_SwTimerReadValue 000031  
                                      ??_SwTimerIsRunning 000000  
                                          ?_TMR_SwapTimer 000008  
                         RADIO_FHSSChangeChannel@irqFlags 000019  
                                       ?_ExecuteDutyCycle 000000  
                                      ??_ExecuteLinkCheck 000002  
                                            __mediumconst 000000* 
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 000012  
                                         ??_INT2_CallBack 000000  
                                      ??_SwTimerReadValue 000035  
                                         _UpdateDataRange 000000  
                                  __end_of_ExecuteLinkAdr 0002C8  
                                      ??_ExecuteDutyCycle 000002  
                TMR1_SetInterruptHandler@InterruptHandler 000000  
               IOCB4_SetInterruptHandler@InterruptHandler 000000  
                INT2_SetInterruptHandler@InterruptHandler 000000  
                INT1_SetInterruptHandler@InterruptHandler 000000  
                      __end_of_LORAWAN_SetChannelIdStatus 00005A  
                              _LORAWAN_SetChannelIdStatus 000000  
                                        ?_PIN_MANAGER_IOC 000000  
                                           AESEncode@aux1 00001A  
                                           AESEncode@aux2 000019  
                                           AESEncode@aux3 00001B  
                                 __end_of_TMR1_WriteTimer 000020  
                                   __end_of_SwTimerCreate 000090  
                          ??_SelectChannelForTransmission 00005B  
                                             ?_ComputeMic 000067  
                           __size_of_INTERRUPT_Initialize 000000  
                                   __end_of_TMR1_CallBack 000020  
                               ExecuteDutyCycle@maxDCycle 000005  
                                       ??_RADIO_RxTimeout 00006B  
                                        ?_TMR1_Initialize 000000  
                             UpdateFrequency@frequencyNew 000000  
                                       _SYSTEM_Initialize 000000  
                        __size_of_CreateAllSoftwareTimers 000000  
                                 __size_of_GenerateSubkey 000000  
                                          ??_LORAWAN_Init 000056  
                                          ??_LORAWAN_Join 00007B  
                                          ??_LORAWAN_Send 000077  
                          __size_of_RADIO_FSKPayloadReady 000000  
                                              __accesstop 000000* 
                                 __end_of__initialization 0000B0  
                           __end_of_RADIO_FSKPayloadReady 0000BA  
                                          _RADIO_Transmit 000000  
                                               ?_INT1_ISR 000000  
                                               ?_INT2_ISR 000000  
                                    LORAWAN_RxDone@buffer 000066  
                                  RADIO_ReadRandom@retVal 00000F  
                                        _ConfigureRadioRx 000000  
                                    __size_of_RADIO_Reset 000000  
                                        _ConfigureRadioTx 000000  
                                     ExecuteDevStatus@ptr 000000  
                        ??_UpdateReceiveWindow2Parameters 000005  
                         ?_UpdateReceiveWindow2Parameters 000000  
                                      ?_SYSTEM_Initialize 000000  
                                    LORAWAN_RxDone@packet 000088  
                                          _maxPayloadSize 000111  
                           RADIO_SetLoRaSyncWord@syncWord 000000  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 000002  
                               ExecuteLinkAdr@channelMask 000013  
                              __end_of_spi2_configuration 000146  
                                      __end_of_HALSPISend 000016  
                                          __pcstackCOMRAM 000000  
                                              ___inthi_sp 000000* 
                                  _SearchAvailableChannel 000000  
                                 ValidateChannelId@result 000001  
                                   ?_FindSmallestDataRate 000000  
                                            __pidataBANK1 000000  
                                            __pidataBANK3 000000  
                                     ??_SYSTEM_Initialize 000002  
                              __end_of_DIO4_ISR_Lora_Init 000002  
                                               ?_TMR1_ISR 000000  
                                     __size_of_CheckFlags 000000  
                           ?_TMR1_DefaultInterruptHandler 000000  
                                _RADIO_WriteConfiguration 000000  
                                       ??_RADIO_WriteMode 000007  
                                         _spreadingFactor 00012F  
                                       ??_SPI1_Initialize 000000  
                               __size_of_LORAWAN_Mainloop 000000  
                                        ??_EncKeySchedule 000002  
                   __end_of_IOCB4_DefaultInterruptHandler 000002  
                  __size_of_IOCB4_DefaultInterruptHandler 000000  
                           _IOCB4_DefaultInterruptHandler 000000  
                                __end_of_RADIO_WritePower 0000F0  
                                 ?_ExecuteRxParamSetupReq 000046  
                                           __end_of_srand 000010  
                                       LORAWAN_RxDone@hdr 000091  
                                            ??_RADIO_DIO0 000096  
                                            ??_RADIO_DIO1 00006B  
                                            ??_RADIO_DIO2 00001A  
                                            ??_RADIO_DIO3 000004  
                                            ??_RADIO_DIO4 000004  
                                            ??_RADIO_DIO5 000004  
                                  _InitDefault433Channels 000000  
                                         _UpdateFrequency 000000  
                                  _AutomaticReplyCallback 000000  
                             ??_IOCB4_SetInterruptHandler 000002  
                                ??_INTERRUPT_GetDioStatus 000000  
                                            ??_RADIO_Init 00001F  
                               SwTimerSetCallback@timerId 000003  
                              LORAWAN_RxDone@channelIndex 000080  
                          AssembleEncryptionBlock@blockId 00000F  
                                      _spi1_configuration 000146  
                             __size_of_EXT_INT_Initialize 000000  
                                         _UpdateDutyCycle 000000  
                                         ?_EnableChannels 00000C  
                                 ??_TMR_OverrideRemaining 00000E  
                                 __end_of_ValidateTxPower 00002A  
                                         ?_HALSPICSAssert 000000  
                                      _DIO3_ISR_Lora_Init 000000  
                            __end_of_HALResetPinMakeInput 000004  
                                 __size_of_TMR1_ReadTimer 000000  
                        __end_of_INT2_SetInterruptHandler 00000A  
                                        RADIO_DIO0@opMode 000099  
                             RADIO_RegisterRead@readValue 000002  
                      __end_of_IncludeMacCommandsResponse 000462  
                              _IncludeMacCommandsResponse 000000  
                           ?_INT2_DefaultInterruptHandler 000000  
                         __size_of_InitDefault868Channels 000000  
                                UpdateCfList@bufferLength 000048  
                                        RADIO_DIO2@opMode 00001B  
                                   LORAWAN_Send@confirmed 000079  
                                             ?_ExtractMic 00000B  
                                         ?_ExecuteLinkAdr 00000F  
                                        _ValidateDataRate 000000  
                         LORAWAN_GetMaxPayloadSize@result 00000A  
                                     __size_of_GetRx1Freq 000000  
                               __end_of_SYSTEM_Initialize 000022  
                      __size_of_RADIO_SetChannelFrequency 000000  
                                                 ??_srand 000014  
                                  __end_of_RADIO_Transmit 000238  
                                       ??_SPI2_Initialize 000000  
                                     ?_DIO3_ISR_Lora_Init 000000  
                                           _LORAWAN_Reset 000000  
                              ?_RADIO_SetChannelFrequency 000000  
                                              __pbssBANK1 000000  
                                              __pbssBANK2 000000  
                                              __pbssBANK3 000000  
                                              __pbssBANK4 000000  
                                        RxData@dataLength 000002  
                                     __end_of_SwTimerStop 000028  
                              ?_SetCallbackSoftwareTimers 000000  
                                 __end_of_CheckMcastFlags 000082  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize 000119  
                                              ??_INT1_ISR 000000  
                                              ??_INT2_ISR 000000  
                                      SwTimersInterrupt@i 000030  
                                    _RADIO_SetOutputPower 000000  
                                    __end_of_RADIO_SetCRC 00000A  
                                  _RADIO_ReceiveStart$781 000057  
                                  __size_of_DIO0_ISR_Lora 000000  
                                 ??_HALResetPinMakeOutput 000000  
                                    __end_of_RADIO_RxDone 0000EA  
                              __end_of_RADIO_RxFSKTimeout 00003C  
                                    __end_of_RADIO_TxDone 000126  
                                     __size_of_FillSubKey 000000  
                                      __end_of_RADIO_DIO0 000090  
                                      __end_of_RADIO_DIO1 00004E  
                                      __end_of_RADIO_DIO2 000056  
                                      __end_of_RADIO_DIO3 000022  
                                      __end_of_RADIO_DIO4 000032  
                                      __end_of_RADIO_DIO5 000028  
                               ??_RADIO_FHSSChangeChannel 000019  
                             __size_of_SwTimerSetCallback 000000  
                               RADIO_SetOutputPower@power 000000  
                                      __end_of_RADIO_Init 0001CA  
                       __size_of_LORAWAN_SetDeviceAddress 000000  
                         ?_LORAWAN_EnterContinuousReceive 000000  
                        ??_LORAWAN_EnterContinuousReceive 00005B  
                                                 ?_Random 00004D  
                                       ?_CountfOptsLength 000000  
                                  __size_of_DIO1_ISR_Lora 000000  
                                                 ?_RxData 000000  
                               ?_LORAWAN_SetDeviceAddress 000000  
                                        i2_TMR1_ReadTimer 000000  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 000004  
                                         _EnableChannels1 000000  
                                __size_of_HALDIO5PinValue 000000  
                            __size_of_RADIO_RegisterWrite 000000  
                                  ??_UpdateJoinInProgress 000000  
                        __size_of_AssembleEncryptionBlock 000000  
                                  ??_ExecuteRxTimingSetup 000009  
                                        FillSubKey@source 000000  
            SelectChannelForTransmission@transmissionType 00005B  
                                                 ?___lmul 00003A  
                  AssembleEncryptionBlock@multicastStatus 000011  
                          __end_of_ExecuteRxParamSetupReq 000214  
                                      ??_CountfOptsLength 000000  
                                                 ?___wmul 000000  
                                  __size_of_DIO2_ISR_Lora 000000  
                                      EncryptFRMPayload@i 000047  
                                      EncryptFRMPayload@j 000048  
                                      EncryptFRMPayload@k 000046  
                                              ??_TMR1_ISR 000033  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 00000A  
                                    ??_DIO3_ISR_Lora_Init 000000  
                                        _UpdateDLSettings 000000  
                                        _ValidateRxOffset 000000  
                                                 ?_memcpy 000000  
                                                 ?_memset 000000  
                                          ___lmul@product 000042  
                                       _TMR_ISR_Lora_Init 000000  
                                  RADIO_RegisterWrite@reg 000002  
                                     __size_of_ComputeMic 000000  
                                  RADIO_Transmit@regValue 000060  
                            __size_of_RADIO_SetModulation 000000  
                                     _RADIO_FSKPacketSent 000000  
                                                 _AESCmac 000000  
                                  ComputeMic@bufferLength 00006B  
                                 __end_of_UpdateDataRange 00014E  
                                         ??_TMR_SwapTimer 00000A  
                                RADIO_WriteFSKBitRate@num 000011  
                                      ?_TMR_ISR_Lora_Init 000000  
                              ??_INT1_SetInterruptHandler 000002  
                                                 i2l11156 000020  
                                    EncryptFRMPayload@dir 000034  
                                      _RADIO_GetPacketSnr 000000  
                                    EncryptFRMPayload@key 000039  
                                   __end_of_UpdateTxPower 00000A  
                                     _RADIO_SetIQInverted 000000  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 000000  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 000000  
                                     i2_SwTimersInterrupt 000000  
                                                 _SSP1ADD 000FC8  
                                                 _SSP2ADD 000F6E  
                                                 _SSP1BUF 000FC9  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 000002  
                                       __end_of_bandwidth 00012F  
                  UpdateReceiveWindow2Parameters@dataRate 000004  
                                __end_of_SetJoinFailState 000030  
                                          ?_LORAWAN_Reset 000000  
                            RADIO_WriteMode@newModulation 000005  
                                  ValidateDataRate@result 000001  
                                        ?_TMR1_WriteTimer 000000  
                                     ?_RADIO_GetPacketSnr 000000  
                                         ___abdiv@divisor 000000  
                                         ?_RADIO_Transmit 000051  
                                 _ValidateChannelMaskCntl 000000  
                                         ___abdiv@counter 000003  
                                     StartReTxTimer@minim 00003E  
                              AssemblePacket@bufferLength 00006A  
                            PrepareSessionKeys@sessionKey 00000B  
                                    ?_RADIO_FSKPacketSent 000000  
                                   TMR_SwapTimer@timerVal 000008  
                       __end_of_RADIO_SetChannelFrequency 00008A  
                             PrepareJoinRequestFrame@iCtr 000079  
                               _IOCB4_SetInterruptHandler 000000  
                       __end_of_SetCallbackSoftwareTimers 0000DE  
                                   ?_RADIO_SetOutputPower 000000  
                               _AckRetransmissionCallback 000000  
                             PrepareJoinRequestFrame@mhdr 000078  
                                  __size_of_AESEncodeLoRa 000000  
                                      _EncKeySchedule$518 000004  
                           __size_of_LORAWAN_PlatformInit 000000  
                               ?_INT0_SetInterruptHandler 000000  
                                          _ticksAccounted 000000  
                                           ?_SwTimerStart 000000  
                                              AESCmac@key 000059  
                                              AESCmac@ptr 000060  
                                 __end_of_spreadingFactor 000136  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 000000  
                                                 __Hparam 000000  
                                    ?_RADIO_SetIQInverted 000000  
                              PrepareJoinRequestFrame@mic 000074  
                                  _InitDefault868Channels 000000  
                                RADIO_RegisterWrite@value 000001  
                                                 __Lparam 000000  
                                  ??_FindSmallestDataRate 000000  
                                LORAWAN_Send@bufferLength 000076  
                                   _StopAllSoftwareTimers 000000  
                                         __size_of_Random 000000  
                                         __size_of_RxData 000000  
                                    ?i2_SwTimersInterrupt 000020  
                                 __end_of_UpdateFrequency 000044  
                                     AssemblePacket@fCtrl 000070  
                                                 ___abdiv 000000  
                                              AESEncode@i 00001C  
                                               _AESEncode 000000  
                                  ValidateRxOffset@result 000001  
                               __end_of_TMR_ISR_Lora_Init 000010  
                                                 ___awdiv 000000  
                                         __size_of___lmul 000000  
                             __size_of_DIO2_ISR_Lora_Init 000000  
                                 __end_of_UpdateDutyCycle 000044  
                                                 ___lldiv 000000  
                                     __size_of_ExtractMic 000000  
                                         __size_of___wmul 000000  
                                    ??_RADIO_GetPacketSnr 000000  
                                                 ___llmod 000000  
                                       ?_RADIO_ReadRandom 00000C  
                                                 ___lwmod 000000  
                               SwTimerIsRunning@isRunning 000001  
                                 ??_RADIO_SetLoRaSyncWord 000000  
                                                 _devAddr 000014  
                                    ValidateChannelMask@i 000004  
                                                 __pcinit 000000  
                      __size_of_LORAWAN_GetMaxPayloadSize 000000  
                                                 _appSKey 000000  
                                         __size_of_memcpy 000000  
                              __end_of_RADIO_ReceiveStart 000230  
                                   RADIO_Init@radioBuffer 000019  
                                         __size_of_memset 000000  
                                                 __ramtop 000000* 
                                TMR1_ReadTimer@readValLow 000007  
                        EncryptFRMPayload@multicastStatus 00003E  
                                      ??_RADIO_ReadRandom 00000E  
                              ?_LORAWAN_GetMaxPayloadSize 000000  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 000000  
                                                 __ptext0 000000  
                                                 __ptext1 000000  
                                                 __ptext2 000000  
                                                 __ptext3 000000  
                                                 __ptext4 000000  
                                                 __ptext5 000000  
                                                 __ptext6 000000  
                                                 __ptext7 000000  
                                                 __ptext8 000000  
                                                 __ptext9 000000  
                                    __end_of_LORAWAN_Init 000062  
                                    __end_of_LORAWAN_Join 0000A4  
                                    __end_of_LORAWAN_Send 0000D2  
                                           _DIO0_ISR_Lora 000000  
                          ??_TMR1_DefaultInterruptHandler 000000  
                         RADIO_SetFSKSyncWord@syncWordLen 00000D  
                                          _EncodeShiftRow 000000  
                                               _IOCB4_ISR 000000  
                              ExecuteNewChannel@frequency 00004B  
                               TMR1_ReadTimer@readValHigh 000006  
                         __size_of_INTERRUPT_GetDioStatus 000000  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 00005C  
                                 __size_of_LORAWAN_RxDone 000000  
                                   _OSCILLATOR_Initialize 000000  
                          __end_of_UpdateJoinSuccessState 00013E  
                                 __size_of_LORAWAN_TxDone 000000  
                              __end_of_RADIO_SetBandwidth 00000A  
                                         _RADIO_GetStatus 000000  
                                        ?_ValidateTxPower 000000  
                                 ?_HALResetPinOutputValue 000000  
                            __end_of_macEndDevCmdReplyLen 000128  
                       __size_of_TMR1_SetInterruptHandler 000000  
                                           _DIO1_ISR_Lora 000000  
                                             _SwTimerStop 000000  
                                ??_PIN_MANAGER_Initialize 000002  
                               ?_TMR1_SetInterruptHandler 000000  
                                                 _nwkSKey 000018  
                             IncludeMacCommandsResponse@i 00000D  
                                           ?_UpdateCfList 000046  
                                       _ExecuteNewChannel 000000  
                             __size_of_PrepareSessionKeys 000000  
                                            ??_CheckFlags 000002  
                           RADIO_SetModulation@modulation 000000  
                                 UpdateDLSettings@dlRx2Dr 000001  
                               __size_of_TMR_GetDeltaTime 000000  
                                           _DIO2_ISR_Lora 000000  
                              __size_of_SYSTEM_Initialize 000000  
                    __end_of_LORAWAN_SetNetworkSessionKey 00002E  
                   __size_of_LORAWAN_SetNetworkSessionKey 000000  
                            _LORAWAN_SetNetworkSessionKey 000000  
                                      ?_ExecuteNewChannel 000046  
                              RADIO_WriteMode@currentMode 000009  
                                        ComputeMic@buffer 000069  
                                    end_of_initialization 0000B0  
                                 _CreateAllSoftwareTimers 000000  
                                     SwTimerCreate@retVal 000000  
                                _INT2_SetInterruptHandler 000000  
                                   ??_RADIO_FSKPacketSent 000083  
                                          _GenerateSubkey 000000  
                                   _RADIO_WatchdogTimeout 000000  
                          ??_INT2_DefaultInterruptHandler 000000  
                                              _modulation 000101  
                                        ?_CheckMcastFlags 000000  
                                  ExtractMic@bufferLength 00000D  
                                                 memcpy@d 000007  
                                                 memcpy@n 000004  
                                                 memcpy@s 000009  
                                 __end_of_EnableChannels1 00006C  
                                                 memset@c 000002  
                                                 memset@n 000004  
                                                 memset@p 000006  
                               _LORAWAN_LinkCheckCallback 000000  
                                          ??_SwTimerStart 000031  
                                     ??_ExecuteNewChannel 000048  
                                               i2u2151_48 00000E  
                                               i2u2145_48 00000E  
                                               i2u2147_48 00000E  
                                               i2u2149_48 00000E  
                                   _UpdateCurrentDataRate 000000  
                                   _UpdateChannelIdStatus 000000  
                                 ??_RADIO_WriteFSKBitRate 000011  
                                   ??_RADIO_SetIQInverted 000000  
                              __end_of_DIO1_ISR_Lora_Init 000010  
                                         ___lldiv@divisor 000004  
                                     _ValidateChannelMask 000000  
                                              _ticksAdded 000004  
                             HALResetPinOutputValue@value 000000  
                                EncodeShiftRow@stateTable 000000  
                               __size_of_HALSPICSDeassert 000000  
                                ValidateDataRate@dataRate 000000  
                                         ___lldiv@counter 00000C  
                                           _DIO5_ISR_Lora 000000  
                             TMR_OverrideRemaining@tmrVal 000010  
                                   ??i2_SwTimersInterrupt 000024  
                                ExecuteLinkAdr@redundancy 000016  
                                       GenerateSubkey@key 000031  
                                    _HALResetPinMakeInput 000000  
                                            ??_GetRx1Freq 000004  
                           UpdateDLSettings@dlRx1DrOffset 000000  
                              LORAWAN_Init@RxJoinResponse 000054  
                              LORAWAN_RxDone@bufferLength 000068  
                        __end_of_RADIO_SetSpreadingFactor 00000A  
                      AssembleEncryptionBlock@bufferIndex 000013  
                                            RxData@status 000003  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 000006  
                                         _SystemTimerInit 000000  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                           _AESEncode$513 000012  
                                           _AESEncode$514 000014  
                                           _AESEncode$515 000016  
                                        ??_RxJoinResponse 000000  
                                        _LORAWAN_Mainloop 000000  
                            __end_of_RADIO_SetFSKSyncWord 000030  
                                      LORAWAN_Join@result 00007C  
                                      __end_of_CheckFlags 00005E  
                               ValidateTxPower@txPowerNew 000001  
                                          AESEncode@block 000006  
                       SearchAvailableChannel@maxChannels 000058  
                                  __end_of_EncodeShiftRow 000164  
                                      _DIO0_ISR_Lora_Init 000000  
                                       ??_HALDIO5PinValue 000000  
                                          ?_DIO0_ISR_Lora 000000  
                                   _INT1_InterruptHandler 000008  
                                               _PORTBbits 000F81  
                                            ??_FillSubKey 000005  
                            SwTimersInterrupt@timeElapsed 000028  
                                           _AESEncodeLoRa 000000  
                               __size_of_ExecuteDevStatus 000000  
                            __end_of_RADIO_WriteFrequency 0000F0  
                              __end_of_RADIO_RegisterRead 000028  
                       __end_of_LORAWAN_GetMaxPayloadSize 000060  
                          __end_of_HALResetPinOutputValue 00001A  
                                              ?_IOCB4_ISR 000000  
                                        ?_UpdateDataRange 000000  
                                __end_of_ConfigureRadioRx 00002A  
                                __end_of_ConfigureRadioTx 000052  
                                         _RADIO_RxTimeout 000000  
                          UpdateChannelIdStatus@channelId 000002  
                               __end_of_ExecuteNewChannel 000270  
                                        EnableChannels1@i 00000B  
                                 __size_of_AssemblePacket 000000  
                                          ?_DIO1_ISR_Lora 000000  
                                    ?_ValidateChannelMask 000000  
                                       _SwTimerSetTimeout 000000  
                                          _TMR1_ReadTimer 000000  
                                          ??_UpdateCfList 000048  
                                              _txPower433 000136  
                                              _txPower868 00013C  
                                     ?_DIO0_ISR_Lora_Init 000000  
                                               _TRISCbits 000F94  
                                               _TRISDbits 000F95  
                                         ??_LORAWAN_Reset 000051  
                                          ?_DIO2_ISR_Lora 000000  
                           __size_of_SystemBlockingWaitMs 000000  
                               ??_ValidateChannelMaskCntl 000000  
                                      ?_SwTimerSetTimeout 00000D  
                             __size_of_MacExecuteCommands 000000  
                                    ExecuteNewChannel@ptr 000046  
                                ??_UpdateMinMaxChDataRate 000000  
                                  __end_of_GenerateSubkey 00014C  
                                           RADIO_RxDone@i 000095  
                                   __size_of_RADIO_SetCRC 000000  
                                 AssemblePacket@macCmdIdx 000071  
                             ?_LORAWAN_SetChannelIdStatus 000004  
                                          _localDioStatus 00000E  
                                      __end_of_GetRx1Freq 000012  
                                   __size_of_RADIO_RxDone 000000  
                                            ??_ComputeMic 00006C  
                            __size_of_UpdateReceiveDelays 000000  
                                   __size_of_RADIO_TxDone 000000  
                                  ??_RADIO_SetOutputPower 000000  
                         EncryptFRMPayload@macBufferIndex 00003B  
                           ?_LORAWAN_SetNetworkSessionKey 00000B  
                                 UpdateMinMaxChDataRate@i 000001  
                                 LORAWAN_Reset@ismBandNew 000051  
                               __size_of_SwTimerIsRunning 000000  
                              __end_of_ComputeSessionKeys 000086  
                                     ??_SwTimerSetTimeout 000011  
                                __size_of_SwTimersExecute 000000  
                               __size_of_ExecuteLinkCheck 000000  
                                  _INTERRUPT_GetDioStatus 000000  
                                         _RADIO_WriteMode 000000  
                                         _SPI1_Initialize 000000  
                              ??_RADIO_WriteConfiguration 000048  
                                 ?_SearchAvailableChannel 00004F  
                               __size_of_SwTimerReadValue 000000  
                             RADIO_FSKPacketSent@irqFlags 00008F  
                               __size_of_ExecuteDutyCycle 000000  
                                  ?_StopAllSoftwareTimers 000000  
                                 AssemblePacket@confirmed 00006E  
                                      __end_of_FillSubKey 000062  
                                 _AssembleEncryptionBlock 000000  
                                       __size_of_INT1_ISR 000000  
                                       __size_of_INT2_ISR 000000  
                                    ??_DIO0_ISR_Lora_Init 000002  
                                   ?_HALResetPinMakeInput 000000  
                                          __end_of_STable 000101  
                                     AESEncodeLoRa@useKey 000021  
                              SwTimerSetCallback@callback 000000  
                LORAWAN_SetDeviceAddress@deviceAddressNew 000000  
                                        ?_UpdateFrequency 000000  
                                      LORAWAN_Send@buffer 000074  
                                          __end_of_Random 000022  
                                          __end_of_RxData 000002  
                                 ?_InitDefault433Channels 000000  
                              __size_of_TMR_ISR_Lora_Init 000000  
                                __end_of_ValidateDataRate 000018  
                            __end_of_INTERRUPT_Initialize 000004  
                          EnableChannels1@channelMaskCntl 000006  
                          EnableChannels1@channelIndexMax 000008  
                          EnableChannels1@channelIndexMin 000007  
                     LORAWAN_SetChannelIdStatus@channelId 000006  
                                        ?_UpdateDutyCycle 000000  
                              __end_of_DIO5_ISR_Lora_Init 000010  
                                 __end_of_RADIO_GetStatus 000006  
                                          __end_of___lmul 000058  
                                      LORAWAN_Send@result 000078  
                                        ??_EnableChannels 00000F  
                               i2TMR1_WriteTimer@timerVal 000000  
                                          __end_of___wmul 000028  
                                           ?_TMR_ISR_lora 000000  
                                        ??_HALSPICSAssert 000000  
                     TMR_OverrideRemaining@ticksRemaining 00000A  
                                       ?_RADIO_WritePower 000000  
                                           __pidataCOMRAM 000000  
                                         ?_EncodeShiftRow 000000  
                                          ?_AESEncodeLoRa 00001D  
                                       __size_of_TMR1_ISR 000000  
                                      __end_of_ComputeMic 000062  
                                               Random@max 00004D  
                                          __end_of_memcpy 000060  
                                  ?_OSCILLATOR_Initialize 000000  
                               __end_of_SwTimerSetTimeout 000044  
                                  __end_of_TMR1_ReadTimer 000022  
                                          __end_of_memset 000030  
                                         _SPI2_Initialize 000000  
                        LORAWAN_SetChannelIdStatus@result 000005  
                                ?_PrepareJoinRequestFrame 000000  
                                      ??_RADIO_WritePower 000003  
                                            _RADIO_SetCRC 000000  
                                   ??_ValidateChannelMask 000002  
                                        ??_ExecuteLinkAdr 000011  
                                   UpdateCfList@frequency 000049  
                                            _RADIO_RxDone 000000  
                                            _RADIO_TxDone 000000  
                                      _spi2_configuration 000142  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 00000B  
                                     start_initialization 000000  
                                          _ConfigureRadio 000000  
                                      LORAWAN_RxDone@mhdr 000081  
                                      LORAWAN_RxDone@temp 000087  
                                      _DIO4_ISR_Lora_Init 000000  
                                __end_ofi2_TMR1_ReadTimer 000020  
                          __size_of_TMR_OverrideRemaining 000000  
                                     _RADIO_RegisterWrite 000000  
                                            AESCmac@mLast 000020  
                               ??_CreateAllSoftwareTimers 000001  
                         __size_of_PIN_MANAGER_Initialize 000000  
                           __end_of_TMR_OverrideRemaining 000096  
                             ?_IncludeMacCommandsResponse 000000  
                                   __end_of_INT1_CallBack 000020  
                                            ??_ExtractMic 00000F  
                    EncryptFRMPayload@bufferToBeEncrypted 00003C  
                                            AESCmac@input 00005D  
                        __end_of_LORAWAN_SetDeviceAddress 000018  
                                         ?_GenerateSubkey 000031  
                            ?_RADIO_SetFrequencyHopPeriod 000000  
                                         LORAWAN_TxDone@i 000082  
                                   LORAWAN_Init@RxPayload 000052  
                     AssembleEncryptionBlock@frameCounter 00000B  
                                 i2TMR_SwapTimer@timerVal 000008  
                                   __end_of_INT2_CallBack 000020  
                                           ??_RADIO_Reset 000005  
                                __end_of_UpdateDLSettings 00001C  
                              SwTimerStart@ticksRemaining 000035  
                                  RADIO_WriteMode@newMode 00000A  
                                __end_of_ValidateRxOffset 000018  
                             ??_RADIO_SetChannelFrequency 000004  
                             ??_SetCallbackSoftwareTimers 000004  
                                     ?_DIO4_ISR_Lora_Init 000000  
                                     _RADIO_SetModulation 000000  
                           ExecuteNewChannel@channelIndex 00004F  
                          __end_of_SearchAvailableChannel 00012A  
                                        ?_EnableChannels1 000004  
                                         i2_TMR_SwapTimer 000000  
                                 __size_of_StartReTxTimer 000000  
                                  ?_UpdateCurrentDataRate 000000  
                                  ?_UpdateChannelIdStatus 000000  
                                         ___llmod@divisor 000004  
                              MacExecuteCommands@fOptsLen 000052  
                                 _RADIO_FSKPacketSent$797 00008B  
                                 __end_of_SystemTimerInit 000008  
                          UpdateChannelIdStatus@statusNew 000000  
                       __size_of_RADIO_UnhandledInterrupt 000000  
                                         ___llmod@counter 000008  
                                     TMR_SwapTimer@oldVal 00000A  
                               ?_RADIO_UnhandledInterrupt 000000  
                                __size_of_PIN_MANAGER_IOC 000000  
                                     TMR_SwapTimer@retVal 000008  
                                   _RADIO_FSKPayloadReady 000000  
                          __size_of_HALResetPinMakeOutput 000000  
                           __end_of_HALResetPinMakeOutput 000004  
                                                ??_Random 00004F  
                                                ??_RxData 000004  
                                                AESCmac@i 000065  
                                                AESCmac@j 000064  
                                                AESCmac@n 000063  
                                                AESCmac@x 000050  
                                                AESCmac@y 000040  
                              SwTimerReadValue@ticksCount 000035  
                                    ?_RADIO_RegisterWrite 000001  
                          __end_of_InitDefault433Channels 00008A  
                          __end_of_AutomaticReplyCallback 000026  
                                     RADIO_Init@frequency 00001B  
                                __size_of_TMR1_Initialize 000000  
                                    _macEndDevCmdReplyLen 000121  
                                                ??___lmul 000042  
                                             ??_AESEncode 00000A  
                       RADIO_WriteConfiguration@tempValue 00004C  
                                   __size_of_LORAWAN_Init 000000  
                      __size_of_AckRetransmissionCallback 000000  
                                   __size_of_LORAWAN_Join 000000  
                                                ??___wmul 000004  
                                   __size_of_LORAWAN_Send 000000  
                                 __end_of_RADIO_RxTimeout 00002E  
                                MacExecuteCommands@buffer 000050  
                                ??_SetReceptionNotOkState 00005B  
                                          ??_TMR_ISR_lora 000031  
                                         ??_DIO0_ISR_Lora 000000  
                                             __pdataBANK1 000000  
                                             __pdataBANK3 000000  
                                       _ValidateDataRange 000000  
                                      __end_of_ExtractMic 00005A  
                i2SwTimersInterrupt@ticksToNextTimerEvent 00002C  
                  SwTimersInterrupt@ticksToNextTimerEvent 00002C  
                                                ??_memcpy 000006  
                                  __size_of_SwTimerCreate 000000  
                                                ??_memset 000006  
                                    ??_DIO4_ISR_Lora_Init 000000  
                              __end_of_EXT_INT_Initialize 00002A  
                                       _ValidateChannelId 000000  
                                    ?_RADIO_SetModulation 000000  
                                _RADIO_SetSpreadingFactor 000000  
                                      _RADIO_RxFSKTimeout 000000  
                                                ?_AESCmac 000059  
                                  __size_of_TMR1_CallBack 000000  
                                         ??_DIO1_ISR_Lora 000000  
                                      ?_ValidateDataRange 000000  
                                ValidateRxOffset@rxOffset 000000  
                                            AESEncode@aux 000018  
                                            AESEncode@key 000008  
                                  TMR_GetDeltaTime@retVal 000004  
                                         ?_TMR1_ReadTimer 000000  
                                             ??_IOCB4_ISR 000000  
                                  __end_of_ConfigureRadio 0000A8  
                                          _LORAWAN_RxDone 000000  
                                      ?_ValidateChannelId 000000  
                                  TMR_GetDeltaTime@tmrVal 00000C  
                                          _LORAWAN_TxDone 000000  
                              __size_of_ExecuteNewChannel 000000  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 000009  
                                    __end_of_SwTimerStart 000096  
                  __end_of_LORAWAN_EnterContinuousReceive 00007E  
                 __size_of_LORAWAN_EnterContinuousReceive 000000  
                          _LORAWAN_EnterContinuousReceive 000000  
                                             __pbssBIGRAM 000000  
                                         ??_DIO2_ISR_Lora 000000  
                               __size_of_CountfOptsLength 000000  
                                       CountfOptsLength@i 000007  
                                             __pbssCOMRAM 000000  
                              __end_of_DefaultChannels433 000174  
                              __end_of_DefaultChannels868 00019E  
                                        ??_RADIO_Transmit 000054  
                                      LORAWAN_RxTimeout@i 00006A  
                                           __pcstackBANK0 000000  
                                           __pcstackBANK1 000000  
                                     ??_ValidateDataRange 000002  
                                        _TMR_GetDeltaTime 000000  
                           EnableChannels@channelMaskCntl 00000E  
                                 __end_of_RADIO_WriteMode 0000FE  
                                 __end_of_SPI1_Initialize 000012  
                 __end_of_UnconfirmedTransmissionCallback 000078  
                __size_of_UnconfirmedTransmissionCallback 000000  
                         _UnconfirmedTransmissionCallback 000000  
                                 SearchAvailableChannel@i 00005A  
                                     ??_ValidateChannelId 000001  
                                   RADIO_RegisterRead@reg 000001  
                         __size_of_UpdateMinMaxChDataRate 000000  
                     LORAWAN_SetChannelIdStatus@statusNew 000004  
                                               _aesBuffer 000048  
                                 INTERRUPT_GetDioStatus@a 000000  
                                       ?_SetJoinFailState 000000  
                                     SwTimerStart@timerId 000039  
                           ??_RADIO_SetFrequencyHopPeriod 000002  
                                    _RADIO_SetFSKSyncWord 000000  
                             RADIO_SetBandwidth@bandwidth 000000  
                              __end_of_SwTimerSetCallback 000044  
       __end_of_ResetParametersForUnconfirmedTransmission 000014  
      __size_of_ResetParametersForUnconfirmedTransmission 000000  
              ?_ResetParametersForUnconfirmedTransmission 000000  
             ??_ResetParametersForUnconfirmedTransmission 000000  
               _ResetParametersForUnconfirmedTransmission 000000  
                               ??_AssembleEncryptionBlock 000012  
                                   _INT2_InterruptHandler 000006  
                                               _bandwidth 000128  
                                      ??_SetJoinFailState 000000  
                                 ?_InitDefault868Channels 000000  
                                            _LORAWAN_Init 000000  
                                            _LORAWAN_Join 000000  
                                            _LORAWAN_Send 000000  
                                  RADIO_FSKPayloadReady@i 000095  
                                       _ValidateFrequency 000000  
                                               __pnvBANK1 000000  
                                  ??_HALResetPinMakeInput 000000  
                                    _RADIO_WriteFrequency 000000  
                                         FillSubKey@carry 000006  
                                        _HALSPICSDeassert 000000  
                          ??_LORAWAN_SetNetworkSessionKey 00000D  
                                     __end_of_RADIO_Reset 000046  
                                   ??_RADIO_RegisterWrite 000002  
                                  _PIN_MANAGER_Initialize 000000  
                                           FillSubKey@key 000002  
                                      ?_ValidateFrequency 000000  
                                    __end_of_UpdateCfList 0001EE  
                     RADIO_WriteFSKFrequencyDeviation@num 000011  
                               EnableChannels@channelMask 00000C  
                                               _macBuffer 000000  
                                               _dioStatus 000011  
                               __end_of_ValidateDataRange 000046  
                           RADIO_FSKPayloadReady@irqFlags 000094  
                                       _SwTimersInterrupt 000000  
                                       ??_SwTimersExecute 00007A  
                                               __pintcode 000000  
                                                ?___abdiv 000000  
                        __end_of_TMR1_SetInterruptHandler 00000A  
                                           __pmediumconst 000000  
                                 RADIO_Transmit@bufferLen 000053  
                                 __end_of_SPI2_Initialize 000012  
                                                ?___awdiv 000000  
                                               __ptext100 000000  
                                               __ptext101 000000  
                                               __ptext110 000000  
                                               __ptext102 000000  
                               __end_of_ValidateChannelId 000024  
                                               __ptext111 000000  
                                               __ptext103 000000  
                                               __ptext200 000000  
                                               __ptext120 000000  
                                               __ptext112 000000  
                                               __ptext104 000000  
                                               __ptext201 000000  
                                               __ptext121 000000  
                                               __ptext113 000000  
                                               __ptext105 000000  
                                               __ptext210 000000  
                                               __ptext202 000000  
                                               __ptext130 000000  
                                               __ptext122 000000  
                                               __ptext114 000000  
                                               __ptext106 000000  
                                               __ptext211 000000  
                                               __ptext203 000000  
                                               __ptext131 000000  
                                               __ptext123 000000  
                                               __ptext115 000000  
                                               __ptext107 000000  
                                               __ptext212 000000  
                                               __ptext204 000000  
                                               __ptext140 000000  
                                               __ptext132 000000  
                                               __ptext124 000000  
                                               __ptext116 000000  
                                               __ptext108 000000  
                                               __ptext213 000000  
                                               __ptext205 000000  
                                               __ptext141 000000  
                                               __ptext133 000000  
                                               __ptext125 000000  
                                               __ptext117 000000  
                                               __ptext109 000000  
                                               __ptext206 000000  
                                               __ptext150 000000  
                                               __ptext142 000000  
                                               __ptext134 000000  
                                               __ptext126 000000  
                                               __ptext118 000000  
                                               __ptext207 000000  
                                               __ptext151 000000  
                                               __ptext143 000000  
                                               __ptext135 000000  
                                               __ptext127 000000  
                                               __ptext119 000000  
                                               __ptext208 000000  
                                               __ptext160 000000  
                                               __ptext152 000000  
                                               __ptext144 000000  
                                               __ptext136 000000  
                                               __ptext128 000000  
                                               __ptext209 000000  
                                               __ptext161 000000  
                                               __ptext153 000000  
                                               __ptext145 000000  
                                               __ptext137 000000  
                                               __ptext129 000000  
                                               __ptext170 000000  
                                               __ptext162 000000  
                                               __ptext154 000000  
                                               __ptext146 000000  
                                               __ptext138 000000  
                                               __ptext171 000000  
                                               __ptext163 000000  
                                               __ptext155 000000  
                                               __ptext147 000000  
                                               __ptext139 000000  
                                               __ptext180 000000  
                                               __ptext172 000000  
                                               __ptext164 000000  
                                               __ptext156 000000  
                                               __ptext148 000000  
                                               __ptext181 000000  
                                               __ptext173 000000  
                                               __ptext165 000000  
                                               __ptext157 000000  
                                               __ptext149 000000  
                                               __ptext190 000000  
                                               __ptext182 000000  
                                               __ptext174 000000  
                                               __ptext166 000000  
                                               __ptext158 000000  
                                               __ptext183 000000  
                                               __ptext175 000000  
                                               __ptext167 000000  
                                               __ptext159 000000  
                                               __ptext192 000000  
                                               __ptext184 000000  
                                               __ptext176 000000  
                                               __ptext168 000000  
                                               __ptext193 000000  
                                               __ptext185 000000  
                                               __ptext177 000000  
                                               __ptext169 000000  
                                               __ptext194 000000  
                                               __ptext186 000000  
                                               __ptext178 000000  
                                               __ptext195 000000  
                                               __ptext187 000000  
                                               __ptext179 000000  
                                               __ptext196 000000  
                                               __ptext188 000000  
                                               __ptext197 000000  
                                               __ptext189 000000  
                                               __ptext198 000000  
                                               __ptext199 000000  
                                       _EncryptFRMPayload 000000  
                                                ?___lldiv 000000  
                            RADIO_FSKPacketSent@timeOnAir 000087  
                           __size_of_UpdateJoinInProgress 000000  
                                                ?___llmod 000000  
                           __size_of_ExecuteRxTimingSetup 000000  
                                         ??_AESEncodeLoRa 000021  
                SelectChannelForTransmission@channelIndex 00005D  
                         __end_of_PrepareJoinRequestFrame 000190  
                                                ?___lwmod 000048  
                                      ?_SwTimersInterrupt 000020  
                               _RADIO_SetChannelFrequency 000000  
                             __size_of_DIO3_ISR_Lora_Init 000000  
                   IncludeMacCommandsResponse@bufferIndex 00000E  
                               _SetCallbackSoftwareTimers 000000  
                                      ConfigureRadio@freq 00000E  
                                   ??_RADIO_SetModulation 000000  
                                        ?_RADIO_GetStatus 000000  
                                  __end_of_LORAWAN_RxDone 000CA6  
                                     ??_ValidateFrequency 000004  
                                  __end_of_LORAWAN_TxDone 0007B2  
                                      ?_EncryptFRMPayload 000031  
                            ??_INTERRUPT_InterruptManager 000033  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 000022  
                          __size_of_RADIO_SetLoRaSyncWord 000000  
                                        _ExecuteDevStatus 000000  
                           __end_of_RADIO_SetLoRaSyncWord 00000A  
                  IncludeMacCommandsResponse@pBufferIndex 000002  
                              __size_of_SwTimerSetTimeout 000000  
                             ??_LORAWAN_GetMaxPayloadSize 000008  
                          LORAWAN_LinkCheckConfigure@iCtr 000050  
                        ExecuteRxParamSetupReq@dlSettings 00004E  
                                          _AssemblePacket 000000  
                                         ?_ConfigureRadio 00000E  
                               AssemblePacket@bufferIndex 000072  
                              ??_INT2_SetInterruptHandler 000002  
                              __end_ofi2_TMR_GetDeltaTime 00016C  
                                     ??_SwTimersInterrupt 000024  
                                    RADIO_DIO0@dioMapping 000098  
                                       _DutyCycleCallback 000000  
                                 InitDefault433Channels@i 00000B  
                                   __end_of_TMR_SwapTimer 00004A  
                                            ?_SwTimerStop 000000  
                                     ??_EncryptFRMPayload 00003F  
                                 __end_ofi2_TMR_SwapTimer 000044  
                                 __size_of_EncKeySchedule 000000  
                                      AssemblePacket@mhdr 00006F  
                                      AssemblePacket@port 000067  
                               __size_of_RADIO_ReadRandom 000000  
                                ConfigureRadioRx@dataRate 000017  
                                      _RADIO_ReceiveStart 000000  
                                          __size_of_srand 000000  
                                __end_of_LORAWAN_Mainloop 00003E  
                                   ?_RADIO_SetFSKSyncWord 00000B  
                                    _INTERRUPT_Initialize 000000  
                                           _SwTimerCreate 000000  
                          __end_of_InitDefault868Channels 00008A  
                     IncludeMacCommandsResponse@macBuffer 000000  
                                ?_RADIO_FHSSChangeChannel 000000  
                           ValidateFrequency@frequencyNew 000000  
                                           _TMR1_CallBack 000000  
                               __end_of_ValidateFrequency 000066  
                                        _SwTimerIsRunning 000000  
                                        _ExecuteLinkCheck 000000  
                                    i2SwTimersInterrupt@i 000030  
                                                _INT1_ISR 000000  
                                _LORAWAN_SetDeviceAddress 000000  
                                                _INT2_ISR 000000  
                                       EncKeySchedule@key 000000  
                                          ___wmul@product 000004  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 000000  
                                  ?_RADIO_FSKPayloadReady 000000  
                       __size_of_INT1_SetInterruptHandler 000000  
                                    __end_of_rxWindowSize 000121  
                                   ?_RADIO_WriteFrequency 00000D  
                               ?_INT1_SetInterruptHandler 000000  
                                        ?_SystemTimerInit 000000  
                                               _reloadVal 000008  
                                     ?_RADIO_ReceiveStart 000051  
                                        _SwTimerReadValue 000000  
                                                _PIE1bits 000F9D  
                                        _ExecuteDutyCycle 000000  
                                         _HALDIO5PinValue 000000  
                                    RADIO_DIO1@dioMapping 00006C  
                               __end_of_SwTimersInterrupt 000106  
                                __size_of_TMR1_WriteTimer 000000  
                     __size_of_INTERRUPT_InterruptManager 000000  
                              __end_of_DIO2_ISR_Lora_Init 000010  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 000033  
                                        GenerateSubkey@k2 000035  
                                                _PIR3bits 000FA4  
                                    ConfigureRadioRx@freq 000013  
                               __end_of_EncryptFRMPayload 0001D8  
                          __size_of_RADIO_WriteFSKBitRate 000000  
                                UpdateReceiveDelays@delay 000006  
                               LORAWAN_RxDone@bufferIndex 000086  
                                  __size_of_UpdateTxPower 000000  
                           __end_of_RADIO_WriteFSKBitRate 000068  
                                    ConfigureRadioTx@freq 000013  
                             UpdateDataRange@dataRangeNew 000000  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 000000  
                      SearchAvailableChannel@channelIndex 000050  
                                               _rxPayload 000000  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 000000  
                           EncryptFRMPayload@bufferLength 000033  
                                 ValidateDataRange@result 000002  
                                                _SSP1CON1 000FC6  
                                                _SSP1CON2 000FC5  
                                                _SSP2CON1 000F6C  
                                                _SSP2CON2 000F6B  
                             UpdateDutyCycle@dutyCycleNew 000000  
              ValidateChannelId@allowedForDefaultChannels 000000  
                           __size_of_FindSmallestDataRate 000000  
                                                _TMR1_ISR 000000  
                                ConfigureRadioTx@dataRate 000017  
                    __size_of_RADIO_SetFrequencyHopPeriod 000000  
                                   ValidateTxPower@result 000000  
                                                _SSP1STAT 000FC7  
                                        ?_RADIO_RxTimeout 000000  
                     __size_of_IncludeMacCommandsResponse 000000  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 000048  
                                       ??_PIN_MANAGER_IOC 000000  
                             __size_of_RADIO_GetPacketSnr 000000  
                                     _UpdateReceiveDelays 000000  
                         __size_of_SetReceptionNotOkState 000000  
                                  __end_of_AssemblePacket 0003B0  
                                         ?_LORAWAN_RxDone 000066  
                                         ?_LORAWAN_TxDone 00005B  
                                       ??_TMR1_Initialize 000002  
                                        ___abdiv@dividend 000006  
                                      _DIO1_ISR_Lora_Init 000000  
                               __end_of_DutyCycleCallback 000306  
                                       ___wmul@multiplier 000000  
                                        __size_of_AESCmac 000000  
                                    ??_RADIO_ReceiveStart 000053  
                                 ValidateFrequency@result 000004  
                              __end_of_PrepareSessionKeys 0000AC  
                                       ?_ConfigureRadioRx 000013  
                                       ?_ConfigureRadioTx 000013  
                                    RADIO_DIO2@dioMapping 00001C  
                                      AESEncodeLoRa@block 00001D  
                                                _Channels 000000  
                             __end_of_RADIO_FSKPacketSent 00012E  
                 RADIO_SetSpreadingFactor@spreadingFactor 000000  
                                      ??_ConfigureRadioRx 000017  
                                      ??_ConfigureRadioTx 000017  
                                    ??_RADIO_SetBandwidth 000000  
                                     ?_DIO1_ISR_Lora_Init 000000  
                           RADIO_SetIQInverted@iqInverted 000000  
                                        ?_RADIO_WriteMode 000005  
                                        ?_SPI1_Initialize 000000  
                               LORAWAN_RxDone@computedMic 00008A  
                                       ___lmul@multiplier 00003A  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 000000  
                                               copy_data0 000014  
                                               copy_data1 000034  
                                               copy_data2 000054  
                                   ?_INTERRUPT_Initialize 000000  
                                 ?_INTERRUPT_GetDioStatus 000000  
                                    ?_UpdateReceiveDelays 000000  
                                _INT0_SetInterruptHandler 000000* 
                             __end_of_RADIO_SetIQInverted 00000A  
                                          ?_TMR1_CallBack 000000  
                                    __end_of_TMR_ISR_lora 000056  
                                             _RADIO_Reset 000000  
                                     ExecuteLinkCheck@ptr 000000  
                          i2SwTimersInterrupt@timeElapsed 000028  
                                      _RADIO_RegisterRead 000000  
                                __size_of_ValidateTxPower 000000  
                                 ??_StopAllSoftwareTimers 000001  
                                          _StartReTxTimer 000000  
                             __end_ofi2_SwTimersInterrupt 000100  
                               _LORAWAN_GetMaxPayloadSize 000000  
                              LORAWAN_RxDone@extractedMic 000082  
                                             AESCmac@flag 000062  
                           EncryptFRMPayload@frameCounter 000035  
                                      CheckMcastFlags@hdr 000000  
                                             AESCmac@size 00005F  
                                SwTimerSetTimeout@timerId 000015  
                                SwTimerSetTimeout@timeout 00000D  
                                   RADIO_WriteMode@opMode 00000B  
                                ??_ExecuteRxParamSetupReq 000048  
                     __size_of_LORAWAN_LinkCheckConfigure 000000  
                                        ___abdiv@quotient 000005  
                 UpdateReceiveWindow2Parameters@frequency 000000  
                                    RADIO_DIO3@dioMapping 000005  
                                                __Hrparam 000000* 
                                     ?_RADIO_RegisterRead 000000  
                            __end_of_SystemBlockingWaitMs 000030  
                  ValidateChannelMaskCntl@channelMaskCntl 000001  
                                       i2_TMR1_WriteTimer 000000  
                                               memcpy@tmp 000006  
                                                __Lrparam 000000* 
                                        ??_EncodeShiftRow 000002  
                                    ??_DIO1_ISR_Lora_Init 000002  
                                __size_of_CheckMcastFlags 000000  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 000004  
                              __size_of_ValidateDataRange 000000  
                               _ticksToScheduledInterrupt 000000  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 000004  
                            ValidateDataRange@dataRateMin 000005  
                              __size_of_ValidateChannelId 000000  
                                        ?_SPI2_Initialize 000000  
                                      ?i2_TMR1_WriteTimer 000000  
                                        __size_of___abdiv 000000  
                                 ??_OSCILLATOR_Initialize 000000  
                                       ?_ValidateDataRate 000000  
                                        __size_of___awdiv 000000  
                                      _ComputeSessionKeys 000000  
                                   __size_of_SwTimerStart 000000  
                                        __size_of___lldiv 000000  
                                        __size_of___llmod 000000  
                                        __size_of___lwmod 000000  
                                         ?_AssemblePacket 000067  
                                    AssemblePacket@buffer 000068  
                                        SwTimersExecute@i 00007E  
                                      ??_ValidateDataRate 000000  
                                _TMR1_SetInterruptHandler 000000  
                                  _IOCB4_InterruptHandler 000004  
                                             _radioBuffer 00010F  
                                     ??i2_TMR1_WriteTimer 000002  
         __end_of_ResetParametersForConfirmedTransmission 000012  
        __size_of_ResetParametersForConfirmedTransmission 000000  
                ?_ResetParametersForConfirmedTransmission 000000  
               ??_ResetParametersForConfirmedTransmission 000000  
                 _ResetParametersForConfirmedTransmission 000000  
                                   _TMR1_InterruptHandler 000000  
                                        ??_GenerateSubkey 000037  
                                        _CountfOptsLength 000000  
                                              _HALSPISend 000000  
                                     ?_ComputeSessionKeys 000031  
                                          _rxWindowOffset 000109  
                      RADIO_UnhandledInterrupt@modulation 000003  
                              __end_of_MacExecuteCommands 0002F6  
                                    ??_RADIO_RegisterRead 000001  
                                    RADIO_DIO4@dioMapping 000006  
                        __end_of_RADIO_UnhandledInterrupt 000032  
                                           _UpdateTxPower 000000  
                                    RADIO_Transmit@buffer 000051  
                         __end_of_RADIO_FHSSChangeChannel 000040  
                                         _allocatedTimers 000010  
                          ?_IOCB4_DefaultInterruptHandler 000000  
                          __end_of_INTERRUPT_GetDioStatus 000014  
                                       ?i2_TMR1_ReadTimer 000000  
                                      _DIO5_ISR_Lora_Init 000000  
                                                __ptext10 000000  
                                                __ptext11 000000  
                                                __ptext20 000000  
                                                __ptext12 000000  
                                                __ptext21 000000  
                                                __ptext13 000000  
                                              _T1GCONbits 000FCC  
                                                __ptext30 000000  
                                                __ptext22 000000  
                                                __ptext14 000000  
                                                __ptext31 000000  
                                                __ptext23 000000  
                                                __ptext15 000000  
                                                __ptext40 000000  
                                                __ptext32 000000  
                                                __ptext24 000000  
                                                __ptext16 000000  
                                                __ptext41 000000  
                                                __ptext33 000000  
                                                __ptext25 000000  
                                                __ptext17 000000  
                                                __ptext50 000000  
                                                __ptext42 000000  
                                                __ptext34 000000  
                                                __ptext26 000000  
                                                __ptext18 000000  
                                                __ptext51 000000  
                                                __ptext43 000000  
                                                __ptext35 000000  
                                                __ptext27 000000  
                                                __ptext19 000000  
                                                __ptext60 000000  
                                                __ptext52 000000  
                                                __ptext44 000000  
                                                __ptext36 000000  
                                                __ptext28 000000  
                                                __ptext61 000000  
                                                __ptext53 000000  
                                                __ptext45 000000  
                                                __ptext37 000000  
                                                __ptext29 000000  
                                                __ptext70 000000  
                                                __ptext62 000000  
                                                __ptext54 000000  
                                                __ptext46 000000  
                                                __ptext38 000000  
                                        ?i2_TMR_SwapTimer 000008  
                                                __ptext71 000000  
                                                __ptext63 000000  
                                                __ptext55 000000  
                                                __ptext47 000000  
                                                __ptext39 000000  
                                                __ptext80 000000  
                                                __ptext72 000000  
                                                __ptext64 000000  
                                                __ptext56 000000  
                                                __ptext48 000000  
                                                __ptext81 000000  
                                                __ptext73 000000  
                                                __ptext65 000000  
                                                __ptext57 000000  
                                                __ptext49 000000  
                                                __ptext90 000000  
                                                __ptext82 000000  
                                                __ptext74 000000  
                                                __ptext66 000000  
                                                __ptext58 000000  
                                                __ptext91 000000  
                                                __ptext83 000000  
                                                __ptext75 000000  
                                                __ptext67 000000  
                                                __ptext59 000000  
                                                __ptext92 000000  
                                                __ptext84 000000  
                                                __ptext76 000000  
                                                __ptext68 000000  
                                                __ptext93 000000  
                                                __ptext85 000000  
                                                __ptext77 000000  
                                                __ptext69 000000  
                                                __ptext94 000000  
                                                __ptext86 000000  
                                                __ptext78 000000  
                                                __ptext95 000000  
                                                __ptext87 000000  
                                                __ptext79 000000  
                                                __ptext96 000000  
                                                __ptext88 000000  
                                                __ptext97 000000  
                                                __ptext89 000000  
                                                __ptext98 000000  
                                                __ptext99 000000  
                                            _SSP1CON1bits 000FC6  
                                 ExecuteRxTimingSetup@ptr 000007  
                                  ??_RADIO_SetFSKSyncWord 00000D  
                                   ??_UpdateReceiveDelays 000006  
                                   __end_of_LORAWAN_Reset 0001CE  
                                  __end_of_StartReTxTimer 000182  
                                 ??_UpdateCurrentDataRate 000000  
                                 ??_UpdateChannelIdStatus 000001  
                                __size_of_UpdateDataRange 000000  
                                  _SetReceptionNotOkState 000000  
                                            _SSP2CON1bits 000F6C  
                                     GenerateSubkey@F7103 000000  
                                      ??i2_TMR1_ReadTimer 000002  
                               __size_of_RADIO_WritePower 000000  
                                 __end_of_HALDIO5PinValue 00000C  
                                       ?_UpdateDLSettings 000000  
                                  ConfigureRadio@dataRate 000012  
                                       ?_ValidateRxOffset 000000  
                              __size_of_ValidateFrequency 000000  
                        __size_of_PrepareJoinRequestFrame 000000  
                                           CheckFlags@hdr 000000  
                                  ??_RADIO_WriteFrequency 000011  
                                   __size_of_UpdateCfList 000000  
                                     ?_DIO5_ISR_Lora_Init 000000  
                           __size_of_RADIO_SetOutputPower 000000  
                                           __size_of_main 000000  
                                           __size_of_rand 000000  
                                       _RADIO_ReceiveStop 000000  
                                      ??_UpdateDLSettings 000001  
                                    _LORAWAN_PlatformInit 000000  
                                         _FskSyncWordBuff 00019E  
                                      ??_ValidateRxOffset 000000  
                               __end_ofi2_TMR1_WriteTimer 00001C  
               IncludeMacCommandsResponse@bIncludeInFopts 000004  
                                    ??_ComputeSessionKeys 000033  
                                           _timerOverflow 00000B  
                                            _SwTimerStart 000000  
                              __size_of_SwTimersInterrupt 000000  
                                      ?_RADIO_ReceiveStop 000000  
                              ??_RADIO_SetSpreadingFactor 000000  
                                    RADIO_DIO5@dioMapping 000005  
                                   RADIO_TxDone@timeOnAir 000087  
                          ValidateChannelMask@channelMask 000000  
                             __size_of_DIO0_ISR_Lora_Init 000000  
                              __size_of_EncryptFRMPayload 000000  
                                         GenerateSubkey@i 000058  
                                         GenerateSubkey@l 000048  
                                 PrepareSessionKeys@index 000011  
                                __end_of_TMR_GetDeltaTime 000198  
                                      SwTimerStop@timerId 000000  
                                                _swTimers 000000  
                                        ??_TMR1_ReadTimer 000002  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 00000B  
                                    RADIO_RxDone@irqFlags 000094  
                             __end_of_ValidateChannelMask 00005E  
                                           UpdateCfList@i 00004E  
                      __end_of_INTERRUPT_InterruptManager 000076  
                              _INTERRUPT_InterruptManager 000000  
                                     ??_RADIO_ReceiveStop 00000C  
                             PrepareSessionKeys@networkId 00000F  
                                       _RADIO_ReleaseData 000000  
                                       ??_TMR1_WriteTimer 000002  
                                              _RADIO_DIO0 000000  
                                              _RADIO_DIO1 000000  
                                              _RADIO_DIO2 000000  
                                              _RADIO_DIO3 000000  
                                              _RADIO_DIO4 000000  
                                              _RADIO_DIO5 000000  
                                    ??_DIO5_ISR_Lora_Init 000000  
                    __end_of_INT1_DefaultInterruptHandler 000002  
                   __size_of_INT1_DefaultInterruptHandler 000000  
                            _INT1_DefaultInterruptHandler 000000  
                       __size_of_RADIO_WriteConfiguration 000000  
                                  __end_of_rxWindowOffset 000111  
                             i2TMR1_ReadTimer@readValHigh 000006  
                              __size_of_DutyCycleCallback 000000  
                                 EncryptFRMPayload@buffer 000031  
                                      ?_RADIO_ReleaseData 000000  
                               ?_RADIO_WriteConfiguration 000046  
                                      __end_of_modulation 000109  
                                              _RADIO_Init 000000  
                         ExecuteRxParamSetupReq@frequency 00004A  
                                __size_of_UpdateFrequency 000000  
                                ?_ValidateChannelMaskCntl 000000  
                                           __roundCounter 00000F  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 000018  
                                __end_of_HALSPICSDeassert 000004  
                                __size_of_UpdateDutyCycle 000000  
                                          ?_UpdateTxPower 000000  
                                                memcpy@d1 000000  
                                                memcpy@s1 000002  
                                          _EncKeySchedule 000000  
                      __size_of_SetCallbackSoftwareTimers 000000  
                                 __size_of_RxJoinResponse 000000  
                                         ??_SwTimerCreate 000000  
                                     ExecuteDutyCycle@ptr 000000  
                                            _UpdateCfList 000000  
                                     ??_RADIO_ReleaseData 000000  
                                  ??_INTERRUPT_Initialize 000000  
                                                memset@p1 000000  
                                         ??_TMR1_CallBack 000033  
                                    __size_of_SwTimerStop 000000  
                                        _RADIO_ReadRandom 000000  
                                      _EXT_INT_Initialize 000000  
                                         ?_StartReTxTimer 000000  
                                   _TMR_OverrideRemaining 000000  
                                                intlevel2 000000* 
                          RADIO_ReceiveStart@rxWindowSize 000051  
                               __end_of_RADIO_ReceiveStop 000020  
                                         _SwTimersExecute 000000  
                     SwTimerSetCallback@callbackParameter 000002  
                                             FillSubKey@i 000007  
                           RADIO_WriteFrequency@frequency 00000D  
                                        ___lwmod@dividend 000048  
                                   ?_LORAWAN_PlatformInit 000000  
                                        ___lldiv@dividend 000000  
                                __end_of_ExecuteDevStatus 00000A  
                                 ?_PIN_MANAGER_Initialize 000000  
                                      _DefaultChannels433 00014A  
                                      _DefaultChannels868 000174  
                                     ?_EXT_INT_Initialize 000000  
                                            ___abdiv@sign 000004  
                                UpdateDutyCycle@channelId 000002  
                                  GenerateSubkey@const_Rb 000038  
                         __size_of_ExecuteRxParamSetupReq 000000  
                               UpdateJoinInProgress@state 000000  
                                       ??_ValidateTxPower 000000  
                                     _LORAWAN_TxDone$1670 000069  
                                     _LORAWAN_TxDone$1671 00006D  
                                     _LORAWAN_TxDone$5065 000076  
                      __end_of_LORAWAN_LinkCheckConfigure 00015E  
                               __end_of_RADIO_ReleaseData 000006  
                              _LORAWAN_LinkCheckConfigure 000000  
                                      __end_of_txPower433 00013C  
                                __size_of_EnableChannels1 000000  
                                      __end_of_txPower868 000142  
                                   _HALResetPinMakeOutput 000000  
                                ??_HALResetPinOutputValue 000000  
                                  __size_of_INT1_CallBack 000000  
                               RADIO_WriteConfiguration@i 00004B  
                               ExecuteRxTimingSetup@delay 000009  
                                        AESEncodeLoRa@key 00001F  
                               __size_of_SetJoinFailState 000000  
                        LORAWAN_LinkCheckConfigure@period 000046  
                                        ??_ConfigureRadio 000012  
                                      _SwTimerSetCallback 000000  
             __end_of_UpdateRetransmissionAckTimeoutState 000072  
            __size_of_UpdateRetransmissionAckTimeoutState 000000  
                    ?_UpdateRetransmissionAckTimeoutState 000000  
                   ??_UpdateRetransmissionAckTimeoutState 00003A  
                     _UpdateRetransmissionAckTimeoutState 000000  
                                       RADIO_ReadRandom@i 000011  
                            SearchAvailableChannel@result 000057  
                                   RADIO_WritePower@paDac 000004  
                                  __size_of_INT2_CallBack 000000  
                             __size_of_DIO4_ISR_Lora_Init 000000  
                                   __end_of_DIO0_ISR_Lora 000006  
                                __end_of_SwTimerIsRunning 00002A  
                                       ??_CheckMcastFlags 000002  
                                __end_of_ExecuteLinkCheck 000032  
                                   RADIO_WritePower@power 000005  
                                        _RADIO_TxDone$793 00008B  
                                ?_CreateAllSoftwareTimers 000000  
                        RADIO_WriteMode@currentModulation 000007  
                                    ??_EXT_INT_Initialize 000002  
                            RADIO_SetFSKSyncWord@syncWord 00000B  
                                            _rxWindowSize 000119  
                                  __end_of_EncKeySchedule 0002A4  
                           ?_INT1_DefaultInterruptHandler 000000  
                                   __end_of_DIO1_ISR_Lora 000006  
                                     ?_SwTimerSetCallback 000000  
                                __end_of_SwTimerReadValue 000040  
                                        ___lldiv@quotient 000008  
                                             ?_HALSPISend 000000  
                                __end_of_ExecuteDutyCycle 000054  
                                         ___lwmod@divisor 00004A  
                  __end_of_UpdateReceiveWindow2Parameters 000016  
                 __size_of_UpdateReceiveWindow2Parameters 000000  
                          _UpdateReceiveWindow2Parameters 000000  
                                 UpdateTxPower@txPowerNew 000000  
                                         ___lwmod@counter 00004C  
                         _LORAWAN_LinkCheckConfigure$2496 00004C  
                        __end_of_INT1_SetInterruptHandler 00000A  
                            FindSmallestDataRate@dataRate 000003  
                           LORAWAN_Join@activationTypeNew 00007D  
                                   __size_of_TMR_ISR_lora 000000  
                              ??_LORAWAN_SetDeviceAddress 000004  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora 000006  
                                    _SystemBlockingWaitMs 000000  
                                   FindSmallestDataRate@i 000002  
                      ComputeSessionKeys@joinAcceptBuffer 000031  
                                 __size_of_EnableChannels 000000  
                            __end_of_UpdateJoinInProgress 00001A  
                            __end_of_ExecuteRxTimingSetup 000028  
                                 __size_of_HALSPICSAssert 000000  
                                 __end_of_FskSyncWordBuff 0001A1  
                __end_of_RADIO_WriteFSKFrequencyDeviation 00006A  
               __size_of_RADIO_WriteFSKFrequencyDeviation 000000  
                      ??_RADIO_WriteFSKFrequencyDeviation 000011  
                       ?_RADIO_WriteFSKFrequencyDeviation 00000D  
                        _RADIO_WriteFSKFrequencyDeviation 000000  
                __end_of_LORAWAN_SetApplicationSessionKey 00002E  
               __size_of_LORAWAN_SetApplicationSessionKey 000000  
                      ??_LORAWAN_SetApplicationSessionKey 00000D  
                       ?_LORAWAN_SetApplicationSessionKey 00000B  
                        _LORAWAN_SetApplicationSessionKey 000000  
                                        ExtractMic@buffer 00000B  
                                 ??_RADIO_FSKPayloadReady 000093  
                                UpdateDataRange@channelId 000002  
                                _RADIO_UnhandledInterrupt 000000  
                                        ?_HALDIO5PinValue 000000  
                          __end_of_PIN_MANAGER_Initialize 000054  
                                       ?_LORAWAN_Mainloop 000000  
                             __end_of_RADIO_RegisterWrite 000020  
                                 __size_of_ExecuteLinkAdr 000000  
                            RADIO_WriteFSKBitRate@bitRate 00000D  
                                      i2_TMR_GetDeltaTime 000000  
                                         RADIO_SetCRC@crc 000000  
                                       __CFG_FOSC$INTIO67 000000  
                                         _PIN_MANAGER_IOC 000000  
                                     RADIO_WritePower@ocp 000003  
                                      ??_LORAWAN_Mainloop 00009A  
                              __size_ofi2_TMR1_WriteTimer 000000  
                                    ??_SwTimerSetCallback 000003  
                                       ??_UpdateDataRange 000001  
                                 ?_UpdateMinMaxChDataRate 000000  
                                         _TMR1_Initialize 000000  
                        RADIO_WriteConfiguration@regValue 000050  
                                 i2TMR1_ReadTimer@readVal 000004  
                                      _RadioConfiguration 000012  
                                           ExtractMic@mic 000013  
                                       _LORAWAN_RxTimeout 000000  
                              __end_of_spi1_configuration 00014A  
                             __end_of_RADIO_SetModulation 00000A  
                           __size_of_HALResetPinMakeInput 000000  
                             __size_of_RADIO_RxFSKTimeout 000000  
                                        ??_LORAWAN_RxDone 00007A  
                                     ?i2_TMR_GetDeltaTime 000008  
